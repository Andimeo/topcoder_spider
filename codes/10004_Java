<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class MazeReconstruction  {<br>  public String[] mazeMap(String moves)  {<br>    int dir = 2;<br>    ArrayList&lt;State&gt; list = new ArrayList&lt;State&gt;();<br>    int x=0,y=0;<br>    list.add(new State(0,0));<br>    for(int i = 0; i &lt; moves.length(); i++)  {<br>      if(moves.charAt(i) == 'R')  {<br>        dir += 3;<br>        dir %= 4;<br>      }<br>      if(moves.charAt(i) == 'L')  {<br>        dir++;<br>        dir %= 4;<br>      }<br>      if(moves.charAt(i) == 'F')  {<br>        if(dir==0)<br>          y--;<br>        if(dir==1)<br>          x--;<br>        if(dir==2)<br>          y++;<br>        if(dir==3)<br>          x++;<br>        list.add(new State(x,y));<br>      }<br>    }<br>    int minX = Integer.MAX_VALUE;<br>    int minY = Integer.MAX_VALUE;<br>    for(State s: list)  {<br>      minX = Math.min(minX, s.x);<br>      minY = Math.min(minY, s.y);<br>    }<br>    for(int i = 0; i &lt; list.size(); i++)  {<br>      list.get(i).x -= minX;<br>      list.get(i).y -= minY;<br>    }<br>    int maxX = -Integer.MAX_VALUE;<br>    int maxY = -Integer.MAX_VALUE;<br>    for(State s: list)  {<br>      maxX = Math.max(maxX, s.x);<br>      maxY = Math.max(maxY, s.y);<br>    }<br>    boolean[][] valid = new boolean[maxY+1][maxX+1];<br>    for(State s: list)  {<br>      valid[s.y][s.x] = true;<br>    }<br>    String[] maze = new String[maxY+1];<br>    for(int i = 0; i &lt; maze.length; i++)  {<br>      StringBuilder sb = new StringBuilder();<br>      for(boolean b: valid[i])  {<br>        if(b)<br>          sb.append('.');<br>        else<br>          sb.append('#');<br>      }<br>      maze[i] = sb.toString();<br>    }<br>    return maze;<br>  }<br>  class State  {<br>    public int x,y;<br>    public State(int a, int b)  {<br>      x=a;<br>      y=b;<br>    }<br>    public String toString()  {<br>      return x + " " + y;<br>    }<br>  }<br>}<br></td>