<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import static java.lang.Math.*;<br><br>public class BaronsAndCoins {<br>  public void p(Object s){System.out.println(s);}<br>  public int getMaximum(int[] xx, int[] yy) {<br>    x = new int[xx.length+1];<br>    for(int i = 0; i &lt; xx.length;i++)<br>      x[i+1] = xx[i];<br>    y = new int[yy.length+1];<br>    for(int i = 0; i &lt; yy.length;i++)<br>      y[i+1] =yy[i];<br>    <br>    dp = new int[x.length][10001];<br>    for(int i = 0; i &lt; dp.length;i++)<br>      Arrays.fill(dp[i],-1);<br>    return recur(0,0);<br>  }<br>  int[][] dp;<br>  int[] x,y;<br>  public int recur(int at, int prev)<br>  {<br>    if(dp[at][prev] != -1)<br>      return dp[at][prev];<br>    int ans = 0;<br>    for(int i = 0; i  &lt; x.length;i++)<br>    {<br>      if(y[i] &lt;= y[at] || x[i] &lt;= x[at])<br>        continue;<br>      int next = minnext(x[i]-x[at],y[i]-y[at],prev);<br>      if(next == Integer.MAX_VALUE)<br>        continue;<br>      ans = max(ans,1+recur(i,next));<br>    }<br>    dp[at][prev] = ans;<br>    return ans;<br>  }<br>  public int minnext(int dx, int dy, int prev)<br>  {<br>    int low = 0;<br>    for(int i = 0; i &lt; dy;i++)<br>      low += prev+i+1;<br>    if(low &gt; dx)<br>      return Integer.MAX_VALUE;<br><br>    low = prev+dy;<br>    int high = 10000;<br>    int ans = Integer.MAX_VALUE;<br>    int min = 0;<br>    for(int i = 0; i &lt; dy-1;i++)<br>      min += prev + i + 1;<br>    while(low &lt;= high)<br>    {<br>      int mid = (low+high)/2;<br><br>      int max = 0;<br>      for(int i = 0; i &lt; dy-1;i++)<br>      {<br>        max += mid-i-1;<br>      }<br>      int need = dx-mid;<br>      if(min &lt;= need &amp;&amp; need &lt;= max)<br>      {<br>        ans = min(ans,mid);<br>        high = mid-1;<br>      }<br>      else if( need &lt; min)<br>      {<br>        high = mid-1;<br>      }else<br>      {<br>        low = mid+1;<br>      }<br><br>    }<br>    return ans;<br>  }<br>}<br></td>