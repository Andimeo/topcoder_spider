<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class MakingPotions<br>{<br>  static class I<br>  {<br>    final String potion;<br>    final int unit;<br>    <br>    public I(String p, int u) {<br>      potion = p;<br>      unit = u;<br>    }<br>  }<br> <br>  static class R<br>  {<br>    final String target;<br>    final List&lt;I&gt; igs = new ArrayList&lt;I&gt;();<br>    <br>    R(String t) {target = t; }<br>    void addI(I i) { igs.add(i); }    <br>  }<br> <br>  public int getCost(String[] marketGoods, int[] cost, String[] recipes)<br>  {<br>    Map&lt;String, Long&gt; mcost = new HashMap&lt;String, Long&gt;();<br>    <br>    R [] rs = new R[recipes.length];<br>    int ind = 0;<br>    for (String r: recipes) {<br>      String p [] = r.split("=");<br>      rs[ind] = new R(p[0]);<br>      for (String i: p[1].split("\\+")) {<br>        int u = i.charAt(0) - '0';<br>        String pi = i.substring(1);<br>        rs[ind].addI(new I(pi, u));<br>        mcost.put(pi, Long.MAX_VALUE);<br>      }<br>      mcost.put(p[0], Long.MAX_VALUE);<br>      ind ++;<br>    }<br> <br>    for (int i = 0;  i &lt; cost.length; i ++) {<br>      mcost.put(marketGoods[i], Long.valueOf(cost[i]));<br>    }<br> <br>    boolean isChanged = false;<br>    <br>    do {<br>      isChanged = false;<br>      for (R r: rs) {<br>        String t = r.target;<br>        long oldC = mcost.get(t);<br>        long newC = 0;<br>        boolean found = true;<br>        for (I i: r.igs) {<br>          long c = mcost.get(i.potion);<br>          if (c == Long.MAX_VALUE) {<br>            found = false;<br>            break;<br>          }<br>          newC += (c * i.unit);<br>          if (newC &gt; 1000000000) {<br>            newC = 1000000001;<br>          }<br>        }<br>        if (found &amp;&amp; oldC &gt; newC) {<br>          //System.out.println(t + " --- " + newC);<br>          mcost.put(t, newC);<br>          isChanged = true;<br>        }<br>      }<br>    } while(isChanged);<br>    <br>    Long ans = mcost.get("LOVE");<br>    if (ans == null || ans == Long.MAX_VALUE) {<br>      return -1;<br>    }<br>    return ans.intValue();<br>  }<br>  <br> <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>