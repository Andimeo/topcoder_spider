<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;math.h&gt;<br>#include &lt;sstream&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br><br>using namespace std;<br><br>#define fr(i, n) for(i = 0; i &lt; n; i++)<br><br>#define pb push_back<br><br>#define Eps 1e-11<br><br>vector&lt; vector&lt;int&gt; &gt; Link;<br>int check[ 30], N, M;<br>    <br>class BirthdayCake{<br>public:<br>  bool work( int x, int left, int K)<br>  {<br>    if( x == M)<br>    {<br>      if( left == 0)<br>      {<br>        int i, j;<br>        vector&lt;int&gt; Fil(N, 0);<br>        <br>        fr(i, M)<br>        {<br>          if( check[i] == 0)<br>            continue;<br>            <br>          fr(j, Link[i].size())<br>            Fil[ Link[i][j]] = 1;<br>        }<br>        <br>        int cnt = 0;<br>    <br>        fr(i, N)<br>        {<br>          if( Fil[i] == 0)<br>            cnt++;<br>        }<br>        <br>        if( cnt &gt;= K)<br>          return true;<br>      }<br>      <br>      return false;<br>    }<br>    <br>    check[x] = 0;<br>    if(work( x+1, left, K))<br>      return true;<br>    <br>    if( left &gt; 0)<br>    {<br>      check[x] = 1;<br>      if( work(x+1, left - 1, K))<br>        return true;<br>    }<br>    <br>    return false;<br>  }<br>  <br>  int howManyFriends(vector &lt;string&gt; AV, vector &lt;string&gt; FR, int K)<br>  {<br>    int i, j;<br>    <br>    N = AV.size(), M = FR.size();<br>    Link.clear();<br>    <br>    fr(i, M)<br>    {<br>      vector&lt;int&gt; V;<br>      istringstream sin( FR[i]);<br>      string fruit;<br>      while( sin &gt;&gt; fruit)<br>      {<br>        fr(j, N)<br>        {<br>          if( AV[j] == fruit)<br>          {<br>            V.pb( j);<br>            break;<br>          }<br>        }<br>      } <br>      <br>      Link.pb( V);<br>    }<br>    <br>    for(i = M; i &gt; 0; i--)<br>    {<br>      if( work(0, i, K))<br>        break;<br>    }<br>    <br>    return i;<br>  }<br>};<br></td>