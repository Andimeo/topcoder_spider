<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class WordsPuzzle {<br>public:<br>  int countSecretWords(string, vector &lt;string&gt;, vector &lt;string&gt;);<br>};<br> <br>int WordsPuzzle::countSecretWords(string s, vector &lt;string&gt; a, vector &lt;string&gt; b) {<br>  int n = a.size(), m = b.size(), k = s.length(), i, j, ii, jj, cur, ans = 0, p;<br>  for (p=0;p&lt;n;p++)<br>    if (s.find(a[p]) != -1) ans++;<br>  string st;<br>  for (i=0;i&lt;k;i++)<br>    for (ii=0;ii&lt;b.size();ii++) {<br>      st = "";<br>      for (p=0;p&lt;k;p++)<br>        if (p == i) st += b[ii];<br>        else st += s[p];<br>      cur = 0;<br>      for (p=0;p&lt;n;p++)<br>        if (st.find(a[p]) != -1) cur++;<br>      if (cur &gt; ans) ans = cur;<br>      for (j=i+1;j&lt;k;j++)<br>        for (jj=0;jj&lt;b.size();jj++) {<br>          if (ii != jj) {<br>            st = "";<br>            for (p=0;p&lt;k;p++)<br>              if (p == i) st += b[ii]; else<br>              if (p == j) st += b[jj];<br>              else st += s[p];<br>            cur = 0;<br>            for (p=0;p&lt;n;p++)<br>              if (st.find(a[p]) != -1) cur++;<br>            if (cur &gt; ans) ans = cur;<br>          }<br>        }<br>    }<br>  return ans;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>