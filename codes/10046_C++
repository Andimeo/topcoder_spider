<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;fstream&gt;<br> <br>using namespace std;<br> <br>class LoveCalculator {<br>public:<br>  string findBoy(string, vector &lt;string&gt;);<br>  int Cal(string A,string B);<br>};<br> <br>string LoveCalculator::findBoy(string girl, vector &lt;string&gt; boys) {<br>  sort(boys.begin(),boys.end());<br>  int MAX = -1;<br>  int index = -1;<br>  for(int i = 0; i&lt; boys.size(); ++i)<br>  {<br>    int t = Cal(girl,boys[i]);<br>    if( MAX &lt; t)<br>    {<br>      index = i;<br>      MAX = t;<br>    }<br>  }<br>  return boys[index];<br>  <br>}<br> <br>int LoveCalculator::Cal(string A,string B)<br>{<br>  int L = 0;<br>  int O = 0;<br>  int V = 0;<br>  int E = 0;<br>  for(int i = 0; i &lt; A.length(); ++i)<br>  {<br>    if(A[i] == 'L') L ++;<br>    else if(A[i] == 'O') O++;<br>    else if(A[i] == 'V') V ++;<br>    else if(A[i] == 'E') E++;<br>  }<br>  for(int i = 0; i &lt; B.length(); ++i)<br>  {<br>    if(B[i] == 'L') L ++;<br>    else if(B[i] == 'O') O++;<br>    else if(B[i] == 'V') V ++;<br>    else if(B[i] == 'E') E++;<br>  }<br>  int ret = 0;<br>  ret = ((L+O)*(L+V)*(L+E)*(O+V)*(O+E)*(V+E))%100;<br>  return ret;<br>}<br> <br> <br>//Powered by [BrainDeveloper] 1.0!<br></td>