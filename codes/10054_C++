<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;algorithm&gt;<br>#include&lt;sstream&gt;<br>#include&lt;string&gt;<br>#include&lt;vector&gt;<br>#include&lt;cmath&gt;<br>using namespace std;<br><br>#define FOR(i,a,b) for(int i = (a); i &lt; (b); ++i)<br>#define REP(i,n) FOR(i,0,n)<br>#define FORE(it,x) for(typeof(x.begin()) it=x.begin();it!=x.end();++it)<br>#define pb push_back<br>#define all(x) (x).begin(),(x).end()<br>#define CLEAR(x,with) memset(x,with,sizeof(x))<br>#define sz size()<br>typedef long long ll;<br><br>struct Undo <br>{<br>  string getText(vector &lt;string&gt; commands, vector &lt;int&gt; time) <br>  {<br>    vector&lt;string&gt; ret(1,"");<br>    vector&lt;int&gt; t(1,-1000000001);<br>    REP(i,commands.sz)<br>    {<br>      istringstream inp(commands[i]);<br>      string a, b;<br>      inp &gt;&gt; a &gt;&gt; b;<br>      t.pb(time[i]);<br>      if(a == "type")<br>        ret.pb(ret.back() + b);<br>      else<br>      {<br>        int p = ret.sz-1;<br>        while(t[p] &gt;= time[i] - atoi(b.c_str())) --p;<br>        ret.pb(ret[p]);<br>      }<br>    }<br>    return ret.back();<br>  }<br>};<br><br><br>// Powered by FileEdit<br></td>