<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>#define is_leap(x)  ((x%400 ==0) || ((x%4==0)&amp;&amp;(x%100!=0)))<br>#define min_a_day 1440<br> <br>using namespace std;<br>class YearProgressbar {<br>  public:<br>  double percentage(string currentDate) {<br>     string month[12] = {"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"};<br>     int days[12] ={31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};<br>     map&lt; string ,int &gt; mapping_month;<br>     for(int i=0;i&lt;12;i++)<br>         mapping_month[month[i]] = i;<br>         char mon[255];<br>         int day,year,hour,min;<br>         sscanf(currentDate.c_str(),"%s %d, %d %d:%d",mon,&amp;day,&amp;year,&amp;hour,&amp;min);<br>         if(is_leap(year))<br>         {<br>             days[1] ++;<br>         }<br>         long long min_year=0;<br>         for(int i=0;i&lt;12;i++)<br>              min_year += days[i]* min_a_day;<br>         double ret=0;<br>         string tmp = mon;<br>         for(int i=0;i&lt;=(mapping_month[tmp]-1);i++)<br>            ret += days[i] * min_a_day;<br>         ret+= (day-1)*min_a_day;<br>         ret+= hour*60;<br>         ret+= min;<br>         <br>         ret = (double)ret/(double)min_year *100;<br>         return ret;<br>                 <br>  }<br>};<br><br><br>// Powered by FileEdit<br><br><br>// Powered by FileEdit<br></td>