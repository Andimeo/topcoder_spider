<td class="problemText" colspan="8" valign="middle" align="left">
            public class EnemyTowers {<br>  public int attack(int myUnits, int hpT, int attackT, int numWodT, int numStoT) {<br>    int upper = myUnits;<br>    int lower = 0;<br>    int hpW = numWodT * hpT;<br>    int hpS = numStoT * hpT;<br>    int best = Integer.MAX_VALUE;<br>    while(upper != lower) {<br>      int wUnits = (upper + lower) / 2;<br>      int wRounds = calcRounds(wUnits, attackT, hpW, hpT);<br>      int sRounds = calcRounds(myUnits - wUnits, attackT, hpS, hpT);<br>      if(sRounds &gt; wRounds) {<br>        if(sRounds &lt; best) {<br>          best = sRounds;<br>        }<br>        if(wUnits != upper) {<br>          upper = wUnits;<br>        } else {<br>          break;<br>        }<br>      } else {<br>        if(wRounds &lt; best) {<br>          best = wRounds;<br>        }<br>        if(wUnits != lower) {<br>          lower = wUnits;<br>        } else {<br>          break;<br>        }<br>      }<br>    }<br>    if (best == Integer.MAX_VALUE) {<br>      return -1;<br>    }<br>    return best;<br>  }<br><br>  private int calcRounds(int units, int attack, int hp, int hpT) {<br>    int rounds = 0;<br>    while(hp &gt; 0 &amp;&amp; units &gt; 0) {<br>      hp -= units;<br>      units -= (hp % hpT == 0) ? (hp / hpT) * attack : (1 + hp /hpT) * attack;<br>      rounds++;<br>    }<br>    if (hp &lt;= 0) {<br>      return rounds;<br>    } else {<br>      return Integer.MAX_VALUE;<br>    }<br>  }<br>}<br></td>