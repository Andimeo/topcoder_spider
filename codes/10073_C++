<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;cstring&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>using namespace std;<br><br>int newB;<br>int _f[60][150][60];<br><br>int f(int a,int b,int h)<br>{<br>  if( _f[a][b][h] == (-1) )<br>  {<br>    _f[a][b][h] = (1&lt;&lt;30);<br>    if( (h==0) &amp;&amp; (b==0) )<br>    {<br>      _f[a][b][h] = 0;<br>    }else<br>    if( a==0 )<br>    {<br>      _f[a][b][h] = (1&lt;&lt;30);<br>    }else<br>    {<br>      int min = (1&lt;&lt;30),res = (1&lt;&lt;30),B,A,H;<br>      for(int a_ = 0; a_&lt;=a; a_++)<br>      {<br>        B = b - a_;<br>        if( B &lt; 0 ) B = 0;<br>        <br>        H = h - (a-a_);<br>        if( H &lt; 0 ) H = 0;<br>        <br>        A = a-B;<br>        if( A &lt; 0 ) A = 0;<br>        <br>        if( H &gt; 0 ) B +=newB;<br>        <br>        res = 1+f(A,B,H);<br>        <br>        if( res &lt; min ) min = res;<br>      }<br>      _f[a][b][h] = min;<br>    }<br>  }<br>  return _f[a][b][h];<br>}<br><br>struct BarracksEasy<br>{<br>  int attack(int myU, int Hp, int newU)<br>  {<br>    memset(_f,-1,sizeof(_f));<br>    newB = newU;<br>    int res = f(myU,0,Hp);<br>    if( res &lt; (1&lt;&lt;30) )<br>    {<br>      return res;<br>    }<br>    else<br>    {<br>      return -1;<br>    }<br>  }//method<br>};//class<br></td>