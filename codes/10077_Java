<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class CactusCount {<br>  boolean[][] adjMat;<br>  int N;<br>  public int countCacti(int n, String[] edges)<br>  {<br>    N=n;<br>    adjMat = new boolean[n][n];<br>    for (int i=0; i&lt;n; i++)<br>    {<br>      Arrays.fill(adjMat[i], false);<br>      adjMat[i][i] = true;<br>    }<br>    int cnt = 0;<br>    StringBuilder e = new StringBuilder();<br>    for (String edge : edges)<br>      e.append(edge);<br>    String[] allEdges = e.toString().split("[,]");<br>    <br>    if (edges.length == 0)<br>      return n;<br>    for (String edge : allEdges)<br>    {<br>      String[] parts = edge.split("[ ]");<br>      int v1 = Integer.parseInt(parts[0])-1;<br>      int v2 = Integer.parseInt(parts[1])-1;<br>      adjMat[v1][v2] = adjMat[v2][v1] = true;<br>    }<br>    <br>    cycleCount = new int[n];<br>    visited = new boolean[n];<br>    for (int i=0; i&lt;n; i++)<br>    {<br>      Arrays.fill(visited, false);<br>      cycleCount[i] = countCycles(i,i,0);<br>    }<br>    <br>    Arrays.fill(visited, false);<br>    outer: for (int i=0; i&lt;n; i++)<br>      if (!visited[i])<br>      {<br>        ArrayList&lt;Integer&gt; cc = getCC(i);<br>        for (int v : cc)<br>          if (cycleCount[v] &gt; 1)<br>            continue outer;<br>        cnt++;<br>      }<br>    <br>    <br>    return cnt;<br>  }<br>  <br>  ArrayList&lt;Integer&gt; getCC(int v)<br>  {<br>    if (visited[v])<br>      return new ArrayList&lt;Integer&gt;();<br>    <br>    visited[v] = true;<br>    ArrayList&lt;Integer&gt; ret = new ArrayList&lt;Integer&gt;();<br>    ret.add(v);<br>    for (int i=0; i&lt;N; i++)<br>      if (adjMat[v][i] &amp;&amp; i!=v)<br>        ret.addAll(getCC(i));<br>    return ret;<br>  }<br> <br>  int[] cycleCount;<br>  boolean[] visited;<br>  int countCycles(int v, int start, int dist)<br>  {<br>    if (visited[v])<br>    {<br>      if (v==start &amp;&amp; dist&gt;2)<br>        return 1;<br>      return 0;<br>    }<br>    <br>    visited[v] = true;<br>    int ret = 0;<br>    for (int i=0; i&lt;N; i++)<br>      if (adjMat[v][i] &amp;&amp; i!=v)<br>        ret += countCycles(i,start,dist+1);<br>    return ret;<br>  }<br> <br> <br>    int INF = 987654321;<br>    void p(Object o) { System.out.print(o); }<br>    void pl(Object o) { System.out.println(o); }<br>    void pf(String s, Object... os) { System.out.printf(s, os); }<br> <br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>