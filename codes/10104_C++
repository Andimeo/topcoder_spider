<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;ctime&gt;<br>#include&lt;cstdlib&gt;<br>#include&lt;iostream&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;sstream&gt;<br>#include&lt;string&gt;<br>#include&lt;vector&gt;<br>#include&lt;cmath&gt;<br>using namespace std;<br><br>#define FOR(i,a,b) for(int i = (a); i &lt; (b); ++i)<br>#define REP(i,n) FOR(i,0,n)<br>#define FORE(it,x) for(typeof(x.begin()) it=x.begin();it!=x.end();++it)<br>#define pb push_back<br>#define all(x) (x).begin(),(x).end()<br>#define CLEAR(x,with) memset(x,with,sizeof(x))<br>#define sz size()<br>typedef long long ll;<br><br>struct EquilibriumPoints <br>{<br>  double f(double m1, double d)<br>  {<br>    return m1 / d / d;<br>  }<br>  vector &lt;double&gt; getPoints(vector &lt;int&gt; x, vector &lt;int&gt; m) <br>  {<br>    int n = x.sz;<br>    vector&lt;double&gt; ret;<br>    REP(i,x.sz-1)<br>    {<br>      double lo = x[i], hi = x[i+1];<br>      REP(iter,500)<br>      {<br>        double mid = (lo+hi) / 2;<br>        double force = 0;<br>        REP(j,i+1) force -= f(m[j], mid - x[j]);<br>        FOR(j,i+1,n) force += f(m[j], x[j] - mid);<br>        if(force &lt; 0)<br>          lo = mid;<br>        else<br>          hi = mid;<br>      }<br>      ret.pb((lo+hi) / 2);<br>    }<br>    return ret;<br>  }<br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by moj 4.11 [modified TZTester]<br>// Powered by CodeProcessor<br></td>