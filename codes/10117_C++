<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class PiecesMover {<br>public:<br>  int getMinimumMoves(vector &lt;string&gt;);<br>};<br> <br>int n, ans, a[10][10], x[10], y[10], u[10];<br> <br>int mabs(int x) {<br>  if (x &lt; 0) return -x;<br>  else return x;<br>}<br> <br>void rec(int v, int w) {<br>  if (w &gt;= ans) return;<br>  if (v == n) {<br>    ans = w;<br>    return;<br>  }<br>  int i, j, k, ok;<br>  for (i=0;i&lt;5;i++)<br>    for (j=0;j&lt;5;j++) {<br>      if (v == 0) ok = 1; else<br>      if (a[i][j] == 0) {<br>        ok = 0;<br>        if (i &gt; 0)<br>          if (a[i-1][j] == 1) ok = 1;<br>        if (j &gt; 0)<br>          if (a[i][j-1] == 1) ok = 1;<br>        if (i &lt; 4)<br>          if (a[i+1][j] == 1) ok = 1;<br>        if (j &lt; 4)<br>          if (a[i][j+1] == 1) ok = 1;<br>      }<br>      else ok = 0;<br>      if (ok) {<br>        a[i][j] = 1;<br>        for (k=0;k&lt;n;k++)<br>          if (!u[k]) {<br>            u[k] = 1;<br>            rec(v+1,w+mabs(x[k]-i)+mabs(y[k]-j));<br>            u[k] = 0;<br>          }<br>        a[i][j] = 0;<br>      }<br>    }<br>}<br> <br>int PiecesMover::getMinimumMoves(vector &lt;string&gt; board) {<br>  int i, j;<br>  n = 0;<br>  for (i=0;i&lt;5;i++)<br>    for (j=0;j&lt;5;j++)<br>      if (board[i][j] == '*'){<br>        x[n] = i;<br>        y[n] = j;<br>        n++;<br>      }<br>  memset(a,0,sizeof(a));<br>  memset(u,0,sizeof(u));<br>  ans = 1000000;<br>  rec(0,0);<br>  return ans;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>