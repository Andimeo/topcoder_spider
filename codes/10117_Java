<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br><br>public class PiecesMover {<br>  private static final int INF = Integer.MAX_VALUE / 2;<br>  private static final int[] dx = new int[] { -1, 1, 0, 0 };<br>  private static final int[] dy = new int[] { 0, 0, 1, -1 };<br>  char[][] w;<br>  int n = 5, cnt;<br>  int[] x, y;<br>  boolean[][] was = new boolean[n][n];<br><br>  public int getMinimumMoves(String[] board) {<br>    w = new char[n][];<br>    for (int i = 0; i &lt; 5; i++)<br>      w[i] = board[i].toCharArray();<br>    x = new int[n];<br>    y = new int[n];<br>    cnt = 0;<br>    for (int i = 0; i &lt; 5; i++)<br>      for (int j = 0; j &lt; 5; j++)<br>        if (w[i][j] == '*') {<br>          x[cnt] = i;<br>          y[cnt++] = j;<br>        }<br><br>    int res = dfs(0);<br>    return res;<br>  }<br><br>  int[] posx = new int[5], posy = new int[5];<br><br>  int tick = 0;<br>  int[][] col = new int[n][n];<br><br>  private int dfs(int k) {<br>    if (k == cnt) {<br>      tick++;<br>      return (dfs2(posx[0], posy[0]) == cnt) ? 0 : INF;<br>    }<br>    int res = INF;<br>    for (int i = 0; i &lt; n; i++)<br>      for (int j = 0; j &lt; n; j++)<br>        if (!was[i][j]) {<br>          was[i][j] = true;<br>          posx[k] = i;<br>          posy[k] = j;<br>          res = Math.min(res, Math.abs(x[k] - i) + Math.abs(y[k] - j) + dfs(k + 1));<br>          was[i][j] = false;<br>        }<br>    return res;<br>  }<br><br>  private int dfs2(int i, int j) {<br>    col[i][j] = tick;<br>    int res = 1;<br>    for (int dir = 0; dir &lt; 4; dir++) {<br>      int i1 = i + dx[dir], j1 = j + dy[dir];<br>      if (exist(i1, j1) &amp;&amp; was[i1][j1] &amp;&amp; col[i1][j1] != tick)<br>        res += dfs2(i1, j1);<br>    }<br>    return res;<br>  }<br><br>  private boolean exist(int i, int j) {<br>    return (0 &lt;= i &amp;&amp; i &lt; 5 &amp;&amp; 0 &lt;= j &amp;&amp; j &lt; 5);<br>  }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>