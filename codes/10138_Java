<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class TwinTowns {<br>    public int[] optimalTwinTowns(int[] x, int[] y, int maxPartners, int minDistance) {<br>        int n = x.length;<br>        int[] v = new int[1 &lt;&lt; (2 * n)];<br>        int[] s = new int[1 &lt;&lt; (2 * n)];<br>        int[] res = new int[]{0, 0};<br>        for (int i = 0; i &lt; n; i++) {<br>            for (int j = i + 1; j &lt; n; j++) {<br>                int d = Math.abs(x[i] - x[j]) + Math.abs(y[i] - y[j]);<br>                if (d &gt;= minDistance) {<br>                    for (int m = (1 &lt;&lt; 2 * n) - 1; m &gt;= 0; m--) {<br>                        int q = (m &gt;&gt; (2 * i)) &amp; 3;<br>                        int w = (m &gt;&gt; (2 * j)) &amp; 3;<br>                        if (q &gt; 0 &amp;&amp; w &gt; 0) {<br>                            int mm = (m - (q &lt;&lt; (2 * i)) - (w &lt;&lt; (2 * j)) + ((q - 1) &lt;&lt; (2 * i)) + ((w - 1) &lt;&lt; (2 * j)));<br>                            int vv = v[mm] + 1;<br>                            int ss = s[mm] + d;<br>                            if (vv &gt; v[m] || vv == v[m] &amp;&amp; ss &lt; s[m]) {<br>                                v[m] = vv;<br>                                s[m] = ss;<br>                            }<br>                        }<br>                    }<br>                }<br>            }<br>        }<br> <br>        for (int m = 0; m &lt; (1 &lt;&lt; (2 * n)); m++) {<br>            boolean ok = true;<br>            for (int i = 0; i &lt; n; i++) {<br>                int q = (m &gt;&gt; (2 * i)) &amp; 3;<br>                if (q &gt; maxPartners) ok = false;<br>            }<br>            if (ok) {<br>                if (v[m] &gt; res[0] || v[m] == res[0] &amp;&amp; s[m] &lt; res[1]) {<br>                    res[0] = v[m];<br>                    res[1] = s[m];<br>                }<br>            }<br>        }<br>        return res;<br>    }<br> <br> <br>        }<br> <br> <br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>