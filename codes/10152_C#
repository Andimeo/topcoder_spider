<td class="problemText" colspan="8" valign="middle" align="left">
            using System; <br>using System.Collections; <br>using System.Collections.Generic; <br>using System.Collections.Specialized; <br>using System.Text; <br>using System.Text.RegularExpressions; <br> <br>public class Xosceles {<br>    public string[] draw(int xCount) <br>    {<br>        List&lt;char[]&gt; m = new List&lt;char[]&gt;();<br><br>        int sum = 0;<br>        for (int i = 1; ; i += 2)<br>        {<br>            sum += i;<br>            if (sum == xCount)<br>            {<br>                int line = (i + 1) / 2;<br>                for (int j = 0; j &lt; line; j++)<br>                {<br>                    char[] c = new char[i];<br>                    for (int k = 0; k &lt; c.Length; k++)<br>              {<br>                        c[k] = '.';<br>              }<br>                    for (int k = line - 1 - j; k &lt; line - 1 - j + 2 * j + 1; k++)<br>                    {<br>                        c[k] = 'X';<br>                    }<br>                    m.Add(c); <br>                }<br>            }<br>            if (sum &gt; xCount)<br>                break;<br>        }<br>        sum = 0;<br>        for (int i = 2; ; i += 2)<br>        {<br>            sum += i;<br>            if (sum == xCount)<br>            {<br>                int line = i / 2;<br>                for (int j = 0; j &lt; line; j++)<br>                {<br>                    char[] c = new char[i];<br>                    for (int k = 0; k &lt; c.Length; k++)<br>                    {<br>                        c[k] = '.';<br>                    }<br>                    for (int k = line - 1 - j; k &lt; line - 1 - j + 2 * j + 2; k++)<br>                    {<br>                        c[k] = 'X';<br>                    }<br>                    m.Add(c);<br>                }<br>            }<br>            if (sum &gt; xCount)<br>                break;<br>        }<br><br>        string[] ret = new string[m.Count];<br>        for (int i = 0; i &lt; ret.Length; i++)<br>        {<br>            for(int j = 0; j &lt; m[i].Length; j++)<br>                ret[i] += m[i][j];<br>        }<br><br>        return ret;<br>    }<br><br><br>} <br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>