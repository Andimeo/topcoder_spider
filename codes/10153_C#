<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br> <br>public class GroupedWord<br>{<br>  public string restore (string[] parts)<br>  {<br>    int[] cnt = new int[26];<br>    int?[] start = new int?[26];<br>    int?[] stop = new int?[26];<br>    <br>    for (int w = 0; w &lt; parts.Length; ++w)<br>    {<br>      string s = parts[w];<br>      <br>      for (int i = 0; i &lt; s.Length; ++i)<br>        for (int j = i + 1; j &lt; s.Length; ++j)<br>          for (int k = j + 1; k &lt; s.Length; ++k)<br>            if (s[i] == s[k] &amp;&amp; s[i] != s[j])<br>              return "IMPOSSIBLE";<br>      <br>      bool same = true;<br>      <br>      for (int i = 1; i &lt; s.Length &amp;&amp; same; ++i)<br>        if (s[0] != s[i])<br>          same = false;<br> <br>      if (same)<br>      {<br>        cnt[s[0]-'a'] += s.Length;<br>        continue;<br>      }<br> <br>      for (int i = 0; i &lt; s.Length; ++i)<br>        if (s[i] != s[0] &amp;&amp; s[i] != s[s.Length - 1])<br>          for (int ww = 0; ww &lt; parts.Length; ++ww)<br>            if (ww != w &amp;&amp; parts[ww].IndexOf (s[i]) != -1)<br>              return "IMPOSSIBLE";<br> <br>      if (start[s[0]-'a'].HasValue)<br>        return "IMPOSSIBLE";<br>      if (stop[s[s.Length - 1]-'a'].HasValue)<br>        return "IMPOSSIBLE";<br>      start[s[0]-'a'] = w;<br>      stop[s[s.Length - 1]-'a'] = w;<br>    }<br>    <br>    List&lt;string&gt; words = new List&lt;string&gt; ();<br>    <br>    for (int i = 0; i &lt; 26; ++i)<br>    {<br>      if (!start[i].HasValue || stop[i].HasValue)<br>        continue;<br> <br>      string s = "";<br>      int now = i;<br> <br>      while (true)<br>      {<br>        while (cnt[now] &gt; 0)<br>        {<br>          s += (char)(now + 'a');<br>          --cnt[now];<br>        }<br> <br>        if (!start[now].HasValue)<br>          break;<br> <br>        int cw = start[now].Value;<br>        int next = parts[cw][parts[cw].Length - 1]-'a';<br>        s += parts[cw];<br>        start[now] = null;<br>        stop[next] = null;<br>        <br>        now = next;<br>      }<br> <br>      words.Add (s);<br>    }<br>    <br>    for (int i = 0; i &lt; 26; ++i)<br>      if (start[i].HasValue)<br>        return "IMPOSSIBLE";<br> <br>    if (words.Count &gt;= 2)<br>      return "MANY";<br> <br>    int kolko = 0;<br>    for (int i = 0; i &lt; 26; ++i)<br>      if (cnt[i] &gt; 0)<br>        ++kolko;<br> <br>    if (kolko + words.Count &gt;= 2)<br>      return "MANY";<br> <br>    if (words.Count == 1)<br>      return words[0];<br> <br>    string res = "";<br>    for (int i = 0; i &lt; 26; ++i)<br>      while (cnt[i]-- &gt; 0)<br>        res += (char)(i + 'a');<br>    return res;<br>  }<br>  <br>  <br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>