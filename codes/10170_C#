<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class ProductOfPrices {<br>    const int MOD = 1000000007;<br><br>    void addToTree(int[] tree, int root, int l, int r, int at, int by)<br>    {<br>        tree[root] += by;<br>        if (tree[root] &gt;= MOD)<br>            tree[root] -= MOD;<br>        if (l == r)<br>        {<br>        }<br>        else<br>        {<br>            int m = (l + r) / 2;<br>            if (at &lt;= m)<br>                addToTree(tree, root * 2 + 1, l, m, at, by);<br>            else<br>                addToTree(tree, root * 2 + 2, m + 1, r, at, by);<br>        }<br>    }<br><br>    int getSum(int[] tree, int root, int l, int r, int nl, int nr)<br>    {<br>        if (nl &gt; nr)<br>            return 0;<br>        if (nl == l &amp;&amp; nr == r)<br>            return tree[root];<br>        int m = (l + r) / 2;<br>        int s = getSum(tree, root * 2 + 1, l, m, nl, Math.Min(nr, m)) + getSum(tree, root * 2 + 2, m + 1, r, Math.Max(nl, m + 1), nr);<br>        if (s &gt;= MOD)<br>            s -= MOD;<br>        return s;<br>    }<br><br>  public int product(int n, int _L, int _X0, int _A, int _B) {<br>        long l = _L;<br>        long x0 = _X0;<br>        long a = _A;<br>        long b = _B;<br>        long[] x = new long[n];<br>        x[0] = x0 % l;<br>        for (int i = 1; i &lt; n; ++i)<br>            x[i] = (x[i - 1] * a + b) % l;<br>        int[] t1 = new int[4 * l + 10];<br>        int[] t2 = new int[4 * l + 10];<br>        long res = 1;<br>        for (int i = 0; i &lt; n; ++i)<br>        {<br>            if (i &gt; 0)<br>            {<br>                long l1 = getSum(t1, 0, 0, (int)l - 1, 0, (int) x[i]);<br>                long l2 = getSum(t2, 0, 0, (int)l - 1, 0, (int) x[i]);<br>                long r1 = getSum(t1, 0, 0, (int)l - 1, (int) x[i] + 1, (int) l - 1);<br>                long r2 = getSum(t2, 0, 0, (int)l - 1, (int) x[i] + 1, (int) l - 1);<br>                long cur = ((l1 * x[i] % MOD - l2) % MOD + MOD) % MOD;<br>                cur = (cur + (r2 - r1 * x[i] % MOD) % MOD + MOD) % MOD;<br>                res = (res * cur) % MOD;<br>            }<br>            addToTree(t1, 0, 0, (int)l - 1, (int)x[i], 1);<br>            addToTree(t2, 0, 0, (int)l - 1, (int)x[i], (int) x[i]);<br>        }<br>        return (int) res;<br>    }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>