<td class="problemText" colspan="8" valign="middle" align="left">
            import static java.lang.Math.*;<br>import static java.math.BigInteger.*;<br>import static java.util.Arrays.*;<br>import static java.util.Collections.*;<br>import java.math.*;<br>import java.util.*;<br><br>public class ProductOfPrices {<br>  long M = 1000000007;<br>  public int product(int N, int L, int X0, int A, int B) {<br>    int[] xs = f(X0, N, A, B, L);<br>    TreeSet&lt;Integer&gt; set = new TreeSet&lt;Integer&gt;();<br>    for (int x : xs) set.add(x);<br>    int[] ps = toi(set.toArray(new Integer[0]));<br>    int n = ps.length;<br>    BIT num = new BIT(n);<br>    BIT sum = new BIT(n);<br>    long res = 1;<br>    num.add(binarySearch(ps, xs[0]), 1);<br>    sum.add(binarySearch(ps, xs[0]), xs[0]);<br>    for (int i = 1; i &lt; N; i++) {<br>      int pos = binarySearch(ps, xs[i]);<br>      long lnum = num.sum(0, pos);<br>      long lsum = sum.sum(0, pos);<br>      long unum = num.sum(pos + 1, n);<br>      long usum = sum.sum(pos + 1, n);<br>      long mul = (((lnum * xs[i] - lsum + usum - unum * xs[i]) % M) + M) % M;<br>      res = (res * mul) % M;<br>      num.add(pos, 1);<br>      sum.add(pos, xs[i]);<br>    }<br>    return (int) (((res % M) + M) % M);<br>  }<br>  int[] toi(Integer[] Is) {<br>    int n = Is.length;<br>    int[] is = new int[n];<br>    for (int i = 0; i &lt; n; i++) is[i] = Is[i];<br>    return is;<br>  }<br>  int[] f(int x0, int n, int A, int B, int L) {<br>    int[] xs = new int[n];<br>    xs[0] = x0 % L;<br>    for (int i = 1; i &lt; n; i++) {<br>      xs[i] = (int) ((((long)xs[i - 1]) * A + B) % L);<br>    }<br>    return xs;<br>  }<br>  class BIT {<br>    long[] vs;<br>    BIT(int n) {<br>      vs = new long[n + 1];<br>    }<br>    //k[\u30058][\u12398][\u20516][\u12434]+a[\u12377][\u12427]<br>    //O(log n)<br>    void add(int k, long a) {<br>      for (int i = k + 1; i &lt; vs.length; i += i &amp; -i) {<br>        vs[i] = (vs[i] + a) % M;<br>      }<br>    }<br>    //[s,t)[\u12398][\u21644][\u12434][\u35336][\u31639][\u12377][\u12427]<br>    //O(log n)<br>    long sum(int s, int t) {<br>      if (s &gt; 0) return (sum(0, t) - sum(0, s) + M) % M;<br>      long res = 0;<br>      for (int i = t; i &gt; 0; i -= i &amp; -i) {<br>        res = (res + vs[i]) % M;<br>      }<br>      return res;<br>    }<br>  }<br>  void debug(Object...os) {<br>    System.err.println(Arrays.deepToString(os));<br>  }<br>}<br></td>