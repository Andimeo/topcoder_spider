<td class="problemText" colspan="8" valign="middle" align="left">
            #line 5 "PerfectRectangles.cpp"<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;fstream&gt;<br>#include &lt;numeric&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;bitset&gt;<br>#include &lt;list&gt;<br>#include &lt;stdexcept&gt;<br>#include &lt;functional&gt;<br>#include &lt;utility&gt;<br>#include &lt;ctime&gt;<br>using namespace std;<br><br>#define PB push_back<br>#define MP make_pair<br><br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br>typedef vector&lt;double&gt; VD;<br>typedef long long LL;<br>typedef pair&lt;int,int&gt; PII;<br><br>const int maxn = 2008;<br>bool a[maxn][maxn];<br>int l[maxn][maxn],r[maxn][maxn],u[maxn][maxn];<br><br><br>set&lt; pair&lt;int,int&gt; &gt; hash;<br>class PerfectRectangles<br>{<br>  public:<br>  int numberOfRectangles(int n, int M, int X0, int A, int B, int Y0, int C, int D)<br>  {<br>    for(int i=0;i&lt;=n+1;i++)<br>    for(int j=0;j&lt;=n+1;j++)<br>    {<br>      a[i][j]=true;<br>      l[i][j] = r[i][j] = u[i][j] = 0;<br>    }<br>    X0%=n;Y0%=n;<br>    for(int i=0;i&lt;M;i++)<br>    {<br>      a[X0+1][Y0+1] = false;<br>      X0 = (X0*A+B)%n;<br>      Y0 = (Y0*C+D)%n;<br>    }<br>    for(int i=1;i&lt;=n;i++)<br>    {<br>      for(int j=1;j&lt;=n;j++) if(a[i][j]) u[i][j] = u[i-1][j]+1;<br>      for(int j=1;j&lt;=n;j++) if(a[i][j]) l[i][j] = l[i][j-1]+1;<br>      for(int j=n;j;j--) if(a[i][j]) r[i][j] = r[i][j+1]+1;<br>    }<br><br>    int ans = 0;<br>    for(int i=1;i&lt;=n;i++)<br>    {<br>      hash.clear();<br>    for(int j=1;j&lt;=n;j++)if(a[i][j])<br>    {<br>      if(u[i][j]&gt;1)<br>      {<br>        l[i][j] = min(l[i][j],l[i-1][j]);<br>        r[i][j] = min(r[i][j],r[i-1][j]);<br>      }<br>      if(r[i+1][j-l[i][j]+1]&lt;l[i][j]+r[i][j]-1)<br>      if(hash.find( MP(j-l[i][j],j+r[i][j]) )==hash.end())<br>      {<br>        hash.insert( MP(j-l[i][j],j+r[i][j]) );<br>//        printf("At %d %d\n",i,j);<br>//        printf("%d %d %d %d\n",i-u[i][j]+1,i,j-l[i][j]+1,j+r[i][j]-1);<br>        ans++;<br>      }<br>    }<br>    }<br><br>    return ans;<br>  }<br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>