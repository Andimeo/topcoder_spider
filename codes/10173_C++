<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class ProgrammingRobots {<br>public:<br>  int numberOfRobots(vector &lt;string&gt;);<br>};<br>int br = 0, n,M,N, used[128][128],m;<br>vector &lt;string&gt; a;<br>void dfs(int i, int j){<br>    used[i][j] = 1;<br>    if ( a[i][j] == 'R') ++br;<br>    if ( i + 1  &lt; N)<br>        if(!used[i+1][j] &amp;&amp; a[i+1][j] != '#')<br>            dfs(i+1,j);<br>    if ( i - 1  &gt;= 0)<br>        if(!used[i-1][j] &amp;&amp; a[i-1][j] != '#')<br>            dfs(i-1,j);<br>    if ( j + 1  &lt; M)<br>        if(!used[i][j+1] &amp;&amp; a[i][j+1] != '#')<br>            dfs(i,j+1);<br>    if ( j - 1  &gt;= 0)<br>        if(!used[i][j-1] &amp;&amp; a[i][j-1] != '#')<br>            dfs(i,j-1);<br>}<br> <br>void renew(){<br>    for ( int i = 0; i &lt; 128; ++i)<br>    for ( int j = 0; j &lt; 128; ++j)<br>    used[i][j] = 0;<br>    br = 0;<br>}<br>int ProgrammingRobots::numberOfRobots(vector &lt;string&gt; maze) {<br>  a  = maze;<br>  int mx = 0;n=a.size();m=a[0].size();M=m;N=n;<br>    for ( int i = 0; i &lt; n; ++i )<br>        for ( int j = 0; j &lt; maze[i].size(); ++j ){<br>            if(maze[i][j] == 'R'){<br>                dfs(i,j);<br>                mx = max(mx, br);<br>                renew();<br>            }<br>        }<br>        return mx;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>