<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br><br>public class StrengthOrIntellect {<br>  public int numberOfMissions(int[] strength, int[] intellect, int[] points) {<br>        List&lt;int&gt; allS = new List&lt;int&gt;(strength);<br>        List&lt;int&gt; allI = new List&lt;int&gt;(intellect);<br>        allS.Add(1);<br>        allI.Add(1);<br>        allS.Sort();<br>        allI.Sort();<br>        int res = 0;<br>        bool[,] can = new bool[allS.Count, allI.Count];<br>        int[] qs = new int[(allS.Count) * (allI.Count) + 10];<br>        int[] qi = new int[(allS.Count) * (allI.Count) + 10];<br>        int qh = 1;<br>        int qt = 0;<br>        qs[0] = 0;<br>        qi[0] = 0;<br>        can[0, 0] = true;<br>        while (qt &lt; qh)<br>        {<br>            int cs = qs[qt];<br>            int ci = qi[qt];<br>            ++qt;<br>            int extra = 2 - allS[cs] - allI[ci];<br>            int cur = 0;<br>            for (int i = 0; i &lt; strength.Length; ++i)<br>            {<br>                if (strength[i] &lt;= allS[cs] || intellect[i] &lt;= allI[ci])<br>                {<br>                    ++cur;<br>                    extra += points[i];<br>                }<br>            }<br>            res = Math.Max(res, cur);<br>            if (cs &lt; allS.Count - 1 &amp;&amp; extra &gt;= allS[cs + 1] - allS[cs] &amp;&amp; !can[cs + 1, ci])<br>            {<br>                can[cs + 1, ci] = true;<br>                qs[qh] = cs + 1;<br>                qi[qh] = ci;<br>                ++qh;<br>            }<br>            if (ci &lt; allI.Count - 1 &amp;&amp; extra &gt;= allI[ci + 1] - allI[ci] &amp;&amp; !can[cs, ci + 1])<br>            {<br>                can[cs, ci + 1] = true;<br>                qs[qh] = cs;<br>                qi[qh] = ci + 1;<br>                ++qh;<br>            }<br>        }<br>        return res;<br>    }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>