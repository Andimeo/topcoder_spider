<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.awt.*;<br>import java.awt.geom.*;<br>import java.math.*;<br><br>public class StrengthOrIntellect {<br>  public int numberOfMissions(int[] strength, int[] intellect, int[] points) {<br>        memo = new int[1001][1001];<br>        this.stren = strength;<br>        this.intel = intellect;<br>        this.point = points;<br>        int ans = solve(1,1);<br>        return ans;<br>  }<br>  int[][] memo;<br>  int[] stren;<br>  int[] intel;<br>  int[] point;<br>  <br>  public int solve(int strength, int intellect) {<br>    <br>    if(memo[strength][intellect]&gt;0)return memo[strength][intellect]-1;<br>    <br>    int points = 0;<br>    int missions = 0;<br>    for(int i = 0;i&lt;stren.length;i++) {<br>      if(strength&gt;=stren[i] || intellect&gt;=intel[i]) {<br>        points += point[i];<br>        missions++;<br>      }<br>    }<br>    <br>    int pointsleft = 2+points-strength-intellect;<br>    <br>    if(pointsleft==0 || missions ==stren.length) {<br>      memo[strength][intellect] = 1+missions;<br>      return missions;<br>    }<br>    <br>    int best = missions;<br>    if(strength&lt;1000)best = Math.max(best, solve(strength+1,intellect));<br>    if(intellect&lt;1000)best = Math.max(best, solve(strength, intellect+1));<br>    <br>    memo[strength][intellect] = 1+best;<br>    return best;<br>    <br>    <br>  }<br>  <br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>