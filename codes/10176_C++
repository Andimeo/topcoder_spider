<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;ctime&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br><br>using namespace std;<br><br><br>#define REP(i,n) for(int i=0;i&lt;(n);++i)<br>#define RME(x) (x).erase((x).end()-1)<br><br>class MagicSpell<br>{<br>public:<br>  string fixTheSpell(string spell);<br><br>};<br><br>string MagicSpell::fixTheSpell(string spell)<br>{<br>  string str;<br><br>  REP ( i, spell.length() ) {<br>    if ( spell[i] == 'A' || spell[i] == 'Z' ) {<br>      str += spell[i];<br>    }<br>  }<br>  REP ( i, spell.length() ) {<br>    if ( spell[i] == 'A' || spell[i] == 'Z' ) {<br>      spell[i] = str[str.length()-1];<br>      RME ( str );<br>    }<br>  }<br><br>  return spell;<br><br>}<br></td>