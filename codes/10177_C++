<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cassert&gt;<br>#include &lt;set&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstddef&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;utility&gt;<br>#include &lt;iterator&gt;<br>#include &lt;numeric&gt;<br>#include &lt;list&gt;<br>#include &lt;complex&gt;<br> <br>using namespace std;<br> <br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;string&gt; vs;<br>typedef long long ll;<br>typedef complex&lt;double&gt; pnt;<br>typedef pair&lt;int, int&gt; pii;<br> <br>#define RA(x) (x).begin(), (x).end()<br>#define FE(i, x) for (typeof((x).begin()) i = (x).begin(); i != (x).end(); i++)<br>#define SZ(x) ((int) (x).size())<br> <br> <br>class ProductOfDigits<br>{<br>public:<br>    int smallestNumber(int N);<br>};<br> <br>int ProductOfDigits::smallestNumber(int N)<br>{<br>    int ans = 0;<br>    for (int d = 9; d &gt;= 2; d--)<br>    {<br>        while (N % d == 0)<br>        {<br>            N /= d;<br>            ans++;<br>        }<br>    }<br>    if (ans == 0) ans = 1;<br>    if (N == 1) return ans; else return -1;<br>}<br> <br> <br>// Powered by FileEdit<br></td>