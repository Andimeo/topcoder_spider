<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br> <br>struct S : IComparable&lt;S&gt;<br>{<br>  public S (int a, int b, long c)<br>  {<br>    this.a = a;<br>    this.b = b;<br>    this.c = c;<br>  }<br>  <br>  public int a, b;<br>  public long c;<br> <br>  public int CompareTo (S s)<br>  {<br>    return this.c.CompareTo (s.c);<br>  }<br>}<br> <br>public class BuildersCountry<br>{<br>  long cenaa (long x1, long x2, long a)<br>  {<br>    return a * (x1 + x2);<br>  }<br> <br>  long cenab (long x1, long x2, long y1, long y2, long b1, long b2)<br>  {<br>    return b1 * y1 * x2 + b2 * y2 * x1 + Math.Min (b1, b2) * y1 * y2;<br>  }<br> <br>  long cenac (long x, long y, long b)<br>  {<br>    return b * (x * y + y * (y - 1) / 2);<br>  }<br>  <br>  long cena (long x1, long x2, long y1, long y2, long b1, long b2, long a)<br>  {<br>    return cenaa (x1, x2, a) + cenab (x1, x2, y1, y2, b1, b2);<br>  }<br> <br>  int[] uf;<br> <br>  int uf1 (int a)<br>  {<br>    if (uf[a] == a)<br>      return a;<br> <br>    return uf[a] = uf1 (uf[a]);<br>  }<br> <br>  bool uf2 (int a, int b)<br>  {<br>    a = uf1 (a);<br>    b = uf1 (b);<br> <br>    if (a == b)<br>      return false;<br> <br>    uf[a] = b;<br>    return true;<br>  }<br>  <br>  public long minCost (int[] before, int[] after, int[] houseCost, string[] _g, int roadCost)<br>  {<br>    int n = before.Length;<br> <br>    bool[,] g = new bool[n, n];<br>    long[,] c = new long[n, n];<br> <br>    for (int i = 0; i &lt; n; ++i)<br>      for (int j = 0; j &lt; n; ++j)<br>        g[i, j] = _g[i][j] == 'Y';<br>    <br>    for (int i = 0; i &lt; n; ++i)<br>      for (int j = 0; j &lt; n; ++j)<br>        c[i, j] = cena (before[i], before[j], after[i] - before[i], after[j] - before[j], houseCost[i], houseCost[j], roadCost);<br> <br>    uf = new int[n];<br>    for (int i = 0; i &lt; n; ++i)<br>        uf[i] = i;<br> <br>    for (int i = 0; i &lt; n; ++i)<br>      for (int j = 0; j &lt; n; ++j)<br>        if (g[i, j])<br>          uf2 (i, j);<br> <br>    List&lt;S&gt; s = new List&lt;S&gt; ();<br> <br>    for (int i = 0; i &lt; n; ++i)<br>      for (int j = i + 1; j &lt; n; ++j)<br>        s.Add (new S (i, j, c[i, j]));<br>    <br>    s.Sort ();<br> <br>    long res = 0;<br>    foreach (S ss in s)<br>      if (uf2 (ss.a, ss.b))<br>        res += ss.c;<br>    <br>    for (int i = 0; i &lt; n; ++i)<br>      for (int j = i + 1; j &lt; n; ++j)<br>        if (g[i, j])<br>          res += cenab (before[i], before[j], after[i] - before[i], after[j] - before[j], houseCost[i], houseCost[j]);<br> <br>    for (int i = 0; i &lt; n; ++i)<br>      res += cenac (before[i], after[i] - before[i], houseCost[i]);<br>    <br>    return res;<br>  }<br>  <br>  <br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>