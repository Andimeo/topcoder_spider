<td class="problemText" colspan="8" valign="middle" align="left">
            // Temlpate by Alexus<br>#include "iostream"<br>#include "stdio.h"<br>#include "vector"<br>#include "string"<br>#include "algorithm"<br>#include "set"<br>#include "map"<br>#include "math.h"<br>using namespace std;<br><br>// End of Template<br><br>int n;<br>long long val[52][52];<br>long long res;<br><br>char used[52];<br>long long d[52];<br><br>long long con(int u, int v, vector&lt;int&gt;&amp; bef, vector&lt;int&gt;&amp; after, vector&lt;int&gt;&amp; tobuild, vector&lt;int&gt;&amp; hcost){<br>  long long val1 = (long long)(bef[u]) * tobuild[v] * hcost[v];<br>  val1 += (long long)(after[v]) * tobuild[u] * hcost[u];<br>  long long val2 = (long long)(bef[v]) * tobuild[u] * hcost[u];<br>  val2 += (long long)(after[u]) * tobuild[v] * hcost[v];<br>  return min(val1, val2);<br>} <br><br>void build_mst(int v){<br>  res += d[v];<br>  used[v] = 1;<br>  int i, bi = -1;<br>  long long mval = (1LL &lt;&lt; 62);<br>  for (i=0; i&lt;n; i++){<br>    if (val[v][i] &lt; d[i]){<br>      d[i] = val[v][i];<br>    }<br>    if (!used[i] &amp;&amp; (d[i] &lt; mval)){<br>      mval = d[i];<br>      bi = i;<br>    }<br>  }<br>  if (bi &gt;= 0) build_mst(bi);<br>}<br><br>class BuildersCountry{<br>public:<br>  long long minCost(vector&lt;int&gt; bef, vector&lt;int&gt; after, vector&lt;int&gt; hcost, vector&lt;string&gt; g, int rcost){<br>    int i, j;<br>    vector&lt;int&gt; tobuild;<br>    n = bef.size();<br>    for (i=0; i&lt;n; i++){<br>      tobuild.push_back(after[i] - bef[i]);<br>        res += ((long long)(tobuild[i]) * (bef[i] + after[i] - 1) / 2) * hcost[i];<br>      d[i] = (1LL &lt;&lt; 62);<br>    }<br>    for (i=0; i&lt;n; i++){<br>      for (j=i+1; j&lt;n; j++){<br>        if (g[i][j] == 'Y'){<br>          val[i][j] = 0;<br>          res += con(i, j, bef, after, tobuild, hcost);<br>        }<br>        else{<br>          val[i][j] = (bef[i] + bef[j]) * (long long)(rcost) + con(i, j, bef, after, tobuild, hcost);<br>        }<br>        val[j][i] = val[i][j];<br>      }<br>    }<br>    d[0] = 0;<br>    build_mst(0);<br>    return res;<br>  }<br>};<br></td>