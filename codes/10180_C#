<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class TheLuckyString<br>{<br>    public int count(string s)<br>    {<br>        char[] chars = s.ToCharArray();<br>        Array.Sort(chars);<br>        int ret = 0;<br>        do<br>        {<br>            bool isok = true;<br>            for (int i = 1; i &lt; chars.Length; i++)<br>            {<br>                if (chars[i] == chars[i - 1])<br>                    isok = false;<br>            }<br>            if (isok) ret++;<br> <br>        } while (Permutation&lt;char&gt;.NextPermutation(chars));<br>        return ret;<br>    }<br> <br>    public static class Permutation&lt;T&gt;<br>    {<br>        public static bool NextPermutation(T[] array)<br>        {<br>            Comparer&lt;T&gt; comp = Comparer&lt;T&gt;.Default;<br> <br>            for (int i = array.Length - 2; i &gt;= 0; i--)<br>            {<br>                if (comp.Compare(array[i], array[i + 1]) &lt; 0)<br>                {<br>                    int j = array.Length - 1;<br>                    while (comp.Compare(array[i], array[j]) &gt;= 0)<br>                        j--;<br>                    T tmp = array[i];<br>                    array[i] = array[j];<br>                    array[j] = tmp;<br>                    System.Array.Reverse(array, i + 1, array.Length - i - 1);<br>                    return true;<br>                }<br>            }<br>            return false;<br>        }<br>    }<br> <br> <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>