<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br>import static java.lang.Math.*;<br>import static java.util.Collections.*;<br>import static java.util.Arrays.*;<br>import static java.lang.Integer.*;<br>import static java.lang.Long.*;<br>import static java.lang.Double.*;<br><br>public class TheDictionary {<br>    public String find(int n, int m, int k) {<br>        <br>      if(n==0&amp;&amp;m==0)<br>        return "";<br>      BigInteger K = BigInteger.valueOf(k);<br>      if(K.compareTo(permutations(n, m))&gt;0)<br>        return "";<br>      if(n&gt;0)<br>      {<br>        //should a come or should z come<br>        if(K.compareTo(permutations(n-1, m))&gt;0)<br>          return "z"+find(n, m-1, K.subtract(permutations(n-1, m)).intValue());<br>        else<br>          return "a"+find(n-1, m, k);<br>      }<br>      else<br>      {<br>        if(k!=1)<br>          System.out.println("crap!");<br>        if(m&gt;0)<br>          return "z"+find(n, m-1, k);<br>        return "";<br>      }<br>      <br>        <br>    }<br><br>    BigInteger permutations(int n, int m)<br>    {<br>      return fact(n+m).divide(fact(n)).divide(fact(m));<br>    }<br>    BigInteger fact(int N)<br>    {<br>      if(N==0)return BigInteger.ONE;<br>      return BigInteger.valueOf(N).multiply(fact(N-1));<br>      <br>    }<br>    <br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>