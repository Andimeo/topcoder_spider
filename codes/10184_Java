<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.BigInteger;<br> <br>public class TheLongPalindrome {<br>    long MOD = 1234567891;<br> <br>    class Matrix {<br>        long[][] a;<br>        int n;<br> <br>        public Matrix(int n) {<br>            this.n = n;<br>            a = new long[n][n];<br>        }<br> <br>        public Matrix mul(Matrix that) {<br>            Matrix res = new Matrix(n);<br>            for (int i = 0; i &lt; n; i++) {<br>                for (int j = 0; j &lt; n; j++) {<br>                    for (int k = 0; k &lt; n; k++) {<br>                        res.a[i][j] = (res.a[i][j] + a[i][k] * that.a[k][j]) % MOD;<br>                    }<br>                }<br>            }<br>            return res;<br>        }<br> <br>        public Matrix pow(long p) {<br>            Matrix r = new Matrix(n);<br>            for (int i = 0; i &lt; n; i++) {<br>                r.a[i][i] = 1;<br>            }<br>            Matrix a = this;<br>            while (p &gt; 0) {<br>                if (p % 2 == 1) {<br>                    r = r.mul(a);<br>                }<br>                a = a.mul(a);<br>                p /= 2;<br>            }<br>            return r;<br>        }<br> <br>    }<br> <br>    public int count(int n, int k) {<br>        Matrix m = new Matrix(k + 2);<br>        for (int i = 0; i &lt; k + 1; i++) {<br>            m.a[i][i] = i;<br>            if (i &gt; 0) {<br>                m.a[i][i - 1] = 26 - i + 1;<br>            }<br>        }<br>        for (int i = 0; i &lt; k + 2; i++) {<br>            m.a[k + 1][i] = 1;<br>        }<br> <br>        Matrix me = m.pow(n / 2);<br>        Matrix mo = m.pow((n + 1) / 2);<br>        long ans = 0;<br>        for (int i = 0; i &lt; k + 2; i++) {<br>            ans = (ans + mo.a[i][0]) % MOD;<br>            ans = (ans + me.a[i][0]) % MOD;<br>        }<br>        ans = (ans - 2 + MOD) % MOD; <br>        return (int)(ans);<br>    }<br> <br>}<br> <br> <br>// Powered by PopsEdit<br> <br>// Powered by CodeProcessor<br></td>