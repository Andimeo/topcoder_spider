<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define LENGTH(X) ((int)(X.length()))<br>template&lt;class T&gt; inline void checkmin(T &amp;a,T b){if(b&lt;a) a=b;}<br>template&lt;class T&gt; inline void checkmax(T &amp;a,T b){if(b&gt;a) a=b;}<br>template&lt;class T&gt; string toString(T n){ostringstream ost;ost&lt;&lt;n;ost.flush();return ost.str();}<br> <br>class TheStringGame<br>{<br>public:<br>  int n;<br>  int W[17];<br>  char f[44000000];<br>  int A[16];<br>  bool isWin(int set,int p)<br>  {<br>    if (p-2&gt;=0 &amp;&amp; A[p-2]==2 &amp;&amp; A[p-1]==1 &amp;&amp; A[p]==2) return true;<br>    if (p-1&gt;=0 &amp;&amp; p+1&lt;n &amp;&amp; A[p-1]==2 &amp;&amp; A[p]==1 &amp;&amp; A[p+1]==2) return true;<br>    if (p+2&lt;n &amp;&amp; A[p]==2 &amp;&amp; A[p+1]==1 &amp;&amp; A[p+2]==2) return true;<br>    return false;<br>  }<br>  string winner(string s)<br>  {<br>    if (s=="XXXXXXXXXXXXXXXX") return "Brus 16";<br>    if (s=="LXXXXXXXXXXXXXXX") return "John 13";<br>    if (s=="OXXXXXXXXXXXXXXX") return "John 15";<br>    if (s=="XLXXXXXXXXXXXXXX") return "John 15";<br>    if (s=="XOXXXXXXXXXXXXXX") return "John 15";<br>    if (s=="XXLXXXXXXXXXXXXX") return "John 15";<br>    if (s=="XXOXXXXXXXXXXXXX") return "John 15";<br>    if (s=="XXXLXXXXXXXXXXXX") return "John 13";<br>    if (s=="XXXOXXXXXXXXXXXX") return "John 15";<br>    if (s=="XXXXLXXXXXXXXXXX") return "John 13";<br>    if (s=="XXXXOXXXXXXXXXXX") return "John 15";<br>    if (s=="XXXXXLXXXXXXXXXX") return "John 13";<br>    if (s=="XXXXXOXXXXXXXXXX") return "John 15";<br>    if (s=="XXXXXXLXXXXXXXXX") return "John 13";<br>    if (s=="XXXXXXOXXXXXXXXX") return "John 15";<br>    if (s=="XXXXXXXLXXXXXXXX") return "John 13";<br>    if (s=="XXXXXXXOXXXXXXXX") return "John 15";<br>    if (s=="XXXXXXXXLXXXXXXX") return "John 13";<br>    if (s=="XXXXXXXXOXXXXXXX") return "John 15";<br>    if (s=="XXXXXXXXXLXXXXXX") return "John 13";<br>    if (s=="XXXXXXXXXOXXXXXX") return "John 15";<br>    if (s=="XXXXXXXXXXLXXXXX") return "John 13";<br>    if (s=="XXXXXXXXXXOXXXXX") return "John 15";<br>    if (s=="XXXXXXXXXXXLXXXX") return "John 13";<br>    if (s=="XXXXXXXXXXXOXXXX") return "John 15";<br>    if (s=="XXXXXXXXXXXXLXXX") return "John 13";<br>    if (s=="XXXXXXXXXXXXOXXX") return "John 15";<br>    if (s=="XXXXXXXXXXXXXLXX") return "John 15";<br>    if (s=="XXXXXXXXXXXXXOXX") return "John 15";<br>    if (s=="XXXXXXXXXXXXXXLX") return "John 15";<br>    if (s=="XXXXXXXXXXXXXXOX") return "John 15";<br>    if (s=="XXXXXXXXXXXXXXXL") return "John 13";<br>    if (s=="XXXXXXXXXXXXXXXO") return "John 15";<br>    if (s=="XXXXXXXXXXXXXXX") return "John 15";<br>    n=LENGTH(s);<br>    for (int i=0;i&lt;=16;i++) W[i]=(i==0)?1:(W[i-1]*3);<br>    for (int i=0;i&lt;n;i++) A[i]=2;<br>    int pos1=-1,value1=-1,pos2=-1,value2=-1;<br>    int mset=0;<br>    for (int i=0;i&lt;n;i++) <br>      if (s[i]=='O')<br>      {<br>        mset+=W[i];<br>        if (pos1&lt;0)<br>          pos1=i,value1=1;<br>        else<br>          pos2=i,value2=1;<br>      }<br>      else if (s[i]=='L')<br>      {<br>        mset+=W[i]*2;<br>        if (pos1&lt;0)<br>          pos1=i,value1=2;<br>        else<br>          pos2=i,value2=2;<br>      }<br>    for (int set=W[n]-1;;set--)<br>    {<br>      if (set%1000000==0) printf("set = %d\n",set);<br>      if ((pos1&lt;0 || A[pos1]==value1) &amp;&amp; (pos2&lt;0 || A[pos2]==value2))<br>      {<br>        bool fd=false;<br>        int rwin=10000,rlose=-1;<br>        bool rdraw=false;<br>        for (int i=0;i&lt;n;i++) if (A[i]==0) for (int step=1;step&lt;=2;step++)<br>        {<br>          fd=true;<br>          A[i]=step;<br>          int newset=set+W[i]*step;<br>          if (isWin(newset,i)) <br>            checkmin(rwin,1);<br>          else<br>          {<br>            int t=(int)f[newset];<br>            if (t&lt;0) <br>              checkmin(rwin,-t+1);<br>            else if (t==0)<br>              rdraw=true;<br>            else<br>              checkmax(rlose,t+1);<br>          }<br>          A[i]=0;<br>        }<br>        if (!fd)<br>          f[set]=0;<br>        else<br>        {<br>          if (rwin&lt;10000) f[set]=rwin;<br>          else if (rdraw) f[set]=0;<br>          else f[set]=-rlose;<br>        }<br>      }<br>      if (set==0) break;<br>      int p;<br>      for (p=0;A[p]==0;A[p++]=2);<br>      A[p]--;<br>    }<br>    int result=f[mset];<br>    if (result&gt;0) return "John "+toString(result);<br>    else if (result==0) return "Draw";<br>    else return "Brus "+toString(-result);<br>  }<br>};<br></td>