<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class SettingTents {<br>    int gcd(int a, int b)<br>    {<br>        if (b == 0)<br>            return a;<br>        else<br>            return gcd(b, a % b);<br>    }<br><br>    public int countSites(int N, int M) {<br>        int res = 0;<br>        for (int dx = 1; dx &lt;= N; ++dx)<br>        {<br>            for (int dy = 0; dy &lt;= M; ++dy)<br>            {<br>                if (gcd(dx, dy) == 1)<br>                {<br>                    int cvx = 0;<br>                    int cvy = 0;<br>                    while (true)<br>                    {<br>                        cvx += dx;<br>                        cvy += dy;<br>                        if (cvx &gt; N || cvy &gt; M)<br>                            break;<br>                        int cux = 0;<br>                        int cuy = 0;<br>                        while (true)<br>                        {<br>                            cux += dy;<br>                            cuy -= dx;<br>                            if (Math.Abs(cux) &gt; N || Math.Abs(cuy) &gt; M)<br>                                break;<br>                            if (((cvx + cux) &amp; 1) != 0)<br>                                continue;<br>                            if (((cvy + cuy) &amp; 1) != 0)<br>                                continue;<br>                            int minx = Math.Min(0, Math.Min(cvx, Math.Min((cvx + cux) / 2, (cvx - cux) / 2)));<br>                            int maxx = Math.Max(0, Math.Max(cvx, Math.Max((cvx + cux) / 2, (cvx - cux) / 2)));<br>                            int miny = Math.Min(0, Math.Min(cvy, Math.Min((cvy + cuy) / 2, (cvy - cuy) / 2)));<br>                            int maxy = Math.Max(0, Math.Max(cvy, Math.Max((cvy + cuy) / 2, (cvy - cuy) / 2)));<br>                            int sx = maxx - minx;<br>                            int sy = maxy - miny;<br>                            if (sx &gt; N || sy &gt; M)<br>                                continue;<br>                            res += (N - sx + 1) * (M - sy + 1);<br>                        }<br>                    }<br>                }<br>            }<br>        }<br>        return res;<br>    }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>