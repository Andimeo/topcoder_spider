<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>typedef long long LL;<br>typedef vector &lt;string&gt; vs;<br>typedef vector &lt;int&gt; vi;<br>typedef vector &lt;LL&gt; vll;<br>typedef vector &lt;double&gt; vd;<br>typedef pair &lt;int,int&gt; pii;<br> <br> <br>class SettingTents {<br>public:<br>  int countSites(int, int);<br>};<br> <br>vector &lt;pii&gt; lis[30000];<br>bool collinear(const pii&amp; a, const pii&amp; b)<br>{<br>  return (a.first*b.second == a.second*b.first);<br>}<br> <br>int SettingTents::countSites(int n, int m) {<br>  <br>  int i, j;<br>  for (i=0; i&lt;30000; i++) lis[i].clear();  <br>  for (i=-100; i&lt;=100; i++) for (j=-100; j&lt;=100; j++)<br>  {<br>    int d = i*i + j*j;<br>    lis[d].push_back( make_pair(i,j) );<br>  }<br>  <br>  int k;<br>  int miny, minx, maxy, maxx;<br>  int y1, y2, y3, x1, x2, x3;<br>  <br>  int dx, dy;<br>  int res = 0;<br>  for (i=1; i&lt;=20000; i++)<br>  {<br>    for (j=0; j&lt;lis[i].size(); j++) for (k=j+1; k&lt;lis[i].size(); k++)<br>    {<br>      if (collinear(lis[i][j], lis[i][k])) continue;<br>      <br>      miny = minx = maxy = maxx = 0;<br>      <br>      y1 = lis[i][j].first; y2 = lis[i][k].first; y3 = y1+y2;<br>      x1 = lis[i][j].second; x2 = lis[i][k].second; x3 = x1+x2;<br>      miny &lt;?= y1; miny &lt;?= y2; miny &lt;?= y3;<br>      maxy &gt;?= y1; maxy &gt;?= y2; maxy &gt;?= y3;<br>      minx &lt;?= x1; minx &lt;?= x2; minx &lt;?= x3;<br>      maxx &gt;?= x1; maxx &gt;?= x2; maxx &gt;?= x3;<br>      <br>      dx = maxx-minx;<br>      dy = maxy-miny;<br>      if (dx &gt; m) continue;<br>      if (dy &gt; n) continue;<br>            <br>      res += (n-dy+1) * (m-dx+1);<br>    }<br>  }<br>  res /= 4;<br>  return res;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>