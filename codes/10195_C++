<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;cctype&gt;<br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cmath&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>using namespace std;<br><br>#define SZ(a) (int)(a).size()<br>#define FOR(i,a,b) for (int i=(a); i&lt;=(b); ++i)<br>#define REP(i,n) for (int i=0; i&lt;(n); ++i)<br><br>struct MagicWords {<br>  int go(string s) {<br>    int n=SZ(s);<br>    FOR(i,1,n) if (n%i==0&amp;&amp;s.substr(0,n-i)==s.substr(i,n-i)) return n/i;<br>    return 1;<br>  }<br>  int count( vector &lt;string&gt; S, int K ) {<br>    int n=SZ(S);<br>    int d[n]; REP(i,n) d[i]=i;<br>    int ans=0;<br>    do {<br>      string s;<br>      REP(i,n) s+=S[d[i]];<br>      if (go(s)==K) ++ans;<br>    } while (next_permutation(d,d+n));<br>    return ans;<br>  }<br>};<br><br><br>// Powered by FileEdit<br>// Powered by moj 4.11 [modified TZTester]<br>// Powered by CodeProcessor<br></td>