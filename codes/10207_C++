<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;queue&gt;<br> <br>using namespace std;<br> <br>#define fors(a, b) for(int a = 0; a&lt;(b); ++a)<br>#define forn(a, b, c) for(int a = (b); a&lt;(c); ++a)<br>#define forall(a, b) for(typeof(b.begin()) a = b.begin(); a != b.end(); ++a)<br>#define unsigned uns;<br>typedef long long ll;<br> <br>#define INF 2&lt;&lt;28<br> <br>class SimpleCardGame {<br>public:<br>  int whoIsTheWinner(vector &lt;int&gt;);<br>};<br> <br>int SimpleCardGame::whoIsTheWinner(vector &lt;int&gt; points) {<br>  <br>  int best, answ;<br>  best = answ = -1;<br>  <br>  fors(i, points.size())<br>  {<br>    if(points[i] &gt; 21) {continue;}<br>    if(points[i] &gt; best) {best = points[i]; answ = i;}<br>    else if(points[i] == best) {answ = -1;}<br>  }<br>  <br>  return answ;<br>}<br> <br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>