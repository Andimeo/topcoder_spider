<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Collections.Generic;<br><br>public class DNADeletion {<br>    const int MOD = 1000000007;<br><br>  public int differentProteins(string[] DNASequence, string[] codonTable) {<br>        StringBuilder builder = new StringBuilder();<br>        foreach (String x in DNASequence)<br>            builder.Append(x);<br>        string s = builder.ToString();<br>        Dictionary&lt;string, List&lt;string&gt;&gt; codons = new Dictionary&lt;string,List&lt;string&gt;&gt;();<br>        foreach (string x in codonTable) {<br>            string[] p = x.Split(' ');<br>            if (!codons.ContainsKey(p[1]))<br>                codons[p[1]] = new List&lt;string&gt;();<br>            codons[p[1]].Add(p[0]);<br>        }<br>        int n = s.Length;<br>        int[] am = new int[n + 1];<br>        am[0] = 1;<br>        for (int i = 1; i &lt;= n; ++i) {<br>            am[i] = 1;<br>            foreach (KeyValuePair&lt;string, List&lt;string&gt;&gt; pair in codons)<br>            {<br>                int left = -1;<br>                foreach (string code in pair.Value)<br>                {<br>                    int at = code.Length;<br>                    int j = i;<br>                    while (j &gt; 0 &amp;&amp; at &gt; 0)<br>                    {<br>                        --j;<br>                        if (s[j] == code[at - 1])<br>                            --at;<br>                    }<br>                    if (at == 0)<br>                        left = Math.Max(left, j);<br>                }<br>                if (left &gt;= 0)<br>                {<br>                    am[i] += am[left];<br>                    if (am[i] &gt;= MOD)<br>                        am[i] -= MOD;<br>                }<br>            }<br>        }<br>        return (am[n] + MOD - 1) % MOD;<br>    }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>