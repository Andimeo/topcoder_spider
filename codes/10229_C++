<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;map&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br> <br>#define MOD 1000000007<br>#define FORALL(s,i) for (typeof(s.begin()) i=s.begin(); i != s.end(); ++i)<br>typedef vector&lt;string&gt; VS;<br> <br>vector&lt;string&gt; Tokenize(string s, string ch) {<br>  vector&lt;string&gt; ret;<br>  for (int p = 0, p2; p &lt; s.size(); p = p2+1) {<br>    p2 = s.find_first_of(ch, p);<br>    if (p2 == -1) p2 = s.size();<br>    if (p2-p &gt; 0) ret.push_back(s.substr(p, p2-p));<br>  }<br>  return ret;<br>}<br> <br>string s;<br>map&lt;string, vector&lt;string&gt; &gt; cm;<br> <br>int memo[5000];<br>int doit(int x) {<br>  int&amp; ret = memo[x];<br>  if (ret != -1) return ret;<br>  ret = 1;<br>  FORALL(cm, it) {<br>    const VS&amp; poss = it-&gt;second;<br>    int mn = 5000;<br>    for (int i = 0; i &lt; poss.size(); i++) {<br>      const string&amp; c = poss[i];<br>      int cp = 0, j;<br>      for (j = x; j &lt; s.size() &amp;&amp; cp &lt; 3; j++)<br>        if (s[j] == c[cp]) cp++;<br>      mn &lt;?= j;<br>    }<br>    if (mn &lt;= s.size()-1) ret = (ret + doit(mn)) % MOD;<br>  }<br>  return ret;<br>}<br> <br>class DNADeletion {<br>public:<br>int differentProteins(vector &lt;string&gt; DNASequence, vector &lt;string&gt; ct) {<br>  int i, j, k, x, y, z;<br>  int ret;<br> <br>  s = "";<br>  cm.clear();<br>  for (i = 0; i &lt; DNASequence.size(); i++) s += DNASequence[i];<br>  s += "#";<br>  for (i = 0; i &lt; ct.size(); i++) {<br>    VS v = Tokenize(ct[i], " ");<br>    cm[v[1]].push_back(v[0]);<br>  }<br>  memset(memo, -1, sizeof(memo));<br>  return doit(0) - 1;<br>}<br> <br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>