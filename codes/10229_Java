<td class="problemText" colspan="8" valign="middle" align="left">
            import static java.lang.Math.*;<br>import static java.math.BigInteger.*;<br>import static java.util.Arrays.*;<br>import static java.util.Collections.*;<br>import java.math.*;<br>import java.util.*;<br><br>public class DNADeletion {<br>  public int differentProteins(String[] DNASequence, String[] codonTable) {<br>    StringBuilder sb = new StringBuilder();<br>    for (String s : DNASequence) sb.append(s);<br>    char[] dna = sb.toString().toCharArray();<br>    int n = dna.length, m = codonTable.length;<br>    long[] dp = new long[n + 1];<br>    dp[0] = 1;<br>    int[][] next = new int[n + 1][26];<br>    fill(next[n], n + 1);<br>    for (int i = n - 1; i &gt;= 0; i--) {<br>      next[i] = next[i + 1].clone();<br>      next[i][dna[i] - 'A'] = i + 1;<br>    }<br>    char[][] codon = new char[m][];<br>    int[] amino = new int[m];<br>    Map&lt;String, Integer&gt; map = new HashMap&lt;String, Integer&gt;();<br>    int k = 0;<br>    for (int i = 0; i &lt; m; i++) {<br>      String[] ss = codonTable[i].split(" ");<br>      codon[i] = ss[0].toCharArray();<br>      if (!map.containsKey(ss[1])) map.put(ss[1], k++);<br>      amino[i] = map.get(ss[1]);<br>    }<br>    for (int i = 0; i &lt; n; i++) {<br>      int[] is = new int[k];<br>      fill(is, n + 1);<br>      for (int j = 0; j &lt; m; j++) {<br>        int p = i;<br>        for (char c : codon[j]) if (p &lt;= n) p = next[p][c - 'A'];<br>        is[amino[j]] = min(is[amino[j]], p);<br>      }<br>      for (int j = 0; j &lt; k; j++) if (is[j] &lt;= n) {<br>        dp[is[j]] = (dp[is[j]] + dp[i]) % M;<br>      }<br>    }<br>    long res = 0;<br>    for (int i = 1; i &lt;= n; i++) res = (res + dp[i]) % M;<br>    return (int) res;<br>  }<br>  long M = 1000000007;<br>  void debug(Object...os) {<br>    System.err.println(deepToString(os));<br>  }<br>}<br></td>