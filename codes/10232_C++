<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;sstream&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;math.h&gt;<br>#include &lt;complex&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;ctype.h&gt;<br>#include &lt;queue&gt;<br>#include &lt;limits.h&gt;<br> <br>using namespace std;<br> <br>long long dp[8][2][20][20][20];<br>int n, m, l;<br>char A[20], B[20], C[20];<br>int ic, dc, rc;<br> <br>class TheSum {<br>  void update(int &amp;a, int b) {<br>    if (b &lt; 0)<br>      return;<br>    if (a &lt; 0 || a &gt; b)<br>      a = b;<br>  }<br>  long long doit(int i, int j, int k, int c, int mode) {<br>    long long &amp;ret = dp[mode][c][i][j][k];<br>    if (ret &gt;= 0)<br>      return ret;<br>    ret = INT_MAX;<br>    // try deleting digits<br>    if (i &lt; n)<br>      ret = min(ret, doit(i+1, j, k, c, mode) + dc);<br>    if (j &lt; m)<br>      ret = min(ret, doit(i, j+1, k, c, mode) + dc);<br>    if (k &lt; l)<br>      ret = min(ret, doit(i, j, k+1, c, mode) + dc);<br>    // try matching<br>    for (int x=0; x&lt;10; ++x)<br>      for (int y=0; y&lt;10; ++y) {<br>        for (int c2=0; c2&lt;2; ++c2) {<br>          int t = x + y + c2;<br>          if (t / 10 != c)<br>            continue;<br>          int z = t % 10;<br>          // now either insert or replace as necessary<br>          for (int mask=0; mask&lt;7; ++mask) {<br>            int i2 = i+1, j2 = j+1, k2 = k+1;<br>            int tcost = 0;<br>            if (mask&amp;1) {<br>              --i2;<br>              if (i || x || (mode&amp;1))<br>                tcost += ic;<br>            }<br>            else {<br>              if (i2 &gt; n || !(mode&amp;1) &amp;&amp; !x)<br>                continue;<br>              if (A[i]-'0' != x)<br>                tcost += rc;<br>            }<br>            if (mask&amp;2) {<br>              --j2;<br>              if (j || y || (mode&amp;2))<br>                tcost += ic;<br>            }<br>            else {<br>              if (j2 &gt; m || !(mode&amp;2) &amp;&amp; !y)<br>                continue;<br>              if (B[j]-'0' != y)<br>                tcost += rc;<br>            }<br>            if (mask&amp;4) {<br>              --k2;<br>              if (k || z || (mode&amp;4))<br>                tcost += ic;<br>            }<br>            else {<br>              if (k2 &gt; l || !(mode&amp;4) &amp;&amp; !z)<br>                continue;<br>              if (C[k]-'0' != z)<br>                tcost += rc;<br>            }<br>            int mode2 = mode;<br>            if (x)<br>              mode2 |= 1;<br>            if (y)<br>              mode2 |= 2;<br>            if (z)<br>              mode2 |= 4;<br>            ret = min(ret, doit(i2, j2, k2, c2, mode2) + tcost);<br>          }<br>        }<br>      }<br>    return ret;<br>  }<br>  public:<br>  int minCost(int a, int b, int c, int insCost, int delCost, int repCost) {<br>    ic = insCost;<br>    dc = delCost;<br>    rc = repCost;<br>    n = sprintf(A, "%d", a);<br>    m = sprintf(B, "%d", b);<br>    l = sprintf(C, "%d", c);<br>    memset(dp, -1, sizeof(dp));<br>    dp[7][0][n][m][l] = 0;<br>    return doit(0, 0, 0, 0, 0);<br>  }<br>};<br> <br> <br>// Powered by FileEdit<br></td>