<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define SIZE(X) ((int)(X.size()))<br>typedef long long int64;<br>#define two(X) (1&lt;&lt;(X))<br>#define contain(S,X) (((S)&amp;two(X))!=0)<br>template&lt;class T&gt; inline T gcd(T a,T b)<br>  {if(a&lt;0)return gcd(-a,b);if(b&lt;0)return gcd(a,-b);return (b==0)?a:gcd(b,a%b);}<br> <br>const int maxsize=10;<br>const int MODE=1000000007;<br> <br>class AvoidFour<br>{<br>public:<br>  int m;<br>  int A[maxsize][maxsize];<br>  int C[maxsize][maxsize];<br>  int R[maxsize][maxsize];<br>  int D[maxsize][maxsize];<br>  int G[maxsize][maxsize];<br>  int multiply(int a,int b)<br>  {<br>    return ((int64)a*(int64)b)%MODE;<br>  }<br>  void addIt(int &amp;a,int b)<br>  {<br>    a+=b;<br>    if (a&gt;=MODE) a-=MODE;<br>  }<br>  void delIt(int &amp;a,int b)<br>  {<br>    a-=b;<br>    if (a&lt;0) a+=MODE;<br>  }<br>  void multiply(int C[maxsize][maxsize],int A[maxsize][maxsize],int B[maxsize][maxsize])<br>  {<br>    for (int i=1;i&lt;=m;i++) for (int j=1;j&lt;=m;j++)<br>    {<br>      R[i][j]=0;<br>      for (int k=1;k&lt;=m;k++) if (A[i][k]&gt;0 &amp;&amp; B[k][j]&gt;0)<br>        addIt(R[i][j],multiply(A[i][k],B[k][j]));<br>    }<br>    for (int i=1;i&lt;=m;i++) for (int j=1;j&lt;=m;j++) C[i][j]=R[i][j];<br>  }<br>  void mypower(int64 e)<br>  {<br>    if (e==0)<br>    {<br>      for (int i=1;i&lt;=m;i++) for (int j=1;j&lt;=m;j++) C[i][j]=(int)(i==j);<br>      return;<br>    }<br>    if (e%2==0)<br>    {<br>      mypower(e/2);<br>      multiply(C,C,C);<br>    }<br>    else<br>    {<br>      mypower(e-1);<br>      multiply(C,C,A);<br>    }<br>  }<br>  void mypower2(int64 e)<br>  {<br>    if (e==0)<br>    {<br>      memset(D,0,sizeof(D));<br>      for (int i=1;i&lt;=m;i++) for (int j=1;j&lt;=m;j++) C[i][j]=(int)(i==j);<br>      return;<br>    }<br>    if (e%2==0)<br>    {<br>      mypower2(e/2);<br>      for (int i=1;i&lt;=m;i++) for (int j=1;j&lt;=m;j++)<br>      {<br>        G[i][j]=C[i][j];<br>        if (i==j) addIt(G[i][j],1);<br>      }<br>      multiply(D,D,G);<br>      multiply(C,C,C);<br>    }<br>    else<br>    {<br>      mypower2(e-1);<br>      multiply(C,C,A);<br>      for (int i=1;i&lt;=m;i++) for (int j=1;j&lt;=m;j++)<br>        addIt(D[i][j],C[i][j]);<br>    }<br>  }<br>  int solve(int64 n,int64 DD)<br>  {<br>    if (DD&gt;n) return 0;<br>    m=5;<br>    memset(A,0,sizeof(A));<br>    addIt(A[1][1],9);<br>    addIt(A[1][2],1);<br>    addIt(A[2][1],9);<br>    addIt(A[2][3],1);<br>    addIt(A[3][1],9);<br>    addIt(A[3][4],1);<br>    addIt(A[4][1],9);<br>    addIt(A[5][1],8);<br>    addIt(A[5][2],1);<br>    mypower(DD);<br>    memcpy(A,C,sizeof(A));<br>    mypower2(n/DD);<br>    int R=0;<br>    for (int i=1;i&lt;=m;i++) addIt(R,D[5][i]);<br>    return R;<br>  }<br>  int count(int64 n)<br>  {<br>    vector&lt;int64&gt; S;<br>    for (int64 p=44;p&lt;=n;p=p*10+4) S.push_back(p);<br>    int R=0;<br>    for (int set=0;set&lt;two(SIZE(S));set++)<br>    {<br>      int op=1;<br>      int64 D=1;<br>      for (int i=0;i&lt;SIZE(S);i++)<br>        if (contain(set,i))<br>        {<br>          int64 a=D;<br>          int64 b=S[i]/gcd(D,S[i]);<br>          if (b&gt;n/a+2)<br>          {<br>            D=n+1;<br>            break;<br>          }<br>          D=a*b;<br>          op=-op;<br>        }<br>      if (D&gt;n) <br>        continue;<br>      int t=solve(n,D);<br>      if (op==1)<br>        addIt(R,t);<br>      else<br>        delIt(R,t);<br>    }<br>    return R;<br>  }<br>};<br> <br> <br> <br>// Powered by PopsEdit<br></td>