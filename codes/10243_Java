<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.Arrays;<br> <br> <br>public class BirdsCounting {<br> <br>    int bn;<br>    int cpd;<br>    double[][] memo;<br> <br>    public double computeProbability(int birdsNumber, int caughtPerDay,<br>                                     int daysNumber, int birdsMarked) {<br>        bn = birdsNumber;<br>        cpd = caughtPerDay;<br>        memo = new double[daysNumber + 1][birdsMarked + 1];<br>        for (double[] d : memo) {<br>            Arrays.fill(d, -1d);<br>        }<br>        memo[0][0] = 1d;<br>        for (int i = 1; i &lt; memo[0].length; i++) {<br>            memo[0][i] = 0d;<br>        }<br>        double res = calc(daysNumber, birdsMarked);<br>        return res;<br>    }<br> <br>    private double calc(int dn, int bm) {<br>        if (memo[dn][bm] &gt;= 0)<br>            return memo[dn][bm];<br>        double r = 0d;<br>        for (int i = 0; i &lt;= cpd &amp;&amp; bm - i &gt;= 0; i++) {<br>            r += calc(dn - 1, bm - i) * c(bm - i, cpd - i) * c(bn - bm + i, i)<br>                    / c(bn, cpd);<br>        }<br>        memo[dn][bm] = r;<br>        return r;<br>    }<br> <br>    private double c(int n, int m) {<br>        if (m &gt; n)<br>            return 0;<br>        if (n &lt; 0 || m &lt; 0)<br>            return 0;<br>        if (m == n)<br>            return 1;<br>        double r = 1d;<br>        for (int i = 0; i &lt; m; i++) {<br>            r *= n - i;<br>            r /= i + 1;<br>        }<br>        return r;<br>    }<br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>