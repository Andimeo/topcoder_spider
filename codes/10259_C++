<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class MegaCoolNumbers {<br>public:<br>  int count(int, int);<br>};<br> <br>long long mod = 1000000007, dp[1100][11][10][23];<br> <br> <br>int MegaCoolNumbers::count(int N, int A) {<br>  for (int i = 1; i &lt; 10; i++)<br>    dp[1][10][i][1] = 1;<br>  <br>  if (A &gt; 21)<br>    return 0;<br>      <br>  for (int i = 1; i &lt; N; i++)    <br>    for (int diff = 0; diff &lt;= 10; diff++)<br>      for (int last = 0; last &lt;= 9; last++)<br>        for (int ca = 0; ca &lt;= A; ca++)<br>          for (int t = last; t &lt;= 9; t++)<br>          {<br>            if (t - last == diff || diff == 10)<br>              dp[i + 1][t - last][t][ca] = (dp[i + 1][t - last][t][ca] + dp[i][diff][last][ca]);<br>            else<br>              dp[i + 1][10][t][ca + 1] = (dp[i + 1][10][t][ca + 1] + dp[i][diff][last][ca]) % mod;<br>          }    <br>      <br>  long long res = 0;  <br>  for (int i = 0; i &lt;= 10; i++)<br>    for (int j = 0; j &lt; 10; j++)<br>      res = (res + dp[N][i][j][A]) % mod;<br>  return res;    <br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>