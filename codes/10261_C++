<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>using namespace std;<br> <br>#define FOR(i,a,b) for(int i = (int)a ; i &lt; (int)b ; ++i )<br>#define REP(i,n) FOR(i,0,n)<br>#define PB push_back<br>#define INF 1000000000<br>#define ALL(x) x.begin(),x.end()<br>#define SORT(x) sort(ALL(x))<br> <br>template&lt;class A, class B&gt; A cvt(B x) {stringstream s;s&lt;&lt;x;A r;s&gt;&gt;r;return r;}<br>typedef long long LL;<br>typedef vector&lt;int&gt; VI;<br> <br>class FallingPoints {<br>public:<br>  vector &lt;double&gt; getHeights(vector &lt;int&gt;, int);<br>};<br> <br>vector &lt;double&gt; FallingPoints::getHeights(vector &lt;int&gt; X, int R) {<br>      <br>      vector&lt;double&gt; ans;<br>      ans.PB(0.0);<br>      FOR(i,1,X.size()) {<br>        <br>        double tmp = R*R - ((X[i] - X[i-1])*(X[i] - X[i-1]));<br>        <br>        if(tmp &lt; 0) { ans.PB(0.0); continue; }<br>        double y = sqrt(tmp);<br>        ans.PB(y+ans[i-1]);<br>      }<br>      return ans;<br>}<br> <br> <br> <br> <br> <br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>