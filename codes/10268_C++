<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;numeric&gt;<br>using namespace std;<br>typedef long long ll;<br>typedef pair&lt;int,int&gt; pii;<br>#define F0(i,n) for (i = 0; i &lt; n; i++)<br>#define F1(i,n) for (i = 1; i &lt;= n; i++)<br>#define SZ(x) ((int)x.size())<br>const double pi = acos(-1.0);<br>const int inf = 1000000009;<br>int i, j, k, m, n, l;<br>int ans;<br>int a[10][10];<br><br>int isp(int x) {<br>  int r = sqrt(1.0*x);<br>  for (int d = r-2; d &lt;= r+2; d++)<br>    if (d * d == x) return 1;<br>  return 0;<br>}<br><br>struct FindingSquareInTable { <br>int findMaximalSquare(vector &lt;string&gt; t) { <br>  ans = -1; <br>  m = SZ(t); n = SZ(t[0]); F0(i,m) F0(j,n) a[i][j] = t[i][j]-'0';<br><br>  F0(i,m) F0(j,n)<br>    for (int di = -10; di &lt;= 10; di++)<br>      for (int dj = -10; dj &lt;= 10; dj++)<br>        if (di != 0 || dj != 0) {<br>          int x = i;<br>          int y = j;<br>          int s = 0;<br>          while (x&gt;=0 &amp;&amp; x&lt;m &amp;&amp; y&gt;=0 &amp;&amp; y&lt;n) {<br>            s = s * 10 + a[x][y];<br>            x += di;<br>            y += dj;<br>            if (isp(s) &amp;&amp; s &gt; ans) ans = s;<br>          }<br>        }<br>  <br><br>  return ans;<br>}  <br> <br>}; <br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>