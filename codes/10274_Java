<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.ArrayList;<br><br>public class Underprimes<br>{<br>  int INF = 987654321;<br><br>  public int howMany(int A, int B)<br>  {<br>    int res=0;<br>    for (int i=A; i&lt;=B; i++)<br>      if (isPrime(getPrimeFactors(i).size()))<br>        res++;<br>    return res;<br>  }<br><br>  ArrayList&lt;Integer&gt; getPrimeFactors(int n)<br>  { // use when n will be in int range<br>    if (n &lt; 0)<br>      n *= -1;<br>    if (n == 0 || n == 1)<br>      return null;<br>    ArrayList&lt;Integer&gt; factors = new ArrayList&lt;Integer&gt;();<br>    int c = n;<br>    while (c % 2 == 0)<br>    {<br>      factors.add(2);<br>      c /= 2;<br>    }<br>    int f = 3;<br>    while (f * f &lt;= c)<br>    {<br>      if (c % f == 0)<br>      {<br>        factors.add(f);<br>        c /= f;<br>      }<br>      else<br>        f += 2;<br>    }<br>    if (c &gt; 1)<br>      factors.add(c);<br>    return factors;<br>  }<br><br>  boolean isPrime(int n)<br>  {<br>    if (n == 2)<br>      return true;<br>    if (n &lt;= 1 || n % 2 == 0)<br>      return false;<br>    for (int check = 3; check * check &lt;= n; check += 2)<br>      if (n % check == 0)<br>        return false;<br>    return true;<br>  }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>