<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class TheGarland {<br>public:<br>  vector &lt;string&gt; find(vector &lt;string&gt;, int);<br>};<br> <br>map &lt;int, int&gt; m;<br>int inf = 1000000001;<br> <br>int count(int q1, int q2, int q3, int q4, int pq) {<br>  if (q1 == 0 &amp;&amp; q2 == 0 &amp;&amp; q3 == 0 &amp;&amp; q4 == 0) return 1;<br>  int hh = q1+q2*100+q3*10000+q4*1000000+pq*100000000, w = m[hh];<br>  if (w &gt; 0) return w-1;<br>  long long cur;<br>  if (q1 &gt; 0) cur = (long long)(q1-(pq==1))*count(q1-1,q2,q3,q4,0);<br>  else cur = 0;<br>  if (cur &gt; inf) cur = inf;<br>  w += cur;<br>  if (w &lt; inf) {<br>    if (q2 &gt; 0) cur = (long long)((q2-(pq==2))*2)*count(q1+1,q2-1,q3,q4,1);<br>    else cur = 0;<br>    if (cur &gt; inf) cur = inf;<br>    w += cur;<br>    if (w &lt; inf) {<br>      if (q3 &gt; 0) cur = (long long)((q3-(pq==3))*3)*count(q1,q2+1,q3-1,q4,2);<br>      else cur = 0;<br>      if (cur &gt; inf) cur = inf;<br>      w += cur;<br>      if (w &lt; inf) {<br>        if (q4 &gt; 0) cur = (long long)((q4-(pq==4))*4)*count(q1,q2,q3+1,q4-1,3);<br>        else cur = 0;<br>        if (cur &gt; inf) cur = inf;<br>        w += cur;<br>      }<br>    }<br>  }<br>  if (w &gt; inf) w = inf;<br>  m[hh] = w+1;<br>  return w;<br>}<br> <br>vector &lt;string&gt; ret, emp;<br>int sz[100], ok[100], num[100], co[100];<br> <br>vector &lt;string&gt; TheGarland::find(vector &lt;string&gt; sq, int u) {<br>  m.clear();<br>  int n = sq.size(), i, j, tmp, it, cur;<br>  for (i=0;i&lt;n;i++) {<br>    stringstream ss;<br>    string scol;<br>    ss &lt;&lt; sq[i];<br>    ss &gt;&gt; scol &gt;&gt; sz[i];<br>    if (scol[0] == 'B') co[i] = 1; else<br>    if (scol[0] == 'G') co[i] = 2; else<br>    if (scol[0] == 'R') co[i] = 3; else<br>    if (scol[0] == 'Y') co[i] = 4;<br>    num[i] = i;<br>  }<br>  for (i=0;i&lt;n;i++)<br>    for (j=i+1;j&lt;n;j++)<br>      if (sz[i] &lt; sz[j] || (sz[i] == sz[j] &amp;&amp; co[i] &gt; co[j])) {<br>        tmp = sz[i]; sz[i] = sz[j]; sz[j] = tmp;<br>        tmp = co[i]; co[i] = co[j]; co[j] = tmp;<br>        tmp = num[i]; num[i] = num[j]; num[j] = tmp;<br>      }<br>  ret.clear();<br>  for (i=0;i&lt;n;i++) ok[i] = 1;<br>  int v[10], ps, tw, g = -1;<br>  for (it=0;it&lt;n;it++) {<br>    for (i=0;i&lt;n;i++)<br>      if (ok[i] &amp;&amp; sz[i] != g) {<br>        v[0] = 0;<br>        v[1] = 0; v[2] = 0; v[3] = 0; v[4] = 0;<br>        ps = -1; tw = 0;<br>        ok[i] = 0;<br>        for (j=0;j&lt;n;j++)<br>          if (ok[j])<br>            if (sz[j] == ps) tw++; else {<br>              v[tw]++;<br>              tw = 1;<br>              ps = sz[j];<br>            }<br>        v[tw]++;<br>        tw = 0;<br>        for (j=0;j&lt;n;j++)<br>          if (ok[j] &amp;&amp; sz[j] == sz[i]) tw++;<br>        ok[i] = 1;<br>        cur = count(v[1],v[2],v[3],v[4],tw);<br>        if (u &lt;= cur) {<br>          ret.push_back(sq[num[i]]);<br>          ok[i] = 0;<br>          g = sz[i];<br>          break;<br>        }<br>        else u -= cur;<br>      }<br>    if (ret.size() != it+1) {<br>      emp.clear();<br>      return emp;<br>    }<br>  }<br>  return ret;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>