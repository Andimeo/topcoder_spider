<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br><br>public class DiamondMining {<br>  int n,m;<br>  public int largestDiamond(int R, int C, int seed, int threshold) {<br>    int res = 0;<br>    n = R; m = C;<br>    int[][] a = new int[n][m];<br>    long x = seed;<br>    for (int i=0; i&lt;n; i++)<br>      for (int j=0; j&lt;m; j++) {<br>        x = (x*25173 + 13849) % 65536;<br>        if (x&gt;=threshold) a[i][j] = 1;<br>      }<br>    int[][] l = new int[n][m];<br>    int[][] r = new int[n][m];<br><br>    for (int i=n-1; i&gt;=0; i--)<br>      for (int j=0; j&lt;m; j++) {<br>        if (a[i][j]==1) {<br>          if (j==0||i==n-1) l[i][j] = 1; else l[i][j] = 1+l[i+1][j-1]; <br>          if (j==m-1||i==n-1) r[i][j] = 1; else r[i][j] = 1+r[i+1][j+1]; <br>        }<br>      }<br>    <br>    for (int i=0; i&lt;n; i++) <br>      for (int j=0; j&lt;m; j++) {<br>        int k = Math.min(Math.min(l[i][j], r[i][j]),n-i);<br>        k = Math.min(k, j+1);<br>        k = Math.min(k, m-j+1);<br>        int ii = i+k-1;<br>        int jj = j-k+1;<br>        while (k&gt;res) {<br>          if (jj&gt;=0 &amp;&amp; ii&lt;n &amp;&amp; j+k-1&lt;m  &amp;&amp; r[ii][jj]&gt;=k &amp;&amp; l[ii][j+k-1]&gt;=k) {<br>            res = k;<br>            break;<br>          }<br>          k--;<br>          ii--;<br>          jj++;<br>        }<br>      }<br>    <br>    /*for (int i=0; i&lt;n; i++) {<br>      for (int j=0; j&lt;m; j++) <br>        System.err.print(a[i][j]);<br>      System.err.println();<br>    }*/<br>        <br>    System.err.println(res);<br>    return res;<br>  }<br><br>}<br></td>