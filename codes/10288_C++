<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;complex&gt;<br>#include &lt;queue&gt;<br>#include &lt;complex&gt;<br>#include &lt;ctime&gt;<br>#include &lt;ext/numeric&gt;<br> <br>using namespace std;<br>using namespace __gnu_cxx;<br> <br>#define PB push_back<br>#define ALL(x) (x).begin(),(x).end()<br>#define rep(i,x,n) for(int i = (x) ; i &lt; (n) ; ++i)<br>#define repit(it,x,n) for(__typeof(x) it = (x) ; it!=(n) ;++it)<br> <br>int dx[]={-1,1,0,0};<br>int dy[]={0,0,-1,1};<br>int vis[101][101];<br> <br>class MazeWanderingEasy {<br>public:<br>  int decisions(vector &lt;string&gt; maze) {<br>    int ei,ej,si,sj;<br>    int n = maze.size();<br>    int m = maze[0].size(),x,y,nx,ny;<br>    memset(vis,-1,sizeof(vis));<br>    rep(i,0,n)<br>      rep(j,0,m){<br>        if(maze[i][j]=='*')<br>          ei =i ,ej = j;<br>        if(maze[i][j]=='M')<br>          si=i,sj=j;<br>      }<br>    vis[si][sj]=0;<br>    cout&lt;&lt;si&lt;&lt;" "&lt;&lt;sj&lt;&lt;endl;<br>    queue&lt;int&gt; q;<br>    q.push(si);<br>    q.push(sj);<br>    while(!q.empty())<br>    {<br>      x = q.front();<br>      q.pop();<br>      y = q.front();<br>      q.pop();<br>      int r=0;<br>      if(maze[x][y]=='*')<br>        return vis[x][y];<br>      rep(i,0,4)<br>      {<br>        nx = dx[i]+x;<br>        ny = dy[i]+y;<br>        if(nx&lt;0||ny&lt;0||nx&gt;=n||ny&gt;=m||maze[nx][ny]=='X'||vis[nx][ny]!=-1)<br>          continue;<br>        r++;<br>      }<br>      if(r&gt;1)<br>        r=1;<br>      else<br>        r=0;<br>      rep(i,0,4)<br>      {<br>        nx= x+dx[i];<br>        ny = y+dy[i];<br>        if(nx&lt;0||ny&lt;0||nx&gt;=n||ny&gt;=m||maze[nx][ny]=='X')<br>          continue;<br>        if(vis[nx][ny]!=-1)<br>          continue;<br>        vis[nx][ny] = vis[x][y]+r;<br>        q.push(nx);<br>        q.push(ny);<br>      }<br>    }<br>    return -1;<br>  }<br>};<br> <br> <br> <br> <br> <br> <br>//Powered by KawigiEdit 2.1.7 (beta) modified by pivanof!<br></td>