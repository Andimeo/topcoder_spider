<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;vector&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br><br>using namespace std;<br><br>typedef long long int64;<br>typedef pair&lt;int,int&gt; pii;<br>#define Vt vector<br>#define Pb push_back<br>#define Sz size<br>const int N = 1005,INF = 1&lt;&lt;28;<br><br>inline int min(int a,int b){return a&lt;b?a:b;}<br>inline int max(int a,int b){return a&gt;b?a:b;}<br>inline void swap(int &amp;a,int &amp;b){int tmp;tmp=a;a=b;b=tmp;}<br>#define MP(A,B) make_pair((A),(B))<br>template&lt;class T&gt; void getmin(T&amp;a,T b){a&gt;b?a=b:a;}<br>template&lt;class T&gt; void getmax(T&amp;a,T b){a&lt;b?a=b:a;}<br>int n,m;<br>int64 g[1&lt;&lt;15][101];<br>class WickedTeacher<br>{<br>public:<br>    Vt&lt;int&gt; f,f2;<br><br>    string cheatProbability(vector &lt;string&gt; num, int K)<br>    {<br>        n=num.Sz();<br>        f.clear();f2.clear();<br>        for(int i=0;i&lt;n;i++)<br>        {<br>            int tmp = 0,t2=1;<br>            int k =num[i].Sz();<br>            for(int j=0;j&lt;k;j++)<br>            {<br>                tmp=tmp*10+(num[i][j]-'0'),tmp%=K;<br>                t2=t2*10;<br>                t2%=K;<br>            }<br>            f.Pb(tmp);<br>            f2.Pb(t2);<br>        }<br>        for(int i=0;i&lt;n;i++)<br>            cout&lt;&lt;f[i]&lt;&lt;' '&lt;&lt;f2[i]&lt;&lt;endl;<br>        memset(g,0,sizeof(g));<br>        g[0][0]=1;<br>        for(int i=0;i&lt;(1&lt;&lt;n);i++)<br>        {<br>            for(int j=0;j&lt;n;j++)<br>                if(!(i&amp;(1&lt;&lt;j)))<br>                {<br>                    for(int k=0;k&lt;K;k++)<br>                    {<br>                        g[i|(1&lt;&lt;j)][(k*f2[j]+f[j])%K]+=g[i][k];<br>                        //cout&lt;&lt;i&lt;&lt;' '&lt;&lt;k&lt;&lt;' '&lt;&lt;g[i][k]&lt;&lt;endl;<br>                    }<br>                }<br>        }<br>        int64 a1,a2;<br>        a1=a2=0;<br>        for(int i=0;i&lt;K;i++)<br>            a2+=g[(1&lt;&lt;n)-1][i];<br>        a1=g[(1&lt;&lt;n)-1][0];<br>        cout&lt;&lt;a1&lt;&lt;' '&lt;&lt;a2&lt;&lt;endl;<br>        int64 a3=gcd(a1,a2);<br>        if(a3)<br>        {<br>            a1/=a3;//cout&lt;&lt;n&lt;&lt;endl;<br>            a2/=a3;<br>        }<br><br>        string ans;<br>        ans.clear();<br>        if(a1==0)return "0/1";<br>        if(a2==0LL)ans+='0';<br>        else<br>            while(a2)ans+=a2%10+'0',a2/=10;<br><br>        ans+='/';<br>        if(a1==0LL)ans+='0';<br>        else<br>            while(a1)ans+=a1%10+'0',a1/=10;<br>        string res;<br>        int ln = ans.Sz();<br>        for(int i=ln-1;i&gt;=0;i--)<br>            res+=ans[i];<br>        return res;<br>    }<br>    int64 gcd(int64 a,int64 b)<br>    {<br>        if(a==0LL)return b;<br>        if(b==0LL)return a;<br>        while(b!=0LL)<br>        {<br>            int64 c = b;<br>            b = a%b;<br>            a = c;<br>        }<br>        return a;<br>    }<br>};<br></td>