<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>#include &lt;string&gt;<br>#include &lt;sstream&gt;<br>#include &lt;fstream&gt;<br>#include &lt;numeric&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstring&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;cctype&gt;<br>#include &lt;list&gt;<br>#include &lt;stack&gt;<br>using namespace std;<br> <br>#define fe(i,a,n) for(int i = a, __n = n; i &lt; __n; i++)<br>#define fi(i,a,n) for(int i = a, __n = n; i &lt;= __n; i++)<br>#define fr(i,n,a) for(int i = n, _final = a; i &gt;= _final; i--)<br>#define LL long long<br>#define ULL unsigned LL<br>#define ERRO 1e-10<br>#define all(v) v.begin(), v.end()<br>#define tr(i,s) for(typeof(s.begin()) i = s.begin(); i != s.end(); i++)<br>const double PI = 4*atan(1);<br>const double E = 2.7182818284590452353602874;<br> <br>double funcao(vector&lt;int&gt; d, double g) {<br>  double ret = 0;<br>  fe(i,0,d.size())<br>      ret += sqrt((2.0*d[i])/g);<br>  return ret;<br>}<br> <br>class IncredibleMachineEasy {<br>    public:<br>        double gravitationalAcceleration(vector &lt;int&gt; d, int T) {<br>      double low = 0, high = 1e15;<br>      double mid, dif;<br>      for(int i = 0; i &lt; 1000; i++) {<br>        mid = (low + high)/2.0;<br>        dif = (double)T - funcao(d, mid);<br>        if(dif &lt; 0)<br>          low = mid;<br>        else high = mid;<br>      }<br>      return mid;<br>        }<br>        <br> <br>};<br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>