<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class CubeOfDice {<br>  public long minimumSum(int N, int[] values) {<br>        int a = values[0];<br>        int b = values[1];<br>        int c = values[2];<br>        int d = values[3];<br>        int e = values[4];<br>        int f = values[5];<br>        if (N == 1)<br>        {<br>            int sum = 0;<br>            int max = 0;<br>            foreach (int x in values)<br>            {<br>                sum += x;<br>                max = Math.Max(max, x);<br>            }<br>            return sum - max;<br>        }<br>        else<br>        {<br>            long numCorners = 4;<br>            long numSides = 4 * (N - 2) + 4 * (N - 1);<br>            long numSingles = 5 * N * (long) N - 3 * numCorners - 2 * numSides;<br>            int sideScore = minOf(new int[] {a + b, a + c, a + d, a + e, f + b, f + c, f + d, f + e, b + d, d + e, e + c, c + b});<br>            int singleScore = minOf(values);<br>            int cornerScore = minOf(new int[] { a + d + e, a + d + b, a + c + e, a + c + b, f + d + e, f + d + b, f + c + e, f + c + b });<br>            return numCorners * cornerScore + numSides * sideScore + numSingles * singleScore;<br>        }<br>  }<br><br>    private int minOf(int[] p)<br>    {<br>        int res = int.MaxValue;<br>        foreach (int x in p)<br>            res = Math.Min(res, x);<br>        return res;<br>    }<br><br>  <br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>