<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;iostream&gt;<br>#include&lt;string&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;vector&gt;<br>#include&lt;math.h&gt;<br>#include&lt;set&gt;<br>#include&lt;queue&gt;<br>using namespace std;<br><br>class BidirectionalQueue<br>{<br>public:<br>  int extractElements(int n, vector &lt;int&gt; d)<br>  {<br>    int ss=0,i,j,k;<br>    int ha[1000],temp[1000];<br>    for(i=1;i&lt;=n;i++) ha[i]=i;<br>    int qh=n+1;<br>    for(i=0;i&lt;d.size();i++)<br>    {<br>      int nd=d[i];<br>      for(j=1;j&lt;qh;j++)<br>      {<br>        if(ha[j]==nd) break;<br>      }<br>      int l=j-1,r=qh-j;<br>      if(l&lt;r)<br>      {<br>        ss+=l;<br>        for(j=1;j&lt;qh;j++)<br>        {<br>          k=j-l;<br>          if(k&lt;=0)<br>          k=(k-1+qh)%qh;<br>          temp[k]=ha[j];<br>        }<br>        for(int j=1;j&lt;qh;j++) ha[j]=temp[j];<br>      }<br>      else<br>      {<br>        ss+=r;<br>        for(j=1;j&lt;qh;j++)<br>        {<br>          k=(j+r);<br>          if(k&gt;=qh) k=(k+1)%qh;<br>          temp[k]=ha[j];<br>        }<br>        for(int j=1;j&lt;qh;j++) ha[j]=temp[j];<br>      }<br>      for(j=1;j&lt;qh;j++) ha[j]=ha[j+1];<br>      qh--;<br>    }<br>    return ss;<br>  }<br><br>};<br></td>