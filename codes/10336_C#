<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class CircularShifts {<br>    public int maxScore(int N, int Z0, int A, int B, int M) {<br>        long[] Z = new long[2 * N];<br>        Z[0] = Z0 % M;<br>        for (int i = 1; i &lt; Z.Length; ++i)<br>            Z[i] = (Z[i-1]*A+B) % M;<br>        int[] x = new int[N];<br>        int[] y = new int[N];<br>        for (int i = 0; i &lt; N; ++i) {<br>            x[i] = (int) (Z[i] % 100);<br>            y[i] = (int) (Z[i+N] % 100);<br>        }<br>        int p2 = 8;<br>        while (p2 &lt; 2 * N)<br>            p2 &lt;&lt;= 1;<br>        int[] a = new int[p2];<br>        for (int i = 0; i &lt; N; ++i)<br>        {<br>            a[i] = x[i];<br>            a[i + N] = x[i];<br>        }<br>        int[] b = new int[p2];<br>        for (int i = 0; i &lt; N; ++i)<br>            b[i] = y[N - 1 - i];<br>        int[] c = fastmul(a, b);<br>        int res = 0;<br>        for (int i = N - 1; i &lt;= 2 * N - 1; ++i)<br>            res = Math.Max(res, c[i]);<br>        return res;<br>    }<br><br>    private int[] fastmul(int[] a, int[] b)<br>    {<br>        if (allZero(a) || allZero(b))<br>        {<br>            return new int[a.Length + b.Length];<br>        }<br>        if (a.Length &lt; 103)<br>        {<br>            return slowmul(a, b);<br>        }<br>        else<br>        {<br>            int k = a.Length / 2;<br>            int[] p = new int[k];<br>            int[] q = new int[k];<br>            int[] r = new int[k];<br>            int[] s = new int[k];<br>            Array.Copy(a, 0, p, 0, k);<br>            Array.Copy(a, k, q, 0, k);<br>            Array.Copy(b, 0, r, 0, k);<br>            Array.Copy(b, k, s, 0, k);<br>            int[] pr = fastmul(p, r);<br>            int[] qs = fastmul(q, s);<br>            int[] pplusq = new int[k];<br>            for (int i = 0; i &lt; k; ++i)<br>                pplusq[i] = p[i] + q[i];<br>            int[] rpluss = new int[k];<br>            for (int i = 0; i &lt; k; ++i)<br>                rpluss[i] = r[i] + s[i];<br>            int[] tmp = fastmul(pplusq, rpluss);<br>            for (int i = 0; i &lt; 2 * k; ++i)<br>                tmp[i] -= pr[i] + qs[i];<br>            int[] res = new int[4 * k];<br>            for (int i = 0; i &lt; 2 * k; ++i)<br>                res[i] += pr[i];<br>            for (int i = 0; i &lt; 2 * k; ++i)<br>                res[i + k] += tmp[i];<br>            for (int i = 0; i &lt; 2 * k; ++i)<br>                res[i + 2 * k] += qs[i];<br>            return res;<br>        }<br>    }<br><br>    private bool allZero(int[] a)<br>    {<br>        for (int i = 0; i &lt; a.Length; ++i)<br>            if (a[i] != 0)<br>                return false;<br>        return true;<br>    }<br><br>    private int[] slowmul(int[] a, int[] b)<br>    {<br>        int[] c = new int[a.Length + b.Length];<br>        for (int i = 0; i &lt; a.Length; ++i)<br>            if (a[i] != 0)<br>                for (int j = 0; j &lt; b.Length; j += 1)<br>                {<br>                    if (b[j] != 0)<br>                        c[i + j] += a[i] * b[j];<br>                }<br>        return c;<br>    }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>