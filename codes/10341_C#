<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class BestView {<br>    public int numberOfBuildings(int[] heights) {<br>        int res = 0;<br>        for (int i = 0; i &lt; heights.Length; ++i)<br>            res = Math.Max(res, doit(heights, i));<br>        return res;<br>    }<br><br>    private int doit(int[] heights, int at)<br>    {<br>        int res = 0;<br>        for (int i = 0; i &lt; heights.Length; ++i)<br>            if (i != at &amp;&amp; visible(heights, at, i))<br>                ++res;<br>        return res;<br>    }<br><br>    private bool visible(int[] heights, int at, int at2)<br>    {<br>        for (int i = Math.Min(at, at2) + 1; i &lt; Math.Max(at, at2); ++i)<br>        {<br>            if (obstacle(heights, Math.Min(at, at2), Math.Max(at, at2), i))<br>                return false;<br>        }<br>        return true;<br>    }<br><br>    private bool obstacle(int[] heights, int at, int at2, int at3)<br>    {<br>        return (at3 - at) * (long)(heights[at2] - heights[at]) - (at2 - at) * (long)(heights[at3] - heights[at]) &lt;= 0;<br>    }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>