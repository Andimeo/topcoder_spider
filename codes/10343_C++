<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;numeric&gt;<br>#include &lt;iostream&gt;<br>#include &lt;fstream&gt;<br>#include &lt;limits&gt;<br>#include &lt;functional&gt;<br>#include &lt;cmath&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cctype&gt;<br><br>using namespace std;<br><br> <br>class FriendScore<br>{<br>public:<br>  int highestScore(vector &lt;string&gt; friends)<br>  {<br>    int res = 0;<br><br>    for (int i = 0; i &lt; friends.size(); ++i)<br>    {<br>      int num = 0;<br>      for (int j = 0; j &lt; friends.size(); ++j)<br>      {<br>        bool isok = false;<br>        if (i != j)<br>        {<br>          if (friends[i][j] == 'Y')<br>            isok = true;<br><br>          for (int k = 0; k &lt; friends.size(); ++k)<br>          {<br>            if ((k != i) &amp;&amp; (k != j))<br>            {<br>              if ((friends[i][k] == 'Y') &amp;&amp; (friends[j][k] == 'Y'))<br>              {<br>                isok = true;<br>                break;<br>              }<br>            }<br>          }<br>        }<br><br>        if (isok)<br>          num++;<br>      }<br>      res = max(res, num);<br>    }<br><br>    return res;<br>  }<br>};<br></td>