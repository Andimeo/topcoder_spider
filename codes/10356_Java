<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class UnluckyIntervals {<br>    static class Lucky implements Comparable&lt;Lucky&gt; {<br>        public int x;<br>        public long amount;<br> <br>        Lucky(int x, long amount) {<br>            this.x = x;<br>            this.amount = amount;<br>        }<br> <br>        public int compareTo(Lucky o) {<br>            if (amount &lt; o.amount)<br>                return -1;<br>            else if (amount &gt; o.amount)<br>                return 1;<br>            else if (x &lt; o.x)<br>                return -1;<br>            else if (x &gt; o.x)<br>                return 1;<br>            else<br>                return 0;<br>        }<br>    }<br> <br>    public int[] getLuckiest(int[] luckySet, int n) {<br>        List&lt;Integer&gt; luckies = new ArrayList&lt;Integer&gt;();<br>        for (int x : luckySet) {<br>            luckies.add(x);<br>        }<br>        luckies.add(0);<br>        Collections.sort(luckies);<br>        luckySet = new int[luckies.size()];<br>        for (int i = 0; i &lt; luckies.size(); ++i)<br>            luckySet[i] = luckies.get(i);<br>        List&lt;Lucky&gt; candidates = new ArrayList&lt;Lucky&gt;();<br>        Set&lt;Integer&gt; was = new HashSet&lt;Integer&gt;();<br>        for (int i = 0; i &lt; luckySet.length; ++i) {<br>            if (luckySet[i] &gt; 0)<br>                candidates.add(new Lucky(luckySet[i], 0));<br>            if (i &lt; luckySet.length - 1) {<br>                for (int j = luckySet[i] + 1; j &lt;= luckySet[i] + 120 &amp;&amp; j &lt; luckySet[i + 1]; ++j)<br>                    candidates.add(new Lucky(j, (j - luckySet[i]) * (long) (luckySet[i + 1] - j) - 1));<br>            } else {<br>                for (int j = luckySet[i] + 1; j &lt;= luckySet[i] + 120; ++j)<br>                    candidates.add(new Lucky(j, Long.MAX_VALUE));<br>            }<br>            if (i &gt; 0) {<br>                for (int j = luckySet[i] - 1; j &gt;= luckySet[i] - 120 &amp;&amp; j &gt; luckySet[i - 1]; --j)<br>                    candidates.add(new Lucky(j, (j - luckySet[i - 1]) * (long) (luckySet[i] - j) - 1));<br>            }<br>        }<br>        Collections.sort(candidates);<br>        int[] res = new int[n];<br>        int j = 0;<br>        for (int i = 0; i &lt; candidates.size() &amp;&amp; j &lt; n; ++i) {<br>            res[j++] = candidates.get(i).x;<br>            if (j &gt; 1 &amp;&amp; res[j - 1] == res[j - 2])<br>                --j;<br>        }<br>        return res;<br>    }<br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>