<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br><br>public class FeudaliasBattle<br>{<br><br>    private double dist(double x1, double y1, double x2, double y2)<br>    {<br>        return Math.Sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));<br>    }<br><br>    public double getMinimumTime(int[] bX, int[] bY, int[] sX, int[] sY, int takeOffTime, int rechargeTime, int missileSpeed)<br>    {<br>        double ret;<br>        double p1, p2, p;<br>        double tot = (double)takeOffTime / 60.0;<br><br>        p1 = (tot + (dist(bX[0], bY[0], sX[0], sY[0]) / missileSpeed));<br>        p2 = (tot + (dist(bX[1], bY[1], sX[1], sY[1]) / missileSpeed));<br>        p = Math.Max(p1, p2);<br>        ret = p;<br><br>        p1 = (tot + (dist(bX[1], bY[1], sX[0], sY[0]) / missileSpeed));<br>        p2 = (tot + (dist(bX[0], bY[0], sX[1], sY[1]) / missileSpeed));<br>        p = Math.Max(p1, p2);<br>        ret = Math.Min(p, ret);<br><br>        p1 = (tot + (dist(bX[1], bY[1], sX[1], sY[1]) / missileSpeed));<br>        p2 = (tot + (dist(bX[0], bY[0], sX[1], sY[1]) / missileSpeed));<br><br>        p = Math.Max(p1, p2 + rechargeTime + tot);<br>        ret = Math.Min(p, ret);<br><br>        p = Math.Max(p2, p1 + rechargeTime + tot);<br>        ret = Math.Min(p, ret);<br><br>        p1 = (tot + (dist(bX[0], bY[0], sX[0], sY[0]) / missileSpeed));<br>        p2 = (tot + (dist(bX[1], bY[1], sX[0], sY[0]) / missileSpeed));<br><br>        p = Math.Max(p1, p2 + rechargeTime + tot);<br>        ret = Math.Min(p, ret);<br><br>        p = Math.Max(p2, p1 + rechargeTime + tot);<br>        ret = Math.Min(p, ret);<br><br><br>        return ret;<br>    }<br><br><br><br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>