<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br> <br>public class ErdosNumber<br>{<br>  public string[] calculateNumbers(string[] publications)<br>  {<br>      Queue&lt;string&gt; q = new Queue&lt;string&gt;();<br>      IDictionary&lt;string, int&gt; dic = new SortedDictionary&lt;string, int&gt;();<br>        foreach (string s in publications)<br>        {<br>             string[] tmp = s.Split(' ');<br>             foreach (string ss in tmp)<br>                 dic[ss] = int.MaxValue;<br>        }<br>      dic["ERDOS"] = 0;<br>      q.Enqueue("ERDOS");<br>        while (q.Count &gt; 0)<br>        {<br>            string deq = q.Dequeue();<br>            foreach (string s in publications)<br>            {<br>                string[] tmp = s.Split(' ');<br>                bool ok = false;<br>                foreach (string ss in tmp)<br>                    ok |= deq == ss;<br>                if (ok)<br>                {<br>                    foreach (string ss in tmp)<br>                        if (!dic.ContainsKey(ss) || dic[ss] == int.MaxValue)<br>                        {<br>                            dic[ss] = dic[deq] + 1;<br>                            q.Enqueue(ss);<br>                        }<br>                }<br>            }<br>        }<br>      string[] ans = new string[dic.Count];<br>      int id = 0;<br>        foreach (KeyValuePair&lt;string, int&gt; p in dic)<br>            if (p.Value != int.MaxValue)<br>                ans[id++] = string.Format("{0} {1}", p.Key, p.Value);<br>            else<br>                ans[id++] = string.Format("{0}", p.Key);<br>        return ans;<br>  }<br>}<br></td>