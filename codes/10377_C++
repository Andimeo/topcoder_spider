<td class="problemText" colspan="8" valign="middle" align="left">
            // another fine solution by misof<br>// #includes {{{<br>#include &lt;algorithm&gt;<br>#include &lt;numeric&gt;<br> <br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br> <br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cassert&gt;<br> <br>#include &lt;cmath&gt;<br>#include &lt;complex&gt;<br>using namespace std;<br>// }}}<br> <br>/////////////////// PRE-WRITTEN CODE FOLLOWS, LOOK DOWN FOR THE SOLUTION ////////////////////////////////<br> <br>// pre-written code {{{<br>#define FOREACH(it,c) for(__typeof((c).begin()) it=(c).begin();it!=(c).end();++it)<br>#define REP(i,n) for(int i=0;i&lt;(int)(n);++i)<br>#define SIZE(t) ((int)((t).size()))<br>vector&lt;string&gt; SPLIT( const string&amp; s, const string&amp; delim =" " ) { vector&lt;string&gt; res; string t; for ( unsigned int i = 0 ; i != s.size() ; i++ ) { if ( delim.find( s[i] ) != string::npos ) { if ( !t.empty() ) { res.push_back( t ); t = ""; } } else { t += s[i]; } } if ( !t.empty() ) { res.push_back(t); } return res; }<br>typedef vector&lt;string&gt; VS;<br>// }}}<br> <br>/////////////////// CODE WRITTEN DURING THE COMPETITION FOLLOWS ////////////////////////////////<br> <br>class ErdosNumber {<br>public:<br>  vector &lt;string&gt; calculateNumbers( vector &lt;string&gt; publications ) {<br>    set&lt;string&gt; names;<br>    FOREACH(it,publications) {<br>      VS V = SPLIT(*it);<br>      FOREACH(jt,V) names.insert(*jt);<br>    }<br>    vector&lt;string&gt; vnames(names.begin(),names.end());<br>    int N = SIZE(vnames);<br>    map&lt;string,int&gt; ID;<br>    REP(n,N) ID[ vnames[n] ] = n;<br>    vector&lt; vector&lt;int&gt; &gt; G(N, vector&lt;int&gt;(N,987654321));<br>    REP(n,N) G[n][n]=0;<br>    FOREACH(it,publications) {<br>      VS V = SPLIT(*it);<br>      int K = SIZE(V);<br>      REP(i,K) REP(j,i) {<br>        int x = ID[V[i]], y = ID[V[j]];<br>        G[x][y] = G[y][x] = 1;<br>      }<br>    }<br>    REP(k,N) REP(i,N) REP(j,N) G[i][j] = min( G[i][j], G[i][k] + G[k][j] );<br> <br>    int e = ID["ERDOS"];<br>    vector&lt;string&gt; answer;<br>    FOREACH(it,names) {<br>      stringstream ss;<br>      ss &lt;&lt; *it;<br>      if (G[e][ID[*it]] &lt; 1234) ss &lt;&lt; " " &lt;&lt; G[e][ID[*it]];<br>      answer.push_back(ss.str());<br>    }<br>    return answer;<br>  }<br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.11 [modified TZTester]<br>// Powered by CodeProcessor<br></td>