<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br> <br>public class PalindromeFactory {<br><br>    static string a;<br>    int[,] dp;<br>    bool[,] was;<br><br>    int solve(int i, int j)<br>    {<br>        int ans;<br>        if (j &lt; i) return 0;<br>        if (was[i, j]) return dp[i, j];<br>        if (i == j)<br>        {<br>            ans = 0;<br>        }<br>        else<br>        {<br>            if (a[i] == a[j])<br>            {<br>                ans = solve(i + 1, j - 1);<br>            }<br>            else<br>            {<br>                int a1 = 1 + solve(i, j - 1);<br>                int a2 = 1 + solve(i + 1, j);<br>                int a3 = 1 + solve(i + 1, j - 1);<br>                ans = Math.Min(a1, Math.Min(a2, a3));<br>            }<br>        }<br>        was[i, j] = true;<br>        dp[i, j] = ans;<br>        return ans;<br>    }<br><br>  public int getEditDistance(string initial) {<br>        int n = initial.Length;<br>        a = initial;<br>        dp = new int[51, 51];<br>        was = new bool[51, 51];<br>        int answer = solve(0, n - 1);<br>        for (int i = 0; i &lt; n - 1;  i++)<br>        {<br>            for (int j = i + 1; j &lt; n; j++)<br>            {<br>                    string s = initial.Substring(0, i) + initial[j] + initial.Substring(i + 1, j - i - 1) + initial[i] + initial.Substring(j + 1);<br>                    a = s;<br>                    dp = new int[51, 51];<br>                    was = new bool[51, 51];<br>                    int k = 1 + solve(0, n - 1);<br>                    answer = Math.Min(answer, k);<br>            }<br>        }<br>        return answer;<br>  }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>