<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class SquareFreeSets<br>{<br>  final int MOD = 1000000007;<br> <br>  public int countPerfect(int N, int K)<br>  {<br>    boolean [] F = new boolean [501];<br>    int [] P = new int [501];<br>    int pc = 0;<br> <br>    for (int i = 2; i &lt;= 500; i++)<br>      if (!F[i]) {<br>        P[pc] = i;<br>        pc++;<br>        for (int j = i + i; j &lt;= 500; j += i)<br>          F[j] = true;<br>      }<br> <br>    long [] nums = new long [256];<br> <br>    for (int i = 0; i &lt; 256; i++) {<br>      nums[i] = 1;<br>      for (int k = 0; k &lt; 8; k++)<br>        if ((i &amp; (1 &lt;&lt; k)) != 0) nums[i] *= P[k];<br>    }<br> <br>    if (K &gt; pc) K = pc;<br> <br>    int [][][] C = new int [pc + 1][K + 1][256];<br> <br>    C[0][0][0] = 1;<br> <br>    for (int j = 0; j &lt; pc; j++) {<br>      for (int l = 0; l &lt;= K; l++) {<br>        for (int pr = 0; pr &lt; 256; pr++) {<br>          C[j + 1][l][pr] += C[j][l][pr];<br>          if (C[j + 1][l][pr] &gt;= MOD) C[j + 1][l][pr] -= MOD;<br>        }<br>        if (l &lt; K) {<br>          for (int pr = 0; pr &lt; 256; pr++) {<br>            int bs = 1 &lt;&lt; Math.min (j, 8);<br>            int nvv = 0;<br>            if (j &lt; 8) nvv |= 1 &lt;&lt; j;<br>            for (int vv = pr; vv &lt; bs; vv = (vv + 1) | pr) {<br>              int im = vv &amp; ~pr;<br>              if (nums[im] * P[j] &lt;= N) {<br>                C[j + 1][l + 1][vv | nvv] += C[j][l][pr];<br>                if (C[j + 1][l + 1][vv | nvv] &gt;= MOD) C[j + 1][l + 1][vv | nvv] -= MOD;<br>              }<br>            }<br>          }<br>        }<br>      }<br>    }<br> <br>    int sum = 0;<br>    for (int pr = 0; pr &lt; 256; pr++)<br>      for (int l = 1; l &lt;= K; l++) {<br>        sum += C[pc][l][pr];<br>        if (sum &gt;= MOD) sum -= MOD;<br>    }<br> <br>    return sum;<br>  }<br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>