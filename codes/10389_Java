<td class="problemText" colspan="8" valign="middle" align="left">
            import java.math.BigInteger;<br>import static java.lang.Math.*;<br><br>public class StrongEconomy {<br>  public void p(Object s){System.out.println(s);}<br>  public long earn(long n, long k, long price, long target) {<br>    long f = n;<br>    long s = k;<br>    long g = 0;<br>    long t = 0;<br>    long best = Long.MAX_VALUE;<br>    <br>    if(BigInteger.valueOf(n).multiply(BigInteger.valueOf(k)).compareTo(BigInteger.valueOf(target)) &gt;= 0)<br>    {<br>      return 1;<br>    }<br>    <br>    while(true)<br>    {<br>      best = min(best,t+ru(target-g,f*s));<br>      if(f*s &gt; target)<br>        break;<br>      long dt = max(0,ru(price-g,f*s));<br>      <br>      g += dt*f*s;<br>      t += dt;<br>      g -= price;<br>      <br>      if(f &lt; s)<br>        f++;<br>      else<br>        s++;<br>      <br>    }    <br>    <br>    return best;<br>  }<br>  public long ru(long a, long b)<br>  {<br>    return (a+b-1)/b;<br>  }<br>  <br>}<br></td>