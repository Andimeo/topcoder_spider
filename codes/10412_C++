<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class PlanarGraphShop {<br>public:<br>  int bestCount(int);<br>};<br> <br>int f[50010];<br> <br>int PlanarGraphShop::bestCount(int N) {<br>  int i, j, x, y, z, p;<br>  for (i=1;i&lt;=N;i++) f[i] = 1000000000;<br>  f[0] = 0;<br>  for (x=1;x&lt;=36;x++) {<br>    if (x == 1) y = 0; else<br>    if (x == 2) y = 1;<br>    else y = 3*x-6;<br>    for (z=0;z&lt;=y;z++) {<br>      p = x*x*x+z*z;<br>      for (j=0;j&lt;=N-p;j++)<br>        if (f[j]+1 &lt; f[j+p]) f[j+p] = f[j]+1;<br>    }<br>  }<br>  return f[N];<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>