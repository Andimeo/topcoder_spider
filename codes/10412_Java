<td class="problemText" colspan="8" valign="middle" align="left">
            import static java.lang.Math.*;<br>import static java.math.BigInteger.*;<br>import static java.util.Arrays.*;<br>import static java.util.Collections.*;<br>import java.math.*;<br>import java.util.*;<br><br>public class PlanarGraphShop {<br>  int INF = 1 &lt;&lt; 29;<br>  public int bestCount(int N) {<br>    int[] dp = new int[N + 1];<br>    for (int i = 0; i &lt;= N; i++) dp[i] = i;<br>    for (int i = 8; i &lt;= N; i++) dp[i] = dp[i - 8] + 1;<br>    for (int i = 9; i &lt;= N; i++) dp[i] = min(dp[i], dp[i - 9] + 1);<br>    for (int v = 3; v * v * v &lt;= N; v++) {<br>      for (int e = 0; e &lt;= 3 * v - 6 &amp;&amp; v * v * v + e * e &lt;= N; e++) {<br>        int d = v * v * v + e * e;<br>        for (int i = d; i &lt;= N; i++) {<br>          if (dp[i] &gt; dp[i - d] + 1) dp[i] = dp[i - d] + 1;<br>        }<br>      }<br>    }<br>    return dp[N];<br>  }<br>  void debug(Object...os) {<br>    System.err.println(deepToString(os));<br>  }<br>}<br></td>