<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br><br>public class CantorDust {<br>    public int occurrencesNumber(String[] pattern, int time) {<br>      String s = get(time);<br>      int hei = pattern.length;<br>      int wid = pattern[0].length();<br>      boolean[] x = new boolean[wid];<br>      boolean[] y = new boolean[hei];<br>      boolean xs = false;<br>      for (int i = 0; i &lt; hei; i++) {<br>        for (int j = 0; j &lt; wid; j++) {<br>          if (pattern[i].charAt(j) == 'X') {<br>            xs = x[j] = y[i] = true;<br>          }<br>        }<br>      }<br>      for (int i = 0; i &lt; hei; i++) {<br>        for (int j = 0; j &lt; wid; j++) {<br>          if ((pattern[i].charAt(j) == 'X') ^ (x[j] &amp;&amp; y[i])) {<br>            return 0;<br>          }<br>        }<br>      }<br>      if (xs) {<br>          return find(x, s) * find(y, s);<br>      } else {<br>        return (find(x, s) * (s.length() - hei + 1) + find(y, s) * (s.length() - wid + 1) - find(x, s) * find(y, s));<br>      }<br>    }<br><br>    private int find(boolean[] x, String s) {<br>      int res = 0;<br>      for (int i = 0; i &lt;= s.length() - x.length; i++) {<br>        boolean good = true;<br>        for (int j = 0; j &lt; x.length; j++) {<br>          if ((x[j]) ^ (s.charAt(i + j) == 'X')) {<br>            good = false;<br>          }<br>        }<br>        if (good) res++;<br>      }<br>    return res;<br>  }<br><br>  private String get(int time) {<br>      if (time == 0) {<br>        return "X";<br>      }<br>      String s = get(time - 1);<br>      char[] c = new char[s.length()];<br>      Arrays.fill(c, '.');<br>      String t = new String(c);<br>      return s + t + s;<br>  }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>