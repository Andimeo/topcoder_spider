<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class PrefixFreeCode {<br>public:<br>  int minCost(int, vector &lt;int&gt;);<br>};<br> <br>multiset &lt;int&gt; s;<br>multiset &lt;int&gt;::iterator iter;<br> <br>int PrefixFreeCode::minCost(int N, vector &lt;int&gt; c) {<br>  int n = c.size(), cur = 0, ans = 1000000000, it, x, i;<br>  s.clear();<br>  s.insert(0);<br>  while ((*(s.begin()))*N &lt; ans) {<br>    if (s.size() == N)<br>      if (cur &lt; ans) ans = cur;<br>    x = *(s.begin());<br>    cur -= x;<br>    s.erase(s.begin());<br>    for (i=0;i&lt;n;i++) {<br>      cur += x+c[i];<br>      s.insert(x+c[i]);<br>    }<br>    while (s.size() &gt; N) {<br>      iter = s.end();<br>      iter--;<br>      cur -= (*iter);<br>      s.erase(iter);<br>    }<br>  }<br>  return ans;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>