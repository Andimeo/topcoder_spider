<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstring&gt;<br>#include &lt;vector&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;cmath&gt;<br>#include &lt;complex&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cassert&gt;<br>#include &lt;queue&gt;<br>#include &lt;cctype&gt;<br>using namespace std;<br> <br>const int max_n = 128, max_k = 32;<br> <br>struct TheProduct {<br> <br>  long long max_c[max_n][max_k], min_c[max_n][max_k];<br> <br>  long long maxProduct(vector&lt;int&gt; a, int k, int max_d) {<br>    long long oo = 0;<br>    for (int i = 0; i &lt; 63; i++)<br>      oo = oo * 2 + 1;<br>    int n = a.size();<br>    for (int i = 0; i &lt; n; i++) {<br>      max_c[i][1] = a[i];<br>      min_c[i][1] = a[i];<br>    }<br>    for (int j = 2; j &lt;= k; j++) {<br>      for (int i = 0; i &lt; n; i++) {<br>        max_c[i][j] = -oo;<br>        min_c[i][j] = oo;<br>        if (i + 1 &lt; j)<br>          continue;<br>        for (int i1 = 0; i1 &lt; i; i1++) {<br>          if (min_c[i1][j - 1] == oo)<br>            continue;<br>          if (i - i1 &gt; max_d)<br>            continue;<br>          max_c[i][j] = max(max_c[i][j], a[i] * max_c[i1][j - 1]);<br>          max_c[i][j] = max(max_c[i][j], a[i] * min_c[i1][j - 1]);<br>          min_c[i][j] = min(min_c[i][j], a[i] * max_c[i1][j - 1]);<br>          min_c[i][j] = min(min_c[i][j], a[i] * min_c[i1][j - 1]);<br>        }<br>      }<br>    }<br>    long long ans = -oo;<br>    for (int i = 0; i &lt; n; i++) {<br>      if (max_c[i][k] &gt; ans)<br>        ans = max_c[i][k];<br>    }<br>    return ans;<br>          <br>  }<br>};<br></td>