<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;iostream&gt;<br>#include &lt;numeric&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cctype&gt;<br>using namespace std;<br><br>struct TheBoredJohn{<br>  long long killMonsters(int n, long long k, vector &lt;string&gt; missing);<br>};<br>const int maxn=4444444;<br>long long cnt[maxn];<br>map&lt;int,long long&gt; M;<br>map&lt;pair&lt;int,int&gt;,int&gt; M2;<br>int A[maxn];<br>long long TheBoredJohn::killMonsters(int n, long long k, vector &lt;string&gt; missing){<br>  n--;<br>  for(int i=1;i&lt;=n;i++)<br>    A[i]=i;<br>  for(int i=1;i&lt;=n;i++)<br>    for(int j=i+i;j&lt;=n;j+=i)<br>      A[j]-=A[i];<br>  M.clear();<br>  for(int i=2;i&lt;=n;i++)<br>    M[n/i]+=A[i]*2;<br>  M[n]+=3;<br>  string S=accumulate(missing.begin(),missing.end(),string());<br>  replace(S.begin(),S.end(),',',' ');<br>  istringstream ssin(S);<br>  M2.clear();<br>  for(int x,y;ssin&gt;&gt;x&gt;&gt;y;){<br>    int g=__gcd(x,y);<br>    x/=g,y/=g;<br>    M2[make_pair(x,y)]++;<br>  }<br>  for(map&lt;pair&lt;int,int&gt;,int&gt;::iterator it=M2.begin();it!=M2.end();++it){<br>    int x=it-&gt;first.first,y=it-&gt;first.second;<br>    int points;<br>    if(x==0||x==y||y==0)<br>      points=n;<br>    else<br>      points=n/(x&gt;?y);<br>    M[points]--;<br>    M[points-it-&gt;second]++;<br>  }<br>  long long ret=0;<br>  for(map&lt;int,long long&gt;::reverse_iterator it=M.rbegin();it!=M.rend();++it){<br>    long long cap=k&lt;?it-&gt;second;<br>    k-=cap;<br>    ret+=it-&gt;first*cap;<br>  }<br>  return ret;<br>}<br><br><br>// Powered by FileEdit<br></td>