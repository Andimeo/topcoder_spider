<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;queue&gt;<br><br>using namespace std;<br><br>template&lt; class T &gt; string tos(T x) {stringstream s; s &lt;&lt; x; return s.str();}<br>template&lt; class T &gt; string tos2(T x, int n) {string s = tos(x); return string(max(0, (int)(n - s.size())), '0') + s;}<br><br>class BoredPhilosophers { <br>public: <br>  vector &lt;int&gt; simulate(vector &lt;string&gt; text, int N)  { <br>    string str;<br>    for (int i=0;i&lt;text.size();i++)<br>      str += text[i];<br>    vector&lt; string &gt; words;<br>    istringstream sin(str);<br>    string t;<br>    while (sin &gt;&gt; t)<br>      words.push_back(t);<br>    map&lt; string, bool &gt; p;<br>    vector&lt; int &gt; ret;<br>    for (int i=1;i&lt;=N;i++) {<br>      p.clear();<br>      int ps = 0;<br>      for (int j=0;j+i-1&lt;words.size();j++) {<br>        string now;<br>        for (int k=0;k&lt;i;k++)<br>          now += words[j+k]+" ";<br>        if (p.find(now) == p.end()) {<br>          ps++;<br>          p[now] = true;<br>        }<br>      }<br>      ret.push_back(ps);<br>    }<br>    return ret;<br><br>  } <br>  <br> <br>}; <br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>