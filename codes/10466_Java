<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br> <br> <br>public class EqualTowers<br>{<br>  public int height(int[] bricks)<br>  {<br>    int max = 0;<br>    for (int i= 0; i &lt; bricks.length; i++)  {<br>      max += bricks[i];      <br>    }<br>    int[] A = new int[2 * max + 1];<br>    int[] B = new int[2 * max + 1];<br>    for (int i =0; i &lt; A.length; i++) {<br>      A[i] = B[i] = -1;<br>    }<br>    A[max + 0] = 0;<br>    B[max + 0] = 0;<br>    for (int i = 0; i &lt; bricks.length; i++) {<br>      for (int j = 0; j &lt; A.length; j++) {<br>        if (A[j] &gt;= 0 &amp;&amp; B[j - bricks[i]]&lt; A[j] + bricks[i]) {<br>          B[j - bricks[i]] = A[j] + bricks[i];<br>        }<br>        if (A[j] &gt;= 0 &amp;&amp; B[j + bricks[i]] &lt; A[j] + bricks[i]) {<br>          B[j + bricks[i]] = A[j] + bricks[i];<br>        }      <br>      }<br>      for (int j = 0; j &lt; A.length; j++) {<br>        A[j]= B[j];<br>      }      <br>    }  <br>  <br>    if (A[max] == 0) {<br>      return -1;<br>    }<br>    return A[max] / 2;<br>    <br>  }<br>  <br> <br>}<br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>