<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;string&gt;<br>#include &lt;sstream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#define _USE_MATH_DEFINES<br>#include &lt;math.h&gt;<br>#include &lt;assert.h&gt;<br>using namespace std;<br><br>typedef long long LL;<br><br>class PaperAndPaintEasy<br>{<br>public:<br>    long long computeArea(int width, int height, int xfold, int cnt, int x1, int y1, int x2, int y2)<br>    {<br>    int w = (2 * xfold &gt; width) ? (width - xfold) : xfold;<br>    int x = 0;<br>    if (x1 &lt; w)<br>    {<br>      if (x2 &lt; w) x = (x2 - x1) * 2;<br>      else x = (w - x1) * 2 + (x2 - w);<br>    }<br>    else<br>      x = x2 - x1;<br>    return LL(width) * height - LL(x) * (cnt + 1) * (y2 - y1);<br>    }<br>};<br></td>