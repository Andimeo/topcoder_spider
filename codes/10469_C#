<td class="problemText" colspan="8" valign="middle" align="left">
            using System; <br>using System.Collections; <br>using System.Collections.Generic; <br>using System.Collections.Specialized; <br>using System.Text; <br>using System.Text.RegularExpressions; <br> <br>public class PerfectPermutationHard {<br><br><br>    int n;<br>    public int[] reorder(int[] P) <br>    {<br>        List&lt;List&lt;int&gt;&gt; list = new List&lt;List&lt;int&gt;&gt;();<br>        n = P.Length;<br><br>        bool[] v = new bool[n];<br>        for (int i = 0; i &lt; n; i++)<br>        {<br>            if (v[i]) continue;<br>            int j = i;<br>            List&lt;int&gt; t = new List&lt;int&gt;();<br>            t.Add(i);<br>            v[i] = true;<br>            while (P[j] != i)<br>            {<br>                j = P[j];<br>                t.Add(j);<br>                v[j] = true;<br>            }<br>            list.Add(t);<br>        }<br>        if (list.Count == 1)<br>            return P;<br>        List&lt;int&gt; ret = new List&lt;int&gt;();<br>        int k = 0;<br>        for (int i = 0; i &lt; list[0].Count; i++)<br>        {<br>            if (list[1][0] &lt; list[0][i])<br>            {<br>                k = i;<br>                break;<br>            }<br>            ret.Add(list[0][i]);<br>        }<br>        for (int i = 1; i &lt; list.Count; i++)<br>        {<br>            ret.AddRange(list[i]);<br>        }<br>        for (int i = k; i &lt; list[0].Count; i++)<br>        {<br>            ret.Add(list[0][i]);<br>        }<br>        int[] ans = new int[n];<br>        for (int i = 0; i &lt; n; i++)<br>        {<br>            ans[ret[i]] = ret[(i + 1) % n];<br>        }<br>        return ans;<br><br>    }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>