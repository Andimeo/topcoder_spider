<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class PerfectPermutationHard {<br>  public int[] reorder(int[] P) {<br>    int n = P.length;<br>    int[] c = new int[n];<br>    boolean[] b = new boolean[n];<br>    int uk = 0;<br>    for (int i=0; i&lt;n; i++) {<br>      if (!b[i]) {<br>        b[i] = true;<br>        c[uk++] = -1-i;<br>        int k = P[i];<br>        while (k != i) {<br>          b[k] = true;<br>          c[uk++] = k;<br>          k = P[k];<br>        }<br>      }<br>    }<br>    <br>    <br>    Arrays.fill(b, false);<br>    int[] cc = new int[n];<br>    <br>    int ff = 0;<br>    <br>    int k = 0;<br>    uk = 0;<br>    boolean flag = false;<br>    while (k &lt; n) {<br>      if ((ff &gt; 1)||(flag)||(c[k] &lt; 0)) {++ff; b[k] = true; cc[uk++] = c[k++];}<br>      else {<br>        int l = k+1;<br>        while ((l &lt; n)&amp;&amp;(c[l] &gt; 0)) {++l;}<br>        if ((l &lt; n)&amp;&amp;(-c[l]-1 &lt; c[k])) {k = l; flag = true;}<br>        else {b[k] = true; cc[uk++] = c[k++];}<br>      }<br>    }<br>    <br>    for (int i=0; i&lt;n; i++) {<br>      if (!b[i]) {cc[uk++] = c[i];}<br>    }<br>    <br>    c = cc;<br>    <br>    int[] res = new int[n];<br>    if (c[0] &lt; 0) {c[0] = -c[0]-1;}<br>    for (int i=1; i&lt;n; i++) {<br>      if (c[i]&lt;0) {c[i] = -c[i]-1;}<br>      res[c[i-1]] = c[i];<br>    }<br>    res[c[n-1]] = 0;<br>    return res;<br>  }<br>}<br></td>