<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;string&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>using namespace std;<br> <br>#define REP(i,n) for(int i=0;i&lt;(n);++i)<br>#define FOR(i,a,b) for(int i=(a);i&lt;=(b);++i)<br>#define FORD(i,a,b) for(int i=(a);i&gt;=(b);--i)<br>#define FOREACH(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();++i)<br>#define ALL(x) (x).begin(),(x).end()<br>#define PB push_back<br>#define zero(x) memset(x,0,sizeof(x))<br><br>const int INF = 999999999;<br><br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br>template&lt;class T&gt; inline int size(const T&amp;c) { return c.size(); }<br><br>string odwroc(string a) {<br>    int n = size(a);<br>    REP(i,n/2) {<br>        char tmp = a[i];<br>        a[i] = a[n-i-1];<br>        a[n-i-1] = tmp;<br>    }<br>    return a;<br>}<br><br>struct StringMult<br>{ <br>    string times(string sFactor, int iFactor) <br>    { <br>        string ret;<br>        if( sFactor=="" || iFactor==0 ) return "";<br>        if( iFactor&lt;0 ) sFactor = odwroc(sFactor);<br>        iFactor = abs(iFactor);<br>        REP(i,iFactor) ret += sFactor;<br>        return ret;   <br>    } <br>    <br> <br>}; <br><br>    <br>    <br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>