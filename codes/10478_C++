<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class FoldingMaze {<br>public:<br>  int solve(vector &lt;string&gt;, vector &lt;string&gt;);<br>};<br> <br>int g[55][55][55], was[55][55][55];<br>char a[55][55][55];<br>int dx[4] = {-1,1,0,0};<br>int dy[4] = {0,0,1,-1};<br>int x[200010], y[200010], z[200010], km[200010];<br> <br>int FoldingMaze::solve(vector &lt;string&gt; f, vector &lt;string&gt; b) {<br>  int n = f.size(), m = f[0].length(), i, j, fw, e, xk, yk;<br>  for (fw=0;fw&lt;m;fw++)<br>    for (i=0;i&lt;n;i++)<br>      for (j=0;j&lt;m;j++)<br>        if (fw*2 &lt;= m) {<br>          if (j &lt; fw) {<br>            g[fw][i][j] = 0;<br>            a[fw][i][j] = '#';<br>          } else<br>          if (j &lt; fw*2) {<br>            g[fw][i][j] = 2;<br>            a[fw][i][j] = b[i][m+j-fw*2];<br>          } else {<br>            g[fw][i][j] = 1;<br>            a[fw][i][j] = f[i][j];<br>          }<br>        } else {<br>          if (j &gt;= fw) {<br>            g[fw][i][j] = 0;<br>            a[fw][i][j] = '#';<br>          } else<br>          if (j &gt;= 2*fw-m) {<br>            g[fw][i][j] = 2;<br>            a[fw][i][j] = b[i][m+j-fw*2];<br>          } else {<br>            g[fw][i][j] = 1;<br>            a[fw][i][j] = f[i][j];<br>          }<br>        }<br>  for (i=0;i&lt;n;i++)<br>    for (j=0;j&lt;m;j++)<br>      if (f[i][j] == 'S') {<br>        x[1] = i;<br>        y[1] = j;<br>      }<br>  z[1] = 0; km[1] = 0;<br>  memset(was,0,sizeof(was));<br>  was[z[1]][x[1]][y[1]] = 1;<br>  i = 1; e = 1;<br>  while (i &lt;= e) {<br>    for (j=0;j&lt;4;j++) {<br>      xk = x[i]+dx[j];<br>      yk = y[i]+dy[j];<br>      if (xk &gt;= 0 &amp;&amp; yk &gt;= 0 &amp;&amp; xk &lt; n &amp;&amp; yk &lt; m)<br>        if (a[z[i]][xk][yk] != '#' &amp;&amp; !was[z[i]][xk][yk]) {<br>          e++;<br>          x[e] = xk;<br>          y[e] = yk;<br>          z[e] = z[i];<br>          km[e] = km[i]+1;<br>          if (a[z[i]][xk][yk] == 'E') return km[e];<br>          was[z[i]][xk][yk] = 1;<br>        }<br>    }<br>    if (z[i] &amp;&amp; g[z[i]][x[i]][y[i]] == 1)<br>      if (!was[0][x[i]][y[i]]) {<br>        e++;<br>        x[e] = x[i];<br>        y[e] = y[i];<br>        z[e] = 0;<br>        km[e] = km[i]+1;<br>        was[0][x[i]][y[i]] = 1;<br>      }<br>    if (!z[i])<br>      for (fw=0;fw&lt;m;fw++)<br>        if (g[fw][x[i]][y[i]] == 1 &amp;&amp; !was[fw][x[i]][y[i]]) {<br>          e++;<br>          x[e] = x[i];<br>          y[e] = y[i];<br>          z[e] = fw;<br>          km[e] = km[i]+1;<br>          was[fw][x[i]][y[i]] = 1;<br>        }<br>    i++;<br>  }<br>  return -1;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>