<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class UnfoldingTriangles<br>{<br>  public int solve(String[] grid, int unfoldLimit)<br>  {<br>    int n = grid.length;<br>    int m = grid[0].length();<br>    int ans = -1;<br>    for (int x1 = 0; x1 &lt; n; x1++)<br>      for (int x2 = x1; x2 &lt; n; x2++)<br>        cycle:for (int y1 = 0; y1&lt; m; y1++)<br>        {<br>          int w = x2-x1;<br>          int y2 = y1 + w;<br>          if (y2&gt;=m) continue cycle;<br>          for (int x = x1; x &lt;= x2; x++)<br>          {<br>            int y = y2 - (x-x1);<br>            if (grid[x].charAt(y)!='/')<br>              continue cycle;<br>          }<br>          int k = unfoldLimit;<br>          for (int x = x1; x &lt;= x2; x++)<br>            for (int y = y2 - (x-x1) + 1; y&lt;=y2; y++)<br>            {<br>              char d = grid[x].charAt(y);<br>              if (d=='/')<br>                k--;<br>              if (d=='.')<br>                continue cycle;<br>            }<br>          if (k&lt;0) continue cycle;<br>          if (x2&lt;n-1)<br>          {<br>            for (int y = y1; y&lt;=y2; y++)<br>              if (grid[x2+1].charAt(y)=='#')<br>                continue cycle;<br>          }<br>          if (y2&lt;m-1)<br>          {<br>            for (int x = x1; x&lt;=x2; x++)<br>              if (grid[x].charAt(y2+1)=='#')<br>                continue cycle;<br>          }<br>          ans = Math.max(ans, ((w+2)*(w+1))/2 );<br>        }<br>      return ans;<br>  }<br>  <br>  <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>