<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;iostream&gt;<br>#include&lt;ctime&gt;<br>#include&lt;cstring&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;sstream&gt;<br>#include&lt;string&gt;<br>#include&lt;vector&gt;<br>#include&lt;cmath&gt;<br>#include&lt;cstdio&gt;<br>#include&lt;cstdlib&gt;<br>#include&lt;fstream&gt;<br>#include&lt;cassert&gt;<br>#include&lt;numeric&gt;<br>#include&lt;set&gt;<br>#include&lt;map&gt;<br>#include&lt;queue&gt;<br>#include&lt;list&gt;<br>#include&lt;deque&gt;<br><br>using namespace std;<br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;VI&gt; VVI;<br><br>#define all(x) (x).begin(),(x).end()<br>#define CLEAR(x,with) memset(x,with,sizeof(x))<br><br>int cache[26][1&lt;&lt;10];<br><br>struct FourBlocks <br>{<br>  vector&lt;string&gt; grid;<br>  vector&lt;int&gt; column;<br>  int go(int x, int occupied)<br>  {<br>    if(x == column.size()) return (occupied == 0 ? 0 : -987654321);<br>    if(occupied &amp; column[x]) return -987654321;<br><br>    int&amp; ret = cache[x][occupied];<br>    if(ret != -1) return ret;<br><br>    ret = 0;<br>    for(int fours = 0; fours &lt; (1&lt;&lt;(grid.size()-1)); ++fours)<br>    {<br>      if(fours &amp; (fours*2)) continue;<br>      if(column[x] &amp; (fours | (fours*2))) continue;<br>      if(occupied &amp; (fours | (fours*2))) continue;<br>      int M = __builtin_popcount(fours);<br>      int cand = M * 14 + grid.size() - __builtin_popcount(occupied) + go(x+1, fours | (fours*2));<br>      ret = max(ret, cand);<br>    }<br>    return ret;<br>  }<br>  int maxScore(vector &lt;string&gt; grid) <br>  {<br>    this-&gt;grid = grid;<br>    <br>    column.resize(grid[0].size());<br>    for(int y = 0; y &lt; grid.size(); ++y)<br>      for(int x = 0; x &lt; grid[0].size(); ++x)<br>        if(grid[y][x] == '1')<br>          column[x] += (1&lt;&lt;y);<br>    CLEAR(cache,-1);<br>    return go(0, 0);<br>  }<br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by moj 4.11 [modified TZTester]<br>// Powered by CodeProcessor<br></td>