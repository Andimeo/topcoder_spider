<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br> <br> <br>public class FourBlocks<br>{<br>  int n;<br>  <br>  public int maxScore(String[] grid)<br>  {<br>    n = grid.length;<br>    int m = grid[0].length();<br>    int[][] d = new int[m + 1][1 &lt;&lt; n];<br>    int ans = 0;<br>    for (int i = 0; i &lt; m; ++i) {<br>      int mask = 0;<br>      for (int j = 0; j &lt; n; ++j) {<br>        if (grid[j].charAt(i) == '1') {<br>          mask |= 1 &lt;&lt; j;<br>        }<br>      }<br>      ans += Integer.bitCount(mask);<br>      for (int j = 0; j &lt; 1 &lt;&lt; n; ++j) {<br>        if ((j &amp; mask) == 0) {<br>          rec(0, j | mask, 0, d[i][j], d[i + 1]);<br>        }<br>      }<br>    }<br>    return d[m][0] + ans;<br>  }<br>  <br>  void rec(int i, int mask, int mask2, int sum, int[] d) {<br>    if (i == n) {<br>      d[mask2] = Math.max(d[mask2], sum);<br>      return;<br>    }<br>    rec(i + 1, mask, mask2, sum, d);<br>    if ((mask &amp; (1 &lt;&lt; i)) == 0) {<br>      rec(i + 1, mask, mask2, sum + 1, d);<br>    }<br>    if (i &lt; n - 1 &amp;&amp; (mask &amp; (1 &lt;&lt; i)) == 0 &amp;&amp; (mask &amp; (1 &lt;&lt; (i + 1))) == 0) {<br>      rec(i + 2, mask, mask2 | (1 &lt;&lt; i) | (1 &lt;&lt; (i + 1)), sum + 16, d);<br>    }<br>  }<br>  <br> <br>}<br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>