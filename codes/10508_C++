<td class="problemText" colspan="8" valign="middle" align="left">
            // unfortunately I have no ideas for a good line here<br><br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>typedef long long ll;<br><br>#define LS &lt;<br>#define Size(x) (int(x.size()))<br><br>// All macros with parameters "k,a,b" run the "k" variable in range [a,b)<br>#define FOR(k,a,b) for(typeof(a) k=(a); k LS (b); ++k)<br><br>#line 3 "CubePainting.cc"<br><br>#define P 1000000007<br><br>void swapbit(bool* u, int b) {<br>  // printf("b = %d\n", b);<br>  if(b == -1) return;<br>  if(b &lt;0 || b &gt;= 108) exit(0);<br>  u[b] = !u[b];<br>  }<br><br>class CubePainting {<br>  public:<br>  int count(vector &lt;string&gt; cube) {<br>    // !FDI<br>    <br>    int qcs = 0;<br>        <br>    int cs[7][7][7];<br><br>    FOR(a,0,7) FOR(b,0,7) FOR(c,0,7) cs[a][b][c] = -1;<br><br>    FOR(a,0,7) FOR(b,0,7) FOR(c,0,7)<br>      if(a == 0 || b == 0 || c == 0 || a == 6 || b == 6 || c == 6)<br>      if(((a&amp;1) + (b&amp;1) + (c&amp;1)) == 1) <br>        cs[a][b][c] = qcs++;<br>    <br>    int dx[9][12];<br>    int dy[9][12];<br>    int dz[9][12];<br>    <br>    FOR(a,0,3) FOR(b,0,3) {<br>      dx[a][b] = 2*b+1;<br>      dy[a][b] = 2*a+1;<br>      dz[a][b] = 0;<br><br>      dx[3+a][ +b] = 2*b+1;<br>      dy[3+a][ +b] = 6;<br>      dz[3+a][ +b] = 1+2*a;<br><br>      dx[3+a][3+b] = 6;<br>      dy[3+a][3+b] = 5-2*b;<br>      dz[3+a][3+b] = 1+2*a;<br><br>      dx[3+a][6+b] = 5-2*b;<br>      dy[3+a][6+b] = 0;<br>      dz[3+a][6+b] = 1+2*a;<br><br>      dx[3+a][9+b] = 0;<br>      dy[3+a][9+b] = 2*b+1;<br>      dz[3+a][9+b] = 1+2*a;<br><br>      dx[6+a][b] = 2*b+1;<br>      dy[6+a][b] = 5-2*a;<br>      dz[6+a][b] = 6;<br>      }<br>    <br>    int oldq[1&lt;&lt;16], newq[1&lt;&lt;16];<br>    <br>    int oldi[108], newi[108];    <br>    bool oldset[108], newset[108];<br>    <br>    FOR(k,0,108) oldset[k] = false;<br>    oldq[0] = 1;<br>    <br>    FOR(ny,0,9) FOR(nx,0,Size(cube[ny])) {<br>    <br>      char ch = cube[ny][nx];<br>      int crosv = ch == '.' ? 2 : 0;<br>      <br>      FOR(k,0,108) newset[k] = oldset[k];<br>      <br>      int x = dx[ny][nx], y = dy[ny][nx], z = dz[ny][nx];<br>      <br>      if(x&gt;0) swapbit(newset, cs[x-1][y][z]);<br>      if(x&lt;6) swapbit(newset, cs[x+1][y][z]);<br>      if(y&gt;0) swapbit(newset, cs[x][y-1][z]);<br>      if(y&lt;6) swapbit(newset, cs[x][y+1][z]);<br>      if(z&gt;0) swapbit(newset, cs[x][y][z-1]);<br>      if(z&lt;6) swapbit(newset, cs[x][y][z+1]);<br><br>      int tot = 1, otot  = 1, ntot = 1, kk = 0;<br>      FOR(k,0,108) if(newset[k] || oldset[k]) {<br>        if(newset[k]) newi[kk] = ntot, ntot &lt;&lt;= 1;<br>        else newi[kk] = 0;<br>        if(oldset[k]) oldi[kk] = otot, otot &lt;&lt;= 1;<br>        else oldi[kk] = 0;<br>        tot &lt;&lt;= 1; kk++;<br>        }<br>      <br>      FOR(q,0,ntot) newq[q] = 0;<br><br>      FOR(r,0,tot) {<br>        int cros = 0;<br>        int oind = 0, nind = 0;<br>        FOR(ll,0,kk) if(r &amp; (1&lt;&lt;ll)) {<br>          if((!oldi[ll]) ^ (!newi[ll])) cros++;<br>          oind |= oldi[ll];<br>          nind |= newi[ll];<br>          }<br>        <br>        // crosv = 0;<br>        if(cros != crosv) continue;<br>        <br>        newq[nind] += oldq[oind];<br>        newq[nind] %= P;<br>        }<br>      <br>      FOR(k,0,108) oldset[k] = newset[k];<br>      FOR(q,0,ntot) oldq[q] = newq[q];<br>      <br>//    printf("kk = %d oq = %d\n", kk, oldq[0]);<br>      <br>//    if(kk &lt;= 9) FOR(dd, 0, ntot) printf("%d ", newq[dd]); printf("\n");<br>      }<br>    <br>    return oldq[0];<br>    }<br>  };<br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>