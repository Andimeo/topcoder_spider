<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;climits&gt;<br>#include &lt;queue&gt;<br>#include &lt;cmath&gt;<br>#include &lt;stack&gt;<br>#include &lt;set&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;iostream&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;sstream&gt;<br>#include &lt;map&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cstdlib&gt;<br>using namespace std;<br><br>#define ll long long<br>#define fe(i,a,n) for(int i = a, __n = (int)n; i &lt; __n; i++)<br>#define fi(i,a,n) for(int i = a, __n = (int)n; i &lt;= __n; i++)<br>#define all(v) v.begin(),v.end()<br>#define DOUBLE_MAX numeric_limits&lt;double&gt;::max()<br>#define DOUBLE_MIN numeric_limits&lt;double&gt;::min()<br>#define ERRO 1e-10<br><br>class TheEncryptionDivTwo {<br>public:<br>  string encrypt(string message)  {<br>        string a;<br>        char c = 'a';<br>        vector&lt;bool&gt; ok(260, false);<br>        vector&lt;char&gt; alfa(260, ' ');<br>        fe(i,0,message.size()) {<br>            if(ok[message[i]])<br>                a.push_back(alfa[message[i]]);<br>            else {<br>                a.push_back(c);<br>                ok[message[i]] = true;<br>                alfa[message[i]] = c;<br>                c++;<br>            }<br>        }<br>        return a;<br>  }<br>  // end of encrypt<br>  <br><br>};<br>// end of TheEncryptionDivTwo<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>