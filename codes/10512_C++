<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define Rep(i,n) for(int i=0;i&lt;(n);++i)<br>#define For(i,a,b) for(int i=(a);i&lt;=(b);++i)<br>#define Ford(i,a,b) for(int i=(a);i&gt;=(b);--i)<br>#define Fill(a,b) memset( (a), (b), sizeof(a))<br>#define pb push_back<br>#define MP make_pair<br> <br>class TheNewHouseDivOne {<br>public:<br>  double distance(vector &lt;int&gt;, vector &lt;int&gt;, int);<br>};<br> <br>double TheNewHouseDivOne::distance(vector &lt;int&gt; x, vector &lt;int&gt; y, int k) {<br>  int n = x.size();<br>  Rep(i,n) {<br>    x[i] *= 2;<br>    y[i] *= 2;<br>  }<br>  int best = 1000000000;<br>  For(u,-100,100) {<br>    For(v,-100,100) {<br>      vector&lt;int&gt; dist;<br>      Rep(i,n) {<br>        dist.pb( abs(x[i] - u) + abs(y[i] - v));<br>        <br>      }<br>      sort( dist.begin(), dist.end());<br>      int r = dist[k-1];<br>      if(best &gt; r) best = r;<br>    }<br>  }  <br>  return best * 0.5;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>