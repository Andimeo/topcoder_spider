<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Text.RegularExpressions;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br><br>public class TheLockDivTwo {<br>    public string password(int n, int k) <br>   {<br>        int count = 1;<br>        for (int i = 0; i &lt; n; ++i)<br>            count = count*2;<br>        --count;<br>        List&lt;string&gt; mas = new List&lt;string&gt;();<br>        while (count&gt;=0)<br>        {<br>            StringBuilder str = new StringBuilder();<br>            int t = count;<br>            for (int i=0;i&lt;n;++i)<br>            {<br>                if (t % 2 == 0)<br>                    str.Append('0');<br>                else<br>                    str.Append('1');<br>                t = t / 2;<br>            }<br>            mas.Add(str.ToString());<br>            --count;<br>        }<br>        mas.Sort();<br>        bool[] used = new bool[mas.Count];<br>        int cur = 0;<br>        used[cur] = true;<br>        for (int i=2;i&lt;=k;++i)<br>        {<br>            for (int j=0;j&lt;mas.Count;++j)<br>                if (!used[j])<br>            {<br>                bool t10 = false;<br>                bool t01 = false;<br>                for (int l=0; l&lt;n;++l)<br>                    if (mas[cur][l]!=mas[j][l])<br>                {<br>                    if (mas[cur][l]=='0')<br>                    {<br>                        t01 = true;<br>                        if (t10)<br>                            break;<br>                    }<br>                    else<br>                    {<br>                        t10 = true;<br>                        if (t01)<br>                        {<br>                            break;<br>                        }<br>                    }<br>                }<br><br>                if (t01 != t10)<br>                {<br>                    used[j] = true;<br>                    cur = j;<br>                    break;<br>                }<br>            }<br>        }<br>        return mas[cur];<br>   }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>