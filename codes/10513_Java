<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class TheLockDivTwo {<br>  public String password(int n, int k) {<br>    String res = "";<br>    <br>    int len = (int)Math.pow(2, n);<br>    boolean[] used = new boolean[len];<br>    int pass = 0;<br>    <br>    <br>    int it = 0;<br>    boolean[] bits = new boolean[n];<br>    <br>    while (it &lt; k) {<br>      <br>      <br>      for (int j = 0; j &lt; len; j++) {<br>        if (!used[j]) {<br>          int xor = pass ^ j;<br>          boolean same = true;<br>          Arrays.fill(bits, false);<br>          int changed = -1;<br>          for (int l = 0; l &lt; n; l++) {<br>            int bit = xor &amp; (1&lt;&lt;l);<br>            if (bit != 0) {<br>              bits[l] = true;<br>              if (changed == -1) {<br>                // valor del bit l en pass<br>                if ((pass &amp; (1&lt;&lt;l)) != 0) {<br>                  changed = 1;<br>                } else {<br>                  changed = 0;<br>                }<br>              } else {<br>                //<br>                boolean c2 = (pass &amp; (1&lt;&lt;l)) != 0;<br>                if (changed != 1 &amp;&amp; c2) {<br>                  same = false;<br>                  break;<br>                } else if (changed != 0 &amp;&amp; !c2){<br>                  same = false;<br>                  break;<br>                }<br>              }<br>            }<br>          }<br>          <br>          if (same) {<br>            pass = j;<br>            used[j] = true;<br>            break;<br>          }<br>        }<br>      }<br>      <br>      it++;<br>    }<br>    <br>    res = Integer.toBinaryString(pass);<br>    <br>    while (res.length() &lt; n) {<br>      res = "0" + res;<br>    }<br>    <br>    return res;<br>  }<br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>