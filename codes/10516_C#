<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br>public class AntOnGraph {<br>  long[,] score;<br>  int n;<br>  long[,] mul(long[,] a, long[,] b) {<br>    long[,] ans=new long[n, n];<br>    for (int i=0; i&lt;n; ++i) for (int j=0; j&lt;n; ++j) ans[i,j]=long.MinValue;<br>    for (int i=0; i&lt;n; ++i) for (int j=0; j&lt;n; ++j) for (int k=0; k&lt;n; ++k)<br>          if (a[i, k]!=long.MinValue&amp;&amp;b[k,j]!=long.MinValue&amp;&amp;a[i,k]+b[k,j]&gt;ans[i,j])<br>            ans[i,j]=a[i,k]+b[k,j];<br>    return ans;<br>  }<br>  long[,] power(long[,] mat, int p) {<br>    long[,] ans=new long[n, n];<br>    for (int i=0; i&lt;n; ++i) for (int j=0; j&lt;n; ++j) ans[i, j]=i==j?0:long.MinValue;<br>    while (p!=0) {<br>      if (p%2==1) ans=mul(ans, mat);<br>      p/=2;<br>      mat=mul(mat, mat);<br>    }<br>    return ans;<br>  }<br>  long[,] mul2(long[,] a, long[,] b) {<br>    long[,] ans=new long[n, n];<br>    for (int i=0; i&lt;n; ++i) for (int j=0; j&lt;n; ++j) ans[i, j]=long.MinValue;<br>    for (int i=0; i&lt;n; ++i) for (int j=0; j&lt;n; ++j) for (int k=0; k&lt;n; ++k)<br>          if (a[i, k]!=long.MinValue&amp;&amp;b[k, j]!=long.MinValue&amp;&amp;a[i, k]+b[k, j]&gt;ans[i, j])<br>            ans[i, j]=a[i, k]+b[k, j];<br>    for (int i=0; i&lt;n; ++i) for (int j=0; j&lt;n; ++j) {<br>        if (a[i,j]&gt;ans[i,j]) ans[i,j]=a[i,j];<br>        if (b[i,j]&gt;ans[i,j]) ans[i,j]=b[i,j];<br>      }<br>    return ans;<br>  }<br>  long[,] power2(long[,] mat, int p) {<br>    long[,] ans=new long[n, n];<br>    for (int i=0; i&lt;n; ++i) for (int j=0; j&lt;n; ++j) ans[i, j]=i==j?0:long.MinValue;<br>    while (p!=0) {<br>      if (p%2==1) ans=mul2(ans, mat);<br>      p/=2;<br>      mat=mul2(mat, mat);<br>    }<br>    return ans;<br>  }<br>  public string maximumBonus(string[] p0, string[] p1, string[] p2, int stepsPerSecond, int timeLimit) {<br>    n=p0.Length;<br>    score=new long[n, n];<br>    for (int i=0; i&lt;n; ++i) for (int j=0; j&lt;n; ++j) {<br>        int sc=(p0[i][j]-'0')*100+(p1[i][j]-'0')*10+(p2[i][j]-'0');<br>        if (sc==0) score[i,j]=long.MinValue;<br>        else score[i,j]=sc-500;<br>    }<br>    score=power(score, stepsPerSecond);<br>    score=power2(score, timeLimit);<br>    if (score[0,1]==long.MinValue) return "IMPOSSIBLE";<br>    else return score[0,1].ToString();<br>  }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>