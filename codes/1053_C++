<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;  typedef vector&lt;vector&lt;int&gt; &gt; VVI;<br>typedef vector&lt;string&gt; VS;  typedef vector&lt;vector&lt;string&gt; &gt; VVS;<br>typedef signed long long i64;  typedef unsigned long long u64;<br><br>vector&lt;string&gt; tokenize(string s, string ch) {<br>  vector&lt;string&gt; ret;<br>  for( int p = 0, p2; p &lt; s.size(); p = p2+1 ) {<br>    p2 = s.find_first_of(ch, p);<br>    if( p2 == -1 ) p2 = s.size();<br>    if( p2-p &gt; 0 ) ret.push_back( s.substr(p, p2-p) );<br>  }<br>  return ret;<br>}<br><br>class Execution {<br>public:<br>long long analyze(vector &lt;string&gt; a) {<br>  i64 i, j, k, x, y, z, n;<br>  long long ret = 0;<br>  string s;<br>  stack&lt;i64&gt; st;<br>  for( i = 0; i &lt; a.size(); i++ ) s += a[i];<br>  VS t = tokenize(s, "();BAICfr ");<br>  x = 1;<br>  for( i = 0; i &lt; t.size(); i++ ) {<br>    if( t[i] == "S" ) {ret += x; continue;}<br>    if( t[i] == "o" ) {<br>      st.push(x);<br>      sscanf( t[i+1].c_str(), "%lld", &amp;y );<br>      x *= y;<br>    } else while( t[i][t[i].size()-1] == '}' ) {<br>      x = st.top(); st.pop();<br>      t[i] = t[i].substr(0, t[i].size()-1);<br>    }<br>  }<br>  return ret;<br>}<br>};<br><br><br>// Powered by FileEdit<br></td>