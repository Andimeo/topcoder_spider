<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class Execution {<br>  String avail;<br>  <br>  public long analyze(String[] code) {<br>    StringBuffer buf = new StringBuffer();<br>    for (int i = 0; i &lt; code.length; ++i) buf.append(code[i]);<br>    avail = buf.toString();<br>    return count();<br>  }<br>  <br>  long count()<br>  {<br>    long result = 0;<br>    while (true) {<br>      String token = getToken();<br>      if (token == null || token.equals("}")) return result;<br>      if (token.equals("for")) {<br>        getToken();<br>        long factor = Long.parseLong(getToken());<br>        getToken(); // )<br>        getToken(); // {<br>        result += factor * count();<br>      }<br>      else if (token.equals("BASIC;")) {<br>        ++result;<br>      }<br>      else throw new IllegalArgumentException(token);<br>    }<br>  }<br>  <br>  String getToken()<br>  {<br>    while (avail.length() &gt; 0) {<br>      if (avail.charAt(0) == ' ') {<br>        avail = avail.substring(1);<br>        continue;<br>      }<br>      if ("(){}".indexOf(avail.charAt(0)) &gt;= 0) {<br>        char cc = avail.charAt(0);<br>        avail = avail.substring(1);<br>        return "" + cc;<br>      }<br>      if (avail.charAt(0) == 'B') {<br>        avail = avail.substring(6);<br>        return "BASIC;";<br>      }<br>      if (avail.charAt(0) == 'f') {<br>        avail = avail.substring(3);<br>        return "for";<br>      }<br>      String ss = "";<br>      while (avail.length() &gt; 0 &amp;&amp; (avail.charAt(0) &gt;= '0' &amp;&amp; avail.charAt(0) &lt;= '9')) {<br>        ss += avail.charAt(0);<br>        avail = avail.substring(1);<br>      }<br>      if (ss.length() &gt; 0) {<br>        return ss;<br>      }<br>      throw new IllegalArgumentException(avail);<br>    }<br>    return null;<br>  }<br>}<br> <br>// Powered by PopsEdit<br></td>