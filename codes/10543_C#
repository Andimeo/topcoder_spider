<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class EmoticonsDiv1 {<br>    public int printSmiles(int smiles)<br>    {<br>        int MAX = 1010;<br>        int[] dp = new int[MAX];<br>        for (int i = 0; i &lt; MAX; i++)<br>        {<br>            dp[i] = 99999999;<br>        }<br>        dp[1] = 0;<br><br>        Queue&lt;int&gt; q = new Queue&lt;int&gt;();<br>        q.Enqueue(1);<br>        bool[] check = new bool[MAX];<br>        check[1] = true;<br>        while(q.Count &gt; 0)<br>        {<br>            int i = q.Dequeue();<br>            int now =  i + i;<br>            int next = dp[i] + 2;<br>            check[i] = false;<br>            //Console.WriteLine(i);<br><br>            while (now &lt; MAX)<br>            {<br>                if (dp[now] &gt; next)<br>                {<br>                    dp[now] = next;<br>                    if (!check[now])<br>                    {<br>                        //check[now] = true;<br>                        q.Enqueue(now);<br>                    }<br>                }<br>                now += i;<br>                next++;<br>            }<br><br>            <br>            now = i - 1;<br>            next = dp[i] + 1;<br>            if (now &gt; 0)<br>            {<br>                if (dp[now] &gt; next)<br>                {<br>                    dp[now] = next;<br>                    if (!check[now])<br>                    {<br>                        //check[now] = true;<br>                        q.Enqueue(now);<br>                    }<br>                }<br>            }<br>             <br>        }<br>        return dp[smiles];<br><br>    }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] Modified for C# by ysn<br>// Powered by CodeProcessor<br></td>