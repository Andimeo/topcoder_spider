<td class="problemText" colspan="8" valign="middle" align="left">
            #ifndef debuging<br>#define FIN  ;<br>#define FOUT ;<br>#define OUT(x)  ;<br>#define ERR(x)  ;<br>#endif<br>#include &lt;cstdio&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cstring&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cmath&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>using namespace std ;<br>const int INF = 0x3f3f3f3f;<br>int dp[20000];<br>bool vis[20000];<br><br>class EmoticonsDiv1<br>{<br> public:<br> int printSmiles(int smiles)<br> {<br>   SPFA();<br>  <br>  <br>  return dp[smiles] ;<br> }<br> void SPFA()<br> {<br>   queue&lt;int&gt;q;<br>   for(int i = 0;i &lt; 20000;i++)<br>   {<br>     dp[i] = INF;<br>     vis[i] = false;<br>   }<br>   dp[1] = 0;<br>   vis[1] = true;<br>   q.push(1);<br>   while(!q.empty())<br>   {<br>     int tmp = q.front();<br>      q.pop();<br>    vis[tmp] = false;<br>    if(tmp &gt; 1)<br>    {<br>      if(dp[tmp-1] &gt; dp[tmp]+1)<br>      {<br>        dp[tmp-1] = dp[tmp]+1;<br>        if(vis[tmp-1] == false)<br>        {<br>          q.push(tmp-1);<br>          vis[tmp-1] = true;<br>        }<br>      }<br>    }<br>    for(int i = 2;i*tmp &lt;= 5000;i ++)<br>      if(dp[i*tmp] &gt; dp[tmp] + i)<br>      {<br>        dp[i*tmp] = dp[tmp] + i;<br>        if(!vis[i * tmp])<br>        {<br>          vis[i*tmp] = true;<br>          q.push(i * tmp);<br>        }<br>      }<br>     <br>   }<br> }<br> <br> <br><br>};<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>