<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br><br>public class MaxTriangle {<br>  public double calculateArea(int A, int B) {<br>        List&lt;long&gt; possiblex1 = new List&lt;long&gt;();<br>        List&lt;long&gt; possibley1 = new List&lt;long&gt;();<br>        for (int x1 = 0; x1 * x1 &lt;= A; ++x1)<br>        {<br>            long y1 = (long) Math.Round(Math.Sqrt(A - x1 * x1));<br>            if (x1 * x1 + y1 * y1 == A)<br>            {<br>                possiblex1.Add(x1);<br>                possibley1.Add(y1);<br>                possiblex1.Add(-x1);<br>                possibley1.Add(y1);<br>                possiblex1.Add(-x1);<br>                possibley1.Add(-y1);<br>                possiblex1.Add(x1);<br>                possibley1.Add(-y1);<br>            }<br>        }<br>        List&lt;long&gt; possiblex2 = new List&lt;long&gt;();<br>        List&lt;long&gt; possibley2 = new List&lt;long&gt;();<br>        for (int x2 = 0; x2 * x2 &lt;= B; ++x2)<br>        {<br>            long y2 = (long) Math.Round(Math.Sqrt(B - x2 * x2));<br>            if (x2 * x2 + y2 * y2 == B)<br>            {<br>                possiblex2.Add(x2);<br>                possibley2.Add(y2);<br>                possiblex2.Add(-x2);<br>                possibley2.Add(y2);<br>                possiblex2.Add(-x2);<br>                possibley2.Add(-y2);<br>                possiblex2.Add(x2);<br>                possibley2.Add(-y2);<br>            }<br>        }<br>        double res = -1.0;<br>        for (int i1 = 0; i1 &lt; possiblex1.Count; ++i1)<br>            for (int i2 = 0; i2 &lt; possiblex2.Count; ++i2)<br>            {<br>                res = Math.Max(res, Math.Abs(possiblex1[i1] * possibley2[i2] - possibley1[i1] * possiblex2[i2]) / 2.0);<br>            }<br>        return res;<br>    }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>