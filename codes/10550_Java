<td class="problemText" colspan="8" valign="middle" align="left">
            public class HexagonalBattlefieldEasy<br>{<br>  private int countArrangementRecur(int N,int[][] board)<br>  {<br>    int i,j;<br>    int cnt=0;<br>    boolean filled=true;<br>    for (i=0;i&lt;2*N-1;i++)<br>      for (j=0;j&lt;2*N-1;j++)<br>        if (board[i][j]==0)<br>        {<br>          filled=false;<br>          if (j+1&lt;2*N-1 &amp;&amp; board[i][j+1]==0)<br>          {<br>            board[i][j]=1;<br>            board[i][j+1]=1;<br>            cnt+=countArrangementRecur(N,board);<br>            board[i][j]=0;<br>            board[i][j+1]=0;<br>          }<br>          if (i+1&lt;2*N-1 &amp;&amp; board[i+1][j]==0)<br>          {<br>            board[i][j]=1;<br>            board[i+1][j]=1;<br>            cnt+=countArrangementRecur(N,board);<br>            board[i][j]=0;<br>            board[i+1][j]=0;<br>          }<br>          if (i+1&lt;2*N-1 &amp;&amp; j+1&lt;2*N-1 &amp;&amp; board[i+1][j+1]==0)<br>          {<br>            board[i][j]=1;<br>            board[i+1][j+1]=1;<br>            cnt+=countArrangementRecur(N,board);<br>            board[i][j]=0;<br>            board[i+1][j+1]=0;<br>          }<br>          i=2*N;<br>          j=2*N;<br>        }<br>    if (filled) return 1;<br>    return cnt;<br>  }<br>  <br>  public int countArrangements(int[] X,int[] Y,int N)<br>  {<br>    int[][] board=new int[7][7];<br>    int i,j;<br>    for (i=0;i&lt;N-1;i++)<br>      for (j=i+N;j&lt;2*N-1;j++)<br>        board[i][j]=1;<br>    for (i=N;i&lt;2*N-1;i++)<br>      for (j=0;j&lt;i-N+1;j++)<br>        board[i][j]=1;<br>    for (i=0;i&lt;X.length;i++)<br>      board[X[i]+N-1][Y[i]+N-1]=1;<br>    return countArrangementRecur(N,board);<br>  }<br>}<br></td>