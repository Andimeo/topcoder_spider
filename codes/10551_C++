<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>typedef long long int64;<br> <br>class StairsColoring<br>{<br>public:<br>  int MODE;<br>  int left[10000];<br>  int mypower(int p,int e,int MODE)<br>  {<br>    if (e==0) return 1%MODE;<br>    if (e%2==0)<br>    {<br>      int t=mypower(p,e/2,MODE);<br>      return (int)(((int64)t*(int64)t)%MODE);<br>    }<br>    else<br>    {<br>      int t=mypower(p,e-1,MODE);<br>      return (int)(((int64)t*(int64)p)%MODE);<br>    }<br>  }<br>  void solveIt(int n,int &amp;e,int &amp;p)<br>  {<br>    if (n&lt;MODE)<br>    {<br>      e=0;<br>      p=left[n];<br>    }<br>    else<br>    {<br>      solveIt(n/MODE,e,p);<br>      int c=left[MODE-1];<br>      int d=mypower(c,n/MODE,MODE);<br>      p=(p*d)%MODE;<br>      p=(p*left[n%MODE])%MODE;<br>      e+=n/MODE;<br>    }<br>  }<br>  int solve(int n,int _MODE)<br>  {<br>    MODE=_MODE;<br>    left[0]=1%MODE;<br>    for (int i=1;i&lt;MODE;i++) left[i]=(i*left[i-1])%MODE;<br>    int e1,p1,e2,p2,e3,p3,s2=0,s3=0;<br>    solveIt(2*n,e1,p1);<br>    solveIt(n+1,e2,p2);<br>    solveIt(n,e3,p3);<br>    if (e1&gt;e2+e3) return 0;<br>    for (int i=0;i&lt;MODE;i++) <br>    {<br>      if ((i*p2)%MODE==1) s2=i;<br>      if ((i*p3)%MODE==1) s3=i;<br>    }<br>    return (((p1*s2)%MODE)*s3)%MODE;<br>  }<br>  int coloringCount(int n, int k)<br>  {<br>    int64 m[5]={2,3,11,2089,7253};<br>    int64 b[5];<br>    for (int i=0;i&lt;5;i++)<br>    {<br>      b[i]=solve(n,(int)m[i]);<br>    }<br>    int64 R=0;<br>    for (int i=0;i&lt;5;i++)<br>    {<br>      int64 s=1;<br>      for (int j=0;j&lt;5;j++) if (i!=j) s*=m[j];<br>      int64 t=0;<br>      while (t%m[i]!=b[i]) t+=s;<br>      R+=t;<br>    }<br>    int d=(int)(R%1000000122);<br>    int ret=mypower(k,d,1000000123);<br>    return ret;<br>  }<br>};<br></td>