<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;memory&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;algorithm&gt;<br>using namespace std;<br><br>typedef long long Int;<br>typedef pair&lt;int,int&gt; PII;<br>typedef vector&lt;int&gt; VInt;<br><br>#define FOR(i, a, b) for(i = (a); i &lt; (b); ++i)<br>#define RFOR(i, a, b) for(i = (a) - 1; i &gt;= (b); --i)<br>#define CLEAR(a, b) memset(a, b, sizeof(a))<br>#define SIZE(a) int((a).size())<br>#define ALL(a) (a).begin(),(a).end()<br>#define PB push_back<br>#define MP make_pair<br><br>#define MOD 1000000007<br><br>int S[1 &lt;&lt; 12];<br>int Res[2525][2525];<br>string s;<br>int N;<br><br>int F(int pos, int last)<br>{<br>  int&amp; res = Res[pos][last];<br>  if(res != -1)<br>    return res;<br><br>  res = 0;<br>  if(S[N] == S[pos + 1])<br>    ++res;<br><br>  int k = pos + pos - last;<br>  if(k &lt; N &amp;&amp; S[k] == S[pos + 1] &amp;&amp; s[k] != 'O')<br>  {<br>    res += F(k, pos);<br>    if(res &gt;= MOD)<br>      res -= MOD;<br>  }<br><br>  return res;<br>}<br><br>class IOIString {<br>  public:<br>  int countIOIs(vector &lt;string&gt; mask)<br>  {<br>    s = "";<br>    int i, j;<br>    FOR(i, 0, SIZE(mask))<br>      s = s + mask[i];<br><br>    N = SIZE(s);<br>    S[0] = 0;<br>    FOR(i, 0, N)<br>    {<br>      S[i + 1] = S[i];<br>      if(s[i] == 'I')<br>        ++S[i + 1];<br>    }<br><br>    int cnt = 0;<br>    FOR(i, 0, N)<br>      if(s[i] == '?')<br>        ++cnt;<br><br>    int res = 0;<br>    if(S[N] == 0)<br>    {<br>      ++res;<br>      res += cnt;<br>    }<br><br>    if(S[N] == 1)<br>      ++res;<br><br>    int r = 1;<br>    FOR(i, 0, cnt)<br>    {<br>      r &lt;&lt;= 1;<br>      r %= MOD;<br>    }<br><br>    CLEAR(Res, -1);<br>    FOR(i, 0, N)<br>      FOR(j, 0, i)<br>        if((i &amp; 1) != (j &amp; 1))<br>          if(S[j] == 0 &amp;&amp; S[i] == S[j + 1] &amp;&amp; s[i] != 'O' &amp;&amp; s[j] != 'O')<br>          {<br>            res += F(i, j);<br>            if(res &gt;= MOD)<br>              res -= MOD;<br>          }<br><br>    return (r + MOD - res) % MOD;<br>  }<br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>