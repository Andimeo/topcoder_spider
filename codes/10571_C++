<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br>#include &lt;math.h&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br><br>using namespace std;<br><br>class ModuloFourDivisor<br>{<br>  public:<br>  int countQuadruplets(vector&lt;long long&gt; A, vector&lt;long long&gt; B, vector&lt;long long&gt; C, vector&lt;long long&gt; D)<br>  {<br>    int a_num = A.size();<br>    int b_num = B.size();<br>    int c_num = C.size();<br>    int d_num = D.size();<br>    long long a[50], b[50], c[50], d[50];<br>    for (int i=0; i&lt;a_num; i++) a[i] = A[i];<br>    for (int i=0; i&lt;b_num; i++) b[i] = B[i];<br>    for (int i=0; i&lt;c_num; i++) c[i] = C[i];<br>    for (int i=0; i&lt;d_num; i++) d[i] = D[i];<br>    int ans = 0;<br>    for (int i=0; i&lt;a_num; i++)<br>      for (int j=0; j&lt;b_num; j++)<br>        for (int k=0; k&lt;c_num; k++)<br>          for (int l=0; l&lt;d_num; l++) {<br>            long long aa = a[i], bb = b[j], cc = c[k], dd = d[l];<br>            long long p0 = bb + dd;<br>            long long p1 = cc;<br>            long long p2 = aa;<br>            if (p0 == 0) continue;<br>            if (p1 != 0 &amp;&amp; p1 != p0) continue;<br>            if (p2 &amp;&amp; !p1) continue;<br>            if (p2%p0) continue;<br>            if (bb &lt; dd) continue;<br>            if (bb-dd &amp;&amp; bb%(bb-dd)) continue;<br>//            printf("%lld %lld %lld %lld %lld %lld %lld\n", aa, bb, cc, dd, bb+dd, cc, aa);<br>            ans ++;<br>          }<br>    return ans;<br>  };<br>};<br></td>