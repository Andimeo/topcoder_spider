<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class KnightsTour {<br>  public int visitedPositions(string[] board) {<br>        char[][] b = new char[board.Length][];<br>        for (int i = 0; i &lt; board.Length; ++i)<br>            b[i] = board[i].ToCharArray();<br>        int res = 1;<br>        while (true)<br>        {<br>            int[,] am = new int[8, 8];<br>            for (int r = 0; r &lt; 8; ++r)<br>                for (int c = 0; c &lt; 8; ++c)<br>                    if (b[r][c] == '.')<br>                        for (int dr = -2; dr &lt;= 2; ++dr)<br>                            for (int dc = -2; dc &lt;= 2; ++dc)<br>                                if (Math.Abs(dr * dc) == 2)<br>                                {<br>                                    int nr = r + dr;<br>                                    int nc = c + dc;<br>                                    if (nr &gt;= 0 &amp;&amp; nr &lt; 8 &amp;&amp; nc &gt;= 0 &amp;&amp; nc &lt; 8 &amp;&amp; b[nr][nc] == '.')<br>                                        ++am[r, c];<br>                                }<br>            for (int r = 0; r &lt; 8; ++r)<br>            {<br>                int c;<br>                for (c = 0; c &lt; 8; ++c)<br>                    if (b[r][c] == 'K')<br>                    {<br>                        int bdr = -3;<br>                        int bdc = -3;<br>                        int bam = 100;<br>                        for (int dr = -2; dr &lt;= 2; ++dr)<br>                            for (int dc = -2; dc &lt;= 2; ++dc)<br>                                if (Math.Abs(dr * dc) == 2)<br>                                {<br>                                    int nr = r + dr;<br>                                    int nc = c + dc;<br>                                    if (nr &gt;= 0 &amp;&amp; nr &lt; 8 &amp;&amp; nc &gt;= 0 &amp;&amp; nc &lt; 8 &amp;&amp; b[nr][nc] == '.')<br>                                        if (am[nr, nc] &lt; bam)<br>                                        {<br>                                            bam = am[nr, nc];<br>                                            bdr = nr;<br>                                            bdc = nc;<br>                                        }<br>                                }<br>                        if (bdr &lt; 0)<br>                            return res;<br>                        ++res;<br>                        b[r][c] = '*';<br>                        b[bdr][bdc] = 'K';<br>                        break;<br>                    }<br>                if (c &lt; 8)<br>                    break;<br>            }<br>        }<br>  }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>