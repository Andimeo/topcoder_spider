<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;numeric&gt;<br>using namespace std;<br>typedef long long ll;<br>typedef pair&lt;int,int&gt; pii;<br>#define F0(i,n) for (i = 0; i &lt; n; i++)<br>#define F1(i,n) for (i = 1; i &lt;= n; i++)<br>#define SZ(x) ((int)x.size())<br>const double eps = 1e-8;<br>const double pi = acos(-1.0);<br>const int inf = 1000000009;<br>int i, j, k, m, n, l;<br>int v[101];<br>int ans;<br><br>const int N = 101;<br>int x[N], y[N], V[N];<br>int d[N][N];<br><br>int rec(int i) {<br>  V[i] = 1;<br>  for (int j = 1; j &lt;= n; j++) if (d[i][j]) {<br>    if (y[j] == 0 || (V[y[j]] == 0 &amp;&amp; rec(y[j]))) {<br>      x[i] = j;<br>      y[j] = i;<br>      return 1;<br>    }<br>  }<br>  return 0;<br>}<br><br><br><br>struct PeopleYouMayKnow { <br>int maximalScore(vector &lt;string&gt; f, int p1, int p2) { <br>  n = SZ(f);<br>  F0(i,n) v[i] = 0;<br>  v[p1] = v[p2] = 1;<br>  ans = 0;<br><br>  F0(i,n) if (!v[i] &amp;&amp; f[p1][i] == 'Y' &amp;&amp; f[p2][i] == 'Y') { ans++; v[i] = 1; }<br><br>  vector&lt;int&gt; v1, v2;<br>  F0(i,n) if (!v[i] &amp;&amp; f[p1][i] == 'Y') { v1.push_back(i); v[i] = 1; }<br>  F0(i,n) if (!v[i] &amp;&amp; f[p2][i] == 'Y') { v2.push_back(i); v[i] = 1; }<br>  <br>  m = SZ(v1);<br>  n = SZ(v2);<br><br>  memset(d, 0, sizeof(d));<br>  F0(i,m) F0(j,n) d[i+1][j+1] = (f[v1[i]][v2[j]] == 'Y');<br><br>  k = 0;<br>  memset(x, 0, sizeof(x));<br>  memset(y, 0, sizeof(y));<br>  F1(i,m) if (x[i] == 0) {<br>    for (j = 1; j &lt;= m; j++) V[j] = 0;<br>    k += rec(i);<br>  }<br>  ans += k;<br><br>  return ans;<br>}  <br> <br>}; <br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>