<td class="problemText" colspan="8" valign="middle" align="left">
            import static java.lang.Math.*;<br>import static java.math.BigInteger.*;<br>import static java.util.Arrays.*;<br>import static java.util.Collections.*;<br>import java.math.*;<br>import java.util.*;<br><br>public class TwistedMatrix {<br>  public String[] solve(String[] A, String[] B) {<br>    int n = A.length, m = A[0].length();<br>    char[][] cs = new char[n][];<br>    char[][] ds = new char[n][];<br>    for (int i = 0; i &lt; n; i++) cs[i] = A[i].toCharArray();<br>    for (int i = 0; i &lt; n; i++) ds[i] = B[i].toCharArray();<br>    char[][] res = null;<br>    for (int i = 0; i + 1 &lt; n; i++) {<br>      for (int j = 0; j + 1 &lt; m; j++) {<br>        rotate(cs, i, j);<br>        res = min(res, check(cs, ds));<br>        rotate(cs, i, j);<br>        rotate(cs, i, j);<br>        res = min(res, check(cs, ds));<br>        rotate(cs, i, j);<br>      }<br>    }<br>    if (res == null) return new String[0];<br>    String[] ss = new String[n];<br>    for (int i = 0; i &lt; n; i++) ss[i] = new String(res[i]);<br>    return ss;<br>  }<br>  char[][] min(char[][] a, char[][] b) {<br>    if (a == null) return b;<br>    if (b == null) return a;<br>    int n = a.length, m = a[0].length;<br>    for (int i = 0; i &lt; n; i++) {<br>      for (int j = 0; j &lt; m; j++) {<br>        if (a[i][j] &lt; b[i][j]) return a;<br>        if (a[i][j] &gt; b[i][j]) return b;<br>      }<br>    }<br>    return a;<br>  }<br>  void rotate(char[][] cs, int x, int y) {<br>    char c = cs[x][y];<br>    cs[x][y] = cs[x + 1][y];<br>    cs[x + 1][y] = cs[x + 1][y + 1];<br>    cs[x + 1][y + 1] = cs[x][y + 1];<br>    cs[x][y + 1] = c;<br>  }<br>  char[][] check(char[][] cs, char[][] ds) {<br>    int n = cs.length, m = cs[0].length;<br>    char[][] res = new char[n][m];<br>    for (int i = 0; i &lt; n; i++) {<br>      for (int j = 0; j &lt; m; j++) {<br>        if (cs[i][j] == '?' &amp;&amp; ds[i][j] == '?') res[i][j] = '0';<br>        else if (cs[i][j] == '?') res[i][j] = ds[i][j];<br>        else if (ds[i][j] == '?') res[i][j] = cs[i][j];<br>        else if (cs[i][j] == ds[i][j]) res[i][j] = cs[i][j];<br>        else return null;<br>      }<br>    }<br>    return res;<br>  }<br>  void debug(Object...os) {<br>    System.err.println(deepToString(os));<br>  }<br>}<br></td>