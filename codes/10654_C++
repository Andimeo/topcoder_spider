<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;stack&gt;<br>#include &lt;list&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iterator&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>using namespace std;<br> <br>typedef pair&lt;int,int&gt; PII;<br>typedef vector &lt;PII&gt; VPII;<br>#define MP(a,b) make_pair(a,b)<br>#define ST first<br>#define ND second<br> <br>typedef vector &lt;int &gt; VI;<br>#define REP(i,n) for (int i=0; i&lt;(n); ++i)<br>#define FOREACH(it,x) for(__typeof((x).begin()) it=(x.begin()); it!=(x).end(); ++it)<br>#define FOR(i,p,k) for (int i=(p); i&lt;=(k); ++i)<br>#define PB push_back<br>#define ALL(x) x.begin(),x.end()<br>#define SIZE(x) (int)x.size()<br> <br>const int N = 1510;<br>int fu[N];<br>int fufind(int x){<br>  return fu[x] &lt; 0 ? x : fu[x] = fufind(fu[x]);<br>}<br> <br>class TransportationNetwork {<br>  public:<br>  double minCost(vector &lt;int&gt; cityX, vector &lt;int&gt; cityY, double roadCost, double airportCost) {<br>    int n = SIZE(cityX);<br>    vector&lt;pair&lt;double,PII&gt; &gt; v;<br>    REP(i,n) fu[i]=-1;<br>    REP(i,n) REP(j,i){<br>      v.PB(MP(hypot(cityX[i]-cityX[j],cityY[i]-cityY[j]),MP(i,j)));<br>    }<br>    sort(ALL(v));<br>    double res = n * airportCost;<br>    int lotniska = n;<br>    double koszt = 0;<br>    FOREACH(it,v){<br>      int a = fufind(it-&gt;ND.ST);<br>      int b = fufind(it-&gt;ND.ND);<br>      if (a != b){<br>        if (fu[a] &lt; fu[b]) swap(a,b);<br>        fu[b] += fu[a];<br>        fu[a] = b;<br>        lotniska--;<br>        koszt += it-&gt;ST * roadCost;<br>        res = min(res, koszt + lotniska * airportCost);<br>      }<br>    }<br>    res = min(res, koszt);<br>    return res;<br>  }<br>  <br> <br>};<br> <br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>