<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define SIZE(X) ((int)(X.size()))<br>#define MP(X,Y) make_pair(X,Y)<br>typedef long long int64;<br>template&lt;class T&gt; inline void checkmax(T &amp;a,T b){if(b&gt;a) a=b;}<br> <br>const int64 oo=1000000000LL*1000000000LL;<br> <br>class RowGame<br>{<br>public:<br>  int n,m;<br>  int64 G[110][110],E[110],F[110];<br>  pair&lt;int64,int64&gt; D[110];<br>  int64 score(vector &lt;int&gt; board, int _m)<br>  {<br>    int size=SIZE(board);<br>    m=_m;<br>    n=size+size;<br>    for (int i=0;i&lt;n;i++) for (int j=0;j&lt;n;j++) G[i][j]=-oo;<br>    for (int i=0;i&lt;size;i++)<br>      for (int j=0;j&lt;size;j++)<br>      {<br>        if (i&lt;=j)<br>        {<br>          int64 s=0;<br>          for (int k=i;k&lt;=j;k++) s+=board[k];<br>          G[i][j+size]=s;<br>        }<br>        if (i&gt;=j)<br>        {<br>          int64 s=0;<br>          for (int k=j;k&lt;=i;k++) s+=board[k];<br>          G[i+size][j]=s;<br>        }<br>      }<br>    for (int i=0;i&lt;n;i++) E[i]=0;<br>    for (int i=0;i&lt;n;i++)<br>      for (int j=0;j&lt;n;j++)<br>        if (G[i][j]!=-oo &amp;&amp; G[j][i]!=-oo &amp;&amp; G[i][j]&gt;=0)<br>          checkmax(E[i],G[i][j]+G[j][i]);<br>    for (int i=0;i&lt;n;i++) F[i]=-oo;<br>    for (int i=0;i&lt;n;i++)<br>      for (int j=0;j&lt;n;j++)<br>        if (G[i][j]!=-oo)<br>          checkmax(F[i],G[i][j]);<br>    for (int i=0;i&lt;n;i++)<br>      D[i]=MP(oo,oo);<br>    D[0]=MP(0,0);<br>    for (int step=0;step&lt;n;step++)<br>      for (int i=0;i&lt;n;i++)<br>        if (D[i].first!=oo)<br>          for (int j=0;j&lt;n;j++)<br>            if (G[i][j]!=-oo)<br>            {<br>              int64 tfirst=D[i].first;<br>              int64 tsecond=D[i].second;<br>              if (tsecond+G[i][j]&lt;0)<br>              {<br>                if (E[i]&lt;=0) continue;<br>                int64 cnt=(-tsecond-G[i][j]+E[i]-1)/E[i];<br>                tfirst+=cnt*2;<br>                tsecond+=E[i]*cnt;<br>              }<br>              tfirst++;<br>              tsecond+=G[i][j];<br>              if (tfirst&lt;D[j].first || tfirst==D[j].first &amp;&amp; tsecond&gt;D[j].second)<br>              {<br>                D[j].first=tfirst;<br>                D[j].second=tsecond;<br>              }<br>            }<br>    int64 R=0;<br>    for (int i=0;i&lt;n;i++)<br>      if (D[i].first!=oo &amp;&amp; D[i].first&lt;=m)<br>      {<br>        int64 now=D[i].second;<br>        checkmax(R,now);<br>        if (D[i].first+1&lt;=m)<br>          for (int j=0;j&lt;n;j++)<br>            if (G[i][j]!=-oo)<br>              checkmax(R,now+G[i][j]);<br>        if (E[i]&gt;0)<br>        {<br>          checkmax(R,now+(m-D[i].first)/2*E[i]);<br>          if (m-D[i].first&gt;=1)<br>            checkmax(R,now+(m-D[i].first-1)/2*E[i]+F[i]);<br>        }<br>      }<br>    return R;<br>  }<br>};<br> <br> <br> <br>// Powered by PopsEdit<br></td>