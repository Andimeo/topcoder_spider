<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class NumberPyramids {<br>public:<br>  int count(int, int);<br>};<br> <br>const int md = 1000000009;<br> <br>int f[1111111];<br> <br>int NumberPyramids::count(int b, int top) {<br>  if (b &gt; 20) return 0;<br>  if ((1 &lt;&lt; (b-1)) &gt; top) return 0;<br>  int i, j, c[30][30];<br>  memset(c,0,sizeof(c));<br>  for (i=0;i&lt;=b;i++) c[i][0] = 1;<br>  for (i=1;i&lt;=b;i++)<br>    for (j=1;j&lt;=i;j++) c[i][j] = c[i-1][j-1]+c[i-1][j];<br>  memset(f,0,sizeof(f));<br>  f[0] = 1;<br>  for (i=0;i&lt;b;i++) {<br>    int x = c[b-1][i];<br>    for (j=top;j&gt;=0;j--)<br>      if (j &gt;= x) f[j] = f[j-x];<br>      else f[j] = 0;<br>    for (j=0;j&lt;=top-x;j++) {<br>      f[j+x] += f[j];<br>      if (f[j+x] &gt;= md) f[j+x] -= md;<br>    }<br>  }<br>  return f[top];<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>