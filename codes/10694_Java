<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.io.*;<br> <br> <br>public class TheHexagonsDivTwo<br>{<br>  boolean[][] v = new boolean[7][7];<br>  long res = 0;<br>  public long count(int n, int k)<br>  {<br>    // 0<br>    v[0][1] = true;<br>    v[0][2] = true;<br>    v[0][3] = true;<br>    // 1<br>    v[1][0] = true;<br>    v[1][3] = true;<br>    v[1][4] = true;<br>    // 2<br>    v[2][5] = true;<br>    v[2][0] = true;<br>    v[2][3] = true;<br>    // 3<br>    v[3][0] = true;<br>    v[3][1] = true;<br>    v[3][2] = true;<br>    v[3][4] = true;<br>    v[3][5] = true;<br>    v[3][6] = true;<br>    // 4<br>    v[4][1] = true;<br>    v[4][6] = true;<br>    v[4][3] = true;<br>    // 5<br>    v[5][2] = true;<br>    v[5][6] = true;<br>    v[5][3] = true;<br>    // 6<br>    v[6][5] = true;<br>    v[6][4] = true;<br>    v[6][3] = true;<br>    int[] total = new int[k];<br>    int[] cnt = new int[k];<br>    for (int i = 1; i &lt;= n; ++i)<br>      total[i % k] += 1;<br>    int[][] am = new int[7][k];<br>    this.res = 0;<br>    solve(0, cnt, total, am);<br>    return res / 6;<br>  }<br>  <br>  private void solve(int at, int[] cnt, int[] total, int[][] am)<br>  {<br>    if (at == 7)<br>      update(cnt, total);<br>    else<br>    {<br>      boolean[] can = new boolean[7];<br>      Arrays.fill(can, true);<br>      for (int i = 0; i &lt; total.length; ++i)<br>      {<br>        if (cnt[i] + 1 &lt;= total[i] &amp;&amp; am[at][i] == 0)<br>        {<br>          ++cnt[i];<br>          for (int j = 0; j &lt; 7; ++j)<br>            if (v[at][j])<br>              am[j][i] += 1;<br>          solve(at + 1, cnt, total, am);<br>          for (int j = 0; j &lt; 7; ++j)<br>            if (v[at][j])<br>              am[j][i] -= 1;<br>          --cnt[i];<br>        }<br>      }<br>    }<br>    <br>  }<br> <br>  private void update(int[] cnt, int[] total)<br>  {<br>    long res = 1;<br>    for (int i = 0; i &lt; total.length; ++i)<br>      res *= a(total[i], cnt[i]);<br>    this.res += res;<br>  }<br> <br>  private long a(int n, int k)<br>  {<br>    long res = 1;<br>    for (int i = 0; i &lt; k; ++i)<br>      res *= (long) (n - i);<br>    return res;<br>  }<br> <br> <br>}<br> <br>//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!<br></td>