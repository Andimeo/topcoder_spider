<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.Arrays;<br>import java.util.LinkedList;<br>import java.util.Queue;<br> <br>public class MazeOnFire {<br> <br>  public int maximumTurns(String[] maze) {<br>    n = maze.length;<br>    m = maze[0].length();<br>    c = new char[maze.length][];<br>    for(int i=0; i&lt;n; i++)<br>      c[i] = maze[i].toCharArray();<br>    times = new int[n][m];<br>    used_fire = new boolean[n][m];<br>    used_man = new boolean[n][m];<br>    Queue&lt;int[]&gt; q1 = new LinkedList&lt;int[]&gt;();<br>    int sx = 0, sy = 0;<br>    for(int i=0; i&lt;n; i++){<br>      Arrays.fill(times[i], -1);<br>      for(int j=0; j&lt;m; j++){<br>        if(c[i][j] == 'F'){<br>          used_fire[i][j] = true;<br>          q1.add(new int[]{i, j, 0});<br>          times[i][j] = 0;<br>        }<br>        if(c[i][j] == '$'){<br>          sx = i;<br>          sy = j;<br>        }<br>      }<br>    }<br>    while(!q1.isEmpty()){<br>      int tmp[] = q1.poll(), i = tmp[0], j = tmp[1], time = tmp[2];<br>      for(int d=0; d&lt;4; d++){<br>        int x = i+dx[d], y = j+dy[d];<br>        if(in(x, y) &amp;&amp; !used_fire[x][y]){<br>          used_fire[x][y] = true;<br>          times[x][y] = time+1;<br>          q1.add(new int[]{x, y, time+1});<br>        }<br>      }<br>    }<br>    Queue&lt;int[]&gt; q2 = new LinkedList&lt;int[]&gt;();<br>    q2.add(new int[]{sx, sy, 0});<br>    int maxi = 0;<br>    while(!q2.isEmpty()){<br>      int tmp[] = q2.poll(), i = tmp[0], j = tmp[1], time = tmp[2];<br>      if(times[i][j] == -1)return -1;<br>      maxi = Math.max(maxi, times[i][j]);<br>      for(int d=0; d&lt;4; d++){<br>        int x = i+dx[d], y = j+dy[d];<br>        if(in(x, y) &amp;&amp; !used_man[x][y] &amp;&amp; times[x][y] &gt; time+1){<br>          used_man[x][y] = true;<br>          q2.add(new int[]{x, y, time+1});<br>        }<br>      }<br>    }<br>    return maxi;<br>  }<br>  public boolean in(int i, int j){<br>    return i &gt;=0 &amp;&amp; i &lt; n &amp;&amp; j &gt;= 0 &amp;&amp; j&lt; m &amp;&amp; c[i][j] != '#';<br>  }<br>  public char c[][];<br>  public int n, m, times[][], dx[] = new int[]{0, 1, 0, -1}, dy[] = new int[]{1, 0, -1, 0};<br>  public boolean used_fire[][], used_man[][];<br>}<br></td>