<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;algorithm&gt;<br>#include&lt;bitset&gt;<br>#include&lt;cctype&gt;<br>#include&lt;cmath&gt;<br>#include&lt;cstring&gt;<br>#include&lt;cstdio&gt;<br>#include&lt;cstdlib&gt;<br>#include&lt;ctime&gt;<br>#include&lt;deque&gt;<br>#include&lt;functional&gt;<br>#include&lt;iomanip&gt;<br>#include&lt;iostream&gt;<br>#include&lt;list&gt;<br>#include&lt;map&gt;<br>#include&lt;numeric&gt;<br>#include&lt;queue&gt;<br>#include&lt;set&gt;<br>#include&lt;sstream&gt;<br>#include&lt;stack&gt;<br>#include&lt;string&gt;<br>#include&lt;utility&gt;<br>#include&lt;vector&gt;<br> <br>using namespace std;<br> <br>#define fore(i, a) for(int i = 0; i &lt; (a); i++)<br>#define fort(i, a) for(typeof(a.begin()) i = a.begin(); i != a.end(); i++)<br>#define all(x) x.begin(), x.end()<br>#define pb push_back<br>#define mp make_pair<br>#define x first<br>#define y second<br>#define inf (1&lt;&lt;29)<br> <br>typedef long long ll;<br>typedef vector&lt;int&gt; vi;<br>typedef pair&lt;int,int&gt; pi;<br> <br> <br>class SilverDistance <br>{<br>  public:<br>    int minSteps(int sx, int sy, int gx, int gy)<br>    {<br>      int S = sx + sy, G = gx + gy;<br>      if((S&amp;1) == (G&amp;1)) return max(abs(sx-gx), abs(sy-gy));<br>      return 1 + minSteps(sx,sy+1,gx,gy);<br>    }<br>};<br> <br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.11 [modified TZTester]<br>// Powered by CodeProcessor<br></td>