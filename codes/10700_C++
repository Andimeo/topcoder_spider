<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br><br>using namespace std;<br><br>#define SIZE(X) ((int)(X.size()))<br>#define LENGTH(X) ((int)(X.length()))<br>template&lt;class T&gt; inline void checkmin(T &amp;a,T b){if(b&lt;a) a=b;}<br><br>class EllysString<br>{<br>public:<br>  int n,a[2600],b[2600];<br>  int f[2600];<br>  int sa[26],sb[26],ga[26][2600],gb[26][2600];<br>  int theMin(vector &lt;string&gt; vs, vector &lt;string&gt; vt)<br>  {<br>    string s1="",s2="";<br>    for (int i=0;i&lt;SIZE(vs);i++) s1+=vs[i];<br>    for (int i=0;i&lt;SIZE(vt);i++) s2+=vt[i];<br>    n=LENGTH(s1);<br>    for (int i=0;i&lt;n;i++) a[i]=s1[i],b[i]=s2[i];<br>    for (int i=0;i&lt;=n;i++) f[i]=i;<br>    for (int k=0;k&lt;n;k++)<br>    {<br>      checkmin(f[k+1],f[k]+1);<br>      int total=0,cbad=0;<br>      memset(sa,0,sizeof(sa));<br>      memset(sb,0,sizeof(sb));<br>      for (int i=k;i&lt;n;i++)<br>      {<br>        int key=a[i]-'a';<br>        cbad-=(int)(sa[key]!=sb[key]);<br>        ga[key][sa[key]]=i;<br>        if (sa[key]&lt;sb[key]) total+=abs(ga[key][sa[key]]-gb[key][sa[key]]);<br>        sa[key]++;<br>        cbad+=(int)(sa[key]!=sb[key]);<br>        key=b[i]-'a';<br>        cbad-=(int)(sa[key]!=sb[key]);<br>        gb[key][sb[key]]=i;<br>        if (sb[key]&lt;sa[key]) total+=abs(gb[key][sb[key]]-ga[key][sb[key]]);<br>        sb[key]++;<br>        cbad+=(int)(sa[key]!=sb[key]);<br>        if (cbad==0) checkmin(f[i+1],f[k]+total/2);<br>      }<br>    }<br>    return f[n];<br>  }<br>};<br></td>