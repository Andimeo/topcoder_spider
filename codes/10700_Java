<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.Arrays;<br> <br>/**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> */<br>public class EllysString {<br>    static final int INF = (int) 1e9;<br>    <br>    public int theMin(String[] _s, String[] _t) {<br>        String s = concatenate(_s);<br>        String t = concatenate(_t);<br>        if (s.length() != t.length()) throw new RuntimeException();<br>        int[] scnt = new int[26];<br>        int[] tcnt = new int[26];<br>        for (char ch : s.toCharArray()) ++scnt[ch - 'a'];<br>        for (char ch : t.toCharArray()) ++tcnt[ch - 'a'];<br>        int[][] spos = new int[26][];<br>        int[][] tpos = new int[26][];<br>        for (int i = 0; i &lt; 26; ++i) {<br>            spos[i] = new int[scnt[i]];<br>            tpos[i] = new int[tcnt[i]];<br>        }<br>        int[] best = new int[s.length() + 1];<br>        Arrays.fill(best, INF);<br>        best[0] = 0;<br>        for (int start = 0; start &lt; s.length(); ++start) {<br>            best[start + 1] = Math.min(best[start + 1], best[start] + 1);<br>            Arrays.fill(scnt, 0);<br>            Arrays.fill(tcnt, 0);<br>            int numEqual = 26;<br>            int totalDelta = 0;<br>            for (int len = 1; start + len &lt;= s.length(); ++len) {<br>                int ch = s.charAt(start + len - 1) - 'a';<br>                if (scnt[ch] == tcnt[ch]) --numEqual;<br>                spos[ch][scnt[ch]++] = len;<br>                if (scnt[ch] &lt;= tcnt[ch]) {<br>                    totalDelta += Math.abs(spos[ch][scnt[ch] - 1] - tpos[ch][scnt[ch] - 1]);<br>                }<br>                if (scnt[ch] == tcnt[ch]) ++numEqual;<br>                ch = t.charAt(start + len - 1) - 'a';<br>                if (scnt[ch] == tcnt[ch]) --numEqual;<br>                tpos[ch][tcnt[ch]++] = len;<br>                if (tcnt[ch] &lt;= scnt[ch]) {<br>                    totalDelta += Math.abs(spos[ch][tcnt[ch] - 1] - tpos[ch][tcnt[ch] - 1]);<br>                }<br>                if (scnt[ch] == tcnt[ch]) ++numEqual;<br>                if (numEqual == 26) {<br>                    best[start + len] = Math.min(best[start + len], best[start] + totalDelta / 2);<br>                }<br>            }<br>        }<br>        return best[s.length()];<br>    }<br> <br>    private String concatenate(String[] t) {<br>        StringBuilder b = new StringBuilder();<br>        for (String x : t) b.append(x);<br>        return b.toString();<br>    }<br>}<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.16 [modified TZTester]<br>// Powered by CodeProcessor<br></td>