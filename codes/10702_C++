<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>typedef long long int64;<br> <br>class TheHexagonsDivOne<br>{<br>public:<br>  int n;<br>  bool G[7][7];<br>  int A[7];<br>  bool used[1000];<br>  int64 DFS(int d,int p)<br>  {<br>    if (d==7)<br>      return 1;<br>    int64 R=0;<br>    for (int i=0;i&lt;p;i++) for (int s=0;s&lt;2;s++)<br>    {<br>      A[d]=i+s*n;<br>      if (used[A[d]]) continue;<br>      bool isGood=true;<br>      for (int k=0;k&lt;d;k++) if (G[d][k] &amp;&amp; A[k]%n==A[d]%n) isGood=false;<br>      if (isGood)<br>      {<br>        used[A[d]]=true;<br>        R+=DFS(d+1,p);<br>        used[A[d]]=false;<br>      }<br>    }<br>    if (p&lt;n)<br>    {<br>      A[d]=p;<br>      used[A[d]]=true;<br>      R+=DFS(d+1,p+1)*(n-p)*2;<br>      used[A[d]]=false;<br>    }<br>    return R;<br>  }<br>  int64 count(int _n)<br>  {<br>    n=_n;<br>    memset(G,false,sizeof(G));<br>    G[1][0]=true;<br>    G[2][0]=G[2][1]=true;<br>    G[3][0]=G[3][2]=true;<br>    G[4][1]=G[4][2]=true;<br>    G[5][2]=G[5][3]=true;<br>    G[6][2]=G[6][4]=G[6][5]=true;<br>    memset(used,false,sizeof(used));<br>    int64 R=DFS(0,0);<br>    return R/6;<br>  }<br>};<br></td>