<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class WordsGame<br>{<br>  static int ck(string ax,string word)<br>  {<br>    int ret=0;<br>    char[] a= ax.ToCharArray(),b=word.ToCharArray();<br>    for(int i=0;i&lt;a.Length;i++)<br>    {<br>      if(a[i]!=b[i])<br>      {<br>        for(int j=i;j&lt;a.Length;j++)<br>        {<br>          if(a[j]==b[i])<br>          {<br>            char tmp=a[i];<br>            a[i]=a[j];<br>            a[j]=tmp;<br>            ret++;<br>          }<br>        }<br>      }<br>    }<br>    return ret;<br>  }<br>  public int minimumSwaps(string[] grid, string word)<br>  {<br>    List&lt;string&gt; can=new List&lt;string&gt;();<br>    string so=word;<br>    char[] c=so.ToCharArray();<br>    Array.Sort(c);<br>    foreach(string s in grid)<br>    {<br>      string ss=s;<br>      char[] cc=ss.ToCharArray();<br>      Array.Sort(cc);<br>      if(new string(c)==new string(cc))can.Add(s);<br>    }<br>    for(int i=0;i&lt;word.Length;i++)<br>    {<br>      string ss="";<br>      for(int j=0;j&lt;word.Length;j++)<br>        ss+=grid[j][i];<br>      <br>      char[] cc=ss.ToCharArray();<br>      Array.Sort(cc);<br>      if(new string(c)==new string(cc))can.Add(ss);<br>      <br>    }<br>    if(can.Count==0)return -1;<br>    else<br>    {<br>      int min=100;<br>      foreach(string s in can)<br>      {<br>        int k=ck(s,word);<br>        if(k&lt;=min)min=k;<br>      }<br>      return min;<br>    }<br>  }<br> <br> <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>