<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;sstream&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class ActivateTree {<br>public:<br>  int minCost(vector &lt;string&gt;, string, vector &lt;int&gt;);<br>};<br> <br>const int INF = 1000000000;<br>int pv[20], pt[20], vt[20], nv, kt, z, val, ut, was[20], ver[20];<br>int g[70010], f[70010];<br> <br>void rec(int v, int mk) {<br>  int i;<br>  if (v == kt) {<br>    for (i=0;i&lt;z;i++)<br>      if (f[i]+val &lt; g[i ^ mk]) g[i ^ mk] = f[i]+val;<br>    return;<br>  }<br>  for (i=0;i&lt;nv;i++)<br>    if (!was[i] &amp;&amp; pv[i] == ver[pt[v]]) {<br>      ver[v] = i;<br>      was[i] = 1;<br>      rec(v+1,mk | (1 &lt;&lt; (i-1)));<br>      was[i] = 0;<br>    }<br>}<br> <br>void gettree(int v, int p) {<br>  int i;<br>  for (i=0;i&lt;kt;i++)<br>    if (vt[i] == v) {<br>      pt[ut++] = p;<br>      gettree(i,ut-1);<br>    }<br>}<br> <br>int ActivateTree::minCost(vector &lt;string&gt; trees, string target, vector &lt;int&gt; costs) {<br>  int nt = trees.size(); nv = 0;<br>  stringstream ss;<br>  ss.clear();<br>  ss &lt;&lt; target;<br>  while (ss &gt;&gt; pv[nv]) nv++;<br>  z = 1 &lt;&lt; (nv-1);<br>  int ms, t, sv;<br>  for (ms=0;ms&lt;z;ms++) f[ms] = INF;<br>  f[0] = 0;<br>  for (t=0;t&lt;nt;t++) {<br>    kt = 0;<br>    ss.clear();<br>    ss &lt;&lt; trees[t];<br>    while (ss &gt;&gt; vt[kt]) kt++;<br>    val = costs[t];<br>    ut = 1;<br>    pt[0] = -1;<br>    gettree(0,0);<br>    for (sv=0;sv&lt;nv;sv++) {<br>      for (ms=0;ms&lt;z;ms++) g[ms] = INF;<br>      memset(was,0,sizeof(was));<br>      ver[0] = sv;<br>      was[sv] = 1;<br>      rec(1,0);<br>      for (ms=0;ms&lt;z;ms++)<br>        if (g[ms] &lt; f[ms]) f[ms] = g[ms];<br>    }<br>  }<br>  int ans = f[z-1];<br>  if (ans == INF) ans = -1;<br>  return ans;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>