<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Collections.Generic;<br>using System.Diagnostics;<br><br>public class ManhattanPatrol {<br>    public long countIntersections(int N, int AX, int BX, int MX, int AY, int BY, int MY) {<br>        int[] xx = new int[N];<br>        int[] yy = new int[N];<br>        int x = BX;<br>        int y = BY;<br>        for (int i = 0; i &lt; N; i++)<br>        {<br>            xx[i] = x;<br>            yy[i] = y;<br>            x = (AX * x + BX) % MX;<br>            y = (AY * y + BY) % MY;<br>        }<br>        long res = 0;<br>        res += count(N, xx, yy);<br>        return res;<br>    }<br><br>    long count(int n, int[] xx, int[] yy)<br>    {<br>        Array.Sort(xx, yy);<br>        int[,] dpg = new int[n, n];<br>        int[,] dpl = new int[n, n];<br>        for (int i = n - 2; i &gt;= 0; i--)<br>        {<br>            for (int j = 0; j &lt; n; j++)<br>            {<br>                dpg[i, j] = dpg[i + 1, j];<br>                dpl[i, j] = dpl[i + 1, j];<br>                if (yy[i + 1] &gt; yy[j])<br>                    dpg[i, j]++;<br>                if (yy[i + 1] &lt; yy[j])<br>                    dpl[i, j]++;<br>            }<br>        }<br><br>        long res = 0;<br>        for (int i = 0; i &lt; n; i++)<br>        {<br>            for (int j = i + 1; j &lt; n; j++)<br>            {<br>                if (yy[j] &gt; yy[i])<br>                {<br>                    long up = dpg[i, j] - dpg[j, j];<br>                    long down = dpl[i, i] - dpl[j, i];<br>                    res += up * down;<br>                }<br>                else<br>                {<br>                    long up = dpg[i, i] - dpg[j, i];<br>                    long down = dpl[i, j] - dpl[j, j];<br>                    res += up * down;<br>                }<br>            }<br>        }<br>        return res;<br>    }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>