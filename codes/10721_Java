<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br> <br> <br>public class ManhattanPatrol<br>{<br>  public long countIntersections(int n, int ax, int bx, int mx, int ay, int by, int my)<br>  {<br>    int[] xs = new int[n];<br>    int[] ys = new int[n];<br>    xs[0] = bx;<br>    ys[0] = by;<br>    for (int i = 1; i &lt; n; ++i) {<br>      xs[i] = (ax * xs[i - 1] + bx) % mx;<br>      ys[i] = (ay * ys[i - 1] + by) % my;<br>    }<br>    long ans = 0;<br>    for (int i = 0; i &lt; n; ++i) {<br>      for (int j = i + 1; j &lt; n; ++j) {<br>        int minx = Math.min(xs[i], xs[j]);<br>        int maxx = Math.max(xs[i], xs[j]);<br>        int miny = Math.min(ys[i], ys[j]);<br>        int maxy = Math.max(ys[i], ys[j]);<br>        long u = 0, v = 0;<br>        for (int t = 0; t &lt; n; ++t) {<br>          if (xs[t] &gt; minx &amp;&amp; xs[t] &lt; maxx) {<br>            if (ys[t] &lt; miny) {<br>              ++u;<br>            }<br>            if (ys[t] &gt; maxy) {<br>              ++v;<br>            }<br>          }<br>        }<br>        ans += u * v;<br>      }<br>    }<br>    return ans;<br>  }<br>  <br> <br>}<br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>