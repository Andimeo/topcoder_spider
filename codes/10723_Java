<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class ParkAmusement{<br>    public double getProbability(String[] landings, int startLanding, int K){<br>  int len = landings.length;<br>  double[] p = new double[len];<br>  double[] fp = new double[len];<br>  boolean[][] adj = new boolean[len][len];<br>  boolean[] goalp = new boolean[len];<br>  boolean[] pondp = new boolean[len];<br>  int[] npipes = new int[len];<br>  int fc = 0;<br>  for(int i=0; i &lt; len; i++){<br>      for(int j=0; j &lt; len; j++){<br>    adj[i][j] = false;<br>      }<br>  }<br>  for(int i=0; i &lt; len; i++){<br>      npipes[i] = 0;<br>      if(landings[i].charAt(i) == 'E'){<br>    goalp[i] = true;<br>    pondp[i] = false;<br>      }else if(landings[i].charAt(i) == 'P'){<br>    goalp[i] = false;<br>    pondp[i] = true;<br>      }else{<br>    goalp[i] = false;<br>    pondp[i] = false;<br>    fc++;<br>    for(int j=0; j &lt; len; j++){<br>        if(landings[i].charAt(j) == '1'){<br>      adj[i][j] = true;<br>      npipes[i]++;<br>        }<br>    }<br>      }<br>  }<br>  //<br>  for(int i=0; i &lt; len; i++){<br>      if(!goalp[i] &amp;&amp; !pondp[i]){<br>    p[i] = 1.0 / (double)fc;<br>      }<br>  }<br>  fp[startLanding] = 1.0 / (double)fc;<br>  double ep = 0;<br>  double fep = 0;<br>  //<br>  for(int i=0; i &lt; K; i++){<br>      double[] np = new double[len];<br>      double[] nfp = new double[len];<br>      for(int j=0; j &lt; len; j++){<br>    np[j] = 0.0;<br>    nfp[j] = 0.0;<br>      }<br> <br>      for(int j=0; j &lt; len; j++){<br>    if(!goalp[j] &amp;&amp; !pondp[j]){<br>        for(int k=0; k &lt; len; k++){<br>      if( j == k){<br>          continue;<br>      }else if(goalp[k] &amp;&amp; adj[j][k]){<br>          if( i == K-1 ){<br>        ep += p[j] / (double)npipes[j];<br>        fep += fp[j] / (double)npipes[j];<br>          }<br>      }else{<br>          if(adj[j][k]){<br>        np[k] += p[j] / (double)npipes[j];<br>        nfp[k] += fp[j] / (double)npipes[j];<br>          }<br>      }<br>        }<br>    }<br>      }<br> <br>      p = np;<br>      fp = nfp;<br>  }<br> <br>  return fep / ep;<br>    }<br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>