<td class="problemText" colspan="8" valign="middle" align="left">
            using System.Collections.Generic;<br>public class ColorfulStrings {<br>  public string getKth(int n, int k) {<br>        Dictionary&lt;int, object&gt; used = new Dictionary&lt;int, object&gt;();<br>        index = 0;<br>        return doit(n, k, used, "");<br>  }<br><br>    int index;<br><br>    private string doit(int n, int k, Dictionary&lt;int, object&gt; used, string prefix)<br>    {<br>        if (prefix.Length == n) {<br>            ++index;<br>            if (index == k)<br>                return prefix;<br>            return "";<br>        }<br>        Dictionary&lt;int, object&gt; newProds = new Dictionary&lt;int, object&gt;();<br>        for (int digit = 0; digit &lt; 10; ++digit)<br>        {<br>            bool ok = true;<br>            int prod = digit;<br>            if (used.ContainsKey(prod))<br>                continue;<br>            newProds.Clear();<br>            newProds[prod] = null;<br>            for (int i = prefix.Length - 1; i &gt;= 0; --i)<br>            {<br>                prod *= prefix[i] - '0';<br>                if (used.ContainsKey(prod))<br>                {<br>                    ok = false;<br>                    break;<br>                }<br>                if (newProds.ContainsKey(prod))<br>                {<br>                    ok = false;<br>                    break;<br>                }<br>                newProds[prod] = null;<br>            }<br>            if (!ok)<br>                continue;<br>            foreach (int x in newProds.Keys)<br>                used[x] = null;<br>            string res = doit(n, k, used, prefix + digit);<br>            if (res != "")<br>                return res;<br>            foreach (int x in newProds.Keys)<br>                used.Remove(x);<br>        }<br>        return "";<br>    }<br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>