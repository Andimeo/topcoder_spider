<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br><br>class Desertification<br>{<br>    public int desertArea(string[] island, int T)<br>    {<br>        int h = island.Length;<br>        int w = island[0].Length;<br>        bool[,] area = new bool[h,w];<br><br><br>        int count = 0;<br>        for (int i = 0; i &lt; h; ++i)<br>            for (int j = 0; j &lt; w; ++j)<br>            {<br>                area[i, j] = island[i][j] == 'F';<br>                if (!area[i,j])<br>                    ++count;<br>            }<br><br>        int oldcount = -1;<br><br>        for (int t = 0; t &lt; T; ++t)<br>        {<br>            if (count == h*w || count == oldcount)<br>                break;<br><br>            oldcount = count;<br>            count = 0;<br><br>            bool[,] newarea = (bool[,])area.Clone();<br>            for (int i = 0; i &lt; h; ++i)<br>                for (int j = 0; j &lt; w; ++j)<br>                {<br>                    if (!area[i, j])<br>                        newarea[i, j] = false;<br>                    else if (i &gt; 0 &amp;&amp; !area[i - 1, j])<br>                        newarea[i, j] = false;<br>                    else if (i &lt; h - 1 &amp;&amp; !area[i + 1, j])<br>                        newarea[i, j] = false;<br>                    else if (j &gt; 0 &amp;&amp; !area[i, j - 1])<br>                        newarea[i, j] = false;<br>                    else if (j &lt; w - 1 &amp;&amp; !area[i, j + 1])<br>                        newarea[i, j] = false;<br><br>                    if (!newarea[i,j])<br>                        ++count;<br>                }<br><br>            area = newarea;<br>        }<br><br>        return count;<br>    }<br>}<br></td>