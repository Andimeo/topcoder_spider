<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br> <br> <br>public class Desertification<br>{<br>  public int desertArea(String[] island, int T)<br>  {<br>    boolean[][]a = new boolean[island.length][island[0].length()];<br>    int n = island.length;<br>    int m = island[0].length();<br>    for(int i=0;i&lt;n;++i)for(int j=0;j&lt;m;++j)a[i][j]=(island[i].charAt(j)=='F');<br>    for(int ii=0;ii&lt;T;++ii)<br>    {<br>      boolean[][]b = new boolean[n][m];<br> <br>      for(int i=0;i&lt;n;++i)for(int j=0;j&lt;m;++j)<br>      {<br>        if (!a[i][j]){b[i][j]=false;continue;}<br>        if (a[i][j])<br>        {<br>          boolean pp=false;<br>          if (i-1&gt;=0&amp;&amp;!a[i-1][j])pp=true;<br>          if (j-1&gt;=0&amp;&amp;!a[i][j-1])pp=true;<br>          if (i+1&lt;n&amp;&amp;!a[i+1][j])pp=true;<br>          if (j+1&lt;m&amp;&amp;!a[i][j+1])pp=true;<br>          if (pp)<br>          {<br>            b[i][j]=false;<br>            continue;<br>          }<br>        }<br>        b[i][j] = true;<br>      }<br>      <br>      boolean eq = true;<br>      for(int i=0;i&lt;n;++i)for(int j=0;j&lt;m;++j)if (a[i][j]!=b[i][j])eq=false;<br>      if (eq)break;<br>      a=b;<br>    }<br>//    String[]ans = new String[n];<br>    int ans=0;<br>    for(int i=0;i&lt;n;++i)<br>    {<br>//      ans[i]="";<br>      for(int j=0;j&lt;m;++j)if(!a[i][j])++ans;//ans[i]+="F"; else ans[i]+="D";<br>    <br>    }<br>    return ans;<br>  }<br>  <br> <br>}<br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>