<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br> <br> <br>public class FencingGarden<br>{<br>  public long computeWidth(int[] a)<br>  {<br>    long sum = 0;<br>    for (int i : a) {<br>      sum += i;<br>    }<br>    int n = a.length;<br>    int u = n / 2;<br>    int v = (n + 1) / 2;<br>    long[] sums1 = new long[1 &lt;&lt; u];<br>    long[] sums2 = new long[1 &lt;&lt; v];<br>    for (int i = 1; i &lt; 1 &lt;&lt; u; ++i) {<br>      int j = Integer.numberOfTrailingZeros(i);<br>      sums1[i] = sums1[i ^ (1 &lt;&lt; j)] + a[j];<br>    }<br>    for (int i = 1; i &lt; 1 &lt;&lt; v; ++i) {<br>      int j = Integer.numberOfTrailingZeros(i);<br>      sums2[i] = sums2[i ^ (1 &lt;&lt; j)] + a[u + j];<br>    }<br>    Arrays.sort(sums1);<br>    Arrays.sort(sums2);<br>    long ans = -1;<br>    long ansSq = -1;<br>    for (int i = 0, j = sums2.length - 1; i &lt; sums1.length; ++i) {<br>      while (j &gt; 0 &amp;&amp; (sums1[i] + sums2[j]) * 4 &gt; sum) {<br>        --j;<br>      }<br>      {<br>        long l = sums1[i] + sums2[j];<br>        long sq = 2 * l * (sum - 2 * l);<br>        if (sum &gt;= 2 * l &amp;&amp; sq &gt; ansSq || sq == ansSq &amp;&amp; ans &lt; sum - 2 * l) {<br>          ans = sum - 2 * l;<br>          ansSq = sq;<br>        }<br>      }<br>      if (j &lt; sums2.length - 1) {<br>        long l = sums1[i] + sums2[j + 1];<br>        long sq = 2 * l * (sum - 2 * l);<br>        if (sum &gt;= 2 * l &amp;&amp; sq &gt; ansSq || sq == ansSq &amp;&amp; ans &lt; sum - 2 * l) {<br>          ans = sum - 2 * l;<br>          ansSq = sq;<br>        }<br>      }<br>    }<br>    for (int i = 0, j = sums2.length - 1; i &lt; sums1.length; ++i) {<br>      while (j &gt; 0 &amp;&amp; (sums1[i] + sums2[j]) * 2 &gt; sum) {<br>        --j;<br>      }<br>      {<br>        long l = sums1[i] + sums2[j];<br>        long sq = l * (sum - l);<br>        if (sq &gt; ansSq || sq == ansSq &amp;&amp; ans &lt; l) {<br>          ans = l;<br>          ansSq = sq;<br>        }<br>      }<br>      if (j &lt; sums2.length - 1) {<br>        long l = sums1[i] + sums2[j + 1];<br>        long sq = l * (sum - l);<br>        if (sq &gt; ansSq || sq == ansSq &amp;&amp; ans &lt; l) {<br>          ans = l;<br>          ansSq = sq;<br>        }<br>      }<br>    }<br>    return ans;<br>  }<br>  <br> <br>}<br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>