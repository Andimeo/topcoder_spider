<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br><br>public class DrawingLines {<br>  public double countLineCrossings(int n, int[] startDot, int[] endDot) {<br>        int k = startDot.Length;<br>    double res = 0;<br>        int free = n - k;<br>        int[] freeup = new int[n+1];<br>        int[] freedown = new int[n+1];<br>        freeup[0] = freedown[0] = 0;<br>        for (int i = 1; i &lt;= n; i++)<br>        {<br>            bool used = false;<br>            for (int j = 0; j &lt; k; j++)<br>            {<br>                if (startDot[j] == i) used = true;<br>            }<br>            freeup[i] = freeup[i - 1] + (used ? 0 : 1);<br>        }<br>        for (int i = 1; i &lt;= n; i++)<br>        {<br>            bool used = false;<br>            for (int j = 0; j &lt; k; j++)<br>            {<br>                if (endDot[j] == i) used = true;<br>            }<br>            freedown[i] = freedown[i - 1] + (used ? 0 : 1);<br>        }<br>        for (int i = 0; i &lt; k; i++)<br>        {<br>            for (int j = 0; j &lt; i; j++)<br>            {<br>                if ((startDot[i] - startDot[j]) * (endDot[i] - endDot[j]) &lt; 0) res += 1;<br>            }<br>        }<br>        for (int i = 0; i &lt; k; i++)<br>        {<br>            res += (double)((freeup[startDot[i]] * (free - freedown[endDot[i]]) + (free - freeup[startDot[i]]) * freedown[endDot[i]])) / (double)free;<br>        }<br>        res += free*(free-1)*0.25;<br>    return res;<br>  }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>