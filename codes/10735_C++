<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;bitset&gt;<br>#include &lt;cassert&gt;<br>#include &lt;cctype&gt;<br>#include &lt;climits&gt;<br>#include &lt;cmath&gt;<br>#include &lt;complex&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;ctime&gt;<br>#include &lt;deque&gt;<br>#include &lt;fstream&gt;<br>#include &lt;functional&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;iostream&gt;<br>#include &lt;limits&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;stack&gt;<br>#include &lt;string&gt;<br>#include &lt;utility&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br> <br>const int MAXN = 10005;<br> <br>int line [MAXN], psum [MAXN];<br>bool end [MAXN];<br> <br>struct DrawingLines<br>{<br>    double countLineCrossings (int n, vector &lt;int&gt; startDot, vector &lt;int&gt; endDot)<br>    {<br>        memset (line, -1, sizeof (line));<br> <br>        for (int i = 0; i &lt; (int) startDot.size (); i++)<br>            line [startDot [i] - 1] = endDot [i] - 1;<br> <br>        memset (end, false, sizeof (end));<br> <br>        for (int i = 0; i &lt; (int) endDot.size (); i++)<br>            end [endDot [i] - 1] = true;<br> <br>        psum [0] = 0;<br> <br>        for (int i = 0; i &lt; n; i++)<br>            psum [i + 1] = psum [i] + (end [i] ? 0 : 1);<br> <br>        double total = 0.25 * (n - startDot.size ()) * (n - startDot.size () - 1);<br> <br>        for (int i = 0; i &lt; (int) startDot.size (); i++)<br>            for (int j = i + 1; j &lt; (int) startDot.size (); j++)<br>                if ((startDot [i] &lt; startDot [j]) ^ (endDot [i] &lt; endDot [j]))<br>                    total++;<br> <br>        for (int i = 0; i &lt; n; i++)<br>            if (line [i] == -1)<br>                for (int j = 0; j &lt; (int) startDot.size (); j++)<br>                {<br>                    int s = startDot [j] - 1, e = endDot [j] - 1;<br> <br>                    if (i &gt; s)<br>                        total += (double) psum [e] / psum [n];<br>                    else<br>                        total += 1.0 - (double) psum [e] / psum [n];<br>                }<br> <br>        return total;<br>    }<br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.16 [modified TZTester]<br>// Powered by CodeProcessor<br></td>