<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br> <br>public class NetworkSecurity<br>{<br>  public int secureNetwork(string[] clientCable, string[] serverCable)<br>  {<br>    int N = clientCable.Length;<br>    bool[,] c = new bool[N,N];<br>    int M = serverCable[0].Length;<br>    bool[,] s = new bool[N,M];<br>    <br>    for ( int i = 0; i &lt; N; i++ )<br>      for ( int j = 0; j &lt; N; j++ )<br>        c[i,j] = ( clientCable[i][j] == 'Y' );<br>        <br>    for ( int k = 0; k &lt; N; k++ )<br>      for ( int i = 0; i &lt; N; i++ )<br>        for ( int j = 0; j &lt; N; j++ )<br>          c[i,j] |= ( c[i,k] &amp;&amp; c[k,j] );<br>          <br>    for ( int i = 0; i &lt; N; i++ )<br>      for ( int j = 0; j &lt; M; j++ )<br>        s[i,j] = ( serverCable[i][j] == 'Y' );<br>    <br>    int count = 0;<br>    <br>    for ( int i = 0; i &lt; N; i++ )<br>      for ( int j = 0; j &lt; M; j++ ) <br>        if ( s[i,j] ) {<br>          bool add = true;<br>          <br>          for ( int k = 0; k &lt; N; k++ )<br>            if ( c[i,k] &amp;&amp; s[k,j] )<br>              add = false;<br>        <br>          if ( add )<br>            count++;<br>        }<br>    <br>    return count;<br>  }<br> <br> <br>}<br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>