<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;math.h&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;numeric&gt;<br>#include &lt;bitset&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>using namespace std;<br> <br>int dr[]={0,1,0,-1,1,1,-1,-1};<br>int dc[]={1,0,-1,0,1,-1,1,-1};<br>#define zmax(a,b) (((a)&gt;(b))?(a):(b))<br>#define zmin(a,b) (((a)&gt;(b))?(b):(a))<br>#define zabs(a) (((a)&gt;=0)?(a):(-(a)))<br>#define iif(c,t,f) ((c)?(t):(f))<br>template&lt;class A, class B&gt; A cvt(B x) {stringstream s;s&lt;&lt;x;A r;s&gt;&gt;r;return r;}<br> <br>bool cn[100][100];<br> <br>class NetworkSecurity {<br>public:<br>int secureNetwork(vector &lt;string&gt; A, vector &lt;string&gt; B) {<br>  int ret = 0;<br>  int n = A.size();<br>  int m = B[0].size();<br>  for(int i = 0; i &lt; n; i++) {<br>    for(int j = 0; j &lt; n; j++) {<br>      cn[i][j] = A[i][j] == 'Y';<br>    }<br>    for(int j = 0; j &lt; m; j++) {<br>      cn[i][n + j] = B[i][j] == 'Y';<br>    }<br>  }<br>  for(int k = 0; k &lt; n + m; k++) for(int i = 0; i &lt; n + m; i++) for(int j = 0; j &lt; n + m; j++) {<br>    cn[i][j] |= cn[i][k] &amp;&amp; cn[k][j];<br>  }<br>  for(int i = 0; i &lt; n; i++) {<br>    for(int j = 0; j &lt; m; j++) {<br>      if(!cn[i][n + j]) continue;<br>      bool ok = false;<br>      for(int k = 0; k &lt; n &amp;&amp; !ok; k++) {<br>        ok = cn[i][k] &amp;&amp; cn[k][n + j];<br>      }<br>      if(!ok) ret++;<br>    }<br>  }<br>  return ret;<br>}<br>};<br> <br> <br>//Powered by [KawigiEdit] 2.0<br> <br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>