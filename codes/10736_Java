<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br><br>public class NetworkSecurity {<br>    public int secureNetwork(String[] clientCable, String[] serverCable) {<br>        int n = clientCable.length;<br>        int[] numLeaving = new int[clientCable.length];<br>        for (int i = 0; i &lt; n; ++i)<br>            for (int j = 0; j &lt; n; ++j)<br>                if (clientCable[i].charAt(j) == 'Y')<br>                    ++numLeaving[i];<br>        boolean[] processed = new boolean[n];<br>        int res = 0;<br>        boolean[][] reach = new boolean[n][serverCable[0].length()];<br>        for (int step = 0; step &lt; n; ++step) {<br>            int cur;<br>            for (cur = 0; numLeaving[cur] &gt; 0 || processed[cur]; ++cur);<br>            processed[cur] = true;<br>            for (int j = 0; j &lt; n; ++j)<br>                if (clientCable[j].charAt(cur) == 'Y')<br>                    --numLeaving[j];<br>            for (int j = 0; j &lt; n; ++j)<br>                if (clientCable[cur].charAt(j) == 'Y') {<br>                    for (int i = 0; i &lt; serverCable[0].length(); ++i)<br>                        reach[cur][i] |= reach[j][i];<br>                }<br>            for (int i = 0; i &lt; serverCable[0].length(); ++i) {<br>                if (serverCable[cur].charAt(i) == 'Y' &amp;&amp; !reach[cur][i]) {<br>                    reach[cur][i] = true;<br>                    ++res;<br>                }<br>            }<br>        }<br>        return res;<br>    }<br>}<br><br><br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>