<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class ColorfulDecoration<br>{<br>  public int getMaximum(int[] xa, int[] ya, int[] xb, int[] yb)<br>  {<br>        int low = 0;<br>        int high = 2000000000;<br>        int n = xa.Length;<br>        while (low + 1 &lt; high)<br>        {<br>            int key = low + (high - low) / 2;<br>            bool[,] G = new bool[n + n, n + n];<br>            for (int i = 0; i &lt; n + n; i++)<br>                for (int j = 0; j &lt; n + n; j++)<br>                    if (i % n != j % n)<br>                    {<br>                        int x1 = (i &lt; n) ? xa[i] : xb[i - n];<br>                        int y1 = (i &lt; n) ? ya[i] : yb[i - n];<br>                        int x2 = (j &lt; n) ? xa[j] : xb[j - n];<br>                        int y2 = (j &lt; n) ? ya[j] : yb[j - n];<br>                        if (Math.Abs(x1 - x2) &lt; key &amp;&amp; Math.Abs(y1 - y2) &lt; key)<br>                            G[i, (j &lt; n) ? (j + n) : (j - n)] = true;<br>                    }<br>            for (int k = 0; k &lt; n + n; ++k)<br>                G[k, k] = true;<br>            for (int k = 0; k &lt; n + n; ++k)<br>                for (int i = 0; i &lt; n + n; ++i)<br>                    for (int j = 0; j &lt; n + n; ++j)<br>                        if (G[i, k] &amp;&amp; G[k, j])<br>                            G[i, j] = true;<br>            bool flag = true;<br>            for (int i = 0; i &lt; n; ++i)<br>                if (G[i, i + n] &amp;&amp; G[i + n, i])<br>                    flag = false;<br>            if (flag)<br>                low = key;<br>            else<br>                high = key;<br>        }<br>        return low;<br>  }<br>}<br></td>