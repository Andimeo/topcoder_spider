<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br> <br>using namespace std;<br> <br>class ColorfulMazeTwo<br>{<br>  vector&lt;int&gt; t_score;<br>  vector&lt;string&gt; mz;<br>  int szx, szy, begx, begy;<br>  bool visited[50][50];<br>  <br>  bool visit(int px, int py, int flg)<br>  {<br>    if(px&lt;0||py&lt;0||px&gt;=szx||py&gt;=szy) return false;<br>    if(visited[px][py]||mz[px][py]=='#') return false;<br>    if(mz[px][py]&gt;='A'&amp;&amp;mz[px][py]&lt;='G'){<br>      if((flg&amp;(1&lt;&lt;(mz[px][py]-'A')))==0) return false;<br>    }<br>    if(mz[px][py]=='!') return true;<br>    visited[px][py] = true;<br>    return visit(px-1, py, flg) || visit(px+1, py, flg) || visit(px, py-1, flg) || visit(px, py+1, flg);<br>  }<br>  <br>  bool solve(int flg)<br>  {<br>    for(int i=0;i&lt;szx;i++){<br>      for(int j=0;j&lt;szy;j++) visited[i][j] = false;<br>    }<br>    return visit(begx, begy, flg);<br>  }<br>  <br>public:<br>  double getProbability(vector &lt;string&gt; maze, vector &lt;int&gt; trap)<br>  {<br>    t_score = trap;<br>    mz = maze;<br>    <br>    szx = maze.size();<br>    szy = maze[0].size();<br>    for(int i=0;i&lt;szx;i++){<br>      for(int j=0;j&lt;szy;j++){<br>        if(maze[i][j]=='$'){<br>          begx = i;<br>          begy = j;<br>        }<br>      }<br>    }<br>    double ret = 0.0;<br>    for(int i=0;i&lt;128;i++){<br>      double prob = 1.0;<br>      for(int j=0;j&lt;7;j++){<br>        if(i&amp;(1&lt;&lt;j)) prob *= (double) (100-trap[j]) / 100;<br>      }<br>      if(solve(i)){<br>        ret = max(ret, prob);<br>      }<br>    }<br>    return ret;<br>  }<br>};<br></td>