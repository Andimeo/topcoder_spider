<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;vector&gt;<br><br>using namespace std;<br><br>class ColorfulBoxesAndBalls{<br>public:<br>  int getMaximum(int numRed, int numBlue, int onlyRed, int onlyBlue, int bothColors)<br>  {<br>    int res1=0,res2=0;<br>    if(numRed&gt;numBlue)<br>    {<br>      if(bothColors&lt;onlyRed) res1+=(numRed*onlyRed+numBlue*onlyBlue);<br>      else if(bothColors&gt;onlyBlue){<br>        res1+=(2*numBlue*bothColors+(numRed-numBlue)*onlyRed);<br>      }<br>      else{<br>        res1+=(numRed*onlyRed+numBlue*onlyBlue);<br>      }<br>      <br>      if(numBlue&gt;numRed){<br>        res2+=(numRed*bothColors+(numBlue-numRed)*onlyBlue);<br>      }<br>      else{<br>        res2+=((numRed-numBlue)*onlyRed+numBlue*bothColors+numBlue*bothColors);<br>      }<br>    }<br>    else{<br>      if(bothColors&lt;onlyBlue) res1+=(numRed*onlyRed+numBlue*onlyBlue);<br>      else if(bothColors&gt;onlyRed){<br>        res1+=(2*numRed*bothColors+(numBlue-numRed)*onlyBlue);<br>      }<br>      else{<br>        res1+=(numRed*onlyRed+numBlue*onlyBlue);<br>      }<br>      <br>      if(numBlue&lt;numRed){<br>        res2+=(numBlue*bothColors+(numRed-numBlue)*onlyRed);<br>      }<br>      else{<br>        res2+=((numBlue-numRed)*onlyBlue+numRed*bothColors+numRed*bothColors);<br>      }<br>    }<br>    if(res1&gt;res2) return res1;<br>    else return res2;<br>  }<br>};<br></td>