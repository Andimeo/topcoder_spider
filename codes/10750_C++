<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;numeric&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define fors(i,s,n) for(int i = (s), _n = n; i &lt; _n; ++i)<br>#define forn(i,n) fors(i,0,n)<br>#define fore(i,s,n) fors(i,s,n+1)<br>#define all(c) (c).begin(), (c).end()<br>typedef long long int64;<br> <br>bool valpos(int i, int j , int n, int m) {<br>  return i &gt;= 0 &amp;&amp; i &lt; n &amp;&amp; j &gt;= 0 &amp;&amp; j &lt; m;<br>}<br>int dr[4] = {-1, 0, 1, 0};<br>int dc[4] = { 0, 1, 0,-1};<br>int calc(char c) {<br>  if(c &lt;= '9')<br>    return c - '0';<br>  if(c &gt;= 'a' &amp;&amp; c &lt;= 'z')<br>    return 10 + c - 'a';<br>  return 36 + c - 'A';<br>}<br>class ActivateGame {<br>public:<br>  int findMaxScore(vector &lt;string&gt; grid) {<br>    bool active[51][51] = {0};<br>    int h, w, cnt, dif, res = 0;<br>    h = grid.size();<br>    w = grid[0].size();<br>    cnt = 0;<br>    active[0][0] = 1;<br>    while(cnt &lt; h * w) {<br>      int best = -1, ar, ac;<br>      forn(i,h)<br>        forn(j,w) if(active[i][j] == 1) {<br>          forn(k,4) {<br>            int r = i + dr[k];<br>            int c = j + dc[k];<br>            if(valpos(r,c,h,w) &amp;&amp; active[r][c] == 0) {<br>              dif = abs(calc(grid[i][j]) - calc(grid[r][c]));<br>              if(best == -1 || dif &gt; best) {<br>                ar = r;<br>                ac = c;<br>                best = dif;<br>              }<br>            }<br>          }<br>        }<br>      ++cnt;<br>      if(best != -1) {<br>        res += best;<br>        active[ar][ac] = 1;<br>      }<br>    }<br>    return res;<br>  }<br>};<br> <br> <br>//Powered by [KawigiEdit] 2.0 modified by mbr1!<br></td>