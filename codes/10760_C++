<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;list&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;sstream&gt;<br>#include &lt;numeric&gt;<br>#include &lt;functional&gt;<br>#include &lt;utility&gt;<br>#include &lt;bitset&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cmath&gt;<br>#include &lt;map&gt;<br>using namespace std;<br><br>class Nisoku<br>{<br>public:<br>    double theMax(vector &lt;double&gt; cards);<br>};<br><br>double Nisoku::theMax(vector &lt;double&gt; c)<br>{<br>    int n=c.size();<br>    sort(c.begin(),c.end());<br>    double ans=0;<br>    for (int i=0;i&lt;=n;i+=2)<br>    {<br>        int l=0, r=i-1;<br>        double now=1;<br>        while (l&lt;=r)<br>        {<br>            now*=(c[l]+c[r]);<br>            l++;<br>            r--;<br>        }<br>        for (int j=i;j&lt;n;++j)<br>            now*=c[j];<br>        if (now&gt;ans)<br>            ans=now;<br>    }<br>    return ans;<br>}<br></td>