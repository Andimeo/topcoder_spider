<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class T9<br>{<br>    public string message(string[] part, string[] dict, string[] akeystr)<br>    {<br>        Array.Sort(dict);<br>        string keystr = "";<br>        foreach (string k in akeystr)<br>            keystr += k;<br>        string[] ws = keystr.Split('0');<br>        string[] words = new string[ws.Length];<br>        for (int i = 0; i &lt; ws.Length; i++)<br>        {<br>            words[i] = getWord(ws[i], part, dict);<br>        }<br>        return string.Join(" ", words);<br>    }<br> <br>    public string getWord(string keys, string[] part, string[] dict)<br>    {<br>        if (keys.Length == 0) return "";<br>        LinkedList&lt;int&gt; digs = new LinkedList&lt;int&gt;();<br>        int i = 0;<br>        while (i &lt; keys.Length &amp;&amp; char.IsDigit(keys[i]))<br>        {<br>            digs.AddLast(keys[i++] - '0' - 1);<br>        }<br>        int skip = 0;<br>        while (i &lt; keys.Length)<br>        {<br>            if (keys[i] == '#')<br>                skip++;<br>            if (keys[i] == '*')<br>                skip += 5;<br>            i++;<br>        }<br>        for (int j = 0; j &lt; dict.Length; j++)<br>        {<br>            if (match(digs, part, dict[j]))<br>            {<br>                if (skip == 0) return dict[j];<br>                skip--;<br>            }<br>        }<br>        return "";<br>    }<br> <br>    public bool match(LinkedList&lt;int&gt; digs, string[] part, string word)<br>    {<br>        if (digs.Count != word.Length) return false;<br>        int i = 0;<br>        foreach (int dig in digs)<br>        {<br>            if (!part[dig].Contains(word[i].ToString()))<br>            {<br>                return false;<br>            }<br>            i++;<br>        }<br>        return true;<br>    }<br> <br> <br>}<br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>