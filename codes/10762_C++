<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;complex&gt;<br>#include &lt;numeric&gt;<br>#include &lt;sstream&gt;<br>#include &lt;bitset&gt;<br>#include &lt;vector&gt;<br>#include &lt;cmath&gt;<br>#include &lt;ctime&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br> <br>using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;using namespace std;<br> <br>#define REP(i,n)    for(int i(0);i&lt;n;++i)<br>#define CL(a,x)      memset(a,x,sizeof(a))<br>#define all(ar)      (ar).begin(),(ar).end()<br>#define sz(a)      int((a).size())<br>#define foreach(x,a)  if(bool __B=true)for(const typeof(a)&amp;__A=a;__B;__B=false)for(typeof(const_cast&lt;typeof(a)&amp;&gt;(__A).begin())__I=const_cast&lt;typeof(a)&amp;&gt;(__A).begin();__B &amp;&amp; (__B=false,__I!=const_cast&lt;typeof(a)&amp;&gt;(__A).end());++__I)for(x=*__I;!__B;__B=true)<br>#define cstr(x)      ((stringstream&amp;)((stringstream()&lt;&lt;(x)))).str()<br>#define pb        push_back<br>#define X        first<br>#define Y        second<br>typedef long long    ll;<br>typedef vector&lt;int&gt;    vi;<br>typedef pair&lt;int,int&gt;  pii;<br> <br>struct T9 {string message(vector &lt;string&gt;, vector &lt;string&gt;, vector &lt;string&gt;);};<br> <br>char f[256];<br> <br>string T9::message(vector &lt;string&gt; part, vector &lt;string&gt; dict, vector &lt;string&gt; keystr) {<br>  REP(i,9)foreach(char c, part[i])f[c]='1'+i;<br>  sort(all(dict));<br>  map&lt;string,string&gt; F;<br>  foreach(string s, dict){<br>    string q;<br>    foreach(char c, s) q+=f[c];<br>    while(F.count(q))q+="#";<br>    F[q]=s;<br>  }<br>  string res, cur;<br>  foreach(string s, keystr) foreach(char c, s) {<br>    if(c=='0'){<br>      if(cur.size())res+=F[cur];<br>      cur.clear();<br>      res+=" ";<br>    }else if(c=='*') cur += "#####";<br>    else cur += c;<br>  }<br>  if(cur.size())res+=F[cur];<br>  return res;<br>}<br> <br>/** testing-code **/<br>// Powered by [KawigiEdit] 2.0! (edited by Rizvanov)<br></td>