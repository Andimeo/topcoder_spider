<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;sstream&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br><br>using namespace std;<br><br>typedef struct<br>{ int a,b;<br>  int m,n;<br>}E;<br>E M[50000];<br><br>int cmp(const void *a,const void *b)<br>{<br>        E *x,*y;<br>        x=(E*)a;<br>        y=(E*)b;<br>        return y-&gt;m - x-&gt;m;<br>}<br><br>class RoadOrFlightEasy<br>{<br>public:<br>  int minTime(int N, vector &lt;int&gt; roadTime, vector &lt;int&gt; flightTime, int K)<br>  {   int i,j,m;<br><br>        for(i=0;i&lt;roadTime.size();i++)<br>            {  M[i].a=roadTime[i];<br>               M[i].b=flightTime[i];<br>               M[i].n=i;<br>               M[i].m=abs(roadTime[i]-flightTime[i]);<br>            }<br>        qsort(M,N,sizeof(E),cmp);<br>        int sum=0,p,q,k,NN=90;<br>        p=q=0;<br><br>                for(i=0;i&lt;N;i++)<br>                  if(M[i].a&lt;M[i].b )<br>                   {sum+=M[i].a;<br>                   }<br>                   else if(M[i].b&lt;M[i].a &amp;&amp; p&lt;K)<br>                   { sum+=M[i].b;<br>                     p++;<br>                   }<br>                   else sum+=M[i].a;<br>        return sum;<br>  }<br>};<br></td>