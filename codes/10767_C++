<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>using namespace std;<br><br>#define two(a) (1 &lt;&lt; (a))<br><br>int f[20][60][60];<br>int Ans[two(16)][20];<br>int Count[two(16)];<br>bool b[60][60];<br>int dx[] = {0, 0, 1, -1};<br>int dy[] = {1, -1, 0, 0};<br><br>struct Gifts {<br>  int px[20], py[20];<br>  int n, m, cnt;<br><br>  void checkmin(int&amp; x, int y) {<br>    if(x == -1 || y &lt; x)<br>      x = y;<br>  }<br>  int maxGifts(vector &lt;string&gt; G, int T) {<br>    cnt = 0;<br>    n = G.size();<br>    m = G[0].size();<br>    for(int i = 0; i &lt; n; i ++)<br>      for(int j = 0; j &lt; m; j ++)<br>        if(G[i][j] == 'G') {<br>          px[cnt] = i;<br>          py[cnt] = j;<br>          cnt ++;<br>        }<br>    memset(f, -1, sizeof(f));<br>    int x1, y1, x2, y2;<br>    for(int i = 0; i &lt; n; i ++)<br>      for(int j = 0; j &lt; m; j ++)<br>        if(G[i][j] == 'K')<br>          x1 = i, y1 = j;<br>        else if(G[i][j] == 'Q')<br>          x2 = i, y2 = j;<br>    px[cnt] = x1;<br>    py[cnt] = y1;<br>    for(int s = 0; s &lt;= cnt; s ++) {<br>      memset(b, false, sizeof(b));<br>      f[s][px[s]][py[s]] = 0;<br>      while(1) {<br>        int x, y;<br>        int D = -1;<br>        for(int i = 0; i &lt; n; i ++)<br>          for(int j = 0; j &lt; m; j ++) if(!b[i][j] &amp;&amp; f[s][i][j] != -1 &amp;&amp; (D == -1 || f[s][i][j] &lt; D)) {<br>            D = f[s][i][j];<br>            x = i;<br>            y = j;<br>          }<br>        if(D == -1)<br>          break;<br>        b[x][y] = true;<br>        for(int i = 0; i &lt; 4; i ++) {<br>          int xx = x + dx[i];<br>          int yy = y + dy[i];<br>          if(xx &gt;= 0 &amp;&amp; xx &lt; n &amp;&amp; yy &gt;= 0 &amp;&amp; yy &lt; m &amp;&amp; G[xx][yy] != '#')<br>            checkmin(f[s][xx][yy], f[s][x][y] + 1);<br>        }<br>      }<br>    }<br>    Count[0] = 0;<br>    for(int i = 1; i &lt; two(cnt); i ++)<br>      Count[i] = Count[i - (i &amp; (-i))] + 1;<br>    int ret = 0;<br>    memset(Ans, -1, sizeof(Ans));<br>    for(int i = 0; i &lt; cnt; i ++)<br>      Ans[two(i)][i] = f[i][px[cnt]][py[cnt]];<br>    for(int i = 1; i &lt; two(cnt); i ++)<br>      for(int j = 0; j &lt; cnt; j ++)<br>        if((i &amp; two(j)) &amp;&amp; Ans[i][j] != -1) {<br>          for(int k = 0; k &lt; cnt; k ++)<br>            if((i &amp; two(k)) == 0 &amp;&amp; f[j][px[k]][py[k]] != -1)<br>              if((long long)Ans[i][j] + (long long)f[j][px[k]][py[k]] * (Count[i] + 1) &lt;= T)<br>                checkmin(Ans[i ^ two(k)][k], Ans[i][j] + f[j][px[k]][py[k]] * (Count[i] + 1));<br>          if(Count[i] &gt; ret &amp;&amp; (long long)Ans[i][j] + (long long)f[j][x2][y2] * (Count[i] + 1) &lt;= T)<br>            ret = Count[i];<br>        }<br>    return ret;<br>  }<br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>