<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br> <br> <br>public class TheQuestionsAndAnswersDivOne<br>{<br>  int n,m,ans=0;<br>  boolean [][]a;<br>  boolean []answered;<br>  int []ar;<br>  void gen(int v, int k) {<br>        if (m-k&gt;n-v)return;<br>        if (v == n) {<br>            ++ans;<br>            return;<br>        }<br>        for (int i = 0; i &lt; m; ++i) {<br>            boolean ok = true;<br>            for (int j = 0; j &lt; v; ++j) {<br>                if (ar[j] == i &amp;&amp; !a[j][v]) {<br>                    ok = false;<br>                    break;<br>                }<br>            }<br>            if (!ok) {<br>                continue;<br>            }<br> <br>            ar[v] = i;<br>            int q=0;<br>            if (!answered[i])++q;<br>            answered[i]=true;<br>            gen(v + 1,k+q);<br>            if (q==1)answered[i]=false;<br>        }<br>    }<br>  public int find(int questions, String[] answers)<br>  {<br>        m = questions;<br>        n = answers.length;<br>        answered=new boolean[n];<br>        ar = new int[n];<br>        a = new boolean[n][n];<br>        for (int i = 0; i &lt; n; ++i) {<br>            for (int j = 0; j &lt; n; ++j) {<br>                a[i][j] = (answers[i].equals(answers[j]));<br>            }<br>        }<br>        gen(0,0);<br>        return ans;<br>  }<br>  <br> <br>}<br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>