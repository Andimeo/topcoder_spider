<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br> <br>public class TheFansAndMeetingsDivOne<br>{<br>  public double[,] go( int[] minJ, int[] maxJ, int k ) {<br>    int N = minJ.Length;<br>    double[,] dpj = new double[45,1700];<br>    double p;<br>    dpj[0,0] = 1.0;<br>    for ( int i = 0; i &lt; N; i++ ) {<br>      p = 1.0 / ( double ) ( maxJ[i] - minJ[i] + 1 ); <br>      for ( int j = k; j &gt;= 1; j-- ) {<br>        for ( int x = minJ[i]; x &lt;= maxJ[i]; x++ ) {<br>          for ( int c = x; c &lt; 1700; c++ )<br>            dpj[j,c] += dpj[j-1,c-x] * p;<br>        }<br>      }<br>    }<br>    return dpj;<br>  }<br> <br>  double[,] dp = new double[45,45];<br>  double choose( int n, int k ) {<br>    if ( k == n || k == 0 ) return 1;<br>    if ( dp[n,k] &gt;= 0 ) return dp[n,k];<br> <br>    return dp[n,k] = choose( n - 1, k - 1 ) + choose( n - 1, k );<br>  }<br> <br>  public double find(int[] minJ, int[] maxJ, int[] minB, int[] maxB, int k)<br>  {<br>    for ( int i = 0; i &lt; 45; i++ ) for ( int j= 0; j &lt; 45; j++ ) dp[i,j] = -1.0;<br>    int N = minJ.Length;<br>    <br>    double[,] dpj = go( minJ, maxJ, k );<br>    double[,] dpb = go( minB, maxB, k );<br>    <br>    double p = 0.0;<br>    double np = 1.0 / ( choose( N, k ) );<br>    np *= np;<br>    for ( int i = 0; i &lt; 1700; i++ ) {<br>      p += dpj[k,i] * dpb[k,i] * np;<br>    }<br> <br>    return p;<br>  }<br> <br> <br>}<br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>