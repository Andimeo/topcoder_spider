<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt; <br>#include &lt;list&gt; <br>#include &lt;map&gt; <br>#include &lt;set&gt; <br>#include &lt;deque&gt; <br>#include &lt;vector&gt; <br>#include &lt;list&gt; <br>#include &lt;map&gt; <br>#include &lt;set&gt; <br>#include &lt;deque&gt; <br>#include &lt;queue&gt; <br>#include &lt;stack&gt; <br>#include &lt;bitset&gt; <br>#include &lt;algorithm&gt; <br>#include &lt;functional&gt; <br>#include &lt;numeric&gt; <br>#include &lt;utility&gt; <br>#include &lt;sstream&gt; <br>#include &lt;iostream&gt; <br>#include &lt;iomanip&gt; <br>#include &lt;cstdio&gt; <br>#include &lt;cmath&gt; <br>#include &lt;cstdlib&gt; <br>#include &lt;cctype&gt; <br>#include &lt;string&gt; <br>#include &lt;cstring&gt; <br>#include &lt;ctime&gt; <br><br>using namespace std;<br><br>double d1[2][41][1610];<br>double p1[1610];<br>double p2[1610];<br><br>class TheFansAndMeetingsDivOne<br>{<br>public:<br>double find(vector &lt;int&gt; minJ, vector &lt;int&gt; maxJ, vector &lt;int&gt; minB, vector &lt;int&gt; maxB, int k)<br>{<br>    int i,j,l,o,p,n,now;<br>    double chu,ans;<br>    n=minJ.size();<br>    memset(d1,0,sizeof(d1));<br>    d1[0][0][0]=1;<br>    now=0;<br>    for (i=0;i&lt;n;i++)<br>    {<br>        memset(d1[1-now],0,sizeof(d1[1-now]));<br>        for (j=0;j&lt;=k;j++)<br>            for (l=0;l&lt;=40*k;l++)<br>                if (d1[now][j][l]&gt;0)<br>                {<br>                    d1[1-now][j][l]+=d1[now][j][l];<br>                    if (j&lt;k)<br>                        for (o=minJ[i];o&lt;=maxJ[i];o++)<br>                            d1[1-now][j+1][l+o]+=d1[now][j][l]/(maxJ[i]-minJ[i]+1);<br>                }<br>        now=1-now;<br>    }<br>    j=k;<br>    for (l=0;l&lt;=40*k;l++)<br>        p1[l]=d1[now][j][l];<br><br>    memset(d1,0,sizeof(d1));<br>    d1[0][0][0]=1;<br>    now=0;<br>    for (i=0;i&lt;n;i++)<br>    {<br>        memset(d1[1-now],0,sizeof(d1[1-now]));<br>        for (j=0;j&lt;=k;j++)<br>            for (l=0;l&lt;=40*k;l++)<br>                if (d1[now][j][l]&gt;0)<br>                {<br>                    d1[1-now][j][l]+=d1[now][j][l];<br>                    if (j&lt;k)<br>                        for (o=minB[i];o&lt;=maxB[i];o++)<br>                            d1[1-now][j+1][l+o]+=d1[now][j][l]/(maxB[i]-minB[i]+1);<br>                }<br>        now=1-now;<br>    }<br>    j=k;<br>    for (l=0;l&lt;=40*k;l++)<br>        p2[l]=d1[now][j][l];<br>    chu=1;<br>    for (i=0;i&lt;k;i++)<br>    {<br>        chu*=(n-i);<br>        chu/=(i+1);<br>    }<br>    ans=0;<br>    for (l=0;l&lt;=40*k;l++)<br>    {<br>        ans+=p1[l]/chu*p2[l]/chu;<br>    }<br>    return ans;<br>}<br>};<br></td>