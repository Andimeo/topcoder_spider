<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class TheFansAndMeetingsDivOne {<br>    public double find(int[] minJ, int[] maxJ, int[] minB, int[] maxB, int k) {<br>        int max = 1;<br>        for (int x : maxJ)<br>            max = Math.max(max, x);<br>        for (int x : maxB)<br>            max = Math.max(max, x);<br>        double[][] pj = new double[k + 1][max * k + 1];<br>        pj[0][0] = 1.0;<br>        for (int i = 0; i &lt; minJ.length; ++i) {<br>            for (int oldnum = k - 1; oldnum &gt;= 0; --oldnum)<br>                for (int oldSize = 0; oldSize &lt; pj[oldnum].length; ++oldSize)<br>                    if (pj[oldnum][oldSize] &gt; 0.0)<br>                        for (int l = minJ[i]; l &lt;= maxJ[i]; ++l) {<br>                            pj[oldnum + 1][oldSize + l] += pj[oldnum][oldSize] / (maxJ[i] - minJ[i] + 1);<br>                        }<br>        }<br>        double[][] pb = new double[k + 1][max * k + 1];<br>        pb[0][0] = 1.0;<br>        for (int i = 0; i &lt; minB.length; ++i) {<br>            for (int oldnum = k - 1; oldnum &gt;= 0; --oldnum)<br>                for (int oldSize = 0; oldSize &lt; pb[oldnum].length; ++oldSize)<br>                    if (pb[oldnum][oldSize] &gt; 0.0)<br>                        for (int l = minB[i]; l &lt;= maxB[i]; ++l) {<br>                            pb[oldnum + 1][oldSize + l] += pb[oldnum][oldSize] / (maxB[i] - minB[i] + 1);<br>                        }<br>        }<br>        double mult = 1.0;<br>        for (int i = 0; i &lt; k; ++i) {<br>            mult *= (i + 1);<br>            mult /= (minJ.length - i);<br>        }<br>        double res = 0.0;<br>        for (int i = 0; i &lt;= max * k; ++i)<br>            res += pj[k][i] * pb[k][i] * mult * mult;<br>        return res;<br>    }<br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>