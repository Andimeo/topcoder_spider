<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class BouncingDiceGame<br>{<br>    double[] doIt(double[] f, int d)<br>    {<br>        double[] g = new double[Math.Max(1, f.Length - 1)];<br>        g[0] += f[0] * (d - 1) / d;<br>        if (f.Length &gt;= 2)<br>            g[0] += f[1] * (d - 1) / d;<br>        for (int i = 2; i &lt;= d &amp;&amp; i &lt; f.Length; ++i)<br>            g[0] += f[i] * (d - i + 1) / d;<br>        for (int i = 1; i &lt; f.Length; ++i)<br>            f[i] += f[i - 1];<br>        for (int i = 1; i &lt; g.Length; ++i)<br>            g[i] = (f[Math.Min(f.Length - 1, i + d)] - f[i]) / d;<br>        return g;<br>    }<br>    public double winProbability(int n, int d, int x, int y)<br>  {<br>        x = n - x;<br>        y = n - y;<br>        if (d == 1)<br>        {<br>            return (x &lt;= y) ? 1.0 : 0.0;<br>        }<br>        x = (x &gt;= 1 &amp;&amp; x &lt;= d - 1) ? 0 : (x - d + 1);<br>        y = (y &gt;= 1 &amp;&amp; y &lt;= d - 1) ? 0 : (y - d + 1);<br>        double[] fx = new double[x + 1];<br>        double[] fy = new double[y + 1];<br>        fx[x] = 1.0;<br>        fy[y] = 1.0;<br>        double results = 0, spx = 0;<br>        for (int time = 0; time &lt; 300000; ++time)<br>        {<br>            double px = (fx[0] + ((fx.Length &gt;= 2) ? fx[1] : 0)) / d;<br>            double sfy = 0;<br>            for (int i = 0; i &lt; fy.Length; ++i)<br>                sfy += fy[i];<br>            spx += px;<br>            results += px * (1 - sfy);<br>            fx = doIt(fx, d);<br>            fy = doIt(fy, d);<br>        }<br>        return 1.0 - results;<br>  }<br>}<br></td>