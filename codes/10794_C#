<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br><br>class DistanceOnCube<br>{<br>    public int calculate(int S, int x1, int y1, int z1, int x2, int y2, int z2)<br>    {<br>        int min = int.MaxValue;<br>        if (Math.Abs(x1 - x2) == S)<br>        {<br>            min = Math.Min(min, S + y1 + y2 + Math.Abs(z2 - z1));<br>            min = Math.Min(min, S + z1 + z2 + Math.Abs(y2 - y1));<br>            min = Math.Min(min, S + (S - y1) + (S - y2) + Math.Abs(z2 - z1));<br>            min = Math.Min(min, S + (S - z1) + (S - z2) + Math.Abs(y2 - y1));<br>        }<br>        else if (Math.Abs(y1 - y2) == S)<br>        {<br>            min = Math.Min(min, S + x1 + x2 + Math.Abs(z2 - z1));<br>            min = Math.Min(min, S + z1 + z2 + Math.Abs(x2 - x1));<br>            min = Math.Min(min, S + (S - x1) + (S - x2) + Math.Abs(z2 - z1));<br>            min = Math.Min(min, S + (S - z1) + (S - z2) + Math.Abs(x2 - x1));<br>        }<br>        else if (Math.Abs(z1 - z2) == S)<br>        {<br>            min = Math.Min(min, S + y1 + y2 + Math.Abs(x2 - x1));<br>            min = Math.Min(min, S + x1 + x2 + Math.Abs(y2 - y1));<br>            min = Math.Min(min, S + (S - y1) + (S - y2) + Math.Abs(x2 - x1));<br>            min = Math.Min(min, S + (S - x1) + (S - x2) + Math.Abs(y2 - y1));<br>        }<br>        else<br>        {<br>            min= (int)(Math.Abs(x1 - x2) + Math.Abs(y1 - y2) + Math.Abs(z1 - z2));<br>        }<br><br>        return min;<br>    }<br>}<br></td>