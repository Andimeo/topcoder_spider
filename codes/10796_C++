<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class CornersDecoding {<br>public:<br>  long long blackPixels(vector &lt;int&gt;, vector &lt;int&gt;);<br>};<br> <br>vector &lt;pair &lt;int, int&gt; &gt; u;<br>int a[111111], b[111111];<br> <br>long long CornersDecoding::blackPixels(vector &lt;int&gt; rows, vector &lt;int&gt; cols) {<br>  int n = rows.size(), i, j, q;<br>  u.clear();<br>  for (i=0;i&lt;n;i++) u.push_back(make_pair(rows[i],cols[i]));<br>  sort(u.begin(),u.end());<br>  memset(a,0,sizeof(a));<br>  int m = 110000;<br>  long long ans = 0, s;<br>  i = 0;<br>  while (i &lt; n) {<br>    if (i) {<br>      s = 0;<br>      for (q=0;q&lt;m;q++) s += a[q];<br>      ans += s*(u[i].first-u[i-1].first);<br>    }<br>    j = i;<br>    while (j &lt; n &amp;&amp; u[i].first == u[j].first) j++;<br>    b[0] = 0;<br>    for (q=1;q&lt;m;q++)<br>      if (i &lt; j &amp;&amp; u[i].second == q-1) {<br>        b[q] = b[q-1] ^ a[q-1] ^ a[q] ^ 1;<br>        i++;<br>      }<br>      else b[q] = b[q-1] ^ a[q-1] ^ a[q];<br>    for (q=0;q&lt;m;q++) a[q] = b[q];<br>    if (a[m-1] == 1) return -1;<br>  }<br>  for (i=0;i&lt;m;i++)<br>    if (a[i] != 0) return -1;<br>  return ans;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>