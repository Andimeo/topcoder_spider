<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br> <br>public class CornersDecoding {<br>  boolean BLACK = true;<br>  boolean WHITE = false;<br> <br>  public long blackPixels(int[] rows, int[] cols) {<br>    int n = rows.length;<br>    if (n == 0) {<br>      return 0;<br>    }<br>    int height = 0;<br>    int width = 0;<br>    for (int h : rows) {<br>      height = Math.max(height, h + 2);<br>    }<br>    for (int w : cols) {<br>      width = Math.max(width, w + 2);<br>    }<br>    long amount = 0;<br>    List&lt;Integer&gt;[] v = new List[height];<br>    for (int i = 0; i &lt; height; ++i) {<br>      v[i] = new ArrayList&lt;Integer&gt;();<br>    }<br>    for (int i = 0; i &lt; n; ++i) {<br>      v[rows[i]].add(cols[i]);<br>    }<br>    boolean[] type = new boolean[width];<br>    Arrays.fill(type, WHITE);<br>    int curBlack = 0;<br>    boolean[] corner = new boolean[width];<br>    for (int i = 0; i &lt; height - 1; ++i) {<br>      if (v[i].size() != 0) {<br>        Arrays.fill(corner, false);<br>        for (int c : v[i]) {<br>          corner[c] = true;<br>        }<br>        boolean[] next = new boolean[width];<br>        next[0] = WHITE;<br>        for (int j = 0; j &lt; type.length - 1; ++j) {<br>          int c = 0;<br>          if (type[j] == BLACK) {<br>            ++c;<br>          }<br>          if (type[j + 1] == BLACK) {<br>            ++c;<br>          }<br>          if (next[j] == BLACK) {<br>            ++c;<br>          }<br>          if (corner[j]) {<br>            if (c % 2 == 0) {<br>              next[j + 1] = BLACK;<br>            } else {<br>              next[j + 1] = WHITE;<br>            }<br>          } else {<br>            if (c % 2 == 0) {<br>              next[j + 1] = WHITE;<br>            } else {<br>              next[j + 1] = BLACK;<br>            }<br>          }<br>        }<br>        type = next;<br>        if (type[width - 1] == BLACK) {<br>          return -1;<br>        }<br>        curBlack = 0;<br>        for (boolean x : type) {<br>          curBlack += (x == BLACK ? 1 : 0);<br>        }<br>      }<br>      amount += curBlack;<br>    }<br>    for (boolean x : type) {<br>      if (x == BLACK) {<br>        return -1;<br>      }<br>    }<br>    return amount;<br>  }<br> <br> <br>}<br>// Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!<br></td>