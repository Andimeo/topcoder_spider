<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class BuildingWalls {<br>public:<br>  int countPossibilities(int, int);<br>};<br> <br>int BuildingWalls::countPossibilities(int k2, int k3) {<br>  int h, w, n = k2*2+k3*3, p = 0, c2, c3, h2, h3, r;<br>  for (w=2;w&lt;=n;w++) {<br>    h2 = 0; h3 = 0;<br>    if (w % 6 == 2) h2++; else<br>    if (w % 6 == 3) h3++; else<br>    if (w % 6 == 4) h2 += 2; else<br>    if (w % 6 == 5) h2++, h3++; else<br>    if (w % 6 == 1) h2 += 2, h3++;<br>    r = w/6;<br>    if (w % 6 == 1) r--;<br>    c2 = k2; c3 = k3;<br>    for (h=1;h&lt;=n;h++) {<br>      c2 -= h2; c3 -= h3;<br>      if (c2 &gt;= 0 &amp;&amp; c3 &gt;= 0 &amp;&amp; c2/3 + c3/2 &gt;= h*r) p++;<br>      else break;<br>    }<br>  }<br>  return p;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>