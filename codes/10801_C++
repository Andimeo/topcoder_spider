<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;  <br>#include &lt;string&gt;  <br>#include &lt;set&gt;  <br>#include &lt;map&gt;  <br>#include &lt;vector&gt;  <br>#include &lt;queue&gt;   <br>#include &lt;iostream&gt;  <br>#include &lt;iterator&gt;  <br>#include &lt;math.h&gt;  <br>#include &lt;cstdio&gt;  <br>#include &lt;cstdlib&gt;  <br>#include &lt;sstream&gt;  <br><br>#pragma comment(linker, "/STACK:60777216")  <br><br>using namespace std;  <br><br>typedef pair&lt;int,int&gt; pii;  <br>typedef long long ll;  <br>typedef vector&lt;int&gt; vi;  <br><br>#define UN(v) SORT(v),v.erase(unique(v.begin(),v.end()),v.end())  <br>#define SORT(c) sort((c).begin(),(c).end())  <br>#define FOR(i,a,b) for (int  i=(a); i &lt; (b); i++)   <br>#define REP(i,n) FOR(i,0,n)   <br>#define CL(a,b) memset(a,b,sizeof(a))  <br>#define pb push_back  <br><br>char c[55];<br>int n,k;<br>int d;<br><br>set&lt;int&gt; q[55];<br><br>bool dfs(int pos,int prev){<br>  if(q[pos].count(prev)) return 0;<br>  q[pos].insert(prev);<br><br>  if(pos==n) return 1;<br>  vi v;<br>  int t = prev;<br>  while(t) v.pb(t%10),t/=10;<br><br>  if(c[pos]=='0'){<br>    FOR(dig,1,k+1){      <br>      bool good = 1;<br>      REP(i,v.size()) if(v[i]==dig) {good=0;break;}<br>      if(good)<br>        if(dfs(pos+1,(prev*10+dig)%d))<br>          return 1;<br>    }<br>  }else{<br>    int dig = c[pos] - '0';<br>    REP(i,v.size()) if(v[i]==dig) return 0;<br>    return dfs(pos+1,(prev*10+dig)%d);<br>  }<br>  return 0;<br>}<br>bool go(int res){<br>  REP(i,55) q[i].clear();<br>  d=1;<br>  REP(i,res) d*=10;<br>  d/=10;<br><br>  return dfs(0, 0);<br>}<br><br>class AmoebaCode {<br>public:<br> int find(string code, int K) {<br>   n=code.size();k=K;<br>   REP(i,n) c[i]=code[i];<br>   for(int i=K;i&gt;=2;i--)<br>     if(go(i)) <br>       return i;<br>   return 1;<br> }<br> <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>