<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;iostream&gt;<br>#include&lt;cstring&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;string&gt;<br>#include&lt;vector&gt;<br>#include&lt;cmath&gt;<br>#include&lt;cstdio&gt;<br>#include&lt;cstdlib&gt;<br>#include&lt;fstream&gt;<br>#include&lt;cassert&gt;<br>#include&lt;set&gt;<br>#include&lt;map&gt;<br>using namespace std;<br> <br>#define FOR(i,a,b) for(int i = (a); i &lt; (b); ++i)<br>#define REP(i,n) FOR(i,0,n)<br>#define FORE(it,x) for(typeof(x.begin()) it=x.begin();it!=x.end();++it)<br>#define pb push_back<br>#define all(x) (x).begin(),(x).end()<br>#define CLEAR(x,with) memset(x,with,sizeof(x))<br>#define sz size()<br> <br>struct RouteIntersection<br>{<br>    set&lt;map&lt;int,int&gt; &gt; visited;<br>    map&lt;int,int&gt; move(map&lt;int,int&gt; here, int coord, char add) {<br>        here[coord] += (add == '+' ? 1 : -1);<br>        if(here[coord] == 0) here.erase(coord);<br>        return here;<br>    }<br>  string isValid(int N, vector &lt;int&gt; coords, string moves)<br>  {<br>        map&lt;int,int&gt; here;<br>        visited.insert(here);<br>        REP(i,coords.sz) {<br>            map&lt;int,int&gt; there = move(here, coords[i], moves[i]);<br>            if(visited.count(there)) return "NOT VALID";<br>            visited.insert(there);<br>            here = there;<br>        }<br>        return "VALID";<br>  }<br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.12 [modified TZTester]<br>// Powered by CodeProcessor<br></td>