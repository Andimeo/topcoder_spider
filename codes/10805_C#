<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class TreesCount<br>{<br>    const int MOD = 1000000007;<br>  public int count(string[] graph)<br>  {<br>        int n = graph.Length;<br>        int[] distance = new int[n];<br>        for (int i = 0; i &lt; n; ++i)<br>            distance[i] = 100000;<br>        distance[0] = 0;<br>        for (int k = 0; k &lt; n; ++k)<br>            for (int i = 0; i &lt; n; ++i)<br>                for (int j = 0; j &lt; n; ++j)<br>                    if (graph[i][j] != '0')<br>                        distance[j] = Math.Min(distance[j], distance[i] + graph[i][j] - '0');<br>        long results = 1;<br>        for (int i = 1; i &lt; n; ++i)<br>        {<br>            int count = 0;<br>            for (int j = 0; j &lt; n; ++j)<br>                if (graph[i][j] != '0' &amp;&amp; distance[j] &lt; distance[i] &amp;&amp; distance[j] + graph[i][j] - '0' == distance[i])<br>                    ++count;<br>            results = (results * count) % MOD;<br>        }<br>    return (int)results;<br>  }<br>}<br></td>