<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;utility&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br><br>using namespace std;<br><br>#define REP(i,n) for((i)=0;(i)&lt;(int)(n);(i)++)<br><br>typedef long long ll;<br>#define MOD 1000000007ll<br>#define INF (1&lt;&lt;29)<br><br>int graph[60][60];<br>int dist[60][60];<br><br>class TreesCount{<br>  public:<br><br>  int count(vector &lt;string&gt; _graph){<br>    int N=_graph.size(),i,j,k;<br>    <br>    REP(i,N) REP(j,N){<br>      if(i == j) graph[i][j] = 0;<br>      else if(_graph[i][j] == '0') graph[i][j] = INF;<br>      else graph[i][j] = _graph[i][j] - '0';<br>    }<br>    <br>    REP(i,N) REP(j,N) dist[i][j] = graph[i][j];<br>    REP(k,N) REP(i,N) REP(j,N) dist[i][j] = min(dist[i][j],dist[i][k]+dist[k][j]);<br>    <br>    ll ans = 1;<br>    for(i=1;i&lt;N;i++){<br>      int cnt = 0;<br>      REP(j,N) if(j != i &amp;&amp; dist[0][j] + graph[j][i] == dist[0][i]) cnt++;<br>      ans = (ans * cnt) % MOD;<br>    }<br>    <br>    return (int)ans;<br>  }<br><br>};<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>