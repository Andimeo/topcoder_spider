<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class TreesCount {<br>    static final int MOD = 1000000007;<br>    static final int INF = 1000000000;<br> <br>    public int count(String[] graph) {<br>        int n = graph.length;<br>        int[][] d = new int[n][n];<br>        for (int i = 0; i &lt; n; ++i)<br>            for (int j = 0; j &lt; n; ++j)<br>                d[i][j] = (i == j) ? 0 : (graph[i].charAt(j) == '0' ? INF : (graph[i].charAt(j) - '0'));<br>        int[] d0 = new int[n];<br>        Arrays.fill(d0, INF);<br>        d0[0] = 0;<br>        for (int k = 0; k &lt; n; ++k)<br>            for (int i = 0; i &lt; n; ++i)<br>                for (int j = 0; j &lt; n; ++j)<br>                    d0[j] = Math.min(d0[j], d0[i] + d[i][j]);<br>        long res = 1;<br>        for (int i = 1; i &lt; n; ++i) {<br>            int cnt = -1;<br>            for (int j = 0; j &lt; n; ++j)<br>                if (d0[j] + d[i][j] == d0[i])<br>                    ++cnt;<br>            res = (res * cnt) % MOD;<br>        }<br>        return (int) res;<br>    }<br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>