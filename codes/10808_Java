<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br><br><br>public class BatchSystem {<br>    public int[] schedule(int[] duration, String[] user) {<br>        int[] res = new int [duration.length];<br>        int n = duration.length;<br>        HashSet &lt;String&gt; uniqueUsers = new HashSet&lt;String&gt;();<br>        for(String u:user)<br>          if(!uniqueUsers.contains(u))<br>            uniqueUsers.add(u);<br>        User [] userSorted = new User [uniqueUsers.size()];<br>        int cnt = 0;<br>        for(String u:uniqueUsers){<br>          int index = -1;<br>          long tasksDuration = 0;<br>          for(int i = 0;i &lt; n;i++){<br>            if(user [i].equals(u)){<br>              tasksDuration += duration [i];<br>              if(index == -1)<br>                index = i;<br>            }<br>          }<br>          userSorted [cnt++] = new User(u, index, tasksDuration);<br>        }<br>        Arrays.sort(userSorted);<br>        cnt = 0;<br>        int ind = 0;<br>        while(cnt &lt; n &amp;&amp; ind &lt; userSorted.length){<br>          for(int i = 0;i &lt; n;i++)<br>            if(user [i].equals(userSorted [ind].userID))<br>              res [cnt++] = i;<br>          ind++;<br>        }<br>        return res;<br>    }<br><br>}<br>class User implements Comparable&lt;User&gt;{<br>  String userID;<br>  long duration;<br>  int index;<br>  public User(String u,int i,long t){<br>    userID = u;<br>    index = i;<br>    duration = t;<br>  }<br>  public int compareTo(User o) {<br>    if(duration &gt; o.duration)<br>      return 1;<br>    else if(duration &lt; o.duration)<br>      return -1;<br>    return index - o.index;<br>  }<br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>