<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class TheSequencesLevelThree {<br>public:<br>  int find(vector &lt;int&gt;, int);<br>};<br> <br>const int md = 1234567891;<br>long long f[99][99], ans;<br> <br>int TheSequencesLevelThree::find(vector &lt;int&gt; a, int k) {<br>  int n = a.size(), i, j;<br>  ans = 0;<br>  if (n &lt; 3) return 0;<br>  sort(a.rbegin(),a.rend());<br>  memset(f,0,sizeof(f));<br>  f[0][0] = 1;<br>  for (i=0;i&lt;n;i++)<br>    for (j=i;j&lt;n;j++) {<br>      if (j == n-1) {<br>        if (i) ans = (ans+f[i][j]) % md;<br>        continue;<br>      }<br>      if (a[i]-a[j+1] &lt;= k) f[j][j+1] = (f[j][j+1]+f[i][j]) % md;<br>      if (a[j]-a[j+1] &lt;= k) f[i][j+1] = (f[i][j+1]+f[i][j]) % md;<br>    }<br>  return ans;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>