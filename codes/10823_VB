<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System<br>Imports System.Collections<br>Imports System.Text<br> <br>Public Class LateProfessor<br>  Public Function intint(byval a as integer, b as integer, c as integer, d as integer) As Integer<br>  <br>    ' returns size of [a,b] \cap [c,d]<br>    <br>    If a &lt;= c Then<br>      If b &lt;= c Then<br>        Return 0<br>      Elseif d &lt;= b Then<br>        Return d - c<br>      Else<br>        Return b - c<br>      End If<br>    Else<br>      If d &lt;= a Then<br>        Return 0<br>      Elseif b &lt;= d Then<br>        Return b - a<br>      Else<br>        Return d - a<br>      End If<br>    End If<br>    <br>  <br>  End Function<br>  Public Function getProbability(ByVal waitTime As Integer, ByVal walkTime As Integer, ByVal lateTime As Integer, ByVal bestArrival As Integer, ByVal worstArrival As Integer) As Double<br>    <br>    Dim totArr As Double = worstarrival - bestarrival    <br>    <br>    If latetime &gt;= walktime then return 0<br>    <br>    <br>    Dim n as Integer = 0<br>    Dim goodtime as integer = 0<br>    <br>    If totArr = 0 Then<br>      <br>      Do until n * (walktime + waittime) &gt; worstarrival + walktime<br>      If n*(walktime+waittime)-latetime &lt;bestarrival and bestarrival &lt;= n*(walktime+waittime)+waittime Then Return 0<br>      n+=1<br>      Loop<br>      <br>      Return 1<br>      <br>    End If<br>    Do until n * (walktime + waittime) &gt; worstarrival + walktime<br>      goodtime += intint( n*(walktime+waittime)-latetime,n*(walktime+waittime)+waittime , bestarrival, worstarrival)<br>      n+=1<br>    Loop<br>    Return 1 - goodtime / totArr<br>  End Function<br>End Class<br></td>