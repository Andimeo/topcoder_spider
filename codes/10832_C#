<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class TheLuckyNumbersLevelOne {<br>  public long findBelow(long x) {//x miman<br>    string xdec = x.ToString();<br>    int[] dec2 = new int[xdec.Length];<br>    long ret = 0;<br>    for(int i = 1; i &lt; xdec.Length; i++) {<br>      ret += 1&lt;&lt;((i+1)/2);<br>    }<br>    for(int i = 0; i &lt; xdec.Length; i++) {<br>      int dig = xdec[i]-'0';<br>      if(dec2[i]!=0) {<br>        if(dec2[i]&lt;dig) {<br>          ret++;break;<br>        } else if(dec2[i]==dig) {<br>        } else {<br>          break;<br>        }<br>      } else if(dig&lt;4) {<br>        break;<br>      } else if(dig==4) {<br>        dec2[xdec.Length-1-i] = 4;<br>      } else if(dig&lt;7) {<br>        ret += 1&lt;&lt;((xdec.Length+1)/2-i-1);<br>        break;<br>      } else if(dig==7) {<br>        ret += 1&lt;&lt;((xdec.Length+1)/2-i-1);<br>        dec2[xdec.Length-1-i] = 7;<br>      } else {<br>        ret += 1&lt;&lt;((xdec.Length+1)/2-i);<br>        break;<br>      }<br>    }<br>    for(int i = 0; i &lt; (xdec.Length+1)/2; i++) {<br>    }<br>    return ret;<br>  }<br>  public long find(long a, long b) {<br>    Console.WriteLine(findBelow(b+1));<br>    return findBelow(b+1) - findBelow(a);<br>  }<br>}<br></td>