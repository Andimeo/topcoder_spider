<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class TheLuckyNumbersLevelOne {<br>public:<br>  long long find(long long, long long);<br>};<br> <br>long long c, d, ans, kd, g[50];<br> <br>void rec(long long v) {<br>  if (v &gt;= c &amp;&amp; v &lt;= d) {<br>    int ok, i;<br>    ok = 1;<br>    for (i=0;i&lt;kd;i++)<br>      if (g[i] != g[kd-i-1]) ok = 0;<br>    ans += ok;<br>  }<br>  if (v &gt; d/10) return;<br>  g[kd++] = 4;<br>  rec(v*10+4);<br>  g[kd-1] = 7;<br>  rec(v*10+7);<br>  kd--;<br>}<br> <br>long long TheLuckyNumbersLevelOne::find(long long a, long long b) {<br>  ans = 0;<br>  c = a; d = b;<br>  kd = 0;<br>  rec(0);<br>  return ans;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>