<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br> <br>public class TheLuckyNumbersLevelOne {<br>  public long find(long a, long b) {<br>    return find(b) - find(a - 1);<br>  }<br> <br>  private int find(long n) {<br>    int cnt = 0;<br>    for (int length = 1; length &lt;= 18; ++length) {<br>      for (int mask = 0; mask &lt; (1 &lt;&lt; length); ++mask) {<br>        char[] s = new char[length];<br>        for (int j = 0; j &lt; length; ++j) {<br>          if (((mask &gt;&gt; j) &amp; 1) != 0) {<br>            s[j] = '4';<br>          } else {<br>            s[j] = '7';<br>          }<br>        }<br>        if (isPal(s)) {<br>          long val = Long.parseLong(new String(s));<br>          if (val &lt;= n) {<br>            ++cnt;<br>          }<br>        }<br>      }<br>    }<br>    return cnt;<br>  }<br> <br>  private boolean isPal(char[] s) {<br>    for (int i = 0; i &lt; s.length - i - 1; ++i) {<br>      if (s[i] != s[s.length - i - 1]) {<br>        return false;<br>      }<br>    }<br>    return true;<br>  }<br> <br> <br>}<br>// Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!<br></td>