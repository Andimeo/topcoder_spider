<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;vector&gt;   <br>#include &lt;string&gt;<br>#include &lt;map&gt;      <br>#include &lt;algorithm&gt;<br>#include &lt;set&gt;      <br>#include &lt;cmath&gt;<br>#include &lt;sstream&gt;<br>#include &lt;utility&gt;  <br>#include &lt;cctype&gt;<br>#include &lt;numeric&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;    <br>#include &lt;list&gt;<br>#include &lt;stack&gt;    <br>#include &lt;bitset&gt;<br>#include &lt;limits&gt;<br>#include &lt;ctime&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;functional&gt;<br>#include &lt;inttypes.h&gt;<br>#include &lt;fstream&gt;<br>using namespace std;<br> <br>#define sz(c)            ((int)(c).size())<br>#define fi(n)            for(int i=0;i&lt;n;++i)<br>#define fj(n)            for(int j=0;j&lt;n;++j)<br>#define pb               push_back<br>#define mp(x,y)          make_pair(x,y)<br>#define fs               first<br>#define sn               second<br>const double oo = 10e100;<br>class P<br>{<br>  public:<br>  double x , y;<br>  P(double x_ = 0.0, double y_ = 0.0) : x(x_), y(y_) {}<br>  P clone(){ return P(x,y);}<br>  inline double distance(const P &amp;o) const {return sqrt((x - o.x)*(x - o.x)+(y - o.y)*(y - o.y));}<br>};<br>pair&lt;int,double&gt; f( const vector&lt;P&gt;&amp; p , const vector&lt;P&gt;&amp; v )<br>{<br>   double md = oo,tmp;   <br>   int r = -1;<br>   fi( sz(p) )<br>      fj( sz(v) )<br>      {<br>         tmp = p[i].distance(v[j]);<br>         if( tmp &lt; md )<br>         {<br>            md = tmp;<br>            r = j;<br>         }<br>      }<br>   return mp( r, md );<br>}<br>struct KingdomXCitiesandVillagesAnother <br>{<br>   double determineLength(vector&lt;int&gt; cx, vector&lt;int&gt; cy, vector&lt;int&gt; vx, vector&lt;int&gt; vy)<br>   {<br>      double ret = 0;<br> <br>      vector&lt;P&gt; p,v;<br>      fi( sz(cx) )<br>         p.pb( P(cx[i],cy[i]) );<br>      fi( sz(vx) )<br>         v.pb( P(vx[i],vy[i]) );<br> <br>      while( v.size() &gt; 0 )<br>      {<br>         pair&lt;int,double&gt; t = f( p , v );<br>         ret += t.sn;<br>         p.pb( P( v[t.fs].x , v[t.fs].y) );<br>         v.erase(v.begin()+t.fs);      <br>      }<br> <br>      printf("%.25lf\n",ret);<br>      return ret;<br>   }<br>};<br> <br> <br> <br>//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!<br>//With unused code cleaner (beta) by ahmed_aly<br></td>