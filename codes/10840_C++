<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br> <br> <br>using namespace std;<br> <br>const double EPS = 1e-10;<br>const double PI = 3.14159265358979323846264338328;<br> <br>#define PB push_back<br>#define FOR(a,start,end) for(int a = int(start); a &lt; int(end); a++)<br>#define INF INT_MAX<br>#define MSG(a) cout &lt;&lt; #a &lt;&lt; " = " &lt;&lt; a &lt;&lt; endl;<br>#define ITOA(a) char c[500];  sprintf(c,"%d",a);  string s(c);<br>#define SORT(a) sort(a.begin(),a.end())<br> <br>class TurretPlacement <br>{<br> <br>public:<br>  long long count(vector &lt;int&gt;, vector &lt;int&gt;);<br> <br>};<br> <br>long long TurretPlacement::count(vector &lt;int&gt; x, vector &lt;int&gt; y) <br>{<br>  long long ans = 0;<br>  FOR(i,0,x.size())<br>  FOR(j,0,i)<br>  {<br>    long long dx = abs(x[i]-x[j]);<br>    long long dy = abs(y[i]-y[j]);<br>    double dist = sqrt((double)dx*dx + (double)dy*dy);<br>    dist *= 2;<br>    long long K = dist;<br>    ans += K*(K-1)/2;<br>  }<br>  return ans;<br> <br> <br>  <br> <br> <br>}<br> <br> <br> <br> <br> <br>//Powered by [KawigiEdit] 2.0!<br> <br>//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!<br></td>