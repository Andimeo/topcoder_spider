<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br><br>public class DrawingBlackCrosses {<br>  private const long MOD = 1000000007;<br>  private int xsize, ysize, maxX, maxY;<br><br>  private char[,] map;<br>  public int count(string[] field)<br>  {<br>    xsize = field[0].Length;<br>    ysize = field.Length;<br>    map = new char[ysize,xsize];<br>    bool[] nonEmptyRows = new bool[ysize], nonEmptyCols = new bool[xsize];<br>    for (int y = 0; y &lt; ysize; y++)<br>    {<br>      for (int x = 0; x &lt; xsize; x++)<br>      {<br>        if (field[y][x] == 'B')<br>        {<br>          nonEmptyRows[y] = true;<br>          nonEmptyCols[x] = true;<br>        }<br>        map[y, x] = '.';<br>      }<br>    }<br>    maxX = maxY = 0;<br>    for (int y = 0, yy = 0; y &lt; ysize; y++)<br>    {<br>      if (!nonEmptyRows[y]) continue;<br>      for (int x = 0, xx = 0; x &lt; xsize; x++)<br>      {<br>        if (!nonEmptyCols[x]) continue;<br>        map[yy, xx] = field[y][x];<br>        xx++;<br>        if (xx &gt; maxX) maxX = xx;<br>      }<br>      yy++;<br>      maxY = yy;<br>    }<br><br>    dp = new int[1&lt;&lt;maxX,1&lt;&lt;maxY,xsize-maxX+1,ysize-maxY+1];<br><br>//    Console.WriteLine((1 &lt;&lt; maxX)*(1 &lt;&lt; maxY)*(xsize - maxX + 1)*(ysize - maxY + 1)*4/(1024*1024) + " MB");<br><br>    long sol = Go(0, 0, xsize - maxX, ysize - maxY);<br>    return (int) (sol%MOD);<br>  }<br><br>  private int[,,,] dp;<br><br>  private long Go(int colMask, int rowMask, int emptyColsLeft, int emptyRowsLeft)<br>  {<br>    if (dp[colMask, rowMask, emptyColsLeft, emptyRowsLeft] &gt; 0)<br>      return dp[colMask, rowMask, emptyColsLeft, emptyRowsLeft] - 1;<br><br>    long sum = 0;<br>    bool done = true;<br>    for (int y = 0; y &lt;= maxY; y++)<br>    {<br>      if (y &lt; maxY &amp;&amp; ((1&lt;&lt;y) &amp; rowMask) &gt; 0) continue;<br>      if (y == maxY &amp;&amp; emptyRowsLeft == 0) continue;<br>      for (int x = 0; x &lt;= maxX; x++)<br>      {<br>        if (x &lt; maxX &amp;&amp; ((1&lt;&lt;x) &amp; colMask) &gt; 0) continue;<br>        if (x == maxX &amp;&amp; emptyColsLeft == 0) continue;<br>        if (x &lt; maxX &amp;&amp; y &lt; maxY &amp;&amp; map[y,x] == 'B') continue;<br><br>        int mult = 1, newColMask = colMask, newRowMask = rowMask;<br>        if (x == maxX) mult *= emptyColsLeft; else newColMask |= (1 &lt;&lt; x);<br>        if (y == maxY) mult *= emptyRowsLeft; else newRowMask |= (1 &lt;&lt; y);<br><br>        long t = Go(newColMask, newRowMask, emptyColsLeft - (x == maxX ? 1 : 0), emptyRowsLeft - (y == maxY ? 1 : 0));<br>        done = false;<br>        sum += t*mult;<br>        sum %= MOD;<br>      }<br>    }<br><br>    if (done) sum = 1;<br><br>    dp[colMask, rowMask, emptyColsLeft, emptyRowsLeft] = (int) (sum + 1);<br>    return sum;<br>  }<br><br>}<br><br><br>// Powered by FileEdit<br></td>