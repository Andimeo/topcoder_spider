<td class="problemText" colspan="8" valign="middle" align="left">
            #include "iostream"<br>#include "algorithm"<br>#include "vector"<br>using namespace std;<br><br>long long GetSum(int num, int base)<br>{<br>  num++;<br>  long long ret = 0;<br>  long long again = base;<br>  long long elem = 1;<br>  long long every = 1;<br>  while (true)<br>  {<br>    if (elem &gt; num)<br>    {<br>      break;<br>    }<br><br>    long long sum = 0;<br>    long long xunhuan = num / again;<br>    sum = xunhuan * (base - 1) * base / 2 * elem;<br>    long long left = num % again;<br>    long long i;<br>    for (i = 0; i &lt; base; i++)<br>    {<br>      if (left &gt;= elem)<br>      {<br>        sum += elem * i;<br>        left -= elem;<br>      }<br>      else<br>      {<br>        sum += left * i;<br>        left = 0;<br>        break;<br>      }<br>    }<br><br>    ret = ret + every * sum;<br>    every *= (base + 1);<br><br>    again *= base;<br>    elem *= base;<br>  }<br>  return ret;<br>}<br><br>class BaseConfusion<br>{<br>public:<br>  long long sum(int M, int N, int B)<br>  {<br>    return GetSum(N, B) - GetSum(M - 1, B);<br>  }<br>};<br></td>