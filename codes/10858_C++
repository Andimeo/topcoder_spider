<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;stdio.h&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;map&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;queue&gt;<br>#include &lt;math.h&gt;<br>#include &lt;iostream&gt;<br>using namespace std;<br> <br>class HanoiGoodAndBad<br>{<br>  public:<br>  int moves(int N, int dave_cnt)<br>  {<br> <br>    vector&lt;int&gt; dave[3];<br>    int source = 0;<br>    int spare = 1;<br>    int target = 2;<br>    for (int i=N-1; i&gt;=0; i--) {<br>      if (dave_cnt &lt; (1&lt;&lt;i)) {<br>        dave[source].push_back(i);<br>        swap(spare, target);<br>      }<br>      else {<br>        dave[target].push_back(i);<br>        dave_cnt -= (1&lt;&lt;i);<br>        swap(source, spare);<br>      }<br>    }<br>    for (int i=0; i&lt;3; i++) { for (int j=0; j&lt;dave[i].size(); j++) printf("%d ", dave[i][j]); printf("\n"); }<br>    <br>    int three = 1;<br>    for (int i=0; i&lt;N-1; i++)<br>      three *= 3;<br>    int res = 0;<br>    source = 0, spare = 1, target = 2;<br>    dave[0].push_back(9999);<br>    dave[1].push_back(9999);<br>    dave[2].push_back(9999);<br>    int cnt[3] = {0};<br>    for (int i=N-1; i&gt;=0; i--) {<br>      printf("/ %d %d\n", res, three);<br>      if (dave[source][cnt[source]] == i) cnt[source]++;<br>      else if (dave[spare][cnt[spare]] == i) {<br>        cnt[spare]++;<br>        res += three;<br>        swap(target, source);<br>      } else {<br>        cnt[target]++;<br>        res += three+three;<br>      }<br>      three /= 3;<br>    }<br>    return res;<br>  };<br>};<br></td>