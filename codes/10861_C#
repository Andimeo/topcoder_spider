<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text; <br><br>public class MatrixGame<br>{<br>    int[] w = new int[8];<br>    int n, m;<br>    bool[] ex = new bool[8];<br>    string[] best = new string[0];<br>    string[] matrix;<br><br>    bool Smaller(string[] x, string[] y)<br>    {<br>        int i;<br>        for (i = 0; i &lt; n; i++)<br>        {<br>            if (x[i].CompareTo(y[i]) &lt; 0) return true;<br>            if (x[i].CompareTo(y[i]) &gt; 0) return false;<br>        }<br>        return true;<br>    }<br><br>    void process()<br>    {<br>        string[] nm = new string[n];<br>        int i, j;<br>        for (i = 0; i &lt; n; i++)<br>        {<br>            for (j = 0; j &lt; m; j++) nm[i] += matrix[i][w[j]];<br>        }<br>        Array.Sort(nm);<br>        if (best.Length == 0 || Smaller(nm, best)) best = nm;<br>    }<br><br>    void go(int v)<br>    {<br>        if (v == m)<br>        {<br>            process();<br>            return;<br>        }<br><br>        int i;<br>        for (i = 0; i &lt; m; i++) if (!ex[i]) { ex[i] = true; w[v] = i; go(v + 1); ex[i] = false; }<br>    }<br><br>    public string[] getMinimal(string[] _matrix)<br>    {<br>        matrix = _matrix;<br>        n = matrix.Length;<br>        m = SZ(matrix[0]);<br>        best = new string[0];<br>        go(0);<br>        return best;<br>    }<br><br>    // helper<br>    int SZ(string o) { return o.Length; }<br>    <br><br>};<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>