<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>import java.io.*;<br> <br>import static java.lang.Math.*;<br> <br>public class MatrixGame {<br> <br>  String[] v;<br>  int n, m;<br> <br>  boolean[] was;<br> <br>  int[] st;<br> <br>  StringBuilder[] nma;<br>  String[] res;<br> <br>  boolean less() {<br>    if (res == null) {<br>      return true;<br>    } else {<br>      for (int i = 0; i &lt; n; ++i) {<br>        int a = res[i].compareTo(sorted[i]);<br>        if (a &lt; 0)<br>          return false;<br>        else if (a &gt; 0)<br>          return true;<br>      }<br>    }<br>    return false;<br>  }<br> <br>  void copy() {<br>    if (res == null)<br>      res = new String[n];<br>    for (int i = 0; i &lt; n; ++i)<br>      res[i] = sorted[i];<br>  }<br> <br>  String[] sorted;<br> <br>  void fix() {<br>    for (int i = 0; i &lt; n; ++i)<br>      sorted[i] = nma[i].toString();<br>    Arrays.sort(sorted);<br>  }<br> <br>  void rec(int len) {<br>    if (len == 0) {<br>      for (int k = 0; k &lt; m; ++k) {<br>        for (int i = 0; i &lt; n; ++i)<br>          nma[i].setCharAt(k, v[i].charAt(st[k]));<br>      }<br>      fix();<br>      if (less())<br>        copy();<br>    } else {<br>      for (int i = 0; i &lt; m; ++i)<br>        if (!was[i]) {<br>          was[i] = true;<br>          st[len - 1] = i;<br>          rec(len - 1);<br>          was[i] = false;<br>        }<br>    }<br>  }<br> <br>  public String[] getMinimal(String[] matrix) {<br>    v = matrix;<br>    n = v.length;<br>    m = v[0].length();<br>    st = new int[m];<br>    was = new boolean[m];<br>    nma = new StringBuilder[n];<br>    sorted = new String[n];<br>    for (int i = 0; i &lt; n; ++i) {<br>      nma[i] = new StringBuilder(m);<br>      for (int j = 0; j &lt; m; ++j)<br>        nma[i].append(" ");<br>    }<br>    rec(m);<br>    return res;<br>  }<br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>