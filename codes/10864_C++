<td class="problemText" colspan="8" valign="middle" align="left">
            // unfortunately I have no ideas for a good line here<br> <br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;stdio.h&gt;<br>using namespace std;<br> <br>#define LS &lt;<br>#define Size(x) (int(x.size()))<br> <br>// All macros with parameters "k,a,b" run the "k" variable in range [a,b)<br>#define FOR(k,a,b) for(typeof(a) k=(a); k LS (b); ++k)<br> <br>#line 3 "HandlesSpelling.cpp"<br> <br>int mincov[1024][1024];<br> <br>bool badgeHere[1024][50];<br> <br>class HandlesSpelling {<br>  public:<br>  int spellIt(vector &lt;string&gt; parts, vector &lt;string&gt; badges) {<br>    // !FDI<br>    string S;<br>    FOR(k,0,Size(parts)) S += parts[k];<br>    <br>    int N = Size(S);<br>    <br>    FOR(pos,0,N+1) FOR(bi,0,Size(badges))<br>      badgeHere[pos][bi] = badges[bi] == S.substr(pos, Size(badges[bi]));<br>    <br>    FOR(len,0,N+1) FOR(b,0,N+1-len) {<br>      int e = b+len;<br>      if(len == 0) mincov[b][e] = 0;<br>      else mincov[b][e] = mincov[b][e-1]+1;<br>      for(int bi=0; bi&lt;Size(badges); bi++) {<br>        int u = Size(badges[bi]);<br>        // printf("b=%d e=%d len=%d u=%d\n", b, e, len, u);<br>        if(len &gt;= u &amp;&amp; mincov[b][e-u] &lt; mincov[b][e] &amp;&amp; badgeHere[e-u][bi])<br>          mincov[b][e] = mincov[b][e-u];<br>        }<br>      }<br>    <br>    int bestscore = -1000000;<br>    FOR(e,0,N+1) FOR(b,0,e+1) if(mincov[b][e] == 0) {<br>      int score = (e-b) * (e-b) - mincov[0][b] - mincov[e][N];<br>      if(score &gt; bestscore) bestscore = score;<br>      }<br> <br>    return bestscore;<br>    }<br>  };<br> <br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>