<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br> <br> <br>public class CarelessSecretary<br>{<br>    static BigInteger [] facts;<br> <br>  public int howMany(int N, int K)<br>  {<br>      fillFact(N);<br>      BigInteger  [][]ans=new BigInteger[N+1][K+1];<br>      for(int i=0;i&lt;=N;i++)<br>      {<br>          for(int j=0 ;j&lt;=K &amp;&amp; j&lt;=i;j++ )<br>          {<br>              if(i==j) ans[i][j]=equals(i);<br>              else if(j==0) ans[i][j]=facts[i];<br>              else<br>              {<br>                 BigInteger temp=ans[i-1][j-1];<br>                 if(j&gt;=2) temp=temp.add(ans[i-2][j-2]);<br>                 temp=temp.multiply(BigInteger.valueOf(j-1));<br>                 ans[i][j]=temp;<br> <br>                   temp=ans[i-1][j];<br>                 if(i&gt;=2) temp=temp.add(ans[i-2][j-1]);<br>                 temp=temp.multiply(BigInteger.valueOf(i-j));<br>                    ans[i][j]=ans[i][j].add(temp);<br>                    ans[i][j]=ans[i][j].mod(BigInteger.valueOf(1000000007));<br>              }<br>//              System.out.println(i+" "+j+" ans is="+ans[i][j]);<br>          }<br>      }<br>      return ans[N][K].intValue();<br>  }<br> <br>  BigInteger equals(int N)<br>  {<br>        BigInteger  ans=BigInteger.ZERO;<br>        for(int i=0;i&lt;=N;i++)<br>        {<br>            BigInteger q=facts[N].divide(facts[i]);<br>            if(i%2==0) ans=ans.add(q);<br>            else       ans=ans.subtract(q);<br>        }<br>        return ans;<br>  }<br> <br>  static void fillFact(int N)<br>  {<br>            facts=new BigInteger[N+1];<br>        facts[0]=BigInteger.ONE;<br>        for(int i=1;i&lt;=N;i++)<br>        facts[i]=facts[i-1].multiply(BigInteger.valueOf(i));<br>  }<br> <br> <br>}<br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>