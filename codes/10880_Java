<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.Arrays;<br>import java.util.Comparator;<br><br>public class RabbitProgramming {<br>  public long getTeams(int[] points, String[] standings, int qualified, int selected) {<br>    int n = standings.length;<br>    final int[] max = new int[n];<br>    final int[] min = new int[n];<br>    for (int i = 0; i &lt; n; i++) {<br>      for (int j = 0; j &lt; points.length; j++) {<br>        if (standings[i].charAt(j) == 'Y') {<br>          if (points[j] &gt; 0) {<br>            max[i] += points[j];<br>            min[i] += points[j];<br>          } else<br>            max[i] -= points[j];<br>        }<br>      }<br>    }<br>    boolean[] can = new boolean[n];<br>    for (int i = 0; i &lt; n; i++) {<br>      int ql = 0;<br>      for (int j = 0; j &lt; n; j++) {<br>        if (max[i] &lt; min[j] || max[i] == min[j] &amp;&amp; j &lt; i)<br>          ql++;<br>      }<br>      can[i] = ql &lt; qualified;<br>    }<br>    Integer[] o = new Integer[n];<br>    for (int i = 0; i &lt; n; i++)<br>      o[i] = i;<br>    Arrays.sort(o, new Comparator&lt;Integer&gt;() {<br>      public int compare(Integer o1, Integer o2) {<br>        if (max[o1] != max[o2])<br>          return max[o2] - max[o1];<br>        return o1 - o2;<br>      }<br>    });<br>    long[][] c = new long[n + 1][n + 1];<br>    for (int i = 0; i &lt;= n; i++) {<br>      c[i][0] = 1;<br>      for (int j = 1; j &lt;= i; j++)<br>        c[i][j] = c[i - 1][j - 1] + c[i - 1][j];<br>    }<br>    long ans = 0;<br>    for (int i = 0; i &lt; n; i++) {<br>      int a = 0;<br>      int b = i;<br>      int ind = o[i];<br>      if (!can[ind])<br>        continue;<br>      for (int j = 0; j &lt; i; j++) {<br>        if (min[o[j]] &gt; max[ind] || min[o[j]] == max[ind] &amp;&amp; o[j] &lt; ind) {<br>          a++;<br>          b--;<br>        }<br>      }<br>      for (int j = 0; j &lt; selected &amp;&amp; j &lt;= a; j++) {<br>        int k = selected - j - 1;<br>        if (k &gt; qualified - a - 1 || k &gt; b)<br>          continue;<br>        ans += c[a][j] * c[b][k];<br>      }<br>    }<br>    return ans;<br>  }<br><br><br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by moj 4.16 [modified TZTester]<br>// Powered by CodeProcessor<br></td>