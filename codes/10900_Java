<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class TheMoviesLevelTwoDivOne {<br>    public int[] find(int[] length, int[] scary) {<br>        int n = length.length;<br>        int[] best = new int[1 &lt;&lt; n];<br>        int[] by = new int[1 &lt;&lt; n];<br>        for (int set = 1; set &lt; best.length; ++set) {<br>            best[set] = -1;<br>            int preLevel = 74;<br>            for (int i = 0; i &lt; n; ++i)<br>                if ((set &amp; (1 &lt;&lt; i)) == 0) {<br>                    preLevel -= length[i];<br>                    preLevel += 47;<br>                }<br>            for (int i = 0; i &lt; n; ++i)<br>                if ((set &amp; (1 &lt;&lt; i)) != 0) {<br>                    if (preLevel &gt;= scary[i] &amp;&amp; preLevel + 47 &gt;= length[i]) {<br>                        if (1 + best[set ^ (1 &lt;&lt; i)] &gt; best[set]) {<br>                            best[set] = 1 + best[set ^ (1 &lt;&lt; i)];<br>                            by[set] = i;<br>                        }<br>                    } else if (0 &gt; best[set]) {<br>                        best[set] = 0;<br>                        by[set] = i;<br>                    }<br>                }<br>        }<br>        int cur = best.length - 1;<br>        int[] res = new int[n];<br>        for (int i = 0; i &lt; n; ++i) {<br>            res[i] = by[cur];<br>            cur = cur ^ (1 &lt;&lt; res[i]);<br>        }<br>        return res;<br>    }<br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>