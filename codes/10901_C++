<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class TheMoviesLevelTwoDivTwo {<br>public:<br>  vector &lt;int&gt; find(vector &lt;int&gt;, vector &lt;int&gt;);<br>};<br> <br>vector&lt;int&gt; order;<br> <br>vector &lt;int&gt; TheMoviesLevelTwoDivTwo::find(vector &lt;int&gt; length, vector &lt;int&gt; scary) {<br>  int n = length.size();<br>  order.clear();<br>  for (int i = 0; i &lt; n; i++)<br>    order.push_back(i);<br>  int maxMov = -1;<br>  vector&lt;int&gt; res;<br>  do{<br>    int cnt = 0;<br>    int level = 74;<br>    for (int i = 0; i &lt; n; i++){<br>      int ii = order[i];<br>      level -= scary[ii];<br>      if (level &lt; 0) break;<br>      level += 47;<br>      level -= (length[ii] - scary[ii]);<br>      if (level &lt; 0) break;<br>      cnt++;<br>    }<br>//    cout&lt;&lt;cnt&lt;&lt;endl;<br>    if (cnt &gt; maxMov){ <br>      res.clear();<br>      maxMov = cnt;<br>      for (int i = 0; i &lt; n; i++)<br>        res.push_back(order[i]);<br>    }<br>  }while (next_permutation(order.begin(),order.end()));<br>  return res;  <br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>