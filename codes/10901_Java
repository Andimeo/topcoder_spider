<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.awt.*;<br>import java.awt.geom.*;<br>import java.text.*;<br>import java.math.*;<br>import static java.lang.Math.*;<br> <br>public class TheMoviesLevelTwoDivTwo {<br>  public int[] find(int[] dur, int[] scary) {<br>    int n = dur.length;<br>    int[] p = new int[n];<br>    for (int i = 0; i &lt; p.length; i++) {<br>      p[i] = i;<br>    }<br>    int[] ret = new int[n];<br>    int best = -1;<br>    do {<br>      int scare = 74, cnt = 0;<br>      for (int i = 0; i &lt; p.length; i++) {<br>        boolean wake = true;<br>        for (int t = 0; t &lt; dur[p[i]]; t++) {<br>          if (t == scary[p[i]])<br>            scare += 47;<br>          scare--;<br>          if (scare &lt; 0)<br>            wake = false;<br>        }<br>        if (wake)<br>          cnt++;<br>      }<br>      if (best &lt; cnt) {<br>        best = cnt;<br>        ret = p.clone();<br>      }<br>    } while (nextPerm(p));<br>    return ret;<br>  }<br> <br>  private static void swap(int[] p, int i, int j) {<br>    int t = p[i];<br>    p[i] = p[j];<br>    p[j] = t;<br>  }<br> <br>  public static boolean nextPerm(int[] p) {<br>    int i, j;<br>    for (i = p.length - 1; i-- &gt; 0 &amp;&amp; p[i] &gt; p[i + 1];)<br>      ;<br>    if (i &lt; 0)<br>      return false;<br>    for (j = p.length; --j &gt; i &amp;&amp; p[j] &lt; p[i];)<br>      ;<br>    swap(p, i, j);<br>    for (j = p.length; --j &gt; ++i; swap(p, i, j))<br>      ;<br>    return true;<br>  }<br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>