<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br><br>using namespace std;<br><br>#define SIZE(X) ((int)(X.size()))<br>typedef long long int64;<br>#define twoL(X) (((int64)(1))&lt;&lt;(X))<br><br>const int M=1002;<br><br>class TheMoviesLevelThreeDivOne<br>{<br>public:<br>  int n,A[60],B[60];<br>  int64 F0[2005][2005],F1[2005][2005];<br>  int64 solve()<br>  {<br>    F0[M][M]=1;<br>    int minc=M,maxc=M;<br>    for (int i=0;i&lt;n;i++)<br>    {<br>      int a=A[i],b=B[i];<br>      minc-=b;<br>      maxc+=a;<br>      for (int c1=minc;c1&lt;=maxc;c1++) memset(F1[c1]+minc,0,(maxc-minc+1)*sizeof(int64));<br>      minc+=b;<br>      maxc-=a;<br>      for (int c1=minc;c1&lt;=maxc;c1++)<br>      {<br>        for (int c2=min(maxc,c1+a-1);c2&gt;=c1;c2--) if (F0[c1][c2])<br>        {<br>          F1[c1-b][c2-b]+=F0[c1][c2];<br>          F1[c1+a-b][c1+a]+=F0[c1][c2];<br>        }<br>        for (int c2=max(c1+a,c1);c2&lt;=maxc;c2++) if (F0[c1][c2])<br>        {<br>          F1[c1-b][c2-b]+=F0[c1][c2];<br>          F1[c1+a-b][c2]+=F0[c1][c2];<br>        }<br>      }<br>      minc-=b;<br>      maxc+=a;<br>      for (int c1=minc;c1&lt;=maxc;c1++) memcpy(F0[c1]+minc,F1[c1]+minc,(maxc-minc+1)*sizeof(int64));<br>    }<br>    int64 R=twoL(n);<br>    for (int c1=minc;c1&lt;=M;c1++) for (int c2=minc;c2&lt;=M;c2++) R-=F0[c1][c2];<br>    return R;<br>  }<br>  int64 find(vector &lt;int&gt; _A, vector &lt;int&gt; _B)<br>  {<br>    n=SIZE(_A);<br>    if (n&lt;2) return 0;<br>    for (int i=0;i&lt;n;i++)<br>    {<br>      A[i]=_A[i];<br>      B[i]=_B[i];<br>    }<br>    int64 R=twoL(n);<br>    R-=solve();<br>    for (int i=0;i&lt;n;i++) swap(A[i],B[i]);<br>    R-=solve();<br>    return R;<br>  }<br>};<br></td>