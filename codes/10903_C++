<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;bitset&gt;<br>#include &lt;cmath&gt;<br>#include &lt;ctime&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;deque&gt;<br>#include &lt;fstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;vector&gt;<br>#include &lt;utility&gt;<br>using namespace std;<br><br>bool x1[22],x2[22];<br>queue&lt; pair&lt;int,int&gt; &gt; q1,q2;<br><br>class TheMoviesLevelThreeDivTwo<br>{<br>  public: int find(vector&lt;int&gt;,vector&lt;int&gt;);<br>};<br><br>int TheMoviesLevelThreeDivTwo::find(vector&lt;int&gt; a1,vector&lt;int&gt; a2)<br>{<br>  int n = a1.size();<br>  int ret = 0;<br>  for (int i = 0; i &lt; (1 &lt;&lt; n); i++)<br>  {<br>    for (int j = 0; j &lt; n; j++) if (i &amp; (1 &lt;&lt; j)) q1.push(make_pair(j,0)); else q2.push(make_pair(j,0));<br>    int t1 = 0,t2 = 0;<br>    memset(x1,true,sizeof(x1));<br>    memset(x2,true,sizeof(x2));<br>    int left1 = n,left2 = n;<br>    while (!q1.empty() || !q2.empty())<br>    {<br>      //Could not review<br>      while (!q1.empty() &amp;&amp; t1 &lt; q1.front().second) q1.pop();<br>      pair&lt;int,int&gt; pp;<br>      if (!q1.empty())<br>      {<br>        pp = q1.front();  q1.pop();<br>        x1[pp.first] = false;  left1--;  t1 += a1[pp.first];<br>        if (x2[pp.first]) q2.push(make_pair(pp.first,t1));<br>      };      <br>      while (!q2.empty() &amp;&amp; t2 &lt; q2.front().second) q2.pop();<br>      if (!q2.empty())<br>      {  <br>        pp = q2.front();  q2.pop();<br>        x2[pp.first] = false;  left2--;  t2 += a2[pp.first];<br>        if (x1[pp.first]) q1.push(make_pair(pp.first,t2));<br>      };<br>    };<br>    if (!left1 &amp;&amp; !left2) ret++;<br>  };<br>  return ret;<br>};<br></td>