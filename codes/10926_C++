<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class CrazyLine {<br>public:<br>  int maxCrazyness(vector &lt;int&gt;);<br>  vector &lt;int&gt; h;<br>  int f(int v1,int v2,int v3,int n)<br>  {<br>    int res=abs(h[v2]-h[v1]);<br>    int l=0,r=h.size()-1;<br>    int last=v2;<br>    while (true)<br>    {<br>      while ((l==v1)||(l==v2)||(l==v3)) l++;<br>      while ((r==v1)||(r==v2)||(r==v3)) r--;<br>      if (l&gt;=r) break;<br>      res+=abs(h[last]-h[l])+abs(h[r]-h[l]);<br>      last=r;<br>      l++;r--;<br>    }<br>    if (l==r)<br>    {<br>      res+=abs(h[last]-h[l]);<br>      last=l;<br>    }<br>    res+=abs(h[v3]-h[last]);<br>    return res;<br>  }<br>  <br>  int f2(int v1,int v2,int v3)<br>  {<br>    int res=abs(h[v2]-h[v1]);<br>    int l=0,r=h.size()-1;<br>    int last=v2;<br>    while (true)<br>    {<br>      while ((l==v1)||(l==v2)||(l==v3)) l++;<br>      while ((r==v1)||(r==v2)||(r==v3)) r--;<br>      if (l&gt;=r) break;<br>      res+=abs(h[last]-h[r])+abs(h[r]-h[l]);<br>      last=l;<br>      l++;r--;<br>    }<br>    if (l==r)<br>    {<br>      res+=abs(h[last]-h[l]);<br>      last=l;<br>    }<br>    res+=abs(h[v3]-h[last]);<br>    return res;<br>  }<br>};<br> <br>int CrazyLine::maxCrazyness(vector &lt;int&gt; heights) <br>{<br>  h=heights;<br>  sort(h.begin(),h.end());<br>  int max=-1,now=-1;<br>  if (h.size()==1) return 0;<br>  if (h.size()==2) return abs(h[1]-h[0]);<br>  for (int v1=0;v1&lt;h.size();v1++)<br>  for (int v2=0;v2&lt;h.size();v2++)<br>  for (int v3=0;v3&lt;h.size();v3++)<br>  {<br>  if ((v1!=v2)&amp;&amp;(v2!=v3)&amp;&amp;(v3!=v1))<br>  {<br>    now=f(v1,v2,v3,h.size());<br>    if (max&lt;now) max=now;<br>  }<br>  <br>  if ((v1!=v2)&amp;&amp;(v2!=v3)&amp;&amp;(v3!=v1))<br>  {<br>    now=f2(v1,v2,v3);<br>    if (max&lt;now) max=now;<br>  }<br>  }<br>  return max;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>