<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;bitset&gt;<br>#include &lt;complex&gt;<br>#include &lt;cmath&gt;<br>#include &lt;ctype.h&gt;<br>#include &lt;deque&gt;<br>#include &lt;functional&gt;<br>#include &lt;iostream&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;stack&gt;<br>#include &lt;string&gt;<br>#include &lt;utility&gt;<br>#include &lt;valarray&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>typedef vector&lt;int&gt;    VI;<br>typedef vector&lt;string&gt; VS;<br><br>const int BASE[6] = { 4, 9, 2, 7, 11, 4 };<br>const string KEY[12] = { "C", "C#", "D", "D#", "E", "F", "F#", "G", "G#", "A", "A#", "B" };<br><br>class WhatsThisChord<br>{<br>public:<br>    string classify(vector&lt;int&gt; chord)<br>    {<br>        // Determine notes<br>        set&lt;int&gt; notes;<br>        for(size_t i = 0; i &lt; chord.size(); ++i)<br>        {<br>            if(chord[i] != -1)<br>            {<br>                int note = BASE[i] + chord[i];<br>                note = note % 12;<br>                notes.insert(note);<br>            }<br>        }<br><br>        if(notes.size() != 3)<br>            return "";<br><br>        for(int i = 0; i &lt; 12; ++i)<br>        {<br>            if((notes.count(i) == 1) &amp;&amp; <br>               (notes.count((i + 4) % 12) == 1) &amp;&amp; <br>               (notes.count((i + 7) % 12) == 1))<br>                return KEY[i] + " Major"; <br>        }<br><br>        for(int i = 0; i &lt; 12; ++i)<br>        {<br>            if((notes.count(i) == 1) &amp;&amp; <br>               (notes.count((i + 3) % 12) == 1) &amp;&amp; <br>               (notes.count((i + 7) % 12) == 1))<br>                return KEY[i] + " Minor"; <br>        }<br><br>        return "";<br>    }<br>};<br></td>