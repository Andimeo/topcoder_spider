<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iterator&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;sstream&gt;<br><br>using namespace std;<br><br>#define FOR(i,a,b) for (int _n(b), i(a); i &lt; _n; i++)<br>#define REP(i,n) FOR(i,0,n)<br>#define FORD(i,a,b) for(int i=(a),_b=(b);i&gt;=_b;--i)<br>#define ALL(c) (c).begin(), (c).end()<br>#define SORT(c) sort(ALL(c))<br>#define INF 1000000000<br>#define X first<br>#define Y second<br>#define pb push_back<br><br>bool a[1024][1024];<br>bool b[1024][1024];<br>bool c[1024][1024];<br><br>class CuttingGlass {<br>public:<br>    int n, m;<br>    queue &lt;pair &lt;int, int &gt; &gt; q;<br>    void go (short x, short y)<br>    {<br>        if (c[x][y])<br>            return;<br>        if (x&lt;0 || y&lt;0 || x&gt;=n || y&gt;=m)<br>            return;<br>        c[x][y] = 1;<br>        q.push(make_pair(x,y));<br>    }<br>    int pieces(int W, int H, int x, int y, vector &lt;string&gt; p) {<br>        int res = 0;<br>        n = W;<br>        m = H;<br>        memset (a, 0, sizeof (a));<br>        memset (b, 0, sizeof (b));<br>        memset (c, 0, sizeof (c));<br><br>        REP (i, p.size ())<br>            REP (j, p[i].size ())<br>            {<br>                if (p[i][j] == 'L') {<br>                    b[x-1][y] = 1;<br>                    x--;<br>                }<br>                if (p[i][j] == 'R') {<br>                    b[x][y] = 1;<br>                    x++;<br>                }<br>                if (p[i][j] == 'U') {<br>                    a[x][y-1] = 1;<br>                    y--;<br>                }<br>                if (p[i][j] == 'D') {<br>                    a[x][y] = 1;<br>                    y++;<br>                }<br><br>            }<br>        REP (i, n)<br>            REP (j, m)<br>                if (!c[i][j])<br>                {<br>                    res ++;<br>                    c[i][j] = 1;<br>                    q.push (make_pair(i, j));<br><br>                    while (!q.empty()) {<br>                        int x = q.front().X;<br>                        int y = q.front().Y;<br>                        q.pop();<br>                        if (!a[x][y])<br>                            go (x-1, y);<br>        if (!a[x+1][y])<br>            go (x+1, y);<br>        if (!b[x][y])<br>            go (x, y-1);<br>        if (!b[x][y+1])<br>            go (x, y+1);<br>                    }<br>                }<br><br>        return res;<br><br>    }<br><br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>