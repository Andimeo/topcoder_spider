<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br><br>using namespace std;<br><br><br>class SieveOfEratosthenes<br>{<br>public:<br>  bool isPrime(int n)<br>  {<br>    if (n==1) return false;<br>    for (int i=2;i*i&lt;=n;i++)<br>      if (n%i==0)<br>        return false;<br>    return true;<br>  }<br>  int lastScratch(int m)<br>  {<br>    int n=0;<br>    int A[10000];<br>    for (int i=2;i*i&lt;=m;i++)<br>      if (isPrime(i))<br>        A[n++]=i;<br>    printf("n = %d\n",n);<br>    int p=A[n-1];<br>    for (int d=m/p;d&gt;=p;d--)<br>    {<br>      bool isGood=true;<br>      for (int i=0;i&lt;n-1;i++)<br>        if (d%A[i]==0)<br>          isGood=false;<br>      if (isGood)<br>        return p*d;<br>    }<br>    return 0;<br>  }<br>};<br></td>