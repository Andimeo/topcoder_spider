<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cassert&gt;<br>#include &lt;set&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstddef&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;utility&gt;<br>#include &lt;iterator&gt;<br>#include &lt;numeric&gt;<br>#include &lt;list&gt;<br>#include &lt;complex&gt;<br> <br>using namespace std;<br> <br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;string&gt; vs;<br>typedef long long ll;<br>typedef complex&lt;double&gt; pnt;<br>typedef pair&lt;int, int&gt; pii;<br> <br>#define RA(x) (x).begin(), (x).end()<br>#define FE(i, x) for (typeof((x).begin()) i = (x).begin(); i != (x).end(); i++)<br>#define SZ(x) ((int) (x).size())<br> <br> <br>class EqualizeStrings<br>{<br>public:<br>    string getEq(string s, string t);<br>};<br> <br>string EqualizeStrings::getEq(string s, string t)<br>{<br>    int N = SZ(s);<br>    string out(N, ' ');<br>    for (int i = 0; i &lt; N; i++)<br>    {<br>        int d1 = abs(s[i] - t[i]);<br>        if (d1 &gt;= 13)<br>            out[i] = 'a';<br>        else<br>            out[i] = min(s[i], t[i]);<br>    }<br>    return out;<br>}<br> <br> <br>// Powered by FileEdit<br></td>