<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define FOR(i,a,b) for(int i=(a);i&lt;(b);++i)<br>#define REP(i,n) FOR(i,0,n)<br>#define ALL(a) (a).begin(),a.end()<br>#define SORT(a) sort(ALL(a))<br>#define SZ(a) ((int) a.size())<br>#define pb push_back<br> <br>class LineSegments {<br>public:<br>  long long intersections(int, int, int, int, int, int, int, int, int);<br>};<br> <br>const double pi = acos (-1.0);<br>struct point {<br>  int x, y;<br>};<br> <br>long double b[2048];<br>int n;<br>point a[2048];<br> <br>long long calc () {  <br>    long long out = 0;<br>    int m;<br>    REP (i, n)<br>    {<br>        m = 0;<br>        REP (j, n) if (i != j)<br>          b[m++] = atan2l (a[j].y - a[i].y, a[j].x - a[i].x);<br>        sort (b, b + m);        <br>        int u = 1;<br>        while (u &amp;&amp; b[0] + pi &gt; b[u]) u = (u + 1) % m;        <br>        int x;<br>        REP (j, m)<br>        {<br>            while (u != j &amp;&amp;((b[u] &gt;= b[j]  &amp;&amp; b[j] + pi &gt;= b[u]) ||<br>                    (b[u]+2*pi &gt;= b[j]  &amp;&amp; b[j] + pi &gt;= b[u]+2*pi)))<br>                   { ++u; if (u == m) u = 0; }<br>            x = u - j - 1 &lt; 0 ? u - j - 1 + m : u - j - 1;<br>            if (x &gt;= 2) <br>                out += x * (x-1) / 2;<br>        }            <br>    }<br>    return out - 3 * ((long long) n * (n-1) * (n-2) * (n-3)) / (1*2*3*4);  <br>}<br> <br>int x[1200];<br>int y[1200];<br> <br>long long LineSegments::intersections(int N, int xFirst, int xAdd, int xProd, int xMod, int yFirst, int yAdd, int yProd, int yMod) {<br>  x[0] = xFirst;<br>  FOR (i, 1, N)<br>    x[i] = ((long long) x[i-1]*xProd + xAdd) % xMod;<br>  y[0] = yFirst;<br>  FOR (i, 1, N)<br>    y[i] = ((long long) y[i-1]*yProd + yAdd) % yMod;<br>  n = N;<br>  REP (i, n) {<br>    a[i].x = x[i];<br>    a[i].y = y[i];<br>  }<br>  return calc ();<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>