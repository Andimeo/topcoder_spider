<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;utility&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;bitset&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;ext/hash_set&gt;<br>#include &lt;ext/hash_map&gt;<br>#include &lt;functional&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cstddef&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cassert&gt;<br> <br>using namespace std;<br>using namespace __gnu_cxx;<br> <br>#define zero(a) memset(a,0,sizeof a)<br> <br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;VI&gt; VVI;<br>typedef vector&lt;double&gt; VD;<br>typedef vector&lt;VI&gt; VVD;<br>typedef vector&lt;string&gt; VS;<br>typedef vector&lt;VS&gt; VVS;<br>typedef signed long long s64;<br>typedef unsigned long long u64;<br>typedef pair&lt;int,int&gt; PII;<br> <br>template&lt;typename T&gt;<br>vector&lt;T&gt; make_tuple() {<br>  return vector&lt;T&gt;(0);<br>}<br> <br>template&lt;typename T&gt;<br>vector&lt;T&gt; make_tuple(const T &amp;a) {<br>  return vector&lt;T&gt;(1,a);<br>}<br> <br>template&lt;typename T&gt;<br>vector&lt;T&gt; make_tuple(const T &amp;a, const T &amp;b) {<br>  vector&lt;T&gt; r(2);<br>  r[0] = a;<br>  r[1] = b;<br>  return r;<br>}<br> <br>template&lt;typename T&gt;<br>vector&lt;T&gt; make_tuple(const T &amp;a, const T &amp;b, const T &amp;c) {<br>  vector&lt;T&gt; r(3);<br>  r[0] = a;<br>  r[1] = b;<br>  r[2] = c;<br>  return r;<br>}<br> <br>template&lt;typename T&gt;<br>void sortref(T &amp;a, T &amp;b) {<br>  if(a &gt; b) {<br>    T t = a;<br>    a = b;<br>    b = t;<br>  }<br>}<br> <br>template&lt;typename T&gt;<br>void sortref(T &amp;a, T &amp;b, T &amp;c) {<br>  sortref(a, c);<br>  sortref(a, b);<br>  sortref(b, c);<br>}<br> <br>int sgn(int x) {<br>  return x&lt;0 ? -1 : x&gt;0;<br>}<br> <br>string lc(const string &amp;x) {<br>  string r = x;<br>  for(size_t i=0; i&lt;r.size(); i++)<br>    r[i] = tolower(r[i]);<br>  return r;<br>}<br>string uc(const string &amp;x) {<br>  string r = x;<br>  for(size_t i=0; i&lt;r.size(); i++)<br>    r[i] = toupper(r[i]);<br>  return r;<br>}<br>struct ciless {<br>  static int cmp(const string &amp;a, const string &amp;b) {<br>    for(const char *p=a.c_str(),*q=b.c_str(); ; p++,q++) {<br>      int d = toupper(*p)-toupper(*q);<br>      if(d) return sgn(d);<br>      if(!*p) return 0;<br>    }<br>  }<br>  bool operator()(const string &amp;a, const string &amp;b) {<br>    return cmp(a,b) &lt; 0;<br>  }<br>};<br> <br>template&lt;typename T&gt;<br>ostream &amp;operator&lt;&lt;(ostream &amp;o, const vector&lt;T&gt; &amp;v) {<br>  o &lt;&lt; "{";<br>  if(v.size()) o &lt;&lt; ' ' &lt;&lt; v[0];<br>  for(size_t i=1; i&lt;v.size(); i++)<br>    o &lt;&lt; ", " &lt;&lt; v[i];<br>  return o &lt;&lt; " }";<br>}<br>template&lt;typename F,typename S&gt;<br>ostream &amp;operator&lt;&lt;(ostream &amp;o, const pair&lt;F,S&gt; &amp;p) {<br>  return o &lt;&lt; "(" &lt;&lt; p.first &lt;&lt; "," &lt;&lt; p.second &lt;&lt; ")";<br>}<br>template&lt;typename K, typename V&gt;<br>ostream &amp;operator&lt;&lt;(ostream &amp;o, const map&lt;K,V&gt; &amp;m) {<br>  o &lt;&lt; "%{" &lt;&lt; endl;<br>  for(typename map&lt;K,V&gt;::const_iterator it=m.begin(); it!=m.end(); it++)<br>    o &lt;&lt; it-&gt;first &lt;&lt; " -&gt; " &lt;&lt; it-&gt;second &lt;&lt; endl;<br>  return o &lt;&lt; "%}" &lt;&lt; endl;<br>}<br> <br>VS split(const string &amp;s, const char *d=" \t\n\r") {<br>  VS r;<br>  int i=0,j=0;<br>  for(;;) {<br>    i = s.find_first_not_of(d,j);<br>    if(i&lt;0) break;<br>    j = s.find_first_of(d,i);<br>    r.push_back(s.substr(i,j-i));<br>  }<br>  return r;<br>}<br>int asint(const string &amp;s) {<br>  return atoi(s.c_str());<br>}<br>VI asint(const VS &amp;vs) {<br>  VI r;<br>  for(size_t i=0; i&lt;vs.size(); i++)<br>  r.push_back(asint(vs[i]));<br>  return r;<br>}<br>VVI asint(const VVS &amp;vvs) {<br>  VVI r;<br>  for(size_t i=0; i&lt;vvs.size(); i++)<br>  r.push_back(asint(vvs[i]));<br>  return r;<br>}<br> <br>u64 comb(int a, int b) {<br>  static u64 cache[68][35] = {{1}};<br>  if(a&lt;0 || a&gt;67) return (u64)-1;<br>  if(b&lt;0 || b&gt;a) return 0;<br>  u64 &amp;r = cache[a][b&lt;?=a-b];<br>  if(r) return r;<br>  return r = comb(a-1,b-1) + comb(a-1,b);<br>}<br>int gcd(int a, int b) { return b?gcd(b,a%b):a; }<br>u64 gcd(u64 a, u64 b) { return b?gcd(b,a%b):a; }<br> <br>class Rooms {<br> <br>  public:<br>  vector &lt;int&gt; finalRooms(vector &lt;string&gt; rooms, string doors, int start) {<br>  int i,j,t;<br>  int n = rooms.size();<br>  VI p(n);<br>  map&lt;pair&lt;char,int&gt;,VI&gt; g;<br>  for(i=0; i&lt;n; i++) {<br>    VS d = split(rooms[i]," ");<br>    for(j=0; j&lt;d.size(); j++) {<br>      char c = d[j][0];<br>      g[make_pair(c,i)] = asint(split(d[j].substr(2),","));<br>    }<br>  }<br>  p[start] = 1;<br>  for(t=0; t&lt;doors.size(); t++) {<br>    char c = doors[t];<br>    VI np(n);<br>    for(i=0; i&lt;n; i++) {<br>      if(!p[i]) continue;<br>      const VI &amp;nx = g[make_pair(c,i)];<br>      for(j=0; j&lt;nx.size(); j++)<br>      np[nx[j]] = 1;<br>    }<br>    p = np;<br>  }<br>  vector &lt;int&gt; rval;<br>  for(i=0; i&lt;n; i++)<br>  if(p[i]) rval.push_back(i);<br>    return rval;<br>  }<br>};<br></td>