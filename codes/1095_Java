<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class Rooms{<br>public int[] finalRooms(String[] rooms, String doors, int start){<br>int n = rooms.length;<br>boolean[][][] map = new boolean[26][n][n];<br>for (int i = 0; i &lt; n; i++){<br>StringTokenizer st = new StringTokenizer(rooms[i]);<br>while(st.hasMoreTokens()){<br>StringTokenizer st2 = new StringTokenizer(st.nextToken(),":,");<br>int h = st2.nextToken().charAt(0) - 'A';<br>while (st2.hasMoreTokens()){<br>int j = Integer.parseInt(st2.nextToken());<br>map[h][i][j] = true;<br>}}}<br>boolean[][] poss = new boolean[doors.length()+1][n];<br>poss[0][start] = true;<br>for (int i = 0; i &lt; doors.length(); i++){<br>int d = doors.charAt(i)-'A';<br>for (int j = 0; j &lt; n; j++)<br>if (poss[i][j])<br>for (int k = 0; k &lt; n; k++)<br>if (map[d][j][k])<br>poss[i+1][k] = true;<br>}<br>int count = 0;<br>for (int i = 0; i &lt; n; i++) if (poss[doors.length()][i]) count++;<br>int[] tor = new int[count];<br>count = 0;<br>for (int i = 0; i &lt; n; i++) if (poss[doors.length()][i]){ tor[count] = i; count++;}<br>return tor;<br>}}<br></td>