<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>int dx[4]={0,1,0,-1};<br>int dy[4]={1,0,-1,0};<br>class SequenceOfCommands {<br>public:<br>  string whatHappens(vector &lt;string&gt; commands) {<br>    int x=0;<br>    int y=0;<br>    int dir=0;<br>    int i,j,k;<br>    for (i=0; i&lt;4; i++)<br>      for (j=0; j&lt;commands.size(); j++)<br>        for (k=0; k&lt;commands[j].length(); k++)<br>        {<br>          if (commands[j][k]=='L')<br>            dir=(dir+1)%4;<br>          else if (commands[j][k]=='R')<br>            dir=(dir+3)%4;<br>          else<br>          {<br>            x+=dx[dir];<br>            y+=dy[dir];<br>          }<br>        }<br>    if (x==0&amp;&amp;y==0) return "bounded"; else return "unbounded";<br>  }<br>};<br> <br> <br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>