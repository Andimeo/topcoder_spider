<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br> <br> <br>public class RooksParty<br>{<br>  final long mod = 1000000009L;<br>  <br>  public int countArrangements(int n, int m, int[] counts)<br>  {<br>    long[][] c = new long[901][901];<br>    for (int i = 0; i &lt; c.length; ++i) {<br>      for (int j = 1; j &lt; i; ++j) {<br>        c[i][j] = (c[i - 1][j - 1] + c[i - 1][j]) % mod;<br>      }<br>      c[i][0] = c[i][i] = 1;<br>    }<br>    long[][] d = new long[n + 1][m + 1];<br>    d[n][m] = 1;<br>    for (int k : counts) {<br>      long[][] fitIn = new long[31][31];<br>      for (int i = 0; i &lt; fitIn.length; ++i) {<br>        for (int j = 0; j &lt; fitIn[i].length; ++j) {<br>          fitIn[i][j] = c[i * j][k];<br>        }<br>      }<br>      for (int i = 0; i &lt; fitIn.length; ++i) {<br>        for (int j = 0; j &lt; fitIn[i].length; ++j) {<br>          for (int ii = 0; ii &lt;= i; ++ii) {<br>            for (int jj = 0; jj &lt;= j; ++jj) {<br>              if (i != ii || j != jj) {<br>                long val = fitIn[ii][jj];<br>                val = (val * c[i][ii]) % mod;<br>                val = (val * c[j][jj]) % mod;<br>                fitIn[i][j] = (fitIn[i][j] + mod - val) % mod;<br>              }<br>            }<br>          }<br>        }<br>      }<br>      long[][] t = new long[n + 1][m + 1];<br>      for (int i = 0; i &lt;= n; ++i) {<br>        for (int j = 0; j &lt;= m; ++j) {<br>          for (int ii = 0; ii &lt;= i; ++ii) {<br>            for (int jj = 0; jj &lt;= j; ++jj) {<br>              long val = d[i][j];<br>              val = (val * fitIn[i - ii][j - jj]) % mod;<br>              val = (val * c[i][ii]) % mod;<br>              val = (val * c[j][jj]) % mod;<br>              t[ii][jj] = (t[ii][jj] + val) % mod;<br>            }<br>          }<br>        }<br>      }<br>      d = t;<br>    }<br>    long ans = 0;<br>    for (int i = 0; i &lt;= n; ++i) {<br>      for (int j = 0; j &lt;= m; ++j) {<br>        ans = (ans + d[i][j]) % mod;<br>      }<br>    }<br>    return (int)ans;<br>  }<br>  <br> <br>}<br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>