<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>#define forn(X,Y) for (int X = 0;X &lt; Y;X++)<br>#define debug(x) cout &lt;&lt; '&gt;' &lt;&lt; #x &lt;&lt; ':' &lt;&lt; x &lt;&lt; '\n';<br> <br>#define rep(X,Y,Z) for (int X = Y;X &lt; Z;X++)<br>#define reset(Z,Y) memset(Z,Y,sizeof(Z))<br> <br>#define sz(Z) ((int)Z.size())<br>#define all(W) W.begin(), W.end()<br>#define pb push_back<br> <br>#define mp make_pair<br>#define A first<br>#define B second<br> <br>#define inf 1023123123<br>#define eps 1e-11<br> <br>#define MX(Z,Y) Z = max((Z),(Y))<br>#define MN(X,Y) X = min((X),(Y))<br> <br>#define forit(X,Y) for(typeof((Y).begin()) X = (Y).begin();X!=(Y).end();X++)<br> <br>using namespace std;<br> <br>typedef long long ll;<br>typedef double db;<br>typedef vector&lt;int&gt; vint;<br> <br>class TheChroniclesOfAmber {<br>public:<br>  double minimumTime(vector &lt;int&gt;, vector &lt;int&gt;, vector &lt;int&gt;, vector &lt;int&gt;);<br>};<br> <br>int n;<br> <br>double TheChroniclesOfAmber::minimumTime(vector &lt;int&gt; px, vector &lt;int&gt; py, vector &lt;int&gt; dx, vector &lt;int&gt; dy) {<br>  <br>  db sol;<br>  n = sz(px);<br>  sol = 0.0;<br>  forn(i,n) MX(sol,hypot((db)(dx[i]-px[i]),(db)(dy[i]-py[i])));<br>  <br>  forn(i,n) {<br>    //si ini terlarang;<br>    db tes = 0.0;<br>    forn(j,n) {<br>      db best = 1123123.0;<br>      forn(k,n) if (k != i) {<br>        MN(best,hypot((db)(dx[j]-px[k]),(db)(dy[j]-py[k])));<br>        }<br>      MX(tes,best);<br>      }<br>    MN(sol,tes);<br>    }<br>  return sol;<br>      <br>  <br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>