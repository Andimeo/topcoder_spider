<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class RepresentableNumbers<br>{<br>    public int getNext(int X)<br>    {<br>        int[] numbers = new int[] { 1, 3, 5, 7, 9 };<br>        for (int L = 0; L &lt; 7; ++L)<br>        {<br>            int[] old_numbers = new int[numbers.Length];<br>            for (int i = 0; i &lt; numbers.Length; ++i)<br>                old_numbers[i] = numbers[i];<br>            numbers = new int[old_numbers.Length * 6];<br>            int count = 0;<br>            for (int i = 0; i &lt; old_numbers.Length; ++i)<br>                numbers[count++] = old_numbers[i];<br>            for (int i = 1; i &lt; 10; i += 2)<br>                for (int j = 0; j &lt; old_numbers.Length; ++j)<br>                    numbers[count++] = old_numbers[j] * 10 + i;<br>        }<br>        Array.Sort(numbers);<br>        int results = Int32.MaxValue;<br>        for (int i = 0; i &lt; numbers.Length; ++i)<br>        {<br>            int low = -1, high = numbers.Length;<br>            for (; low + 1 &lt; high; )<br>            {<br>                int mid = low + (high - low) / 2;<br>                if (numbers[i] + numbers[mid] &gt;= X)<br>                    high = mid;<br>                else<br>                    low = mid;<br>            }<br>            if (high &gt;= 0 &amp;&amp; high &lt; numbers.Length)<br>            {<br>                int sum = numbers[i] + numbers[high];<br>                if (sum &gt;= X)<br>                    results = Math.Min(results, sum);<br>            }<br>        }<br>        return results;<br>    }<br>}<br></td>