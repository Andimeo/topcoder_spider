<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br><br>public class RepresentableNumbers {<br>  final int MAX = 1000000;<br>  <br>  int[] genl;<br>  int count;<br>  <br>  public int getNext(int X) {<br>    genl = new int[MAX];<br>    count = 0;<br>    <br>    gen(0, X);<br>    Arrays.sort(genl, 0, count);<br>    int[] list = new int[count];<br>    System.arraycopy(genl, 0, list, 0, count);<br>    <br>    int result = Integer.MAX_VALUE;<br>    for (int i = 0; i &lt; count; i++) {<br>      int r = X - list[i];<br>      int index = Arrays.binarySearch(list, r);<br>      if (index &lt; 0) {<br>        index = -(index + 1);<br>      }<br>      <br>      while (index &lt; count &amp;&amp; list[index] &lt; r) {<br>        index++;<br>      }<br>      if (index &lt; count) {<br>        result = Math.min(result, list[i] + list[index]);<br>      }<br>    }<br>    <br>    return result;<br>  }<br><br>  private void gen(int v, int X) {<br>    for (int d = 1; d &lt;= 9; d += 2) {<br>      int nv = v * 10 + d;<br>      if (nv &lt;= X) {<br>        genl[count++] = nv;<br>        gen(nv, X);<br>      }<br>    }<br>  }<br><br>  private boolean good(int v) {<br>    while (v &gt; 0) {<br>      int a = v % 10;<br>      if ((a &amp; 1) == 0) {<br>        return false;<br>      }<br>      v /= 10;<br>    }<br>    return true;<br>  }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>