<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;string&gt;<br>#include&lt;vector&gt;<br>#include&lt;cmath&gt;<br>#include&lt;sstream&gt;<br>#include&lt;iostream&gt;<br>#include&lt;algorithm&gt;<br>#define L 300<br>using namespace std;<br><br>vector&lt;int&gt; lj[L];<br>bool bt[L];<br>int best,besti;<br>int map[L][L];<br><br>void dfs(int x,int v){<br>  if (bt[x]) return;<br>  if (v&gt;best) {best=v;besti=x;}<br>  bt[x]=1;<br>  for (int i=0;i&lt;lj[x].size();++i)<br>      dfs(lj[x][i],v+map[x][lj[x][i]]);<br>}<br><br>bool change(int x,int y){<br>  if (bt[x]) return false;<br>  bt[x]=1;<br>  if (x==y) return true;<br>  for (int i=0;i&lt;lj[x].size();++i)<br>    if (change(lj[x][i],y)){<br>        map[x][lj[x][i]]=map[lj[x][i]][x]=-map[lj[x][i]][x];<br>        return true;<br>    }<br>  return false;<br>}<br><br>#undef L<br><br>class KingdomTour{<br>public:<br>  int minTime(int N, vector &lt;string&gt; roads, int K, int L){<br>    string s;<br>    int i,a,b,c,ans=0;<br>    for (i=0;i&lt;roads.size();++i) s+=roads[i];<br>    istringstream in(s);<br>    memset(map,0,sizeof map);<br>    for (i=0;i&lt;N;++i) lj[i].clear();<br>    while (in &gt;&gt; a &gt;&gt; b &gt;&gt; c){<br>      lj[a].push_back(b);<br>      lj[b].push_back(a);<br>      map[a][b]=map[b][a]=c;<br>      ans+=c*2;<br>      char ch;<br>      in &gt;&gt; ch;<br>    }<br>    int j,x,y;<br>    for (int t=0;t&lt;K;++t){<br>      int tmp=0;<br>      for (i=0;i&lt;N;++i){<br>        for (j=0;j&lt;N;++j) bt[j]=0;<br>        best=0;besti=-1;<br>        dfs(i,0);<br>        if (best&gt;tmp){<br>          tmp=best;<br>          x=i;<br>          y=besti;<br>        }<br>      }<br>      if (tmp&lt;=L) break;<br>      ans-=tmp-L;<br>      for (j=0;j&lt;N;++j) bt[j]=0;<br>      change(x,y);<br>    }<br>    return ans;<br>  }<br><br>};<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>