<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class ProductsOfDigits {<br>    long repr(int x) {<br>        int num7 = 0;<br>        int x2=x;<br>        while(x2%7==0) {<br>            x2/=7;<br>            num7++;<br>        }<br>        x=x2;<br>        int num5 = 0;<br>        x2=x;<br>        while(x2%5==0) {<br>            x2/=5;<br>            num5++;<br>        }<br>        x=x2;<br>        int num6 = 0;<br>        x2=x;<br>        long best = -1;<br>        while(true) {<br>            int num9 = 0;<br>            int x3=x2;<br>            while(true) {<br>                int num8 = 0;<br>                int x4 = x3;<br>                while(true) {<br>                    int num4 = 0;<br>                    long cand = 0;<br>                    int y= x4;<br>                    if (y%4!=0 &amp;&amp; y%2==0) {<br>                        cand*=10;<br>                        cand+=2;<br>                        y/=2;<br>                    }<br>                    if (y%3==0) {<br>                        cand*=10;<br>                        cand+=3;<br>                        y/=3;<br>                    }<br>                    if (y%4==0) {<br>                        cand*=10;<br>                        cand+=4;<br>                        y/=4;<br>                    }<br>                    if (y%4==0) {<br>                        cand*=10;<br>                        cand+=4;<br>                        y/=4;<br>                    }<br>                    //System.out.println(y+"");<br>                    if (y==1) {<br>                        for (int i = 0; i &lt; num5; i++) {<br>                            cand*=10;<br>                            cand+=5;<br>                        }<br>                        for (int i = 0; i &lt; num6; i++) {<br>                            cand*=10;<br>                            cand+=6;<br>                        }<br>                        for (int i = 0; i &lt; num7; i++) {<br>                            cand*=10;<br>                            cand+=7;<br>                        }<br>                        for (int i = 0; i &lt; num8; i++) {<br>                            cand*=10;<br>                            cand+=8;<br>                        }<br>                        for (int i = 0; i &lt; num9; i++) {<br>                            cand*=10;<br>                            cand+=9;<br>                        }<br>                        if(best&lt;0||cand&lt;best) {<br>                            best=cand;<br>                        }<br>                    }<br> <br>                    if(x4%8!=0) break;<br>                    x4/=8;<br>                    num8++;<br>                }<br>                if(x3%9!=0) break;<br>                x3/=9;<br>                num9++;<br>            }<br>            if(x2%6!=0) break;<br>            x2/=6;<br>            num6++;<br>        }<br>        return best;<br>    }<br>    public long firstOccurrence(int[] prod) {<br>        int[] seq = new int[10000];<br>        for(int i = 1; i&lt;10000; i++) {<br>            int x = i;<br>            int p = 1;<br>            while (x&gt;0) {<br>                p *= x%10;<br>                x /=10;<br>            }<br>            seq[i] = p;<br>        }<br>        for(int i = 1; i&lt;5000; i++) {<br>            boolean ok = true;<br>            for(int j = 0; j&lt;prod.length; j++) {<br>                if (seq[i+j]!=prod[j]) {<br>                    ok = false;<br>                    break;<br>                }<br>            }<br>            if (ok) return i;<br>        }<br> <br>        int nonzero = 0;<br>        for(int i = 0; i&lt;prod.length; i++) {<br>            if (prod[i]!=0) {<br>                nonzero = i;<br>                break;<br>            }<br>        }<br> <br>        int value = prod[nonzero];<br>        long best = -1;<br> <br>        for(int i = 1; i&lt;1000; i++) {<br>            if (seq[1000+i]!=0 &amp;&amp; value%seq[1000+i]==0) {<br>                long rem = value/seq[1000+i];<br>                boolean ok2 = true;<br>                for(int j=0; j&lt;prod.length; j++) {<br>                    int test = i+j-nonzero+1000;<br>                    if (test&gt;=2000) test-=1000;<br>                    long x = seq[test]*rem;<br>                    if (x!=prod[j]) {<br>                        ok2 = false;<br>                        break;<br>                    }<br>                }<br>                if (ok2) {<br>                    long cand = repr((int)rem)*1000+(i-nonzero);<br>                    if(best&lt;0 || cand&lt;best) best=cand;<br>                }<br>            }<br> <br>        }<br> <br>        long res = best;<br>        return res;<br>    }<br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>