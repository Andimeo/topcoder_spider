<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;stack&gt;<br>#include &lt;list&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iterator&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cmath&gt;<br>using namespace std;<br> <br>typedef vector &lt;int &gt; VI;<br>typedef long long LL;<br> <br> <br>#define ALL(x) x.begin(),x.end()<br>#define REP(i,n) for (int i=0; i&lt;(n); ++i)<br>#define FOR(var,pocz,koniec) for (int var=(pocz); var&lt;=(koniec); ++var)<br>#define FOREACH(it, X) for(__typeof((X).begin()) it = (X).begin(); it != (X).end(); ++it)<br>#define PB push_back<br>#define SIZE(x) (int)x.size()<br> <br> <br>const int N = 17;<br>int t[1&lt;&lt;N];<br>int ruch[1&lt;&lt;N];<br> <br>class KiwiJuice <br>{<br>  public:<br>  int theProfit(int C, vector &lt;int&gt; bottles, vector &lt;int&gt; prices) {<br>    /* Tu bedzie start pisania */<br>    int n = SIZE(bottles);<br>    int ile = 1&lt;&lt;n;<br>    FOR(mask,1,ile-1){<br>      int suma = 0, butle = 0;<br>      REP(i,n) if ((1&lt;&lt;i) &amp; mask){<br>        butle++;<br>        suma += bottles[i];<br>      }<br>      int pelne = suma / C;<br>      ruch[mask] += prices.back() * pelne;<br>      suma %= C;<br>      butle -= pelne;<br>      if (butle &gt; 0){<br>        ruch[mask] += (butle-1) * prices[0];<br>        ruch[mask] += prices[suma];<br>      }<br>    }<br> <br>    FOR(mask,1,ile-1){<br>      int zbior = mask;<br>      do {<br>        zbior &amp;= mask;<br>        if (zbior == 0) break;<br>        t[mask] = max(t[mask], ruch[zbior] + t[mask^zbior]);<br>      } while (--zbior &gt;= 0);<br>    }<br>    return t[ile-1];<br>  }<br>  <br> <br>};<br> <br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>