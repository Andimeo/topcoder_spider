<td class="problemText" colspan="8" valign="middle" align="left">
            import static java.lang.Math.*;<br>import static java.math.BigInteger.*;<br>import static java.util.Arrays.*;<br>import static java.util.Collections.*;<br>import java.math.*;<br>import java.util.*;<br><br>public class KiwiJuice {<br>  public int theProfit(int C, int[] bottles, int[] prices) {<br>    int n = bottles.length;<br>    int[] sum = new int[1 &lt;&lt; n];<br>    int[] num = new int[1 &lt;&lt; n];<br>    for (int i = 0; i &lt; n; i++) sum[1 &lt;&lt; i] = bottles[i];<br>    for (int i = 1; i &lt; 1 &lt;&lt; n; i++) {<br>      int j;<br>      for (j = 0; j &lt; n; j++) if ((i &gt;&gt; j &amp; 1) != 0) {<br>        break;<br>      }<br>      sum[i] = sum[i ^ 1 &lt;&lt; j] + bottles[j];<br>      num[i] = num[i ^ 1 &lt;&lt; j] + 1;<br>    }<br>    int[] dp = new int[1 &lt;&lt; n];<br>    for (int i = 0; i &lt; 1 &lt;&lt; n; i++) {<br>      int j = i;<br>      int v = 0;<br>      do {<br>        int nC = sum[j] / C, n0 = num[j] - nC - 1;<br>        int t = dp[i ^ j] + prices[C] * nC + prices[sum[j] % C] + prices[0] * n0;<br>        if (v &lt; t) v = t;<br>        j = (j - 1) &amp; i;<br>      } while (j != i);<br>      dp[i] = v;<br>    }<br>    return dp[(1 &lt;&lt; n) - 1];<br>  }<br>  void debug(Object...os) {<br>    System.err.println(deepToString(os));<br>  }<br>}<br></td>