<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br><br>using namespace std;<br><br>#define SIZE(X) ((int)(X.size()))<br>#define LENGTH(X) ((int)(X.length()))<br>typedef long long int64;<br><br>class RandomApple<br>{<br>public:<br>  int n,m,a[50][50],s[50];<br>  int cf,cg;<br>  int64 f[500000],g[500000];<br>  void expand(int64 f[],int &amp;cf,int d)<br>  {<br>    for (int i=cf+1;i&lt;=cf+d;i++)<br>      f[i]=(i-d&lt;0)?0:f[i-d];<br>    for (int i=cf;i&gt;=d;i--)<br>      f[i]+=f[i-d];<br>    cf+=d;<br>  }<br>  vector &lt;double&gt; theProbability(vector &lt;string&gt; v1, vector &lt;string&gt; v2, vector &lt;string&gt; v3)<br>  {<br>    n=SIZE(v1);<br>    m=LENGTH(v1[0]);<br>    for (int i=0;i&lt;n;i++)<br>    {<br>      s[i]=0;<br>      for (int j=0;j&lt;m;j++)<br>      {<br>        a[i][j]=(v1[i][j]-'0')*100+(v2[i][j]-'0')*10+(v3[i][j]-'0');<br>        s[i]+=a[i][j];<br>      }<br>    }<br>    double R[50];<br>    memset(R,0,sizeof(R));<br>    cf=0;<br>    f[0]=1;<br>    for (int i=0;i&lt;n;i++)<br>    {<br>//      printf("%d %d\n",i,cf);<br>      cg=cf;<br>      memcpy(g,f,(cg+1)*sizeof(int64));<br>      for (int j=i+1;j&lt;n;j++)<br>        expand(g,cg,s[j]);<br>      for (int k=0;k&lt;=cg;k++)<br>        R[i]+=(double)g[k]/(double)(k+s[i]);<br>//        for (int j=0;j&lt;m;j++)<br>  //        R[j]+=(double)g[k]*(double)a[i][j]/(double)(k+s[i]);<br>      expand(f,cf,s[i]);<br>    }<br>    double R2[50];<br>    memset(R2,0,sizeof(R2));<br>    for (int i=0;i&lt;n;i++)<br>      for (int j=0;j&lt;m;j++)<br>        R2[j]+=R[i]*(double)a[i][j];<br>    vector&lt;double&gt; result;<br>    double total=(pow(2.0,n)-1.0);<br>    for (int i=0;i&lt;m;i++)<br>      result.push_back(R2[i]/total);<br>    return result;<br>  }<br>};<br></td>