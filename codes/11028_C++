<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;iostream&gt;<br>#include &lt;vector&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;ctime&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cassert&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;complex&gt;<br>#include &lt;queue&gt;<br>#include &lt;functional&gt;<br> <br>using namespace std;<br> <br>#define forn(i, n) for(int i = 0; i &lt; (int)(n); i++)<br>#define ford(i, n) for(int i = (int)(n) - 1; i &gt;= 0; i--)<br>#define pb push_back<br>#define mp make_pair<br>#define fs first<br>#define sc second<br>#define last(a) int(a.size() - 1)<br>#define all(a) a.begin(), a.end()<br>#define seta(a,x) memset (a, x, sizeof (a))<br>#define I (int)<br> <br>typedef long long int64;<br>typedef pair &lt;int, int&gt; pii;<br>typedef long double ldb;<br> <br>const int inf = (1 &lt;&lt; 30) - 1;<br>const ldb eps = 1e-9;<br> <br>template &lt;class T&gt; T sqr (T x) {return x * x;}<br> <br>class TheCoffeeTimeDivOne {<br>public:<br>  long long find(int, vector &lt;int&gt;);<br>};<br> <br>bool u[50000000];<br> <br>long long TheCoffeeTimeDivOne::find(int n, vector &lt;int&gt; tea) {<br>  seta (u, 0);<br>  forn (i, tea.size())<br>    u[tea[i]] = 1;<br>  int64 res = 0;<br>  int count = 0;<br>  for (int i = n; i &gt;= 1; i --)<br>    if (u[i])<br>    {<br>      if (count == 0)<br>      {<br>        res += 47;<br>        res += i * 2;<br>        count = 7;<br>      }<br>      count --;<br>      res += 4;<br>    }<br>  count = 0;<br>  for (int i = n; i &gt;= 1; i --)<br>    if (!u[i])<br>    {<br>      if (count == 0)<br>      {<br>        res += 47;<br>        res += i * 2;<br>        count = 7;<br>      }<br>      count --;<br>      res += 4;<br>    }<br>  return res;<br>}<br></td>