<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;utility&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;functional&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;numeric&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>using namespace std;<br><br>#define FOR(i,a,b)  for(int i=(a);i&lt;(b);++i)<br>#define F(i,a)      FOR(i,0,a)<br>#define ALL(x)      x.begin(),x.end()<br>#define PB          push_back<br>#define S           size()<br><br>int busca(vector&lt;int&gt; v,int n)<br>{<br>    int pos=-1;<br>        for(int k=0;k&lt;n;k++)<br>        if(v[k]==0)pos=k;<br><br>       return pos;<br>}<br><br>class TheCoffeeTimeDivTwo<br>        {<br>        public: <br>        int find(int n, vector &lt;int&gt; tea) <br>            {<br>    int ban,sum=0,z=0;<br>        <br>        vector&lt;int&gt;v(n,0);<br>        <br>        sort(ALL(tea));<br>        <br>        int pos=busca(v,n);<br>        <br>        if (binary_search (tea.begin(), tea.end(), pos+1))ban=0;<br>        else ban=1;<br>        <br>        if(tea[tea.size()-1]==n)ban=0;<br><br>        while(1)<br>        {<br><br>        sum+=47;<br>        <br>        sum+=n;<br>        <br>        int cup=7;<br><br>        for(int c=n-1;c&gt;=0;c--)<br>        {<br><br>        if(ban==0)<br>        {<br>        if (binary_search (tea.begin(), tea.end(), c+1)){v[c]=1;cup--;sum+=4;}<br>        }<br><br>        if(ban==1)<br>        {<br>        if (binary_search (tea.begin(), tea.end(), c+1))z++;<br>        else {v[c]=1;cup--;sum+=4;}<br>        }<br><br>        if(cup==0){sum+=(c+1);break;}<br>        sum++;<br>        }<br>        <br>    pos=busca(v,n);<br>        <br>        if (binary_search (tea.begin(), tea.end(), pos+1))ban=0;<br>        else ban=1;<br><br>        n=pos+1;<br>        <br>        if(pos==-1)break;<br><br>        }<br><br>        return sum;<br>            <br>            }<br>        <br><br>        };<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>