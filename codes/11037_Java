<td class="problemText" colspan="8" valign="middle" align="left">
            public class Bribes {<br><br>  public int minBribes(int pow[], int rest[]) {<br><br>    int n = pow.length;<br>    int max = 1 &lt;&lt; 17;<br>    int key = 1 &lt;&lt; 16;<br><br>    int dp[][] = new int[n+1][max];<br>    for(int i=1; i&lt;=n; ++i) {<br>      for(int j=0; j&lt;max; ++j) {<br>        dp[i][j] = -1;<br>      }<br>    }<br><br>    for(int i=0; i&lt;n; ++i) {<br>      for(int j=0; j&lt;max; ++j) {<br>        if( dp[i][j] == -1 ) { continue; }<br>        int sum = 0;<br>        for(int k=0; k&lt;17; ++k) {<br>          if( (j &amp; (1 &lt;&lt; k)) != 0 ) {<br>            int index = i + (k - 8);<br>            if( index &lt; 0 || index &gt;= n ) { continue; }<br>            sum += (pow[index] &gt;&gt; Math.abs(k - 8));<br>          }<br>        }<br>        if( sum &lt; rest[i] ) { continue; }<br>        int next = j &gt;&gt; 1;<br>        int add = (j &amp; 1);<br>        if( dp[i+1][next] == -1 ) {<br>          dp[i+1][next] = dp[i][j] + add;<br>        }<br>        else {<br>          dp[i+1][next] = Math.min(dp[i+1][next], dp[i][j] + add);<br>        }<br>        next |= key;<br>        if( dp[i+1][next] == -1 ) {<br>          dp[i+1][next] = dp[i][j] + add;<br>        }<br>        else {<br>          dp[i+1][next] = Math.min(dp[i+1][next], dp[i][j] + add);<br>        }<br>      }<br>    }<br><br>    int ret = -1;<br><br>    for(int i=0; i&lt;max; ++i) {<br>      if( dp[n][i] &gt;= 0 ) {<br>        int add = Integer.bitCount(i);<br>        if( ret == -1 ) { ret = dp[n][i] + add; }<br>        else { ret = Math.min(ret, dp[n][i] + add); }<br>      }<br>    }<br><br>    return ret;<br><br>  }<br><br>}<br></td>