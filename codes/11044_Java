<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class EnclosingSquare {<br>  int[] primes;<br>  int lenprimes;<br>  boolean is_good(long x) {<br>    if(x%4==0) return false;<br>    while (x%2==0) x/=2;<br>    for(int p:primes) {<br>      if(((long) p) * p &gt; x) break;<br>      if(x%p!=0) continue;<br>      int cnt = 0;<br>      while(x%p==0) {<br>        x /= p;<br>        cnt ++;<br>      }<br>      if(p%4==1) continue;<br>      return false;<br>    }<br>    if(x%4==1) return true;<br>    return false;<br>  }<br>  public long getMinimum(long n) {<br>    boolean[] is_prime = new boolean[2000000];<br>    Arrays.fill(is_prime, true);<br>    is_prime[0] = false;<br>    is_prime[1] = false;<br>    <br>    for(int i = 2; i&lt;2000; i++) {<br>      if(is_prime[i]) {<br>        for(int k = i*i; k&lt;2000000; k+=i) {<br>          is_prime[k] = false;<br>        }<br>      }<br>    }<br>    primes = new int[148933];<br>    int cnt = 0;<br>    for(int i = 0; i&lt;2000000; i++) {<br>      if(is_prime[i]) {<br>        primes[cnt] = i;<br>        cnt++;<br>      }<br>    }<br>    lenprimes = cnt;<br>    System.out.println(lenprimes);<br>    <br>    for(int a = 1; a&lt;=1000001; a++) {<br>      long x = n-1+2*a;<br>      long A = a;<br>      //if(x&lt;A*A) break;<br>      if(x%(A*A)!=0) continue;<br>      //System.out.println(x + " " + a);<br>      if(is_good(x/A/A)) return x;<br>    }<br>    return 0;<br>  }<br>}<br> <br>// Powered by PopsEdit<br></td>