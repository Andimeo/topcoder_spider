<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;vector&gt;<br>#include&lt;string&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;cmath&gt;<br>#include&lt;utility&gt;<br>#include&lt;set&gt;<br>#include&lt;queue&gt;<br>#include&lt;map&gt;<br>#include&lt;cstdlib&gt;<br>#include&lt;cstdio&gt;<br>#include&lt;cstring&gt;<br>#include&lt;iostream&gt;<br>#include&lt;sstream&gt;<br>#include&lt;climits&gt;<br>#include&lt;sys/time.h&gt;<br>using namespace std;<br><br>#define REP(i,a,b) for(i=a;i&lt;b;i++)<br>#define rep(i,n) REP(i,0,n)<br><br>class RabbitWorking {<br>public:<br>double getMaximum(vector &lt;string&gt; in) {<br>  int i,j,k,l,m,n,mn,mx;<br>  double res, tmp;<br><br>  n = in.size();<br>  rep(i,n) rep(j,n) in[i][j] -= '0';<br><br>  k = 0;<br>  rep(i,n) REP(j,i+1,n) k += in[i][j];<br>  res = k / (double)(n*(200-n));<br><br>  rep(i,n) REP(j,i+1,n){<br>    m = 0;<br>    m += in[i][j];<br>    tmp = m / (double)(2*(200-2));<br>    if(res &lt; tmp) res = tmp;<br>  }<br><br>  rep(i,n) REP(j,i+1,n) REP(k,j+1,n){<br>    m = 0;<br>    m += in[i][j];<br>    m += in[i][k];<br>    m += in[j][k];<br>    tmp = m / (double)(3*(200-3));<br>    if(res &lt; tmp) res = tmp;<br>  }<br><br>  rep(i,n) REP(j,i+1,n) REP(k,j+1,n) REP(l,k+1,n){<br>    m = 0;<br>    m += in[i][j];<br>    m += in[i][k];<br>    m += in[i][l];<br>    m += in[j][k];<br>    m += in[j][l];<br>    m += in[k][l];<br>    tmp = m / (double)(4*(200-4));<br>    if(res &lt; tmp) res = tmp;<br>  }<br><br>  while(n&gt;1){<br>    mx = 1000000000;<br>    rep(i,n){<br>      k = 0;<br>      rep(j,n) k += in[i][j];<br>      if(k &lt; mx) mx = k, l = i;<br>    }<br>    rep(i,n) in[i].erase(in[i].begin() + l);<br>    in.erase(in.begin() + l);<br>    n--;<br><br>    k = 0;<br>    rep(i,n) REP(j,i+1,n) k += in[i][j];<br>    tmp = k / (double)(n*(200-n));<br>    if(res &lt; tmp) res = tmp;<br>  }<br><br>  return res;<br>}<br><br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>