<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.Arrays;<br><br>public class TimeTravellingGardener {<br>  public int determineUsage(int[] distance, int[] height) {<br>    <br>    int n = height.length;<br>    int[] x = new int[n];<br>    for(int i = 1;i &lt; n;i++){<br>      x[i] = x[i-1] + distance[i-1];<br>    }<br>    int[] y = height;<br>    <br>    int min = 99999;<br>    for(int i = 0;i &lt; n;i++){<br>      outer:<br>      for(int j = i + 1;j &lt; n;j++){<br>        int ct = 0;<br>        for(int k = 0;k &lt; n;k++){<br>          if(k != i){<br>            if((-y[i])*(x[j]-x[i])-(y[j]-y[i])*(x[k]-x[i]) &gt; 0){<br>              continue outer;<br>            }<br>            <br>            int d = (y[k]-y[i])*(x[j]-x[i])-(y[j]-y[i])*(x[k]-x[i]);<br>            if(d &gt; 0){<br>              ct++;<br>            }<br>            if(d &lt; 0){<br>              continue outer;<br>            }<br>          }<br>        }<br>        min = Math.min(min, ct);<br>      }<br>    }<br>    <br>    return min == 99999 ? n - 1 : min;<br>  }<br><br>  void tr(Object... o) { System.out.println(o.length &gt; 1 || o[0].getClass().isArray() ? Arrays.deepToString(o) : o[0]); }<br>}<br></td>