<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;deque&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;utility&gt;<br>#include &lt;functional&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;ctime&gt;<br><br>using namespace std;<br><br>#define REP(i,n) for((i)=0;(i)&lt;(int)(n);(i)++)<br>#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)<br><br>typedef long long ll;<br>#define MOD 1000000009ll<br><br>#define INF (1&lt;&lt;29)<br><br>ll f[10000],inv[10000],finv[10000];<br>int bmax[2000][2000]; // r, g<br>int Csum[4000][2000];<br>int rsum[50][50],gsum[50][50],bsum[50][50];<br><br>class ColorfulJewelry {<br>  public:<br>  <br>  ll C(int x, int y){<br>    return f[x+y] * finv[x] % MOD * finv[y] % MOD;<br>  }<br>  <br>  ll func(int r, int g, int bmax){<br>    ll all = Csum[r+g][bmax] * C(r,g) % MOD;<br>    ll sym = 0;<br>    if(r%2 == 0 &amp;&amp; g%2 == 0){<br>      sym = (Csum[r/2+g/2][bmax/2] * C(r/2,g/2)) % MOD;<br>      if(bmax &gt; 0) sym = (sym + Csum[r/2+g/2][(bmax-1)/2] * C(r/2,g/2)) % MOD;<br>    }<br>    if(r%2 == 1 &amp;&amp; g%2 == 0) sym = (Csum[r/2+g/2][bmax/2] * C(r/2,g/2)) % MOD;<br>    if(r%2 == 0 &amp;&amp; g%2 == 1) sym = (Csum[r/2+g/2][bmax/2] * C(r/2,g/2)) % MOD;<br>      <br>    return (all + sym) % MOD * inv[2] % MOD;<br>  }<br>  <br>  int getR(int ax, int ay, int bx, int by){<br>    return rsum[ax][ay] + rsum[bx][by] - rsum[ax][by] - rsum[bx][ay];<br>  }<br>  <br>  int getG(int ax, int ay, int bx, int by){<br>    return gsum[ax][ay] + gsum[bx][by] - gsum[ax][by] - gsum[bx][ay];<br>  }<br>  <br>  int getB(int ax, int ay, int bx, int by){<br>    return bsum[ax][ay] + bsum[bx][by] - bsum[ax][by] - bsum[bx][ay];<br>  }<br><br>  int getChains(vector &lt;string&gt; jewels, int K) {<br>    int i,j;<br>    <br>    inv[1] = 1;<br>    for(i=2;i&lt;10000;i++) inv[i] = (MOD - (MOD/i) * inv[(int)(MOD%i)] % MOD) % MOD;<br>    f[0] = finv[0] = 1;<br>    for(i=1;i&lt;10000;i++) {f[i] = f[i-1] * i % MOD; finv[i] = finv[i-1] * inv[i] % MOD;}<br>    <br>    REP(i,2000) REP(j,2000) bmax[i][j] = -INF;<br>    int H = jewels.size(), W = jewels[0].length(), h = min(H,K), w = min(W,K);<br>    <br>    REP(i,H) REP(j,W){<br>      rsum[i+1][j+1] = rsum[i+1][j] + rsum[i][j+1] - rsum[i][j] + ((jewels[i][j] == 'R') ? 1 : 0);<br>      gsum[i+1][j+1] = gsum[i+1][j] + gsum[i][j+1] - gsum[i][j] + ((jewels[i][j] == 'G') ? 1 : 0);<br>      bsum[i+1][j+1] = bsum[i+1][j] + bsum[i][j+1] - bsum[i][j] + ((jewels[i][j] == 'B') ? 1 : 0);<br>    }<br>    <br>    int ax,ay,bx,by;<br>    REP(ax,H-h+1) REP(ay,W-w+1) REP(bx,H-h+1) REP(by,W-w+1) if(ax &lt;= bx){<br>      int r = getR(ax,ay,ax+h,ay+w) + getR(bx,by,bx+h,by+w);<br>      int g = getG(ax,ay,ax+h,ay+w) + getG(bx,by,bx+h,by+w);<br>      int b = getB(ax,ay,ax+h,ay+w) + getB(bx,by,bx+h,by+w);<br>      int cx = max(ax,bx), cy = max(ay,by), dx = min(ax,bx) + h, dy = min(ay,by) + w;<br>      if(cx &lt; dx &amp;&amp; cy &lt; dy){<br>        r -= getR(cx,cy,dx,dy);<br>        g -= getG(cx,cy,dx,dy);<br>        b -= getB(cx,cy,dx,dy);<br>      }<br>      bmax[r][g] = max(bmax[r][g],b);<br>    }<br>    <br>    for(i=1999;i&gt;=0;i--) for(j=1999;j&gt;=0;j--){<br>      if(i &lt; 1999) bmax[i][j] = max(bmax[i][j],bmax[i+1][j]);<br>      if(j &lt; 1999) bmax[i][j] = max(bmax[i][j],bmax[i][j+1]);<br>    }<br>    <br>    REP(i,4000){<br>      ll tmp = 0;<br>      REP(j,2000){<br>        tmp = (tmp + C(i,j)) % MOD;<br>        Csum[i][j] = (int)tmp;<br>      }<br>    }<br>    <br>    ll ans = 0;<br>    REP(i,2000) REP(j,2000) if(bmax[i][j] != -INF) ans = (ans + func(i,j,bmax[i][j])) % MOD;<br>    ans = (ans + MOD - 1) % MOD;<br>    return (int)ans;<br>  }<br><br>};<br><br><br>// Powered by FileEdit<br></td>