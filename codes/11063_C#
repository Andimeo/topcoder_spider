<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class KingdomXCitiesandVillages {<br>    public double determineLength(int[] cityX, int[] cityY, int[] villageX, int[] villageY)<br>    {<br>        int i, j, k;<br>        int vlen = villageX.Length;<br>        int clen = cityX.Length;<br>        double res = 0;<br>        for (i = 0; i &lt; vlen; i++)<br>        {<br>            double p = 1;<br>            bool[] vuse = new bool[vlen];<br>            vuse[i] = true;<br>            for (k = 0; ; k++)<br>            {<br>                int bestc = -1;<br>                double bestdis = double.MaxValue;<br>                int bestnum = -1;<br>                for (j = 0; j &lt; clen; j++)<br>                {<br>                    double dis = Math.Sqrt(Math.Pow(cityX[j] - villageX[i], 2) + Math.Pow(cityY[j] - villageY[i], 2));<br>                    if (dis &lt; bestdis)<br>                    {<br>                        bestc = 0;<br>                        bestdis = dis;<br>                        bestnum = i;<br>                    }<br>                }<br>                for (j = 0; j &lt; vlen; j++)<br>                {<br>                    if (vuse[j]) continue;<br>                    double dis = Math.Sqrt(Math.Pow(villageX[j] - villageX[i], 2) + Math.Pow(villageY[j] - villageY[i], 2));<br>                    if (dis &lt; bestdis)<br>                    {<br>                        bestc = 1;<br>                        bestdis = dis;<br>                        bestnum = j;<br>                    }<br>                }<br>                if (bestc == 0)<br>                {<br>                    res += p * bestdis;<br>                    break;<br>                }<br>                else<br>                {<br>                    vuse[bestnum] = true;<br>                    res += (p / (2.0 + k)) * bestdis;<br>                    p -= p / (2.0 + k);<br>                    continue;<br>                }<br>            }<br>        }<br>        return res;<br>    }<br><br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>