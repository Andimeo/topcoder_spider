<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;utility&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br><br>using namespace std;<br><br>#define REP(i,n) for((i)=0;(i)&lt;(int)(n);(i)++)<br><br>typedef long long ll;<br><br>class KingdomXCitiesandVillages{<br>  public:<br><br>  double determineLength(vector &lt;int&gt; cityX, vector &lt;int&gt; cityY, vector &lt;int&gt; villageX, vector &lt;int&gt; villageY){<br>    int i,j;<br>    <br>    double ans = 0.0;<br>    REP(i,villageX.size()){<br>      int x = villageX[i], y = villageY[i];<br>      <br>      vector &lt;pair &lt;ll, int&gt; &gt; p; // dist, type<br>      REP(j,cityX.size()){<br>        int dx = cityX[j] - x;<br>        int dy = cityY[j] - y;<br>        ll d = (ll)dx * (ll)dx + (ll)dy * (ll)dy;<br>        p.push_back(make_pair(d,0));<br>      }<br>      REP(j,villageX.size()) if(j != i){<br>        int dx = villageX[j] - x;<br>        int dy = villageY[j] - y;<br>        ll d = (ll)dx * (ll)dx + (ll)dy * (ll)dy;<br>        p.push_back(make_pair(d,1));<br>      }<br>      <br>      sort(p.begin(),p.end());<br>      <br>      int cnt = 0;<br>      REP(j,p.size()){<br>        double d = sqrt((double)(p[j].first));<br>        if(p[j].second == 0){<br>          ans += 1.0 / (cnt + 1.0) * d;<br>          break;<br>        } else {<br>          ans += 1.0 / (cnt + 1.0) / (cnt + 2.0) * d;<br>          cnt++;<br>        }<br>      }<br>    }<br>    <br>    return ans;<br>  }<br><br>};<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>