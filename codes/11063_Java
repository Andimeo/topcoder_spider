<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.Arrays;<br><br>/**<br> * Generated by Contest helper plug-in<br> * Actual solution is at the bottom<br> */<br>public class KingdomXCitiesandVillages {<br>  public double determineLength(int[] cityX, int[] cityY, int[] villageX, int[] villageY) {<br>    int villageCount = villageX.length;<br>    int cityCount = cityX.length;<br>    double result = 0;<br>    for (int i = 0; i &lt; villageCount; i++) {<br>      double minCityDistance = Double.POSITIVE_INFINITY;<br>      for (int j = 0; j &lt; cityCount; j++)<br>        minCityDistance = Math.min(minCityDistance, Math.hypot(cityX[j] - villageX[i], cityY[j] - villageY[i]));<br>      double probability = 1;<br>      double[] villageDistances = new double[villageCount];<br>      for (int j = 0; j &lt; villageCount; j++) {<br>        if (j == i)<br>          villageDistances[j] = Double.POSITIVE_INFINITY;<br>        else<br>          villageDistances[j] = Math.hypot(villageX[j] - villageX[i], villageY[j] - villageY[i]);<br>      }<br>      Arrays.sort(villageDistances);<br>      for (int j = 0; j &lt; villageCount; j++) {<br>        if (villageDistances[j] &gt; minCityDistance) {<br>          result += probability * minCityDistance;<br>          break;<br>        }<br>        double currentProbability = probability / (j + 2);<br>        result += currentProbability * villageDistances[j];<br>        probability -= currentProbability;<br>      }<br>    }<br>    return result;<br>  }<br><br><br>}<br><br><br><br><br>// Powered by FileEdit<br>// Powered by moj 4.15 [modified TZTester]<br>// Powered by CodeProcessor<br></td>