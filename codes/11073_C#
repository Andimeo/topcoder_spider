<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br><br>public class BestApproximationDiv2 <br>{<br>    int Quality(string number, int up, int down)<br>    {<br>        int res = 1;<br><br>        int cur = 2;<br>        while (true)<br>        {<br>            if ((10 * up) / down == number[cur] - '0')<br>                res++;<br>            else<br>                break;<br><br>            cur++;<br>            if (cur == number.Length) break;<br>            up *= 10;<br>            up %= down;<br>        }<br><br>        return res;<br>    }<br>    <br>    public string findFraction(int maxDen, string number)<br>  {<br>        string now = "";<br>        int nowQuality = 0;<br>        string toDouble = "";<br><br>        for (int i = 0; i &lt; 14 &amp;&amp; i &lt; number.Length; i++)<br>        {<br>            toDouble += number[i];<br>        }<br>        double num = Convert.ToDouble(toDouble);<br><br>        for (int i = 1; i &lt;= maxDen; i++)<br>        {<br>            int left = 0, right = i;<br>            while (right - left &gt; 2)<br>            {<br>                int avg = (right + left) / 2;<br>                double avgVal = (double)avg / i;<br>                if (avgVal &gt; num) right = avg;<br>                else left = avg;<br>            }<br>            left -= 2;<br>            right += 2;<br>            if (left &lt; 0) left = 0;<br>            if (right &gt; i) right = i;<br><br>            for (int k = left; k &lt;= right; k++)<br>            {<br>                int abcd = Quality(number, k, i);<br>                if (abcd &gt; nowQuality)<br>                {<br>                    nowQuality = abcd;<br>                    now = k.ToString() + '/' + i.ToString();<br>                }<br>            }<br>        }<br><br>        return now + " has " + nowQuality.ToString() + " exact digits";<br>  }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>