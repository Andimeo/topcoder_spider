<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt; <br>#include &lt;list&gt; <br>#include &lt;map&gt; <br>#include &lt;set&gt; <br>#include &lt;deque&gt; <br>#include &lt;stack&gt; <br>#include &lt;bitset&gt; <br>#include &lt;algorithm&gt; <br>#include &lt;functional&gt; <br>#include &lt;numeric&gt; <br>#include &lt;utility&gt; <br>#include &lt;sstream&gt; <br>#include &lt;iostream&gt; <br>#include &lt;iomanip&gt; <br>#include &lt;cstdio&gt; <br>#include &lt;cmath&gt; <br>#include &lt;cstdlib&gt; <br>#include &lt;ctime&gt; <br>#include &lt;queue&gt; <br>#include &lt;cstring&gt; <br>using namespace std; <br>char str[100000];<br>class BestApproximationDiv2 {<br>  public:<br>    string findFraction(int maxDen, string number) {<br>      int rA = -1, rB = -1, rF = -1, len = (int)number.length()-2;<br>      for (int i = 1 ; i &lt;= maxDen; ++i){<br>        int L = 0, R = i-1;<br>        while (L &lt;= R){<br>          int M = (L+R)/2;<br>          string s = "0.";  <br>          int A = M, B = i;<br>          int diff = 0;<br>          int F = 0;<br>          for (int j = 0 ; j &lt; len; ++j){<br>            A *= 10;<br>            int D = A/B;<br>            A -= D*B;<br>            if (!diff &amp;&amp; number[j+2] == '0'+D) ++F;<br>            if (!diff) if (number[j+2] &gt; '0'+D) diff = -1;<br>            else if (number[j+2] &lt; '0'+D) diff = 1;<br>            //s = s + char(D+'0');<br>          }<br>          //for (int j = 2; j &lt; len+2 &amp;&amp; s[j]==number[j]; ++j, ++F);<br>          if (F &gt; rF){<br>            //printf("%s --&gt; %s\n", number.c_str(), s.c_str());<br>            rF = F;<br>            rA = M, rB = i;<br>          }<br>          if (!diff) break;<br>          if (diff &gt; 0){<br>            R = M-1;<br>          }else{<br>            L = M+1;<br>          }<br>        }<br>      }<br>      memset(str, 0, sizeof(str));<br>      sprintf(str, "%d/%d has %d exact digits", rA, rB, rF+1);<br>      return string(str);<br>    }<br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.16 [modified TZTester]<br>// Powered by CodeProcessor<br></td>