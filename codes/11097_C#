<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class TheJackpotDivOne<br>{<br>  public long[] find(long[] money, long jackpot)<br>  {<br>        int n = money.Length;<br>        decimal[] m = new decimal[n];<br>        decimal jp = jackpot;<br>        decimal sum = 0;<br><br>        for (int i = 0; i &lt; money.Length; i++)<br>        {<br>            m[i] = money[i];<br>            sum += m[i];<br>        }<br><br>        while (jp &gt; 0)<br>        {<br>            bool ok = true;<br>            for (int i = 0; ok &amp;&amp; i &lt; n - 1; i++)<br>                if (m[i] != m[i + 1])<br>                    ok = false;<br>            if (ok)<br>            {<br>                //Console.WriteLine("check");<br>                break;<br>            }<br><br>            int idx = 0;<br>            for(int i = 1; i &lt; n; i++)<br>                if(m[idx] &gt;= m[i])<br>                    idx = i;<br><br>            decimal x = Math.Min(jp, Math.Floor(sum / n) - m[idx] + 1);<br>            sum += x;<br>            m[idx] += x;<br>            jp -= x;<br>        }<br><br>        Array.Sort(m);<br><br>        for (int i = 0; i &lt; n; i++)<br>            m[i] += Math.Floor(jp/n);<br><br>        for (int i = 0; i &lt; jp % n; i++)<br>            m[n - 1 - i]++;<br><br>        for (int i = 0; i &lt; n; i++)<br>            money[i] = (long)m[i];<br><br>        return money;<br>  }<br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>