<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cmath&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cassert&gt;<br> <br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;functional&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br> <br>using namespace std;<br> <br>#define forn(i, n) for (int i = 0; i &lt; (int)(n); i++)<br>#define forab(a, b, n) for (int i = (int)(a); i &lt; (int)(b); i++)<br>#define forit(i, a) for (__typeof((a).begin()) i = (a).begin(); i != (a).end(); i++)<br>#define sz(a) (int)(a).size()<br>#define all(a) (a).begin(), (a).end()<br>#define zero(a) memset(a, 0, sizeof(a))<br>#define pb push_back<br>#define mp make_pair<br> <br>typedef double dbl;<br>typedef long long ll;<br>typedef vector &lt;int&gt; vi;<br>typedef pair &lt;int, int&gt; pii;<br> <br>const int maxn = 16;<br>const int inf = (int)1e9;<br> <br>int n, f[1 &lt;&lt; maxn][maxn][2];<br>vi d, a, b;<br> <br>int D[maxn][maxn];<br> <br>int Go( int L, int R, int pr, int side )<br>{<br>  if ((pr == (1 &lt;&lt; n) - 1))<br>    return 0;<br> <br>  int &amp;res = f[pr][L][side];<br>  if (res != -1)<br>    return res;<br>  res = inf;<br>  int x = side ? R : L;<br>  if (L &gt; 0)<br>  {<br>    int dist = D[x][L - 1];<br>    forn(j, n)   <br>      if (!((pr &gt;&gt; j) &amp; 1))<br>        res = min(res, dist + max(Go(L - 1, R, pr | (1 &lt;&lt; j), 0), abs(a[L - 1] - b[j])));<br>  }<br>  if (R + 1 &lt; n)<br>  {<br>    int dist = D[x][R + 1];<br>    forn(j, n)<br>      if (!((pr &gt;&gt; j) &amp; 1))<br>        res = min(res, dist + max(Go(L, R + 1, pr | (1 &lt;&lt; j), 1), abs(a[R + 1] - b[j])));<br>  }<br>//  fprintf(stderr, "Go(L=%d,R=%d,pr=%d,side=%d) = %d\n", L, R, pr, side, res);<br>  return res;<br>}<br> <br>int GetDist1( int a, int b )<br>{<br>  if (a &gt; b)<br>    swap(a, b);<br> <br>  int sum = 0;<br>  while (a &lt; b)<br>    sum += d[a++];<br>  return sum;<br>}<br> <br>struct TicketPrinters<br>{<br>  int minTime( int st, vector &lt;int&gt; _d, vector &lt;int&gt; _a, vector &lt;int&gt; _b )<br>  {<br>    d = _d, a = _a, b = _b;<br>  memset(f, -1, sizeof(f));<br>    n = sz(a);<br> <br>  forn(i, n)<br>    forn(j, n)<br>      D[i][j] = GetDist1(i, j);<br>  <br>  int res = inf;<br>  forn(i, n)<br>    res = min(res, max(Go(st, st, 1 &lt;&lt; i, 0), abs(a[st] - b[i])));<br>  return 1 + res;<br>  }<br>};<br></td>