<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class PermutationSignature {<br>public:<br>  vector &lt;int&gt; reconstruct(string);<br>};<br> <br>vector &lt;int&gt; PermutationSignature::reconstruct(string a) {<br>  vector&lt; int &gt; ret;<br>  int add = 1, last = 0, i, j;<br>  for ( i = 0; i &lt; a.length(); i ++ )<br>    if ( a[i] == 'I' ){<br>      for ( j = last; j &lt;= i; j ++ )<br>        ret.push_back( add - ( j - last ) );<br>      last = i+1;<br>      add ++;<br>    }<br>    else<br>      add ++;<br>      for ( j = last; j &lt;= i; j ++ )<br>        ret.push_back( add - ( j - last ) );<br>      last = i+1;<br>      add ++;<br>  return ret;<br>}<br> <br>//<br>//Powered by [KawigiEdit] 2.0!<br></td>