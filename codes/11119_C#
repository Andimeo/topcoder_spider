<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class BatchSystemRoulette<br>{<br>  public double[] expectedFinishTimes(int[] d, string[] u)<br>  {<br>    int n = d.Length;<br>    double[] ret = new double[n];<br>    Dictionary&lt;String, long&gt; dict = new Dictionary&lt;String, long&gt;();<br>    Dictionary&lt;String, int&gt; dc = new Dictionary&lt;String, int&gt;();<br>    for(int i=0; i&lt;n; i++)<br>    {<br>      if(!dict.ContainsKey(u[i]))<br>      {<br>        dict[u[i]] = 0;<br>        dc[u[i]] = 0;<br>      }<br>      dict[u[i]] += d[i];<br>      dc[u[i]] += 1;<br>    }<br>    Dictionary&lt;String, long&gt; dl = new Dictionary&lt;String, long&gt;();<br>    Dictionary&lt;String, int&gt; dec = new Dictionary&lt;String, int&gt;();<br>    foreach(KeyValuePair&lt;String, long&gt; p in dict)<br>    {<br>      dl[p.Key] = 0;<br>      dec[p.Key] = 0;<br>      foreach(KeyValuePair&lt;String, long&gt; q in dict)<br>      {<br>        if(q.Value &lt; p.Value)<br>        {<br>          dl[p.Key] += q.Value;<br>        }<br>        else if(q.Value == p.Value)<br>        {<br>          dec[p.Key] ++;<br>        }<br>      }<br>    }<br>    for(int i=0; i&lt;n; i++)<br>    {<br>      long td = dict[u[i]];<br>      int tc = dc[u[i]];<br>      ret[i] = dl[u[i]] + (dec[u[i]] - 1) / 2.0 * td;<br>      ret[i] += td / 2.0 + d[i] / 2.0;<br>    }<br>    return ret;<br>  }<br> <br> <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>