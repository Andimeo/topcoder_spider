<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define forn(i,n) for(int i=0;i&lt;(int)(n);i++)<br>#define dforn(i,n) for(int i = (int)(n)-1;i&gt;=0;i--)<br>#define all(v) v.begin(),v.end()<br> <br>typedef long long tint;<br> <br>class BatchSystemRoulette {<br>public:<br>  vector &lt;double&gt; expectedFinishTimes(vector &lt;int&gt; duration, vector &lt;string&gt; user)<br>  {<br>    int n = duration.size();<br>    vector&lt;double&gt; duraciones(n);<br>    forn(i,n)<br>    {<br>      duraciones[i] = 0;<br>      forn(j,n)<br>      if(user[i]==user[j])<br>        duraciones[i] += duration[j];<br>    }<br>    vector&lt;double&gt; res(n);<br>    forn(i,n)<br>    {<br>      res[i] = duration[i];<br>      forn(j,n)<br>      {<br>        if(i==j)<br>          continue;<br>        if(duraciones[i]&gt;duraciones[j])<br>          res[i] += duration[j];<br>        if(duraciones[i]==duraciones[j])<br>          res[i] += (double)duration[j]/2.;<br>      }<br>    }<br>    return res;<br>  }<br>};<br> <br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>