<td class="problemText" colspan="8" valign="middle" align="left">
            import static java.lang.Math.*;<br>import static java.math.BigInteger.*;<br>import static java.util.Arrays.*;<br>import static java.util.Collections.*;<br>import java.math.*;<br>import java.util.*;<br>import java.util.Map.*;<br><br>public class BatchSystemRoulette {<br>  public double[] expectedFinishTimes(int[] duration, String[] user) {<br>    int n = duration.length;<br>    Map&lt;String, Long&gt; map = new TreeMap&lt;String, Long&gt;();<br>    for (int i = 0; i &lt; n; i++) {<br>      Long v = map.get(user[i]);<br>      if (v == null) v = 0L;<br>      map.put(user[i], v + duration[i]);<br>    }<br>    Map.Entry&lt;String, Long&gt;[] es = map.entrySet().toArray(new Map.Entry[0]);<br>    sort(es, new Comparator&lt;Map.Entry&lt;String, Long&gt;&gt;() {<br>      public int compare(Entry&lt;String, Long&gt; o1, Entry&lt;String, Long&gt; o2) {<br>        return Long.signum(o1.getValue() - o2.getValue());<br>      }<br>    });<br>    double[] res = new double[n];<br>    long time = 0;<br>    for (int s = 0; s &lt; es.length; ) {<br>      int t = s;<br>      while (t &lt; es.length &amp;&amp; es[s].getValue().equals(es[t].getValue())) t++;<br>      long sum = 0;<br>      for (int i = s; i &lt; t; i++) sum += es[i].getValue();<br>      for (int i = s; i &lt; t; i++) {<br>        long sum2 = es[i].getValue();<br>        for (int j = 0; j &lt; n; j++) if (user[j].equals(es[i].getKey())) {<br>          res[j] = time + (sum - sum2) * 0.5 + (sum2 - duration[j]) * 0.5 + duration[j];<br>        }<br>      }<br>      s = t;<br>      time += sum;<br>    }<br>    return res;<br>  }<br>  void debug(Object...os) {<br>    System.err.println(deepToString(os));<br>  }<br>}<br></td>