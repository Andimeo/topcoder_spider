<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;deque&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;utility&gt;<br>#include &lt;functional&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;ctime&gt;<br><br>using namespace std;<br><br>#define REP(i,n) for((i)=0;(i)&lt;(int)(n);(i)++)<br>#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)<br><br>#define INF (1&lt;&lt;29)<br><br>int dp[60][60][60]; // pos, win, lose<br><br>class EvaluatingElections {<br>  public:<br><br>  int evaluate(vector &lt;int&gt; v) {<br>    int n=v.size(),i,j,k;<br>    <br>    REP(i,n+1) REP(j,n+1) REP(k,n+1) dp[i][j][k] = -INF;<br>    dp[0][0][0] = 0;<br>    <br>    REP(i,n) REP(j,n+1) REP(k,n+1) if(dp[i][j][k] != -INF){<br>      dp[i+1][j+1][k] = max(dp[i+1][j+1][k],dp[i][j][k]+v[i]);<br>      dp[i+1][j][k+1] = max(dp[i+1][j][k+1],dp[i][j][k]+(v[i]-1)/2);<br>      if(v[i]%2 == 0) dp[i+1][j][k] = max(dp[i+1][j][k],dp[i][j][k]+v[i]/2);<br>    }<br>    <br>    int ans = 0;<br>    REP(i,n+1) REP(j,n+1) if(i &lt;= j) ans = max(ans,dp[n][i][j]);<br>    ans++;<br>    return ans;<br>  }<br><br>};<br><br><br>// Powered by FileEdit<br></td>