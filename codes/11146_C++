<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;stdio.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;iostream&gt;<br>using namespace std;<br> <br>class AfraidOfEven<br>{<br>  public:<br>  vector &lt;int&gt; restoreProgression(vector &lt;int&gt; seq)<br>  {<br>    vector&lt;int&gt; res;<br>    int n = seq.size();<br>    for (int i=0; i&lt;n; i++)<br>      for (int j=i+1; j&lt;n; j++) {<br>        int diff = seq[j]-seq[i];<br>        if ((diff%(j-i)) != 0) continue;<br>        diff /= j-i;<br>        int smallest = seq[i] - i*diff;<br>        if (smallest &lt;= 0) continue;<br>        int largest = smallest + (n-1) * diff;<br>        if (largest &lt;= 0) continue;<br>        vector&lt;int&gt; cand(n);<br>        for (int k=0; k&lt;n; k++) cand[k] = smallest + diff*k;<br>        int ok = 1;<br>        for (int k=0; k&lt;n; k++) {<br>          int target = cand[k];<br>          while (target &amp;&amp; !(target%2)) target /= 2;<br>          if (target != seq[k]) ok = 0;<br>        }<br>        if (!ok) continue;<br>        if (res.size() == 0) res = cand;<br>        if (res &gt; cand) res = cand;<br>      }<br>    return res;<br>  };<br>};<br></td>