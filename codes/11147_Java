<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br> <br> <br>public class YetAnotherHamiltonianPath<br>{<br>  public int leastCost(String[] s)<br>  {<br>    int n = s.length;<br>    int ans = 0;<br>    for (int i = 0; i &lt; n; ++i) {<br>      ans += (i &lt;= 1 ? 1 : 2) * s[i].length() * s[i].length();<br>    }<br>    int lcp0 = lcp(s[0], s[1]);<br>    Arrays.sort(s);<br>    int lcp1 = lcp(s[0], s[s.length - 1]);<br>    for (int i = 0; i &lt; n - 1; ++i) {<br>      int lcp = lcp(s[i], s[i + 1]);<br>      ans -= lcp * lcp;<br>    }<br>    ans += lcp0 * lcp0;<br>    ans -= lcp1 * lcp1;<br>    return ans;<br>  }<br>  <br>  int lcp(String a, String b) {<br>    int lcp = 0;<br>    while (lcp &lt; a.length() &amp;&amp; lcp &lt; b.length() &amp;&amp; a.charAt(lcp) == b.charAt(lcp)) {<br>      ++lcp;<br>    }<br>    return lcp;<br>  }<br>  <br>  <br> <br>}<br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>