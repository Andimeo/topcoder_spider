<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>using namespace std;<br><br>char ch[2] = {'W', 'B'};<br><br>class RectangleAvoidingColoringEasy<br>{<br>public:<br>  int ans, n, m;<br>  void search(vector&lt;string&gt; a, int x, int y)<br>  {<br>    if (x == n)<br>    {<br>      ans ++;<br>      return;<br>    }<br>    if (y ==m)<br>    {<br>      search(a, x+1, 0);<br>      return;<br>    }<br>    for (int cur=0; cur&lt;2; cur++) if (a[x][y] == '?' || a[x][y] == ch[cur])<br>    {<br>      vector&lt;string&gt; b = a;<br>      bool flag = true;<br>      b[x][y] = ch[cur];<br>      for (int x0=x-1; x0&gt;=0; x0--)<br>        if (b[x0][y] == ch[cur])<br>          for (int y0=y+1; y0&lt;m; y0++)<br>            if (b[x0][y0] == ch[cur])<br>              if (b[x][y0] == ch[cur])<br>                flag=false;<br>              else<br>                b[x][y0] = ch[cur^1];<br>      if (flag) search(b, x, y+1);<br>    }<br>  }<br>  int count(vector&lt;string&gt; board)<br>  {<br>    n = board.size();<br>    m = board[0].size();<br>    ans = 0;<br>    search(board, 0, 0);<br>    return ans;<br>  }<br>};<br></td>