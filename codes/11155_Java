<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> */<br>public class P8XCoinChange {<br>    static final long MODULO = 1000003;<br> <br>    public int solve(long coins_sum, long[] values) {<br>        int n = values.length;<br>        long[][][] oneCycle = new long[n][][];<br>        oneCycle[0] = unitMatrix(n);<br>        for (int i = 1; i &lt; n; ++i) {<br>            long curBy = values[i] / values[i - 1];<br>            oneCycle[i] = multiply(extraMatrix(n, i), pow(oneCycle[i - 1], curBy));<br>        }<br>        long[][] total = unitMatrix(n);<br>        for (int i = n - 1; i &gt;= 0; --i) {<br>            long fullCycles = coins_sum / values[i];<br>            coins_sum %= values[i];<br>            total = multiply(pow(oneCycle[i], fullCycles), total);<br>        }<br>        long res = 0;<br>        for (long x : total[0])<br>            res += x;<br>        return (int) (res % MODULO);<br>    }<br> <br>    private long[][] extraMatrix(int n, int start) {<br>        long[][] res = unitMatrix(n);<br>        for (int i = 0; i &lt; start; ++i)<br>            res[i][start] = 1;<br>        return res;<br>    }<br> <br>    private long[][] pow(long[][] a, long k) {<br>        if (k == 0)<br>            return unitMatrix(a.length);<br>        if (k % 2 == 0)<br>            return pow(multiply(a, a), k / 2);<br>        else<br>            return multiply(a, pow(a, k - 1));<br>    }<br> <br>    private long[][] multiply(long[][] a, long[][] b) {<br>        int n = a.length;<br>        long[][] c = new long[n][n];<br>        for (int i = 0; i &lt; n; ++i)<br>            for (int j = 0; j &lt; n; ++j) {<br>                long sum = 0;<br>                for (int k = 0; k &lt; n; ++k)<br>                    sum += a[i][k] * b[k][j];<br>                c[i][j] = sum % MODULO;<br>            }<br>        return c;<br>    }<br> <br>    private long[][] unitMatrix(int n) {<br>        long[][] res = new long[n][n];<br>        for (int i = 0; i &lt; n; ++i)<br>            res[i][i] = 1;<br>        return res;<br>    }<br>}<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.16 [modified TZTester]<br>// Powered by CodeProcessor<br></td>