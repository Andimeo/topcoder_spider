<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class ShuffleSort {<br>public:<br>  double shuffle(vector &lt;int&gt;);<br>};<br> <br>int a[55] ;<br> <br> <br>double gao(int pos, int n)<br>{<br>  int i, sum = 0 ;<br>  if (n == 1) return 0 ;<br>  for (i = pos ; a[i] == a[pos] ; i++)<br>    sum++ ;<br>  double p1 = 1.0 * sum / n ;<br>  double p2 = 1-p1 ;<br>  return gao(pos+1, n-1)+ p2/p1 ;<br>}<br> <br> <br>double ShuffleSort::shuffle(vector &lt;int&gt; cards) {<br>  int i, n = cards.size() ;<br>  sort(cards.begin(), cards.end()) ;<br>  for (i = 0 ; i &lt; n ; i++) a[i] = cards[i] ;<br>  return gao(0, cards.size()) + 1 ;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>