<td class="problemText" colspan="8" valign="middle" align="left">
            //Authored by Irvan Jahja (dolphinigle)<br>//TopCoder<br> <br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;assert.h&gt;<br> <br>#define FORN(X,Y) for (int (X) = 0;(X) &lt; (Y);++(X))<br>#define REP(X,Y,Z) for (int (X) = (Y);(X) &lt; (Z);++(X))<br> <br>#define SZ(Z) ((int)(Z).size())<br>#define ALL(W) (W).begin(), (W).end()<br>#define PB push_back<br> <br>#define MP make_pair<br>#define A first<br>#define B second<br> <br>using namespace std;<br> <br>typedef long long ll;<br>typedef double db;<br>typedef vector&lt;int&gt; vint;<br>typedef vector&lt;ll&gt; vll;<br> <br>class GuessTheNumberGame {<br>public:<br>  int possibleClues(int);<br>};<br> <br>vector&lt;int&gt; Sieve(int abc) {<br>  vector&lt;int&gt; sieveans;<br>  abc++;<br>  sieveans.reserve(abc);<br>  FORN(i,abc) sieveans.push_back(1);<br>  for (int i = 2;i * i &lt; abc;i = (i == 2)?3:(i + 2)) {<br>    for (int j = i + i;j &lt; abc;j += i) {<br>      sieveans[j] = 0;<br>      }<br>    }<br>  sieveans[0] = sieveans[1] = 0;<br>  return sieveans;<br>  }<br> <br>//generate all prime number lower than or equal to abc;<br>vector&lt;int&gt; GeneratePrime(int abc) {<br>  vector&lt;int&gt; stable = Sieve(abc);<br>  vector&lt;int&gt; returnvalue;<br>  for (int i = 0;i &lt; stable.size();i++) {<br>    if (stable[i]) returnvalue.push_back(i);<br>    }<br>  return returnvalue;<br>  }<br> <br>int n;<br> <br>int GuessTheNumberGame::possibleClues(int n) {<br>  ll modu = 1000000007LL;<br>  vint primes = GeneratePrime(n);<br>  ll ret = 1LL;<br>  for (int i = 0; i &lt; SZ(primes); ++i) {<br>    ll prime = primes[i];<br>    int jml = 0;<br>    while (prime &lt;= n) {<br>      ++jml;<br>      prime *= (ll)primes[i];<br>    }<br>    ret *= (ll)(jml+1);<br>    ret %= modu;<br>  }<br>  return ret;<br>  <br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0! - modified by dolphinigle<br></td>