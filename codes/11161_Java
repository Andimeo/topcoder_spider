<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.ArrayList;<br>import java.util.List;<br>import java.util.Iterator;<br>import java.util.Comparator;<br>import java.util.Arrays;<br>import java.util.Collection;<br><br>class CollectionUtils {<br>  public static int[] toArray(Collection&lt;Integer&gt; collection) {<br>    int[] array = new int[collection.size()];<br>    int index = 0;<br>    for (int element : collection)<br>      array[index++] = element;<br>    return array;<br>  }<br><br>  }<br><br>class IntegerUtils {<br><br>  public static int[] generatePrimes(int upTo) {<br>    boolean[] isPrime = generatePrimalityTable(upTo);<br>    List&lt;Integer&gt; primes = new ArrayList&lt;Integer&gt;();<br>    for (int i = 0; i &lt; upTo; i++) {<br>      if (isPrime[i])<br>        primes.add(i);<br>    }<br>    return CollectionUtils.toArray(primes);<br>  }<br><br>  public static boolean[] generatePrimalityTable(int upTo) {<br>    boolean[] isPrime = new boolean[upTo];<br>    Arrays.fill(isPrime, true);<br>    isPrime[0] = isPrime[1] = false;<br>    for (int i = 2; i * i &lt; upTo; i++) {<br>      if (isPrime[i]) {<br>        for (int j = i * i; j &lt; upTo; j += i)<br>          isPrime[j] = false;<br>      }<br>    }<br>    return isPrime;<br>  }<br><br>  }<br><br>public class GuessTheNumberGame {<br>  public int possibleClues(int n) {<br>    long answer = 1;<br>    int[] primes = IntegerUtils.generatePrimes(n + 1);<br>    for (int p : primes) {<br>      int nCopy = n;<br>      int power = 0;<br>      do {<br>        power++;<br>        nCopy /= p;<br>      } while (nCopy != 0);<br>      answer *= power;<br>      answer %= 1000000007;<br>    }<br>    return (int) answer;<br>  }<br><br><br>}<br><br><br><br><br>// Powered by FileEdit<br>// Powered by moj 4.15 [modified TZTester]<br>// Powered by CodeProcessor<br></td>