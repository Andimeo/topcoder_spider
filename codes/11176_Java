<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.io.*;<br> <br>public class P8XMatrixRecovery {<br>    <br>    int n;<br>    boolean[][] adj;<br> <br>    boolean[] vis;<br>    int[] link;<br> <br>    boolean check(char[][] R, char[][] C) {<br>        n = C.length;<br>        adj = new boolean[n][n];<br>        for (int i = 0; i &lt; n; i++)<br>            for (int j = 0; j &lt; n; j++) {<br>                boolean found = false;<br>                for (int k = 0; k &lt; R.length; k++)<br>                    if (R[k][i] != '?' &amp;&amp; C[j][k] != '?' &amp;&amp; R[k][i] != C[j][k]) {<br>                        found = true;<br>                        break;<br>                    }<br>                if (!found)<br>                    adj[i][j] = true;<br>            }<br>        vis = new boolean[n];<br>        link = new int[n];<br>        Arrays.fill(link, -1);<br>        for (int i = 0; i &lt; n; i++) {<br>            Arrays.fill(vis, false);<br>            if (!find(i))<br>                return false;<br>        }<br>        return true;<br>    }<br> <br>    boolean find(int p) {<br>        if (vis[p])<br>            return false;<br>        vis[p] = true;<br>        for (int q = 0; q &lt; n; q++)<br>            if (adj[p][q] &amp;&amp; (link[q] == -1 || find(link[q]))) {<br>                link[q] = p;<br>                return true;<br>            }<br>        return false;<br>    }<br> <br>    public String[] solve(String[] rows, String[] columns) {<br>        char[][] R = new char[rows.length][];<br>        for (int i = 0; i &lt; rows.length; i++)<br>            R[i] = rows[i].toCharArray();<br>        char[][] C = new char[columns.length][];<br>        for (int i = 0; i &lt; columns.length; i++)<br>            C[i] = columns[i].toCharArray();<br>        for (int i = 0; i &lt; R.length; i++)<br>            for (int j = 0; j &lt; C.length; j++) {<br>                if (R[i][j] == '?') {<br>                    R[i][j] = '0';<br>                    if (!check(R, C))<br>                        R[i][j] = '1';<br>                }<br>            }<br>        String[] ret = new String[rows.length];<br>        for (int i = 0; i &lt; ret.length; i++)<br>            ret[i] = new String(R[i]);<br>        return ret;<br>    }<br> <br>    void debug(Object...os) {<br>        System.err.println(Arrays.deepToString(os));<br>    }<br> <br>}<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.16 [modified TZTester]<br>// Powered by CodeProcessor<br></td>