<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;cstring&gt;<br> <br>using namespace std;<br> <br> <br>int  a[55],b[55],f[55][55];<br> <br> <br>class ToastXToast {<br>public:<br>  int bake(vector &lt;int&gt; undertoasted, vector &lt;int&gt; overtoasted) {<br>    <br>    int  M = undertoasted.size();<br>    int  N = overtoasted.size();<br>    for (int i=1;i&lt;=M;++i) a[i]=undertoasted[i-1];<br>    for (int i=1;i&lt;=N;++i) b[i]=overtoasted[i-1];<br>    sort(a+1,a+M+1);<br>    sort(b+1,b+N+1);<br>    <br>    memset(f,60,sizeof(f)); f[0][0]=0;<br>    for (int i=0;i&lt;M;++i)<br>    for (int j=0;j&lt;N;++j) if (f[i][j]&lt;999999999)<br>    for (int k=i+1;k&lt;=M;++k) if (a[k]&lt;b[j+1])<br>    for (int l=j+1;l&lt;=N;++l)<br>      f[k][l]=min(f[k][l],f[i][j]+1);<br>    <br>    if (f[M][N]&gt;999999999) f[M][N]=-1;<br>    return f[M][N];<br>  }<br>};<br> <br> <br> <br> <br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>