<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;memory&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;algorithm&gt;<br>using namespace std;<br><br>typedef long long Int;<br>typedef pair&lt;int,int&gt; PII;<br>typedef vector&lt;int&gt; VInt;<br><br>#define FOR(i, a, b) for(i = (a); i &lt; (b); ++i)<br>#define RFOR(i, a, b) for(i = (a) - 1; i &gt;= (b); --i)<br>#define CLEAR(a, b) memset(a, b, sizeof(a))<br>#define SIZE(a) int((a).size())<br>#define ALL(a) (a).begin(),(a).end()<br>#define PB push_back<br>#define MP make_pair<br><br>#define MAX (2*41*41)<br>#define MOD 1000000007<br><br>int gcd(int a, int b){ return a == 0 ? b : gcd(b % a, a); }<br><br>Int Res[41][42][MAX];<br>int A[41];<br>int Z[41];<br><br>class AppleTrees {<br>  public:<br>  int theCount(int D, vector &lt;int&gt; v)<br>  {<br>    sort(ALL(v));<br>    reverse(ALL(v));<br>    int N = SIZE(v);<br><br>    CLEAR(Res, 0);<br>    Res[0][1][0] = 1;<br><br>    int i, j, k;<br>    FOR(i, 0, N)<br>      FOR(j, 1, i + 2)<br>        FOR(k, 0, MAX)<br>          if(Res[i][j][k] != 0)<br>          {<br>            Res[i + 1][j - 1][k] += j*Res[i][j][k];<br>            Res[i + 1][j - 1][k] %= MOD;<br><br>            Res[i + 1][j][ k + v[i] ] += 2*j*Res[i][j][k];<br>            Res[i + 1][j][ k + v[i] ] %= MOD;<br><br>            Res[i + 1][j + 1][ k + v[i] + v[i] ] += j*Res[i][j][k];<br>            Res[i + 1][j + 1][ k + v[i] + v[i] ] %= MOD;<br>          }<br><br>    Int res = 0;<br>    FOR(k, 0, MAX)<br>      if(Res[N][0][k] != 0)<br>      {<br>        int d = D - 1 - k;<br>        if(d &lt; 0)<br>          continue;<br><br>        FOR(i, 0, N)<br>        {<br>          A[i] = d + i + 1;<br>          Z[i] = i + 1;<br>        }<br><br>        FOR(i, 0, N)<br>          FOR(j, 0, N)<br>          {<br>            int g = gcd(Z[i], A[j]);<br>            Z[i] /= g;<br>            A[j] /= g;<br><br>            if(Z[i] == 1)<br>              break;<br>          }<br><br>        Int r = Res[N][0][k];<br>        FOR(i, 0, N)<br>        {<br>          r *= A[i];<br>          r %= MOD;<br>        }<br><br>        res += r;<br>      }<br><br>    return res % MOD;<br>  }<br><br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>