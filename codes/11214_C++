<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br><br>using namespace std;<br><br>class CrouchingAmoebas {<br>public:<br>  int count(vector &lt;int&gt;, vector &lt;int&gt;, int, int);<br>};<br><br>int CrouchingAmoebas::count(vector &lt;int&gt; x, vector &lt;int&gt; y, int A, int T) {<br>  <br>  int n = x.size();<br>  vector &lt;int&gt; lx(x);<br>  vector &lt;int&gt; ly(y);<br>  <br>  sort(lx.begin(), lx.end());<br>  sort(ly.begin(), ly.end());<br>  <br>  int ans=0;<br>  for (int i=0; i&lt;n; i++)<br>  for(int j=0; j&lt;n; j++)<br>    {<br>      int c1x = lx[i];<br>      int c2x = c1x + A;<br>      int c1y = ly[j];<br>      int c2y = c1y + A;<br>      vector &lt;long long&gt; kc;<br>      cout &lt;&lt; c1x &lt;&lt; " " &lt;&lt; c2x &lt;&lt; " " &lt;&lt; c1y &lt;&lt; " " &lt;&lt; c2y &lt;&lt; endl;<br>      for (int k=0; k&lt;n; k++)<br>      {<br>        long long tkc = 0;<br>        if (x[k] &lt; c1x) tkc+=(c1x-x[k]);<br>        if (x[k] &gt; c2x) tkc+=(x[k]-c2x);<br>        <br>        if (y[k] &lt; c1y) tkc+=(c1y-y[k]);<br>        if (y[k] &gt; c2y) tkc+=(y[k]-c2y);<br>        kc.push_back(tkc);<br>        cout &lt;&lt; tkc &lt;&lt; endl;<br>      }<br>      <br>      sort(kc.begin(), kc.end());<br>      long long tm = 0;<br>      int ta = 0;<br>      while (ta&lt;n &amp;&amp; tm+kc[ta]&lt;=T)<br>      {<br>        tm += kc[ta];<br>        ta++;<br>      }<br>      <br>      if (ta&gt;ans) ans = ta;<br>    }<br>    <br>  for (int i=0; i&lt;n; i++)<br>  for(int j=0; j&lt;n; j++)<br>    {<br>      int c2x = lx[i];<br>      int c1x = c2x - A;<br>      int c1y = ly[j];<br>      int c2y = c1y + A;<br>      vector &lt;long long&gt; kc;<br>      cout &lt;&lt; c1x &lt;&lt; " " &lt;&lt; c2x &lt;&lt; " " &lt;&lt; c1y &lt;&lt; " " &lt;&lt; c2y &lt;&lt; endl;<br>      for (int k=0; k&lt;n; k++)<br>      {<br>        long long tkc = 0;<br>        if (x[k] &lt; c1x) tkc+=(c1x-x[k]);<br>        if (x[k] &gt; c2x) tkc+=(x[k]-c2x);<br>        <br>        if (y[k] &lt; c1y) tkc+=(c1y-y[k]);<br>        if (y[k] &gt; c2y) tkc+=(y[k]-c2y);<br>        kc.push_back(tkc);<br>        cout &lt;&lt; tkc &lt;&lt; endl;<br>      }<br>      <br>      sort(kc.begin(), kc.end());<br>      int tm = 0;<br>      int ta = 0;<br>      while (ta&lt;n &amp;&amp; tm+kc[ta]&lt;=T)<br>      {<br>        tm += kc[ta];<br>        ta++;<br>      }<br>      <br>      if (ta&gt;ans) ans = ta;<br>    }<br>    <br>  for (int i=0; i&lt;n; i++)<br>  for(int j=0; j&lt;n; j++)<br>    {<br>      int c1x = lx[i];<br>      int c2x = c1x + A;<br>      int c2y = ly[j];<br>      int c1y = c2y - A;<br>      vector &lt;long long&gt; kc;<br>      cout &lt;&lt; c1x &lt;&lt; " " &lt;&lt; c2x &lt;&lt; " " &lt;&lt; c1y &lt;&lt; " " &lt;&lt; c2y &lt;&lt; endl;<br>      for (int k=0; k&lt;n; k++)<br>      {<br>        long long tkc = 0;<br>        if (x[k] &lt; c1x) tkc+=(c1x-x[k]);<br>        if (x[k] &gt; c2x) tkc+=(x[k]-c2x);<br>        <br>        if (y[k] &lt; c1y) tkc+=(c1y-y[k]);<br>        if (y[k] &gt; c2y) tkc+=(y[k]-c2y);<br>        kc.push_back(tkc);<br>        cout &lt;&lt; tkc &lt;&lt; endl;<br>      }<br>      <br>      sort(kc.begin(), kc.end());<br>      int tm = 0;<br>      int ta = 0;<br>      while (ta&lt;n &amp;&amp; tm+kc[ta]&lt;=T)<br>      {<br>        tm += kc[ta];<br>        ta++;<br>      }<br>      <br>      if (ta&gt;ans) ans = ta;<br>    }<br>  <br>  for (int i=0; i&lt;n; i++)<br>  for(int j=0; j&lt;n; j++)<br>    {<br>      int c2x = lx[i];<br>      int c1x = c2x - A;<br>      int c2y = ly[j];<br>      int c1y = c2y - A;<br>      vector &lt;long long&gt; kc;<br>      cout &lt;&lt; c1x &lt;&lt; " " &lt;&lt; c2x &lt;&lt; " " &lt;&lt; c1y &lt;&lt; " " &lt;&lt; c2y &lt;&lt; endl;<br>      for (int k=0; k&lt;n; k++)<br>      {<br>        long long tkc = 0;<br>        if (x[k] &lt; c1x) tkc+=(c1x-x[k]);<br>        if (x[k] &gt; c2x) tkc+=(x[k]-c2x);<br>        <br>        if (y[k] &lt; c1y) tkc+=(c1y-y[k]);<br>        if (y[k] &gt; c2y) tkc+=(y[k]-c2y);<br>        kc.push_back(tkc);<br>        cout &lt;&lt; tkc &lt;&lt; endl;<br>      }<br>      <br>      sort(kc.begin(), kc.end());<br>      int tm = 0;<br>      int ta = 0;<br>      while (ta&lt;n &amp;&amp; tm+kc[ta]&lt;=T)<br>      {<br>        tm += kc[ta];<br>        ta++;<br>      }<br>      <br>      if (ta&gt;ans) ans = ta;<br>    }<br>  <br>  return ans;<br>}<br><br>//Powered by [KawigiEdit] 2.0!<br></td>