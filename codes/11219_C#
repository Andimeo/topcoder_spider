<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class FoxSequence<br>{<br>  int[] seq;<br>  bool inc(int st, int en)<br>  {<br>    int dif = seq[st+1] - seq[st];<br>    if (dif &lt;= 0) return false;<br>    int i;<br>    for (i=st+1; i&lt;en; i++) if (seq[i+1]-seq[i]!=dif) return false;<br>    return true;<br>  }<br>  bool dow(int st, int en)<br>  {<br>    int dif = seq[st+1] - seq[st];<br>    if (dif &gt;= 0) return false;<br>    int i;<br>    for (i=st+1; i&lt;en; i++) if (seq[i+1]-seq[i]!=dif) return false;<br>    return true;<br>  }<br>  bool same(int st, int en)<br>  {<br>    int i;<br>    for (i=st+1; i&lt;=en; i++) if (seq[i]!=seq[i-1]) return false;<br>    return true;<br>  }<br>  public string isValid(int[] seq1)<br>  {<br>    seq = seq1;<br>    int N = seq.Length;<br>    int a, b, c, d;<br>    for (a=1; a&lt;N-1; a++)<br>    for (b=a+1; b&lt;N-1; b++)<br>    for (c=b; c&lt;N-1; c++)<br>    for (d=c+1; d&lt;N-1; d++)<br>    {<br>      if (!inc(0, a)) continue;<br>      if (!dow(a, b)) continue;<br>      if (!same(b, c)) continue;<br>      if (!inc(c, d)) continue;<br>      if (!dow(d, N-1)) continue;<br>      return "YES";<br>    }<br>    return "NO";<br>  }<br> <br> <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>