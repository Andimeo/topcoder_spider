<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class FoxSequence {<br>public:<br>  string isValid(vector &lt;int&gt;);<br>};<br> <br>string FoxSequence::isValid(vector &lt;int&gt; a) {<br>  int n = a.size(), i;<br>  vector &lt;int&gt; b;<br>  b.clear();<br>  for (i=0;i&lt;n-1;i++)<br>    if (i == 0) b.push_back(a[i+1]-a[i]); else<br>    if (a[i+1]-a[i] != a[i]-a[i-1]) b.push_back(a[i+1]-a[i]);<br>  if (b.size() == 4) {<br>    if (b[0] &gt; 0 &amp;&amp; b[1] &lt; 0 &amp;&amp; b[2] &gt; 0 &amp;&amp; b[3] &lt; 0) return "YES";<br>    else return "NO";<br>  } else<br>  if (b.size() == 5) {<br>    if (b[0] &gt; 0 &amp;&amp; b[1] &lt; 0 &amp;&amp; b[2] == 0 &amp;&amp; b[3] &gt; 0 &amp;&amp; b[4] &lt; 0) return "YES";<br>    else return "NO";<br>  }<br>  else return "NO";<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>