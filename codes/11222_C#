<td class="problemText" colspan="8" valign="middle" align="left">
            class P8XCoinChangeAnother {<br>  public long[] solve(int N, long coins_sum, long coins_count) {<br>          {<br>            long[] ret = new long[N];<br>            long max = 1;<br><br>            N--;<br><br>            if (coins_count &gt; coins_sum)<br>            {<br>                return new long[0];<br>            }<br><br>            for (int j = 0; j &lt; N; j++)<br>            {<br>                max *= 2;<br>            }<br><br>            if (coins_sum &gt; max)<br>            {<br>                ret[N] = coins_sum / max;<br>                coins_count -= ret[N];<br>                coins_sum -= ret[N] * max;<br>            }<br><br>            int k = N;<br><br>            while (coins_sum &gt; 0)<br>            {<br>                if (coins_sum &gt;= max)<br>                {<br>                    ret[k] ++;<br>                    coins_sum -= max;<br>                    coins_count--;<br>                }<br>                else<br>                {<br>                    max /= 2;<br>                    k--;<br>                }<br>            }<br><br>            if (coins_count &lt; 0)<br>            {<br>                return new long[0];<br>            }<br><br>            int i = N;<br><br>            while (coins_count &gt; 0)<br>            {<br>                if (ret[i] &gt; 0)<br>                {<br>                    if (ret[i] &lt; coins_count)<br>                    {<br>                        ret[i - 1] += 2 * ret[i];<br>                        coins_count -= ret[i];<br>                        ret[i] = 0;<br>                    }<br>                    else<br>                    {<br>                        ret[i - 1] += 2 * coins_count;<br>                        ret[i] -= coins_count;<br>                        coins_count = 0;<br>                    }<br>                }<br>                else<br>                {<br>                    i--;<br>                }<br>            }<br><br>            return ret;<br>        }<br>    }<br>}<br></td>