<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;string.h&gt;<br>#include &lt;set&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;map&gt;<br>#include &lt;ctime&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;malloc.h&gt;<br> <br>using namespace std;<br> <br>class P8XCoinChangeAnother{<br>public:<br>  vector&lt;long long&gt; solve(int n, long long coins_sum, long long coins_count) {<br>    vector&lt;long long&gt; ans(63, 0);<br>    int k = 0;<br>    while(coins_sum) {<br>      if(coins_sum%2) {<br>        ans[k] = 1;<br>        coins_count--;<br>      }<br>      coins_sum /= 2;<br>      k++;<br>    }<br>    while(ans.size()&gt;n) {<br>      long long r = 0;<br>      if(ans.back()) {<br>        r = 2*ans.back();<br>        coins_count -= ans.back();<br>      }<br>      ans.pop_back();<br>      ans[ans.size()-1] += r;<br>    }<br>    k = n-1;<br>    while(coins_count&gt;0 &amp;&amp; k&gt;0) {<br>      long long d = min(ans[k], coins_count);<br>      coins_count -= d;<br>      ans[k] -= d;<br>      ans[k-1] += 2*d;<br>      k--;<br>    }<br>    if(coins_count)<br>      ans.clear();<br>    return ans;<br>  }<br>};<br></td>