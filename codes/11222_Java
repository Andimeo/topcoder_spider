<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class P8XCoinChangeAnother<br>{<br>  public long[] solve(int N, long coins_sum, long coins_count)<br>  {<br>    long[] coins = new long[N];<br>    coins[0] = 1l;<br>    for (int i = 1 ; i &lt; N ; i++)<br>      coins[i] = coins[i - 1] * (long)2;<br>    long[] res = new long[N];<br>    for (int i = N - 1; i &gt;= 0 ; i--) {<br>      res[i] = coins_sum / coins[i];<br>      coins_count -= res[i];<br>      if (coins_count &lt; 0) return (new long[0]);<br>      coins_sum -= res[i] * coins[i];<br>    }<br>    if (coins_count == 0) return res;<br>    for (int i = N - 1 ; i &gt; 0 ; i--) {<br>      if (res[i] &gt; 0) {<br>        if (res[i] &gt; coins_count) {<br>          res[i] -= coins_count;<br>          res[i - 1] += coins_count * 2;<br>          coins_count = 0;<br>        } else {<br>          res[i - 1] += res[i] * 2;<br>          coins_count -= res[i];<br>          res[i] = 0;<br>        }<br>      }<br>    }<br>    if (coins_count == 0) return res;<br>    return (new long[0]);<br>  }<br>  <br>  <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>