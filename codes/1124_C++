<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;math.h&gt;<br> <br>using namespace std;<br> <br>int rx[2],ry[2],rdx[2],rdy[2];<br> <br>int sx[30],sy[30],ns;<br> <br>double f[30][30];<br>double g[2][30];<br> <br>#define BIG 999999999.9<br> <br>#define di(a,b) ((a)*(a)+(b)*(b))<br> <br>class Wireless { public: int bestRoute(int ran, vector&lt;string&gt; rn, vector&lt;string&gt; sn) {<br>char buf[30];<br>int i,j,k;<br>double best=BIG;<br>double temp; int tempi;<br> <br>ran*=ran;<br> <br>for(i=0;i&lt;2;i++) {<br>sscanf(rn[i].c_str(),"%s%d%d",buf,&amp;rx[i],&amp;ry[i]);<br>if (!strcmp(buf,"DOWN")) rdy[i]=-1;<br>if (!strcmp(buf,"UP")) rdy[i]=1;<br>if (!strcmp(buf,"LEFT")) rdx[i]=-1;<br>if (!strcmp(buf,"RIGHT")) rdx[i]=1;<br>}<br>ns=sn.size();<br>for(i=0;i&lt;ns;i++) sscanf(sn[i].c_str(),"%d%d",&amp;sx[i],&amp;sy[i]);<br> <br>for(i=0;i&lt;ns;i++) for(j=0;j&lt;ns;j++) {<br>  tempi=di(sx[j]-sx[i],sy[j]-sy[i]); if (tempi&gt;ran) temp=BIG; else temp=sqrt(tempi);<br>  f[i][j]=temp;<br>}<br>for(j=0;j&lt;ns;j++) for(i=0;i&lt;ns;i++) for(k=0;k&lt;ns;k++) if (f[i][j]+f[j][k]&lt;f[i][k]) f[i][k]=f[i][j]+f[j][k];<br> <br>while((rx[0]&gt;=-10000 &amp;&amp; rx[0]&lt;=10000 &amp;&amp; ry[0]&gt;=-10000 &amp;&amp; ry[0]&lt;=10000) ||<br>      (rx[1]&gt;=-10000 &amp;&amp; rx[1]&lt;=10000 &amp;&amp; ry[1]&gt;=-10000 &amp;&amp; ry[1]&lt;=10000)) {<br> <br>for(j=0;j&lt;2;j++) for(i=0;i&lt;ns;i++) {<br>  tempi=di(rx[j]-sx[i],ry[j]-sy[i]);<br>  if (tempi&gt;ran) g[j][i]=BIG;<br>  else g[j][i]=sqrt(tempi);<br>}<br> <br>for(i=0;i&lt;ns;i++) for(j=0;j&lt;ns;j++) { temp=g[0][i]+f[i][j]+g[1][j]; if (temp&lt;best) best=temp; }<br> <br> <br>  rx[0]+=rdx[0]; ry[0]+=rdy[0];<br>  rx[1]+=rdx[1]; ry[1]+=rdy[1];<br>}<br>if (best&gt;=BIG) return (-1);<br>return (int) (best+0.5);<br>}};<br></td>