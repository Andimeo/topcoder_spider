<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;bitset&gt;<br>#include &lt;cassert&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstring&gt;<br>#include &lt;ctime&gt;<br>#include &lt;iostream&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br> <br>using namespace std;<br>typedef long long int64;<br>typedef double real;<br>const int MaxN = 52, NA = -1, MaxC = 0x3F3F3F3F;<br> <br>class GogoXMarisaKirisima<br>{<br>private: <br> int a [MaxN] [MaxN];<br> bool b [MaxN];<br> bool e [MaxN];<br> int n;<br> <br> void recur1 (int v)<br> {<br>  if (b[v])<br>   return;<br>  b[v] = true;<br> <br>  int i;<br>  for (i = 0; i &lt; n; i++)<br>   if (a[v][i])<br>    recur1 (i);<br> }<br> <br> void recur2 (int v)<br> {<br>  if (e[v])<br>   return;<br>  e[v] = true;<br> <br>  int i;<br>  for (i = 0; i &lt; n; i++)<br>   if (a[i][v])<br>    recur2 (i);<br> }<br> <br>public:<br> int solve (vector &lt;string&gt; choices)<br> {<br>  int i, j;<br>  n = choices.size ();<br>  for (i = 0; i &lt; n; i++)<br>   for (j = 0; j &lt; n; j++)<br>    a[i][j] = (choices[i][j] == 'Y');<br>  memset (b, 0, sizeof (b));<br>  recur1 (0);<br>  memset (e, 0, sizeof (e));<br>  recur2 (n - 1);<br>  int res;<br>  res = b[0] &amp;&amp; e[0];<br>  for (i = 0; i &lt; n; i++)<br>   if (b[i] &amp;&amp; e[i])<br>   {<br>    for (j = 0; j &lt; n; j++)<br>     if (a[i][j] &amp;&amp; b[j] &amp;&amp; e[j])<br>      res++;<br>    if (i != n - 1)<br>     res--;<br>   }<br>  return res;<br> }<br>};<br> <br> <br> <br>//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!<br></td>