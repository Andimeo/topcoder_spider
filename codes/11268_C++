<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class SlimeXResidentSlime {<br>public:<br>  int exterminate(vector &lt;string&gt;);<br>};<br>  <br>  const int dx[]={1,-1,0,0},dy[]={0,0,1,-1};<br>  int n,m,ans,sx,sy,d[55][55][55][55],q[55],dd[55],fx[55],fy[55];<br>  bool vis[55];<br>  vector&lt;string&gt; g;<br>    <br>  bool rang(int x,int y){<br>    return x&gt;=0&amp;&amp;x&lt;n&amp;&amp;y&gt;=0&amp;&amp;y&lt;m;<br>  }<br>  void bfs(int x,int y){<br>    int qx[55*55],qy[55*55];<br>    for (int i=0;i&lt;n;i++)<br>      for (int j=0;j&lt;m;j++)<br>        d[x][y][i][j]=55*55*55;<br>    d[x][y][x][y]=0;<br>    int head=0,tail=1;<br>    qx[head]=x,qy[head]=y;<br>    while (head&lt;tail){<br>      int ix=qx[head],iy=qy[head];<br>      head++;<br>      for (int i=0;i&lt;4;i++){<br>        int tx=ix+dx[i],ty=iy+dy[i];<br>        if (rang(tx,ty)&amp;&amp;g[tx][ty]!='#'&amp;&amp;d[x][y][tx][ty]&gt;d[x][y][ix][iy]+1){<br>          d[x][y][tx][ty]=d[x][y][ix][iy]+1;<br>          qx[tail]=tx;<br>          qy[tail++]=ty;<br>        }<br>      }<br>    }<br>  }<br>  void dfs(int k,int ending){<br>    if (k==ending){<br>      int time2[55];<br>      time2[0]=d[sx][sy][fx[q[0]]][fy[q[0]]];<br>      for (int i=1;i&lt;ending;i++)<br>        time2[i]=time2[i-1]+d[fx[q[i]]][fy[q[i]]][fx[q[i-1]]][fy[q[i-1]]];<br>      int finish=time2[ending-1];<br>      bool flag=true;<br>      if (finish&gt;50*50*50) flag=false;<br>      for (int i=0;i&lt;ending;i++)<br>        if (finish-time2[i]&gt;=dd[q[i]]) flag=false;<br>      if (flag&amp;&amp;(ans&lt;0||ans&gt;finish)) ans=finish;<br>    }<br>    else{<br>      for (int i=0;i&lt;ending;i++)<br>        if (!vis[i]){<br>          vis[i]=true;<br>          q[k]=i;<br>          dfs(k+1,ending);<br>          vis[i]=false;<br>        }<br>    }<br>  }<br>int SlimeXResidentSlime::exterminate(vector &lt;string&gt; gg) {<br>  g=gg;<br>  n=g.size(),m=g[0].size();<br>  int sum=0;<br>  for (int i=0;i&lt;n;i++)<br>    for (int j=0;j&lt;m;j++){<br>      if (g[i][j]!='#') bfs(i,j);<br>      if ('1'&lt;=g[i][j]&amp;&amp;g[i][j]&lt;='9'){<br>        sum++;<br>        if (sum&lt;=10) fx[sum-1]=i,fy[sum-1]=j,dd[sum-1]=g[i][j]-'0';<br>      }<br>      if (g[i][j]=='$') sx=i,sy=j;<br>    }<br>  memset(vis,0,sizeof(vis));<br>  if (sum&gt;10) return -1;<br>    else{<br>      ans=-1;<br>      dfs(0,sum);<br>      return ans;<br>    }<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>