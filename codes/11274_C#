<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class GogoXCake {<br>    int h, w;<br>    public string solve(string[] cake, string[] cutter)<br>    {<br>        if (calc(cake, cutter)) return "YES";<br>        return "NO";<br>    }<br><br>    public bool calc(string[] cake, string[] cutter)<br>    {<br>        int i, j, k, l;<br>        h = cake.Length;<br>        w = cake[0].Length;<br>        int[,] table = new int[h, w];<br>        for (i = 0; i &lt; h; i++)<br>        {<br>            for (j = 0; j &lt; w; j++)<br>            {<br>                table[i, j] = 1;<br>            }<br>        }<br>        int fpos = 0;<br>        for (j = 0; j &lt; cutter[0].Length; j++)<br>        {<br>            if (cutter[0][j] == '.')<br>            {<br>                fpos = j;<br>                break;<br>            }<br>        }<br>        for (i = 0; i &lt; h; i++)<br>        {<br>            for (j = 0; j &lt; w; j++)<br>            {<br>                if (cake[i][j] == '.')<br>                {<br>                    if (table[i, j] == 1)<br>                    {<br>                        for (k = 0; k &lt; cutter.Length; k++)<br>                        {<br>                            for (l = 0; l &lt; cutter[0].Length; l++)<br>                            {<br>                                if (cutter[k][l] == '.')<br>                                {<br>                                    int ny = i + k;<br>                                    int nx = j + l - fpos;<br>                                    if (!ok(ny, nx)) return false;<br>                                    if (table[ny, nx] &lt; 1) return false;<br>                                    table[ny, nx]--;<br>                                }<br>                            }<br>                        }<br>                    }<br>                }<br>                else if (table[i, j] == 0) return false;<br>            }<br>        }<br>        return true;<br>    }<br><br>    bool ok(int a, int b)<br>    {<br>        return a &gt;= 0 &amp;&amp; b &gt;= 0 &amp;&amp; a &lt; h &amp;&amp; b &lt; w;<br>    }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>