<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.List;<br>import java.util.ArrayList;<br>import java.util.Collections;<br> <br>/**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> * @author Nova<br> */<br>public class KingdomReorganization {<br> <br>    class Edge implements Comparable&lt;Edge&gt; {<br>        int u, v, w;<br> <br>        Edge() {<br>        }<br> <br>        Edge(int u, int v, int w) {<br>            this.u = u;<br>            this.v = v;<br>            this.w = w;<br>        }<br> <br>        public int compareTo(Edge e) {<br>            return this.w - e.w;<br>        }<br>    }<br> <br>    int[] root;<br>    int n;<br>    ArrayList&lt;Edge&gt; eb;<br>    ArrayList&lt;Edge&gt; ed;<br> <br>    public int findSet(int u) {<br>        if (root[u] == u) root[u] = u;<br>        else root[u] = findSet(root[u]);<br>        return root[u];<br>    }<br> <br>    public void union(int u, int v) {<br>        root[findSet(u)] = root[findSet(v)];<br>    }<br> <br>    public int convert(char c) {<br>        if ((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) return c - 'A';<br>        else return 26 + c - 'a';<br>    }<br> <br> <br>    public int getCost(String[] kingdom, String[] build, String[] destroy) {<br> <br>        n = kingdom.length;<br> <br>        root = new int[n];<br>        eb = new ArrayList&lt;Edge&gt;();<br>        ed = new ArrayList&lt;Edge&gt;();<br> <br>        int sumDestroy = 0;<br>        int sumBuild = 0;<br> <br>        for (int i = 0; i &lt; n; i++)<br>            root[i] = i;<br> <br>        for (int i = 0; i &lt; n; i++)<br>            for (int j = 0; j &lt; n; j++) {<br>                if (kingdom[i].charAt(j) == '1') {<br>                    int w = convert(destroy[i].charAt(j));<br>                    ed.add(new Edge(i, j, w));<br>                    sumDestroy += w;<br>                }<br>                eb.add(new Edge(i, j, convert(build[i].charAt(j))));<br>            }<br> <br>        sumDestroy /= 2;<br> <br>        Collections.sort(ed);<br>        Collections.reverse(ed);<br>        Collections.sort(eb);<br> <br>        int m = ed.size();<br> <br>        for (Edge e : ed) {<br>            if (findSet(e.u) != findSet(e.v)) {<br>                union(e.u, e.v);<br>                sumDestroy -= e.w;<br>            }<br>        }<br> <br>        for (Edge e : eb) {<br>            if (findSet(e.u) != findSet(e.v)) {<br>                union(e.u, e.v);<br>                sumBuild += e.w;<br>            }<br>        }<br> <br>        return sumDestroy + sumBuild;<br>    }<br> <br>}<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.17 [modified TZTester]<br>// Powered by CodeProcessor<br></td>