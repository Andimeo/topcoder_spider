<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class FoxProgression<br>{<br>   public<br>int theCount(int[] seq)<br>{<br> bool isConDiff = true;<br> bool isMultiple = true;<br> int nElements = seq.Length;<br> if (nElements == 1)<br> {<br>  return -1;<br> }<br><br> int nMinus = seq[1] - seq[0];<br> <br> for (int i = 1; i &lt; nElements - 1; i++)<br> {<br>  if (seq[i+1] - seq[i] != nMinus)<br>  {<br>   isConDiff = false;<br>   break;<br>  }<br>  <br>  if (!isConDiff)<br>  {<br>   break;<br>  }<br> }<br><br> int nMultiple = 0;<br> if (seq[1] % seq[0] == 0)<br> {<br>  nMultiple = seq[1] / seq[0];<br>  for (int i = 1; i &lt; nElements - 1; i++)<br>  {<br>   if ((seq[i+1] % seq[i] !=0) || (seq[i+1] / seq[i] != nMultiple))<br>   {<br>    isMultiple = false;<br>    break;<br>   }<br>   if (!isMultiple)<br>   {<br>    break;<br>   }<br>  }<br> }<br> else<br> {<br>  isMultiple = false;<br> }<br><br><br> if (!isConDiff &amp;&amp; !isMultiple)<br> {<br>  return 0;<br> }<br><br> if (isConDiff &amp;&amp; !isMultiple)<br> {<br>  return 1;<br> }<br> else if (!isConDiff &amp;&amp; isMultiple)<br> {<br>  return 1;<br> }<br> else<br> {<br>  int appendingElementMinus = 999999;<br>  int appendingElementMultiple = 999991;<br>  if (isConDiff)<br>  {<br>   appendingElementMinus = seq[seq.Length - 1] + nMinus;<br>  }<br>  if (isMultiple)<br>  {<br>   appendingElementMultiple = seq[seq.Length - 1] * nMultiple;<br>  }<br><br>  if (appendingElementMinus == appendingElementMultiple)<br>  {<br>   return 1;<br>  }<br>  else<br>  {<br>   return 2;<br>  } <br> }<br><br>}<br>}<br></td>