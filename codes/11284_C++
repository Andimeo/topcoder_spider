<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>double f[55][55];<br>double g[55][55];<br> <br>class FoxPlayingGame {<br>public:<br>  double theMax(int na, int nb, int pa, int pb) <br>  {<br>    double sa=(double)pa/1000.0,sb=(double)pb/1000.0;<br>    for (int i=0;i&lt;=na;i++)<br>    for (int j=0;j&lt;=nb;j++)<br>      f[i][j]=-(1e20),g[i][j]=1e20;<br>    f[0][0]=g[0][0]=0;<br>    for (int i=0;i&lt;=na;i++)<br>    for (int j=0;j&lt;=nb;j++)<br>    {<br>      f[i+1][j]=max(f[i+1][j],f[i][j]+sa);<br>      f[i][j+1]=max(f[i][j+1],f[i][j]*sb);<br>      g[i+1][j]=min(g[i+1][j],g[i][j]+sa);<br>      g[i][j+1]=min(g[i][j+1],g[i][j]*sb);<br>      <br>      f[i+1][j]=max(f[i+1][j],g[i][j]+sa);<br>      f[i][j+1]=max(f[i][j+1],g[i][j]*sb);<br>      g[i+1][j]=min(g[i+1][j],f[i][j]+sa);<br>      g[i][j+1]=min(g[i][j+1],f[i][j]*sb);<br>    }<br>    return f[na][nb];<br>    <br>  }<br>};<br> <br> <br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>