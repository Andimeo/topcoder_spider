<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;sstream&gt;<br>using namespace std;<br> <br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;vi&gt; vvi;<br>typedef pair&lt;int,int&gt; ii;<br>#define all(c) (c).begin(),(c).end()<br>#define tr(c,i) for(typeof((c).begin() i = (c).begin(); i != (c).end(); i++)<br>#define present(c,x) ((c).find(x) != (c).end())<br>#define cpresent(c,x) (find(all(c),x) != (c).end())<br> <br> <br> <br>class MarbleDecoration{<br>    public:<br> <br>    int maxLength(int r, int g, int b){<br>        int a[] = {r,g,b};<br>        vector&lt;int&gt; v(a, a+sizeof(a)/sizeof(0));<br>        sort(all(v));<br>        if(v[1]==v[2]) return 2*v[1];<br>        else return 2*v[1] + 1;<br>    }<br> <br>};<br></td>