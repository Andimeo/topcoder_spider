<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define FOR(i,a,b) for(__typeof(b) i=(a);i!=(b);i++)<br>#define REP(i,n) FOR(i,0,n)<br>#define ALL(a) a.begin(),a.end()<br>#define EACH(i,a) FOR(i,a.begin(),a.end())<br>#define PB push_back<br>#define iss istringstream<br>#define SZ(a) (int)a.size()<br>#define CLEAR(a) memset(a,0,sizeof(a))<br>#define ll long long<br> <br>class SubFibonacci {<br>public:<br>  int maxElements(vector &lt;int&gt;);<br>};<br> <br>long long fib[999];<br> <br>inline int calc(vector&lt; int &gt; v) {<br>  if (SZ(v) &lt;= 2) {return SZ(v);}<br>  set&lt; int &gt; st;<br>  REP(i,SZ(v)) {st.insert(v[i]);}<br>  <br>  int s = SZ(v);<br>  int ret = 2;<br>  for(int start = 0 ; start &lt; s ; start++) {<br>    for(int i = start + 1 ; i &lt; s ; i++) {<br>      for(int j = 0 ; fib[j] * v[start] &lt; v[i]; j++) {<br>        int diff = v[i] - fib[j] * v[start];<br>        if ((diff % fib[j + 1]) == 0) {<br>          int y = diff / fib[j + 1];<br>          int x = v[start];<br>          int ct = 2;<br>          for(int k = j + 1 ;; k++) {<br>            long long val = fib[k] * x + fib[k + 1] * y;<br>            if (val &gt; 100000000) {break;}<br>            if (st.count((int)val) &gt; 0) {ct++;}<br>          }<br>          ret = max(ret, ct);<br>        }<br>      }<br>    }<br>  }  <br>  return ret;<br>}<br> <br>int SubFibonacci::maxElements(vector &lt;int&gt; S) {<br>  fib[0] = 0;<br>  fib[1] = 1;<br>  for(int i = 2 ; i &lt; 999 ; i++) {<br>    fib[i] = fib[i - 1] + fib[i - 2];<br>  }<br>  sort(ALL(S));<br>  int ans = 0;<br>  for(int L = 0 ; L &lt; SZ(S) ; L++) {<br>    vector&lt; int &gt; a, b;<br>    for(int i = 0 ; i &lt; L ; i++) {<br>      a.push_back(S[i]);<br>    }<br>    for(int i = L ; i &lt; SZ(S) ; i++) {<br>      b.push_back(S[i]);<br>    }<br>    ans = max(ans, calc(a) + calc(b));<br>  }<br>  return ans;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>