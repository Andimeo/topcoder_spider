<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br><br>    public class DoubleRoshambo<br>    {<br>        public int maxScore(string[] A, string[] E)<br>        {<br>            Dictionary&lt;string, int&gt; eCounts = new Dictionary&lt;string, int&gt;();<br>            foreach (string s in E)<br>            {<br>                if (eCounts.ContainsKey(s))<br>                    eCounts[s] = eCounts[s] + 1;<br>                else<br>                    eCounts[s] = 1;<br>            }<br><br>            int score = 0;<br>            List&lt;string&gt; remaining = new List&lt;string&gt;();<br>            foreach (string s in A)<br>            {<br>                string twoPointCombo = GetTwoPoint(s);<br><br>                if (eCounts.ContainsKey(twoPointCombo))<br>                {<br>                    score += 2;<br>                    eCounts[twoPointCombo] = eCounts[twoPointCombo] - 1;<br>                    if (eCounts[twoPointCombo] == 0)<br>                        eCounts.Remove(twoPointCombo);<br>                }<br>                else<br>                    remaining.Add(s);<br>            }<br><br>            foreach (string s in remaining)<br>            {<br>                string onePointCombo = GetOnePoint(s);<br><br>                if (eCounts.ContainsKey(onePointCombo))<br>                {<br>                    score += 1;<br>                    eCounts[onePointCombo] = eCounts[onePointCombo] - 1;<br>                    if (eCounts[onePointCombo] == 0)<br>                        eCounts.Remove(onePointCombo);<br>                }<br>            }<br><br>            return score;<br>        }<br><br>        private string GetTwoPoint(string s)<br>        {<br>            char[] values = s.ToCharArray();<br>            values[0] = WhatLosesTo(values[0]);<br>            values[1] = WhatLosesTo(values[1]);<br><br>            return new string(values);<br>        }<br><br>        private char WhatLosesTo(char p)<br>        {<br>            switch (p)<br>            {<br>                case 'R':<br>                    return 'S';<br>                case 'P':<br>                    return 'R';<br>                case 'S':<br>                    return 'P';<br>            }<br><br>            return (char)0;<br>        }<br><br>        private string GetOnePoint(string s)<br>        {<br>            char[] values = s.ToCharArray();<br>            values[1] = WhatLosesTo(values[1]);<br><br>            return new string(values);<br>        }<br>    }<br></td>