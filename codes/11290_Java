<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br> <br> <br>public class PickAndDelete<br>{<br>  long mod = 1000000007;<br>  <br>  public int count(String[] S)<br>  {<br>    StringBuilder sb = new StringBuilder();<br>    for (String s : S) {<br>      sb.append(s);<br>    }<br>    String[] toks = sb.toString().split(" ");<br>    int n = toks.length;<br>    int[] a = new int[n];<br>    for (int i = 0; i &lt; n; ++i) {<br>      a[i] = Integer.parseInt(toks[i]);<br>    }<br>    Arrays.sort(a);<br>    //System.out.println(Arrays.toString(a));<br>    long[][] c = new long[n + 1][n + 1];<br>    for (int i = 0; i &lt;= n; ++i) {<br>      for (int j = 1; j &lt; i; ++j) {<br>        c[i][j] = (c[i - 1][j - 1] + c[i - 1][j]) % mod;<br>      }<br>      c[i][0] = c[i][i] = 1;<br>    }<br>    long[][] d = new long[n + 1][n + 1];<br>    d[0][0] = 1;<br>    for (int i = 0; i &lt; n; ++i) {<br>      long pow = 1;<br>      for (int k = 0; k &lt;= n; ++k) {<br>        for (int j = i; j + k &lt;= n; ++j) {<br>          long val = (d[i][j] * pow) % mod;<br>          if (j + k &gt; i) {<br>            d[i + 1][j + k] = (d[i + 1][j + k] + val * c[n - j][k]) % mod;<br>          }<br>        }<br>        pow = (pow * (i == 0 ? a[0] : a[i] - a[i - 1])) % mod;<br>      }<br>      //System.out.println(Arrays.toString(d[i + 1]));<br>    }<br>    return (int)d[n][n];<br>  }<br>  <br> <br>}<br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>