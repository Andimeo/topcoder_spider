<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class StonesGame {<br>public:<br>  string winner(int, int, int, int);<br>};<br> <br>string StonesGame::winner(int N, int M, int K, int L) {<br>  int i;<br>  M --;<br>  L --;<br>  map&lt; int, int &gt; exist;<br>  for ( i = 0; i + K &lt;= N; i ++ )<br>    if ( i &lt;= L &amp;&amp; i + K &gt; L )<br>      exist[ i + K - ( L - i ) - 1 ] = 1;<br>  if ( exist[M] == 1 )<br>    return "Romeo";<br>  for ( i = 0; i + K &lt;= N; i ++ )<br>    if ( i &lt;= M &amp;&amp; i + K &gt; M )<br>      if ( exist[ i + K - ( M - i ) - 1 ] == 0 )<br>        return "Draw";<br>  return "Strangelet";<br>}<br> <br>//<br>//Powered by [KawigiEdit] 2.0!<br></td>