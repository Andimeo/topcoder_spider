<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br><br>public class StonesGame {<br>    public String winner(int N, int M, int K, int L) {<br>        if (romeoCanWin(N, M, K, L)) {<br>            return "Romeo";<br>        } else if (strangeletCanWin(N, M, K, L)) {<br>            return "Strangelet";<br>        } else {<br>            return "Draw";<br>        }<br>    }<br><br>    private boolean strangeletCanWin(int n, int m, int k, int l) {<br>        int left = Math.max(1, m - (k - 1));<br>        int right = Math.min(m, n - (k - 1));<br>        for (int start = left; start &lt;= right; ++start) {<br>            int newM = start + ((k - 1) - (m - start));<br>            if (!romeoCanWin(n, newM, k, l))<br>                return false;<br>        }<br>        return true;<br>    }<br><br>    private boolean romeoCanWin(int n, int m, int k, int l) {<br>        int left = m + l - (k - 1);<br>        int right = m + l + (k - 1);<br>        if (left % 2 == 0 &amp;&amp; right % 2 == 0) {<br>            left /= 2;<br>            right /= 2;<br>            if (left &gt;= 1 &amp;&amp; left &lt;= n &amp;&amp; right &gt;= 1 &amp;&amp; right &lt;= n &amp;&amp; left &lt;= m &amp;&amp; m &lt;= right &amp;&amp; left &lt;= l &amp;&amp; l &lt;= right) {<br>                return true;<br>            } else {<br>                return false;<br>            }<br>        } else {<br>            return false;<br>        }<br>    }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>