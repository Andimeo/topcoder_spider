<td class="problemText" colspan="8" valign="middle" align="left">
            //  SRM 512 (A)<br> <br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cassert&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;utility&gt;<br>#include &lt;numeric&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;bitset&gt;<br>#include &lt;complex&gt;<br> <br>using namespace std;<br> <br>typedef unsigned uint;<br>typedef long long Int;<br>typedef vector&lt;int&gt; vint;<br>typedef pair&lt;int,int&gt; pint;<br>#define mp make_pair<br> <br>template&lt;class T&gt; void pv(T a, T b) { for (T i = a; i != b; ++i) cout &lt;&lt; *i &lt;&lt; " "; cout &lt;&lt; endl; }<br>template&lt;class T&gt; void chmin(T &amp;t, T f) { if (t &gt; f) t = f; }<br>template&lt;class T&gt; void chmax(T &amp;t, T f) { if (t &lt; f) t = f; }<br> <br>const int INF = 1001001;<br> <br>struct MysteriousRestaurant {<br>  <br>  int tr(char c) {<br>    if (isdigit(c)) return  0 + (c - '0');<br>    if (isupper(c)) return 10 + (c - 'A');<br>    if (islower(c)) return 36 + (c - 'a');<br>    return INF;<br>  }<br>  <br>  int maxDays(vector &lt;string&gt; prices, int budget) {<br>    int M = prices.size(), N = prices[0].size();<br>    int ans = 0;<br>    int days;<br>    int i, j, x;<br>    <br>    for (days = 1; days &lt;= M; ++days) {<br>      int sum = 0;<br>      for (i = 0; i &lt; 7; ++i) {<br>        int sho = INF;<br>        for (x = 0; x &lt; N; ++x) {<br>          int tmp = 0;<br>          for (j = i; j &lt; days; j += 7) {<br>            tmp += tr(prices[j][x]);<br>          }<br>          chmin(sho, tmp);<br>        }<br>        sum += sho;<br>      }<br>      if (sum &lt;= budget) {<br>        chmax(ans, days);<br>      }<br>    }<br>    <br>    return ans;<br>    <br>  }<br>  <br>};<br></td>