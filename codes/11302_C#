<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class ColorfulCards <br>{<br>  const int INF = 987654321;<br><br>    static bool IsPrime(int x) {<br>        if (x &lt; 2) return false;<br>        int i = 2;<br>        while (i * i &lt; x &amp; x % i != 0) i++;<br>        return i * i &gt; x;<br>    }<br><br>    int[,] f;<br><br>    const int Good = 2;<br>    const int Bad = 1;<br><br>    int calc(int x, int min) {<br><br>        if (x &gt;= K) {<br>            return Good;<br>        }<br>        if (min &gt; N) {<br>            return Bad;<br>        }<br><br>        if (f[x, min] != 0) return f[x, min];<br>        int res = 0;<br><br>        bool isPrime = colors[x] == 'R';<br>        bool hasGood = false;<br>        for (int i = min; i &lt;= N; i++) {<br>            if (prime[i] == isPrime) {<br>                int tmp = calc(x + 1, i + 1);<br>                if (tmp == Good) {<br>                    good[x, i] = true;<br>                    hasGood = true;<br>                }<br>            }<br>        }<br><br>        res = hasGood ? Good : Bad;<br><br>        return f[x, min] = res;<br>    }<br><br>    bool[] prime;<br>    string colors;<br>    int N, K;<br><br>    bool[,] good;<br><br>  public int[] theCards(int N, string colors) <br>  {<br>        this.colors = colors;<br>        prime = new bool[N + 1];<br>        List&lt;int&gt; all = new List&lt;int&gt;();<br><br>        for (int i = 2; i &lt;= N; i++) {<br>            if (IsPrime(i)) {<br>                prime[i] = true;<br>                all.Add(i);<br>            }<br>        }<br><br>        K = colors.Length;<br>        this.N = N;<br>        <br>        <br>        f = new int[K, N + 1];<br><br>        good = new bool[K, N+1];<br>        calc(0, 1);<br><br>        int[] res = new int[K];<br><br>        for (int i = 0; i &lt; K; i++) {<br>            int count = 0;<br>            int it = 0;<br>            for (int j = 1; j &lt;= N; j++) {<br>                if (good[i, j]) {<br>                    count++;<br>                    it = j;<br>                    if (count &gt;= 2) {<br>                        break;<br>                    }<br>                }<br>            }<br><br>            res[i] = count &gt;= 2 ? -1 : it;<br>        }<br>        return res;<br>  }<br><br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>