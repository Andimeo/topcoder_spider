<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;numeric&gt;<br>using namespace std;<br>typedef long long ll;<br>typedef pair&lt;int,int&gt; pii;<br>#define F0(i,n) for (i = 0; i &lt; n; i++)<br>#define F1(i,n) for (i = 1; i &lt;= n; i++)<br>#define SZ(x) ((int)x.size())<br>const double eps = 1e-8;<br>const double pi = acos(-1.0);<br>const int inf = 1000000009;<br>int i, j, k, m, n, l;<br>vector &lt;int&gt; ans;<br><br>int isp(int x) {<br>  if (x == 1) return 0;<br>  for (int i = 2; i*i &lt;= x; i++)<br>    if (x%i == 0) return 0;<br>  return 1;<br>}<br><br>int a[1001], b[1001], L[1001], R[1001];<br><br>struct ColorfulCards { <br>vector &lt;int&gt; theCards(int N, string colors) { <br>  n = SZ(colors);<br>  F1(i,N) a[i] = isp(i);<br>  F1(i,n) b[i] = (colors[i-1] == 'R');<br>  <br><br>  k = 0;<br>  F1(i,n) {<br>    k++;<br>    while (a[k] != b[i]) k++;<br>    L[i] = k;<br>  }<br><br>    k = N+1;<br>  for (i=n; i&gt;=1; i--) {<br>    k--;<br>    while (a[k] != b[i]) k--;<br>    R[i] = k;<br>  }<br><br>  ans.clear();<br>  F1(i,n) if (L[i] == R[i]) ans.push_back(L[i]);<br>  else ans.push_back(-1);<br><br>  return ans;<br>}  <br> <br>}; <br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>