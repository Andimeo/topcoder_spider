<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class CarrotBoxes {<br>    public double theProbability(String[] information) {<br>        int n = information.length;<br>        int res = n - 1;<br>        for (int skipped = 0; skipped &lt; n; ++skipped) {<br>            boolean[][] see = new boolean[n][n];<br>            for (int i = 0; i &lt; n; ++i)<br>                for (int j = 0; j &lt; n; ++j) {<br>                    if (i != skipped &amp;&amp; j != skipped)<br>                        see[i][j] = information[i].charAt(j) == 'Y';<br>                }<br>            see[skipped][skipped] = true;<br>            for (int k = 0; k &lt; n; ++k)<br>                for (int i = 0; i &lt; n; ++i)<br>                    for (int j = 0; j &lt; n; ++j)<br>                        see[i][j] |= see[i][k] &amp;&amp; see[k][j];<br>            int cnt = 0;<br>            boolean[] mark = new boolean[n];<br>            for (int i = 0; i &lt; n; ++i) {<br>                if (mark[i]) continue;<br>                boolean ok = true;<br>                for (int j = 0; j &lt; n; ++j)<br>                    if (see[j][i] &amp;&amp; !see[i][j])<br>                        ok = false;<br>                if (!ok)<br>                    continue;<br>                ++cnt;<br>                mark[i] = true;<br>                for (int j = 0; j &lt; n; ++j)<br>                    if (see[i][j] &amp;&amp; see[j][i])<br>                        mark[j] = true;<br>            }<br>            res = Math.min(res, cnt - 1);<br>        }<br>        return (n - res) / (double) n;<br>    }<br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>