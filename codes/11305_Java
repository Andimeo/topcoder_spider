<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class StrangeElevator<br>{<br>int[] div1, div2;<br>  int n1, n2;<br> <br>  public int theCount(int H, int N) {<br>    if (H == 1 &amp;&amp; N == 1)<br>      return 1;<br>    if (H % N != 0)<br>      return 0;<br>    H /= N;<br>    n1 = 0;<br>    n2 = 0;<br>    div1 = new int[10000];<br>    div2 = new int[10000];<br>    for (int i = 1; i &lt;= H / i; i++)<br>      if (H % i == 0) {<br>        div1[n1++] = i;<br>        if (i != H / i)<br>          div1[n1++] = H / i;<br>      }<br> <br>    for (int i = 1; i &lt;= N / i; i++)<br>      if (N % i == 0) {<br>        div2[n2++] = i;<br>        if (i != N / i)<br>          div2[n2++] = N / i;<br>      }<br>    Arrays.sort(div1, 0, n1);<br>    Arrays.sort(div2, 0, n2);<br>    int[][][] dyn = new int[2][n1][n2];<br>    dyn[0][0][0] = 1;<br>    dyn[1][0][0] = 1;<br>    for (int i = 0; i &lt; n1; i++)<br>      for (int j = 0; j &lt; n2; j++) {<br>        for (int i1 = 0; i1 &lt; i; i1++)<br>          if (div1[i] % div1[i1] == 0)<br>            dyn[0][i][j] += dyn[1][i1][j];<br>        for (int j1 = 0; j1 &lt; j; j1++)<br>          if (div2[j] % div2[j1] == 0)<br>            dyn[1][i][j] += dyn[0][i][j1];<br>      }<br>    return dyn[0][n1 - 1][n2 - 1] + dyn[1][n1 - 1][n2 - 1];<br>  }<br>  <br>  <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>