<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class ColoredStrokes {<br>public:<br>  int getLeast(vector &lt;string&gt;);<br>};<br> <br>int ColoredStrokes::getLeast(vector &lt;string&gt; s) {<br>  int n = s.size(), m = s[0].length(), i, j, ans = 0;<br>  for (i=0;i&lt;n;i++)<br>    for (j=0;j&lt;m;j++)<br>      if (s[i][j] == 'R' || s[i][j] == 'G')<br>        if (j == 0) ans++; else<br>        if (s[i][j-1] == 'B' || s[i][j-1] == '.') ans++;<br>  for (j=0;j&lt;m;j++)<br>    for (i=0;i&lt;n;i++)<br>      if (s[i][j] == 'B' || s[i][j] == 'G')<br>        if (i == 0) ans++; else<br>        if (s[i-1][j] == 'R' || s[i-1][j] == '.') ans++;<br>  return ans;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>