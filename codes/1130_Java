<td class="problemText" colspan="8" valign="middle" align="left">
            /*/*///*/*/ Powered by radedit!            /*/*/*/*/*/ ;<br>/*/*//*/*/  import java . util .           /*/*/*/*/*/ ;<br>/*/*//*/*/  import java . lang . reflect . /*/*/*/*/*/ ;<br>public class VendingMachine {<br>   boolean ddd = false ;<br>int[] s2ia(String s) {<br>  StringTokenizer t=new StringTokenizer(s.trim(), " ,:");<br>  int[]r=new int[t.countTokens()];<br>  int i=0;<br>  while(t.hasMoreTokens())try{<br>     r[i++]=Integer.parseInt((String)t.nextToken());<br>  }catch(Exception e){};<br>  return r;<br>}<br>  int rr = 0 ;<br>  int w = 0 ;<br>  int pos = 0 ;<br>  void rot(int v) {<br>    rr += Math.min(Math.abs(v-pos), w-Math.abs(v-pos)) ;<br>    pos = v ;<br>    System.out.println("Rotated to " + pos + " rr now " + rr) ;<br>  }<br>  int me(int[][] v) {<br>    int r = 0 ;<br>    int bs = -1 ;<br>    for (int i=0; i&lt;v[0].length; i++) {<br>      int s = 0 ;<br>      for (int j=0; j&lt;v.length; j++) {<br>  s += v[j][i] ;<br>      }<br>      if (s &gt; bs) {<br>  r = i ;<br>  bs = s ;<br>      }<br>    }<br>    System.out.println("Best is " + r) ;<br>    rot(r) ;<br>    return r ;<br>  }<br>  public int motorUse(String[] prices, String[] purchases) {<br>    int i, j, k ;<br>    int lastp = 0 ;<br>    int rows = prices.length ;<br>    int cols = 0 ;<br>    int[][] m = new int[prices.length][] ;<br>    for (i=0; i&lt;rows; i++) {<br>      m[i] = s2ia(prices[i]) ;<br>      cols = m[i].length ;<br>    }<br>    w = cols ;<br>    pos = me(m) ;<br>    for (i=0; i&lt;purchases.length; i++) {<br>      int[] f = s2ia(purchases[i]) ;<br>      if (f[2] &gt;= lastp + 5) {<br>  System.out.println("Rotate") ;<br>  rot(me(m)) ;<br>      }<br>      System.out.println("Purchase at " + f[2]) ;<br>      lastp = f[2] ;<br>      if (m[f[0]][f[1]] == 0) {<br>  return -1 ;<br>      }<br>      rot(f[1]) ;<br>      m[f[0]][f[1]] = 0 ;<br>    }<br>    pos = me(m) ;<br>    return rr ;<br>  }<br>}<br></td>