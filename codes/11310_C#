<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class Painting <br>{<br>  const int INF = 987654321;<br><br>  public int largestBrush(string[] picture) <br>  {<br>        int m = picture.Length;<br>        int n = picture[0].Length;<br><br>        int left = 1;<br>        int right = Math.Min(m, n)+1;<br>        while (right - left &gt; 1) {<br>            int middle = (left + right) / 2;<br>            if (tryit(middle, m, n, picture)) {<br>                left = middle;<br>            }<br>            else {<br>                right = middle;<br>            }<br>        }<br><br>        return left;<br>  }<br><br>    private bool tryit(int size, int m, int n, string[] picture) {<br>        bool[,] done = new bool[m, n];<br><br>        for (int i = 0; i &lt;= m - size; i++) {<br>            for (int j = 0; j &lt;= n - size; j++) {<br>                if (picture[i][j] == 'B') {<br><br>                    bool good = true;<br>                    for (int u = i; u &lt; i + size; u++) {<br>                        for (int v = j; v &lt; j + size; v++) {<br>                            if (picture[u][v] == 'W') {<br>                                good = false;<br>                                break;<br>                            }<br>                        }<br>                    }<br><br>                    if (good) {<br>                        for (int u = i; u &lt; i + size; u++) {<br>                            for (int v = j; v &lt; j + size; v++) {<br>                                done[u, v] = true;<br>                            }<br>                        }<br>                    }<br>                }<br>            }<br>        }<br><br>        for (int i = 0; i &lt; m; i++) {<br>            for (int j = 0; j &lt; n; j++) {<br>                if (picture[i][j] == 'B' &amp;&amp; !done[i, j]) {<br>                    return false;<br>                }<br>            }<br>        }<br><br>        return true;<br>    }<br><br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>