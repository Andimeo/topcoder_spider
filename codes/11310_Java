<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br> <br>public class Painting {<br>  int height;<br>  int width;<br> <br>  public int largestBrush(String[] grid) {<br>    height = grid.length;<br>    width = grid[0].length();<br>    int res = Math.min(height, width);<br>    while (!canPaint(grid, res)) {<br>      --res;<br>    }<br>    return res;<br>  }<br> <br>  private boolean canPaint(String[] grid, int size) {<br>    boolean[][] painted = new boolean[height][width];<br>    for (int i = 0; i + size &lt;= height; ++i) {<br>      for (int j = 0; j + size &lt;= width; ++j) {<br>        boolean ok = true;<br>        for (int x = 0; x &lt; size; ++x) {<br>          for (int y = 0; y &lt; size; ++y) {<br>            if (grid[i + x].charAt(j + y) == 'W') {<br>              ok = false;<br>            }<br>          }<br>        }<br>        if (ok) {<br>          for (int x = 0; x &lt; size; ++x) {<br>            for (int y = 0; y &lt; size; ++y) {<br>              painted[i + x][j + y] = true;<br>            }<br>          }<br>        }<br>      }<br>    }<br>    for (int i = 0; i &lt; height; ++i) {<br>      for (int j = 0; j &lt; width; ++j) {<br>        if (grid[i].charAt(j) == 'B' &amp;&amp; !painted[i][j]) {<br>          return false;<br>        }<br>      }<br>    }<br>    return true;<br>  }<br> <br> <br>}<br>// Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!<br></td>