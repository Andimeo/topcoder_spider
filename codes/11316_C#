<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br> <br>public class FoxStones<br>{<br>  public int getCount(int N, int M, int[] sx, int[] sy)<br>  {<br>        long MOD = 1000000009;<br>        long count = 1;<br>        long[] perms = new long[N * M+1];<br>        perms[0] = 1;<br>        for (int i = 1; i &lt;= N*M; i++)<br>        {<br>            perms[i] = perms[i - 1] * i;<br>            perms[i] %= MOD;<br>        }<br>        Dictionary&lt;string, long&gt; stones = new Dictionary&lt;string, long&gt;();<br>        for (int a = 1; a &lt;= N; a++)<br>        {<br>            for (int b = 1; b &lt;= M; b++)<br>            {<br>                StringBuilder sb = new StringBuilder();<br>                for (int i = 0; i &lt; sx.Length; i++)<br>                {<br>                    int d = Math.Max(Math.Abs(sx[i] - a), Math.Abs(sy[i] - b));<br>                    sb.Append(d.ToString());<br>                    sb.Append(",");<br>                }<br>                if (!stones.ContainsKey(sb.ToString())) stones.Add(sb.ToString(), 0);<br>                stones[sb.ToString()]++;<br>            }<br>        }<br> <br>        foreach (long l in stones.Values)<br>        {<br>            count *= perms[l];<br>            count %= MOD;<br>        }<br>        return (int)count;<br>  }<br> <br> <br>}<br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>