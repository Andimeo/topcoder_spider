<td class="problemText" colspan="8" valign="middle" align="left">
            # include &lt;string&gt;<br># include &lt;vector&gt;<br># include &lt;iostream&gt;<br># include &lt;sstream&gt;<br># include &lt;cstdio&gt;<br># include &lt;cstdlib&gt;<br># include &lt;cmath&gt;<br># include &lt;cctype&gt;<br># include &lt;cstring&gt;<br># include &lt;limits&gt;<br># include &lt;numeric&gt;<br># include &lt;map&gt;<br># include &lt;queue&gt;<br># include &lt;deque&gt;<br># include &lt;set&gt;<br># include &lt;algorithm&gt;<br># include &lt;utility&gt;<br># include &lt;functional&gt;<br># include &lt;stack&gt;<br># include &lt;bitset&gt;<br># include &lt;complex&gt;<br># include &lt;cassert&gt;<br># include &lt;ctime&gt;<br># include &lt;list&gt;<br># include &lt;valarray&gt;<br><br>using namespace std;<br><br>#define MP make_pair<br>#define all(v) (v).begin(),(v).end()<br><br>typedef long long ll;<br>typedef long double ld;<br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt; vector&lt;int&gt; &gt; vvi;<br>typedef vector&lt; vector&lt; vector&lt;int&gt; &gt; &gt; vvvi;<br>typedef vector&lt;bool&gt; vb;<br>typedef vector&lt;ld&gt; vd;<br>typedef pair&lt;int, int&gt; pii;<br>typedef vector&lt;string&gt; vs;<br><br>const long double PI = 3.1415926535897932384626433832795;<br>const long double eps = 1e-10;<br><br>const int MOD = 1000000009;<br><br>class FoxStones<br>{<br>public :<br>  int getCount ( int N, int M, vector &lt;int&gt; sx, vector &lt;int&gt; sy )<br>  {<br>    int res;<br>    map&lt; vector&lt;int&gt;, int&gt; cnt;<br>    for (int row = 1; row &lt;= M; ++row) {<br>      for (int col = 1; col &lt;= N; ++col) {<br>        vector&lt;int&gt; dists;<br>        for (int i = 0; i &lt; sx.size(); ++i) {<br>          int dist = max(abs(sx[i] - col), abs(sy[i] - row));<br>          dists.push_back(dist);<br>        }<br>        cnt[dists]++;<br>      }<br>    }<br>    res = 1;<br>    vector&lt;int&gt; fact(N * M + 1, 1);<br>    for (int i = 2; i &lt;= N * M; ++i) {<br>      fact[i] = (ll(fact[i - 1]) * i) % MOD;<br>    }<br>    for (map&lt;vector&lt;int&gt;, int&gt;::const_iterator it = cnt.begin(); it != cnt.end(); ++it) {<br>      res = (ll(res) * fact[it-&gt;second]) % MOD;<br>    }<br>    return res;<br>  }<br>  <br><br>} ;<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>