<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define SIZE(X) ((int)(X.size()))<br>typedef long long int64;<br> <br>class OneDimensionalBalls<br>{<br>public:<br>  int64 solve(vector&lt;int&gt; a,vector&lt;int&gt; b,int d)<br>  {<br>    sort(a.begin(),a.end());<br>    sort(b.begin(),b.end());<br>    int n=SIZE(a);<br>    int m=SIZE(b);<br>    int64 f[60][60];<br>    memset(f,0,sizeof(f));<br>    f[0][0]=1;<br>    for (int i=0;i&lt;n;i++) for (int j=0;j&lt;m;j++)<br>      if (f[i][j])<br>      {<br>        f[i][j+1]+=f[i][j];<br>        if (abs(a[i]-b[j])==d) f[i+1][j+1]+=f[i][j];<br>      }<br>    int64 R=0;<br>    for (int j=0;j&lt;=m;j++) R+=f[n][j];<br>    return R;<br>  }<br>  int64 countValidGuesses(vector &lt;int&gt; a, vector &lt;int&gt; b)<br>  {<br>    sort(a.begin(),a.end());<br>    sort(b.begin(),b.end());<br>    int64 R=0;<br>    int n=SIZE(a);<br>    int m=SIZE(b);<br>    set&lt;int&gt; M;<br>    for (int i=0;i&lt;n;i++) for (int j=0;j&lt;m;j++) if (a[i]!=b[j]) M.insert(abs(a[i]-b[j]));<br>    for (set&lt;int&gt;::iterator it=M.begin();it!=M.end();++it)<br>    {<br>      int d=*it;<br>      map&lt;int,vector&lt;int&gt; &gt; S1,S2;<br>      for (int i=0;i&lt;n;i++)<br>        S1[a[i]%(d+d)].push_back(a[i]);<br>      for (int i=0;i&lt;m;i++)<br>        S2[b[i]%(d+d)].push_back(b[i]);<br>      int64 cnt=1;<br>      for (map&lt;int,vector&lt;int&gt; &gt;::iterator it=S1.begin();it!=S1.end();++it)<br>      {<br>        int key=it-&gt;first;<br>        key=(key+d)%(d+d);<br>        if (S2.find(key)==S2.end())<br>        {<br>          cnt=0;<br>          break;<br>        }<br>        cnt*=solve(S1[it-&gt;first],S2[key],d);<br>      }<br>      R+=cnt;<br>    }<br>    return R;<br>  }<br>};<br></td>