<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br> <br> <br>public class OneDimensionalBalls<br>{<br>  public long countValidGuesses(int[] a, int[] b)<br>  {<br>    Arrays.sort(a);<br>    int n = a.length;<br>    int m = b.length;<br>    HashSet&lt;Integer&gt; ks = new HashSet&lt;Integer&gt;();<br>    HashSet&lt;Integer&gt; bs = new HashSet&lt;Integer&gt;();<br>    for (int i : b) {<br>      bs.add(i);<br>    }<br>    ks.add(0);<br>    HashMap&lt;Integer, Integer&gt; as = new HashMap&lt;Integer, Integer&gt;();<br>    for (int i = 0; i &lt; n; ++i) {<br>      as.put(a[i], i);<br>    }<br>    long ans = 0;<br>    for (int first = 0; first &lt; m; ++first) {<br>      int k = Math.abs(a[0] - b[first]);<br>      if (ks.contains(k)) {<br>        continue;<br>      }<br>      ks.add(k);<br>      boolean[] col = new boolean[n];<br>      long count = 1;<br>      for (int i = 0; i &lt; n; ++i) {<br>        if (col[i]) {<br>          continue;<br>        }<br>        col[i] = true;<br>        int j = i;<br>        while (bs.contains(a[j] + k) &amp;&amp; as.containsKey(a[j] + 2 * k)) {<br>          j = as.get(a[j] + 2 * k);<br>          col[j] = true;<br>        }<br>        int c = (bs.contains(a[i] - k) ? 1 : 0) + (bs.contains(a[j] + k) ? 1 : 0);<br>        if (c == 0) {<br>          count = 0;<br>        } else if (c == 2) {<br>          count *= (a[j] - a[i]) / (2 * k) + 2;<br>        }<br>      }<br>      ans += count;<br>      //System.out.println(k + " " + count);<br>    }<br>    return ans;<br>    <br>  }<br>  <br> <br>}<br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>