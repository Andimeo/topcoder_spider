<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;deque&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br><br>using namespace std;<br><br>int min(int a,int b){<br>  return (a&gt;b)?b:a;<br>}<br><br>int max(int a,int b){<br>  return (a&gt;b)?a:b;<br>}<br><br>int sqrt(int n){<br>  for(int i=0; i*i&lt;=n; i++)<br>    if (i*i==n) return i;<br>  return -1;<br>}<br><br>class CubeRoll {<br>public:<br>  int getMinimumSteps(int initPos, int goalPos, vector &lt;int&gt; holePos) {<br>    //case 0<br>    int a=min(initPos,goalPos), b=max(initPos,goalPos);<br>    int l=-1,r=100001;<br>    vector &lt;int&gt; h = holePos;<br>    for(int i=0; i&lt;h.size(); i++){<br>      if(a&lt;=h[i] &amp;&amp; b&gt;=h[i]) return -1;<br>      if(h[i]&lt;a)<br>  l = max(l,h[i]);<br>      if(h[i]&gt;b)<br>  r = min(r,h[i]);<br>    }<br><br>    //case 1<br>    if(l==-1 || r == 100001){<br>      int k = b-a;<br>      int j=sqrt(k);<br>      if(j!=-1) return 1;<br>      if(((k&amp;1)==1) || (((k/2)&amp;1)==0)) return 2;<br>      for(j=1; j*j&lt;k; j++){<br>  int jj = sqrt(k-j*j);<br>  if (jj!=-1) return 2;<br>      }<br>      return 3;<br>    }<br><br>    //case 2;<br>    deque&lt;int&gt; map(100001,-1);<br>    map[a] = 0;<br>    bool flag = true;<br>    for(int cnt=0; flag; cnt++){<br>      flag = false;<br>      for(int i=l; i&lt;=r; i++){<br>  if(map[i] == cnt){<br>    if(i==b) return cnt;<br>    for(int j=1; i-j*j&gt;l; j++)<br>      if(map[i-j*j]==-1){<br>        flag = true;<br>        map[i-j*j] = cnt+1;<br>      }<br>    for(int j=1; i+j*j&lt;r; j++)<br>      if(map[i+j*j]==-1){<br>        flag = true;<br>        map[i+j*j] = cnt+1;<br>      }<br>  }<br>      }<br>    }<br>    return -1;<br>  }<br>};<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>