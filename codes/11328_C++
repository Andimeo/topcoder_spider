<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;cmath&gt;<br>using namespace std;<br>class WhiteSpaceEditing <br>{<br>  int n, dp[100][100];<br>  int dg(int l, int r)<br>  {<br>    if(dp[l][r] != -1) return dp[l][r];<br>    if((l + 1) &gt;= r) return dp[l][r] = 0;<br>    int ret = 999999999;<br>    for(int i = l + 1; i &lt; r; i++)<br>      ret = min(ret, min((l == 0 ? dp[i][i] : abs(dp[l][l] - dp[i][i])) + dg(l, i) + dg(i, r), (r == n ? dp[i][i] : abs(dp[r][r] - dp[i][i])) + dg(l, i) + dg(i, r)));<br>    return dp[l][r] = ret;<br>  }<br>public:<br>  int getMinimum(vector &lt;int&gt; lines)<br>  {<br>    int n = lines.size() + 1;<br>    memset(dp, -1, sizeof(dp));<br>    for(int i = 0; i &lt; lines.size(); i++) dp[i + 1][i + 1] = lines[i];<br>    return dg(0, n) + lines.size() - 1;<br>  }<br>};<br></td>