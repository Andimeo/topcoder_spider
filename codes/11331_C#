<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br>using System.Text;<br><br>class Card : IComparable&lt;Card&gt;<br>{<br>    public string s;<br>    public int v;<br>    public bool used;<br><br>    public int CompareTo(Card other)<br>    {<br>        return v.CompareTo(other.v);<br>    }<br>}<br><br>class PalindromeGame<br>{<br>    public int getMaximum(string[] front, int[] back)<br>    {<br>        int n = front.Length;<br>        Card[] cards = new Card[n];<br><br>        for (int i = 0; i &lt; n; i++)<br>        {<br>            cards[i] = new Card();<br>            cards[i].s = front[i];<br>            cards[i].v = back[i];<br>            cards[i].used = false;<br>        }<br><br>        Array.Sort&lt;Card&gt;(cards);<br>        Array.Reverse(cards);<br>        int sum = 0;<br><br>        for(int i = 0; i &lt; n - 1; i++)<br>            for (int j = i + 1; j &lt; n; j++)<br>            {<br>                if (cards[i].used || cards[j].used)<br>                    continue;<br><br>                char[] ca = cards[j].s.ToCharArray();<br>                Array.Reverse(ca);<br><br>                string s = new string(ca);<br>                if (s == cards[i].s)<br>                {<br>                    sum += cards[i].v + cards[j].v;<br>                    cards[i].used = cards[j].used = true;<br>                }<br>            }<br><br>        for (int i = 0; i &lt; n; i++)<br>        {<br>            if (cards[i].used)<br>                continue;<br><br>            char[] ca = cards[i].s.ToCharArray();<br>            Array.Reverse(ca);<br>            string s = new string(ca);<br><br>            if (cards[i].s == s)<br>            {<br>                sum += cards[i].v;<br>                cards[i].used = true;<br>                break;<br>            }<br><br>        }<br><br>        return sum;<br>    }<br>}<br></td>