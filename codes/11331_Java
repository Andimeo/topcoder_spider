<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class PalindromeGame<br>{<br>  public int getMaximum(String[] front, int[] back)<br>  {<br>    int res=0;<br>    boolean[] use=new boolean[front.length];<br>    boolean find=false;<br>    for(;;){<br>      find=false;<br>      int max=0,a,b;<br>      a=b=-1;<br>      for(int i=0;i&lt;front.length;i++){<br>        for(int j=0;j&lt;front.length;j++){<br>          if(i!=j &amp;&amp; !use[i] &amp;&amp; !use[j] &amp;&amp; isPalindrome(front[i], front[j]) ){<br>            <br>            find=true;<br>            if((back[i]+back[j])&gt;max){<br>              max=back[i]+back[j];<br>              a=i;<br>              b=j;<br>            }<br>            <br>          }<br>        }<br>      }<br>      if(!find)<br>        break;<br>      use[a]=true;<br>      use[b]=true;<br>      res+=max;<br>    }<br>    int max=0;<br>    for(int i=0;i&lt;front.length;i++){<br>      if(!use[i] &amp;&amp; isPalindorme(front[i]))<br>        max=Math.max(max, back[i]);<br>    }<br>    res+=max;<br>    return res;<br>  }<br>  boolean isPalindrome(String a,String b){<br>    int n=a.length();<br>    for(int i=0;i&lt;n;i++){<br>      if(a.charAt(i)!=b.charAt(n-1-i))<br>        return false;<br>    }<br>    return true;<br>  }<br>  boolean isPalindorme(String a){<br>    int i=0,j=a.length()-1;<br>    while(i&lt;j){<br>      if(a.charAt(i)!=a.charAt(j))<br>        return false;<br>      i++;<br>      j--;<br>    }<br>    return true;<br>  }<br>  <br>  <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>