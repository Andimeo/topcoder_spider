<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br> <br>public class FoxAverageSequence<br>{<br>    private int[] G;<br>    private int N;<br>    private int[,,,] cache;<br>    private int MD = 1000000007;<br> <br>    int Go(int h,int last,int sum,int down)<br>    {<br>        if (h==N)<br>        {<br>            return 1;<br>        }<br>        if (G[h]&gt;=0)<br>        {<br>            if (G[h]*h&gt;sum)<br>            {<br>                return 0;<br>            }<br>            if (G[h]&gt;=last)<br>            {<br>                return Go(h + 1, G[h], sum + G[h], 0);<br>            }<br>            else<br>            {<br>                if (down==0)<br>                {<br>                    return Go(h + 1, G[h], sum + G[h], 1);<br>                }<br>                else<br>                {<br>                    return 0;<br>                }<br>            }<br>        }<br>        if (cache[h,last,sum,down]&gt;=0)<br>        {<br>            return cache[h, last, sum, down];<br>        }<br>        int ret = 0;<br>        for (int i = 0; i &lt; 41; i++)<br>        {<br>            if (i*h&gt;sum)<br>            {<br>                break;<br>            }<br>            if (i &gt;= last)<br>            {<br>                ret+= Go(h + 1, i, sum + i, 0);<br>            }<br>            else if (down == 0)<br>            {<br>                ret+= Go(h + 1, i, sum + i, 1);<br>            }<br>            if (ret&gt;=MD)<br>            {<br>                ret -= MD;<br>            }<br>            <br>        }<br>        return cache[h, last, sum, down] = ret;<br>    }<br> <br> <br> <br>  public int theCount(int[] seq)<br>  {<br>      G = seq;<br>      N = G.Length;<br>        cache = new int[N,41,1601,2];<br>      for (int i = 0; i &lt; N; i++)<br>      {<br>          for (int j = 0; j &lt; 41; j++)<br>          {<br>              for (int k = 0; k &lt; 1601; k++)<br>              {<br>                    cache[i, j, k, 0] = -1;<br>                    cache[i, j, k, 1] = -1;<br>                }<br>          }<br>      }<br>      int ret = 0;<br>      if (G[0]==-1)<br>      {<br>          for (int i = 0; i &lt; 41; i++)<br>          {<br>              ret += Go(1, i, i, 0);<br>                if (ret &gt;= MD)<br>                {<br>                    ret -= MD;<br>                }<br>            }<br>      }<br>      else<br>      {<br>          ret = Go(1, G[0], G[0], 0);<br>      }<br>      return ret;<br> <br>  }<br> <br> <br>}<br>//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!<br></td>