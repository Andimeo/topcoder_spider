<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System<br>Imports System.Collections<br>Imports System.Collections.Generic<br>Imports System.Text<br>Imports System.Math<br>Imports Weight = System.Int32<br>Public Class MafiaGame<br>    Public Function probabilityToLose(ByVal N As Integer, ByVal decisions As Integer()) As Double<br>        Dim i As Integer, j As Integer<br>        Dim Temp As New Dictionary(Of Integer, Integer), Temp2() As Integer = Array.CreateInstance(GetType(Integer), 51)<br>        Dim Vote As New List(Of Integer)<br>        probabilityToLose = 0.0<br>        For Each t As Integer In decisions<br>            If Temp.ContainsKey(t) Then Temp(t) += 1 Else Temp(t) = 1<br>        Next<br>        For Each t As KeyValuePair(Of Integer, Integer) In Temp<br>            Temp2(t.Value) += 1<br>        Next<br>        For i = 50 To 1 Step -1<br>            For j = 0 To Temp2(i) - 1<br>                Vote.Add(i)<br>            Next<br>        Next<br>        Dim Res() As Integer = Array.CreateInstance(GetType(Integer), N + 1)<br>        Dim Enable As Integer = N<br>        Dim Min_Val As Integer = 999999<br>        Dim Next_(N) As Double<br>        For i = 0 To N<br>            Next_(i) = 1<br>        Next<br>        Dim Exit_ As Integer<br>        Do Until Enable = 0<br>            Exit_ = Enable<br> <br>            For i = 0 To N - 1<br>                Res(i) = 0<br>            Next<br>            Dim Can As Integer = N<br>            For i = 0 To Min(Enable, Vote.Count) - 1<br>                Res(i) = Vote(i)<br>                Can -= Res(i)<br>            Next<br>            Do<br>                Min_Val = 9999999<br>                For i = 0 To Enable - 1<br>                    Min_Val = Min(Res(i), Min_Val)<br>                Next<br>                Dim MinCount As Integer = 0<br>                For i = 0 To Enable - 1<br>                    If Min_Val = Res(i) Then<br>                        MinCount += 1<br>                    End If<br>                Next<br>                If MinCount &lt;= Can Then<br>                    For i = 0 To Enable - 1<br>                        If Min_Val = Res(i) Then<br>                            Res(i) += 1<br>                            Can -= 1<br>                        End If<br>                    Next<br>                Else<br>                    Dim Max_Val As Integer = -1<br>                    For i = 0 To Enable - 1<br>                        Max_Val = Max(Max_Val, Res(i))<br>                    Next<br>                    If Max_Val &gt; Min_Val + 1 Then<br>                        Dim NEnable As Integer = 0<br>                        For i = 0 To Enable - 1<br>                            If Res(i) = Max_Val Then<br>                                NEnable += 1<br>                            End If<br>                        Next<br>                        Enable = NEnable<br>                        If NEnable = 1 Then<br>                            probabilityToLose = Next_(0)<br>                            Exit Function<br>                        End If<br>                        Exit Do<br>                    ElseIf Min_Val = Max_Val Then<br>                        For i = 0 To N<br>                            Next_(i) *= CType(Can, Double) / Enable<br>                        Next<br>                        Enable = Can<br>                        If Enable = 0 Then Enable = Exit_<br>                        Exit Do<br>                    Else<br>                        Dim NEnable As Integer = 0<br>                        For i = 0 To Enable - 1<br>                            If Res(i) = Max_Val Then<br>                                NEnable += 1<br>                            End If<br>                        Next<br>                        Enable = Can + NEnable<br>                        Exit Do<br>                    End If<br>                End If<br>            Loop<br>            If Enable = Exit_ Then Exit Do<br>            If Enable = 1 Then<br>                probabilityToLose = Next_(0)<br>                Enable -= 1<br>            End If<br>        Loop<br>    End Function<br>End Class<br></td>