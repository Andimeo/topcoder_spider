<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> */<br>public class Suminator {<br>    public int findMissing(int[] program, int wantedResult) {<br>        int minusOneAt = -1;<br>        for (int i = 0; i &lt; program.length; ++i)<br>            if (program[i] == -1)<br>                minusOneAt = i;<br>        program[minusOneAt] = 0;<br>        if (eval(program) == wantedResult) {<br>            return 0;<br>        }<br>        program[minusOneAt] = 1;<br>        long r1 = eval(program);<br>        if (r1 == wantedResult) {<br>            return 1;<br>        }<br>        program[minusOneAt] = 2;<br>        long r2 = eval(program);<br>        if (r2 == r1)<br>            return -1;<br>        long delta = wantedResult - r1;<br>        if (delta % (r2 - r1) != 0)<br>            return -1;<br>        delta /= r2 - r1;<br>        if (delta &gt;= 0)<br>            return (int) (delta + 1);<br>        return -1;<br>    }<br> <br>    private long eval(int[] program) {<br>        long[] stack = new long[210];<br>        int sp = 100;<br>        for (int x : program) {<br>            if (x == 0) {<br>                long a = stack[sp - 1];<br>                long b = stack[sp - 2];<br>                --sp;<br>                stack[sp - 1] = a + b;<br>            } else {<br>                stack[sp++] = x;<br>            }<br>        }<br>        return stack[sp - 1];<br>    }<br>}<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.16 [modified TZTester]<br>// Powered by CodeProcessor<br></td>