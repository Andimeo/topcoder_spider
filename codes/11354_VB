<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System<br>Imports System.Collections<br>Imports System.Text<br>Imports System.Collections.Generic<br>Imports System.Math<br> <br>Public Class Suminator<br>    Public Function pop(ByRef s As Stack(Of Long)) AS LOng<br>        If s.Count = 0 Then<br>            Return 0<br>        Else<br>            Return s.Pop<br>        End If<br>    End Function<br>    Public Function doIt(ByVal Program As Long()) As Long<br>        Dim s As New Stack(Of Long)<br>        For Each t As Long In Program<br>            If t = 0 Then<br>                Dim v As Long = pop(s) + pop(s)<br>                s.Push(v)<br>            Else<br>                s.Push(t)<br>            End If<br>        Next<br>        Return pop(s)<br>    End Function<br>    Public Function findMissing(ByVal program As Integer(), ByVal wantedResult As Integer) As Integer<br>        Dim i As Integer, j As Integer<br>        Dim _Program(program.Length - 1) As Long<br>        Dim index As Integer = -1<br>        For i = 0 To program.Length - 1<br>            _Program(i) = program(i)<br>            If _Program(i) = -1 Then<br>                index = i<br>                _Program(i) = 0<br>            End If<br>        Next<br>        If doIt(_Program) = wantedResult Then<br>            Return 0<br>        End If<br>        Dim v1 As Long, v2 As Long<br>        _Program(index) = 100<br>        v1 = doIt(_Program)<br>        _Program(index) = 1<br>        v2 = doIt(_Program)<br>        If v1 &lt;&gt; v2 Then<br>            ' [\u20516][\u12395][\u24433][\u38911][\u12354][\u12426]<br>            v1 = v2 - 1<br>            Dim ret As Long = wantedResult - v1<br>            If ret &gt; 0 Then<br>                Return ret<br>            End If<br> <br>        End If<br>        Return -1<br>    End Function<br>End Class<br></td>