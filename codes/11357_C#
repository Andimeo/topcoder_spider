<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class TheProgrammingContestDivOne<br>{<br>  public int find(int T, int[] maxPoints, int[] pointsPerMinute, int[] requiredTime)<br>  {<br>        int n = maxPoints.Length;<br>        for (int i = 0; i &lt; n; ++i)<br>            for (int j = i + 1; j &lt; n; ++j)<br>                if ((long)requiredTime[i] * (long)pointsPerMinute[j] &gt; (long)requiredTime[j] * (long)pointsPerMinute[i])<br>                {<br>                    int t = maxPoints[i];<br>                    maxPoints[i] = maxPoints[j];<br>                    maxPoints[j] = t;<br>                    t = pointsPerMinute[i];<br>                    pointsPerMinute[i] = pointsPerMinute[j];<br>                    pointsPerMinute[j] = t;<br>                    t = requiredTime[i];<br>                    requiredTime[i] = requiredTime[j];<br>                    requiredTime[j] = t;<br>                }<br>        long[] dp = new long[T + 1];<br>        for (int i = 0; i &lt;= T; ++i)<br>            dp[i] = 0;<br>        for (int i = 0; i &lt; n; ++i)<br>            for (int j = T; j &gt;= requiredTime[i]; --j)<br>                dp[j] = Math.Max(dp[j], dp[j - requiredTime[i]] + maxPoints[i] - (long)pointsPerMinute[i] * j);<br>        long results = 0;<br>        for (int i = 0; i &lt;= T; ++i)<br>            results = Math.Max(results, dp[i]);<br>        return (int)results;<br>  }<br>}<br></td>