<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;cstring&gt;<br> <br>using namespace std;<br> <br> <br> <br>class TheProgrammingContestDivOne <br>{<br>  public:<br>    struct node<br>    {<br>      int a,b,c;<br>    } p[55];<br>    int opt[55][100010];<br> <br>    int find(int T, vector &lt;int&gt; x, vector &lt;int&gt; y, vector &lt;int&gt; z) <br>    {<br>      int n=x.size();<br>      for (int i=1;i&lt;=n;i++) {p[i].a=x[i-1];p[i].b=y[i-1];p[i].c=z[i-1];}<br>      for (int i=1;i&lt;=n;i++)<br>      for (int j=i+1;j&lt;=n;j++)<br>      if (((long long)p[i].c*p[j].b&gt;(long long)p[i].b*p[j].c))<br>        swap(p[i],p[j]);<br>        <br>      memset(opt,0,sizeof(opt));<br>      for (int i=0;i&lt;n;i++) <br>      for (int j=0;j&lt;=T;j++)<br>      {<br>        opt[i+1][j]=max(opt[i+1][j],opt[i][j]);<br>        if (j+p[i+1].c&lt;=T &amp;&amp; (long long)opt[i][j]+(long long)p[i+1].a-(long long)(j+p[i+1].c)*p[i+1].b&gt;=0) opt[i+1][j+p[i+1].c]=max((long long)opt[i+1][j+p[i+1].c],<br>              (long long)opt[i][j]+(long long)p[i+1].a-(long long)(j+p[i+1].c)*p[i+1].b<br>              );<br>      }<br>      int res=0;<br>      for (int i=0;i&lt;=T;i++) res=max(res,opt[n][i]);<br>      return res;<br>    }<br>};<br> <br> <br> <br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>