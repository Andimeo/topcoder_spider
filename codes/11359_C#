<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br>using System.Text;<br>public class TheLotteryBothDivs<br>    {<br>        Dictionary&lt;int, double&gt; rating = new Dictionary&lt;int, double&gt;();<br>        public TheLotteryBothDivs()<br>        {<br><br>            rating.Add(1, 0.1);<br>            rating.Add(2, 0.01);<br>            rating.Add(3, 0.001);<br>            rating.Add(4, 0.0001);<br>            rating.Add(5, 0.00001);<br>            rating.Add(6, 0.000001);<br>            rating.Add(7, 0.0000001);<br>            rating.Add(8, 0.00000001);<br>            rating.Add(9, 0.000000001);<br>        }<br><br>        public double find(String[] goodSuffixes)<br>        {<br>            //{48,4848}<br><br>            double probability = 0.000000000;<br>            List&lt;string&gt; strList = new List&lt;string&gt;();<br>            strList.AddRange(goodSuffixes);<br>            for (int i = 0; i &lt; strList.Count; i++)<br>            {<br>                string str = strList[i];<br>                removeEnd(i, str, strList);<br>            }<br>            for (int i = 0; i &lt; strList.Count; i++)<br>            {<br>                string s = strList[i].Trim();<br>                double d = getValueof(s);<br>                probability += d;<br>            }<br>            if (probability.ToString().Length &gt;= 11)<br>                return double.Parse(probability.ToString().Substring(0, 11));<br>            return probability;<br>        }<br><br>        string trimZero(string s)<br>        {<br>            return s.TrimStart('0');<br>        }<br><br>        void removeEnd(int index, string s, List&lt;string&gt; list)<br>        {<br>            for (int i = 0; i &lt; list.Count; i++)<br>            {<br>                if (i != index &amp;&amp; !string.IsNullOrEmpty(list[i]) &amp;&amp; list[i].EndsWith(s) &amp;&amp; !string.IsNullOrEmpty(s))<br>                {<br>                    list[i] = string.Empty;<br>                }<br>            }<br>        }<br><br>        double getValueof(string s)<br>        {<br>            if (string.IsNullOrEmpty(s))<br>                return 0;<br>            return rating[s.Length];<br>        }<br><br>    }<br></td>