<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class PrefixFreeSuperset {<br>    public long minSumLength(string[] cur, long k)<br>    {<br>        int i, j;<br>        long sum = 0;<br>        int len = cur.Length;<br>        long d = 0;<br>        for (i = 0; i &lt; len; i++)<br>        {<br>            d += cur[i].Length;<br>            sum += (long)1 &lt;&lt; (51 - cur[i].Length);<br>        }<br>        if (len == k) return d;<br>        if (sum &gt;= (long)1 &lt;&lt; 51)<br>        {<br>            return -1;<br>        }<br>        long now = 1;<br>        long[] freepair = new long[100];<br>        long[] usenum = new long[100];<br>        for (i = 1; ; i++)<br>        {<br>            Dictionary&lt;string, int&gt; dic = new Dictionary&lt;string, int&gt;();<br>            now *= 2;<br>            for (j = 0; j &lt; len; j++)<br>            {<br>                if (cur[j].Length == i)<br>                {<br>                    now -= 1;<br>                }<br>                else if (cur[j].Length &gt; i)<br>                {<br>                    dic[cur[j].Substring(0, i)] = 1;<br>                }<br>            }<br>            long next = now - dic.Count;<br>            if (next &gt;= k - len)<br>            {<br>                long dis = next - (k - len);<br>                long dissum = 0;<br>                usenum[i] = next;<br>                for (j = i - 1; j &gt;= 0; j--)<br>                {<br>                    long nextdis = Math.Min(freepair[j], dis);<br>                    dissum += nextdis * (j + 2);<br>                    dis -= nextdis;<br>                    usenum[j + 1] -= nextdis * 2;<br>                    usenum[j] += nextdis;<br>                }<br>                for (j = i; j &gt;= 0; j--)<br>                {<br>                    long nextdis = Math.Min(usenum[j], dis);<br>                    dissum += nextdis * j;<br>                    dis -= nextdis;<br>                    usenum[j] -= dissum;<br>                }<br>                return d + next * i - dissum;<br>            }<br>            else<br>            {<br>                freepair[i] = next;<br>            }<br>        }<br><br><br>    }<br><br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>