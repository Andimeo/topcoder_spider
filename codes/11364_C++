<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br><br>using namespace std;<br><br>typedef long long int64;<br>template&lt;class T&gt; inline T gcd(T a,T b)<br>  {if(a&lt;0)return gcd(-a,b);if(b&lt;0)return gcd(a,-b);return (b==0)?a:gcd(b,a%b);}<br><br>class FoxAndGCDLCM<br>{<br>public:<br>  int64 solve(int64 L)<br>  {<br>    int64 ret=-1;<br>    for (int64 a=1;a*a&lt;=L;a++)<br>      if (L%a==0 &amp;&amp; gcd(a,L/a)==1)<br>      {<br>        int64 s=a+L/a;<br>        if (ret&lt;0 || s&lt;ret) ret=s;<br>      }<br>    return ret;<br>  }<br>  int64 get(int64 G, int64 L)<br>  {<br>    if (L%G!=0) return -1;<br>    int64 ret=solve(L/G);<br>    if (ret&lt;0) return -1;<br>    return ret*G;<br>  }<br>};<br></td>