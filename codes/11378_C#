<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br> <br>public class IPv444<br>{<br>    private int N;<br>    private int[] GP;<br>    private string[][] ip;<br> <br>    long Go(int h,List&lt;int&gt; td)<br>    {<br>        if (h==4)<br>        {<br>            long ret1 = 0;<br>            foreach (int i in td)<br>            {<br>                ret1 = Math.Max(ret1, GP[i]);<br>            }<br>            return ret1;<br>        }<br>        Dictionary&lt;int, List&lt;int&gt;&gt; next = new Dictionary&lt;int, List&lt;int&gt;&gt;();<br>        List&lt;int&gt; st = new List&lt;int&gt;();<br>        foreach (int i in td)<br>        {<br>            if (ip[i][h].Equals("*"))<br>            {<br>                st.Add(i);<br>            }<br>            else<br>            {<br>                int t1 = int.Parse(ip[i][h]);<br>                if (next.ContainsKey(t1))<br>                {<br>                    next[t1].Add(i);<br>                }<br>                else<br>                {<br>                    next.Add(t1,new List&lt;int&gt;());<br>                    next[t1].Add(i);<br> <br>                }<br>            }<br>        }<br>        long ret = 0;<br>        foreach (KeyValuePair&lt;int, List&lt;int&gt;&gt; pair in next)<br>        {<br>            List&lt;int&gt; nn = new List&lt;int&gt;();<br>            nn.AddRange(pair.Value);<br>            nn.AddRange(st);<br>            ret += Go(h + 1, nn);<br>        }<br>        ret = ret + (1000 - next.Keys.Count)*Go(h + 1, st);<br>        return ret;<br>    }<br>  public long getMaximumMoney(string[] request, int[] price)<br>  {<br>      N = request.Length;<br>        ip = new string[N][];<br>      GP = price;<br>      for (int i = 0; i &lt; N; i++)<br>      {<br>          ip[i] = request[i].Split('.');<br>      }<br>        List&lt;int&gt; all = new List&lt;int&gt;();<br>      for (int i = 0; i &lt; N; i++)<br>      {<br>          all.Add(i);<br>      }<br>      return Go(0, all);<br>  }<br> <br> <br>}<br>//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!<br></td>