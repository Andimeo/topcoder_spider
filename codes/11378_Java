<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class IPv444 {<br>  public long getMaximumMoney(String[] request, int[] price) {<br>        int[][] req = new int[request.length][4];<br>        for (int i = 0; i &lt; request.length; ++i) {<br>            String[] part = request[i].split("[.]");<br>            for (int j = 0; j &lt; 4; ++j) {<br>                if (part[j].equals("*"))<br>                    req[i][j] = -1;<br>                else<br>                    req[i][j] = Integer.parseInt(part[j]);<br>            }<br>        }<br>        int[] size = new int[4];<br>        for (int j = 0; j &lt; 4; ++j) {<br>            TreeMap&lt;Integer, Integer&gt; all = new TreeMap&lt;Integer, Integer&gt;();<br>            for (int i = 0; i &lt; req.length; ++i)<br>                if (req[i][j] != -1)<br>                    all.put(req[i][j], 0);<br>            List&lt;Integer&gt; keys = new ArrayList&lt;Integer&gt;(all.keySet());<br>            for (int i = 0; i &lt; keys.size(); ++i) {<br>                all.put(keys.get(i), i);<br>            }<br>            size[j] = keys.size();<br>            for (int i = 0; i &lt; req.length; ++i)<br>                if (req[i][j] != -1)<br>                    req[i][j] = all.get(req[i][j]);<br>        }<br>        int[][][][] best = new int[size[0] + 1][size[1] + 1][size[2] + 1][size[3] + 1];<br>        for (int i = 0; i &lt; req.length; ++i) {<br>            int[] min = new int[4];<br>            int[] max = new int[4];<br>            for (int j = 0; j &lt; 4; ++j)<br>                if (req[i][j] == -1) {<br>                    min[j] = 0;<br>                    max[j] = size[j];<br>                } else {<br>                    min[j] = req[i][j];<br>                    max[j] = req[i][j];<br>                }<br>            for (int a0 = min[0]; a0 &lt;= max[0]; ++a0)<br>                for (int a1 = min[1]; a1 &lt;= max[1]; ++a1)<br>                    for (int a2 = min[2]; a2 &lt;= max[2]; ++a2)<br>                        for (int a3 = min[3]; a3 &lt;= max[3]; ++a3) {<br>                            best[a0][a1][a2][a3] = Math.max(best[a0][a1][a2][a3], price[i]);<br>                        }<br>        }<br>    long res = 0;<br>        for (int a0 = 0; a0 &lt;= size[0]; ++a0)<br>            for (int a1 = 0; a1 &lt;= size[1]; ++a1)<br>                for (int a2 = 0; a2 &lt;= size[2]; ++a2)<br>                    for (int a3 = 0; a3 &lt;= size[3]; ++a3) {<br>                        long cnt = 1;<br>                        if (a0 == size[0])<br>                            cnt *= 1000 - size[0];<br>                        if (a1 == size[1])<br>                            cnt *= 1000 - size[1];<br>                        if (a2 == size[2])<br>                            cnt *= 1000 - size[2];<br>                        if (a3 == size[3])<br>                            cnt *= 1000 - size[3];<br>                        res += cnt * best[a0][a1][a2][a3];<br>                    }<br>    return res;<br>  }<br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>