<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class YetAnotherORProblem {<br>    public int countSequences(long[] R)<br>    {<br>        int len = R.Length;<br>        int i, j, k;<br>        int dplen = 1 &lt;&lt; len;<br>        long[] dp = new long[dplen];<br>        int[] maxbit = new int[len];<br>        int max = 0;<br>        long MOD = 1000000009;<br>        for (i = 0; i &lt; len; i++)<br>        {<br>            for (j = 1; ; j++)<br>            {<br>                if ((long)1 &lt;&lt; (j - 1) &lt;= R[i])<br>                {<br>                    maxbit[i] = j;<br>                    max = Math.Max(j, max);<br>                }<br>                else break;<br>            }<br>        }<br><br>        dp[0] = 1;<br>        for (i = 0; i &lt; max; i++)<br>        {<br>            long[] nextdp = new long[dplen];<br>            for (j = 0; j &lt; dplen; j++)<br>            {<br>                int nextbit = 0;<br>                for (k = 0; k &lt; len; k++)<br>                {<br>                    if ((j &gt;&gt; k) % 2 == 1 &amp;&amp; (R[k] &gt;&gt; i) % 2 == 0) nextbit |= (1 &lt;&lt; k);<br>                }<br>                nextdp[nextbit] += dp[j];<br>                nextdp[nextbit] %= MOD;<br>                for (k = 0; k &lt; len; k++)<br>                {<br>                    int nnb = nextbit;<br>                    if (i &gt;= maxbit[k]) continue;<br>                    if ((j &gt;&gt; k) % 2 == 1 &amp;&amp; i + 1 == maxbit[k]) continue;<br>                    if ((j &gt;&gt; k) % 2 == 1 || (R[k] &gt;&gt; i) % 2 == 0) nnb |= (1 &lt;&lt; k);<br>                    nextdp[nnb] += dp[j];<br>                    nextdp[nnb] %= MOD;<br>                }<br>            }<br>            dp = (long[])nextdp.Clone();<br>        }<br>        long res = 0;<br>        for (j = 0; j &lt; dplen; j++)<br>        {<br>            res += dp[j];<br>            res %= MOD;<br>        }<br>        return (int)res;<br>    }<br><br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>