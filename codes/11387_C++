<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;list&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>using namespace std;<br> <br>#define debug(x)<br> <br>class FoxAndFlowerShopDivOne {<br>  public:<br>    int solve(vector &lt;string&gt; f, int diff)<br>    {<br>        int H=f.size();<br>        int W=f[0].size();<br>        if(H==1)<br>            return -1;<br>        int lsum[50][50]={{}}, psum[50][50]={{}};<br>        for(int y=0; y&lt;H; y++)<br>            for(int x=0; x&lt;W; x++){<br>                lsum[y+1][x+1]=lsum[y][x+1]+lsum[y+1][x]-lsum[y][x]+(f[y][x]=='L');<br>                psum[y+1][x+1]=psum[y][x+1]+psum[y+1][x]-psum[y][x]+(f[y][x]=='P');<br>            }<br>        int res=-1;<br>        for(int i=1; i&lt;H; i++)<br>        {<br>            int max1[2000]={};<br>            int max2[2000]={};<br>            fill(max1, max1+2000, -1);<br>            fill(max2, max2+2000, -1);<br>            for(int x1=0; x1&lt;W; x1++)<br>                for(int x2=x1; x2&lt;W; x2++)<br>                    for(int y1=0; y1&lt;i; y1++)<br>                        for(int y2=y1; y2&lt;i; y2++){<br>                            int P=psum[y2+1][x2+1]-psum[y2+1][x1]-psum[y1][x2+1]+psum[y1][x1];<br>                            int L=lsum[y2+1][x2+1]-lsum[y2+1][x1]-lsum[y1][x2+1]+lsum[y1][x1];<br>                            max1[P-L+1000]=max(max1[P-L+1000], L+P);<br>                        }<br>            for(int x1=0; x1&lt;W; x1++)<br>                for(int x2=x1; x2&lt;W; x2++)<br>                    for(int y1=i; y1&lt;H; y1++)<br>                        for(int y2=y1; y2&lt;H; y2++){<br>                            int P=psum[y2+1][x2+1]-psum[y2+1][x1]-psum[y1][x2+1]+psum[y1][x1];<br>                            int L=lsum[y2+1][x2+1]-lsum[y2+1][x1]-lsum[y1][x2+1]+lsum[y1][x1];<br>                            max2[P-L+1000]=max(max2[P-L+1000], L+P);<br>                        }<br>            for(int a=0; a&lt;2000; a++)<br>                for(int b=0; b&lt;2000; b++){<br>                    if(max1[a]&gt;=0 &amp;&amp; max2[b]&gt;=0 &amp;&amp; abs(a+b-2000)&lt;=diff){<br>                        res=max(res, max1[a]+max2[b]);<br>                    }<br>                }<br>        }<br>        return res;<br>    }<br> <br>  int theMaxFlowers(vector &lt;string&gt; flowers, int maxDiff) {<br>        vector&lt;string&gt; rev(flowers[0].size(), string(flowers.size(), '.'));<br>        for(int i=0; i&lt;flowers.size(); i++)<br>            for(int j=0; j&lt;flowers[0].size(); j++)<br>                rev[j][i]=flowers[i][j];<br>        return max(solve(flowers, maxDiff), solve(rev, maxDiff));<br>  }<br> <br> <br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>