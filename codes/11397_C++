<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;sstream&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;queue&gt;<br>#include &lt;string&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cmath&gt;<br>#include &lt;functional&gt;<br>#include &lt;cstring&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstdio&gt;<br><br>using namespace std;<br><br>#define all(X) (X).begin(), (X).end() <br><br>#define sz(a) int((a).size())<br><br>class PerfectSequences {<br>public:<br>  string fixIt(vector &lt;int&gt; seq);<br>};<br><br>const long long INF = 100000000000LL;<br><br>bool isok(vector&lt;int&gt; seq, int none)<br>{<br>  long long sum = 0, mul = 1;<br>  for (int i = 0; i &lt; sz(seq); ++i) {<br>    if (i == none) continue;<br>    sum += seq[i];<br>    if (mul != 0) {<br>      if (INF / mul &lt; seq[i]) {<br>        mul = INF;<br>      }<br>      else {<br>        mul *= seq[i];<br>      }<br>    }<br>  }<br>  if (mul == 0) {<br>    if (sum == 0) {<br>      return seq[none] != 0;<br>    }<br>    else {<br>      return false;<br>    }<br>  }<br>  else {<br>    --mul;<br>    if (mul == 0) return false;<br>    if (sum % mul == 0) {<br>      int how = sum / mul;<br>      return seq[none] != how;<br>    }<br>    else {<br>      return false;<br>    }<br>  }<br>}<br><br>string PerfectSequences::fixIt(vector &lt;int&gt; seq)<br>{<br>  if (seq.size() == 1) return "Yes";<br>  for (int i = 0; i &lt; sz(seq); ++i) {<br>    if (isok(seq, i)) {<br>      return "Yes";<br>    }<br>  }<br>  return "No";<br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>