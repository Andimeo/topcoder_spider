<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;numeric&gt;<br>using namespace std;<br>typedef long long ll;<br>typedef pair&lt;int,int&gt; pii;<br>#define F0(i,n) for (i = 0; i &lt; n; i++)<br>#define F1(i,n) for (i = 1; i &lt;= n; i++)<br>#define SZ(x) ((int)x.size())<br>const double eps = 1e-8;<br>const double pi = acos(-1.0);<br>const int inf = 1000000009;<br>int i, j, k, m, n, l;<br>int ans;<br><br>int d[101][101], v[101];<br><br>struct RectangleArea { <br>int minimumQueries(vector &lt;string&gt; s) { <br>  m = SZ(s);<br>  n = SZ(s[0]);<br><br>  memset(d, 0, sizeof(d));<br>  memset(v, 0, sizeof(v));<br>  F0(i,m) F0(j,n) if (s[i][j] == 'Y') d[i][j+m] = d[j+m][i] = 1;<br><br>  n = m + n;<br>  F0(k,n) F0(i,n) F0(j,n) if (d[i][k] &amp;&amp; d[k][j]) d[i][j] = 1;<br><br>  ans = -1;<br>  F0(i,n) if (!v[i]) {<br>    ans++;<br>    F0(j,n) if (d[i][j]) v[j] = 1;<br>  }<br>  return ans;<br>}  <br> <br>}; <br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>