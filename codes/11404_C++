<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br><br>typedef long long LL;<br>using namespace std;<br>#define PI 3.1415926535897932384626433832795<br>int ABS(int x)<br>{<br>  return x &gt; 0 ? x : -x;<br>}<br><br>struct SkewedPerspectives<br>{<br>  vector&lt;string&gt; areTheyPossible(vector&lt;int&gt; cubes, int B, int w, vector&lt;string&gt; view)<br>  {<br>    vector&lt;string&gt; ans;<br><br>    for(int t=0; t&lt;view.size(); ++t)<br>    {<br>      string s = view[t];<br>      int b = B;<br>      vector&lt;int&gt; a = cubes;<br><br>      int n = s.size();<br>      s = '0' + s;<br>      bool ok = true;<br>      vector&lt;int&gt; r;<br>      r.clear();<br>      for(int i=n; i&gt;=1; i--)<br>      {<br>        if (s[i] != 'b')<br>        {<br>          a[ s[i] - '0' ]--;<br>        }<br>        else<br>        {<br>          int j = i;<br>          while (s[j] == 'b') j--;<br><br>          if ((i - j) % 2 == 0)<br>          {<br>            b -= (i-j+1)/2;<br>            i = j + 1;<br>          }<br>          else<br>          {<br>            if (j-1&gt;=0)<br>            {<br>              b -= (i-j+1)/2;<br>              r.push_back(j - 1);<br>              i = j + 1;<br>            }<br>            else<br>            {<br>              if (i-j==1 &amp;&amp; i==1)<br>              {<br>                ok = false;<br>                break;<br>              }<br>              b -= (i-j-1)/2;<br>              r.push_back(j + 1);<br>              i = j + 3;<br>            }<br>          }<br>          //i = j + 1;<br>        }<br>      }<br><br>      if (r.size() &gt; 0 &amp;&amp; r.size() + 1 &gt; w) ok = false;<br>      if (b &lt; 0) ok = false;<br>      if (a[0] &lt; 0 || a[1] &lt; 0 || a[2] &lt; 0) ok = false;<br>      for(int i=0; i&lt;r.size(); ++i) if (r[i] &lt; 0) ok = false;<br><br>      if (ok)<br>      {<br>        for(int i=0; i&lt;r.size(); ++i) <br>          while (r[i] &gt; 1 &amp;&amp; b &gt; 0) r[i] -= 2, b--;<br><br>        int sum = a[0] + a[1] + a[2];<br>        for(int i=0; i&lt;r.size(); ++i) sum -= r[i];<br>        if (sum &lt; 0) ok = false;<br><br>      }<br><br>      if (ok) <br>        ans.push_back("valid");<br>      else<br>        ans.push_back("invalid");<br>    }<br>    return ans;<br>  }<br>};<br></td>