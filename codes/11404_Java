<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br> <br> <br>public class SkewedPerspectives<br>{<br>  public String[] areTheyPossible(int[] cubes, int B, int W, String[] views)<br>  {<br>    String valid = "valid", invalid = "invalid";<br>    <br>    String[] res = new String[views.length];<br>    for(int i = 0; i &lt; views.length; i++)<br>    {<br>      int[] copyCubes = new int[3];<br>      for(int j = 0; j &lt; 3; j++)<br>      {<br>        copyCubes[j] = cubes[j];<br>      }<br>      int b = B;<br>      int w = W;<br>      res[i] = possible(copyCubes, b, w, views[i]) ? valid : invalid;<br>    }<br>    return res;<br>  }<br>  <br>  private boolean possible(int[] cubes, int b, int w, String view) {<br>    int n = view.length();<br>    int widthNeeded = 1;<br>    for(int i = 0; i &lt; n; i++)<br>    {<br>      if (view.charAt(i) == 'b')<br>      {<br>        if (i &lt; n - 1 &amp;&amp; view.charAt(i+1) == 'b')<br>        {<br>          i++;<br>        } else<br>        {<br>          widthNeeded++;<br>        }<br>        b--;<br>        <br>      } else<br>      {<br>        cubes[view.charAt(i) - '0']--;<br>      }<br>    }<br>    if (b &lt; 0 || widthNeeded &gt; w || (view.charAt(0) == 'b' &amp;&amp; (n &lt; 2 || view.charAt(1) != 'b'))) return false;<br>    int singles = 0;<br>    int doubles = b;<br>    for(int i = 0; i &lt; 3; i++)<br>    {<br>      if (cubes[i] &lt; 0) return false;<br>      singles += cubes[i];<br>    }<br>    if (view.equals("21b"))<br>      System.out.println("TEST");<br>    int height = 0;<br>    for(int i = 0; i &lt; n; i++)<br>    {<br>      if (view.charAt(i) == 'b')<br>      {<br>        int blacks = 1;<br>        for(int j = i+1; j &lt; n; j++)<br>        {<br>          if (view.charAt(j) == 'b')<br>            blacks++;<br>          else<br>            break;<br>        }<br>        if (i == 0 || blacks % 2 == 0)<br>        {<br>          height += 2;<br>          i++;<br>        } else<br>        {<br>          for(int j = 0; j &lt; height - 1; j++)<br>          {<br>            if (j + 1 &lt; height - 1 &amp;&amp; doubles &gt; 0)<br>            {<br>              j++;<br>              doubles--;<br>            } else if (singles &gt; 0)<br>            {<br>              singles--;<br>            } else<br>            {<br>              return false;<br>            }<br>          }<br>          height++;<br>        }        <br>      } else<br>      {<br>        height++;<br>      }<br>    }<br>    <br>    return true;<br>  }<br>  <br> <br>}<br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>