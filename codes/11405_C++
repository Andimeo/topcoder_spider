<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;utility&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br><br>using namespace std;<br><br>#define REP(i,n) for((i)=0;(i)&lt;(int)(n);(i)++)<br><br>typedef long long ll;<br>#define INF (1ll&lt;&lt;60)<br>#define _abs(x) ((x)&gt;0?(x):-(x))<br><br>#define MAX 110<br><br>int N;<br>ll seq[60];<br>ll a[60];<br>ll b[60];<br><br>class PerfectSequences2{<br>  public:<br>  <br>  ll allzero(void){<br>    int i;<br>    <br>    ll sum = 0;<br>    REP(i,N) sum += seq[i];<br>    <br>    ll ans = INF;<br>    REP(i,N) ans = min(ans, _abs(seq[i]) + _abs(sum - seq[i]));<br>    return ans;<br>  }<br>  <br>  ll stayone(void){<br>    int i,j;<br>    <br>    ll ans = INF;<br>    if(N%4 != 1) return ans;<br>    <br>    REP(i,N){<br>      int half = N/2;<br>      REP(j,half) b[j] = 1;<br>      REP(j,half) b[half+j] = -1;<br>      b[2*half] = seq[i];<br>      sort(b,b+N);<br>      <br>      ll tmp = 0;<br>      REP(j,N) tmp += _abs(seq[j]-b[j]);<br>      ans = min(ans,tmp);<br>    }<br>    <br>    return ans;<br>  }<br>  <br>  ll func(void){<br>    int n,plus,minus,i;<br>    ll ans = INF;<br>    <br>    for(n=-30;n&lt;=30;n++) REP(plus,N+1) REP(minus,N+1) if(n+plus-minus == -n &amp;&amp; minus%2 == 1 &amp;&amp; plus+minus == N-1){<br>      REP(i,plus) b[i] = 1;<br>      REP(i,minus) b[plus+i] = -1;<br>      b[N-1] = n;<br>      sort(b,b+N);<br>      <br>      ll tmp = 0;<br>      REP(i,N) tmp += _abs(seq[i]-b[i]);<br>      ans = min(ans,tmp);<br>    }<br>    <br>    return ans;<br>  }<br>  <br>  ll check(int pos, int sum, int prod){<br>    int plus,minus,i;<br>    ll ans = INF;<br>    <br>    REP(plus,N+1) REP(minus,N+1) if(pos+plus+minus == N){<br>      int sum2 = sum + plus - minus;<br>      int prod2 = prod; if(minus%2 == 1) prod2 = -prod2;<br>      if(sum2 != prod2) continue;<br>      <br>      REP(i,pos) b[i] = a[i];<br>      REP(i,plus) b[pos+i] = 1;<br>      REP(i,minus) b[pos+plus+i] = -1;<br>      sort(b,b+N);<br>      <br>      ll tmp = 0;<br>      REP(i,N) tmp += _abs(seq[i]-b[i]);<br>      ans = min(ans,tmp);<br>    }<br>    <br>    return ans;<br>  }<br>  <br>  ll dfs(int prev, int pos, int sum, int prod){<br>    int i;<br>    <br>    ll ans = check(pos,sum,prod);<br>    <br>    for(i=prev;i&lt;=MAX;i++) if(i &lt;= -2 || i &gt;= 2){<br>      a[pos] = i;<br>      if(prod*i &gt;= -MAX &amp;&amp; prod*i &lt;= MAX){<br>        a[pos] = i;<br>        ll tmp = dfs(i,pos+1,sum+i,prod*i);<br>        ans = min(ans,tmp);<br>      }<br>    }<br>    <br>    return ans;<br>  }<br><br>  long long minimumMoves(vector &lt;int&gt; _seq){<br>    int i;<br>    <br>    N = _seq.size();<br>    REP(i,N) seq[i] = _seq[i];<br>    sort(seq,seq+N);<br>    <br>    ll ans = dfs(-MAX,0,0,1);<br>    ans = min(ans,allzero());<br>    ans = min(ans,stayone());<br>    ans = min(ans,func());<br>    <br>    return ans;<br>  }<br><br>};<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>