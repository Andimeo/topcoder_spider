<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System<br>Imports System.Collections<br>Imports System.Text<br> <br>Public Class AllButOneDivisor<br>  Public Function GCD(Byval A As Integer, B As Integer) As Integer<br>  <br>    Dim C As Integer = Math.Min(A,B)<br>    Dim D As Integer = Math.Max(A,B)<br>    <br>    If D Mod C = 0 Then <br>      Return C<br>    Else<br>      Return GCD(C, D Mod C)<br>    End If<br>    <br>  End Function<br>  Public Function LCM(Byval A As Integer, B As Integer) As Integer<br>    Return A * B / GCD(A,B)<br>  End Function<br>  Public Function getMinimum(ByVal divisors As Integer()) As Integer<br>    <br>    Dim BestAns As Integer = 10^9<br>    <br>    Dim nd As Integer = divisors.getupperbound(0)<br>    Dim I As Integer, J As Integer<br>    Dim TempAns As Integer<br>    <br>    For I = 0 to nd<br>    <br>      ' omit I<br>      <br>      TempAns = 1<br>      <br>      For J = 0 to nd<br>      <br>        If J &lt;&gt; I Then<br>          TempAns = LCM(TempAns,divisors(J))<br>        End If<br>      <br>      Next J<br>      <br>      If TempAns Mod divisors(I) &lt;&gt; 0 Then<br>        BestAns = Math.Min(BestAns,TempAns)<br>      End If<br>        <br>    Next I<br>    <br>    If BestAns = 10^9<br>      Return -1<br>    Else<br>      Return BestAns<br>    End If<br>    <br>  End Function<br>End Class<br></td>