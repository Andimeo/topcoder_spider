<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br> <br>public class STable<br>{<br>  int n, m;<br>  long[,] len;<br>  char [,] ch;<br>  void f()<br>  {<br>    long[,] r = new long[n + 1, m + 1];<br>    ch = new char[n + 1, m + 1];<br>    for(int i=0; i&lt;=n; i++)<br>    {<br>      for(int j=0; j&lt;=m; j++)<br>      {<br>        if(i == 0 || j == 0)<br>        {<br>          r[i,j] = 1;<br>          if(i == 0 &amp;&amp; j &gt; 0)<br>          {<br>            ch[i, j] = t[j - 1];<br>          }<br>          else if(j == 0 &amp;&amp; i &gt; 0)<br>          {<br>            ch[i, j] = s[i - 1];<br>          }<br>        }<br>        else<br>        {<br>          r[i,j] = r[i-1,j] + r[i, j-1];<br>          ch[i, j] = (char)Math.Min(ch[i-1, j], ch[i, j - 1]);<br>        }<br>      }<br>    }<br>    r[0,0] = 0;<br>    len = r;<br>  }<br>  bool[,,,] cmp;<br>  void getCmp()<br>  {<br>    cmp = new bool[n + 1, m + 1, n + 1, m + 1];<br>    for(int sum=0; sum&lt;=n+m; sum ++)<br>    {<br>      for(int x1=0; x1&lt;=n; x1++)<br>      {<br>        int y1 = sum - x1;<br>        if(y1 &lt; 0 || y1 &gt; m)<br>          continue;<br>        for(int x2=x1+1; x2&lt;=n; x2 ++)<br>        {<br>          int y2 = sum - x2;<br>          if(y2 &lt; 0 || y2 &gt; m)<br>            continue;<br>          bool val;<br>          if(x1 == 0 || y2 == 0)<br>          {<br>            val = (ch[x1, y1] &lt; ch[x2, y2]);<br>          }<br>          else<br>          {<br>            int nx1 = cmp[x1 - 1, y1, x1, y1 - 1] ? (x1 - 1) : x1;<br>            int ny1 = cmp[x1 - 1, y1, x1, y1 - 1] ? y1 : (y1 - 1);<br>            int nx2 = cmp[x2 - 1, y2, x2, y2 - 1] ? (x2 - 1) : x2;<br>            int ny2 = cmp[x2 - 1, y2, x2, y2 - 1] ? y2 : (y2 - 1);        <br>            if(nx1 == nx2 &amp;&amp; ny1 == ny2)<br>            {<br>              val = cmp[x1 + x1 - 1 - nx1, y1 + y1 - 1 - ny1, x2 + x2 - 1 - nx2, y2 + y2 - 1 - ny2];<br>            }<br>            else<br>            {<br>              val = cmp[nx1, ny1, nx2, ny2];<br>            }<br>          }<br>          cmp[x1, y1, x2, y2] = val;<br>          cmp[x2, y2, x1, y1] = !val;<br>          //Console.WriteLine(x1 + " " + y1 + " " + x2 + " " + y2 + " " + val);<br>        }<br>      }<br>    }<br>  }<br>  char getC(int x, int y, long p)<br>  {<br>    while(true)<br>    {<br>      //Console.WriteLine(x + " " + y + " " + p);<br>      if(x == 0 || y == 0)<br>        return ch[x, y];<br>      if(cmp[x - 1, y, x, y - 1])<br>      {<br>        long l = len[x - 1, y];<br>        if(p &lt; l)<br>        {<br>          x --;          <br>        }<br>        else<br>        {<br>          p -= l;<br>          y --;<br>        }<br>      }<br>      else<br>      {<br>        long l = len[x, y - 1];<br>        if(p &lt; l)<br>        {<br>          y --;          <br>        }<br>        else<br>        {<br>          p -= l;<br>          x --;<br>        }<br>      }<br>    }    <br>  }<br>  string s, t;<br>  public string getString(string _s, string _t, long p)<br>  {<br>    s = _s;<br>    t = _t;<br>    n = s.Length;<br>    m = t.Length;<br>    f();<br>    getCmp();<br>    string ret = "";<br>    long tl = len[n, m];<br>    for(int i=0; i&lt;50; i++)<br>    {<br>      if(p + i &lt; tl)<br>        ret += getC(n, m, p + i);<br>      //Console.WriteLine();<br>    }<br>    return ret;<br>  }<br> <br> <br>}<br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>