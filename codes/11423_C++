<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br><br>using namespace std;<br><br>#define LENGTH(X) ((int)(X.length()))<br>typedef long long int64;<br>template&lt;class T&gt; inline void checkmin(T &amp;a,T b){if(b&lt;a) a=b;}<br><br>class STable<br>{<br>public:<br>  int n,m;<br>  char a[35],b[35];<br>  int cmp[35][35][35][35];<br>  int64 L[35][35];<br>  int p[35][35];<br>  int compare(char a,char b)<br>  {<br>    if (a==b) return 0;<br>    return (a&lt;b)?-1:1;<br>  }<br>  int compare(int x1,int y1,int x2,int y2)<br>  {<br>    if (x1==x2 &amp;&amp; y1==y2) return 0;<br>    int &amp;ret=cmp[x1][y1][x2][y2];<br>    if (ret!=-2) return ret;<br>    char f1=127,f2=127;<br>    for (int i=1;i&lt;=n;i++)<br>    {<br>      if (y1&gt;0 &amp;&amp; i&lt;=x1) checkmin(f1,a[i]);<br>      if (y2&gt;0 &amp;&amp; i&lt;=x2) checkmin(f2,a[i]);<br>    }<br>    for (int i=1;i&lt;=m;i++)<br>    {<br>      if (x1&gt;0 &amp;&amp; i&lt;=y1) checkmin(f1,b[i]);<br>      if (x2&gt;0 &amp;&amp; i&lt;=y2) checkmin(f2,b[i]);<br>    }<br>    if (y1==0) f1=a[x1];<br>    if (x1==0) f1=b[y1];<br>    if (y2==0) f2=a[x2];<br>    if (x2==0) f2=b[y2];<br>    if (f1!=f2) return ret=compare(f1,f2);<br>    int tmp=compare(p[x1][y1]?(x1-1):x1,p[x1][y1]?y1:(y1-1),p[x2][y2]?(x2-1):x2,p[x2][y2]?y2:(y2-1));<br>    if (tmp!=0) return ret=tmp;<br>    return ret=compare((!p[x1][y1])?(x1-1):x1,(!p[x1][y1])?y1:(y1-1),(!p[x2][y2])?(x2-1):x2,(!p[x2][y2])?y2:(y2-1));<br>  }<br>  char getAt(int x,int y,int64 l)<br>  {<br>    if (x==0) return b[y];<br>    if (y==0) return a[x];<br>    int x2=x,y2=y,x3=x,y3=y;<br>    if (p[x][y]) x2--,y3--;<br>    else y2--,x3--;<br>    if (l&lt;L[x2][y2]) <br>      return getAt(x2,y2,l);<br>    else <br>      return getAt(x3,y3,l-L[x2][y2]);<br>  }<br>  string getString(string s, string t, int64 pos)<br>  {<br>    n=LENGTH(s);<br>    m=LENGTH(t);<br>    for (int i=1;i&lt;=n;i++) a[i]=s[i-1];<br>    for (int i=1;i&lt;=m;i++) b[i]=t[i-1];<br>    for (int a=0;a&lt;35;a++) for (int b=0;b&lt;35;b++) for (int c=0;c&lt;35;c++) for (int d=0;d&lt;35;d++) cmp[a][b][c][d]=-2;<br>    for (int i=0;i&lt;=n;i++) for (int j=0;j&lt;=m;j++)<br>    {<br>      if (i+j==0) continue;<br>      if (i==0 || j==0)<br>      {<br>        L[i][j]=1;<br>        continue;<br>      }<br>      L[i][j]=L[i-1][j]+L[i][j-1];<br>      p[i][j]=(compare(i-1,j,i,j-1)&lt;0)?1:0;<br>    }<br>    string R="";<br>    for (int i=0;i&lt;50;i++) if (pos+i&lt;L[n][m]) R+=getAt(n,m,pos+i);<br>    return R;<br>  }<br>};<br></td>