<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br><br>public class KindAndCruel {<br>  public int crossTheField (String f, int K, int C) {<br>    int N = f.length ();<br>    boolean [][] D = new boolean [500000][N];<br>    D[0][0] = true;<br>    for (int i = 0; i &lt; 499999; i++) {<br>      boolean canGood = (i + 1) % K != 0;<br>      boolean canBad = (i + 1) % C == 0;<br>      for (int j = 0; j &lt; N; j++) if (D[i][j]) {<br>        if (j != 0) {<br>          if (f.charAt (j - 1) == '.') D[i + 1][j - 1] = true; else<br>          if (f.charAt (j - 1) == 'K' &amp;&amp; canGood) D[i + 1][j - 1] = true; else<br>          if (f.charAt (j - 1) == 'C' &amp;&amp; canBad) D[i + 1][j - 1] = true;<br>        }<br>        if (f.charAt (j) == '.') D[i + 1][j] = true; else<br>        if (f.charAt (j) == 'K' &amp;&amp; canGood) D[i + 1][j] = true; else<br>        if (f.charAt (j) == 'C' &amp;&amp; canBad) D[i + 1][j] = true;<br>        if (j != N - 1) {<br>          if (f.charAt (j + 1) == '.') D[i + 1][j + 1] = true; else<br>          if (f.charAt (j + 1) == 'K' &amp;&amp; canGood) D[i + 1][j + 1] = true; else<br>          if (f.charAt (j + 1) == 'C' &amp;&amp; canBad) D[i + 1][j + 1] = true;<br>        }<br>      }<br>      if (D[i + 1][N - 1]) return i + 1;<br>    }<br><br>    return -1;<br>  };<br>};<br></td>