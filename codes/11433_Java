<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.Arrays;<br> <br>public class TheTicketsDivTwo {<br>  <br>  double[][][] memo;<br>  <br>  public double find(int n, int m, int k) {<br>    memo = new double[n+1][n+1][k+1];<br>    for(double[][] me:memo)for(double[] mem:me)Arrays.fill(mem, -1);<br>    return r(n, m-1, k);<br>  }<br>  <br>  public double r(int n, int m, int k){<br>    //System.out.println("At " + n + " " + m + " " + k);<br>    if(memo[n][m][k] == -1){<br>      if(n==1){<br>        return 1;<br>      }else if(k == 0){<br>        if(m == 0)<br>          return 1;<br>        else<br>          return 0;<br>      }else{<br>        double sum = 0;<br>        //Roll the bones<br>        for(int i = 1; i &lt;= 6; i++){<br>          //1 in 6 chance of each event occurring:<br>          if(i == 4){<br>            if(m == 0){<br>              sum += 1./6.;<br>            }<br>          }else if(i%2 == 0){<br>            if(m == 0){<br>              sum += 0; //No chance of continuing<br>            }else{<br>              sum += 1./6. * r(n-1, m-1, k-1);<br>            }<br>          }else{<br>            if(m == 0){<br>              sum += 1./6. * r(n, n-1, k-1);<br>            }else{<br>              sum += 1./6. * r(n, m-1, k-1);<br>            }<br>          }<br>        }<br>        <br>        memo[n][m][k] = sum;<br>      }<br>    }<br>    return memo[n][m][k];<br>  }<br>}<br></td>