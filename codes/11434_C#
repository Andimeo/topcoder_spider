<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br><br>public class DivideAndShift<br>{<br>  private bool[] pr = null;<br>  public int getLeast( int N, int M )<br>  {<br>    if ( pr == null )<br>    {<br>      pr = _.Sieve( N + 10 );<br>    }<br>    int res = Math.Min( M - 1, N - M + 1 );<br>    for ( int p = 2; p &lt;= N; ++p ) if ( N % p == 0 &amp;&amp; !pr[p] )<br>      {<br>        res = Math.Min( res, 1 + getLeast( N / p, M % ( N / p ) == 0 ? N / p : M % ( N / p ) ) );<br>      }<br>    return res;<br>  }<br><br>}<br><br><br>#region Prewritten<br><br>static class _<br>{<br>  #region _.Sieve(<br>  public static bool[] Sieve( int n )<br>  {<br>    bool[] res = new bool[n];<br>    if ( n &gt; 0 ) res[0] = true;<br>    if ( n &gt; 1 ) res[1] = true;<br>    for ( int i = 2; i * i &lt; n; ++i )<br>      if ( !res[i] )<br>        for ( int j = i * i; j &lt; n; j += i )<br>          res[j] = true;<br>    return res;<br>  }<br>  #endregion<br>}<br><br>#endregion<br><br><br>// Powered by FileEdit<br>// Powered by moj 4.16 [modified TZTester]<br>// Powered by CleanSharp 1.0<br>// Powered by CodeProcessor<br></td>