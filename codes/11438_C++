<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class SquaredSubsets {<br>public:<br>  long long countSubsets(int, vector &lt;int&gt;, vector &lt;int&gt;);<br>};<br> <br>long long SquaredSubsets::countSubsets(int sz, vector &lt;int&gt; x, vector &lt;int&gt; y) {<br>  int n = x.size();<br>  vector&lt;int&gt; xx, yy;<br>  sz *= 2;<br>  for (int i = 0; i &lt; n; i++)  <br>  {<br>    x[i] *= 2;<br>    xx.push_back(x[i]);<br>    xx.push_back(x[i] - sz - 1);<br>    y[i] *= 2;<br>    yy.push_back(y[i]);<br>    yy.push_back(y[i] - sz - 1);<br>  }<br>  set&lt;long long&gt; res;<br>  for (int i = 0; i &lt; xx.size(); i++)<br>    for (int j = 0; j &lt; yy.size(); j++)<br>    {<br>      int X = xx[i];<br>      int Y = yy[j];<br>      long long mask = 0;<br>      for (int k = 0; k &lt; n; k++) if (x[k] &gt;= X &amp;&amp; x[k] &lt;= X + sz &amp;&amp; y[k] &gt;= Y &amp;&amp; y[k] &lt;= Y + sz) mask |= 1ll &lt;&lt; k;<br>      if (mask) res.insert(mask);<br>    }<br>  return res.size();<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>