<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;  <br>#include &lt;iostream&gt;  <br>#include &lt;sstream&gt;  <br>#include &lt;string&gt;  <br>#include &lt;vector&gt;  <br>#include &lt;queue&gt;  <br>#include &lt;set&gt;  <br>#include &lt;map&gt;  <br>#include &lt;cstdio&gt;  <br>#include &lt;cstdlib&gt;  <br>#include &lt;cctype&gt;  <br>#include &lt;cmath&gt;  <br>#include &lt;list&gt;  <br>using namespace std;  <br><br>#define PB push_back  <br>#define MP make_pair  <br>#define SZ(v) ((int)(v).size())  <br>#define FOR(i,a,b) for(int i=(a);i&lt;(b);++i)  <br>#define REP(i,n) FOR(i,0,n)  <br>#define FORE(i,a,b) for(int i=(a);i&lt;=(b);++i)  <br>#define REPE(i,n) FORE(i,0,n)  <br>#define FORSZ(i,a,v) FOR(i,a,SZ(v))  <br>#define REPSZ(i,v) REP(i,SZ(v))  <br>typedef long long ll;  <br><br>map&lt;int,int&gt; mem[51][51];<br><br>int go(int left,int n,int have) {<br>  if(n==0) return have;<br>  if(mem[left][n].count(have)) return mem[left][n][have];<br>  int ret=have;<br>  FORE(i,2,left) {<br>    int cur=go(left-i,n-1,have/__gcd(have,i)*i);<br>    if(cur&gt;ret) ret=cur;<br>  }  <br>  return mem[left][n][have]=ret;<br>}<br><br>class ArtShift {  <br>public:    <br>  int maxShifts(string s) {<br>    int w=0,b=0; REPSZ(i,s) if(s[i]=='W') ++w; else ++b;<br>    return go(w+b,min(w,b),1);<br>  }    <br>};<br></td>