<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class PalindromizationDiv2 {<br>public:<br>  int getMinimumCost(int);<br>  bool isP(string);<br>};<br> <br>int PalindromizationDiv2::getMinimumCost(int X) {<br>  for(int i = 0; ; i++){<br>    stringstream s1;<br>    stringstream s2;<br>    s1 &lt;&lt; (X+i);<br>    s2 &lt;&lt; (X-i);<br>    if(isP(s1.str())){<br>      return i;<br>    }<br>    if(X-i &gt;=0 &amp;&amp; isP(s2.str())){<br>      return i;<br>    }<br>  }<br>  return 0;<br>}<br> <br>bool PalindromizationDiv2::isP(string s){<br>  int i, j;<br>  for(i=0, j=s.size()-1; i&lt;j; i++, j--){<br>    if(s[i] != s[j])<br>      return false;<br>  }<br>  return true;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>