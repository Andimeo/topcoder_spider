<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br> <br>class TheAlmostLuckyNumbersDivOne {<br>public:<br>  long long find(long long a, long long b) <br>  {<br>    int digit[20];<br>    long long p[20];<br> <br>    p[0]=1;<br>    for (int i=1;i&lt;20;i++) p[i]=p[i-1]*10;<br> <br>    long long res=0;<br>    for (int l=1;l&lt;=16;l++)<br>    for (int d=0;d&lt;l;d++)<br>    for (int i=0;i&lt;(1&lt;&lt;(l-1));i++)<br>    {<br>      long long now=0;<br>      for (int j=0,_j;j&lt;l-1;j++)<br>      {<br>        if (j&lt;d) _j=j;<br>        else _j=j+1;<br>        if (i&amp;(1&lt;&lt;j)) digit[_j]=4;<br>        else digit[_j]=7;<br>      }<br>      digit[d]=0;<br>      for (int j=l-1;j&gt;=0;j--) now=now*10+digit[j];<br>      <br>      for (int k=d!=l-1?0:1;k&lt;10;k++)<br>      if (k!=4 &amp;&amp; k!=7)<br>      {<br>        now+=p[d]*k;<br>        res+=(now&gt;=a &amp;&amp; now&lt;=b);<br>        now-=p[d]*k;<br>        <br>      }<br>    }<br> <br> <br>    for (int l=1;l&lt;=16;l++)<br>    for (int i=0;i&lt;(1&lt;&lt;l);i++)<br>    {<br>      long long now=0;<br>      for (int j=0;j&lt;l;j++)<br>      if (i&amp;(1&lt;&lt;j)) now=now*10+4;<br>      else now=now*10+7;<br>      res+=(now&gt;=a &amp;&amp;now&lt;=b);<br>    }<br>    return res;<br>        <br>      <br>      <br>  }<br>};<br> <br> <br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>