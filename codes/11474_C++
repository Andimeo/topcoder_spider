<td class="problemText" colspan="8" valign="middle" align="left">
            /* Template */<br> <br>#include &lt;ctime&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cassert&gt;<br> <br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;functional&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;fstream&gt;<br>#include &lt;queue&gt;<br> <br>using namespace std;<br> <br>#ifdef _WIN32<br>#  define I64 "%I64d"<br>#else<br>#  define I64 "%Ld"<br>#endif<br> <br>#define forn(i, n) for (int i = 0; i &lt; (int)(n); i++)<br>#define fornd(i, n) for (int i = (int)(n) - 1; i &gt;= 0; i--)<br>#define forab(i, a, b) for (int i = (int)(a); i &lt;= (int)(b); i++)<br>#define forabd(i, a, b) for (int i = (int)(b); i &gt;= (int)(a); i--)<br>#define forit(i, a) for (__typeof((a).begin()) i = (a).begin(); i != (a).end(); i++)<br>#define sz(a) (int)(a).size()<br>#define all(a) (a).begin(), (a).end()<br>#define zero(a) memset(a, 0, sizeof(a))<br>#define fill(a, x) memset(a, x, sizeof(a))<br>#define pb push_back<br>#define mp make_pair<br> <br>#define EOL(i, n) " \n"[i == (n) - 1]<br>#define LEN(a) (int)(sizeof(a) / sizeof(a[0]))<br>#define IS(a, i) (((a) &gt;&gt; (i)) &amp; 1)<br>#define LAST(a) a[sz(a) - 1]<br> <br>typedef double dbl;<br>typedef long long ll;<br>typedef vector &lt;int&gt; vi;<br>typedef pair &lt;int, int&gt; pii;<br>typedef unsigned char byte;<br> <br>template &lt;class T&gt; T inline sqr(T x) { return x * x; }<br>template &lt;class T&gt; inline void relaxMin( T &amp;a, T b ) { a = min(a, b); }<br>template &lt;class T&gt; inline void relaxMax( T &amp;a, T b ) { a = max(a, b); }<br> <br>string str( int i ) { char s[100]; sprintf(s, "%d", i); return string(s); }<br> <br>template &lt;class T&gt; inline T sign( T x ) { return x &gt; 0 ? 1 : (x &lt; 0 ? -1 : 0); }<br>template &lt;class T&gt; inline T myAbs( T a ) { return a &gt; 0 ? a : -a; }<br> <br>class ConvexSequence {<br>public:<br>  long long getMinimum(vector &lt;int&gt;);<br>};<br> <br>long long ConvexSequence::getMinimum(vector &lt;int&gt; a)<br>{<br>  int n = sz(a);<br>  ll ans = 0;<br>  while (1)<br>  {<br>    int f = 0;<br>    forab(i, 1, n - 2)<br>      if (a[i - 1] + a[i + 1] &lt; 2 * a[i])<br>      {<br>        int y = (a[i - 1] + a[i + 1]) / 2;<br>        ans += a[i] - y;<br>        a[i] = y;<br>        f = 1;<br>      }<br>    if (!f)<br>      break;<br>  }<br>  return ans;<br>}<br></td>