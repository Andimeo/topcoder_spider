<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class MagicalGirlLevelThreeDivTwo {<br>  long long len[101];<br>  char getAt(vector &lt;string&gt; &amp;first, int n, long long at)<br>  {<br>    int k = (int)first.size();<br>    if (n &lt; k)<br>      return first[n][at];<br>    for (int m = n - 1; m &gt;= 0; m -= k)<br>      if (at &gt;= len[m])<br>        at -= len[m];<br>      else<br>        return getAt(first, m, at);<br>  }<br>public:<br>  int theCount(vector &lt;string&gt;, int, long long, long long);<br>};<br> <br>int MagicalGirlLevelThreeDivTwo::theCount(vector &lt;string&gt; first, int n, long long lo, long long hi) {<br>  int k = (int)first.size();<br>  for (int m = 0; m &lt;= n; ++m)<br>    if (m &lt; k)<br>      len[m] = (int)first[m].length();<br>    else {<br>      len[m] = 0;<br>      for (int m2 = m - 1; m2 &gt;= 0; m2 -= k)<br>        len[m] = min(hi + 1, len[m] + len[m2]);<br>    }<br>  int cnt = 0;<br>  for (long long at = lo; at &lt;= hi; ++at)<br>    if (getAt(first, n, at) == '1')<br>      cnt++;<br>  return cnt;  <br>}<br></td>