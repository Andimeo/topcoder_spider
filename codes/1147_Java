<td class="problemText" colspan="8" valign="middle" align="left">
            import java.math.*; import java.text.*; import java.util.*;<br>public class Whisper {<br>  public String toWhom(String[] usernames, String typed) {<br>    typed=typed.toLowerCase();<br>    if (!typed.startsWith("/msg ")) return "not a whisper";<br>    <br>    for (int x = 0; x &lt; usernames.length; x++) {<br>      usernames[x] = "/msg "+usernames[x]+" ";<br>    }<br>    String name = "";<br>    for (int x = 0; x &lt; usernames.length; x++) {<br>      if (typed.startsWith(usernames[x].toLowerCase())) {<br>        if (usernames[x].length() &gt; name.length()) {<br>          name = usernames[x];<br>        }<br>      }<br>    }<br>    <br>    if (name.length() == 0) return "user is not logged in";<br>    return name.substring(5,name.length()-1);<br>  }<br> <br>  /*************************************************<br>   * MAIN GENERATED BY RonProc<br>  *************************************************/<br>  //RonProc version 1.00<br>  public final static void main(String[] args)<br>  {<br>    try {<br>      Whisper obj;<br>      String ret;<br>      obj = new Whisper();<br>      ret = obj.toWhom(new String[]{"John","John Doe","John Doe h"},"/msg John Doe hi there");<br>      if (!eq(ret,"John Doe")) {<br>        print("Error on Example #1: toWhom(new String[]{\"John\",\"John Doe\",\"John Doe h\"},\"/msg John Doe hi there\") ==&gt; ");<br>        print("Expected: [");<br>        print("John Doe");<br>        print("]   Got:[");<br>        print(ret); print("]");<br>      } else print("Success on Example #1");<br>      print("\n");<br>      obj = new Whisper();<br>      ret = obj.toWhom(new String[]{"John","John Doe","John Doe h"},"/MSG jOHN dOE HI THERE");<br>      if (!eq(ret,"John Doe")) {<br>        print("Error on Example #2: toWhom(new String[]{\"John\",\"John Doe\",\"John Doe h\"},\"/MSG jOHN dOE HI THERE\") ==&gt; ");<br>        print("Expected: [");<br>        print("John Doe");<br>        print("]   Got:[");<br>        print(ret); print("]");<br>      } else print("Success on Example #2");<br>      print("\n");<br>      obj = new Whisper();<br>      ret = obj.toWhom(new String[]{"writer"},"writer hi");<br>      if (!eq(ret,"not a whisper")) {<br>        print("Error on Example #3: toWhom(new String[]{\"writer\"},\"writer hi\") ==&gt; ");<br>        print("Expected: [");<br>        print("not a whisper");<br>        print("]   Got:[");<br>        print(ret); print("]");<br>      } else print("Success on Example #3");<br>      print("\n");<br>      obj = new Whisper();<br>      ret = obj.toWhom(new String[]{"tester"},"/msg testerTwo you there");<br>      if (!eq(ret,"user is not logged in")) {<br>        print("Error on Example #4: toWhom(new String[]{\"tester\"},\"/msg testerTwo you there\") ==&gt; ");<br>        print("Expected: [");<br>        print("user is not logged in");<br>        print("]   Got:[");<br>        print(ret); print("]");<br>      } else print("Success on Example #4");<br>      print("\n");<br>      obj = new Whisper();<br>      ret = obj.toWhom(new String[]{"lbackstrom"},"/msg lbackstrom");<br>      if (!eq(ret,"user is not logged in")) {<br>        print("Error on Example #5: toWhom(new String[]{\"lbackstrom\"},\"/msg lbackstrom\") ==&gt; ");<br>        print("Expected: [");<br>        print("user is not logged in");<br>        print("]   Got:[");<br>        print(ret); print("]");<br>      } else print("Success on Example #5");<br>      print("\n");<br>      obj = new Whisper();<br>      ret = obj.toWhom(new String[]{"me"},"/msg  me hi");<br>      if (!eq(ret,"user is not logged in")) {<br>        print("Error on Example #6: toWhom(new String[]{\"me\"},\"/msg  me hi\") ==&gt; ");<br>        print("Expected: [");<br>        print("user is not logged in");<br>        print("]   Got:[");<br>        print(ret); print("]");<br>      } else print("Success on Example #6");<br>      print("\n");<br>      obj = new Whisper();<br>      ret = obj.toWhom(new String[]{"abc"}," /msg abc note the leading space");<br>      if (!eq(ret,"not a whisper")) {<br>        print("Error on Example #7: toWhom(new String[]{\"abc\"},\" /msg abc note the leading space\") ==&gt; ");<br>        print("Expected: [");<br>        print("not a whisper");<br>        print("]   Got:[");<br>        print(ret); print("]");<br>      } else print("Success on Example #7");<br>      print("\n");<br>      obj = new Whisper();<br>      ret = obj.toWhom(new String[]{"Wow"},"/msg Wow ");<br>      if (!eq(ret,"Wow")) {<br>        print("Error on Example #8: toWhom(new String[]{\"Wow\"},\"/msg Wow \") ==&gt; ");<br>        print("Expected: [");<br>        print("Wow");<br>        print("]   Got:[");<br>        print(ret); print("]");<br>      } else print("Success on Example #8");<br>      print("\n");<br>      obj = new Whisper();<br>      ret = obj.toWhom(new String[]{"msg"},"/msg");<br>      if (!eq(ret,"not a whisper")) {<br>        print("Error on Example #9: toWhom(new String[]{\"msg\"},\"/msg\") ==&gt; ");<br>        print("Expected: [");<br>        print("not a whisper");<br>        print("]   Got:[");<br>        print(ret); print("]");<br>      } else print("Success on Example #9");<br>      print("\n");<br>    } catch (Exception e) {<br>      System.out.println(e);<br>      e.printStackTrace(System.out);<br>    }<br>  }<br> <br>  public static void print(boolean a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(long a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(int a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(char a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(String a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(int[] a) {<br>    if (a==null) {System.out.print("null"); return;} <br>    for (int i=0; i&lt;a.length; i++) System.out.print(a[i]+","); <br>  }<br> <br>  public static void print(int[][] a) {<br>    if (a==null) {System.out.print("null"); return;} <br>    for (int i=0; i&lt;a.length; i++) { if (a[i]==null) print("null"); else print(a[i]); System.out.println(); }<br>  }<br> <br>  public static void print(String[] a) {<br>    if (a==null) {System.out.print("null"); return;} <br>    for (int i=0; i&lt;a.length; i++) System.out.print(a[i]+","); <br>  }<br> <br>  public static boolean eq(boolean a, boolean b) {<br>    return a==b;<br>  }<br> <br>  public static boolean eq(long a, long b) {<br>    return a==b;<br>  }<br> <br>  public static boolean eq(int a, int b) {<br>    return a==b;<br>  }<br> <br>  public static boolean eq(char a, char b) {<br>    return a==b;<br>  }<br> <br>  public static boolean eq(String a, String b) {<br>    return a.equals(b);<br>  }<br> <br>  public static boolean eq(int[] a, int[] b) { return Arrays.equals(a,b); }<br>  public static boolean eq(String[] a, String[] b) { return Arrays.equals(a,b); }<br> <br>}<br>// Powered by CodeProcessor<br></td>