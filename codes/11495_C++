<td class="problemText" colspan="8" valign="middle" align="left">
            //  SRM 520 (C)<br> <br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cassert&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;utility&gt;<br>#include &lt;numeric&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;bitset&gt;<br>#include &lt;complex&gt;<br> <br>using namespace std;<br> <br>typedef unsigned uint;<br>typedef long long Int;<br>typedef vector&lt;int&gt; vint;<br>typedef pair&lt;int,int&gt; pint;<br>#define mp make_pair<br> <br>template&lt;class T&gt; void pv(T a, T b) { for (T i = a; i != b; ++i) cout &lt;&lt; *i &lt;&lt; " "; cout &lt;&lt; endl; }<br>template&lt;class T&gt; void chmin(T &amp;t, T f) { if (t &gt; f) t = f; }<br>template&lt;class T&gt; void chmax(T &amp;t, T f) { if (t &lt; f) t = f; }<br> <br>const Int MO = 1000000007;<br>#define MAX 2510<br> <br>int N, A, B, C, D;<br>Int inv[MAX], fac[MAX], fnv[MAX];<br>Int n1s[MAX];<br>Int dp[MAX][MAX];<br> <br>struct SRMChallengePhase {<br>  <br>  int countWays(vector &lt;string&gt; inp0s, vector &lt;string&gt; inp1s) {<br>    string inp0 = accumulate(inp0s.begin(), inp0s.end(), string());<br>    string inp1 = accumulate(inp1s.begin(), inp1s.end(), string());<br>    <br>    int i;<br>    N = inp0.size();<br>    for (i = 0; i &lt; N; ++i) {<br>      if (inp0[i] == 'Y') (inp1[i] == 'Y') ? ++A : ++B;<br>      if (inp0[i] == 'N') (inp1[i] == 'Y') ? ++C : ++D;<br>    }<br>cout&lt;&lt;A&lt;&lt;" "&lt;&lt;B&lt;&lt;" "&lt;&lt;C&lt;&lt;" "&lt;&lt;D&lt;&lt;endl;<br>    <br>    if (B &lt; C) {<br>      return 0;<br>    }<br>    <br>    fac[0] = fnv[0] = 1;<br>    for (i = 1; i &lt;= N; ++i) {<br>      inv[i] = (i == 1) ? 1 : ((MO - MO / i * inv[MO % i]) % MO);<br>      fac[i] = fac[i - 1] * i % MO;<br>      fnv[i] = fnv[i - 1] * inv[i] % MO;<br>    }<br>    n1s[0] = 1;<br>    for (i = 1; i &lt;= N; ++i) {<br>      n1s[i] = n1s[i - 1] * (N - 1) % MO;<br>    }<br>    <br>    int a, b;<br>    dp[0][0] = 1;<br>    for (a = 0; a &lt;= A; ++a) for (b = 0; b &lt;= B; ++b) {<br>      (dp[a + 1][b] += dp[a][b] * b) %= MO;<br>      (dp[a][b + 1] += dp[a][b]    ) %= MO;<br>    }<br>cout&lt;&lt;"dp[A][B] = "&lt;&lt;dp[A][B]&lt;&lt;endl;<br>    <br>    Int ans = dp[A][B];<br>    ans *= fac[A];<br>    ans %= MO;<br>    ans *= fac[B];<br>    ans %= MO;<br>    ans *= fac[B];<br>    ans %= MO;<br>    ans *= fnv[B - C];<br>    ans %= MO;<br>    ans *= n1s[B - C];<br>    ans %= MO;<br>    <br>    ans %= MO; ans += MO; ans %= MO;<br>    return ans;<br>    <br>  }<br>  <br>};<br></td>