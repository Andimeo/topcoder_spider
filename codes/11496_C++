<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;stdio.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>using namespace std;<br> <br>const int mmod = 1000000007;<br> <br>int prev[300000] = {0};<br>int next[300000] = {0};<br>int prev2[300000] = {0};<br>int next2[300000] = {0};<br> <br>class SRMIntermissionPhase<br>{<br>  public:<br>  int countWays(vector &lt;int&gt; points, vector &lt;string&gt; description)<br>  {<br>    int n = description.size();<br>    prev[299999] = 1;<br>    for (int i=0; i&lt;n; i++) {<br>      for (int j=0; j&lt;300000; j++) prev2[j] = 0;<br>      prev2[0] = 1;<br>      for (int idx=0; idx&lt;3; idx++) if (description[i][idx] == 'Y') {<br>        for (int j=0; j&lt;300000; j++) next2[j] = 0;<br>        long long tot = 0;<br>        for (int j=0; j&lt;300000; j++) {<br>          if (j-1&gt;=0) tot += prev2[j-1];<br>          if (j-points[idx]-1&gt;=0) tot -= prev2[j-points[idx]-1];<br>          next2[j] = tot % mmod;<br>        }<br>        for (int j=0; j&lt;300000; j++) prev2[j] = next2[j];<br>      }<br>      printf("%d %d\n", prev2[0], prev2[1]);<br>      long long tot = 0;<br>      for (int j=299999; j&gt;=0; j--) {<br>        next[j] = ((tot % mmod) * prev2[j]) % mmod;<br>        tot += prev[j];<br>      }<br>      for (int j=0; j&lt;300000; j++) prev[j] = next[j];<br>    }<br>    int res = 0;<br>    for (int i=0; i&lt;300000; i++)<br>      res = (res + prev[i]) % mmod;<br>    return res;<br>  };<br>};<br></td>