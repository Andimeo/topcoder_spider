<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * Generated by Contest helper plug-in<br> * Actual solution is at the bottom<br> */<br>public class SRMIntermissionPhase {<br>  private static final long MOD = 1000000007;<br><br>  public int countWays(int[] points, String[] description) {<br>    int maxScore = 0;<br>    for (int i : points)<br>      maxScore += i;<br>    int[] mask = new int[description.length];<br>    for (int i = 0; i &lt; mask.length; i++) {<br>      for (int j = 0; j &lt; 3; j++) {<br>        if (description[i].charAt(j) == 'Y')<br>          mask[i] += 1 &lt;&lt; j;<br>      }<br>    }<br>    long[][] ways = new long[8][maxScore + 2];<br>    ways[0][0] = 1;<br>    for (int i = 1; i &lt; 8; i++) {<br>      int notAccounted = -1;<br>      for (int j = 0; j &lt; 3; j++) {<br>        if ((i &gt;&gt; j &amp; 1) == 1) {<br>          notAccounted = j;<br>          break;<br>        }<br>      }<br>      long result = 0;<br>      int index = i - (1 &lt;&lt; notAccounted);<br>      for (int j = 0; j &lt;= maxScore; j++) {<br>        ways[i][j] = result;<br>        result += ways[index][j];<br>        result %= MOD;<br>        if (j &gt;= points[notAccounted]) {<br>          result += MOD - ways[index][j - points[notAccounted]];<br>          result %= MOD;<br>        }<br>      }<br>    }<br>    long[][] result = new long[mask.length + 1][maxScore + 2];<br>    result[0][maxScore + 1] = 1;<br>    for (int i = 0; i &lt; mask.length; i++) {<br>      long curResult = 0;<br>      for (int j = maxScore + 1; j &gt;= 0; j--) {<br>        result[i + 1][j] = (ways[mask[i]][j] * curResult) % MOD;<br>        curResult += result[i][j];<br>        curResult %= MOD;<br>      }<br>    }<br>    long totalResult = 0;<br>    for (long i : result[mask.length])<br>      totalResult += i;<br>    return (int) (totalResult % MOD);<br>  }<br><br><br>}<br><br><br><br><br>// Powered by FileEdit<br>// Powered by moj 4.12 [modified TZTester]<br>// Powered by CodeProcessor<br></td>