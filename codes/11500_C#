<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class PerfectMemory {<br><br><br>    int p;<br>    double[,] dp;<br>    public double getExpectation(int N, int M)<br>    {<br>        int i, j;<br>        p = N * M / 2;<br>        dp = new double[p + 1, p + 1];<br>        for (i = 0; i &lt;= p; i++)<br>        {<br>            for (j = 0; j &lt;= p; j++)<br>            {<br>                dp[i, j] = -1;<br>            }<br>        }<br>        return saiki(0, p);<br>    }<br><br>    //a: find<br>    //b: not find<br>    double saiki(int a, int b)<br>    {<br>        if (b == 0) return a;<br>        if (dp[a, b] &gt;= 0) return dp[a, b];<br>        double res = 0;<br>        double f = (double)a / (a + b * 2);<br>        double nf = 1 - f;<br>        //Console.WriteLine(a + " " + b + " " + f + " " + nf);<br>        if (a != 0)<br>        {<br>            res += f * (1 + saiki(a - 1, b));<br>        }<br>        if (b != 0)<br>        {<br>            double ok = nf * (double)1 / (a + b * 2 - 1);<br>            double fa = nf * (double)a / (a + b * 2 - 1);<br>            double fb = nf * (double)(2 * (b - 1)) / (a + b * 2 - 1);<br>            res += ok * (1 + saiki(a, b - 1));<br>            if (a != 0) res += fa * (2 + saiki(a, b - 1));<br>            if (b != 1) res += fb * (1 + saiki(a + 2, b - 2));<br>        }<br>        //Console.WriteLine(a + " " + b + " " + res);<br>        return dp[a, b] = res;<br>    }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>