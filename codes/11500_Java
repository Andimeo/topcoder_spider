<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class PerfectMemory {<br>  public double getExpectation(int N, int M) {<br>        int n = N * M;<br>        double[][] res = new double[n / 2 + 1][n / 2 + 1];<br>        for (int numOpenFull = n / 2 - 1; numOpenFull &gt;= 0; --numOpenFull)<br>            for (int numKnownHalf = n / 2 - numOpenFull; numKnownHalf &gt;= 0; --numKnownHalf) {<br>                int totalClosed = n - numOpenFull * 2 - numKnownHalf;<br>                int totalCompletelyUnknown = totalClosed - numKnownHalf;<br>                if (numKnownHalf &gt; 0) {<br>                    res[numOpenFull][numKnownHalf] += (2 + res[numOpenFull + 1][numKnownHalf - 1]) * numKnownHalf / (double) totalClosed;<br>                }<br>                if (totalCompletelyUnknown &gt; 0 &amp;&amp; numKnownHalf &gt; 0) {<br>                    res[numOpenFull][numKnownHalf] += (4 + res[numOpenFull + 1][numKnownHalf]) * totalCompletelyUnknown / (double) totalClosed * numKnownHalf / (double) (totalClosed - 1);<br>                }<br>                if (totalCompletelyUnknown &gt;= 4) {<br>                    res[numOpenFull][numKnownHalf] += (2 + res[numOpenFull][numKnownHalf + 2]) * totalCompletelyUnknown / (double) totalClosed * (totalCompletelyUnknown - 2) / (double) (totalClosed - 1);<br>                }<br>                if (totalCompletelyUnknown &gt;= 2) {<br>                    res[numOpenFull][numKnownHalf] += (2 + res[numOpenFull + 1][numKnownHalf]) * totalCompletelyUnknown / (double) totalClosed / (double) (totalClosed - 1);<br>                }<br>            }<br>        return res[0][0] / 2.0;<br>  }<br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>