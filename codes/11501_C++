<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;vector&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br> <br>#define ll long long<br>#define dd double<br>#define pb push_back<br>#define mp make_pair<br> <br>using namespace std;<br> <br>int dp[10][10],i,j;<br> <br>int furikmax(int x, int y)<br>  {<br>   if (x&gt;y) return x;<br>   else return y;<br>  }<br> <br>class CutTheNumbers <br>  {<br>  <br>     int go(int lx , int ly , int rx , int ry)<br>       {<br>          if (lx == rx) <br>           {<br>               int sm = 0;<br>               for (i = ly; i &lt;= ry; ++i) <br>                 sm = sm * 10 + dp[lx][i];<br>               return sm;   <br>           }<br>          else if (ry == ly)   <br>            {<br>               int sm = 0;<br>               for (i = lx; i &lt;= rx; ++i) <br>                 sm = sm * 10 + dp[i][ly];<br>               return sm;  <br>            }<br>          else<br>           {<br>              int sm = 0,i,mm;<br>              for (i = lx; i &lt;= rx; ++i) <br>                sm = sm * 10 + dp[i][ly];<br>              <br>              mm = sm + go(lx,ly+1,rx,ry);<br>              <br>              sm = 0;<br>              for (i = lx; i &lt;= rx; ++i)<br>                sm = sm * 10 + dp[i][ry];<br>              <br>              mm = furikmax(mm,sm+go(lx,ly,rx,ry-1));<br>              <br>              sm = 0;<br>              for (i = ly; i &lt;= ry; ++i) <br>                sm = sm * 10 + dp[lx][i];<br>              <br>              mm = furikmax(mm,sm+go(lx+1,ly,rx,ry));<br>              <br>              sm = 0;<br>              for (i = ly; i &lt;= ry; ++i)<br>                 sm = sm * 10 + dp[rx][i];<br>                 <br>              mm = furikmax(mm,sm + go(lx,ly,rx-1,ry));         <br>           <br>              return mm;<br>           }              <br>       }<br>     <br>      <br>     public :<br>      int maximumSum(vector &lt;string&gt; a)<br>       {<br>        int n = a.size();<br>        int m = a[0].size();<br>        <br>        for (i = 0; i &lt; n; ++i) <br>          for (j = 0; j &lt; m; ++j)<br>            dp[i][j] = a[i][j] - '0';<br>            <br>         return go(0,0,n-1,m-1);   <br>       }<br>  <br>  };<br></td>