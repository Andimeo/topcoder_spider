<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class SistersErasingLetters {<br>    String initialWord;<br>    Map&lt;String, Boolean&gt; cache;<br> <br>  public String whoWins(String word) {<br>        initialWord = word;<br>        cache = new HashMap&lt;String, Boolean&gt;();<br>        boolean isGreater = solve(word, 0, true);<br>        if (isGreater)<br>            return "Camomile";<br>        else<br>            return "Romashka";<br>  }<br> <br>    private boolean solve(String word, int numFixed, boolean wantGreater) {<br>        String fixedPrefix = word.substring(0, numFixed);<br>        if (!initialWord.startsWith(fixedPrefix)) {<br>            return initialWord.compareTo(fixedPrefix) &lt; 0;<br>        }<br>        if (numFixed &gt;= word.length()) {<br>            return false;<br>        }<br>        String cacheKey = (wantGreater ? "#" : "$") + word + numFixed;<br>        if (cache.containsKey(cacheKey))<br>            return cache.get(cacheKey);<br>        boolean res = !wantGreater;<br>        if (numFixed + 1 &lt; word.length() &amp;&amp; solve(word, numFixed + 1, wantGreater) == wantGreater) {<br>            res = wantGreater;<br>        } else if (solve(fixedPrefix + word.substring(numFixed + 1), numFixed, !wantGreater) == wantGreater) {<br>            res = wantGreater;<br>        }<br>        cache.put(cacheKey, res);<br>        return res;<br>    }<br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>