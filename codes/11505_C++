<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;utility&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br><br>using namespace std;<br><br>#define REP(i,n) for((i)=0;(i)&lt;(int)(n);(i)++)<br>#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)<br><br>typedef long long ll;<br>set &lt;ll&gt; s;<br><br>class PlaylistShuffler{<br>  public:<br>  <br>  ll gcd(ll x, ll y){<br>    return x ? gcd(y%x,x) : y;<br>  }<br>  <br>  void add(ll y){<br>    int i;<br>    vector &lt;ll&gt; v;<br>    foreach(s,itr) v.push_back(*itr);<br>    REP(i,v.size()){<br>      ll x = v[i];<br>      ll d = gcd(x,y);<br>      if(x/d*y &lt;= 10000000000ll) s.insert(x/d*y);<br>    }<br>  }<br>  <br>  ll func1(int N, ll K1, ll K2){<br>    int i;<br>    <br>    s.insert(1);<br>    for(i=1;i&lt;=50;i++) add(i);<br>    <br>    ll ans = K1;<br>    int best = 0;<br>    <br>    foreach(s,itr){<br>      ll x = (*itr);<br>      ll K = (K1 + x - 1) / x * x;<br>      if(K &lt;= K2){<br>        int cnt = 0;<br>        for(i=1;i&lt;=N;i++) if(K%i == 0) cnt++;<br>        if(cnt &gt; best || (cnt == best &amp;&amp; K &lt; ans)){<br>          best = cnt;<br>          ans = K;<br>        }<br>      }<br>    }<br>    <br>    return ans;<br>  }<br>  <br>  ll func2(int N, ll K1, ll K2){<br>    ll ans = K1;<br>    int best = N;<br>    <br>    int i;<br>    for(ll K=K1;K&lt;=K2;K++){<br>      int cnt = 0;<br>      for(i=1;i&lt;=N;i++) if(K%i == 0) cnt++;<br>      if(cnt &lt; best){<br>        best = cnt;<br>        ans = K;<br>      }<br>      if(best == 1) break;<br>    }<br>    <br>    return ans;<br>  }<br><br>  long long bestShuffle(int N, int X, int Y, long long K1, long long K2){<br>    ll ans;<br>    if(X == Y){<br>      ans = func1(N,K1,K2);<br>    } else {<br>      ans = func2(N,K1,K2);<br>    }<br>    return ans;<br>  }<br><br>};<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>