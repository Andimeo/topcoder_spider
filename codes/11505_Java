<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import static java.lang.Math.*;<br>import java.io.*;<br>import java.math.BigInteger;<br> <br>public class PlaylistShuffler {<br>  public static void p(Object... o){System.out.println(Arrays.deepToString(o));}<br>  public long bestShuffle(int n, int X, int Y, long k1, long k2) {<br>    K1 = k1;<br>    K2 = k2;<br>    N = n;<br>    P = new ArrayList&lt;Pair&gt;();<br>    for(int i = 2; i &lt;= N; i++){<br>      if(BigInteger.valueOf(i).isProbablePrime(100)){<br>        int j = i;<br>        int c = 1;<br>        while(j*i &lt;= N){<br>          j *= i;<br>          c++;<br>        }<br>        P.add(new Pair(i, c));<br>      }<br>    }<br>    if(X == Y){<br>      res = -1;<br>      resscore = -1;<br>      best(0, 1);<br>      return res;<br>    }else{<br>      long ans = -1;<br>      long best = N+1;<br>      for(long k = K1; k &lt;= K2; k++){<br>        int score = 0;<br>        for(int i = 1; i &lt;= N; i++)<br>          if(k%i == 0)<br>            score++;<br>        if(score &lt; best){<br>          best = score;<br>          ans = k;<br>          if(score == 1)<br>            break;<br>        }<br>      }<br>      return ans;<br>    }<br>  }<br>  long res, resscore;<br>  void best(int at, long v) {<br>    if(v &gt; K2)<br>      return;<br>    if(at == P.size()){<br>      if(v &lt; K1){<br>        v = ((K1+v-1)/v)*v;<br>      }<br>      if(v &lt; K1 || v &gt; K2)<br>        return;<br>      int score = 0;<br>      for(int i = 1; i &lt;= N;i++)<br>        if(v%i==0)<br>          score++;<br>      if(score &gt; resscore || (score == resscore &amp;&amp; v &lt; res)){<br>        resscore = score;<br>        res = v;<br>      }<br>      return;<br>    }<br>    long m = 1;<br>    for(int i = 0; i &lt;= P.get(at).c; i++){<br>      best(at+1, v*m);<br>      m *= P.get(at).p;<br>    }<br>  }<br>  int N;<br>  long K1, K2;<br>  ArrayList&lt;Pair&gt; P;<br>  class Pair{<br>    int p, c;<br>    public Pair(int p, int c){<br>      this.p = p;<br>      this.c = c;<br>    }<br>  }<br>}<br></td>