<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import static java.util.Arrays.fill;<br>import static java.lang.System.arraycopy;<br><br>public class DecodeDigits {<br>final static int INF = Integer.MAX_VALUE;<br>  public String solve(String D) {<br>    D = new StringBuilder(D).reverse().toString();<br>    char[] s = D.toCharArray();<br>    for (int i = 0; i &lt; s.length; i++) {<br>      s[i] -= '0';<br>    }<br>    int[][] d = new int[s.length + 1][26];<br>    boolean[] can = new boolean[s.length + 1];<br>    can[0] = true;<br>    fill(d[0],  -1);<br>    for (int i = 1; i &lt;= s.length; i++) {<br>      int[] a = new int[26];<br>      int[] b = new int[26];<br>      can[i] = false;<br>      fill(a, INF);<br>      fill(b, INF);      <br>      if (i &gt;= 2 &amp;&amp; can[i-2]) {<br>        int u = s[i-2] + s[i-1] * 10;<br>        if (u &gt;= 10 &amp;&amp; u &lt;= 26) {<br>          can[i] = true;<br>          for (int c = 0; c &lt; 26; c++) {<br>            if (c + 1 == u) {<br>              a[c] = i - 2;<br>            } else {<br>              a[c] = d[i-2][c];<br>            }<br>          }<br>        }<br>      }<br>      if (can[i-1]) {<br>        int u = s[i-1];<br>        if (u &gt;= 1 &amp;&amp; u &lt;= 26 ) {<br>          can[i] = true;<br>          for (int c = 0; c &lt; 26; c++) {<br>              if (c + 1 == u) {<br>                b[c] = i - 1;<br>              } else {<br>                b[c] = d[i-1][c];<br>              }<br>          }<br>        }<br>      }<br>      for (int c = 0; c &lt; 26; c++) {<br>        d[i][c] = Math.min(a[c], b[c]);<br>      }<br>    }<br>    if (!can[d.length - 1]) return "NONE";<br>    <br>    int[] len = new int[d.length];<br>    int[] lenC = new int[d.length];<br>    fill(lenC, -1);<br>    for (int i = 1; i &lt; len.length; i++) {<br>      if (!can[i]) continue;<br>      for (int c = 0; c &lt; 26; c++) {<br>        int j = d[i][c];<br>        if (j &lt; 0) continue;<br>        if (len[i] &lt; len[j] + 1) {<br>          len[i] = len[j] + 1;<br>          lenC[i] = c;<br>        }<br>      }<br>    }<br>    String res = "";<br>    for (int i = d.length - 1; len[i] &gt; 0; i = d[i][lenC[i]]) {<br>      res += (char)('a' + lenC[i]);<br>    }<br>    <br>    <br>    return res;<br>  }<br><br>  private static void debug(Object... o) {<br>    System.out.println(Arrays.deepToString(o));<br>  }<br>}<br><br><br>// Powered by FileEdit<br></td>