<td class="problemText" colspan="8" valign="middle" align="left">
            #line 5 "PerfectlyFairGame.cpp"<br><br>#include &lt;string&gt; <br>#include &lt;vector&gt; <br>#include &lt;cstdio&gt; <br>#include &lt;cstdlib&gt; <br>#include &lt;string&gt; <br>#include &lt;cmath&gt; <br>#include &lt;algorithm&gt; <br>#include &lt;vector&gt; <br>#include &lt;list&gt; <br>#include &lt;map&gt; <br>#include &lt;set&gt; <br>#include &lt;queue&gt; <br>#include &lt;stack&gt; <br>#include &lt;utility&gt; <br>#include &lt;functional&gt; <br>#include &lt;complex&gt; <br>#include &lt;iostream&gt; <br>#include &lt;fstream&gt; <br>#include &lt;sstream&gt; <br>#include &lt;ctime&gt;<br><br>using namespace std; <br><br>#define SIZE(A) ((int)A.size()) <br>#define LENGTH(A) ((int)A.length()) <br>#define MP(A,B) make_pair(A,B) <br>typedef long long int64; <br>typedef unsigned long long uint64; <br>typedef unsigned int uint; <br>typedef unsigned short ushort; <br>typedef unsigned char uchar; <br>typedef vector&lt;int&gt; VI; <br>typedef vector&lt;string&gt; VS; <br>const double pi=acos(-1.0); <br>const double eps=1e-11; <br><br>template&lt;class T&gt; inline T sqr(const T&amp; x) { return x*x; } <br>template&lt;class T&gt; inline void checkmin(T &amp;a,const T&amp; b) { if (b&lt;a) a=b; } <br>template&lt;class T&gt; inline void checkmax(T &amp;a,const T&amp; b) { if (b&gt;a) a=b; } <br>#define two(X) (1&lt;&lt;(X)) <br>#define contain(S,X) ((S&amp;two(X))&gt;0) <br>#define twoL(X) (((int64)1)&lt;&lt;X) <br>#define containL(S,X) ((S&amp;twoL(X))&gt;0) <br>template&lt;class T&gt; int countbit(T n) { int R=0; for (;n&gt;0;n&amp;=(n-1)) R++; return R; } <br>template&lt;class T&gt; T lowbit(T n) { return (n^(n-1))&amp;n; } <br>template&lt;class T&gt; T gcd(T a,T b) { return (b==0)?a:gcd(b,a%b); } <br>template&lt;class T&gt; T lcm(T a,T b) { return a*(b/gcd(a,b)); } <br>template&lt;class T&gt; void out(const vector&lt;T&gt; &amp;a) { cout&lt;&lt;"array: "; for (int i=0;i&lt;SIZE(a);i++) cout&lt;&lt;a[i]&lt;&lt;" "; cout&lt;&lt;endl; cout.flush(); } <br>template&lt;class T&gt; void out(T a[],int n) { cout&lt;&lt;"array: "; for (int i=0;i&lt;n;i++) cout&lt;&lt;a[i]&lt;&lt;" ";cout&lt;&lt;endl; cout.flush(); }<br>#define MARK(n) printf("MARK %d  LINE: %d\n",n,__LINE__); <br><br><br><br>class PerfectlyFairGame <br>{<br>public:<br>  int n,m;<br>  int a[50][50];<br>  double f[50][1000];<br>  bool visited[50][1000];<br>  double solve(int d,int p)<br>  {<br>    if (d==0) return (p==0)?0.5:((p&gt;0)?1:0);<br>    if (visited[d][p+500]) return f[d][p+500];<br>    visited[d][p+500]=true;<br>    double &amp;ret=f[d][p+500];<br>    ret=0;<br>    for (int x=1;x+1&lt;n;x++) for (int y=1;y+1&lt;m;y++)<br>    {<br>      int sz=0,c[9];<br>      for (int dx=-1;dx&lt;=1;dx++) for (int dy=-1;dy&lt;=1;dy++) c[sz++]=a[x+dx][y+dy];<br>      double tmp=0;<br>      for (int i=0;i&lt;9;i++) tmp+=(1-solve(d-1,-(p+c[i])));<br>      tmp/=9;<br>      if (tmp&gt;ret) ret=tmp;<br>    }<br>    return ret;<br>  }<br>  double winChance(vector &lt;string&gt; board, int darts) <br>  {<br>    n=SIZE(board);<br>    m=LENGTH(board[0]);<br>    for (int i=0;i&lt;n;i++) for (int j=0;j&lt;m;j++) a[i][j]=board[i][j]-'0';<br>    memset(visited,false,sizeof(visited));<br>    double ret=solve(darts+darts,0);<br>    return 1-ret;<br>  }<br>};<br><br><br>// Powered by FileEdit<br></td>