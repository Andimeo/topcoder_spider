<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class CompositeSmash {<br>public:<br>  string thePossible(int, int);<br>};<br> <br>int f[222222];<br> <br>string CompositeSmash::thePossible(int N, int target) {<br>  int i, j, ok, can;<br>  for (i=1;i&lt;=N;i++) {<br>    if (i == target) {<br>      f[i] = 1;<br>      continue;<br>    }<br>    ok = 1; can = 0;<br>    for (j=2;j*j&lt;=i;j++)<br>      if (i % j == 0) {<br>        can = 1;<br>        if (!(f[j] || f[i/j])) ok = 0;<br>      }<br>    if (can &amp;&amp; ok) f[i] = 1;<br>    else f[i] = 0;<br>  }<br>  if (f[N]) return "Yes";<br>  else return "No";<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>