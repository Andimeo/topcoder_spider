<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class CompositeSmash {<br>    Map&lt;Integer, Boolean&gt; cache;<br> <br>  public String thePossible(int N, int target) {<br>        cache = new HashMap&lt;Integer, Boolean&gt;();<br>        if (doit(N, target))<br>            return "Yes";<br>        else<br>            return "No";<br>  }<br> <br>    private boolean doit(int n, int target) {<br>        if (n == target) return true;<br>        Boolean stored = cache.get(n);<br>        if (stored != null) return stored;<br>        boolean res = true;<br>        boolean any = false;<br>        for (int i = 2; i * i &lt;= n; ++i) {<br>            if (n % i == 0) {<br>                any = true;<br>                int a = i;<br>                int b = n / i;<br>                if (!doit(a, target) &amp;&amp; !doit(b, target)) {<br>                    res = false;<br>                    break;<br>                }<br>            }<br>        }<br>        if (!any) res = false;<br>        return res;<br>    }<br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>