<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class AdjacentSwaps {<br>public:<br>  int theCount(vector &lt;int&gt;);<br>};<br> <br>const int md = (int)(1e9+7);<br>int f[55][55], d[55][55];<br> <br>int AdjacentSwaps::theCount(vector &lt;int&gt; p) {<br>  int n = p.size(), i, j, k, q, ok, ft;<br>  int b[55], c[55];<br>  memset(d,0,sizeof(d));<br>  for (i=0;i&lt;=50;i++) d[i][0] = 1;<br>  for (i=1;i&lt;=50;i++)<br>    for (j=1;j&lt;=i;j++) d[i][j] = (d[i-1][j]+d[i-1][j-1]) % md;<br>  for (i=n-1;i&gt;=0;i--)<br>    for (j=i;j&lt;n;j++)<br>      if (i == j) f[i][j] = 1; else {<br>        f[i][j] = 0;<br>        for (k=i;k&lt;=j;k++) b[k] = p[k];<br>        sort(b+i,b+j+1);<br>        for (k=i;k&lt;j;k++) {<br>          for (q=0;q&lt;n;q++) c[q] = 0;<br>          for (q=i;q&lt;k;q++) c[b[q]] = 1;<br>          c[b[k+1]] = 1;<br>          ok = 1;<br>          for (q=i;q&lt;=k;q++)<br>            if (!c[p[q]]) { ok = 0; break; }<br>          if (ok) {<br>            ft = (long long)f[i][k]*f[k+1][j] % md;<br>            ft = (long long)ft*d[j-i-1][k-i] % md;<br>            f[i][j] = (f[i][j]+ft) % md;<br>          }<br>        }<br>      }<br>  return f[0][n-1];<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>