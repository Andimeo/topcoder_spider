<td class="problemText" colspan="8" valign="middle" align="left">
            #line 5 "TheCoins.cpp"<br><br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;iostream&gt;<br>#include &lt;fstream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;utility&gt;<br>#include &lt;complex&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;cmath&gt;<br>#include &lt;ctime&gt;<br>#include "string.h"<br><br>using namespace std;<br><br>typedef long long int64;<br>typedef unsigned long long uint64;<br>typedef unsigned int uint;<br>typedef unsigned short ushort;<br>typedef unsigned char uchar;<br>typedef pair&lt;int,int&gt; ipair;<br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br><br>#define two(X) (1&lt;&lt;(X))<br>#define contain(S,X) ((S&amp;two(X))!=0)<br>#define SIZE(A) ((int)A.size())<br>#define LENGTH(A) ((int)A.length())<br>#define MP(A,B) make_pair(A,B)<br><br>const double pi=acos(-1.0);<br>const double eps=1e-11;<br><br>template&lt;class T&gt; inline void ckmin(T &amp;a,const T &amp;b) { if (b&lt;a) a=b; }<br>template&lt;class T&gt; inline void ckmax(T &amp;a,const T &amp;b) { if (b&gt;a) a=b; }<br>template&lt;class T&gt; inline T sqr(const T &amp;a) { return a*a; }<br>template&lt;class T&gt; inline string toString(const T &amp;a) { ostringstream sout; sout&lt;&lt;a; sout.flush(); return sout.str(); }<br>template&lt;class T&gt; inline int toInt(string s) { int v; istringstream sin(s); sin&gt;&gt;v; return v; }<br>template&lt;class T&gt; inline int toInt64(string s) { int64 v; istringstream sin(s); sin&gt;&gt;v; return v; }<br>template&lt;class T&gt; inline T lowbit(const T &amp;n) { return (n^(n-1))&amp;n; }<br>template&lt;class T&gt; int countbit(const T &amp;n) { return (n==0)?0:(1+countbit(n&amp;(n-1))); }<br><br>template&lt;class T&gt; inline T gcd(const T &amp;a,const T &amp;b) { return (b==0)?abs(a):gcd(b,a%b); }<br>template&lt;class T&gt; inline T lcm(const T &amp;a,const T &amp;b) { return a*(b/gcd(a,b)); }<br>int64 euclide(int64 a,int64 b,int64 &amp;x,int64 &amp;y) { if (b==0) { x=1; y=0; return a; } else { int64 d=euclide(b,a%b,x,y); int64 t=x; x=y; y=t-(a/b)*y; return d; } }<br><br>template&lt;class T&gt; void out(vector&lt;T&gt; a,int n=-1) { if (n&lt;0) n=SIZE(a); ckmin(n,SIZE(a)); cout&lt;&lt;"{"; for (int i=0;i&lt;n;i++) cout&lt;&lt;a[i]&lt;&lt;", "; cout&lt;&lt;"}"&lt;&lt;endl; }<br>template&lt;class T&gt; void out(T *a,int n) { if (n&lt;0) n=0; cout&lt;&lt;"{"; for (int i=0;i&lt;n;i++) cout&lt;&lt;a[i]&lt;&lt;", "; cout&lt;&lt;"}"&lt;&lt;endl; }<br>void out(string s) { cout&lt;&lt;s&lt;&lt;endl; }<br><br>class TheCoins<br>{<br>public:<br>  int64 n,m;<br>  int64 dx,dy;<br>  int64 solve1(int64 n,int64 m,int64 dx,int64 dy)<br>  {<br>/*  <br>    int64 mc=min((n-1)/dx,(m-1)/dy);<br>    int64 R=0;<br>    for (int64 c=1;c&lt;=mc;c++)<br>    {<br>      int64 gx=n-c*dx,gy=m-c*dy;<br>      if (gx&lt;=0 || gy&lt;=0) break;<br>      int64 hx=gx-dx,hy=gy-dy;<br>      if (hx&lt;0) hx=0;<br>      if (hy&lt;0) hy=0;<br>      int64 size=gx*gy-hx*hy;<br>      if (c%2==1) R+=size;<br>      printf("C %d %d\n",(int)c,(int)size);<br>    }<br>    return R;<br>*/    <br>    int64 mc=min((n-1)/dx,(m-1)/dy);<br>    if (mc==0) return 0;<br>    int64 R=0;<br>    if (mc/2&gt;0)<br>    {<br>      int64 h=mc/2;<br>      int64 e1=-4*dx*dy;<br>      int64 e0=n*dy+m*dx+dx*dy;<br>      R+=e1*(h*(h+1)/2);<br>      R+=e0*(h);<br>    }<br>    if (mc&amp;1) R+=(n-mc*dx)*(m-mc*dy);<br>    return R;<br>  }<br>  long long find(int _n, int _m, int _dr, int _dc, vector &lt;int&gt; row, vector &lt;int&gt; column)<br>  {<br>    n=_n;<br>    m=_m;<br>    dx=_dr;<br>    dy=_dc;<br>    map&lt;pair&lt;int64,int64&gt;,vector&lt;int64&gt; &gt; M;<br>    for (int i=0;i&lt;SIZE(row);i++)<br>    {<br>      int64 x0=row[i]-1;<br>      int64 y0=column[i]-1;<br>      int64 d=min(x0/dx,y0/dy);<br>      //printf("%d %d %d\n",(int)(x0-d*dx),(int)(y0-d*dy),(int)d);<br>      M[MP(x0-d*dx,y0-d*dy)].push_back(d);<br>    }<br>    int64 R=solve1(n,m,dx,dy);<br>    //return R;<br>    for (map&lt;pair&lt;int64,int64&gt;,vector&lt;int64&gt; &gt;::iterator it=M.begin();it!=M.end();++it)<br>    {<br>      int64 sx=it-&gt;first.first;<br>      int64 sy=it-&gt;first.second;<br>      vector&lt;int64&gt; a=it-&gt;second;<br>      int64 e=min((n-1-sx)/dx,(m-1-sy)/dy);<br>      //printf("%d %d %d : ",(int)e,(int)sx,(int)sy);out(a);<br>      R-=(e+1)/2;<br>      a.push_back(-1);<br>      a.push_back(e+1);<br>      sort(a.begin(),a.end());<br>      for (int i=0;i+1&lt;SIZE(a);i++) R+=(a[i+1]-a[i]-1)/2;<br>    }<br>    return R+R;<br>  }<br>};<br><br><br>// Powered by FileEdit<br></td>