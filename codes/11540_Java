<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br><br>public class TheCoins {<br><br>  long func(long x, long y, long dx, long dy){<br>    long ans = 0;<br>    while(x &gt; 0 || y &gt; 0){<br>      ans += x * y;<br>      x -= dx;<br>      y -= dy;<br>    }<br>    return ans;<br>  }<br><br>  BigInteger func(BigInteger x, BigInteger y, BigInteger dx, BigInteger dy){<br>  //  System.out.println(x + " " + y + " " + dx + " " + dy);<br>    if(x.compareTo(BigInteger.ZERO) &lt; 0 || y.compareTo(BigInteger.ZERO) &lt; 0) return BigInteger.ZERO;<br>    BigInteger tmp1 = x.divide(dx), tmp2 = y.divide(dy);<br>    BigInteger n = tmp1;<br>    if(tmp1.compareTo(tmp2) &gt; 0) n = tmp2;<br>  //  System.out.println(n);<br>    BigInteger ans1 = n.add(BigInteger.ONE).multiply(x).multiply(y);<br>    BigInteger ans2 = n.multiply(n.add(BigInteger.ONE)).divide(BigInteger.valueOf(2));<br>    BigInteger ans3 = y.multiply(dx).add(x.multiply(dy));<br>    BigInteger ans4 = dx.multiply(dy).multiply(n).multiply(n.add(BigInteger.ONE)).multiply(n.multiply(BigInteger.valueOf(2)).add(BigInteger.ONE)).divide(BigInteger.valueOf(6));<br>    BigInteger ans = ans1.subtract(ans2.multiply(ans3)).add(ans4);<br>  //  System.out.println(ans);<br>  //  System.out.println(96*93*7 + " " + (8*93+14*96)*21 + " " + 14*8*6*7*13/6 + " " + ans1 + " " + ans2.multiply(ans3) + " " + ans4);<br>    return ans;<br>  }<br>  <br>  public long func2(long N, long a[]){<br>  //  System.out.println(N);<br>    long ans = N / 2;<br>    int i;<br>    int len = a.length;<br>  //  for(i=0;i&lt;len;i++) System.out.println(a[i]);<br>  //  System.out.println(len);<br>    for(i=0;i&lt;len-1;i++) ans -= (a[i+1] - a[i] - 1) / 2;<br>    ans -= a[0] / 2;<br>    ans -= (N - a[len-1] - 1) / 2;<br>    return ans;<br>  }<br><br>  public long find(int X, int Y, int dx, int dy, int[] x, int[] y){<br>  //  System.out.println(func(X-dx,Y-dy,2*dx,2*dy));<br>    BigInteger b1 = func(BigInteger.valueOf(X-dx), BigInteger.valueOf(Y-dy), BigInteger.valueOf(2*dx), BigInteger.valueOf(2*dy));<br>    BigInteger b2 = func(BigInteger.valueOf(X-2*dx), BigInteger.valueOf(Y-2*dy), BigInteger.valueOf(2*dx), BigInteger.valueOf(2*dy));<br>    long ans = (b1.subtract(b2)).longValue();<br>    ans *= 2;<br>    <br>    int N = x.length;<br>    int i,j,tmp;<br>    <br>    for(i=0;i&lt;N;i++){<br>      x[i]--; y[i]--;<br>    }<br>    <br>    boolean used[] = new boolean[N];<br>    for(i=0;i&lt;N;i++) used[i] = false;<br>    <br>    for(i=0;i&lt;N+10;i++) for(j=0;j&lt;N-1;j++) if(x[j] &gt; x[j+1]){<br>      tmp = x[j]; x[j] = x[j+1]; x[j+1] = tmp;<br>      tmp = y[j]; y[j] = y[j+1]; y[j+1] = tmp;<br>    }<br>    <br>    for(i=0;i&lt;N;i++) if(!used[i]){<br>      long x0 = x[i], y0 = y[i];<br>      int cnt = 0;<br>      for(j=0;j&lt;N;j++) if(x[j] &gt;= x0 &amp;&amp; y[j] &gt;= y0 &amp;&amp; (x[j] - x0) % dx == 0 &amp;&amp; (y[j] - y0) % dy == 0 &amp;&amp; (x[j] - x0) / dx == (y[j] - y0) / dy){<br>        used[j] = true;<br>        cnt++;<br>      }<br>      long a[] = new long[cnt];<br>      cnt = 0;<br>      for(j=0;j&lt;N;j++) if(x[j] &gt;= x0 &amp;&amp; y[j] &gt;= y0 &amp;&amp; (x[j] - x0) % dx == 0 &amp;&amp; (y[j] - y0) % dy == 0 &amp;&amp; (x[j] - x0) / dx == (y[j] - y0) / dy){<br>        a[cnt] = Math.min(x[j] / dx, y[j] / dy);<br>        cnt++;<br>      }<br>      long t = Math.min(x0 / dx, y0 / dy);<br>      long x1 = x0 - t * dx, y1 = y0 - t * dy;<br>      long x2 = X - x1, y2 = Y - y1;<br>      long n = Math.min((x2 + dx - 1) / dx, (y2 + dy - 1) / dy);<br>      ans -= 2 * func2(n, a);<br>    }<br>    <br>    return ans;<br>  }<br><br>}<br><br><br>// Powered by FileEdit<br></td>