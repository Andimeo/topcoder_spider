<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br> <br>public class TheKnights {<br>  public double find(int n, int a, int b)<br>  {<br>    int[] boundaries = { 0, n, a, b, n - a, n - b };<br>    Array.Sort(boundaries);<br> <br>    long[] counts = { 0, 0, 0, 0, 0, 0, 0, 0, 0 };<br> <br>    for (int i = 0; i &lt; 5; ++i)<br>      if ((boundaries[i] &gt;= 0) &amp;&amp; (boundaries[i + 1] &lt;= n))<br>  for (int j = 0; j &lt; 5; ++j)<br>    if ((boundaries[j] &gt;= 0) &amp;&amp; (boundaries[j + 1] &lt;= n))<br>      {<br>        int k1 = boundaries[i];<br>        int k2 = boundaries[j];<br>        int scr = 0;<br>        if ((k1 &gt;= a) &amp;&amp; (k2 &gt;= b)) ++scr;<br>        if ((k1 &gt;= a) &amp;&amp; (k2 &lt; n - b)) ++scr;<br>        if ((k1 &lt; n - a) &amp;&amp; (k2 &gt;= b)) ++scr;<br>        if ((k1 &lt; n - a) &amp;&amp; (k2 &lt; n - b)) ++scr;<br>        if (a != b)<br>    {<br>      if ((k2 &gt;= a) &amp;&amp; (k1 &gt;= b)) ++scr;<br>      if ((k2 &gt;= a) &amp;&amp; (k1 &lt; n - b)) ++scr;<br>      if ((k2 &lt; n - a) &amp;&amp; (k1 &gt;= b)) ++scr;<br>      if ((k2 &lt; n - a) &amp;&amp; (k1 &lt; n - b)) ++scr;<br>    }<br>        counts[scr] += ((long)(boundaries[i+1]-boundaries[i])) * (boundaries[j+1]-boundaries[j]);<br>      }<br> <br>    for (int i = 0; i &lt;= 8; ++i)<br>      Console.WriteLine("There are {0} squares that attack {1} other squares", counts[i], i);<br> <br>    long nsq = ((long) n) * n;<br>    <br>    long tot = nsq;<br>    for (int i = 1; i &lt;= 8; ++i)<br>      tot += i * counts[i];<br> <br>    double expectedPerKnight = (double)(tot) / nsq;<br> <br>    double expectedInCommon = 2 * (expectedPerKnight - 1) / (nsq - 1);<br>    double totprob = 0.0;<br>    for (int i = 2; i &lt;= 8; ++i)<br>      {<br>  totprob += counts[i] * (((double)i)/nsq) * (((double)(i-1))/(nsq-1));<br>      }<br>    expectedInCommon += totprob;<br>    return 2 * expectedPerKnight - expectedInCommon;<br>  }<br>  <br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>