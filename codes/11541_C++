<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>class TheKnights {<br>public:<br>double find(int n, int a, int b) {<br>  int i, j, k, x, y, z;<br>  double ret = 0;<br><br>  vector&lt;int&gt; c;<br>  c.push_back(0);<br>  c.push_back(n);<br>  c.push_back(a);<br>  c.push_back(b);<br>  c.push_back(n-a);<br>  c.push_back(n-b);<br>  sort(c.begin(), c.end());<br>  c.erase(unique(c.begin(), c.end()), c.end());<br><br>  for (int c1 = 0; c1+1 &lt; c.size(); c1++)<br>  for (int c2 = 0; c2+1 &lt; c.size(); c2++) {<br>    int x1 = c[c1], x2 = c[c1+1]-1;<br>    int y1 = c[c2], y2 = c[c2+1]-1;<br>    if (x1 &lt; 0 || x1 &gt;= n ) continue;<br>    if (x2 &lt; 0 || x2 &gt;= n ) continue;<br>    if (y1 &lt; 0 || y1 &gt;= n ) continue;<br>    if (y2 &lt; 0 || y2 &gt;= n ) continue;<br>    int v = 1, v2 = 1;<br>    if (x1+a &lt;  n &amp;&amp; y1+b &lt;  n) v++;<br>    if (x1+b &lt;  n &amp;&amp; y1+a &lt;  n) v++;<br>    if (x1-a &gt;= 0 &amp;&amp; y1+b &lt;  n) v++;<br>    if (x1-b &gt;= 0 &amp;&amp; y1+a &lt;  n) v++;<br>    if (x1+a &lt;  n &amp;&amp; y1-b &gt;= 0) v++;<br>    if (x1+b &lt;  n &amp;&amp; y1-a &gt;= 0) v++;<br>    if (x1-a &gt;= 0 &amp;&amp; y1-b &gt;= 0) v++;<br>    if (x1-b &gt;= 0 &amp;&amp; y1-a &gt;= 0) v++;<br>    if (a == b) v = v/2+1;<br><br>    if (x2+a &lt;  n &amp;&amp; y2+b &lt;  n) v2++;<br>    if (x2+b &lt;  n &amp;&amp; y2+a &lt;  n) v2++;<br>    if (x2-a &gt;= 0 &amp;&amp; y2+b &lt;  n) v2++;<br>    if (x2-b &gt;= 0 &amp;&amp; y2+a &lt;  n) v2++;<br>    if (x2+a &lt;  n &amp;&amp; y2-b &gt;= 0) v2++;<br>    if (x2+b &lt;  n &amp;&amp; y2-a &gt;= 0) v2++;<br>    if (x2-a &gt;= 0 &amp;&amp; y2-b &gt;= 0) v2++;<br>    if (x2-b &gt;= 0 &amp;&amp; y2-a &gt;= 0) v2++;<br>    if (a == b) v2 = v2/2+1;<br>if (v2 != v) cout &lt;&lt; x1 &lt;&lt; ' ' &lt;&lt; x2 &lt;&lt; ' ' &lt;&lt; y1 &lt;&lt; ' ' &lt;&lt; y2 &lt;&lt; endl;<br>    assert(v2 == v);<br><br>    ret += (v*(v-1)/2 + v*((double)n*n - v)) * (x2-x1+1) * (y2-y1+1);<br>  }<br>  double all = ((double)n*n) * ((double)n*n - 1) / 2;<br><br>  return ret / all;<br>}<br><br><br><br>};<br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>