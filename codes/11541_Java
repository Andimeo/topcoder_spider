<td class="problemText" colspan="8" valign="middle" align="left">
            public class TheKnights{<br>  public double good(int x){<br>    if(x&lt;0) return 0;<br>    return (double)x;<br>  }<br>  public double find(int n, int a, int b){<br>    int[] vx = {0, a, a, -a, -a, b, b, -b, -b};<br>    int[] vy = {0, b, -b, b, -b, a, -a, a, -a};<br>    <br>    int len = 0;<br>    if(a==b){<br>      len = 5;<br>    }else{<br>      len = 9;<br>    }<br>    double nd = (double)n;<br>    <br>    double sexp = 0.0;<br>    for(int i=0;i&lt;len;i++){<br>      sexp += good(n - Math.abs(vx[i]))*good(n - Math.abs(vy[i]));<br>    }<br>    <br>    sexp*=2;<br>    sexp/= nd*nd;<br>    <br>    double dexp = 0.0;<br>    for(int i=0;i&lt;len;i++){<br>      for(int j=0;j&lt;len;j++){<br>        if(i!=j){<br>          int xMax = Math.max(0, Math.max(vx[i], vx[j]));<br>          int yMax = Math.max(0, Math.max(vy[i], vy[j]));<br>          int xMin = Math.min(0, Math.min(vx[i], vx[j]));<br>          int yMin = Math.min(0, Math.min(vy[i], vy[j]));<br>          <br>          int xRange = xMax - xMin;<br>          int yRange = yMax - yMin;<br>          <br>          dexp += good(n-xRange)*good(n-yRange);<br>        }<br>      }<br>    }<br>    dexp/= nd*nd*(nd*nd-1);<br>    <br>    return sexp - dexp;<br>  }<br>  <br><br>}<br></td>