<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class SmallBricks31<br>{<br>  public int countWays(int w, int h)<br>  {<br>        int[,] dp = new int[1 &lt;&lt; w, 1 &lt;&lt; w];<br>        int[,] f = new int[h + 2, 1 &lt;&lt; w];<br>        for (int s = 0; s &lt; (1 &lt;&lt; w); ++s)<br>        {<br>            dp[s, 0] = 1;<br>            for (int i = 0; i &lt; w; ++i)<br>                for (int j = i; j &lt; w &amp;&amp; j - i &lt;= 2; ++j)<br>                {<br>                    if ((s &amp; (1 &lt;&lt; i)) == 0)<br>                        continue;<br>                    if ((s &amp; (1 &lt;&lt; j)) == 0)<br>                        continue;<br>                    int t = 0;<br>                    for (int k = i; k &lt;= j; ++k)<br>                        t |= (1 &lt;&lt; k);<br>                    for (int k = 0; k &lt; (1 &lt;&lt; w); ++k)<br>                        if ((k &amp; t) == t)<br>                            dp[s, k] = (dp[s, k] + dp[s, k - t]) % 1000000007;<br>                }<br>        }<br>        f[0, (1 &lt;&lt; w) - 1] = 1;<br>        for (int d = 1; d &lt;= h + 1; ++d)<br>            for (int i = 0; i &lt; (1 &lt;&lt; w); ++i)<br>                for (int j = 0; j &lt; (1 &lt;&lt; w); ++j)<br>                    f[d, i] = (int)(((long)f[d, i] + (long)dp[j, i] * f[d - 1, j]) % 1000000007);<br>        return f[h + 1, 0];<br>  }<br>}<br></td>