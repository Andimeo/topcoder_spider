<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br> <br>public class ThreeTeleports<br>{<br>    int[] move = new int[3];<br>    int xGoal, yGoal;<br>    private string[] teleps;<br>   public int shortestDistance(int xMe, int yMe, int xHome, int yHome, string[] teleports)<br>   {<br>       xGoal = xHome;<br>       yGoal = yHome;<br>       teleps = teleports;<br> <br>      <br>       return (int)MoveNext(xMe, yMe);<br>  }<br> <br>    private long MoveNext(int startX, int startY)<br>    {<br>        long min = Math.Abs(xGoal - startX) + Math.Abs(yGoal - startY);;<br> <br>        int count = 0;<br>        int x1, y1, x2, y2;<br>        for (int index = 0; index &lt; teleps.Length; index++)<br>        {<br>            if (move[index] == 1)<br>                continue;<br> <br>            move[index] = 1;<br>            string[] teleport = teleps[index].Split(' ');<br>            x1 = Int32.Parse(teleport[0]);<br>            y1 = Int32.Parse(teleport[1]);<br>            x2 = Int32.Parse(teleport[2]);<br>            y2 = Int32.Parse(teleport[3]);<br>            count = Math.Abs(startX - x1) + Math.Abs(startY - y1);<br>            min = Math.Min(min, count + MoveNext(x2, y2) + 10);<br>            <br>            count = Math.Abs(startX - x2) + Math.Abs(startY - y2);<br>            min = Math.Min(min, count + MoveNext(x1, y1) + 10);<br> <br>            move[index] = 0;<br>        }<br>        return min;<br>    }<br> <br> <br>}<br>//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!<br></td>