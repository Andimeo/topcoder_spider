<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class ThreeTeleports {<br>public:<br>  int shortestDistance(int, int, int, int, vector &lt;string&gt;);<br>};<br> <br>int ThreeTeleports::shortestDistance(int xM, int yM, int xH, int yH, vector &lt;string&gt; tel) {<br>  int link[110][110],xyt[55][4],x[110],y[110],l=tel.size();<br>  for (int i=0;i&lt;tel.size();i++){<br>        int xx=0,yy=0;<br>      for (int j=0;j&lt;tel[i].size();j++){<br>          if (tel[i][j]==' ') {<br>                 xyt[i][yy++]=xx;<br>                 xx=0;<br>            }<br>          else xx=xx*10+tel[i][j]-'0';<br>            if (j==tel[i].size()-1) xyt[i][yy++]=xx;<br>         }          <br>     }<br>     x[0]=xM; y[0]=yM;<br>     int gs=1;<br>     memset(link,-1,sizeof(link));<br>     for (int i=0;i&lt;l;i++){<br>         x[gs]=xyt[i][0];<br>         y[gs++]=xyt[i][1];<br>         x[gs]=xyt[i][2];<br>         y[gs++]=xyt[i][3];<br>         link[gs-2][gs-1]=link[gs-1][gs-2]=10;<br>         <br>     }<br>     x[gs]=xH;<br>     y[gs++]=yH;<br>     for (int i=0;i&lt;gs;i++)<br>         for (int j=0;j&lt;gs;j++)<br>             if (link[i][j]==-1 || (abs(x[i]-x[j])+abs(y[i]-y[j])&lt;link[i][j]))<br>                link[i][j]=link[j][i]=abs(x[i]-x[j])+abs(y[i]-y[j]);<br>     <br>     for (int k=0;k&lt;gs;k++)<br>         for (int i=0;i&lt;gs;i++)<br>             if (i!=k &amp;&amp; link[i][k]!=-1)<br>             for (int j=0;j&lt;gs;j++)<br>               if (j!=k &amp;&amp; j!=i &amp;&amp; link[k][j]!=-1)<br>                  if (link[i][k]&lt;link[i][j]-link[k][j] || link[i][j]==-1)<br>                     link[i][j]=link[i][k]+link[k][j];<br>     return link[0][gs-1];<br>}<br></td>