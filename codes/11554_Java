<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br><br>public class ThreeTeleports {<br><br>  public int shortestDistance(int xMe, int yMe, int xHome, int yHome, String[] teleports) {<br>    int n = teleports.length;<br>    int[] x1 = new int[n], y1 = new int[n], x2 = new int[n], y2 = new int[n];<br>    long[][] a = new long[n*2+2][n*2+2];<br>    int p = n*2, q = n*2+1;<br>    for (int i = 0; i &lt; n*2+2; i++)<br>      Arrays.fill(a[i], Integer.MAX_VALUE);<br>    a[p][q] = a[q][p] = Math.abs(xMe-xHome) + Math.abs(yMe-yHome);<br>    for (int i = 0; i &lt; teleports.length; i++) {<br>      StringTokenizer str = new StringTokenizer(teleports[i]);<br>      x1[i] = Integer.parseInt(str.nextToken());<br>      y1[i] = Integer.parseInt(str.nextToken());<br>      x2[i] = Integer.parseInt(str.nextToken());<br>      y2[i] = Integer.parseInt(str.nextToken());<br>      a[i*2][i*2+1] = a[i*2+1][i*2] = 10;<br>      a[p][i*2] = a[i*2][p] = Math.abs(x1[i]-xMe) + Math.abs(y1[i]-yMe);<br>      a[q][i*2] = a[i*2][q] = Math.abs(x1[i]-xHome) + Math.abs(y1[i]-yHome);<br>      a[p][i*2+1] = a[i*2+1][p] = Math.abs(x2[i]-xMe) + Math.abs(y2[i]-yMe);<br>      a[q][i*2+1] = a[i*2+1][q] = Math.abs(x2[i]-xHome) + Math.abs(y2[i]-yHome);<br>      for (int j = 0; j &lt; i; j++) {<br>        a[i*2][j*2] = a[j*2][i*2] = Math.abs(x1[i]-x1[j]) + Math.abs(y1[i]-y1[j]);<br>        a[i*2][j*2+1] = a[j*2+1][i*2] = Math.abs(x1[i]-x2[j]) + Math.abs(y1[i]-y2[j]);<br>        a[i*2+1][j*2] = a[j*2][i*2+1] = Math.abs(x2[i]-x1[j]) + Math.abs(y2[i]-y1[j]);<br>        a[i*2+1][j*2+1] = a[j*2+1][i*2+1] = Math.abs(x2[i]-x2[j]) + Math.abs(y2[i]-y2[j]);        <br>      }<br>    }<br>    for (int k = 0; k &lt; n*2+2; k++)<br>      for (int i = 0; i &lt; n*2+2; i++)<br>        if (a[i][k] != Integer.MAX_VALUE)<br>          for (int j = 0; j &lt; n*2+2; j++)<br>            if (a[k][j] != Integer.MAX_VALUE &amp;&amp; (a[i][j] == 0 || a[i][j] &gt; a[i][k] + a[k][j]))<br>              a[i][j] = a[i][k] + a[k][j];<br>    return (int)a[p][q];<br>  }<br>  <br>}<br></td>