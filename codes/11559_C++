<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;string&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;cstdio&gt;<br>#include&lt;cstdlib&gt;<br>#include&lt;iostream&gt;<br>#include&lt;deque&gt;<br>#include&lt;cmath&gt;<br>#include&lt;set&gt;<br>#include&lt;map&gt;<br>#include&lt;queue&gt;<br>#include&lt;sstream&gt;<br>#include&lt;vector&gt;<br>using namespace std;<br>typedef pair&lt;int,int&gt; pii;<br>typedef long long ll;<br>const int inf = 1000000007;<br>const double pi = acos(-1.0);<br>const double eps = 1e-9;<br>ll gcd(ll x, ll y) { return y ? gcd(y, x%y): x; }<br>int bc(ll n) { return n ? bc(n&amp;(n-1)) + 1 : 0; }<br>#define SZ(s) ((int)(s.size()))<br>#define F0(i,n) for (i = 0; i &lt; n; i++)<br>#define F1(i,n) for (i = 1; i &lt;= n; i++)<br><br>int i, j, k, l, m, n;<br>vector &lt;double&gt; ans;<br><br><br>/*<br>vector &lt;double&gt; _solve() {<br>  return ans;<br>}<br><br>vector &lt;double&gt; stupid() {<br>  vector &lt;double&gt; ans;<br>  return ans;<br>}<br><br>void stress() {<br>  int tn = 0;<br>  while (1) {<br>    tn++;<br>    // generating code<br>    vector &lt;double&gt; ans1 = _solve();<br>    vector &lt;double&gt; ans2 = stupid();<br>    if (ans1 != ans2) {<br>      cout &lt;&lt; ans1 &lt;&lt; " " &lt;&lt; ans2 &lt;&lt; endl;<br>      return;<br>    } else {<br>      cout &lt;&lt; ".";<br>      if (tn%100 == 0) cout &lt;&lt; endl &lt;&lt; tn &lt;&lt; endl;<br>    }<br>  }<br>}<br>*/<br><br>class RGBGame {<br>  public:<br>  vector &lt;double&gt; probabilities(vector &lt;string&gt; b) {<br>    m = SZ(b);<br>    n = SZ(b[0]);<br>    double bad = 1.0;<br>    F0(i,m) {<br>      double currgood = 1.0;<br>      F0(j,n) if (b[i][j] == '?') currgood *= 1.0 / 3.0;<br>      else if (b[i][j] != 'R') currgood = 0.0;<br>      bad *= (1 - currgood);<br>    }<br>    ans.resize(2);<br>    ans[0] = 1-bad;<br><br>    bad = 1.0;<br>    F0(i,m) {<br>      double currgood = 1.0;<br>      F0(j,n) if (b[i][j] == '?') currgood *= 2.0 / 3.0;<br>      else if (b[i][j] == 'B') currgood = 0.0;<br>      bad *= (1 - currgood);<br>    }<br>    ans[1] = bad;<br><br>    return ans;<br>  }<br>};<br><br><br>// Powered by FileEdit<br></td>