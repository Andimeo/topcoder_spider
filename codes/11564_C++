<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class Cut {<br>public:<br>  int getMaximum(vector &lt;int&gt;, int);<br>};<br> <br>int Cut::getMaximum(vector &lt;int&gt; a, int cuts) {<br>  int n = a.size(), i, ans = 0;<br>  sort(a.begin(),a.end());<br>  for (i=0;i&lt;n;i++)<br>    if (a[i] % 10 == 0)<br>      if (cuts &gt;= a[i]/10-1) {<br>        cuts -= a[i]/10-1;<br>        ans += a[i]/10;<br>      }<br>      else return ans+cuts;<br>  for (i=0;i&lt;n;i++)<br>    if (a[i] % 10 != 0)<br>      if (cuts &gt;= a[i]/10) {<br>        cuts -= a[i]/10;<br>        ans += a[i]/10;<br>      }<br>      else return ans+cuts;<br>  return ans;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>