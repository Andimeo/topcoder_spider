<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define SIZE(X) ((int)(X.size()))<br>typedef long long int64;<br>const double pi=acos(-1.0);<br> <br>const int maxn=250+5;<br> <br>class CheckerFreeness<br>{<br>public:<br>  int n,m;<br>  int x[maxn],y[maxn],dx[maxn],dy[maxn];<br>  double p1[maxn],p2[maxn];<br>  int cross(int x0,int y0,int x1,int y1,int x2,int y2)<br>  {<br>    int64 t=(int64)(x1-x0)*(y2-y0)-(int64)(x2-x0)*(y1-y0);<br>    if (t==0) return 0;<br>    return (t&lt;0)?-1:1;<br>  }<br>  int calc(int x1,int y1,int x2,int y2)<br>  {<br>    double s=atan2((double)y2-y1,(double)x2-x1);<br>    int c1=0,c2=0;<br>    for (int i=0;i&lt;n;i++)<br>    {<br>      double t=atan2((double)y[i]-y1,(double)x[i]-x1);<br>      t-=s;<br>      for (;t&lt;0;t+=pi+pi);<br>      for (;t&gt;=pi+pi;t-=pi+pi);<br>      if (t&lt;=pi) p1[c1++]=t;<br>      else p2[c2++]=t;<br>    }<br>    sort(p1,p1+c1);<br>    sort(p2,p2+c2);<br>    int R=0;<br>    for (int i=0,k=0;i&lt;c1;i++)<br>    {<br>      for (;k&lt;c2 &amp;&amp; p2[k]-p1[i]&lt;=pi;k++);<br>      R+=k;<br>    }<br>    return R;<br>  }<br>  bool solve(int x1,int y1,int x2,int y2)<br>  {<br>    int c1=0,c2=0;<br>    for (int i=0;i&lt;n;i++)<br>      if (cross(x1,y1,x2,y2,x[i],y[i])&gt;0)<br>        c1++;<br>      else<br>        c2++;<br>    int e=calc(x1,y1,x2,y2)+calc(x2,y2,x1,y1);<br>    return (e!=c1*c2);<br>  }<br>  void init(int &amp;n,vector&lt;string&gt; vs,int x[])<br>  {<br>    n=0;<br>    string s="";<br>    for (int i=0;i&lt;SIZE(vs);i++) s+=vs[i];<br>    istringstream sin(s);<br>    for (;sin&gt;&gt;x[n];n++);<br>  }<br>  string isFree(vector &lt;string&gt; whiteX, vector &lt;string&gt; whiteY, vector &lt;string&gt; blackX, vector &lt;string&gt; blackY)<br>  {<br>    init(n,whiteX,x);<br>    init(n,whiteY,y);<br>    init(m,blackX,dx);<br>    init(m,blackY,dy);<br>    for (int i=0;i&lt;m;i++) for (int j=i+1;j&lt;m;j++) if (solve(dx[i],dy[i],dx[j],dy[j])) return "NO";<br>    return "YES";<br>  }<br>};<br></td>