<td class="problemText" colspan="8" valign="middle" align="left">
            //  SRM 521 (B)<br> <br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cassert&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;utility&gt;<br>#include &lt;numeric&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;bitset&gt;<br>#include &lt;complex&gt;<br> <br>using namespace std;<br> <br>typedef unsigned uint;<br>typedef long long Int;<br>typedef vector&lt;int&gt; vint;<br>typedef pair&lt;int,int&gt; pint;<br>#define mp make_pair<br> <br>template&lt;class T&gt; void pv(T a, T b) { for (T i = a; i != b; ++i) cout &lt;&lt; *i &lt;&lt; " "; cout &lt;&lt; endl; }<br>template&lt;class T&gt; void chmin(T &amp;t, T f) { if (t &gt; f) t = f; }<br>template&lt;class T&gt; void chmax(T &amp;t, T f) { if (t &lt; f) t = f; }<br> <br>const int INF = 1001001001;<br> <br>int N;<br>int xsLen, ysLen;<br>int xs[110], ys[110];<br> <br>struct RangeSquaredSubsets {<br>  <br>  bool intersect(int a, int b, int c, int d, int e, int f) {<br>    int z = max(a, max(c, e));<br>    return (z &lt;= b &amp;&amp; z &lt; d &amp;&amp; z &lt; f);<br>  }<br>  <br>  long long countSubsets(int nlow, int nhigh, vector &lt;int&gt; x, vector &lt;int&gt; y) {<br>    int i;<br>    int p, q, r, s;<br>    <br>    N = x.size();<br>    for (i = 0; i &lt; N; ++i) {<br>      xs[xsLen++] = x[i];<br>      ys[ysLen++] = y[i];<br>    }<br>    xs[xsLen++] = -INF;<br>    ys[ysLen++] = -INF;<br>    xs[xsLen++] = +INF;<br>    ys[ysLen++] = +INF;<br>    sort(xs, xs + xsLen);<br>    sort(ys, ys + ysLen);<br>    xsLen = unique(xs, xs + xsLen) - xs - 1;<br>    ysLen = unique(ys, ys + ysLen) - ys - 1;<br>    <br>    set&lt;Int&gt; hs;<br>    for (p = 1; p &lt; xsLen; ++p) for (q = 1; q &lt; ysLen; ++q) <br>    for (r = p; r &lt; xsLen; ++r) for (s = q; s &lt; ysLen; ++s) <br>    {<br>      if (!intersect(nlow, nhigh, xs[r] - xs[p], xs[r + 1] - xs[p - 1], ys[s] - ys[q], ys[s + 1] - ys[q - 1])) continue;<br>      Int h = 0;<br>      for (i = 0; i &lt; N; ++i) {<br>        if (!(xs[p] &lt;= x[i] &amp;&amp; x[i] &lt;= xs[r])) continue;<br>        if (!(ys[q] &lt;= y[i] &amp;&amp; y[i] &lt;= ys[s])) continue;<br>        h |= 1LL &lt;&lt; i;<br>      }<br>      if (!h) continue;<br>      hs.insert(h);<br>    }<br>    return hs.size();<br>    <br>  }<br>  <br>};<br></td>