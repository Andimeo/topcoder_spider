<td class="problemText" colspan="8" valign="middle" align="left">
            #pragma warning( disable : 4786 )<br><br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;functional&gt;<br>#include &lt;deque&gt;<br><br>using namespace std;<br><br>bool atps[ 20 ][ 21 ];<br>bool anps[ 20 ][ 21 ];<br><br>bool (*tps)[ 21 ];<br>bool (*nps)[ 21 ];<br><br>vector&lt; string &gt; spans;<br>vector&lt; int &gt; speeds;<br>string rows;<br><br>int tick;<br><br>bool issolid( int x, int y ) {<br>  if( !y )<br>    return true;<br>  int ry = rows[ y - 1 ];<br>  int hshift = -tick * speeds[ ry ] + x;<br>  if( hshift &lt; 50 )<br>    hshift += tick * 20;<br>  hshift %= 5;<br>  return spans[ ry ][ hshift ] == '#';<br>}<br><br>void place( int x, int y ) {<br>  if( y ) {<br>    int ry;<br>    ry = rows[ y - 1 ];<br>    x += speeds[ ry ];<br>  }<br>  if( x &lt; 0 || x &gt;= 20 )<br>    return;<br>  nps[ x ][ y ] = true;<br>}<br><br>class Jumper {<br>  public:<br>  int minTime(vector &lt;string&gt; a, vector &lt;int&gt; b, string c) {<br>    spans = a;<br>    speeds = b;<br>    for( int i = 0; i &lt; c.size(); i++ )<br>      rows += c[ i ] - '0';<br>    tps = atps;<br>    nps = anps;<br>    tick = 0;<br>    memset( tps, 0, sizeof( atps ) );<br>    memset( nps, 0, sizeof( anps ) );<br>    tps[ 0 ][ 0 ] = true;<br>    while( 1 ) {<br>      /*<br>      for( int y = 0; y &lt;= c.size(); y++ ) {<br>        for( int x = 0; x &lt; 20; x++ ) {<br>          printf( "%c", tps[ x ][ y ] ? '#' : '.' );<br>        }<br>        printf( "\n" );<br>      }*/  <br>      for( int x = 0; x &lt; 20; x++ ) {<br>        for( int y = 0; y &lt;= c.size(); y++ ) {<br>          if( tps[ x ][ y ] ) {<br>            if( y == c.size() )<br>              return tick + 1;<br>            if( y )<br>              if( issolid( x, y - 1 ) )<br>                place( x, y - 1 );<br>            if( x )<br>              if( issolid( x - 1, y ) )<br>                place( x - 1, y );<br>            if( x &lt; 19 )<br>              if( issolid( x + 1, y ) )<br>                place( x + 1, y );<br>            place( x, y );<br>            if( issolid( x, y + 1 ) )<br>              place( x, y + 1 );<br>          }<br>        }<br>      }<br>      swap( tps, nps );<br>      memset( nps, 0, sizeof( anps ) );<br>      tick++;<br>      if( tick &gt; 10000 )<br>        return -1;<br>    };<br>  }<br>};<br><br><br><br>// Powered by FileEdit<br></td>