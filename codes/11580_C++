<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class LongestSequence {<br>public:<br>  int maxLength(vector &lt;int&gt;);<br>};<br> <br>const int N = 50010;<br> <br>int ss[N*50], ff[N*50], x[N], deg[N], last[N], pred[N*50];<br> <br>int LongestSequence::maxLength(vector &lt;int&gt; c) {<br>  int n = c.size(), i, j, ok = 0, e;<br>  for (i=0;i&lt;n;i++)<br>    for (j=i+1;j&lt;n;j++)<br>      if (c[i]*c[j] &lt; 0) ok = 1;<br>  if (!ok) return -1;<br>  int ll = 0, rr = 50000;<br>  while (ll &lt; rr) {<br>    int mid = (ll+rr+1) &gt;&gt; 1;<br>    int m = 0;<br>    for (i=0;i&lt;n;i++)<br>      if (c[i] &gt; 0) {<br>        for (j=0;j&lt;=mid-c[i];j++) {<br>          m++;<br>          ss[m] = j;<br>          ff[m] = j+c[i];<br>        }<br>      } else {<br>        for (j=0;j&lt;=mid+c[i];j++) {<br>          m++;<br>          ss[m] = j-c[i];<br>          ff[m] = j;<br>        }<br>      }<br>    for (i=0;i&lt;=mid;i++) last[i] = 0;<br>    for (i=1;i&lt;=m;i++) {<br>      pred[i] = last[ss[i]];<br>      last[ss[i]] = i;<br>    }<br>    for (i=0;i&lt;=mid;i++) deg[i] = 0;<br>    for (i=1;i&lt;=m;i++) deg[ff[i]]++;<br>    e = 0;<br>    for (i=0;i&lt;=mid;i++)<br>      if (deg[i] == 0) {<br>        e++;<br>        x[e] = i;<br>      }<br>    i = 1;<br>    while (i &lt;= e) {<br>      j = last[x[i]];<br>      while (j &gt; 0) {<br>        deg[ff[j]]--;<br>        if (deg[ff[j]] == 0) {<br>          e++;<br>          x[e] = ff[j];<br>        }<br>        j = pred[j];<br>      }<br>      i++;<br>    }<br>    if (e == mid+1) ll = mid;<br>    else rr = mid-1;<br>  }<br>  return ll;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>