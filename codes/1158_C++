<td class="problemText" colspan="8" valign="middle" align="left">
            #line 2 "HillHike.cpp"<br><br>#include &lt;iostream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;map&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cmath&gt;<br><br>using namespace std;<br><br><br>long long dp[105][55][55][2];<br><br>class HillHike {<br>  public:<br>    <br>  vector&lt;int&gt; lm;<br>  int maxheight,start;<br>    <br>  long long solve(int distleft, int nextlm, int curh, int maxr)<br>  {<br>    if (!distleft) {<br>      if (curh || !maxr || (nextlm&lt;lm.size())) return 0;<br>      return 1;<br>     }<br>     if (!curh &amp;&amp; distleft&lt;start) return 0;<br>     long long &amp;sum=dp[distleft][nextlm][curh][maxr];<br>     if (sum&gt;=0) return sum;<br>     sum=0;<br>     if (nextlm&lt;lm.size() &amp;&amp; curh==lm[nextlm]) nextlm++;<br>     if (curh==maxheight) maxr=1;<br>     if (curh&gt;0) sum+=solve(distleft-1,nextlm,curh-1,maxr);<br>     sum+=solve(distleft-1,nextlm,curh,maxr);<br>     if (curh&lt;maxheight) sum+=solve(distleft-1,nextlm,curh+1,maxr);<br>     return sum;<br>  }    <br>  <br>  long long numPaths(int a, int b, vector &lt;int&gt; c) {<br>    memset(dp,-1,sizeof(dp));<br>    lm=c;<br>    maxheight=b;<br>    start=a;<br>    return solve(a,0,0,0);<br>  }<br>};<br><br><br>// Powered by FileEdit<br></td>