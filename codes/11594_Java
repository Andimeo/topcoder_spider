<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> */<br>public class MagicalSquare {<br>    public long getCount(String[] rowStrings, String[] columnStrings) {<br>        return getCount(rowStrings, columnStrings, 0, 0, 0);<br>    }<br><br>    private long getCount(String[] rows, String[] columns, int n, int f1, int f2) {<br>        if (n == 2) {<br>            int f3 = -(f1 + f2) + rows[0].length() + rows[1].length();<br>            StringBuilder sb = new StringBuilder();<br>            sb = sb.append(columns[0].substring(f1)).append(columns[1].substring(f2)).append(columns[2].substring(f3));<br>            if (rows[2].equals(sb.toString())) {<br>                return 1;<br>            }<br>            else {<br>                return 0;<br>            }<br>        }<br>        long res = 0;<br>        for(int c1 = 0; c1 &lt;= rows[n].length(); ++c1) {<br>            if (!columns[0].startsWith(rows[n].substring(0, c1), f1)) {<br>                continue;<br>            }<br>            for(int c2 = c1; c2 &lt;= rows[n].length(); ++c2) {<br>                if (!columns[1].startsWith(rows[n].substring(c1, c2), f2)) {<br>                    continue;<br>                }<br>                int f3 = -(f1 + f2);<br>                for(int i = 0; i &lt; n; ++i) {<br>                    f3 += rows[i].length();<br>                }<br>                if (!columns[2].startsWith(rows[n].substring(c2), f3)) {<br>                    continue;<br>                }<br>                res += getCount(rows, columns, n + 1, f1 + c1, f2 + c2 - c1);<br>            }<br>        }<br>        return res;<br>    }<br>}<br><br><br><br>// Powered by FileEdit<br></td>