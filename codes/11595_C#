<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class ColorfulCookie {<br><br>    public int getMaximum(int[] cookies, int P1, int P2)<br>    {<br>        int i, j, k;<br>        int low = 0;<br>        int high = 1024;<br>        while (low + 1 &lt; high)<br>        {<br>            int mid = (low + high) / 2;<br>            int[] dp = new int[mid + 1];<br>            for (i = 0; i &lt;= mid; i++) dp[i] = -99999999;<br>            dp[0] = 0;<br><br>            for (i = 0; i &lt; cookies.Length; i++)<br>            {<br>                int[] next1 = new int[2000];<br>                int[] next2 = new int[2000];<br>                int count = 0;<br>                int prev = -1;<br>                for (k = Math.Min(mid, cookies[i] / P1); k &gt;= 0; k--)<br>                {<br>                    int k2 = Math.Min((cookies[i] - (P1 * k)) / P2, mid - k);<br>                    if (k2 == prev) continue;<br>                    if (k2 &lt; 0) continue;<br>                    prev = k2;<br>                    next1[count] = k;<br>                    next2[count] = k2;<br>                    count++;<br>                }<br><br><br>                for (j = mid; j &gt;= 0; j--)<br>                {<br>                    if (dp[j] &lt; 0) continue;<br>                    int memo = dp[j];<br>                    for (k = 0; k &lt; count; k++)<br>                    {<br>                        int nextj = Math.Min(mid, j + next1[k]);<br>                        int nextk = dp[j] + next2[k];<br>                        if (j != nextj) dp[nextj] = Math.Max(dp[nextj], nextk);<br>                        else memo = Math.Max(memo, nextk);<br>                    }<br>                    dp[j] = Math.Max(dp[j], memo);<br>                }<br>            }<br>            if (dp[mid] &gt;= mid) low = mid;<br>            else high = mid;<br>        }<br>        return low * (P1 + P2);<br>    }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>