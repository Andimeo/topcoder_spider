<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class ColorfulCookie {<br>public:<br>  int getMaximum(vector &lt;int&gt;, int, int);<br>};<br> <br>int f[55][2222], b[55], c[55][55];<br> <br>int ColorfulCookie::getMaximum(vector &lt;int&gt; a, int p1, int p2) {<br>  int n = a.size(), i, j, ll = 0, rr = 0, mid, ft, k;<br>  for (i=0;i&lt;n;i++) {<br>    b[i] = a[i]/p1;<br>    for (j=0;j&lt;=b[i];j++) c[i][j] = (a[i]-j*p1)/p2;<br>  }<br>  for (i=0;i&lt;n;i++) rr += a[i];<br>  rr /= (p1+p2);<br>  while (ll &lt; rr) {<br>    mid = (ll+rr+1) &gt;&gt; 1;<br>    memset(f,255,sizeof(f));<br>    f[0][0] = 0;<br>    for (i=0;i&lt;n;i++)<br>      for (j=0;j&lt;=40*i;j++)<br>        if (f[i][j] &gt;= 0)<br>          for (k=0;k&lt;=b[i] &amp;&amp; k&lt;=mid;k++) {<br>            ft = c[i][k];<br>            if (ft &gt; mid-k) ft = mid-k;<br>            ft += f[i][j];<br>            if (ft &gt; f[i+1][j+k]) f[i+1][j+k] = ft;<br>          }<br>    if (f[n][mid] &gt;= mid) ll = mid;<br>    else rr = mid-1;<br>  }<br>  return ll*(p1+p2);<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>