<td class="problemText" colspan="8" valign="middle" align="left">
            //package topcoder;<br> <br>public class AlphabetPath {<br>  <br> <br>  <br>  char[][] a = new char[55][55];<br>  int n, m;<br>  boolean flag;<br>  int[] dx = new int[]{0, 0, -1, 1};<br>  int[] dy = new int[]{-1, 1, 0, 0};<br>  <br>  public String doesItExist(String[] letterMaze)<br>  {<br>    n = letterMaze.length;<br>    m = letterMaze[0].length();<br>    for (int i = 0; i &lt; n; i++)<br>      for (int j = 0; j &lt; m; j++)<br>        a[i][j] = letterMaze[i].charAt(j);<br> <br>    flag = false;<br>    for (int i = 0; i &lt; n; i++)<br>      for (int j = 0; j &lt; m; j++)<br>        if (a[i][j] == 'A')<br>          dfs(i, j);<br>    if (flag) return "YES";<br>    else return "NO";<br>  }<br> <br>  void dfs(int i, int j)<br>  {<br>    if (a[i][j] == 'Z')<br>    {<br>      flag = true;<br>      return;<br>    }<br>    for (int k = 0; k &lt; 4; k++)<br>    {<br>      int x = i + dx[k], y = j + dy[k];<br>      if (x &gt;= 0 &amp;&amp; x &lt; n &amp;&amp; y &gt;= 0 &amp;&amp; y &lt; m)<br>      {<br>        if (a[x][y] - a[i][j] == 1)<br>          dfs(x, y);<br>      }<br>    }<br>  }<br> <br>}<br></td>