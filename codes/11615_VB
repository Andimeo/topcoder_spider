<td class="problemText" colspan="8" valign="middle" align="left">
            Imports System<br>Imports System.Collections<br>Imports System.Collections.Generic<br>Imports Microsoft.VisualBasic<br><br><br>Public Class AlphabetPath<br><br>    Private len As Int32<br><br><br>    Private Function areClose(ByVal c1 As Char, ByVal c2 As Char) As Boolean<br>        Return (Asc(c1) + 1) = Asc(c2)<br>    End Function<br><br>    Private Function tryGet(ByRef m As String(), ByVal x As Int32, ByVal y As Int32) As Char<br>        If x &lt; 0 OrElse x &gt;= len OrElse y &lt; 0 OrElse y &gt;= m.Length Then Return "0"c<br>        Return CChar(m(y).Substring(x, 1))<br>    End Function<br><br>    Public Function doesItExist(ByVal letterMaze As String()) As String<br>        Dim i, x, y As Int32, val As Boolean, ret As Boolean = True<br>        Dim c As Char<br>        len = letterMaze(0).Length<br><br>        For y = 0 To letterMaze.Length - 1<br>            For x = 0 To len - 1<br>                If letterMaze(y).Substring(x, 1) = "A"c Then GoTo Start<br>            Next<br>        Next<br>Start:<br>        For i = 1 To 26<br>            val = False<br>            c = letterMaze(y).Substring(x, 1)<br>            If Not val AndAlso areClose(c, tryGet(letterMaze, x + 1, y)) Then<br>                val = True<br>                c = tryGet(letterMaze, x + 1, y)<br>                x += 1<br>            End If<br>            If Not val AndAlso areClose(c, tryGet(letterMaze, x - 1, y)) Then<br>                val = True<br>                c = tryGet(letterMaze, x - 1, y)<br>                x -= 1<br>            End If<br>            If Not val AndAlso areClose(c, tryGet(letterMaze, x, y + 1)) Then<br>                val = True<br>                c = tryGet(letterMaze, x, y + 1)<br>                y += 1<br>            End If<br>            If Not val AndAlso areClose(c, tryGet(letterMaze, x, y - 1)) Then<br>                val = True<br>                c = tryGet(letterMaze, x, y - 1)<br>                y -= 1<br>            End If<br>            If Not val AndAlso c &lt;&gt; "Z"c Then Return "NO"<br>        Next<br><br>        Return "YES"<br>    End Function<br><br>End Class<br></td>