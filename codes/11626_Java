<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class SumOfLuckiness {<br> <br>    private ArrayList&lt;Integer&gt; a;<br>    private long[][][][] dp;<br> <br>    private long go(int pos, int smaller, int four, int seven) {<br>        if (pos == -1) {<br>            return Math.abs(four - seven);<br>        }<br> <br>        long result = dp[pos][smaller][four][seven];<br> <br>        if (result != -1) {<br>            return result;<br>        }<br> <br>        result = 0;<br>        int maxdig = (smaller == 0) ? a.get(pos) : 9;<br> <br>        for (int d = 0; d &lt;= maxdig; ++d) {<br>            int nextsmaller = smaller | (d &lt; a.get(pos) ? 1 : 0);<br>            int nextfour = four + (d == 4 ? 1 : 0);<br>            int nextseven = seven + (d == 7 ? 1 : 0);<br>            result += go(pos - 1, nextsmaller, nextfour, nextseven);<br>        }<br> <br> <br>        dp[pos][smaller][four][seven] = result;<br>        return result;<br>    }<br> <br>    private long howmany(int N) {<br>        if (N == 0) {<br>            return 0;<br>        }<br> <br>        a = new ArrayList&lt;Integer&gt;();<br>        while (N &gt; 0) {<br>            a.add(N % 10);<br>            N /= 10;<br>        }<br> <br>        int n = a.size();<br>        dp = new long[n][2][11][11];<br> <br>        for (int i = 0; i &lt; n; ++i) {<br>            for (int s = 0; s &lt; 2; ++s) {<br>                for (int f = 0; f &lt; 11; ++f) {<br>                    Arrays.fill(dp[i][s][f], -1);<br>                }<br>            }<br>        }<br> <br>        return go(n - 1, 0, 0, 0);<br>    }<br> <br>    public long theSum(int A, int B) {<br>        return howmany(B) - howmany(A - 1);<br>    }<br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>