<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class MultiplesWithLimit<br>{<br>  public String minMultiples(int N, int[] input)<br>  {<br>    int visited[]=new int[11100];<br>    int v[]=new int[10];<br>    for(int i=0;i&lt;10001;i++)visited[i]=0;<br>    for(int i=0;i&lt;10;i++)v[i]=0;<br>    for(int i=0;i&lt;input.length;i++)v[input[i]]=1;<br>    Queue&lt;BigInteger&gt; q=new LinkedList&lt;BigInteger&gt;();<br>    int sz=input.length;<br>    BigInteger ar[]=new BigInteger[10-sz];<br>    int index=0;<br>    for(int i=1;i&lt;10;i++){<br>      if(v[i]==0){<br>        BigInteger bbb=new BigInteger(new String(Integer.toString(i)));<br>        q.add(bbb);<br>      }<br>    }<br>    BigInteger n=new BigInteger(new String(Integer.toString(N)));<br>    BigInteger ten=new BigInteger(new String(Integer.toString(10)));<br>    BigInteger arrr[]=new BigInteger[10];<br>    for(int i=0;i&lt;10;i++)<br>      arrr[i]=new BigInteger(new String(Integer.toString(i)));<br>    while(q.size()&gt;0){<br>      BigInteger top=q.peek();<br>      //System.out.println(top+"  "+top.mod(n));<br>      int x=top.mod(n).intValue();<br>      if(x==0){<br>        // do <br>        String ans=top.toString();<br>        int len=ans.length();<br>        if(len&lt;9)return ans;<br>        String a3=ans.substring(0,3);<br>        String l3=ans.substring(len-3);<br>        String l="("+Integer.toString(len)+" digits)";<br>        String ret=a3+"..."+l3+l;<br>        return ret;<br>      }<br>      q.poll();<br>      for(int i=0;i&lt;10;i++){<br>        if(v[i]==0){<br>          BigInteger temp=top.multiply(ten);<br>          temp=temp.add(arrr[i]);<br>          BigInteger m=temp.mod(n);<br>          int mo=m.intValue();<br>          if(visited[mo]==1){<br>            continue;<br>          }<br>          else{<br>            visited[mo]=1;<br>            q.add(temp);<br>          }<br>        }<br>      }<br>    }<br>    return "IMPOSSIBLE";<br>  }<br>  <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>