<td class="problemText" colspan="8" valign="middle" align="left">
            #line 5 "AlphabetPaths.cpp"<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;fstream&gt;<br>#include &lt;numeric&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;bitset&gt;<br>#include &lt;list&gt;<br>#include &lt;stdexcept&gt;<br>#include &lt;functional&gt;<br>#include &lt;utility&gt;<br>#include &lt;ctime&gt;<br>using namespace std;<br><br>#define PB push_back<br>#define MP make_pair<br><br>#define REP(i,n) for(i=0;i&lt;(n);++i)<br>#define FOR(i,l,h) for(i=(l);i&lt;=(h);++i)<br>#define FORD(i,h,l) for(i=(h);i&gt;=(l);--i)<br>#define sqr(x) ((x)*(x))<br>#define lowbit(x) ((x)&amp;(-(x)))<br><br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br>typedef vector&lt;double&gt; VD;<br>typedef long long LL;<br>typedef pair&lt;int,int&gt; PII;<br><br>int cnt[(1&lt;&lt;21)+5],mark[(1&lt;&lt;21)+5],stamp;<br>int n,m;<br>VS a;<br>VI bak;<br>const string test="ABCDEFZHIKLMNOPQRSTVX";<br>map&lt;char,int&gt; hash;<br>const int dx[]={0,1,0,-1};<br>const int dy[]={1,0,-1,0};<br><br>inline void dfs(int x,int y,int st,int last)<br>{<br>  if (!last){<br>    if (mark[st]!=stamp){<br>      mark[st]=stamp;<br>      bak.push_back(st);<br>      cnt[st]=0;<br>    }<br>    ++cnt[st];<br>    return;<br>  }<br>  for (int k=0;k&lt;4;++k){<br>    int tx=x+dx[k],ty=y+dy[k];<br>    if (tx&gt;=0 &amp;&amp; ty&gt;=0 &amp;&amp; tx&lt;n &amp;&amp; ty&lt;m)<br>      if (a[tx][ty]!='.' &amp;&amp; !(st&amp;(1&lt;&lt;hash[a[tx][ty]])))<br>        dfs(tx,ty,st|1&lt;&lt;hash[a[tx][ty]],last-1);<br>  }<br>  <br>}<br><br>class AlphabetPaths<br>{<br>        public:<br>        long long count(vector &lt;string&gt; letterMaze)<br>        {<br>      for (int i=0;i&lt;test.size();++i)<br>        hash[test[i]]=i;<br>      a=letterMaze;<br>      n=a.size();<br>      m=a[0].size();<br>      <br>      memset(mark,-1,sizeof(mark));<br>      stamp=0;<br>      long long ans=0;<br>      for (int i=0;i&lt;n;++i)<br>        for (int j=0;j&lt;m;++j)<br>        if (a[i][j]!='.'){<br>          ++stamp;<br>          bak.clear();<br>          dfs(i,j,1&lt;&lt;hash[a[i][j]],10);<br>          <br>          for (int k=0;k&lt;bak.size();++k){<br>            int x=bak[k];<br>            int y=(1&lt;&lt;21)-1-(x^(1&lt;&lt;hash[a[i][j]]));<br>            if (mark[y]==stamp){<br>              ans+=(long long)cnt[x]*cnt[y];<br>            }<br>          }<br>        }<br>      return ans;<br>        }<br>        <br><br>};<br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>