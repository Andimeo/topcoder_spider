<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class Mosquitoes {<br>  public static int oo = 123456789;<br>public static int getMaximum(int[] xInit, int[] v, int R)<br>{<br>  int max = 1;<br>  for(int i = 0; i&lt;xInit.length; i++)<br>  {<br>    double[] intersect = new double[xInit.length];<br>    for(int j = 0; j&lt;xInit.length; j++)<br>    {<br>      if(j==i)<br>        intersect[j] = 0;<br>      else<br>        intersect[j] = 1.0*(xInit[j] - xInit[i] - 2*R)/(v[i] - v[j]);<br>      if(intersect[j] &lt; 0)<br>        intersect[j] = oo;<br>    }<br>    for(double k: intersect)<br>    {<br>      int count = 0;<br>      if(k==oo)<br>        continue;<br>      for(int m = 0; m&lt;xInit.length; m++)<br>      {<br>        double dist = (xInit[m] + k*v[m] - xInit[i] - k*v[i]);<br>        //System.out.println(dist + " " + k);<br>        if(dist &gt;= -1E-9 &amp;&amp; dist &lt;= 2*R+1E-9)<br>          count++;<br>      }<br>      if(count &gt; max)<br>        max = count;<br>    }<br>  }<br>  return max;<br>}<br>}<br></td>