<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br>import java.awt.geom.*;<br><br>public class RoadTrip{<br>char grid[][] = new char[32][32];<br>boolean used[][][] = new boolean[32][32][4];<br>boolean seen[][] = new boolean[32][32];<br>int nr, nc;<br> <br>public int howMany( String[] map ){<br>   nr = map.length; nc = map[0].length();<br>   for (int r = 0; r &lt; nr; r++)<br>      for (int c = 0; c &lt; nc; c++)<br>         grid[r][c] = map[r].charAt(c);<br> <br>   int best = 0;<br>   for (int r = 0; r &lt; nr; r++)<br>      for (int c = 0; c &lt; nc; c++)<br>         for (int d = 0; d &lt; 4; d++) {<br>            int dist = travel(r, c, d);<br>            if (dist &gt; best) best = dist;<br>         }<br>   return best;<br>}<br> <br>int dr[] = {-1,0,1,0};<br>int dc[] = {0,1,0,-1};<br> <br>boolean inbounds(int r, int c)<br>{<br>   return r &gt;= 0 &amp;&amp; r &lt; nr &amp;&amp; c &gt;= 0 &amp;&amp; c &lt; nc;<br>}<br> <br>int travel(int sr, int sc, int dir)<br>{<br>   int r, c, d;<br>   int nseen = 0;<br> <br>   for (r = 0; r &lt; nr; r++)<br>      for (c = 0; c &lt; nc; c++)<br>         for (d = 0; d &lt; 4; d++)<br>            used[r][c][d] = false;<br>   for (r = 0; r &lt; nr; r++)<br>      for (c = 0; c &lt; nc; c++)<br>         seen[r][c] = false;<br>   <br>   r = sr; c = sc; d = dir;<br>   while (inbounds(r,c) &amp;&amp; !used[r][c][d]) {<br>      used[r][c][d] = true;<br>      if (!seen[r][c]) {seen[r][c] = true; nseen++;}<br>      if (grid[r][c] == 'R') d = (d + 1) % 4;<br>      else if (grid[r][c] == 'L') d = (d + 3) % 4;<br>      else if (grid[r][c] == 'B') d = (d + 2) % 4;<br> <br>      r += dr[d]; c += dc[d];<br>   }<br> <br>   return nseen;<br>}<br>}<br><br>// Powered by PopsEdit<br><br><br>// Powered by FileEdit<br></td>