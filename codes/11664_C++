<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;string&gt;<br>#include &lt;utility&gt;<br>#include &lt;vector&gt;<br> <br>using namespace std;<br> <br>class Rumor {<br>    public:<br>        int getMinimum( string knowledge, vector &lt;string&gt; graph );<br>};<br> <br>int Rumor::getMinimum( string knowledge, vector &lt;string&gt; graph ) {<br>    int n = knowledge.size(), ans = 1000;<br>    for (int pr = 0; pr &lt; (1 &lt;&lt; n); pr++) {<br>      int a[n], b[n];<br>      for (int i = 0; i &lt; n; i++)<br>        a[i] = b[i] = (knowledge[i] == 'Y');<br>      int res = 0, ok = 0;<br>      while (true) {<br>        ok = 1;<br>        /*<br>        printf("step %d:", res);<br>        for (int i = 0; i &lt; n; i++)<br>          printf(" (%d%d)", a[i], b[i]);<br>        printf("\n");<br>        */<br>        for (int i = 0; i &lt; n &amp;&amp; ok; i++)<br>          if (!a[i] || !b[i])<br>            ok = 0;<br>        if (ok)<br>          break;<br>        res++;<br>        int ch = 0;<br>        for (int i = 0; i &lt; n; i++) {<br>          int spread = -1;<br>          if (a[i] == 1 &amp;&amp; b[i] != 1)<br>            spread = 0;<br>          if (a[i] != 1 &amp;&amp; b[i] == 1)<br>            spread = 1;<br>          if (a[i] == 1 &amp;&amp; b[i] == 1)<br>            spread = ((pr &gt;&gt; i) &amp; 1);<br>          if (spread == -1)<br>            continue;<br>          ch = 1;<br>          assert((spread == 0 ? a : b)[i] == 1);<br>          (spread == 0 ? a : b)[i]++;<br>          for (int j = 0; j &lt; n; j++)<br>            if (graph[i][j] == 'Y' &amp;&amp; (spread == 0 ? a : b)[j] == 0)<br>              (spread == 0 ? a : b)[j] = -1;<br>        }<br>        for (int i = 0; i &lt; n; i++)<br>          a[i] = abs(a[i]), b[i] = abs(b[i]);<br>        if (!ch)<br>          break;<br>      }<br>      // printf("pr = %d, ok = %d, res = %d\n", pr, ok, res);<br>      if (ok)<br>          ans = min(ans, res);<br>    }<br>    if (ans == 1000)<br>      ans = -1;<br>    return ans;<br>}<br> <br> <br>// Powered by PopsEdit<br></td>