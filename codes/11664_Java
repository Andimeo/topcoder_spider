<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> */<br>public class Rumor {<br>   public int getMinimum(String knowledge, String[] graph) {<br>       int n = knowledge.length();<br>       int[] tells = new int[n];<br>       for (int i = 0; i &lt; n; ++i)<br>           for (int j = 0; j &lt; n; ++j)<br>               if (graph[i].charAt(j) == 'Y')<br>                   tells[i] |= (1 &lt;&lt; j);<br>       int startKnow = 0;<br>       for (int i = 0; i &lt; n; ++i) if (knowledge.charAt(i) == 'Y') startKnow |= (1 &lt;&lt; i);<br>       int res = 1000;<br>       for (int mask = 0; mask &lt; (1 &lt;&lt; n); ++mask) {<br>           int knowA = startKnow;<br>           int knowB = startKnow;<br>           int freshA = knowA;<br>           int freshB = knowB;<br>           for (int time = 0;; ++time) {<br>               if (knowA == (1 &lt;&lt; n) - 1 &amp;&amp; knowB == (1 &lt;&lt; n) - 1) {<br>                   res = Math.min(res, time);<br>                   break;<br>               }<br>               if (freshA == 0 &amp;&amp; freshB == 0) break;<br>               int oldA = knowA;<br>               int oldB = knowB;<br>               for (int i = 0; i &lt; n; ++i) {<br>                   boolean tellsA = (freshA &amp; (1 &lt;&lt; i)) != 0;<br>                   boolean tellsB = (freshB &amp; (1 &lt;&lt; i)) != 0;<br>                   if (!tellsA &amp;&amp; !tellsB) continue;<br>                   if (tellsA &amp;&amp; !tellsB) {<br>                       freshA ^= 1 &lt;&lt; i;<br>                       knowA |= tells[i];<br>                   } else if (!tellsA &amp;&amp; tellsB) {<br>                       freshB ^= 1 &lt;&lt; i;<br>                       knowB |= tells[i];<br>                   } else {<br>                       if ((mask &amp; (1 &lt;&lt; i)) != 0) {<br>                           freshB ^= 1 &lt;&lt; i;<br>                           knowB |= tells[i];<br>                       } else {<br>                           freshA ^= 1 &lt;&lt; i;<br>                           knowA |= tells[i];<br>                       }<br>                   }<br>               }<br>               freshA |= (knowA ^ oldA);<br>               freshB |= (knowB ^ oldB);<br>           }<br>       }<br>       if (res == 1000) return -1;<br>       return res;<br>   }<br> <br> <br>}<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.16 [modified TZTester]<br>// Powered by CodeProcessor<br></td>