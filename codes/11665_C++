<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cassert&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;iostream&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br><br>using namespace std;<br><br>#define FOR(i, a, b) for (int i = (a); i &lt;= (b); i++)<br>#define FORD(i, a, b) for (int i = (a); i &gt;= (b); i--)<br>#define REP(i, a) for (int i = 0; i &lt; (a); i++)<br>#define FIT(it, v) for (typeof((v).begin())it = (v).begin(); it != (v).end(); it++)<br><br>#define SZ(v) ((int)(v).size())<br>#define ALL(v) (v).begin(), (v).end()<br>#define SET(a, x) memset((a), (x), sizeof(a))<br>#define SORT(v) sort(ALL(v))<br>#define GSORT(v) sort(ALL(v), greater&lt;typeof(*(v).begin())&gt;())<br>#define UNIQUE(v) SORT(V); (v).resize(unique(ALL(v)) - (v).begin())<br><br>#define PB push_back<br>#define MP make_pair<br>#define F first<br>#define S second<br><br>typedef long long ll;<br>typedef pair&lt;int, int&gt; pii;<br><br>const int INF = (int) 1E9 + 5;<br>const double EPS = 1E-9;<br>const ll MOD = (ll) 1E9 + 7;<br><br>const int dx[] = { -1, 0, 0, 1 };<br>const int dy[] = { 0, -1, 1, 0 };<br><br>const int MAXN = 35;<br><br>class DropCoins {<br>  public:<br><br>  int numCoin[MAXN][MAXN];<br><br>  inline int doCount(int x1, int y1, int x2, int y2) {<br>    return numCoin[x2][y2] - numCoin[x1 - 1][y2] - numCoin[x2][y1 - 1] + numCoin[x1 - 1][y1 - 1];<br>  }<br><br>  int getMinimum(vector &lt;string&gt; board, int K) {<br>    int M = SZ(board), N = SZ(board[0]);<br>    <br>    SET(numCoin, 0);<br>    FOR(i, 1, M) {<br>      FOR(j, 1, N) {<br>        numCoin[i][j] = numCoin[i - 1][j] + numCoin[i][j - 1] - numCoin[i - 1][j - 1];<br>        if (board[i - 1][j - 1] == 'o') {<br>          numCoin[i][j]++;<br>        }<br>      }<br>    }<br><br>    int ret = INF;<br>    FOR(i, 1, M) {<br>      FOR(j, 1, N) {<br>        FOR(u, i, M) {<br>          FOR(v, j, N) {<br>            int cnt = doCount(i, j, u, v);<br>            if (cnt == K) {<br>              int a = min(i - 1, M - u), b = max(i - 1, M - u);<br>              int c = min(j - 1, N - v), d = max(j - 1, N - v);<br>              ret = min(ret, a * 2 + b + c * 2 + d);<br>            }<br>          }<br>        }<br>      }<br>    }<br>    if (ret == INF) ret = -1;<br><br>    return ret;<br>  }<br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>