<td class="problemText" colspan="8" valign="middle" align="left">
            Public Class DropCoins<br>    Private sum(,) As Integer<br> <br>    Private Function rect(ByVal i0 As Integer, ByVal i1 As Integer, ByVal j0 As Integer, ByVal j1 As Integer) As Integer<br>        Return sum(i1, j1) + sum(i0, j0) - sum(i0, j1) - sum(i1, j0)<br>    End Function<br> <br>    Public Function getMinimum(ByVal board As String(), ByVal K As Integer) As Integer<br>        Dim h As Integer = board.Length<br>        Dim w As Integer = board(0).Length<br>        ReDim sum(h, w)<br>        Dim cur As Integer<br>        For i As Integer = 0 To h - 1<br>            For j As Integer = 0 To w - 1<br>                sum(i + 1, j + 1) = sum(i, j + 1) + IIf(board(i)(j) = "o", 1, 0)<br>            Next<br>        Next<br>        For i As Integer = 0 To h - 1<br>            For j As Integer = 0 To w - 1<br>                sum(i + 1, j + 1) += sum(i + 1, j)<br>            Next<br>        Next<br>        getMinimum = Integer.MaxValue<br>        For i0 As Integer = 0 To h - 1<br>            For i1 As Integer = i0 + 1 To h<br>                For j0 As Integer = 0 To w - 1<br>                    For j1 As Integer = j0 + 1 To w<br>                        If rect(i0, i1, j0, j1) = K Then<br>                            cur = h - i1 + i0 + Math.Min(h - i1, i0) + w - j1 + j0 + Math.Min(w - j1, j0)<br>                            If cur &lt; getMinimum Then getMinimum = cur<br>                        End If<br>                    Next<br>                Next<br>            Next<br>        Next<br>        If getMinimum = Integer.MaxValue Then Return -1<br>    End Function<br>End Class<br></td>