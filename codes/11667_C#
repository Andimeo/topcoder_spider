<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class DucksAlignment {<br>    public int minimumTime(string[] grid)<br>    {<br>        List&lt;int&gt; lx = new List&lt;int&gt;();<br>        List&lt;int&gt; ly = new List&lt;int&gt;();<br>        int i, j;<br>        for (i = 0; i &lt; grid.Length; i++)<br>        {<br>            for (j = 0; j &lt; grid[0].Length; j++)<br>            {<br>                if (grid[i][j] == 'o')<br>                {<br>                    lx.Add(j);<br>                    ly.Add(i);<br>                }<br>            }<br>        }<br>        int ret = int.MaxValue;<br>        for (i = 0; i &lt; grid.Length; i++)<br>        {<br>            int now = 0;<br>            foreach (int a in ly)<br>            {<br>                now += Math.Abs(i - a);<br>            }<br>            ret = Math.Min(now, ret);<br>        }<br>        int ret2 = int.MaxValue;<br>        for (j = 0; j &lt; grid[0].Length; j++)<br>        {<br>            int now = 0;<br>            foreach (int a in lx)<br>            {<br>                now += Math.Abs(j - a);<br>            }<br>            ret2 = Math.Min(now, ret2);<br>        }<br>        //Console.WriteLine(ret + " " + ret2);<br><br>        int res = ret + ret2;<br>        for (i = 0; i &lt; lx.Count; i++)<br>        {<br>            res -= (i + 1) / 2;<br>        }<br><br>        return res;<br>    }<br><br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>