<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System<br>Imports System.Collections<br>Imports System.Collections.Generic<br>Imports System.Text<br>Imports System.Math<br>Imports Weight = System.Int32<br>Public Class DucksAlignment<br>    Public Structure Point<br>        Public X As Integer, Y As Integer<br>    End Structure<br>    Public Function minimumTime(ByVal grid As String()) As Integer<br>        Dim i As Integer, j As Integer<br>        Dim W As Integer = grid.Length<br>        Dim H As Integer = grid(0).Length<br>        Dim N As Integer = 0<br>        Dim Ducks As New List(Of Point)<br>        For i = 0 To W - 1<br>            For j = 0 To H - 1<br>                If grid(i)(j) = "o"c Then<br>                    N += 1<br>                    Dim P As Point<br>                    P.X = i<br>                    P.Y = j<br>                    Ducks.Add(P)<br>                End If<br>            Next<br>        Next<br>        Dim X As Integer, Y As Integer<br>        minimumTime = 99999999<br>        For tmp As Integer = 0 To 1<br>            For X = 0 To W - 1<br>                For Y = 0 To H - 1<br> <br>                    '[\u27178]<br>                    If X + N &lt;= W Then<br>                        '50x50<br>                        Dim Used(N - 1) As Boolean<br>                        For j = 0 To N - 1<br>                            Used(j) = False<br>                        Next<br>                        If Y = 1 Then<br> <br> <br>                        End If<br>                        Dim TeRes As Integer = 0<br>                        For i = 0 To N - 1<br>                            Dim MinDist As Integer = 99999999<br>                            Dim MC As Integer = -1<br>                            For j = 0 To N - 1<br>                                If Used(j) Then Continue For<br>                                If Ducks(j).X - (X) &lt; MinDist Then<br>                                    MinDist = Ducks(j).X - (X)<br>                                    MC = j<br>                                End If<br>                            Next<br>                            TeRes += Abs(Ducks(MC).X - (X + i)) + Abs(Ducks(MC).Y - Y)<br>                            Used(MC) = True<br>                        Next<br>                        minimumTime = Min(minimumTime, TeRes)<br>                        '.WriteLine(TeRes)<br>                    End If<br>                Next<br>            Next<br>            Dim tmpW As Integer = H<br>            Dim tmpH As Integer = W<br>            For i = 0 To N - 1<br>                Dim t As Integer<br>                Dim P As Point<br>                P.X = Ducks(i).Y<br>                P.Y = Ducks(i).X<br>                Ducks(i) = P<br> <br>            Next<br>            H = tmpH<br>            W = tmpW<br>        Next<br> <br>    End Function<br>    Public Shared Sub Swap(Of T)(ByRef a As T, ByRef b As T)<br>        Dim temp As T = a : a = b : b = temp<br>    End Sub<br>End Class<br></td>