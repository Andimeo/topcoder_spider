<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class TurtleSpy {<br>    public double maxDistance(string[] commands)<br>    {<br>        List&lt;int&gt; num = new List&lt;int&gt;();<br>        double f = 0;<br>        double b = 0;<br>        int MAX = 360;<br>        foreach (string s in commands)<br>        {<br>            string[] st = s.Split(' ');<br>            if (st[0] == "forward")<br>            {<br>                f += double.Parse(st[1]);<br>            }<br>            else if (st[0] == "backward")<br>            {<br>                b += double.Parse(st[1]);<br>            }<br>            else if (st[0] == "right")<br>            {<br>                num.Add(int.Parse(st[1]));<br>            }<br>            else num.Add(MAX - int.Parse(st[1]));<br>        }<br>        bool[] check = new bool[MAX];<br>        check[0] = true;<br>        foreach (int a in num)<br>        {<br>            bool[] nextcheck = new bool[MAX];<br>            for (int i = 0; i &lt; MAX; i++)<br>            {<br>                if (!check[i]) continue;<br>                nextcheck[i] = true;<br>                nextcheck[(i + a) % MAX] = true;<br>            }<br>            check = (bool[])nextcheck.Clone();<br>        }<br>        int min = 0;<br>        for (int i = 0; i &lt; MAX; i++)<br>        {<br>            if (!check[i]) continue;<br>            if (Math.Abs(180 - min) &lt; Math.Abs(180 - i)) continue;<br>            min = i;<br>        }<br>        double numa = Math.Max(f, b);<br>        double numb = Math.Min(f, b);<br>        double x = numa - numb * Math.Cos(min / 360.0 * 2 * Math.PI);<br>        double y = numb * Math.Sin(min / 360.0 * 2 * Math.PI);<br>        return Math.Sqrt(Math.Max(0, x * x + y * y));<br>    }<br><br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>