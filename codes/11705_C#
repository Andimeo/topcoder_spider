<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class MagicMolecule {<br><br>    int[] mp;<br>    int ret;<br>    int n;<br>    int need;<br>    long[] bit;<br><br>    public int maxMagicPower(int[] magicPower, string[] magicBond)<br>    {<br>        n = magicPower.Length;<br>        need = (n * 2 + 2) / 3;<br><br>        bit = new long[n];<br>        mp = magicPower;<br>        for (int i = 0; i &lt; n; i++)<br>        {<br>            for (int j = 0; j &lt; n; j++)<br>            {<br>                if (i == j || magicBond[i][j] == 'Y') bit[i] |= (1L &lt;&lt; j);<br>            }<br>        }<br>        ret = -1;<br>        dic = new Dictionary&lt;long, bool&gt;();<br>        dfs((1L &lt;&lt; n) - 1, 0);<br>        return ret;<br>    }<br><br>    void dfs(long b, int start)<br>    {<br>        int r = 0;<br>        int count = 0;<br>        for (int i = 0; i &lt; n; i++)<br>        {<br>            if (((b &gt;&gt; i) &amp; 1) == 0) continue;<br>            count++;<br>            r += mp[i];<br>        }<br>        if (count &lt; need) return;<br>        if (r &lt;= ret) return;<br><br>        if (dic.ContainsKey(b)) return;<br>        dic[b] = true;<br><br>        <br>        for (int i = start; i &lt; n; i++)<br>        {<br>            if (((b &gt;&gt; i) &amp; 1) == 0) continue;<br>            if ((bit[i] &amp; b) != b)<br>            {<br>                dfs(b - (1L &lt;&lt; i), i + 1);<br>                dfs((bit[i] &amp; b), i + 1);<br>                return;<br>            }<br>        }<br>        ret = Math.Max(ret, r);<br><br>    }<br>    Dictionary&lt;long, bool&gt; dic;<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] Modified for C# by ysn<br>// Powered by CodeProcessor<br></td>