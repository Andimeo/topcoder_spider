<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cctype&gt;<br>#include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;sstream&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;utility&gt;<br>#include &lt;functional&gt;<br>using namespace std;<br>bool f[55][55][55][55];<br>vector&lt;int&gt; a[4];<br>int res,todo;<br>void dfs(int a0,int a1,int a2,int a3,int removed){<br>  if((a1+a2*2+a3*3)%4==0)return;<br>  if(f[a0][a1][a2][a3])return;<br>  f[a0][a1][a2][a3]=true;<br>  if(removed==todo){<br>    int now=0;<br>    for(int i=0; i&lt;a0; i++)<br>      now+=a[0][i];<br>    for(int i=0; i&lt;a1; i++)<br>      now+=a[1][i];<br>    for(int i=0; i&lt;a2; i++)<br>      now+=a[2][i];<br>    for(int i=0; i&lt;a3; i++)<br>      now+=a[3][i];<br>    if(res==-1 || res&lt;now)res=now;<br>    return;<br>  }<br>  if(a0&gt;0)dfs(a0-1,a1,a2,a3,removed+1);<br>  if(a1&gt;0)dfs(a0,a1-1,a2,a3,removed+1);<br>  if(a2&gt;0)dfs(a0,a1,a2-1,a3,removed+1);<br>  if(a3&gt;0)dfs(a0,a1,a2,a3-1,removed+1);<br>}<br>class SafeRemoval{<br>  public:<br>  int removeThem(vector &lt;int&gt; seq, int k){<br>    todo=k;<br>    for(int i=0; i&lt;4; i++)<br>      a[i].clear();<br>    for(int i=0; i&lt;seq.size(); i++)<br>      a[seq[i]%4].push_back(seq[i]);<br>    for(int i=0; i&lt;4; i++)<br>      sort(a[i].begin(),a[i].end(),greater&lt;int&gt;());<br>    memset(f,0,sizeof(f));<br>    res=-1;<br>    dfs((int)a[0].size(),(int)a[1].size(),(int)a[2].size(),(int)a[3].size(),0);<br>    return res;<br>  }<br>  <br> <br>};<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>