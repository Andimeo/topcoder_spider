<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.List;<br>import java.util.Arrays;<br>import java.util.ArrayList;<br>import java.util.Comparator;<br>import java.util.Collections;<br><br>/**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> * @author Egor Kulikov (egor@egork.net)<br> */<br>public class KingSort {<br>  public String[] getSortedList(String[] kings) {<br>    Arrays.sort(kings, new Comparator&lt;String&gt;() {<br>      public int compare(String o1, String o2) {<br>        String[] first = o1.split(" ");<br>        String[] second = o2.split(" ");<br>        if (first[0].compareTo(second[0]) != 0)<br>          return first[0].compareTo(second[0]);<br>        return MiscUtils.convertFromRoman(first[1]) - MiscUtils.convertFromRoman(second[1]);<br>      }<br>    });<br>    return kings;<br>  }<br><br><br>}<br><br>class MiscUtils {<br><br>  private static final String[] ROMAN_TOKENS = {"M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"};<br>  private static final int[] ROMAN_VALUES = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};<br><br>  public static int convertFromRoman(String number) {<br>    int result = 0;<br>    for (int i = 0; i &lt; ROMAN_TOKENS.length; i++) {<br>      while (number.startsWith(ROMAN_TOKENS[i])) {<br>        number = number.substring(ROMAN_TOKENS[i].length());<br>        result += ROMAN_VALUES[i];<br>      }<br>    }<br>    return result;<br>  }<br><br>  }<br><br><br><br>// Powered by FileEdit<br>// Powered by moj 4.15 [modified TZTester]<br>// Powered by CodeProcessor<br></td>