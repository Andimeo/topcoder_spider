<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System<br>Imports System.Collections<br>Imports System.Collections.Generic<br>Imports System.Text<br>Imports System.Math<br>Imports Weight = System.Int32<br>Public Structure Pair(Of T1 As IComparable(Of T1), T2 As IComparable(Of T2))<br>    Implements System.IComparable<br>    Implements System.IComparable(Of Pair(Of T1, T2))<br>    Public First As T1, Second As T2<br>    Public Sub New(ByVal V1 As T1, ByVal V2 As T2)<br>        First = V1 : Second = V2<br>    End Sub<br>    Public Function CompareTo(ByVal tar As Pair(Of T1, T2)) As Integer Implements System.IComparable(Of Pair(Of T1, T2)).CompareTo<br>        If First.CompareTo(tar.First) &gt; 0 Then Return 1 Else If First.CompareTo(Tar.First) &lt; 0 Then Return -1 Else If Second.CompareTo(Tar.Second) &gt; 0 Then Return 1 Else If Second.CompareTo(Tar.Second) &lt; 0 Then Return -1 Else Return 0<br>    End Function<br>    Public Function CompareTo(ByVal tar As Object) As Integer Implements System.IComparable.CompareTo<br>        If tar.GetType() IsNot Me.GetType() Then Throw New ArgumentException("[\u27604][\u36611][\u19981][\u21487][\u33021][\u12394][\u22411][\u12391][\u12377]", "tar")<br>        Return Me.CompareTo(DirectCast(tar, Pair(Of T1, T2)))<br>    End Function<br>End Structure<br> <br>Public Class KingSort<br>    Public Function RomanToInt(ByVal str As String) As Integer<br>        RomanToInt = 0<br>        If str.EndsWith("VIII") Then<br>            RomanToInt = 8<br>        ElseIf str.EndsWith("III") Then<br>            RomanToInt = 3<br>        ElseIf str.EndsWith("VII") Then<br>            RomanToInt = 7<br>        ElseIf str.EndsWith("II") Then<br>            RomanToInt = 2<br>        ElseIf str.EndsWith("VI") Then<br>            RomanToInt = 6<br>        ElseIf str.EndsWith("I") Then<br>            RomanToInt = 1<br>        ElseIf str.EndsWith("IX") Then<br>            RomanToInt = 9<br>        ElseIf str.EndsWith("IV") Then<br>            RomanToInt = 4<br>        ElseIf str.EndsWith("V") Then<br>            RomanToInt = 5<br>        End If<br>        If str.StartsWith("XXX") Then<br>            RomanToInt += 30<br>        ElseIf str.StartsWith("XX") Then<br>            RomanToInt += 20<br>        ElseIf str.StartsWith("XL") Then<br>            RomanToInt += 40<br>        ElseIf str.StartsWith("X") Then<br>            RomanToInt += 10<br>        ElseIf str.StartsWith("L") Then<br>            RomanToInt += 50<br>        End If<br>    End Function<br> <br>    Public Function getSortedList(ByVal kings As String()) As String()<br>        Dim i As Integer, j As Integer<br>        Dim result As New List(Of Pair(Of String, Pair(Of Integer, String)))<br>        For Each t As String In kings<br>            Dim Roman As String = t.Split()(1)<br>            Console.WriteLine(Roman)<br>            Console.WriteLine(RomanToInt(Roman))<br>            result.Add(New Pair(Of String, Pair(Of Integer, String))(t.Split(" ")(0), New Pair(Of Integer, String)(RomanToInt(Roman), t)))<br>        Next<br>        result.Sort()<br>        Dim Ans(kings.Length - 1) As String<br>        getSortedList = Ans<br>        For i = 0 To kings.Length - 1<br>            Ans(i) = result(i).Second.Second<br>        Next<br> <br>    End Function<br>End Class<br></td>