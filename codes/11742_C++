<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define FOR(i,a,b) for(__typeof(b) i=(a);i!=(b);i++)<br>#define REP(i,n) FOR(i,0,n)<br>#define ALL(a) a.begin(),a.end()<br>#define EACH(i,a) FOR(i,a.begin(),a.end())<br>#define PB push_back<br>#define iss istringstream<br>#define SZ(a) (int)a.size()<br>#define CLEAR(a) memset(a,0,sizeof(a))<br>#define ll long long<br> <br>class BigAndSmallAirports {<br>public:<br>  long long solve(int, int, int, int, int, int);<br>};<br> <br>inline long long sum(long long a) {<br>  return ((a * (a + 1)) &gt;&gt; 1);<br>}<br> <br>long long BigAndSmallAirports::solve(int Nlo, int Nhi, int Blo, int Bhi, int Slo, int Shi) {<br>  long long ans = 0;<br>  for(int B = Blo; B &lt;= Bhi ; B++) {<br>    for(int S = Slo ; S &lt;= Shi ; S++) {<br>      if (S &lt; B) {<br>        //X == 0<br>        if (S &gt; 1) {<br>          ans += (Nhi - Nlo + 1);<br>        }  else {<br>          if (Nlo &lt;= 1 &amp;&amp; 1 &lt;= Nhi) {ans++;}<br>          if (Nlo &lt;= 2 &amp;&amp; 2 &lt;= Nhi) {ans++;}<br>        }<br>        //1 &lt;= X &lt;= S<br>        long long add = max(Nhi - max(Nlo, B + 1) + 1, 0);<br>        ans += (add * S);<br>        //S &lt; X &lt;= B<br>        for(int X = S + 1 ; X &lt;= B ; X++) {<br>          long long lobound = (((long long)X) * (B + 1 - X) + (S - 1)) / S;<br>          lobound += X;<br>          lobound = max(lobound, (long long)Nlo);<br>          ans += max((long long)Nhi - lobound + 1, (long long)0);<br>        }<br>        // B &lt; X &lt;= Nlo<br>        if (B + 1 &lt; Nlo) {<br>          ans += ((long long)(Nlo - B - 1)) * (Nhi - Nlo + 1);<br>          ans += sum(Nhi - Nlo + 1);<br>        }  else if (B + 1 &lt;= Nhi) {<br>          ans += sum(Nhi - B);<br>        }<br>      }<br>    }<br>  }<br>  return ans;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br> <br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>