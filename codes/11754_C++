<td class="problemText" colspan="8" valign="middle" align="left">
            // Authored by dolphinigle<br>// TopCoder<br> <br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br> <br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;cstring&gt;<br>#include &lt;assert.h&gt;<br> <br>#define FORN(X,Y) for (int (X) = 0;(X) &lt; (Y);++(X))<br>#define DEBUG(x) cout &lt;&lt; '&gt;' &lt;&lt; #x &lt;&lt; ':' &lt;&lt; x &lt;&lt; '\n';<br> <br>#define REP(X,Y,Z) for (int (X) = (Y);(X) &lt; (Z);++(X))<br>#define RESET(Z,Y) memset(Z,Y,sizeof(Z))<br> <br>#define SZ(Z) ((int)(Z).size())<br>#define ALL(W) (W).begin(), (W).end()<br>#define PB push_back<br> <br>#define MP make_pair<br>#define A first<br>#define B second<br> <br>#define INF 1023123123<br>#define EPS 1e-11<br> <br>#define MX(Z,Y) Z = max((Z),(Y))<br>#define MN(X,Y) X = min((X),(Y))<br> <br>#define FORIT(X,Y) for(typeof((Y).begin()) X = (Y).begin();X!=(Y).end();X++)<br> <br>using namespace std;<br> <br>typedef long long ll;<br>typedef double db;<br>typedef vector&lt;int&gt; vint;<br>typedef vector&lt;ll&gt; vll;<br> <br>class DengklekMakingChains {<br>public:<br>int maxBeauty(vector &lt;string&gt;);<br>};<br> <br>int DengklekMakingChains::maxBeauty(vector &lt;string&gt; chains) {<br>  int score = 0;<br>  int n = SZ(chains);<br>  <br>  vector&lt;string&gt; sisa;<br>  sisa.PB("...");<br>  sisa.PB("...");<br>  <br>  FORN(i, n) {<br>    int ok = 1;<br>    FORN(j, 3) if (chains[i][j] == '.') ok = 0;<br>    if (ok) {<br>      FORN(j, 3) score += (chains[i][j] - '0');<br>    } else {<br>      sisa.PB(chains[i]);<br>    }<br>  }<br>  <br>  int best = score;<br>  FORN(i, SZ(sisa)) FORN(j, SZ(sisa)) if (i != j) {<br>    int tambah = score;<br>    FORN(k, 3) {<br>      if (sisa[j][k] == '.') break;<br>      tambah += sisa[j][k] - '0';<br>    }<br>    FORN(k, 3) {<br>      if (sisa[i][2-k] == '.') break;<br>      tambah += sisa[i][2-k] - '0';<br>    }<br>    MX(best, tambah);<br>  }<br>  <br>  FORN(i, SZ(sisa)) if (sisa[i][1] != '.') MX(best, sisa[i][1] - '0');<br>  <br>  return best;<br>  <br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>