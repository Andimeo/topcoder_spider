<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> */<br>public class DengklekMakingChains {<br>    static class TwoMaxesTracker {<br>        int max = 0;<br>        int maxRef = -1;<br>        int secondMax = 0;<br>        int secondMaxRef = -1;<br>        <br>        void update(int val, int ref) {<br>            if (val &gt; max) {<br>                secondMax = max;<br>                secondMaxRef = maxRef;<br>                max = val;<br>                maxRef = ref;<br>            } else if (val &gt; secondMax) {<br>                secondMax = val;<br>                secondMaxRef = ref;<br>            }<br>        }<br>    }<br>    <br>    public int maxBeauty(String[] chains) {<br>    TwoMaxesTracker starts = new TwoMaxesTracker();<br>        TwoMaxesTracker ends = new TwoMaxesTracker();<br>        int middles = 0;<br>        int byItself = 0;<br>        int index = 0;<br>        for (String chain : chains) {<br>            if (chain.indexOf('.') &lt; 0) {<br>                middles += sumIt(chain);<br>            } else {<br>                starts.update(sumIt(digitPrefix(chain)), index);<br>                ends.update(sumIt(digitSuffix(chain)), index);<br>            }<br>            String[] parts = chain.split("[.]+");<br>            for (String x : parts) {<br>                byItself = Math.max(byItself, sumIt(x));<br>            }<br>            ++index;<br>        }<br>        int res = byItself;<br>        if (starts.maxRef == ends.maxRef &amp;&amp; starts.maxRef &gt;= 0) {<br>            res = Math.max(res, middles + starts.max + ends.secondMax);<br>            res = Math.max(res, middles + starts.secondMax + ends.max);<br>        } else {<br>            res = Math.max(res, middles + starts.max + ends.max);<br>        }<br>        return res;<br>    }<br> <br>    private String digitSuffix(String chain) {<br>        String res = "";<br>        for (int i = 0; i &lt; chain.length(); ++i) {<br>            char ch = chain.charAt(chain.length() - 1 - i);<br>            if (ch &gt;= '0' &amp;&amp; ch &lt;= '9')<br>                res += ch;<br>            else<br>                break;<br>        }<br>        return res;<br>    }<br> <br>    private String digitPrefix(String chain) {<br>        String res = "";<br>        for (int i = 0; i &lt; chain.length(); ++i) {<br>            char ch = chain.charAt(i);<br>            if (ch &gt;= '0' &amp;&amp; ch &lt;= '9')<br>                res += ch;<br>            else<br>                break;<br>        }<br>        return res;<br>    }<br> <br>    private int sumIt(String chain) {<br>        int sum = 0;<br>        for (int i = 0; i &lt; chain.length(); ++i) {<br>            char ch = chain.charAt(i);<br>            if (ch &gt;= '0' &amp;&amp; ch &lt;= '9')<br>                sum += ch - '0';<br>            else<br>                throw new RuntimeException();<br>        }<br>        return sum;<br>    }<br> <br> <br>}<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.16 [modified TZTester]<br>// Powered by CodeProcessor<br></td>