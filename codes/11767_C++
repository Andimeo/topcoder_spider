<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;sstream&gt; <br>#include &lt;iostream&gt;<br>#include &lt;string.h&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;stdlib.h&gt; <br>#include &lt;stdio.h&gt; <br>#include &lt;numeric&gt;<br>#include &lt;math.h&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>using namespace std;<br> <br>const int mod = 1000000007;<br> <br>int n , k;<br>int dp[32][32][1 &lt;&lt; 9][10];<br> <br>int go ( int x , int left , int mask , int put ) {<br>  if ( x == n ) {<br>    return !left;<br>  }<br>  <br>  int &amp;ans = dp[x][left][mask][put];<br>  if ( ans != -1 ) return ans;<br>  <br>  int i;<br>  ans = 0;<br>  <br>  if ( !(mask &amp; 1) ) {<br>    ans = (ans + go ( x + 1 , left , mask &gt;&gt; 1 , 1 )) % mod;<br>  }<br>  <br>  for (i = put; i &lt;= k; i++) {<br>    if ( x + i &gt;= n ) break;<br>    if ( !left ) break;<br>    <br>    ans = (ans + go ( x , left - 1 , mask ^ 1 ^ (1 &lt;&lt; i) , i )) % mod;<br>  }<br>  <br>//   printf ( "%d %d %d       %d\n" , x , left , mask , ans );<br>  <br>  return ans;<br>}<br> <br>int solve ( int N, int M, int K ) {<br>  n = N;<br>  k = K;<br>  <br>  memset ( dp , -1 , sizeof dp );<br>  return go ( 0 , M , 0 , 1 );<br>}<br> <br>class DengklekBuildingRoads {<br>  public:<br>  int numWays(int N, int M, int K) {<br>    return solve ( N, M, K );<br>  }<br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.16 [modified TZTester]<br>// Powered by CodeProcessor<br></td>