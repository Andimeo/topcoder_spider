<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cassert&gt;<br> <br>using namespace std;<br> <br> <br>int p[105];<br>int deg[105];<br> <br>int gp(int x) {<br>    if (p[x] != x) {<br>        p[x] = gp(p[x]);<br>    }<br>    return p[x];<br>}<br> <br>int rows, cols;<br> <br>class MagicBoard {<br>public:<br>   string ableToUnlock( vector &lt;string&gt; board ) {<br>       rows = board.size();<br>       cols = board[0].size();<br>       for (int i = 0; i &lt; rows + cols; ++i) {<br>           p[i] = i;<br>           deg[i] = 0;<br>       }<br>       for (int i = 0; i &lt; rows; ++i) {<br>           for (int j = 0; j &lt; cols; ++j) {<br>               if (board[i][j] == '#') {<br>                   ++deg[i];<br>                   ++deg[rows + j];<br>                   p[gp(i)] = gp(rows + j);<br>               }<br>           }<br>       }<br>       int uns = 0;<br>       for (int i = 0; i &lt; rows + cols; ++i) {<br>           if (p[i] == i &amp;&amp; deg[i] &gt; 0) {<br>               ++uns;<br>           }<br>       }<br>       if (uns &gt; 1) {<br>           return "NO";<br>       }<br>       int oddRows = 0, oddCols = 0;<br>       for (int i = 0; i &lt; rows; ++i) {<br>           if (deg[i] % 2 == 1) {<br>               ++oddRows;<br>           }<br>       }<br>       for (int i = rows; i &lt; rows + cols; ++i) {<br>           if (deg[i] % 2 == 1) {<br>               ++oddCols;<br>           }<br>       }<br>       if (oddRows + oddCols == 0 || (oddRows + oddCols == 2 &amp;&amp; oddCols &gt; 0)) {<br>           return "YES";<br>       } else {<br>           return "NO";<br>       }<br>   }<br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.16 [modified TZTester]<br> <br>// Powered by CodeProcessor<br></td>