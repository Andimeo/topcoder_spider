<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class CasketOfStar {<br>public:<br>  int maxEnergy(vector &lt;int&gt;);<br>};<br> <br>int f[55][55];<br> <br>int CasketOfStar::maxEnergy(vector &lt;int&gt; w) {<br>  int n = w.size(), i, j, k;<br>  for (i=n-1;i&gt;=0;i--)<br>    for (j=i+1;j&lt;n;j++)<br>      if (j == i+1) f[i][j] = 0; else {<br>        f[i][j] = 0;<br>        for (k=i+1;k&lt;j;k++)<br>          if (f[i][k]+f[k][j] &gt; f[i][j]) f[i][j] = f[i][k]+f[k][j];<br>        f[i][j] += w[i]*w[j];<br>      }<br>  return f[0][n-1];<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>