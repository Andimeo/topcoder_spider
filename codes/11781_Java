<td class="problemText" colspan="8" valign="middle" align="left">
            //  SRM 533 (A)<br><br>import static java.lang.Math.*;<br>import static java.math.BigInteger.*;<br>import static java.util.Arrays.*;<br>import static java.util.Collections.*;<br>import java.math.*;<br>import java.util.*;<br><br>public class CasketOfStar {<br>  <br>  public int maxEnergy(int[] weight) {<br>    int n = weight.length;<br>    int[][] dp = new int[n][n];<br>    for (int h = 2; h &lt; n; ++h) {<br>      for (int i = 0, j = h; j &lt; n; ++i, ++j) {<br>        for (int k = i + 1; k &lt; j; ++k) {<br>          if (dp[i][j] &lt; dp[i][k] + dp[k][j]) {<br>            dp[i][j] = dp[i][k] + dp[k][j];<br>          }<br>        }<br>        dp[i][j] += weight[i] * weight[j];<br>      }<br>    }<br>    return dp[0][n - 1];<br>  }<br>  <br>  void _out(Object...os) {<br>    System.out.println(deepToString(os));<br>  }<br>}<br></td>