<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System<br>Imports System.Collections.Generic<br>Imports System.Text<br> <br>Public Class RollingDiceDivOne<br> <br>    ' main<br>    Private Function mostLikely_(ByVal dice As Integer()) As Long<br>        For Each e As Integer In dice<br>            mostLikely_ += 1 + e<br>        Next<br>        Dim c As Long = largest(dice) - width(dice)<br>        If c &gt; 0 Then mostLikely_ -= c<br>        mostLikely_ \= 2<br>    End Function<br> <br>    ' cut corner<br>    ' verified for [1..10]^4.<br>    Public Function mostLikely(ByVal dice As Integer()) As Long<br>        Dim d As New List(Of Integer)<br>        For Each i As Integer In dice<br>            If i = 1 Then<br>                mostLikely += 1<br>            Else<br>                d.Add(i)<br>            End If<br>        Next<br>        If d.Count = 1 Then mostLikely += 1<br>        If d.Count &lt;= 1 Then Exit Function<br>        mostLikely += mostLikely_(d.ToArray)<br>    End Function<br> <br>    ' return largest value<br>    Private Function largest(ByVal dice As Integer()) As Long<br>        Array.Sort(dice)<br>        Return dice(dice.Length - 1)<br>    End Function<br> <br>    ' return width of convolution<br>    Private Function width(ByVal dice As Integer()) As Long<br>        width = 1<br>        For i As Integer = 0 To dice.Length - 2<br>            width += dice(i) - 1<br>        Next<br>    End Function<br> <br>End Class<br></td>