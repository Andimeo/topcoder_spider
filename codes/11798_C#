<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class BinaryPolynomialDivOne {<br>    public int findCoefficient(int[] a, long m, long k)<br>    {<br>        List&lt;long&gt; l = new List&lt;long&gt;();<br>        List&lt;int&gt; ll = new List&lt;int&gt;();<br>        for (int i = 0; i &lt; a.Length; i++) if (a[i] == 1) ll.Add(i);<br>        l.Add(k);<br>        for (int i = 60; i &gt;= 0; i--)<br>        {<br>            if (m &lt; ((long)1 &lt;&lt; i)) continue;<br>            m -= ((long)1 &lt;&lt; i);<br>            Dictionary&lt;long, bool&gt; dic = new Dictionary&lt;long, bool&gt;();<br>            foreach (long b in l)<br>            {<br>                foreach (int c in ll)<br>                {<br>                    long next = b - (long)c * ((long)1 &lt;&lt; i);<br>                    if (next &lt; 0) continue;<br>                    if (next &gt; (m + 10) * a.Length) continue;<br>                    if (!dic.ContainsKey(next)) dic[next] = false;<br>                    dic[next] ^= true;<br>                }<br>            }<br>            l = new List&lt;long&gt;();<br>            foreach (KeyValuePair&lt;long, bool&gt; kvp in dic)<br>            {<br>                if (kvp.Value) l.Add(kvp.Key);<br>            }<br>        }<br>        foreach (long b in l)<br>        {<br>            if (b == 0) return 1;<br>        }<br>        return 0;<br>    }<br><br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>