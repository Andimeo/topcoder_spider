<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;iostream&gt;<br>#include&lt;cstring&gt;<br>#include&lt;cstdio&gt;<br>#include&lt;cstdlib&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;vector&gt;<br>using namespace std;<br>int a[100];double f[100];<br>struct MergersDivTwo<br>{<br>  public: <br>  double findMaximum(vector &lt;int&gt; r, int k)<br>  {<br>         sort(r.begin(),r.end());<br>         int n=r.size();<br>         for(int i=1;i&lt;=n;i++)<br>         a[i]=r[i-1];<br>         for(int i=1;i&lt;=n;i++)<br>         {<br>                 f[i]=-1e100;<br>                 if(i&gt;=k)<br>                 {<br>                         double tmp=0;<br>                         for(int j=1;j&lt;=i;j++)<br>                         tmp+=a[j];<br>                         f[i]=tmp/i;<br>                         for(int j=1;j&lt;=i-k+1;j++)<br>                         {<br>                                 tmp-=a[j];<br>                                 f[i]=max(f[i],(tmp+f[j])/(i-j+1));<br>                         }<br>                 }<br>         }<br>         return f[n];<br>  }<br>};<br></td>