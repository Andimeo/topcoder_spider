<td class="problemText" colspan="8" valign="middle" align="left">
            import java.io.*;<br>import java.math.*;<br>import java.util.*;<br><br>import static java.lang.Math.*;<br><br>public class FoxAndKgram {<br><br>  public int maxK(int[] len) {<br>    int n = len.length;<br>    for (int k = 50; k &gt;= 1; k--) {<br>      int count = 0;<br>      boolean used [] = new boolean [n];<br>      for (int i = 0; i &lt; n; i++) {<br>        if (len [i] == k) {<br>          count++;<br>          used [i] = true;<br>        }<br>      }<br>      while (true) {<br>        boolean find = false;<br>        global:<br>        for (int i = 0; i &lt; n; i++) {<br>          for (int j = i + 1; j &lt; n; j++) {<br>            if (!used[i] &amp;&amp; !used[j] &amp;&amp; len [i] + len [j] == k - 1) {<br>              count++;<br>              find = true;<br>              used [i] = true;<br>              used [j] = true;<br>              break global;<br>            }<br>          }<br>        }<br>        if (!find) break;<br>      }<br>      if (count &gt;= k) return k;<br>    }<br>    return 0;<br>  }<br><br>}<br></td>