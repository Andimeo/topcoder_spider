<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cassert&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>using namespace std;<br><br>typedef pair&lt;int,int&gt; PII;<br>typedef long long LL;<br>const int INF = 1000000009;<br><br>#ifdef mahou_shoujo_madoka<br>    #define debug(...) printf(__VA_ARGS__)<br>    int main(){}<br>#else<br>    #define debug(...)<br>#endif<br><br>void add(int&amp; x, int y){<br>    x=(x+y)%INF;<br>}<br><br>class TrieGraph{<br>public:<br>    static const int SIZE = 55;<br>    static const int LEAF = 26;<br>    int next[SIZE],e[SIZE][LEAF],n;<br>    int data[SIZE];<br>    void init(){<br>        static int ok=0;<br>        if(!ok++) n=SIZE;<br>        fill_n(next,n,0);<br>        fill_n(data,n,0);<br>        memset(e,-1,n*sizeof(e[0]));<br>        n=1;<br>    }<br>    void insert(const char* s, int idx = 0){<br>        int x=0;<br>        for(int i=0;s[i];i++){<br>            int c=s[i]-'A';<br>            x=~e[x][c]?e[x][c]:e[x][c]=n++;<br>        }<br>        data[x]|=1&lt;&lt;idx;<br>    }<br>    void make(){<br>        static int q[SIZE],m;<br>        next[0]=m=0;<br>        for(int c=0;c&lt;LEAF;c++)<br>            if(~e[0][c]) next[q[m++]=e[0][c]]=0; else e[0][c]=0;<br>        for(int i=0;i&lt;m;i++){<br>            int x=q[i];<br>            data[x]|=data[next[x]];<br>            for(int c=0;c&lt;LEAF;c++){<br>                int t=e[next[x]][c];<br>                if(~e[x][c]) next[q[m++]=e[x][c]]=t; else e[x][c]=t;<br>            }<br>        }<br>    }<br>    <br>}ac;<br><br>class FoxAndMountain{<br>public:<br>    int dp[55][55][55][2];<br>    int count(int n, string s){<br>        ac.init();<br>        ac.insert(s.c_str());<br>        ac.make();<br>        dp[0][0][0][0]=1;<br>        for(int i=0;i&lt;=n;i++){<br>            for(int x=0;x&lt;ac.n;x++) for(int h=0;h&lt;54;h++) for(int r=0;r&lt;2;r++){<br>                if(!dp[i][x][h][r]) continue;<br>                int y=ac.e[x]['U'-'A'],yr=ac.data[y]|r;<br>                int z=ac.e[x]['D'-'A'],zr=ac.data[z]|r;<br>                      add(dp[i+1][y][h+1][yr],dp[i][x][h][r]);<br>                if(h) add(dp[i+1][z][h-1][zr],dp[i][x][h][r]);<br>            }<br>        }<br>        int ans=0;<br>        for(int i=0;i&lt;ac.n;i++) add(ans,dp[n][i][0][1]);<br>        return ans;<br>    }<br>};<br></td>