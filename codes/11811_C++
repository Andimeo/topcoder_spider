<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>const int MAXDIS = 10000;<br>class FoxAndTouristFamilies {<br>public:<br>  int f[60][60];<br>  double expectedLength(vector &lt;int&gt; A, vector &lt;int&gt; B, vector &lt;int&gt; g) {<br>    int n = A.size() + 1;<br>    for (int i = 0; i &lt; n; ++i)<br>      for (int j = 0; j &lt; n; ++j)<br>        f[i][j] = MAXDIS;<br>    for (int i = 0; i &lt; n; ++i)<br>      f[i][i] = 0;<br>    for (int i = 0; i &lt; A.size(); ++i){<br>      f[A[i]][B[i]] = 1;<br>      f[B[i]][A[i]] = 1;<br>    }<br>    for (int k = 0; k &lt; n; ++k)<br>      for (int i = 0; i &lt; n; ++i)<br>        for (int j = 0; j &lt; n; ++j)<br>          f[i][j] = min(f[i][j], f[i][k] + f[k][j]);<br>    double ret = 0;<br>    for (int i = 0; i &lt; A.size(); ++i){<br>      int a = A[i]; <br>      int b = B[i];<br>      double sa = 0, sb = 0;<br>      for (int j = 0; j &lt; n; ++j)<br>        if (f[j][a] &lt; f[j][b]) sa += 1;<br>        else sb += 1;<br>      double p = 1;<br>      for (int j = 0; j &lt; g.size(); ++j)<br>        if (f[g[j]][a] &lt; f[g[j]][b]) p *= sb / (n - 1);<br>        else p *= sa / (n - 1);<br>      //cout&lt;&lt;a&lt;&lt;' '&lt;&lt;b&lt;&lt;' '&lt;&lt;sa&lt;&lt;' '&lt;&lt;sb&lt;&lt;' '&lt;&lt;p&lt;&lt;endl;<br>      ret += p;<br>    }<br>    return ret;<br>  }<br>};<br> <br> <br> <br>//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!<br></td>