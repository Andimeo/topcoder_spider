<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br> <br> <br>public class EllysJuice<br>{<br>  static TreeSet&lt;String&gt; ret;<br>  public String[] getWinners(String[] players)<br>  {<br>    ret = new TreeSet&lt;String&gt;();<br>    dfs(new ArrayList&lt;String&gt;(), new boolean[players.length], players);<br>    String[] actual = new String[ret.size()];<br>    int c = 0;<br>    for(String out: ret)<br>      actual[c++] = out;<br>    return actual;<br>  }<br>  public static void solve(ArrayList&lt;String&gt; info)  {<br>    int left = 64;<br>    int right = 64;<br>    Map&lt;String, Integer&gt; map = new HashMap&lt;String, Integer&gt;();<br>    for(String out: info)<br>      map.put(out, 0);<br>    for(int i = 0; i &lt; info.size(); i += 2)  {<br>      map.put(info.get(i), map.get(info.get(i)) + left/2);<br>      left /= 2;<br>    }<br>    for(int i = 1; i &lt; info.size(); i += 2)  {<br>      map.put(info.get(i), map.get(info.get(i)) + right/2);<br>      right /= 2;<br>    }<br>    int highest = 0;<br>    for(String out: info)  {<br>      highest = Math.max(highest, map.get(out));<br>    }<br>    ArrayList&lt;String&gt; rets = new ArrayList&lt;String&gt;();<br>    for(String out: map.keySet())  {<br>      if(highest == map.get(out))  {<br>        rets.add(out);<br>      }<br>    }<br>    if(rets.size() == 1)<br>      ret.add(rets.get(0));<br>  }<br>  public static void dfs(ArrayList&lt;String&gt; curr, boolean[] used, String[] list)  {<br>    if(curr.size() == list.length)<br>      solve(curr);<br>    else<br>      for(int i = 0; i &lt; used.length; i++)  {<br>        if(!used[i])  {<br>          used[i] = true;<br>          curr.add(list[i]);<br>          dfs(curr, used, list);<br>          used[i] = false;<br>          curr.remove(curr.size()-1);<br>        }<br>      }<br>  }<br>  <br> <br>}<br>//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!<br></td>