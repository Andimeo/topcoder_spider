<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br><br>public class EllysLights {<br>  int n;<br>  int m;<br>  int[][] w;<br>  int[] must;<br>  int size;<br>  int[] got;<br>  int ones;<br>  <br>  public int getMinimum(String initial, String[] switches) {<br>    m = initial.length();<br>    n = switches.length;<br>    w = new int[n][n];<br>    for (int[] x : w) {<br>      Arrays.fill(x, 2);<br>    }<br>    must = new int[n];<br>    Arrays.fill(must, 2);<br>    <br>    for (int i = 0; i &lt; m; i++) {<br>      int value = initial.charAt(i) == 'Y' ? 1 : 0;<br>      int x1 = -1;<br>      int x2 = -1;<br>      for (int j = 0; j &lt; n; j++) {<br>        if (switches[j].charAt(i) == 'Y') {<br>          if (x1 == -1) {<br>            x1 = j;<br>          } else {<br>            x2 = j;<br>          }<br>        }<br>      }<br>      <br>      if (x1 == -1 &amp;&amp; value == 1) {<br>        return -1;<br>      }<br>      if (x1 == -1) {<br>        continue;<br>      }<br>      if (x2 == -1) {<br>        if (must[x1] != 2 &amp;&amp; must[x1] != value) {<br>          return -1;<br>        }<br>        must[x1] = value;<br>        continue;<br>      }<br>      w[x1][x2] = value;<br>      w[x2][x1] = value;<br>    }<br>    <br>    got = new int[n];<br>    Arrays.fill(got, 2);<br>    int result = 0;<br>    for (int i = 0; i &lt; n; i++) {<br>      if (must[i] != 2) {<br>        size = 0;<br>        ones = 0;<br>        if (!go(i, must[i])) {<br>          return -1;<br>        }<br>        result += ones;<br>      }<br>    }<br>    for (int i = 0; i &lt; n; i++) {<br>      if (got[i] == 2) {<br>        size = 0;<br>        ones = 0;<br>        if (!go(i, 0)) {<br>          return -1;<br>        }<br>        result += Math.min(ones, size - ones);<br>      }<br>    }<br>    <br>    return result;<br>  }<br><br>  private boolean go(int u, int value) {<br>    if (got[u] != 2 &amp;&amp; got[u] != value) {<br>      return false;<br>    }<br>    if (got[u] != 2) {<br>      return true;<br>    }<br>    <br>    got[u] = value;<br>    size++;<br>    if (value == 1) {<br>      ones++;<br>    }<br>      <br>    for (int i = 0; i &lt; n; i++) {<br>      if (w[u][i] != 2) {<br>        if (!go(i, (value + w[u][i]) % 2)) {<br>          return false;<br>        }<br>      }<br>    }<br>    <br>    return true;<br>  }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>