<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br> <br>public class FoxAndPhotography<br>{<br>    public int[] heightsFront, heightsBack;<br>    public bool[] done;<br>    public int[] mem;<br> <br>    public int getMinimumSwaps(int[] heightsFront, int[] heightsBack)<br>    {<br>        this.heightsBack = heightsBack;<br>        this.heightsFront = heightsFront;<br>        done = new bool[1 &lt;&lt; heightsBack.Length];<br>        mem = new int[1 &lt;&lt; heightsBack.Length];<br>        mem[0] = 0;<br>        done[0] = true;<br>        return rec((1 &lt;&lt; heightsBack.Length) - 1);<br>    }<br> <br>    public int rec(int over)<br>    {<br>        if (done[over]) return mem[over];<br>        int cur = heightsBack.Length -  numbits(over);<br>        done[over] = true;<br>        mem[over] = -1;<br>        int idx = 0;<br>        for (int i = 0; i &lt; heightsBack.Length; i++)<br>        {<br>            if ((over &amp; (1 &lt;&lt; i)) == 0) continue;<br>            idx++;<br>            if (heightsBack[i] &lt;= heightsFront[cur]) continue;<br>            int x = rec(over ^ (1 &lt;&lt; i));<br>            if (x &gt; -1 &amp;&amp; (mem[over] == -1 || mem[over] &gt; x + idx - 1))<br>                mem[over] = x + idx - 1;<br>        }<br> <br>        return mem[over];<br>    }<br> <br>    int numbits(int i)<br>    {<br>        int n = 0;<br>        while (i &gt; 0)<br>        {<br>            n += i &amp; 1;<br>            i &gt;&gt;= 1;<br>        }<br>        return n;<br>    }<br> <br>}<br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>