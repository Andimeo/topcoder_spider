<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.List;<br>import java.util.ArrayList;<br>import java.util.Collections;<br> <br>/**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> */<br>public class Over9000Rocks {<br>    static class Event implements Comparable&lt;Event&gt; {<br>        int at;<br>        int delta;<br> <br>        Event(int at, int delta) {<br>            this.at = at;<br>            this.delta = delta;<br>        }<br> <br>        public int compareTo(Event event) {<br>            return at - event.at;<br>        }<br>    }<br>    <br>    public int countPossibilities(int[] lowerBound, int[] upperBound) {<br>        List&lt;Event&gt; events = new ArrayList&lt;Event&gt;();<br>        int n = lowerBound.length;<br>        for (int subset = 0; subset &lt; (1 &lt;&lt; n); ++subset) {<br>            int low = 0;<br>            int high = 0;<br>            for (int i = 0; i &lt; n; ++i)<br>                if ((subset &amp; (1 &lt;&lt; i)) != 0) {<br>                    low += lowerBound[i];<br>                    high += upperBound[i];<br>                }<br>            low = Math.max(9001, low);<br>            if (high &gt;= low) {<br>                events.add(new Event(low, 1));<br>                events.add(new Event(high + 1, -1));<br>            }<br>        }<br>        Collections.sort(events);<br>        int balance = 0;<br>        int last = 0;<br>        int res = 0;<br>        for (Event e : events) {<br>            if (balance &gt; 0)<br>                res += e.at - last;<br>            last = e.at;<br>            balance += e.delta;<br>        }<br>        return res;<br>    }<br> <br> <br>}<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.16 [modified TZTester]<br>// Powered by CodeProcessor<br></td>