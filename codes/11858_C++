<td class="problemText" colspan="8" valign="middle" align="left">
            /*<br>Signature File!!<br>****************************<br>*** author: rajneesh2k10 ***<br>****************************<br>*/<br> <br>#include &lt;algorithm&gt;<br>#include &lt;bitset&gt;<br>#include &lt;deque&gt;<br>#include &lt;cassert&gt;<br>#include &lt;cctype&gt;<br>#include &lt;climits&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;ctime&gt;<br>#include &lt;functional&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iterator&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;stack&gt;<br>#include &lt;string&gt;<br>#include &lt;utility&gt;<br>#include &lt;vector&gt;<br> <br>#define fr(i,m,n) for(int i=m; i&lt;=n; ++i)<br> <br>using namespace std;<br> <br> <br> <br>class PlatypusPaternity {<br>public:<br>  int maxFamily(vector &lt;string&gt;, vector &lt;string&gt;, vector &lt;string&gt;);<br>};<br> <br>int PlatypusPaternity::maxFamily(vector &lt;string&gt; femaleCompatibility, vector &lt;string&gt; maleCompatibility, vector &lt;string&gt; siblingGroups) {<br>    int sz = 0;<br>  fr(s,0,(int)siblingGroups.size()-1) {<br>    fr(f,0,(int)femaleCompatibility.size()-1) {<br>      fr(m,0,(int)maleCompatibility.size()-1) {<br>        int temp = 0;<br>        bool flag = true;<br>        fr(c,0,(int)siblingGroups[0].length()-1) {<br>          if (siblingGroups[s][c] == 'Y' &amp;&amp; femaleCompatibility[f][c] == 'Y' &amp;&amp; maleCompatibility[m][c] == 'Y')<br>            temp++;<br>          else if (siblingGroups[s][c] == 'Y') {<br>            flag = false;<br>            break;<br>          }<br>        }<br>        if (flag)<br>          sz = max(sz,temp);<br>      }<br>    }<br>  }<br>  if (sz)<br>    return sz+2;<br>  else<br>    return 0;<br>}<br></td>