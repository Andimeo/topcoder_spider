<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br> <br>#include &lt;iostream&gt;<br> <br> <br>using namespace std;<br> <br> <br>class PasswordXGuessing {<br>public:<br>  long long howMany(vector &lt;string&gt;);<br>};<br>int comp(string &amp;a, string &amp;b)<br>{  <br>  int cnt = 0;<br>  for(int i = 0; i&lt; a.length(); ++i) <br>  {<br>    if(a[i] != b[i]) cnt++;<br>  }<br>  return cnt;<br>}<br>long long PasswordXGuessing::howMany(vector &lt;string&gt; g) {<br>  int n = g[0].length();<br>  int m = g.size();<br>  long long ret = 0;<br>  for(int i = 0; i&lt; n; ++i)<br>  {// [\u36319][\u31532][\u19968][\u20010][\u25968][\u30340][\u31532]i[\u20301][\u19981][\u30456][\u21516]<br>    char c = g[0][i];<br>    string pwd = g[0];<br>    for(int k = 0; k&lt;= 9; ++k)<br>    {<br>      if(c != ('0'+k))<br>      {<br>        pwd[i] = '0'+k;<br>        bool ok = true;<br>        for(int j = 1; j&lt; m; ++j)<br>        {<br>          if(comp(g[j],pwd) != 1) ok = false;<br>        }<br>        if(ok) ret ++;<br>      }<br>    }<br>  }<br>  return ret;<br>}<br></td>