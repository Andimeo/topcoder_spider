<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;   <br>#include &lt;sstream&gt;   <br>#include &lt;cstdio&gt;   <br>#include &lt;cstdlib&gt;   <br>#include &lt;cmath&gt;   <br>#include &lt;memory&gt;   <br>#include &lt;cctype&gt;   <br>#include &lt;string&gt;   <br>#include &lt;vector&gt;   <br>#include &lt;list&gt;   <br>#include &lt;queue&gt;   <br>#include &lt;deque&gt;   <br>#include &lt;stack&gt;   <br>#include &lt;map&gt;   <br>#include &lt;set&gt;   <br>#include &lt;algorithm&gt;   <br>using namespace std;  <br>   <br>#define FOR(i,a,b) for(int (i) = (a); (i) &lt; (b); ++(i))  <br>#define RFOR(i,a,b) for(int (i) = (a)-1; (i) &gt;= (b); --(i))  <br>#define CLEAR(a) memset((a),0,sizeof(a))  <br>#define INF 1000000000  <br>#define PB push_back  <br>#define ALL(c) (c).begin(), (c).end()  <br>#define pi 2*acos(0.0)  <br>#define SQR(a) (a)*(a)  <br>#define MP make_pair  <br>   <br>typedef long long Int;  <br> <br>class PasswordXPalindrome {<br>  public:<br>  int minSwaps(string s)<br>  {<br>    int cnt = 0;<br>    FOR (i,'a','z'+1)<br>    {<br>      int c = 0;<br>      FOR (j,0,s.size())<br>        if (s[j] == i)<br>          c++;<br>      if (c == 1)<br>        cnt++;<br>    }<br>    if (cnt &gt; 1)<br>      return -1;<br>    int res = 0;<br>    FOR (i,0,(s.size()/2))<br>    {<br>      int pos = -1;<br>      FOR (j,i+1,s.size())<br>        if (s[j] == s[i])<br>          pos = j;<br>      if (pos != s.size()-i-1)<br>        res++;<br>      swap(s[pos], s[s.size()-i-1]);<br>    }<br>    return res;<br>  }<br>  <br><br>};<br> <br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>