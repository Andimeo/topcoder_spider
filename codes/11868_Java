<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br>import static java.lang.Math.*;<br><br>public class PasswordXPalindrome {<br>  <br>  void swap(char[] str, int i, int j) {<br>    char temp = str[i];<br>    str[i] = str[j];<br>    str[j] = temp;<br>  }<br>  <br>  public int minSwaps(String password) {<br>    int[] count = new int[26];<br>    for (int i = 0; i &lt; password.length(); i++) {<br>      count[password.charAt(i) - 'a']++;<br>    }<br>    int ones = 0;<br>    for (int i = 0; i &lt; 26; i++) {<br>      if (count[i] == 1)<br>        ones++;<br>    }<br>    if (ones &gt; 1)<br>      return -1;<br>    char[] pass = password.toCharArray();<br>    <br>    int ans = 0;<br>    if (ones == 1) {<br>      for (int i = 0; i &lt; pass.length; i++) {<br>        if (count[pass[i] - 'a'] == 1 &amp;&amp; i != pass.length / 2) {<br>          swap(pass, i, pass.length / 2);<br>          ans++;<br>        }<br>      }<br>    }<br>  loopi:<br>    for (int i = 0; i &lt; pass.length / 2; i++) {<br>      if (pass[i] != pass[pass.length - i - 1]) {<br>        for (int j = i + 1; j &lt; pass.length; j++) {<br>          if (pass[j] == pass[i]) {<br>            swap(pass, j, pass.length - i - 1);<br>            ans++;<br>            continue loopi;<br>          }<br>        }<br>      }<br>    }<br>    return ans;<br>  }<br>}<br></td>