<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br> <br>using namespace std;<br> <br> <br>class RandomColoringDiv2 {<br>public:<br>  int getCount(int, int, int, int, int, int, int, int);<br>};<br>bool good(int r, int g, int b, int R, int G, int B, int d1,int d2)<br>{<br>  if((abs(r-R)&gt;d2) || (abs(g-G) &gt; d2) || (abs(b-B) &gt; d2)) return false;<br>  if((abs(r-R)&lt;d1) &amp;&amp; (abs(g-G) &lt; d1) &amp;&amp; (abs(b-B) &lt; d1)) return false;<br>  return true;<br>}<br>int RandomColoringDiv2::getCount(int maxR, int maxG, int maxB, int sR, int sG, int sB, int d1, int d2) {<br>  int cnt = 0;<br>  for(int r = 0; r &lt; maxR; ++r)<br>  {<br>    for(int g = 0; g&lt; maxG; ++g)<br>    {<br>      for(int b = 0; b&lt; maxB; ++b)<br>      {<br>        if(good(r,g,b,sR,sG,sB,d1,d2)) cnt ++;<br>      }<br>    }<br>  }<br>  return cnt;<br>}<br> <br> <br>//Powered by [BrainDeveloper] 1.0!<br> <br> <br> <br> <br> <br> <br> <br> <br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>