<td class="problemText" colspan="8" valign="middle" align="left">
            #line 5 "PasswordXGuessing.cpp"<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;fstream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;bitset&gt;<br>#include &lt;list&gt;<br>using namespace std;<br><br>typedef long long ll;<br>typedef vector&lt;int&gt; vi;<br>typedef pair&lt;int, int&gt; pii;<br>typedef vector&lt;pii&gt; vp;<br>typedef vector&lt;string&gt; vs;<br>typedef vector&lt;vi&gt; vvi;<br><br>const int N = 50;<br>const int M = 55;<br>const int K = 200010;<br>const int LIT = 2500;<br>const int INF = 1 &lt;&lt; 30;<br>const double EPS = 1e-13;<br><br>#define mp make_pair<br>#define pb push_back<br>#define fst first<br>#define snd second<br><br>class PasswordXGrid<br>{ <br>    public: <br>    int minSum(vs hh, vs vv) <br>    {<br>        int dp[N][N] = {0};<br>        int n = hh.size(), m = hh[0].size() + 1;<br>        for(int i = 0; i &lt; n; i++)<br>        {<br>            for(int j = 0; j &lt; m; j++)<br>            {<br>                if(i == 0 &amp;&amp; j == 0) {dp[i][j] = 0; continue;}<br>                if(i == 0) dp[i][j] = dp[i][j - 1] + hh[i][j - 1] - '0';<br>                else if(j == 0) dp[i][j] = dp[i - 1][j] + vv[i - 1][j] - '0';<br>                else<br>                {<br>                    int up = dp[i - 1][j] + vv[i - 1][j] - '0';<br>                    int lt = dp[i][j - 1] + hh[i][j - 1] - '0';<br>                    dp[i][j] = max(up, lt);<br>                }<br>            }    <br>        }<br>        <br>        return dp[n - 1][m - 1];<br>    } <br>              <br> <br>              }; <br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>