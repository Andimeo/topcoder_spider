<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.List;<br>import java.util.ArrayList;<br>import java.util.Comparator;<br>import java.util.AbstractList;<br>import java.util.Collection;<br><br>/**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> * @author Egor Kulikov (egor@egork.net)<br> */<br>public class AntsMeet {<br>  public int countAnts(int[] x, int[] y, String direction) {<br>    int[] dx = new int[256];<br>    int[] dy = new int[256];<br>    dy['N'] = 1;<br>    dy['S'] = -1;<br>    dx['W'] = -1;<br>    dx['E'] = 1;<br>    boolean[] killed = new boolean[x.length];<br>    for (int i = 0; i &lt; x.length; i++) {<br>      x[i] *= 2;<br>      y[i] *= 2;<br>    }<br>    for (int i = 0; i &lt; 4000; i++) {<br>      for (int j = 0; j &lt; x.length; j++) {<br>        if (killed[j])<br>          continue;<br>        x[j] += dx[direction.charAt(j)];<br>        y[j] += dy[direction.charAt(j)];<br>      }<br>      for (int j = 0; j &lt; x.length; j++) {<br>        if (killed[j])<br>          continue;<br>        for (int k = j + 1; k &lt; x.length; k++) {<br>          if (killed[k])<br>            continue;<br>          if (x[j] == x[k] &amp;&amp; y[j] == y[k])<br>            killed[j] = killed[k] = true;<br>        }<br>      }<br>    }<br>    return CollectionUtils.count(Array.wrap(killed), false);<br>  }<br><br>}<br><br>class CollectionUtils {<br><br>  public static&lt;T&gt; int count(Iterable&lt;T&gt; array, T sample) {<br>    int result = 0;<br>    for (T element : array) {<br>      if (element.equals(sample))<br>        result++;<br>    }<br>    return result;<br>  }<br><br>  }<br><br>abstract class Array&lt;T&gt; extends AbstractList&lt;T&gt; {<br><br>  public static List&lt;Boolean&gt; wrap(boolean...array) {<br>    return new BooleanArray(array);<br>  }<br><br>  protected static class BooleanArray extends Array&lt;Boolean&gt; {<br>    protected final boolean[] array;<br><br>    protected BooleanArray(boolean[] array) {<br>      this.array = array;<br>    }<br><br>    public int size() {<br>      return array.length;<br>    }<br><br>    public Boolean get(int index) {<br>      return array[index];<br>    }<br><br>    public Boolean set(int index, Boolean value) {<br>      boolean result = array[index];<br>      array[index] = value;<br>      return result;<br>    }<br>  }<br><br>  }<br><br><br><br>// Powered by FileEdit<br>// Powered by moj 4.17 [modified TZTester]<br>// Powered by CodeProcessor<br></td>