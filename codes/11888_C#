<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class AkariDaisukiDiv1 {<br>    public int countF(string Waai, string Akari, string Daisuki, string S, string F, int k)<br>    {<br>        long mod = 1000000007;<br>        while (S.Length &lt; 50 &amp;&amp; k &gt; 0)<br>        {<br>            k--;<br>            S = Waai + S + Akari + S + Daisuki;<br>        }<br>        if (k == 0)<br>        {<br>            return searchnum(S, F);<br>        }<br>        string start = S.Substring(0, F.Length - 1);<br>        string goal = S.Substring(S.Length - F.Length + 1, F.Length - 1);<br><br>        long ret = searchnum(S, F);<br>        string pre = "";<br>        long preadd = 0;<br>        while (k &gt; 0)<br>        {<br>            string now = start + " " + goal;<br>            if (now == pre)<br>            {<br>                while (k &gt; 0)<br>                {<br>                    ret = (ret * 2 + preadd) % mod;<br>                    k--;<br>                }<br>                break;<br>            }<br>            pre = now;<br><br>            long nowadd = 0;<br>            nowadd += searchnum(Waai + start, F);<br>            nowadd += searchnum(goal + Akari + start, F);<br>            nowadd += searchnum(goal + Daisuki, F);<br>            preadd = nowadd;<br><br>            ret = (ret * 2 + nowadd) % mod;<br>            start = Waai + start;<br>            start = start.Substring(0, F.Length - 1);<br>            goal = goal + Daisuki;<br>            goal = goal.Substring(goal.Length - F.Length + 1, F.Length - 1);<br>            k--;<br><br>        }<br>        return (int)(ret % mod);<br>    }<br><br>    int searchnum(string S, string F)<br>    {<br>        int ret = 0;<br>        for (int i = 0; i &lt;= S.Length - F.Length; i++)<br>        {<br>            bool flag = true;<br>            for (int j = 0; j &lt; F.Length; j++)<br>            {<br>                if (S[i + j] != F[j])<br>                {<br>                    flag = false;<br>                    break;<br>                }<br>            }<br>            if (flag) ret++;<br>        }<br>        return ret;<br>    }<br><br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>