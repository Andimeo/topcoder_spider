<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> */<br>public class AkariDaisukiDiv1 {<br>    static final int MODULO = (int) 1e9 + 7;<br>    <br>    public int countF(String Waai, String Akari, String Daisuki, String S, String F, int k) {<br>        int[][] jump = new int[F.length()][26];<br>        int[][] extra = new int[F.length()][26];<br>        for (int i = 0; i &lt; F.length(); ++i) {<br>            for (int j = 0; j &lt; 26; ++j) {<br>                String s = F.substring(0, i) + (char) ('a' + j);<br>                if (s.equals(F)) {<br>                    ++extra[i][j];<br>                    s = s.substring(1);<br>                }<br>                while (!F.startsWith(s)) s = s.substring(1);<br>                jump[i][j] = s.length();<br>            }<br>        }<br>        int n = F.length();<br>        int[] Wa = new int[n];<br>        int[] Wb = new int[n];<br>        buildTransfers(Waai, n, jump, extra, Wa, Wb);<br>        int[] Aa = new int[n];<br>        int[] Ab = new int[n];<br>        buildTransfers(Akari, n, jump, extra, Aa, Ab);<br>        int[] Da = new int[n];<br>        int[] Db = new int[n];<br>        buildTransfers(Daisuki, n, jump, extra, Da, Db);<br>        int[] Sa = new int[n];<br>        int[] Sb = new int[n];<br>        buildTransfers(S, n, jump, extra, Sa, Sb);<br>        int[] nSa = new int[n];<br>        int[] nSb = new int[n];<br>        int interesting = Math.min(k, 55);<br>        int lastDelta = 0;<br>        for (int step = 0; step &lt; interesting; ++step) {<br>            for (int old = 0; old &lt; n; ++old) {<br>                int s1 = Wa[old];<br>                int s2 = Sa[s1];<br>                int s3 = Aa[s2];<br>                int s4 = Sa[s3];<br>                int s5 = Da[s4];<br>                nSa[old] = s5;<br>                int sum = Wb[old] + Sb[s1];<br>                if (sum &gt;= MODULO) sum -= MODULO;<br>                sum += Ab[s2];<br>                if (sum &gt;= MODULO) sum -= MODULO;<br>                sum += Sb[s3];<br>                if (sum &gt;= MODULO) sum -= MODULO;<br>                sum += Db[s4];<br>                if (sum &gt;= MODULO) sum -= MODULO;<br>                nSb[old] = sum;<br>            }<br>            lastDelta = ((nSb[0] - 2 * Sb[0]) % MODULO + MODULO) % MODULO;<br>            int[] tmp = Sa;<br>            Sa = nSa;<br>            nSa = tmp;<br>            tmp = Sb;<br>            Sb = nSb;<br>            nSb = tmp;<br>        }<br>        int res = Sb[0];<br>        for (int step = interesting; step &lt; k; ++step) {<br>            res *= 2;<br>            if (res &gt;= MODULO) res -= MODULO;<br>            res += lastDelta;<br>            if (res &gt;= MODULO) res -= MODULO;<br>        }<br>        return res;<br>    }<br> <br>    private void buildTransfers(String what, int n, int[][] jump, int[][] extra, int[] wa, int[] wb) {<br>        for (int i = 0; i &lt; n; ++i) {<br>            wa[i] = i;<br>            wb[i] = 0;<br>            for (int j = 0; j &lt; what.length(); ++j) {<br>                int cur = what.charAt(j) - 'a';<br>                wb[i] += extra[wa[i]][cur];<br>                wa[i] = jump[wa[i]][cur];<br>            }<br>        }<br>    }<br>}<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.16 [modified TZTester]<br>// Powered by CodeProcessor<br></td>