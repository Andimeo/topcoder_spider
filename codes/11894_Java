<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.Map;<br>import java.util.Collection;<br>import java.util.HashMap;<br> <br>/**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> */<br>public class SwitchesAndLamps {<br>    public int theMin(String[] switches, String[] lamps) {<br>        Map&lt;String, Integer&gt; states = new HashMap&lt;String, Integer&gt;();<br>        for (int i = 0; i &lt; switches[0].length(); ++i) {<br>            StringBuilder b = new StringBuilder();<br>            for (String x : switches) {<br>                b.append(x.charAt(i));<br>            }<br>            Integer old = states.get(b.toString());<br>            if (old == null) states.put(b.toString(), 1); else states.put(b.toString(), old + 1);<br>        }<br>        Map&lt;String, Integer&gt; states2 = new HashMap&lt;String, Integer&gt;();<br>        for (int i = 0; i &lt; switches[0].length(); ++i) {<br>            StringBuilder b = new StringBuilder();<br>            for (String x : lamps) {<br>                b.append(x.charAt(i));<br>            }<br>            Integer old = states2.get(b.toString());<br>            if (old == null) states2.put(b.toString(), 1); else states2.put(b.toString(), old + 1);<br>        }<br>        if (!states.equals(states2)) return -1;<br>        int mx = 0;<br>        for (Integer val : states.values()) {<br>            mx = Math.max(mx, val);<br>        }<br>        int p2 = 1;<br>        int cnt = 0;<br>        while (p2 &lt; mx) {<br>            p2 *= 2;<br>            ++cnt;<br>        }<br>        return cnt;<br>    }<br>}<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.16 [modified TZTester]<br>// Powered by CodeProcessor<br></td>