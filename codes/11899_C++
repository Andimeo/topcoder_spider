<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;utility&gt;<br>#include &lt;map&gt;<br>#include &lt;math.h&gt;<br> <br>using namespace std;<br> <br>#define lint long long<br>#define ss stringstream<br>#define sz size()<br>#define pb push_back<br>#define FOR(i,n) for(i=0;i&lt;n;i++)<br>#define SFOR(i,m,n) for(i=m;i&lt;n;i++)<br>#define FORD(i,n) for(i=n-1;i&gt;=0;i--)<br> <br>vector&lt;int&gt; A;<br> <br>long long FF[55][55];<br> <br>long long F(int q, int w) {<br>  if (FF[q][w] == -1) {<br>    long long ans = 0, ans1;<br>    int cur = max(A[0],A[q]), cur2;<br>    int i,j;<br>    SFOR(j,1,A.sz) {<br>      ans += abs(cur-max(A[j],A[q]));<br>      cur = max(A[j],A[q]);<br>    }<br>    if (w != 0) {<br>      FOR(i,A.sz) if (A[i] &gt; A[q]) {<br>        ans1 = F(i,w-1);<br>        cur = min(A[i],max(A[q],A[0]));<br>        SFOR(j,1,A.sz) {<br>          cur2 = min(A[i],max(A[q],A[j]));<br>          ans1 += min(abs(cur2-cur),A[i]-A[q]-abs(cur2-cur));<br>          cur = cur2;<br>        }<br>        ans = min(ans,ans1);<br>      }<br>    }<br>    FF[q][w] = ans;<br>  }<br>  return FF[q][w];<br>}<br> <br>class CucumberWatering {<br>  public:<br>  long long theMin(vector &lt;int&gt; x, int K) {<br>    A = x;<br>    int i,j,cur;<br>    long long ans = 0, ans1;<br>    FOR(i,A.sz-1) ans += labs(A[i+1]-A[i]);<br>    if (K == 0) return ans;<br>    memset(FF,0xFF,sizeof(FF));<br>    FOR(i,A.sz) {<br>      ans1 = F(i,K-1);<br>      cur = min(A[0],A[i]);<br>      SFOR(j,1,A.sz) {<br>        ans1 += abs(cur-min(A[j],A[i]));<br>        cur = min(A[j],A[i]);<br>      }<br>      ans = min(ans,ans1);<br>    }<br>    return ans;<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>