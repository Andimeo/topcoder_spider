<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> */<br>public class EllysRivers {<br>    public double getMin(int length, int walk, int[] width, int[] speed) {<br>        int n = width.length;<br>        double[] next = new double[n];<br>        double[] cur = new double[n];<br>        int[] shift = new int[n];<br>        for (int i = 0; i &lt; n; ++i) {<br>            cur[i] = width[i] / (double) speed[i];<br>            next[i] = Math.sqrt(width[i] * (double) width[i] + 1) / (double) speed[i];<br>            shift[i] = 0;<br>        }<br>        int numWalk = 0;<br>        for (int j = 0; j &lt; length; ++j) {<br>            double best = 1.0 / walk;<br>            int bi = -1;<br>            for (int i = 0; i &lt; n; ++i) {<br>                if (next[i] - cur[i] &lt; best) {<br>                    best = next[i] - cur[i];<br>                    bi = i;<br>                }<br>            }<br>            if (bi &lt; 0) {<br>                ++numWalk;<br>            } else {<br>                cur[bi] = next[bi];<br>                ++shift[bi];<br>                next[bi] = Math.sqrt(width[bi] * (double) width[bi] + (shift[bi] + 1) * (double) (shift[bi] + 1)) / (double) speed[bi];<br>            }<br>        }<br>        double res = 0;<br>        for (double x : cur)<br>            res += x;<br>        res += numWalk / (double) walk;<br>        return res;<br>    }<br>}<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.16 [modified TZTester]<br>// Powered by CodeProcessor<br></td>