<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br> <br>class StrangeDictionary {<br>public:<br> <br>  double prob( string s, string x )<br>  {<br>    double fav = 0, opp = 0;<br>    <br>    for( int i=0; s[i]; i++ )<br>    {<br>      if( s[i] &gt; x[i] ) fav += 1.0;<br>      else if ( s[i] &lt; x[i] ) opp += 1.0;<br>    }<br>    return fav/(fav+opp);<br>  }<br> <br>  vector &lt;double&gt; getExpectedPositions(vector &lt;string&gt; words) {<br>    <br>    int n = words.size();<br>    vector&lt;double&gt; rv;<br>    <br>    for( int i=0; i&lt;n; i++ )<br>    {<br>      double pos = 0;<br>      <br>      for( int j=0; j&lt;n; j++ )<br>      {<br>        if( i==j ) continue;<br>        pos += prob(words[i], words[j]);<br>      }<br>      rv.push_back( pos );<br>    }<br>    return rv;<br>  }<br>};<br> <br> <br> <br>//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!<br></td>