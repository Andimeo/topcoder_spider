<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstring&gt;<br>#include &lt;numeric&gt;<br>using namespace std;<br>typedef long long ll;<br>#define F0(i,n) for (int i = 0; i &lt; n; i++)<br>#define F1(i,n) for (int i = 1; i &lt;= n; i++)<br>#define CL(a,x) memset(x, a, sizeof(x));<br>#define SZ(x) ((int)x.size())<br>const double eps = 1e-10;<br>const int MOD = 1000000007;<br>int i, j, k, m, n, l;<br>int ans;<br>ll cntx[20005], cnty[20005];<br> <br>struct PatrolRoute { <br>int countRoutes(int X, int Y, int minT, int maxT) {<br>    CL(0,cntx); CL(0,cnty);<br>    F1(i,X) F1(j,X) if (i+j &lt; X) cntx[i+j] += X-(i+j);<br>    F1(i,Y) F1(j,Y) if (i+j &lt; Y) cnty[i+j] += Y-(i+j);<br> <br>    ll s = 0;<br>    F1(i,X) F1(j,Y) if (2*(i+j) &gt;= minT &amp;&amp; 2*(i+j) &lt;= maxT) {<br>        s += cntx[i] * cnty[j];<br>        s %= MOD;<br>    }<br>    ans = (s * 6) % MOD;<br>  return ans;<br>} <br>  <br> <br>}; <br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>