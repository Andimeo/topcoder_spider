<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Text.RegularExpressions;<br>using System.Collections;<br><br>public class StrangeDictionary2 {<br>    string[] words;<br>    double[] res;<br>    double[][] vis;<br>    int n;<br>    int[] num;<br>    public double[] getProbabilities(string[] words) {<br>        this.words = words;<br>        n = words.Length;        <br>        num = new int[1 &lt;&lt; n];<br>        for (int set = 0; set &lt; 1 &lt;&lt; n; set++)<br>        {<br>            num[set] = words[0].Length;<br>            for (int i = 0; i &lt; words[0].Length; i++)<br>            {<br>                bool ok = true;<br>                int who = -1;<br>                for(int j=0;j&lt;n;j++)<br>                    if ((set &amp; (1 &lt;&lt; j)) &gt; 0)<br>                    {<br>                        if (who == -1)<br>                            who = j;<br>                        if (words[who][i] != words[j][i])<br>                            ok = false;<br>                    }<br>                if (ok)<br>                    num[set]--;<br>            }<br>        }<br>        vis = new double[1 &lt;&lt; n][];<br>        double[]res=go((1 &lt;&lt; n) - 1);<br>       <br>        return res;<br>        <br>    }<br><br>    private double[] go(int set)<br>    {<br>        if (vis[set] != null)<br>        {<br>            return vis[set];            <br>        }<br>        double[] curRes = new double[n];<br>        vis[set] = curRes;<br>        if ((set &amp; (set - 1)) == 0)<br>        {<br>            int who = -1;<br>            for (int j = 0; j &lt; n; j++)<br>                if ((set &amp; (1 &lt;&lt; j)) &gt; 0)<br>                    who = j;<br>            curRes[who] = 1.0;<br>            return curRes;<br>        }<br>        for (int i = 0; i &lt; words[0].Length; i++)<br>        {<br>            int nextSet = 0;<br>            char minChar = 'z';<br>            for(int j=0;j&lt;n;j++)<br>                if ((set &amp; (1 &lt;&lt; j)) &gt; 0)<br>                {<br>                    if (words[j][i] &lt; minChar)<br>                        minChar = words[j][i];<br>                }<br>            for(int j=0;j&lt;n;j++)<br>                if ((set &amp; (1 &lt;&lt; j)) &gt; 0)<br>                {<br>                    if (words[j][i] == minChar)<br>                    {<br>                        nextSet |= 1 &lt;&lt; j;<br>                    }<br>                }<br>            if (nextSet == set)<br>            {<br>                ;<br>            }<br>            else<br>            {<br>                double[]cur=go(nextSet);<br>                for (int j = 0; j &lt; n; j++)<br>                    curRes[j] +=(1.0/num[set])*vis[nextSet][j];<br>            }<br>        }<br>        vis[set] = curRes;<br>        return curRes;<br>    }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>