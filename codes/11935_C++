<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;  <br>#include &lt;string&gt;  <br>#include &lt;set&gt;  <br>#include &lt;map&gt;  <br>#include &lt;vector&gt;  <br>#include &lt;queue&gt;   <br>#include &lt;iostream&gt;  <br>#include &lt;iterator&gt;  <br>#include &lt;math.h&gt;  <br>#include &lt;cstdio&gt;  <br>#include &lt;cstdlib&gt;  <br>#include &lt;sstream&gt;  <br><br>#pragma comment(linker, "/STACK:60777216")  <br><br>using namespace std;  <br><br>typedef pair&lt;int,int&gt; pii;  <br>typedef long long ll;  <br>typedef vector&lt;int&gt; vi;  <br><br>#define UN(v) SORT(v),v.erase(unique(v.begin(),v.end()),v.end())  <br>#define SORT(c) sort((c).begin(),(c).end())  <br>#define FOR(i,a,b) for (int  i=(a); i &lt; (b); i++)   <br>#define REP(i,n) FOR(i,0,n)   <br>#define CL(a,b) memset(a,b,sizeof(a))  <br>#define pb push_back  <br><br>typedef vector&lt;double&gt; vd;<br><br>vd d[1&lt;&lt;16];<br>int n,m;<br>vector&lt;string&gt; w;<br><br>int parse(int mask,int pos){<br>  int best = -1;<br>  int bmask = 0;<br>  REP(i,n)if(mask&amp;(1&lt;&lt;i)){<br>    if(best==-1 || w[best][pos] &gt; w[i][pos]) best = i, bmask=0;<br>    if(w[best][pos] == w[i][pos]) bmask |= (1&lt;&lt;i);<br>  }<br>  return bmask;<br>}<br><br>vd solve(int mask){<br>  if(d[mask].size()) return d[mask];<br>  if((mask&amp;(mask-1))==0){<br>    vd x(n);<br>    REP(i,n)if(mask==(1&lt;&lt;i)) x[i]++;<br>    return d[mask]=x;<br>  }<br>  vd res(n);<br><br>  REP(i,m){<br>    int nm = parse(mask, i);<br>    if(nm!=mask){<br>      vd t = solve(nm);<br>      REP(j,t.size()) res[j] += t[j];<br>    }<br>  }<br><br>  double sum = 0;<br>  REP(i,res.size()) sum += res[i];<br>  REP(i,res.size()) res[i]/=sum;<br>  return d[mask]=res;<br>}<br><br>class StrangeDictionary2 {<br>public:<br> vd getProbabilities(vector &lt;string&gt; words) {<br>   w = words;<br>   n=w.size(),m=w[0].size();<br>   REP(i,1&lt;&lt;n) d[i].clear();<br>  return solve((1&lt;&lt;n)-1);<br> }<br> <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>