<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class Spacetsk<br>{<br>  private const int MOD = 1000000007;<br><br>  public int countsets( int L, int H, int K )<br>  {<br>    if ( K == 1 ) return ( L + 1 ) * ( H + 1 );<br>    int[] res = new int[L + 1];<br>    int mx = Math.Max( H, L ) + 1;<br>    int[,] dp = new int[L + 1, mx + 1];<br>    int[,] bin = new int[mx + 1, mx + 1];<br>    for ( int i = 0; i &lt;= mx; ++i )<br>    {<br>      bin[i, 0] = bin[i, i] = 1;<br>      for ( int j = 1; j &lt; i; ++j )<br>      {<br>        bin[i, j] = bin[i - 1, j] + bin[i - 1, j - 1];<br>        if ( bin[i, j] &gt;= MOD ) bin[i, j] -= MOD;<br>      }<br>    }<br>    dp[1, 2] = H;<br>    for ( int i = 2; i &lt;= L; ++i )<br>    {<br>      for ( int j = 1; j &lt;= mx; ++j ) dp[i, j] = dp[i - 1, j];<br>      for ( int j = 1; j &lt;= H; ++j )<br>      {<br>        int g = NumTheory.Gcd( i, j ) + 1;<br>        if ( g == 2 ) dp[i, 2]++;<br>        else<br>        {<br>          dp[i, g]++;<br>          dp[i, g - 1]--;<br>        }<br>      }<br>      for ( int j = 1; j &lt;= mx; ++j ) if ( dp[i, j] &gt;= MOD ) dp[i, j] -= MOD;<br>    }<br>    for ( int i = 1; i &lt;= L; ++i )<br>    {<br>      for ( int j = K; j &lt;= mx; ++j )<br>      {<br>        res[i] += (int)( ( (long)bin[j, K] * dp[i, j] ) % MOD );<br>        if ( res[i] &gt;= MOD ) res[i] -= MOD;<br>      }<br>    }<br>    int ans = ( H + 1 &lt; K ? 0 : ( (int)( ( (long)bin[H + 1, K] * ( L + 1 ) ) % MOD ) ) );<br><br>    for ( int i = 0; i &lt;= L; ++i )<br>    {<br>      ans += res[i];<br>      if ( ans &gt;= MOD ) ans -= MOD;<br>      ans += res[L - i];<br>      if ( ans &gt;= MOD ) ans -= MOD;<br>    }<br><br>    return ans;<br>  }<br><br>}<br><br><br>static class NumTheory<br>{<br>  public static int Gcd( int a, int b )<br>  {<br>    if ( a &lt; 0 ) a = -a;<br>    if ( b &lt; 0 ) b = -b;<br>    return b == 0 ? a : Gcd( b, a % b );<br>  }<br>  }<br><br><br><br>// Powered by FileEdit<br>// Powered by moj 4.16 [modified TZTester]<br>// Powered by CleanSharp 1.0<br>// Powered by CodeProcessor<br></td>