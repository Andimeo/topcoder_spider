<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br><br>using namespace std;<br><br>typedef long long int64;<br>template&lt;class T&gt; inline T gcd(T a,T b)<br>  {if(a&lt;0)return gcd(-a,b);if(b&lt;0)return gcd(a,-b);return (b==0)?a:gcd(b,a%b);}<br><br>const int maxsize=2000+5;<br>const int MOD=1000000007;<br><br>inline int ADD(int a,int b)<br>{<br>  int c=a+b;<br>  if (c&gt;=MOD) c-=MOD;<br>  return c;<br>}<br>inline int MUL(int a,int b)<br>{<br>  return (int)((int64)a*b%MOD);<br>}<br>inline void ADDTO(int &amp;a,int b)<br>{<br>  a+=b;<br>  if (a&gt;=MOD) a-=MOD;<br>}<br><br>class Spacetsk<br>{<br>public:<br>  int c[maxsize][maxsize];<br>  int g[maxsize];<br>  int countsets(int L, int H, int K)<br>  {<br>    memset(c,0,sizeof(c));<br>    for (int i=0;i&lt;maxsize;i++) for (int j=0;j&lt;=i;j++)<br>      c[i][j]=(j==0)?1:ADD(c[i-1][j-1],c[i-1][j]);<br>    if (K==1) return MUL(L+1,H+1);<br>    int R=c[H+1][K];<br>    R=MUL(R,L+1);<br>    for (int dx=1;dx&lt;=L;dx++) <br>    {<br>      g[0]=0;<br>      for (int p=1;p&lt;=L;p++)<br>        g[p]=ADD(g[p-1],c[p/dx+1][K]);<br>      for (int dy=1;dy&lt;=H;dy++)<br>        if (gcd(dx,dy)==1)<br>        {<br>          int d=H/dy;<br>          int w=min(dx*d,L);<br>          int s=g[w];<br>          if (w&lt;L)<br>            ADDTO(s,MUL(c[d+1][K],L-w));<br>          ADDTO(R,s);<br>          ADDTO(R,s);<br>        }<br>    }<br>    return R;<br>  }<br>};<br></td>