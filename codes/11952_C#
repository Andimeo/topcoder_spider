<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br> <br>public class GreedyTravelingSalesman<br>{<br>  int travel(int n, int[,] dist) {<br>    bool[] bol = new bool[n];<br>    int tt = 0;<br>    int now = 0;<br>    bol[0] = true;<br>    <br>    for (int i = 1; i &lt; n; ++i) {<br>      int next = -1;<br>      for (int j = 0; j &lt; n; ++j)<br>        if (!bol[j]) {<br>        <br>        if (next == -1) {<br>          next = j;<br>          continue;<br>        }<br>        <br>        if (dist[now, j] &lt; dist[now, next]) {<br>          next = j;<br>        }<br>      }<br>      <br>      tt += dist[now, next];<br>      now = next;<br>      bol[now] = true;<br>    }<br>    <br>    return tt;<br>  }<br>  <br>  public int worstDistance (string[] thousands, string[] hundreds, string[] tens, string[] ones)<br>  {<br>    int n = thousands.Length;<br>    int[,] dist = new int[n, n];<br>    <br>    for (int i = 0; i &lt; n; ++i)<br>      for (int j = 0; j &lt; n; ++j) {<br>      dist[i, j] = <br>        (int)(thousands[i][j] - '0') * 1000 + <br>        (int)(hundreds[i][j] - '0') * 100 + <br>        (int)(tens[i][j] - '0') * 10 + <br>        (int)(ones[i][j] - '0'); <br>    }<br>    <br>    int max = 0;<br>    for (int i = 0; i &lt; n; ++i) {<br>      List&lt;int&gt; pos = new List&lt;int&gt;();<br>      for (int j = 0; j &lt; n; ++j) {<br>        pos.Add(dist[i, j] - 1);<br>        pos.Add(dist[i, j]);<br>        pos.Add(dist[i, j] + 1);<br>      }<br>      pos.Add(1);<br>      pos.Add(9999);<br>      pos.Sort();<br>      <br>      int last = -1;<br>      foreach (int nnn in pos) {<br>        if (nnn &gt;= 1 &amp;&amp; nnn &lt;= 9999 &amp;&amp; nnn != last) {<br>          last = nnn;<br>          for (int j = 0; j &lt; n; ++j) {<br>            int bak = dist[i, j];<br>            dist[i, j] = nnn;<br>            max = Math.Max (max, travel(n, dist));<br>            dist[i, j] = bak;<br>          }<br>        }<br>      }<br>    }<br>    <br>    return max;<br>  }<br> <br> <br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>