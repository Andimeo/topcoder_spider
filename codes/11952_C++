<td class="problemText" colspan="8" valign="middle" align="left">
            #line 5 "GreedyTravelingSalesman.cpp"<br><br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br><br>using namespace std;<br><br>#define pb push_back<br>#define sz(x) ((int)((x).size()))<br>#define out(x) printf(#x" %d\n", x)<br>#define rep(i,n) for(int i=0;i&lt;(n);++i)<br>#define repf(i,l,h) for(int i=(l);i&lt;=(h);++i)<br>#define repd(i,h,l) for(int i=(h);i&gt;=(l);--i)<br><br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;string&gt; vs;<br>typedef vector&lt;double&gt; vd;<br>typedef long long ll;<br>typedef pair&lt;int,int&gt; pii;<br><br>const int maxn = 32;<br><br>int g[maxn][maxn], n;<br>bool v[maxn];<br><br>int gao() {<br>    memset (v, 0, sizeof(v));<br>    v[0] = true;<br>    int now = 0, res = 0;<br>    rep (i, n - 1) {<br>        int ans = 10000, ansj = -1;<br>        rep (j, n) {<br>            if (!v[j] &amp;&amp; ans &gt; g[now][j]) {<br>                ans = g[now][j];<br>                ansj = j;<br>            }<br>        }<br>        res += ans;<br>        now = ansj;<br>        v[ansj] = true;<br>    }<br>    return res;<br>}<br><br>int solve() {<br>    int ans = 0;<br>    rep (i, n) {<br>        set&lt;int&gt; dif;<br>        dif.insert(9999);<br>        rep (j, n) if (i != j) {<br>            dif.insert(g[i][j]);<br>            if (g[i][j] + 1 &lt;= 9999) {<br>                dif.insert(g[i][j] + 1);<br>            }<br>            if (g[i][j] - 1 &gt;= 1) {<br>                dif.insert(g[i][j] - 1);<br>            }<br>        }<br>        rep (j, n) {<br>            if (i != j) {<br>                int temp = g[i][j];<br>                for (set&lt;int&gt;::iterator it = dif.begin(); it != dif.end(); ++it) {<br>                    g[i][j] = *it;<br>                    ans = max(ans, gao());<br>                }<br>                g[i][j] = temp;<br>            }<br>        }<br>    }<br>    return ans;<br>}<br><br>class GreedyTravelingSalesman {<br>public:<br>        int worstDistance(vector &lt;string&gt; a, vector &lt;string&gt; b, vector &lt;string&gt; c, vector &lt;string&gt; d) {<br>            n = sz(a);<br>            memset (g, 0, sizeof(g));<br>            rep (i, n) rep (j, n) {<br>                g[i][j] = g[i][j] * 10 + a[i][j] - '0';<br>            }<br>            rep (i, n) rep (j, n) {<br>                g[i][j] = g[i][j] * 10 + b[i][j] - '0';<br>            }<br>            rep (i, n) rep (j, n) {<br>                g[i][j] = g[i][j] * 10 + c[i][j] - '0';<br>            }<br>            rep (i, n) rep (j, n) {<br>                g[i][j] = g[i][j] * 10 + d[i][j] - '0';<br>            }<br>            return solve();<br>        }<br>        <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>