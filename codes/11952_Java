<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> */<br>public class GreedyTravelingSalesman {<br>   public int worstDistance(String[] thousands, String[] hundreds, String[] tens, String[] ones) {<br>       int n = thousands.length;<br>    int[][] dist = new int[n][n];<br>       for (int i = 0; i &lt; n; i++) for (int j = 0; j &lt; n; j++){<br>           dist[i][j] = 1000 * (thousands[i].charAt(j)-'0')<br>                   + 100 * (hundreds[i].charAt(j)-'0')<br>                   + 10 * (tens[i].charAt(j)-'0')<br>                   + (ones[i].charAt(j) - '0');<br>       }<br>       int res = 0;<br>       for (int i = 0; i &lt; n; i++) for (int j = 0; j &lt; n; j++)if(i!=j){<br>            int before = dist[i][j];<br>           dist[i][j] = 9999;<br>           res = Math.max(res,calc(dist));<br>           dist[i][j] = 1;<br>           for (int k = 0; k &lt; n; k++)if(i!=k &amp;&amp; j!=k){<br>               dist[i][j] = dist[i][k];<br>               res = Math.max(res,calc(dist));<br>               if(dist[i][k] &gt; 1){<br>               dist[i][j] = dist[i][k] - 1;<br>                   res = Math.max(res,calc(dist));<br>               }<br>           }<br>           dist[i][j] = before;<br>       }<br>       return res;<br>   }<br><br>    private int calc(int[][] dist) {<br>        int n = dist.length;<br>        boolean[] visited = new boolean[n];<br>        int cur=0;<br>        visited[cur]=true;<br>        int res = 0;<br>        for (int i = 0; i &lt; n-1; i++){<br>            int k = -1;<br>            for (int j = 0; j &lt; n; j++)if(!visited[j]){<br>                if(k==-1 || dist[cur][k] &gt; dist[cur][j]){<br>                    k = j;<br>                }<br>            }<br>            res += dist[cur][k];<br>            cur = k;<br>            visited[cur] = true;<br>        }<br>        return res;<br>    }<br><br><br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by moj 4.17 [modified TZTester]<br>// Powered by CodeProcessor<br></td>