<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class OrderOfTheHats {<br>public:<br>  int minChanged(vector &lt;string&gt;);<br>};<br> <br> <br>int dp[1 &lt;&lt; 20], mask[22];<br> <br>inline int cnt(int X)<br>{<br>  int ans = 0;<br>  <br>  while (X)<br>  {<br>    ans ++;<br>    X = X &amp; (X - 1);<br>  }<br>  <br>  return ans;<br>}<br> <br>inline int compute(int X, int Y)<br>{<br>  return cnt(Y) - cnt(X &amp; Y);<br>}<br> <br> <br>int OrderOfTheHats::minChanged(vector &lt;string&gt; spellChart) {<br>  int graf[23][23];<br>  int INF = (1 &lt;&lt; 30);<br>  <br>  memset(graf, 0, sizeof(graf));<br>  int i, j, N = spellChart.size();<br>  <br>  for (i = 0; i &lt; N; i ++)<br>    for (j = 0; j &lt; N; j ++)<br>      if (spellChart[i][j] == 'Y')<br>      {<br>        graf[i][j] = 1;<br>        mask[j] = mask[j] | (1 &lt;&lt; i);<br>      }<br>      else<br>        graf[i][j] = 0;<br>  N --;<br>  <br>  dp[0] = 0;<br>  for (i = 1; i &lt; (1 &lt;&lt; (N + 1)); i ++)<br>    dp[i] = INF;<br>  <br>  for (i = 0; i &lt; (1 &lt;&lt; (N + 1)); i ++)<br>    for (j = 0; j &lt;= N; j ++) //incerc sa bag nodul j<br>      if ((i &amp; (1 &lt;&lt; j)) == 0)  <br>        dp[i | (1 &lt;&lt; j)] = min(dp[i | (1 &lt;&lt; j)], dp[i] + compute(i, mask[j]));<br>        <br>  return dp[(1 &lt;&lt; (N + 1)) - 1];<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>