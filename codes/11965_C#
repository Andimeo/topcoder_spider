<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br><br>public class PointyWizardHats<br>{<br>  private bool[,] c;<br>  private int n, m;<br>  private int[] dx, dy;<br><br>  public int getNumHats( int[] topHeight, int[] topRadius, int[] bottomHeight, int[] bottomRadius )<br>  {<br>    n = topHeight.Length;<br>    m = bottomRadius.Length;<br>    c = new bool[n, m];<br>    for ( int i = 0; i &lt; n; ++i )<br>      for ( int j = 0; j &lt; m; ++j )<br>      {<br>        if ( topRadius[i] &lt; bottomRadius[j] &amp;&amp; topRadius[i] * bottomHeight[j] &lt; bottomRadius[j] * topHeight[i] )<br>        {<br>          c[i, j] = true;<br>        }<br>      }<br>    int res = 0;<br>    dx = new int[n];<br>    dy = new int[m];<br>    ArrayUtils.Fill( dx, -1 );<br>    ArrayUtils.Fill( dy, -1 );<br>    for ( int i = 0; i &lt; n; ++i )<br>      if ( dx[i] == -1 )<br>      {<br>        if ( go( i, new bool[n] ) )<br>        {<br>          ++res;<br>        }<br>      }<br>    return res;<br>  }<br><br>  private bool go( int u, bool[] was )<br>  {<br>    if ( was[u] ) return false;<br>    was[u] = true;<br>    for ( int i = 0; i &lt; m; ++i )<br>      if ( c[u, i] &amp;&amp; ( dy[i] == -1 || go( dy[i], was ) ) )<br>      {<br>        dx[u] = i;<br>        dy[i] = u;<br>        return true;<br>      }<br>    return false;<br>  }<br><br>}<br><br><br>static class ArrayUtils<br>{<br>  public static void Fill&lt;T&gt;( T[] a, T value )<br>  {<br>    for ( int i = 0; i &lt; a.Length; ++i ) a[i] = value;<br>  }<br>  }<br><br>// Powered by FileEdit<br>// Powered by moj 4.16 [modified TZTester]<br>// Powered by CleanSharp 1.0<br>// Powered by CodeProcessor<br></td>