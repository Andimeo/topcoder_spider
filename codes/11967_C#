<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Collections;<br>using System.Collections.Generic;<br>public class KingdomAndTrees<br>{<br>    int len;<br>    const int INF = (int)1e9;<br>    int[] h;<br>    public int minLevel(int[] heights)<br>    {<br>        h = heights;<br>        len = heights.Length;<br>        int high = INF + 1000;<br>        int low = 0;<br>        while (high - low &gt; 1)<br>        {<br>            int mid = (high &amp; low) + ((high ^ low) &gt;&gt; 1);<br>            if (C(mid))<br>                high = mid;<br>            else<br>                low = mid;<br>        }//while<br><br>        for (int i = Math.Max(0, low - 3); i &lt; low + 10; i++)<br>        {<br>            if (C(i))<br>                return i;<br>        }//for i<br><br>        return low;<br>    }<br><br>    bool C(int mid)<br>    {<br>        int[] next = new int[len];<br>        next[0] = Math.Max(1, h[0] - mid);<br>        for (int i = 1; i &lt; len; i++)<br>        {<br>            if (h[i] &gt; next[i - 1])<br>            {<br>                next[i] = Math.Max(next[i - 1] + 1, h[i] - mid);<br>            }<br>            else<br>            {<br>                next[i] = Math.Min(next[i - 1] + 1, h[i] + mid);<br>            }<br>            if (next[i - 1] &gt;= next[i])<br>                return false;<br>        }//for i<br>        return true;<br>    }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] Modified for C# by ysn<br>// Powered by CodeProcessor<br></td>