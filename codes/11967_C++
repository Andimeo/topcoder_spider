<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class KingdomAndTrees {<br>public:<br>  int minLevel(vector &lt;int&gt;);<br>};<br> <br>int KingdomAndTrees::minLevel(vector &lt;int&gt; a) {<br>  int ll = 0, rr = 1000000100, mid, n = a.size(), i, ok, p, lg, rg;<br>  while (ll &lt; rr) {<br>    mid = (ll+rr) &gt;&gt; 1;<br>    p = 0; ok = 1;<br>    for (i=0;i&lt;n;i++) {<br>      lg = a[i]-mid;<br>      rg = a[i]+mid;<br>      if (rg &lt;= p) { ok = 0; break; }<br>      if (lg &gt; p) p = lg;<br>      else p++;<br>    }<br>    if (ok) rr = mid;<br>    else ll = mid+1;<br>  }<br>  return ll;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>