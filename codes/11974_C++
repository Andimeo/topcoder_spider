<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cassert&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;ctime&gt;<br>#include &lt;iostream&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br> <br>using namespace std;<br> <br>const int MaxN = 57, NA = -1, MaxC = 0x3F3F3F3F;<br> <br>class FlipGame<br>{<br>private:<br> bool a [MaxN] [MaxN];<br> int m, n;<br> <br>public:<br> int minOperations (vector &lt;string&gt; board)<br> {<br>  int i, j, k, res;<br>  bool ok;<br> <br>  m = board.size ();<br>  n = board[0].size ();<br>  for (i = 0; i &lt; m; i++)<br>   for (j = 0; j &lt; n; j++)<br>    a[i][j] = (board[i][j] == '1');<br> <br>  for (res = 0; ; res++)<br>  {<br>   ok = false;<br>   k = 0;<br>   for (i = 0; i &lt; m; i++)<br>   {<br>    for (j = 0; j &lt; n; j++)<br>     if (a[i][j])<br>     {<br>      ok = true;<br>      k = max (k, j + 1);<br>     }<br>    for (j = 0; j &lt; k; j++)<br>     a[i][j] ^= 1;<br>   }<br>   if (!ok)<br>    break;<br>  }<br> <br>  return res;<br> }<br>};<br> <br> <br>//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!<br></td>