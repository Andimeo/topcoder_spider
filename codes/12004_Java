<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> * @author Egor Kulikov (egor@egork.net)<br> */<br>public class SetAndSet {<br>  int[][][] arrays;<br><br>  public long countandset(int[] A) {<br>    int desired = -1;<br>    for (int i : A)<br>      desired &amp;= i;<br>    for (int i = 0; i &lt; A.length; i++)<br>      A[i] -= desired;<br>    arrays = new int[21][A.length + 1][];<br>    for (int i = 0; i &lt;= 20; i++) {<br>      for (int j = 0; j &lt;= A.length; j++)<br>        arrays[i][j] = new int[j];<br>    }<br>    return go(A, 1 &lt;&lt; 19, 19);<br>  }<br><br>  private long go(int[] a, int mask, int step) {<br>    if (mask == 0)<br>      return (1L &lt;&lt; a.length) - 2;<br>    int countZero = 0;<br>    for (int i : a) {<br>      if ((i &amp; mask) == 0)<br>        countZero++;<br>    }<br>    if (countZero &lt; 2)<br>      return 0;<br>    int index = 0;<br>    int arrayIndex = a.length - countZero + 1;<br>    int last = -1;<br>    for (int i : a) {<br>      if ((i &amp; mask) == 0)<br>        last &amp;= i;<br>      else<br>        arrays[step][arrayIndex][index++] = i - mask;<br>    }<br>    arrays[step][arrayIndex][index] = last;<br>    for (int i = 0; i &lt; a.length; i++)<br>      arrays[step][a.length][i] = a[i] &amp; (mask - 1);<br>    return go(arrays[step][a.length], mask &gt;&gt; 1, step - 1) - go(arrays[step][arrayIndex], mask &gt;&gt; 1, step - 1);<br>  }<br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by moj 4.15 [modified TZTester]<br>// Powered by CodeProcessor<br></td>