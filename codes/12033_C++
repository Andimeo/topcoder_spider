<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cassert&gt;<br>#include &lt;set&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstddef&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;utility&gt;<br>#include &lt;iterator&gt;<br>#include &lt;numeric&gt;<br>#include &lt;list&gt;<br>#include &lt;complex&gt;<br>#include &lt;queue&gt;<br>#include &lt;climits&gt;<br> <br>using namespace std;<br> <br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;string&gt; vs;<br>typedef long long ll;<br>typedef complex&lt;double&gt; pnt;<br>typedef pair&lt;int, int&gt; pii;<br> <br>#define RA(x) (x).begin(), (x).end()<br>#define FE(i, x) for (typeof((x).begin()) i = (x).begin(); i != (x).end(); i++)<br>#define SZ(x) ((int) (x).size())<br> <br> <br>class RotatingBot<br>{<br>public:<br>    int minArea(vector &lt;int&gt; moves);<br>};<br> <br>int RotatingBot::minArea(vector &lt;int&gt; moves)<br>{<br>    int minx = 0;<br>    int maxx = 0;<br>    int miny = 0;<br>    int maxy = 0;<br>    int N = SZ(moves);<br> <br>    int dx = 1;<br>    int dy = 0;<br>    int x = 0;<br>    int y = 0;<br>    for (int i = 0; i &lt; N; i++)<br>    {<br>        int M = moves[i];<br>        x += M * dx;<br>        y += M * dy;<br>        minx = min(minx, x);<br>        maxx = max(maxx, x);<br>        miny = min(miny, y);<br>        maxy = max(maxy, y);<br>        int t = dy;<br>        dy = dx;<br>        dx = -t;<br>    }<br> <br>    if (maxx - minx &gt; 100 || maxy - miny &gt; 100)<br>        return -1;<br> <br>    x = -minx;<br>    y = -miny;<br>    dx = 1;<br>    dy = 0;<br>    maxx -= minx;<br>    maxy -= miny;<br>    int SX = maxx + 1;<br>    int SY = maxy + 1;<br>    vector&lt;vector&lt;bool&gt; &gt; done(SX, vector&lt;bool&gt;(SY, false));<br>    done[x][y] = true;<br> <br>    for (int i = 0; i &lt; N; i++)<br>    {<br>        int M = moves[i];<br>        for (int j = 0; j &lt; M; j++)<br>        {<br>            x += dx;<br>            y += dy;<br>            if (x &gt; maxx || x &lt; 0 || y &gt; maxy || y &lt; 0)<br>                return -1;<br>            if (done[x][y])<br>                return -1;<br>            done[x][y] = true;<br>        }<br>        if (i != N - 1)<br>        {<br>            int tx = x + dx;<br>            int ty = y + dy;<br>            if (tx &gt;= 0 &amp;&amp; tx &lt;= maxx &amp;&amp; ty &gt;= 0 &amp;&amp; ty &lt;= maxy &amp;&amp; !done[tx][ty])<br>                return -1;<br>        }<br>        int t = dy;<br>        dy = dx;<br>        dx = -t;<br>    }<br>    return SX * SY;<br>}<br> <br> <br>// Powered by FileEdit<br></td>