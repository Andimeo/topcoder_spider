<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br> <br>public class FavouriteDigits<br>{<br>  public long findNext(long n, int d1, int c1, int d2, int c2)<br>  {<br>    for(int i=0; i&lt;=15; i++)<br>    {<br>      long t = n;<br>      for(int j=0; j&lt;i; j++)<br>        t /= 10;<br>      int z = (int)(t % 10);<br>      int st = z + 1;<br>      if(i == 0)<br>        st = z;<br>      for(int j=st; j&lt;10; j++)<br>      {<br>        t = t / 10 * 10 + j;<br>        long v = f(t, i, d1, c1, d2, c2);<br>        if(v != -1)<br>          return v;<br>      }<br>    }<br>    return n;<br>  }<br>  <br>  long f(long t, int len, int d1, int c1, int d2, int c2)<br>  {<br>    if(d1 &gt; d2)<br>      return f(t, len, d2, c2, d1, c1);<br>    long p = t;<br>    while(p &gt; 0)<br>    {<br>      int z = (int)(p % 10);<br>      if(z == d1)<br>        c1 --;<br>      if(z == d2)<br>        c2 --;<br>      p /= 10;<br>    }<br>    c1 = Math.Max(0, c1);<br>    c2 = Math.Max(0, c2);    <br>    if(c1 + c2 &gt; len)<br>      return -1;<br>    long r = t;<br>    for(int i=0; i&lt;len; i++)<br>    {<br>      r = r * 10;<br>      if(i &gt;= len - c2)<br>      {<br>        r += d2;<br>      }<br>      else if(i &gt;= len - c1 - c2)<br>      {<br>        r += d1;<br>      }<br>    }<br>    return r;<br>  }<br> <br> <br>}<br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>