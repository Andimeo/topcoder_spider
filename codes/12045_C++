<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cassert&gt;<br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>typedef long long ll;<br> <br>class FavouriteDigits {<br>public:<br>  long long findNext(long long, int, int, int, int);<br>};<br> <br>int good( ll N, ll x, int k, int d1, int c1, int d2, int c2 )<br>{<br>  c1 = max(c1, 0);<br>  c2 = max(c2, 0);<br>  if (k &lt; c1 + c2)<br>    return 0;<br>  int d3 = 9, c3 = k - (c1 + c2);<br>  while (c3--) x = x * 10 + d3;<br>  while (c2--) x = x * 10 + d2;<br>  while (c1--) x = x * 10 + d1;<br>  return N &lt;= x;<br>}<br> <br>long long FavouriteDigits::findNext(long long N, int d1, int c1, int d2, int c2)<br>{<br>  if (d1 &gt; d2)<br>    swap(d1, d2), swap(c1, c2);<br> <br>  ll x = 0;<br>  int k = 18;<br>  while (k &gt; 0)<br>  {<br>    int t = 0;<br>    //printf("x = %I64d, k = %d\n", x, k);<br>    while (!good(N, x * 10 + t, k - 1, d1, c1 - (t == d1 &amp;&amp; (x || d1)), d2, c2 - (t == d2 &amp;&amp; (x || d2))))<br>      t++;<br>    c1 -= (t == d1 &amp;&amp; (x || d1));<br>    c2 -= (t == d2 &amp;&amp; (x || d2));<br>    x = x * 10 + t;<br>    k--;<br>  }<br>  return x;<br>}<br></td>