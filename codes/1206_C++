<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;sstream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>using namespace std;<br>typedef long long ll;<br>typedef vector&lt;int&gt; vi; typedef vector&lt;vi&gt; vvi;<br>typedef vector&lt;string&gt; vs; typedef vector&lt;vs&gt; vvs;<br>typedef istringstream iss; typedef ostringstream oss;<br>#define pq priority_queue<br>#define let(a,b) typeof(b) a(b)<br>#define all(a) a.begin(),a.end()<br>#define forall(a,b) for (let(a,b.begin());a!=b.end();a++)<br>#define forrall(a,b) for (let(a,b.rbegin());a!=b.rend();a++)<br>#define contain(a,b) (find(all(a),b)!=a.end())<br><br>class Flags{<br>public:<br>long long numStripes(string numFlags, vector &lt;string&gt; forbidden)<br>{<br>long long ans;<br>ll numf=atoll(numFlags.c_str());<br>int data[20][20],n=forbidden.size();<br>memset(data,0,sizeof(data));<br>for (int i=0;i&lt;forbidden.size();i++)<br>{<br>    iss sin(forbidden[i]);<br>    int t;<br>    while (sin&gt;&gt;t)<br>        data[i][t]=data[t][i]=1;<br>}<br>ll save[2010][20],total[2010];<br>total[1]=0;<br>for (int i=0;i&lt;n;i++)<br>{<br>    save[1][i]=1;<br>    total[1]+=save[1][i];<br>}<br>numf-=total[1];<br>if (numf&lt;=0) return 1;<br>for (int i=2;i&lt;=2000;i++)<br>{<br>    total[i]=0;<br>    for (int j=0;j&lt;n;j++)<br>    {<br>        save[i][j]=0;<br>        for (int k=0;k&lt;n;k++)<br>            if (!data[k][j]) save[i][j]+=save[i-1][k];<br>        total[i]+=save[i][j];<br>    }<br>    numf-=total[i];<br>    if (numf&lt;=0) return i;<br>}<br>return 2000+(numf+total[2000]-1)/total[2000];<br>}<br>};<br><br><br><br>// Powered by FileEdit<br></td>