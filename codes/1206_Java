<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class Flags {<br>  public long numStripes(String numFlags, String[] forbidden) {<br>    boolean canuse[][] = new boolean[forbidden.length][forbidden.length];<br>    for (int i=0; i&lt;canuse.length; i++) Arrays.fill(canuse[i], true);<br>    <br>    for (int i=0; i&lt;canuse.length; i++) {<br>      StringTokenizer tok = new StringTokenizer(forbidden[i]);<br>      for ( ; tok.hasMoreTokens(); ) {<br>        try {<br>          int x = Integer.parseInt(tok.nextToken());<br>          canuse[i][x] = false;<br>        } catch(Exception e) {}<br>      }<br>    }<br>    long flags[] = new long[forbidden.length];<br>    <br>    Arrays.fill(flags, 1);<br>    <br>    long total = flags.length;<br>    long stripes = 1;<br>    long goal = 0;<br>    try {goal = Long.parseLong(numFlags); }catch(Exception e){}<br>    <br>    long diff = 0;<br>    long diff2 = 0;<br>    for ( ; total &lt; goal; ) {<br>      //System.out.println(""+total+"/"+goal);<br>      stripes++;<br>      long newflags[] = new long[flags.length];<br>      long subtot = 0;<br>      for (int i=0; i&lt;flags.length; i++) {<br>        long count = 0;<br>        for (int k=0; k&lt;flags.length; k++) {<br>          if (canuse[i][k]) {<br>            count += flags[k];<br>          }<br>        }<br>        newflags[i] = count;<br>        subtot += count;<br>      }<br>      total += subtot;<br>      flags = newflags;<br>      <br>      if (subtot == diff &amp;&amp; diff2 == diff) {<br>        long morestripes = ((goal-total)+(subtot-1))/subtot;<br>        return stripes+morestripes;<br>      }<br>      diff2 = diff;<br>      diff = subtot;<br>    }<br>        <br>    return stripes;<br>  }<br>}<br> <br>// Powered by PopsEdit<br></td>