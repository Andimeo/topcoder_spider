<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class PillarsDivTwo<br>{<br><br>    private static int ABS(int value)<br>    {<br>        if (value &lt; 0) { return -value; }<br>        return value;<br>    }<br><br>    private static double SQR(double value)<br>    {<br>        return value * value;<br>    }<br><br>    public static double maximalLength(int[] height, int w)<br>    {<br>        int[, ,] Diffs = new int[height.Length, 2, 2];<br>        for (int i = 1; i &lt; height.Length; i++)<br>        {<br>            Diffs[i, 0, 0] = 0;<br>            Diffs[i, 1, 0] = height[i - 1] - 1;<br>            Diffs[i, 1, 1] = ABS(height[i - 1] - height[i]);<br>            Diffs[i, 0, 1] = height[i] - 1;<br>        }<br><br>        double[,] Lengths = new double[height.Length, 2];<br>        double Temp1;<br>        double Temp2;<br>        double SW = SQR(w);<br><br>        for (int i = 1; i &lt; height.Length; i++)<br>        {<br>            Temp1 = Lengths[i - 1, 0] + Math.Sqrt(SQR(Diffs[i, 0, 1]) + SW);<br>            Temp2 = Lengths[i - 1, 1] + Math.Sqrt(SQR(Diffs[i, 1, 1]) + SW);<br>            if (Temp1 &gt; Temp2)<br>            {<br>                Lengths[i, 1] = Temp1;<br>            }<br>            else<br>            {<br>                Lengths[i, 1] = Temp2;<br>            }<br><br>            Temp1 = Lengths[i - 1, 0] + Math.Sqrt(SQR(Diffs[i, 0, 0]) + SW);<br>            Temp2 = Lengths[i - 1, 1] + Math.Sqrt(SQR(Diffs[i, 1, 0]) + SW);<br>            if (Temp1 &gt; Temp2)<br>            {<br>                Lengths[i, 0] = Temp1;<br>            }<br>            else<br>            {<br>                Lengths[i, 0] = Temp2;<br>            }<br>        }<br><br>        return Lengths[height.Length - 1, 0] &gt; Lengths[height.Length - 1, 1] ? Lengths[height.Length - 1, 0] : Lengths[height.Length - 1, 1];<br>    }<br><br>}<br></td>