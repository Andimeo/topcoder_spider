<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#define FOR(i,a)  for(int i = 0;i&lt;a;i++)<br>#define REP(i,a,b)  for(int i = a;i&lt;b;i++)<br> <br>using namespace std;<br> <br>class PillarsDivTwo {<br>public:<br>  double maximalLength(vector &lt;int&gt;, int);<br>};<br> <br>double PillarsDivTwo::maximalLength(vector &lt;int&gt; h, int w) {<br>  double ansarray[51][101] = {{0}};<br>  double maxanswer = 0;<br>  REP(i,1,h.size())<br>  {<br>    REP(j,1,h[i-1]+1)<br>    {<br>      REP(k,1,h[i]+1)<br>      {<br>          ansarray[i][k] = max(ansarray[i][k],ansarray[i-1][j] + sqrt(w*w + (j-k)*(j-k)));<br>          maxanswer = max(maxanswer,ansarray[i][k]);<br>      }<br>    }<br>  }<br>  return maxanswer;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>