<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> * @author sheep<br> */<br>public class XorCards {<br>    public long numberOfWays(long[] number, long limit) {<br>        long answer = 0;<br>        for (int bit = 50; bit &gt;= 0; --bit) {<br>            if ((limit &gt;&gt; (long)bit) % 2 == 1) {<br>                int[][] equ = new int[50 - bit + 1][number.length + 1];<br>                for (long i = 50; i &gt;= bit; --i) {<br>                    int result = (int)((limit &gt;&gt; i) % 2);<br>                    if (i == bit) result = 0;<br>                    for (int j = 0; j &lt; number.length; ++j) {<br>                        if ((number[j] &gt;&gt; i) % 2 == 1) {<br>                            equ[50 - (int)i][j] = 1;<br>                        }<br>                    }<br>                    equ[50 - (int)i][number.length] = result;<br>                }<br>                long res = gauss(equ, number.length, equ.length);<br>                if (res != -1) answer += 1L &lt;&lt; res;<br>            }<br>        }<br>        int[][] equ = new int[51][number.length + 1];<br>        for (long i = 50; i &gt;= 0; --i) {<br>            int result = (int)((limit &gt;&gt; i) % 2);<br>            for (int j = 0; j &lt; number.length; ++j) {<br>                if ((number[j] &gt;&gt; i) % 2 == 1) {<br>                    equ[50 - (int)i][j] = 1;<br>                }<br>            }<br>            equ[50 - (int)i][number.length] = result;<br>        }<br>        long res = gauss(equ, number.length, equ.length);<br>        if (res != -1) answer += 1L &lt;&lt; res;<br> <br>        return answer;<br>    }<br> <br>    long gauss(int a[][],int var,int equ)<br>    {<br>        int r, c; // [\u35120][\u65533][\u65533][\u28598][\u65533][\u65533][\u65533][\u65533][\u65533].<br>        for (r = 0,c = 0;r&lt;equ &amp;&amp; c&lt;var;r++, c++)<br>        {<br>            if (a[r][c] == 0)<br>            {<br>                for (int i=r+1;i&lt;equ;i++)<br>                    if (a[i][c] != 0)<br>                    {<br>                        for (int j=r;j&lt;var+1;j++) {<br>                            int temp = a[i][j];<br>                            a[i][j] = a[r][j];<br>                            a[r][j] = temp;<br>//                            swap(a[r][j],a[i][j]);<br> <br>                        }<br>                        break;<br>                    }<br>            }<br>            if (a[r][c] == 0)<br>            {<br>                r--; continue;<br>            }<br>            for (int i=r+1;i&lt;equ;i++)<br>                if (a[i][c] != 0)<br>                {<br>                    for (int j=c;j&lt;var+1;j++)<br>                        a[i][j] = a[i][j]^a[r][j];<br>                }<br>        }<br>        for (int i=r;i&lt;equ;i++)<br>            if (a[i][var] != 0)<br>                return -1;<br> <br>        return var - r;<br>    }<br> <br>}<br></td>