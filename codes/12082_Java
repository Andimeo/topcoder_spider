<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class ChromaticNumber {<br>    boolean[][] a;<br>    boolean[] u;<br>    <br>    int dfs(int x) {<br>        u[x] = true;<br>        int r = 1;<br>        for (int y = 0; y &lt; a[x].length; y++) {<br>            if (a[x][y] &amp;&amp; !u[y]) {<br>                r += dfs(y);<br>            }<br>        }<br>        return r;<br>    }<br> <br>    public int minColors(String[] graph) {<br>        int n = graph.length;<br>        a = new boolean[n][n];<br>        for (int i = 0; i &lt; n; i++) {<br>            for (int j = 0; j &lt; n; j++) {<br>                a[i][j] = graph[i].charAt(j) == 'N';<br>            }<br>        }<br> <br>        u = new boolean[n];<br>        int res = 0;<br>        for (int i = 0; i &lt; n; i++) {<br>            if (!u[i]) {<br>                int t = dfs(i);<br>                res += (t + 1) / 2;<br>            }<br>        }<br>        <br>        for (int i = 0; i &lt; n; i++) {<br>            for (int j = i + 1; j &lt; n; j++) {<br>                for (int k = j + 1; k &lt; n; k++) {<br>                    if (a[i][j] &amp;&amp; a[j][k] &amp;&amp; a[i][k]) {<br>                        res--;<br>                    }<br>                }<br>            }<br>        }<br>        <br>        return res;<br>    }<br> <br>}<br> <br> <br>// Powered by PopsEdit<br> <br>// Powered by CodeProcessor<br></td>