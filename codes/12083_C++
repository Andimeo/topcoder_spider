<td class="problemText" colspan="8" valign="middle" align="left">
            //  TCO 2012 Round 3A (C)<br><br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cassert&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;utility&gt;<br>#include &lt;numeric&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;bitset&gt;<br>#include &lt;complex&gt;<br><br>using namespace std;<br><br>typedef unsigned uint;<br>typedef long long Int;<br>typedef vector&lt;int&gt; vint;<br>typedef pair&lt;int,int&gt; pint;<br>#define mp make_pair<br><br>template&lt;class T&gt; void pv(T a, T b) { for (T i = a; i != b; ++i) cout &lt;&lt; *i &lt;&lt; " "; cout &lt;&lt; endl; }<br>template&lt;class T&gt; void chmin(T &amp;t, T f) { if (t &gt; f) t = f; }<br>template&lt;class T&gt; void chmax(T &amp;t, T f) { if (t &lt; f) t = f; }<br><br>const int MO = 10007;<br>const int M = 32 * 27 * 25 * 49;<br>int PS[] = { 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, -1, };<br><br>int used[110];<br>int is[1100010];<br>int cs[110][110], ds[110][110];<br>int js[1010];<br><br>struct CowsMooing {<br>  <br>  vector &lt;int&gt; getDistribution(vector &lt;string&gt; patterns) {<br>    int N = patterns.size();<br>    int h, i, j, x;<br>    int m, p;<br>    <br>    for (i = 0; i &lt; N; ++i) {<br>      m = patterns[i].size();<br>      if (M % m == 0) {<br>++used[i];<br>        j = 0;<br>        for (x = 0; x &lt; M; ++x) {<br>          if (patterns[i][j] == 'M') ++is[x];<br>          if (++j == m) j = 0;<br>        }<br>      }<br>    }<br>    for (x = 0; x &lt; M; ++x) {<br>      ++cs[is[x]][x % 12];<br>    }<br>    for (i = 0; i &lt;= N; ++i) for (x = 0; x &lt; 12; ++x) {<br>      cs[i][x] %= MO;<br>    }<br>    <br>    for (h = 0; PS[h] != -1; ++h) {<br>      p = PS[h];<br>      memset(js, 0, sizeof(js));<br>      for (i = 0; i &lt; N; ++i) {<br>        m = patterns[i].size();<br>        if (m % p == 0) {<br>++used[i];<br>          j = 0;<br>          for (x = 0; x &lt; p * 12; ++x) {<br>            if (patterns[i][j] == 'M') ++js[x];<br>            if (++j == m) j = 0;<br>          }<br>        }<br>      }<br>      memset(ds, 0, sizeof(ds));<br>      for (i = 0; i &lt;= N; ++i) for (x = 0; x &lt; p * 12; ++x) {<br>        ds[i + js[x]][x % 12] += cs[i][x % 12];<br>      }<br>      for (i = 0; i &lt;= N; ++i) for (x = 0; x &lt; 12; ++x) {<br>        ds[i][x] %= MO;<br>      }<br>      memcpy(cs, ds, sizeof(cs));<br>    }<br>cout&lt;&lt;"used : ";pv(used,used+N);<br>    <br>    vint ans(N + 1, 0);<br>    for (i = 0; i &lt;= N; ++i) for (x = 0; x &lt; 12; ++x) {<br>      ans[i] += cs[i][x];<br>    }<br>    for (i = 0; i &lt;= N; ++i) {<br>      ans[i] %= MO;<br>    }<br>    <br>    int mul = 1;<br>    for (i = 1; i &lt;= 50; ++i) {<br>      if (i == 32 || i == 27 || i == 25 || i == 49) continue;<br>      for (h = 0; PS[h] != -1; ++h) if (PS[h] == i) break;<br>      if (PS[h] == i) continue;<br>// cout&lt;&lt;"mul *= "&lt;&lt;i&lt;&lt;endl;<br>      mul *= i;<br>      mul %= MO;<br>    }<br>    <br>    for (i = 0; i &lt;= N; ++i) {<br>      (ans[i] *= mul) %= MO;<br>    }<br>    <br>    return ans;<br>    <br>    <br>  }<br>  <br>};<br></td>