<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cassert&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;sstream&gt;<br>#include &lt;complex&gt;<br>#include &lt;map&gt;<br>#include &lt;iostream&gt;<br><br>using namespace std;<br><br>typedef long long LL;<br>typedef long double LD;<br><br>#define MP make_pair<br>#define PB push_back<br><br>#define VAR(i,x) __typeof(x) i = (x)<br>#define FORE(i,x) for(VAR(i,(x).begin());i != (x).end(); ++i)<br>#define ZERO(x) memset(x, 0, sizeof(x))<br><br>typedef pair&lt;int, int&gt; PII;<br><br>#define ST first<br>#define ND second<br><br>const int INF = (int) 1e9;<br><br>int e;<br>int n;<br><br>char flip(char c) {<br>    return (c == '0') ? '1' : '0';<br>}<br><br>bool vis[1 &lt;&lt; 8];<br><br>int dfs(int s, int moves = 0) {<br>    if (moves &gt; 3) {<br>        return INF;<br>    }<br>    if (s == e) {<br>        return moves;<br>    }<br>    if (vis[s]) {<br>        return INF;<br>    }<br>    vis[s] = true;<br>    int result = INF;<br>    for (int i = 0; i &lt; n; ++i) {<br>        int c = s;<br>        for (int j = i + 1; j &lt;= n; ++j) {<br>            c ^= (1 &lt;&lt; (j - 1));<br>            if (c == e) {<br>                result = min(result, moves + 1);<br>                continue;<br>            }<br>            int cr = dfs(c, moves + 1);<br>            for (int k = 0; k &lt; n; ++k) {<br>                cr = max(cr, dfs(c ^ (1 &lt;&lt; k), moves + 1));<br>            }<br>            result = min(result, cr);<br>        }<br>    }<br>    vis[s] = false;<br>    return result;<br>}<br><br>class XorGame {<br>  public:<br>  int play(string S, string E) {<br>        if (S == E) {<br>            return 0;<br>        }<br>        n = S.size();<br>        for (int i = 0; i &lt; n; ++i) {<br>            string c = S;<br>            for (int j = i + 1; j &lt;= n; ++j) {<br>                c[j - 1] = flip(c[j - 1]);<br>                if (c == E) {<br>                    return 1;<br>                }<br>            }<br>        }<br>        if (n &gt; 4) {<br>            return -1;<br>        }<br>        e = 0;<br>        for (int i = 0; i &lt; n; ++i) {<br>            if (E[i] == '1') {<br>                e |= (1 &lt;&lt; i);<br>            }<br>        }<br>        int s = 0;<br>        for (int i = 0; i &lt; n; ++i) {<br>            if (S[i] == '1') {<br>                s |= (1 &lt;&lt; i);<br>            }<br>        }<br>        int res = dfs(s, 0);<br>        if (res &gt;= INF) {<br>            res = -1;<br>        }<br>        return res;<br>  }<br>};<br><br><br>// Powered by FileEdit<br></td>