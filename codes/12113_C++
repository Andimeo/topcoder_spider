<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt; <br>#include &lt;list&gt; <br>#include &lt;map&gt; <br>#include &lt;set&gt; <br>#include &lt;deque&gt; <br>#include &lt;vector&gt; <br>#include &lt;list&gt; <br>#include &lt;map&gt; <br>#include &lt;set&gt; <br>#include &lt;deque&gt; <br>#include &lt;queue&gt; <br>#include &lt;stack&gt; <br>#include &lt;bitset&gt; <br>#include &lt;algorithm&gt; <br>#include &lt;functional&gt; <br>#include &lt;numeric&gt; <br>#include &lt;utility&gt; <br>#include &lt;sstream&gt; <br>#include &lt;iostream&gt; <br>#include &lt;iomanip&gt; <br>#include &lt;cstdio&gt; <br>#include &lt;cmath&gt; <br>#include &lt;cstdlib&gt; <br>#include &lt;cctype&gt; <br>#include &lt;string&gt; <br>#include &lt;cstring&gt; <br>#include &lt;ctime&gt; <br> <br>using namespace std;<br> <br>#define _int64 long long<br>#define mo 1000000007<br> <br>int d1[2600][2600];<br>int d2[2600][2600];<br> <br>    class LittleElephantAndRGB<br>        { <br>        public: <br>        long long getNumber(vector &lt;string&gt; list, int minGreen) <br>            { <br>              int i,j,n,last,cons,b1,max;<br>              _int64 ans;<br>              string s;<br>              s="";<br>              for (i=0;i&lt;list.size();i++)<br>                s=s+list[i];<br>              n=s.length();<br>              memset(d1,0,sizeof(d1));<br>              memset(d2,0,sizeof(d2));<br>              for (i=0;i&lt;n;i++)<br>              {<br>                last=0;cons=0;b1=1;max=0;<br>                for (j=i;j&gt;=0;j--)<br>                {<br>                  if (s[j]=='G')<br>                  {<br>                    cons++;<br>                    if (cons&gt;max) max=cons;<br>                    if (b1==1)<br>                      last++;<br>                  }<br>                  else<br>                  {<br>                    b1=0;<br>                    cons=0;<br>                  }<br>                  if (max&gt;=minGreen)<br>                    d1[i][minGreen+1]++;<br>                  else d1[i][last]++;<br>                }<br>                last=0;cons=0;b1=1;max=0;<br>                for (j=i;j&lt;n;j++)<br>                {<br>                  if (s[j]=='G')<br>                  {<br>                    cons++;<br>                    if (cons&gt;max) max=cons;<br>                    if (b1==1)<br>                      last++;<br>                  }<br>                  else<br>                  {<br>                    b1=0;<br>                    cons=0;<br>                  }<br>                  if (max&gt;=minGreen)<br>                    d2[i][minGreen+1]++;<br>                  else d2[i][last]++;<br>                }<br>                <br>              }<br>              for (i=n-2;i&gt;=0;i--)<br>              {<br>                for (j=0;j&lt;=minGreen+1;j++)<br>                  d2[i][j]+=d2[i+1][j];<br>              }<br>              for (i=0;i&lt;n;i++)<br>              {<br>                for (j=minGreen;j&gt;=0;j--)<br>                  d2[i][j]+=d2[i][j+1];<br>              }<br>              ans=0;<br>              for (i=0;i&lt;n-1;i++)<br>              {<br>                for (j=0;j&lt;=minGreen;j++)<br>                  ans+=(_int64)d1[i][j]*d2[i+1][minGreen-j];<br>                ans+=(_int64)d1[i][minGreen+1]*d2[i+1][0];<br>              }<br>              return ans;<br>            } <br>        <br> <br>        }; <br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>