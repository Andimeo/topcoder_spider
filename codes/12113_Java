<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> */<br>public class LittleElephantAndRGB {<br>    public long getNumber(String[] list, int minGreen) {<br>        StringBuilder builder = new StringBuilder();<br>        for (String x : list) builder.append(x);<br>        String s = builder.toString();<br>        int n = s.length();<br>        int[][] cntLeft = buildCounts(minGreen, s, n);<br>        StringBuilder rev = new StringBuilder();<br>        rev.append(s);<br>        rev.reverse();<br>        int[][] cntRight = buildCounts(minGreen, rev.toString(), n);<br>        long res = 0;<br>        long[] ways = new long[minGreen + 1];<br>        for (int i = 1; i &lt;= n - 1; ++i) {<br>            long cs = 0;<br>            for (int ng = 0; ng &lt;= minGreen; ++ng) {<br>                ways[ng] += cntLeft[i][ng];<br>                cs += cntRight[n - i][minGreen - ng];<br>                res += cs * ways[ng];<br>            }<br>        }<br>        return res;<br>    }<br> <br>    private int[][] buildCounts(int minGreen, String s, int n) {<br>        int[][] cntLeft = new int[n + 1][minGreen + 1];<br>        int lastNumGreen = 0;<br>        int lastFullAt = -1;<br>        for (int i = 0; i &lt; s.length(); ++i) {<br>            if (s.charAt(i) == 'G') ++lastNumGreen; else lastNumGreen = 0;<br>            if (lastNumGreen &gt; minGreen) lastNumGreen = minGreen;<br>            if (lastNumGreen == minGreen) {<br>                lastFullAt = i - minGreen + 1;<br>            }<br>            for (int j = 1; j &lt;= i + 1; ++j) {<br>                int cnt = Math.min(j, lastNumGreen);<br>                if (i + 1 - j &lt;= lastFullAt)<br>                    cnt = minGreen;<br>                ++cntLeft[i + 1][cnt];<br>            }<br>        }<br>        return cntLeft;<br>    }<br>}<br></td>