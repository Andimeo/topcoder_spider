<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br> <br>class ColorfulChocolates {<br>public:<br>  int maximumSpread(string x, int swp){<br>    int ans = 0;<br>  <br>    for(int i = 0; i &lt; x.size(); ++i){<br>      int part = 1;<br>    vector&lt;int&gt; cols;<br>    int left = 0, right = 0;<br>    for(int j = i - 1; j &gt;= 0; --j)<br>      if(x[j] == x[i])<br>        cols.push_back(left);<br>      else<br>        ++left;<br>    for(int j = i + 1; j &lt; x.size(); ++j)<br>        if(x[j] == x[i])<br>          cols.push_back(right);<br>        else<br>          ++right;<br>    <br>    sort(cols.begin(), cols.end());<br>    int sum = 0;<br>    for(int j = 0; j &lt; cols.size(); ++j){<br>      if(sum + cols[j] &gt; swp)<br>          break;<br>      sum+= cols[j];<br>      ++part;<br>    }<br>    ans = max(ans, part);<br>  }<br>  <br>  return ans;<br>  }<br>};<br> <br> <br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>