<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;  <br>#include &lt;string&gt;  <br>#include &lt;set&gt;  <br>#include &lt;map&gt;  <br>#include &lt;vector&gt;  <br>#include &lt;queue&gt;   <br>#include &lt;iostream&gt;  <br>#include &lt;iterator&gt;  <br>#include &lt;math.h&gt;  <br>#include &lt;cstdio&gt;  <br>#include &lt;cstdlib&gt;  <br>#include &lt;sstream&gt;  <br><br>#pragma comment(linker, "/STACK:60777216")  <br><br>using namespace std;  <br><br>typedef pair&lt;int,int&gt; pii;  <br>typedef long long ll;  <br>typedef vector&lt;int&gt; vi;  <br><br>#define UN(v) SORT(v),v.erase(unique(v.begin(),v.end()),v.end())  <br>#define SORT(c) sort((c).begin(),(c).end())  <br>#define FOR(i,a,b) for (int  i=(a); i &lt; (b); i++)   <br>#define REP(i,n) FOR(i,0,n)   <br>#define CL(a,b) memset(a,b,sizeof(a))  <br>#define pb push_back  <br><br>const double eps = 1e-3;<br>const double SM_INF = 1e6;<br>typedef vector&lt;double&gt; vd;<br><br>struct SimplexM{<br>  int startN, N;<br>  vd old_c,c,b,res;<br>  vector&lt;vd&gt; system;<br>  double value;<br>  SimplexM(vd c):N(c.size()),c(c){ } <br>  void add(vd r,double v,int sgn=0){ <br>    for(;c.size()&lt;r.size();c.pb(0));<br>    for(;r.size()&lt;c.size();r.pb(0));<br>    if(sgn)r.pb(-sgn),c.pb(0);<br>    system.pb(r),b.pb(v);<br>  }<br>  void refresh_c_func(int pos,int row){<br>    double begin=c[pos];<br>    REP(i,N) c[i]-=begin*system[row][i];<br>  }<br>  void gauss(int row,int col){<br>    double v=system[row][col];<br>    REP(i,N) system[row][i]/=v;<br>    b[row]/=v;<br>    REP(i,system.size()) if(i!=row){<br>      v=system[i][col];<br>      REP(j,N) system[i][j]-=v*system[row][j];<br>      b[i]-=v*b[row];<br>    }<br>  }<br>  int solve(){<br>    N=c.size(),old_c=c;<br>    int m=system.size();<br>    REP(i,m)system[i].resize(N);<br>    startN=N;<br>    vi base(m,-1);<br>    REP(i,N){<br>      int nm=0,pos=-1;<br>      REP(j,m) if(fabs(system[j][i])&gt;eps) nm++,pos=j;<br>      if(nm==1 &amp;&amp; fabs(system[pos][i]-1)&lt;eps &amp;&amp; base[pos]==-1)<br>      base[pos]=i;<br>    }<br>    REP(i,m) if(base[i]==-1){<br>      N++;<br>      c.pb(SM_INF);<br>      REP(j,m) system[j].pb(j==i?1:0);<br>      base[i]=N-1;<br>    }<br>    REP(i,m) refresh_c_func(base[i],i);<br>    while(1){<br>      int pos=-1,row=-1;<br>      REP(i,N) if(c[i]&lt;-eps &amp;&amp; (pos==-1 || c[i]&lt;c[pos])) pos=i;<br>      if(pos==-1) break;<br>      double min_teta=0;<br>      REP(i,m)<br>      if(system[i][pos]&gt;eps &amp;&amp; (row==-1 || min_teta&gt;b[i]/system[i][pos]))<br>        row=i,min_teta=b[i]/system[i][pos];<br>      if(row==-1) return -1;<br>      base[row]=pos;<br>      gauss(row,pos);<br>      refresh_c_func(pos,row);<br>    }<br>    REP(i,m) if(base[i]&gt;=startN &amp;&amp; fabs(b[i])&gt;eps) return -2;<br>    res.resize(startN,0);<br>    REP(i,m) if(base[i]&lt;startN) res[base[i]]=b[i];<br>    value=0;<br>    REP(i,startN) value+=res[i]*old_c[i];<br>    return 1;<br>  }<br>};<br><br>class YamanoteLine {<br>public:<br> long long howMany(int n, vector &lt;int&gt; s1, vector &lt;int&gt; t1, vector &lt;int&gt; l1, vector &lt;int&gt; s2, vector &lt;int&gt; t2, vector &lt;int&gt; l2) {<br>   while(s1.size() &amp;&amp; s1.back()==-1) s1.pop_back(),t1.pop_back(),l1.pop_back();<br>   ll v1 = 0;<br>   ll v2 = 0;<br>   const ll inf = 1e17;<br>   REP(tc,2){<br>     SimplexM x(vd(n,(tc?-1:1)));<br>     REP(i,n){<br>       vd t(n);<br>       t[i] = 1;<br>       x.add(t, 1, 1);<br>     }<br>     REP(i,s1.size()){<br>       vd t(n);<br>       int curr = s1[i];<br>       while(curr!=t1[i]){<br>        t[curr]=1;<br>        curr=(curr+1)%n;<br>       }<br>       x.add(t, l1[i], 1);<br>     }<br>     REP(i,s2.size()){<br>       vd t(n);<br>       int curr = s2[i];<br>       while(curr!=t2[i]){<br>        t[curr]=1;<br>        curr=(curr+1)%n;<br>       }<br>       x.add(t, l2[i], -1);<br>     }<br>     int tt = x.solve();<br>     if(tt==-2) return 0;<br>     //cout&lt;&lt;tt&lt;&lt;' '&lt;&lt;x.value&lt;&lt;endl;<br>     //if(tt==1) REP(i,n) cout&lt;&lt;x.res[i]&lt;&lt;' ';puts("");<br>     if(tc==0){<br>       if(tt==-1) v1 = -inf;<br>       else v1 = ceil(x.value)+1e-5;<br>     }else{<br>       if(tt==-1) v2 = inf;<br>       else v2 = (-x.value)+1e-5;<br>     }<br>   }<br>   if(v2==inf || v1==-inf) return -1;<br>   return v2-v1+1;<br> }<br> <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>