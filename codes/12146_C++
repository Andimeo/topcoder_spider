<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;vector&gt;<br>#include&lt;cmath&gt;<br>#include&lt;map&gt;<br>#include&lt;cstdlib&gt;<br>#include&lt;iostream&gt;<br>#include&lt;sstream&gt;<br>#include&lt;string&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;cstring&gt;<br>#include&lt;cstdio&gt;<br>#include&lt;set&gt;<br>#include&lt;stack&gt;<br>#include&lt;bitset&gt;<br>#include&lt;functional&gt;<br>#include&lt;cstdlib&gt;<br>#include&lt;ctime&gt;<br>#include&lt;queue&gt;<br>#include&lt;deque&gt;<br>#include&lt;complex&gt;<br>using namespace std;<br>#define pb push_back<br>#define pf push_front<br>typedef long long lint;<br>typedef complex&lt;double&gt; P;<br>#define mp make_pair<br>#define fi first<br>#define se second<br>typedef pair&lt;int,int&gt; pint;<br>#define All(s) s.begin(),s.end()<br>#define rAll(s) s.rbegin(),s.rend()<br>#define REP(i,a,b) for(i=a;i&lt;b;i++)<br>#define rep(i,n) REP(i,0,n)<br>class FoxPaintingBalls{<br>  public:<br>  long long FoxPaintingBalls::theMax(long long r,long long g,long long b,int N){<br>    lint n=N;n=n*(n+1)/2;<br>    if(n==1) return r+g+b;<br>    if(n%3==0) return min(r/(n/3),min(g/(n/3),b/(n/3)));<br>    return min((r+g+b)/n,min(r/(n/3),min(g/(n/3),b/(n/3))));<br>  }<br>};<br></td>