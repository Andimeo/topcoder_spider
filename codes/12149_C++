<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;ctime&gt;<br>#include &lt;string.h&gt;<br><br>using namespace std;<br><br>typedef long long int64;<br>typedef unsigned long long uint64;<br>typedef unsigned short ushort;<br>typedef unsigned char uchar;<br>#define two(X) (1&lt;&lt;(X))<br>#define twoL(X) (((int64)(1))&lt;&lt;(X))<br>#define contain(S,X) (((S)&amp;two(X))!=0)<br>#define containL(S,X) (((S)&amp;twoL(X))!=0)<br>const double pi=acos(-1.0);<br>const double eps=1e-11;<br>template&lt;class T&gt; inline void ckmin(T &amp;a,T b){if(b&lt;a) a=b;}<br>template&lt;class T&gt; inline void ckmax(T &amp;a,T b){if(b&gt;a) a=b;}<br>template&lt;class T&gt; inline T sqr(T x){return x*x;}<br>typedef pair&lt;int,int&gt; ipair;<br>#define SIZE(A) ((int)A.size())<br>#define LENGTH(A) ((int)A.length())<br>#define MP(A,B) make_pair(A,B)<br>#define PB(X) push_back(X)<br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;double&gt; VD;<br>typedef vector&lt;string&gt; VS;<br>typedef set&lt;int&gt; SI;<br>typedef set&lt;double&gt; SD;<br>typedef set&lt;string&gt; SS;<br><br>template&lt;typename T&gt; static T gcd(T a, T b) { return b ? gcd(b, a % b) : a; }<br>template&lt;typename T&gt; static T lcm(T a, T b) { return a*(b/gcd(a,b)); }<br>template&lt;typename T&gt; static T lowbit(T n) { return (n^(n-1))&amp;n; }<br>template&lt;typename T&gt; static int countbit(T n) { return (n==0)?0:(1+countbit(n&amp;(n-1))); }<br><br>const int MOD=1000000007;<br><br>#define MUL(a,b) ((int)((int64)(a)*(int64)(b)%MOD))<br><br>class YetAnotherNim<br>{<br>public:<br>  int size;<br>  int64 a[50][50],c[50][50];<br>  int64 choose[50][50];<br>  void ADDTO(int64 &amp;a,int64 b)<br>  {<br>    a+=b;<br>    if (a&gt;=MOD) a-=MOD;<br>  }<br>  int64 fast_power(int64 p,int64 e)<br>  {<br>    if (e==0) return 1;<br>    if (e&amp;1)<br>      return MUL(fast_power(p,e-1),p);<br>    else<br>      return fast_power(MUL(p,p),e/2);<br>  }<br>  void multiply(int64 c[50][50],int64 a[50][50],int64 b[50][50])<br>  {<br>    int64 t[50][50];<br>    memset(t,0,sizeof(t));<br>    for (int i=0;i&lt;size;i++) for (int j=0;j&lt;size;j++) for (int k=0;k&lt;size;k++)<br>      ADDTO(t[i][j],MUL(a[i][k],b[k][j]));<br>    for (int i=0;i&lt;size;i++) for (int j=0;j&lt;size;j++) c[i][j]=t[i][j];<br>  }<br>  void fast_power(int64 e)<br>  {<br>    if (e==0)<br>    {<br>      for (int i=0;i&lt;size;i++) for (int j=0;j&lt;size;j++) c[i][j]=(int)(i==j);<br>      return;<br>    }<br>    if (e&amp;1)<br>    {<br>      fast_power(e-1);<br>      multiply(c,c,a);<br>    }<br>    else<br>    {<br>      fast_power(e/2);<br>      multiply(c,c,c);<br>    }<br>  }<br>    int solve(int64 n, int64 m, int k) <br>    {<br>    int c=0;<br>    for (m++;m&gt;1;c++) m/=2;<br>    printf("c = %d\n",c);<br>    int64 ST=(int)fast_power(two(c)-1,n);<br>    if (k&gt;c) return (int)ST;<br>    memset(choose,0,sizeof(choose));<br>    for (int i=0;i&lt;50;i++) for (int j=0;j&lt;=i;j++) choose[i][j]=(j==0)?1:(choose[i-1][j-1]+choose[i-1][j])%MOD;<br>    memset(a,0,sizeof(a));<br>    size=k+1;<br>    a[k][k]=two(c)-1;    <br>    //E=MUL(E,two(c)-1);<br>    for (int j=0;j&lt;k;j++)<br>    {<br>      for (int d=1;d&lt;=j;d++) for (int e=0;e&lt;j;e++)<br>      {<br>        if (j-e&lt;d) continue;<br>        int64 cnt=choose[j-e-1][d-1];<br>        //ADDTO(f[i+1][j-e],MUL(f[i][j],cnt));<br>        ADDTO(a[j][j-e],cnt);<br>      }<br>      int64 cnt=MUL(two(j),two(c-j)-1);<br>      if (j+1==k)<br>      {<br>        //cout&lt;&lt;"D "&lt;&lt;MUL(MUL(cnt,f[i][j]),fast_power(two(c)-1,n-1-i))&lt;&lt;endl;<br>        //ADDTO(R,MUL(MUL(cnt,f[i][j]),fast_power(two(c)-1,n-1-i)));<br>      //  ADDTO(E,MUL(cnt,f[i][j]));<br>        ADDTO(a[j][k],cnt);<br>      }<br>      else<br>      {<br>      //  ADDTO(f[i+1][j+1],MUL(f[i][j],cnt));<br>        ADDTO(a[j][j+1],cnt);<br>      }<br>    }<br>    fast_power(n);<br>    int64 R=this-&gt;c[0][k];<br>    cout&lt;&lt;R&lt;&lt;endl;<br>    cout&lt;&lt;ST&lt;&lt;endl;<br>    R=(ST-R+MOD)%MOD;<br>    return (int)R;<br>    }<br>};<br><br><br>// Powered by FileEdit<br></td>