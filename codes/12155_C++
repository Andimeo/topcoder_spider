<td class="problemText" colspan="8" valign="middle" align="left">
            #line 5 "CuttingBitString.cpp"<br><br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br><br>using namespace std;<br><br>#define pb push_back<br>#define sz(x) ((int)((x).size()))<br>#define out(x) printf(#x" %d\n", x)<br>#define rep(i,n) for(int i=0;i&lt;(n);++i)<br>#define repf(i,l,h) for(int i=(l);i&lt;=(h);++i)<br>#define repd(i,h,l) for(int i=(h);i&gt;=(l);--i)<br><br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;string&gt; vs;<br>typedef vector&lt;double&gt; vd;<br>typedef long long ll;<br>typedef pair&lt;int,int&gt; pii;<br><br>const ll inf = 4503599627370496LL;<br><br>void update(int&amp; x, int y) {<br>    if (x == -1 || x &gt; y) {<br>        x = y;<br>    }<br>}<br><br>class CuttingBitString<br>{<br>    public:<br>        int getmin(string s)<br>        {<br>            set&lt;ll&gt; all;<br><br>            ll now = 1LL;<br>            while (now &lt; inf) {<br>                all.insert(now);<br>                now *= 5;<br>            }<br>            <br>            int len = sz(s);<br><br>            vector&lt;int&gt; dp(len + 1, -1);<br>            dp[0] = 0;<br>            rep (i, len) {<br>                if (dp[i] == -1 || s[i] == '0') continue;<br>                repf (j, i, len - 1) {<br>                    if (all.find(getnum(s, i, j)) != all.end()) {<br>                        update(dp[j + 1], dp[i] + 1);<br>                    }<br>                }<br>            }<br>            return dp[len];<br>        }<br>        <br>        ll getnum(string s, int b, int e) {<br>            ll num = 0;<br>            repf (i, b, e) {<br>                num = num * 2 + (s[i] - '0');<br>            }<br>            return num;<br>        }<br><br><br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>