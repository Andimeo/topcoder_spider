<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br><br>public class Ear<br>{<br>  int[] getList( string[] s )<br>  {<br>    string t = "";<br>    for ( int i = 0; i &lt; s.Length; ++i ) t += s[i];<br>    string[] data = t.Split( new char[] { ' ' } );<br>    int[] res = new int[data.Length];<br>    for ( int i = 0; i &lt; res.Length; ++i ) res[i] = int.Parse( data[i] );<br>    return res;<br>  }<br><br>  public long getCount( string[] redX, string[] blueX, string[] blueY )<br>  {<br>    int[] rx = getList( redX ), bx = getList( blueX ), by = getList( blueY );<br>    Array.Sort( rx );<br><br>    long res = 0;<br>    int n = rx.Length, m = bx.Length;<br>    for ( int i = 0; i &lt; m; ++i )<br>      for ( int j = 0; j &lt; m; ++j )<br>        if ( by[i] &gt; by[j] )<br>        {<br>          int iL, iR, jL, jR;<br><br>          int k = n - 1;<br>          while ( k &gt;= 0 &amp;&amp; rx[k] &gt;= bx[i] ) --k;<br>          if ( k &lt; 0 ) continue;<br><br>          while ( k &gt;= 0 &amp;&amp; ( bx[j] - bx[i] ) * ( 0 - by[i] ) - ( by[j] - by[i] ) * ( rx[k] - bx[i] ) &gt;= 0 ) --k;<br>          if ( k &lt; 0 ) continue;<br><br>          iL = k;<br><br>          k = n - 1;<br>          while ( k &gt;= 0 &amp;&amp; rx[k] &gt;= bx[j] ) --k;<br>          if ( k &lt; 0 ) continue;<br><br>          jL = k;<br><br>          k = 0;<br>          while ( k &lt; n &amp;&amp; rx[k] &lt;= bx[i] ) ++k;<br>          if ( k &gt;= n ) continue;<br><br>          while ( k &lt; n &amp;&amp; ( bx[j] - bx[i] ) * ( 0 - by[i] ) - ( by[j] - by[i] ) * ( rx[k] - bx[i] ) &lt;= 0 ) ++k;<br>          if ( k &gt;= n ) continue;<br><br>          iR = k;<br><br>          k = 0;<br>          while ( k &lt; n &amp;&amp; rx[k] &lt;= bx[j] ) ++k;<br>          if ( k &gt;= n ) continue;<br><br>          jR = k;<br><br>          if ( iL &gt; jL ) iL = jL;<br>          if ( iR &lt; jR ) iR = jR;<br><br>          res += sum( jL - iL, jL ) * sum( iR - jR, n - 1 - jR );<br>        }<br><br>    return res;<br>  }<br><br>  long sum( int a, int b )<br>  {<br>    return (long)( a + b ) * ( b - a + 1 ) / 2;<br>  }<br><br>}<br><br><br> <br>// Powered by moj 4.16 [modified TZTester]<br>// Powered by CleanSharp 1.0<br>// Powered by CodeProcessor<br></td>