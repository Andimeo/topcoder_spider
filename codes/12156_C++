<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cmath&gt;<br>#include &lt;sstream&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;functional&gt;<br>using namespace std;<br>#define pb push_back<br>#define INF 1000000000<br>#define L(s) (int)((s).size())<br>#define FOR(i,a,b) for (int _n(b), i(a); i &lt;= _n; i++)<br>#define FORD(i,a,b) for(int i=(a),_b=(b);i&gt;=_b;i--)<br>#define rep(i,n) FOR(i,1,(n))<br>#define rept(i,n) FOR(i,0,(n)-1)<br>#define ll long long<br>#define VI vector&lt;int&gt;<br>#define mp make_pair<br>#define pii pair&lt;int,int&gt;<br>#define x first<br>#define y second<br><br>inline pii operator -(const pii &amp;a, const pii &amp;b) {<br>  return mp(a.x - b.x, a.y - b.y);<br>}<br>inline ll vec(const pii &amp;a, const pii &amp;b) {<br>  return (ll)a.x * b.y - (ll)b.x * a.y;<br>}<br><br>int red[301];<br>pii blue[301];<br>int rc, bc;<br><br>inline ll solve(pii t1, pii t2) {<br>  ll r = 0, l = 0;<br>  // right<br>  int c = 0;<br>  pii v = t2 - t1;<br>  rept(i, rc) {<br>    if (red[i] &gt; t2.x) ++c;<br>    if (red[i] &lt;= t1.x) continue;<br>    if (vec(v, mp(red[i], 0) - t1) &lt;= 0) continue;<br>    int d = c;<br>    if (red[i] &gt; t2.x) --d;<br>    r += d;<br>  }<br><br>  // left<br>  c = 0;<br>  FORD(i, rc - 1, 0) {<br>    if (red[i] &lt; t2.x) ++c;<br>    if (red[i] &gt;= t1.x) continue;<br>    if (vec(v, mp(red[i], 0) - t1) &gt;= 0) continue;<br>    int d = c;<br>    if (red[i] &lt; t2.x) --d;<br>    l += d;<br>  }<br><br>  return r * l;<br>}<br>class Ear <br>  {<br>    public:<br>       long long getCount( vector &lt;string&gt; redX, vector &lt;string&gt; blueX, vector &lt;string&gt; blueY )<br>    {<br>      string s = "";<br>      rept(i, L(redX)) s += redX[i];<br>      istringstream iss1(s);<br>      int a;<br>      rc = bc = 0;<br>      while (iss1 &gt;&gt; a) {<br>        red[rc++] = a;<br>      }<br><br>      sort(red, red + rc);<br><br>      s = "";<br>      rept(i, L(blueX)) s += blueX[i];<br>      istringstream iss2(s);<br>      while (iss2 &gt;&gt; a) {<br>        blue[bc++].x = a;<br>      }<br><br>      bc = 0;<br>      s = "";<br>      rept(i, L(blueY)) s += blueY[i];<br>      istringstream iss3(s);<br>      while (iss3 &gt;&gt; a) {<br>        blue[bc++].y = a;<br>      }<br><br>      ll ans = 0;<br>      rept(i, bc) {<br>        rept(j, bc) {<br>          if (i == j) continue;<br>          if (blue[j].y &gt;= blue[i].y) continue;<br>          ans += solve(blue[i], blue[j]);<br>        }<br>      }<br><br>      return ans;<br>    }<br>  };<br><br><br><br>// Powered by FileEdit<br>// Powered by moj 4.17 [modified TZTester]<br>// Powered by CodeProcessor<br></td>