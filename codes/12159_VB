<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System<br>Imports System.Collections<br>Imports System.Text<br>Imports System.Collections.Generic<br>Imports System.Math<br> <br>Public Class TheBrickTowerEasyDivOne<br>    Public Function find(ByVal _redCount As Integer, ByVal _redHeight As Integer, ByVal _blueCount As Integer, ByVal _blueHeight As Integer) As Integer<br>        Dim i As Integer, j As Integer<br>        Dim redCount As Decimal = _redCount, redHeight As Decimal = _redHeight<br>        Dim blueCount As Decimal = _blueCount, blueHeight As Decimal = _blueHeight<br>        find = 0<br>        Dim s As Decimal = _redHeight + _blueHeight<br>        find += Min(redCount, blueCount)<br>        ' b rb rb rb rb<br>        If blueHeight = redHeight Then<br>            find += Max(Min(redCount - 1, blueCount) + 1, _<br>                         Min(redCount, blueCount - 1) + 1)<br>        Else<br>            find += Min(redCount - 1, blueCount) + 1<br>            find += Min(redCount, blueCount - 1) + 1<br>        End If<br>    End Function<br>End Class<br></td>