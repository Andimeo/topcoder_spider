<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;stack&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;bitset&gt;<br>#include &lt;math.h&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;limits.h&gt;<br>#include &lt;limits&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;cstring&gt;<br>#include &lt;sstream&gt;<br>using namespace std;<br><br><br>class TheBrickTowerMediumDivTwo {<br>public:<br>   vector &lt;int&gt; find( vector &lt;int&gt; heights ) {<br>       vector &lt;int&gt; pi, ret;<br>       int Min = 1 &lt;&lt; 30;<br>       for(int i = 0; i &lt; heights.size(); i++)<br>           pi.push_back(i);<br>       do{<br>           int cur = 0;<br>           for(int i = 1; i &lt; heights.size(); i++)<br>               cur += max(heights[pi[i]], heights[pi[i - 1]]);<br>           if(cur &lt; Min){<br>               Min = cur;<br>               ret = pi;<br>           }<br>       }while(next_permutation(pi.begin(), pi.end()));<br>       return ret;<br>   }<br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by moj 4.17 [modified TZTester]<br>// Powered by CodeProcessor<br></td>