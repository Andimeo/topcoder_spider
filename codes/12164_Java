<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class TheBrickTowerHardDivTwo {<br>  public int find(int C, int K, int H){<br>    int mod = 1234567891;<br>    int[][][][][][] sol = new int[4][4][4][4][8][48];<br>  <br>    for(int h=1;h&lt;=H;++h)<br>    for(int c1=0;c1&lt;C;++c1)<br>    for(int c2=0;c2&lt;C;++c2)<br>    for(int c3=0;c3&lt;C;++c3)<br>    for(int c4=0;c4&lt;C;++c4)<br>    for(int k = 0;k&lt;=K;++k)<br>    {<br>      int eq = 0;<br>      long csol = 0;<br>      if(c1 == c2) eq++;<br>      if(c2 == c3) eq++;<br>      if(c3 == c4) eq++;<br>      if(c4 == c1) eq++;<br>      int _eq = eq;<br>      for(int ac1=0;ac1&lt;C;++ac1)<br>      for(int ac2=0;ac2&lt;C;++ac2)<br>      for(int ac3=0;ac3&lt;C;++ac3)<br>      for(int ac4=0;ac4&lt;C;++ac4)<br>        {<br>          eq = _eq;<br>          if(c1==ac1)eq++;<br>          if(c2==ac2)eq++;<br>          if(c3==ac3)eq++;<br>          if(c4==ac4)eq++;<br>          if(h==1) csol = _eq &lt;= k ? 1 : 0;<br>          else if(eq &lt;= k) csol = (csol + sol[ac1][ac2][ac3][ac4][k-eq][h-1]) % mod; <br>        }<br>      sol[c1][c2][c3][c4][k][h] = (int)csol;<br>    }<br>    long fsol = 0;<br>    for(int c1=0;c1&lt;C;++c1)<br>    for(int c2=0;c2&lt;C;++c2)<br>    for(int c3=0;c3&lt;C;++c3)<br>    for(int c4=0;c4&lt;C;++c4)<br>    for(int h=1;h&lt;=H;++h)<br>      fsol = (fsol + sol[c1][c2][c3][c4][K][h]) % mod;<br>    <br>    return (int)fsol;<br>  }<br>}<br></td>