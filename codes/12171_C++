<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;utility&gt;<br>#include &lt;complex&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iterator&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstddef&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cassert&gt;<br><br>using namespace std;<br><br>typedef long long LL;<br>typedef pair&lt;int, int&gt; PII;<br><br>#define VAR(i,x) __typeof(x) i = (x)<br>#define FORE(i, x) for(VAR(i,(x).begin()); i != (x).end(); ++i)<br>#define ZERO(x) memset(x, 0, sizeof(x))<br>#define ALL(x) (x).begin(),(x).end()<br><br>int dp[2000005];<br><br>class IndependentOfOR<br>{<br>public:<br>    int maxSum(vector &lt;int&gt; A) <br>    {<br>        int result = 0;<br>        int m = 20;<br>        for (int i = 0; i &lt; (1 &lt;&lt; m); ++i) {<br>            int cur = 0;<br>            for (int j = 0; j &lt; m; ++j) {<br>                dp[1 &lt;&lt; j] = 0;<br>            }<br>            FORE (it, A) {<br>                dp[*it &amp; i] = max(dp[*it &amp; i], *it);<br>            }<br>            for (int j = 0; j &lt; m; ++j) {<br>                cur += dp[1 &lt;&lt; j];<br>            }<br>            result = max(result, cur);<br>        }<br>        return result;<br>    }<br>};<br><br><br><br>// Powered by FileEdit<br></td>