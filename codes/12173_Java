<td class="problemText" colspan="8" valign="middle" align="left">
            import java.lang.*;<br>import java.util.*;<br><br>public class LeftRightDigitsGame {<br>  private Map&lt;String, String&gt; mins = new HashMap&lt;String, String&gt;();<br><br>  public String minNumber(String digits) {<br>    char c = 'a';<br>    Set&lt;Integer&gt; idxs = new HashSet&lt;Integer&gt;();<br>    for (int i = 0, n = digits.length(); i &lt; n; i++) {<br>      if (digits.charAt(i) != '0' &amp;&amp; digits.charAt(i) &lt; c) {<br>        c = digits.charAt(i);<br>      }<br>    }<br>    for (int i = 0, n = digits.length(); i &lt; n; i++) {<br>      if (digits.charAt(i) == c) {<br>        idxs.add(i);<br>      }<br>    }<br>    <br>    String min = "99999999999999999999999999999999999999999999999999".substring(0, digits.length());<br>    String curr = "";<br>    <br>    for (Integer a : idxs) {<br>      curr = String.valueOf(digits.charAt(a)) + aminNumber(digits.substring(0, a)) + (a &lt; digits.length() - 1 ? digits.substring(a + 1) : "");<br>      <br>      if (curr.compareTo(min) &lt; 0) {<br>        System.out.println(curr + "," + min);        <br>        min = curr;<br>      }<br>    }<br>    <br>    return min;<br>  }  <br><br>  private String aminNumber(String digits) {<br>    if (mins.containsKey(digits)) return mins.get(digits);<br>    <br>    char c = 'a';<br>    Set&lt;Integer&gt; idxs = new HashSet&lt;Integer&gt;();<br>    for (int i = 0, n = digits.length(); i &lt; n; i++) {<br>      if (digits.charAt(i) &lt; c) {<br>        c = digits.charAt(i);<br>      }<br>    }<br>    for (int i = 0, n = digits.length(); i &lt; n; i++) {<br>      if (digits.charAt(i) == c) {<br>        idxs.add(i);<br>      }<br>    }<br>    <br>    String min = "99999999999999999999999999999999999999999999999999".substring(0, digits.length());<br>    String curr = "";<br>    <br>    for (Integer a : idxs) {<br>      curr = String.valueOf(digits.charAt(a)) + aminNumber(digits.substring(0, a)) + (a &lt; digits.length() - 1 ? digits.substring(a + 1) : "");<br>      <br>      if (curr.compareTo(min) &lt; 0) {<br>        System.out.println(curr + "," + min);        <br>        min = curr;<br>      }<br>    }<br>    <br>    System.out.println(min);<br>    mins.put(digits, min);<br>    return min;<br>  }<br>}<br></td>