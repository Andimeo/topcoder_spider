<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;cmath&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;bitset&gt;<br>#include &lt;fstream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;ctype.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br>using namespace std;<br>#define li        long long int<br>#define rep(i,to) for(li i=0;i&lt;((li)(to));++i)<br>#define pb        push_back<br>#define sz(v)     ((li)(v).size())<br>#define bit(n)    (1ll&lt;&lt;(li)(n))<br>#define all(vec)  (vec).begin(),(vec).end()<br>#define each(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)<br>#define MP        make_pair<br>#define F         first<br>#define S         second<br> <br> <br> <br> <br>class HatRack {<br>public:<br>  #define MAX 55<br>  li N[MAX];<br>  li n;<br>  vector&lt;li&gt; E[MAX];<br>  li dp[MAX][MAX][MAX];<br>  <br>  li recur(li pos, li num, li pr = MAX - 1)<br>  {<br>    li &amp;res = dp[pos][num][pr];<br>    if(res != -1) return res;<br>    <br>    vector&lt;li&gt; V;<br>    rep(i, sz(E[num]))if(E[num][i] != pr) V.pb(E[num][i]);<br>    if(sz(V) != N[pos]){<br>      res = 0;<br>    }else{<br>      res = 0;<br>      sort(all(V));<br>      do{<br>        li t = 1;<br>        rep(i, sz(V)) t = t * recur(pos * 2 + i, V[i], num);<br>        res += t;<br>      }while(next_permutation(all(V)));<br>    }<br>//    cout &lt;&lt; pos &lt;&lt; " " &lt;&lt; num &lt;&lt; " " &lt;&lt; pr &lt;&lt; " = " &lt;&lt; res &lt;&lt; endl;<br>    <br>    return res;<br>  }<br>    <br>    <br>  <br>  long long countWays(vector &lt;int&gt; knob1, vector &lt;int&gt; knob2){<br>    n = sz(knob1) + 1;<br>    rep(i, n - 1){<br>      li a = knob1[i];<br>      li b = knob2[i];<br>      E[a - 1].pb(b - 1);<br>      E[b - 1].pb(a - 1);<br>    }<br>    memset(dp, -1, sizeof(dp));<br>    memset(N, 0, sizeof(N));<br>    li rem = n - 1;<br>    for(li i = 1; i &lt; MAX; i++){<br>      li t = min(2ll, rem);<br>      N[i] = t;<br>      rem -= t;<br>    }<br>    cout &lt;&lt; "A" &lt;&lt; endl;<br>    <br>    li res = 0;<br>    rep(i, n) res += recur(1, i);<br>    return res;<br>  }<br>  <br> <br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>