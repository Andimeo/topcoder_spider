<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;sstream&gt;<br>using namespace std;<br><br>#define MP make_pair<br>#define PB push_back<br><br>#define sqr(x) ((x)*(x))<br>#define lowbit(x) ((x)&amp;-(x))<br><br>typedef long long LL;<br>typedef unsigned long long ULL;<br>typedef pair&lt;int, int&gt; PII;<br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br><br>const double pi  =  acos(-1.0);<br>//=================================<br><br>const LL base  =   1234567891;<br><br>inline LL powmod(LL x,LL t,LL base)<br>{<br>  if (!t) return 1%base;<br>  LL y=powmod(x,t/2,base);<br>  y=y*y%base;<br>  if (t%2) y=y*x%base;<br>  return y;<br>}<br><br>const int maxn    =  55;<br>const int maxRabbit  =  maxn*4;<br><br>LL f[maxn][maxRabbit],frac[maxRabbit+10];<br><br>inline LL my_div(LL a,LL b)<br>{<br>  return a*powmod(b,base-2,base)%base;<br>}<br><br>inline void Plus(LL &amp;a,LL b)<br>{<br>  a+=b;<br>  if (a&gt;=base) a-=base;<br>}<br><br>class TheAnimalProgrammingCompetitions<br>{<br>public:<br>    int find(vector &lt;int&gt; a) <br>    {<br>    int total=0,n=0;<br>    for (int i=0;i&lt;a.size();++i){<br>      total+=a[i];<br>      n+=4;<br>    }<br>    <br>    LL C[15][15];<br>    memset(C,0,sizeof(C));<br>    for (int i=0;i&lt;=10;++i){<br>      C[i][0]=1%base;<br>      for (int j=1;j&lt;=i;++j){<br>        C[i][j]=(C[i-1][j-1]+C[i-1][j])%base;<br>      }<br>    }<br>    <br>    frac[0]=1;<br>    for (int i=1;i&lt;=maxRabbit;++i){<br>      frac[i]=frac[i-1]*i%base;<br>    }<br>    memset(f,0,sizeof(f));<br>    f[0][0]=1;<br>    for (int i=0;i&lt;a.size();++i){<br>      for (int j=0;j&lt;=total;++j){<br>        if (f[i][j]){<br>//printf("%d %d  %lld\n",i,j,f[i][j]);<br>          for (int delta=0;delta&lt;=a[i];++delta){<br>//printf("%lld\n",my_div(frac[4],frac[4-delta]));<br>            Plus(f[i+1][j+delta],(f[i][j]*my_div(frac[4],frac[4-delta])%base)*C[a[i]][delta]%base);<br>          }<br>        }<br>      }<br>    }<br>    <br>    LL res=0;<br>    for (int i=0;i&lt;=total;++i){<br>      LL mul=f[a.size()][i];<br>//printf("%d %lld\n",i,mul);<br>      mul=mul*my_div(frac[n-i],frac[n-i-(total-i)])%base;<br>//printf("%d %lld\n",i,mul);<br>      if (i&amp;1){<br>        mul=(base-mul)%base;<br>      }<br>      Plus(res,mul);<br>    }<br>    return (int)res;<br>    }<br>};<br><br><br><br>// Powered by FileEdit<br></td>