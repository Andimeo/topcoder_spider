<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;set&gt;<br>#include&lt;cmath&gt;<br>#include&lt;stack&gt;<br>#include&lt;cstdio&gt;<br>#include&lt;cstring&gt;<br>#include&lt;iostream&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;cstdlib&gt;<br>#include&lt;numeric&gt;<br>#include&lt;vector&gt;<br>#include&lt;ctime&gt;<br>#include&lt;queue&gt;<br>#include&lt;list&gt;<br>#include&lt;map&gt;<br>#define pi acos(-1)<br>#define INF 0x7fffffff<br>#define clr(x)  memset(x,0,sizeof(x));<br>#define clrto(x,siz,y)  for(int xx=0;xx&lt;=siz;xx++)  x[xx]=y;<br>#define clrset(x,siz)  for(int xx=0;xx&lt;=siz;xx++)  x[xx]=xx;<br>#define clrvec(x,siz) for(int xx=0;x&lt;=siz;xx++)  x[xx].clear();<br>#define fop   freopen("in.txt","r",stdin);freopen("out.txt","w",stdout);<br>#define myprogram By_135678942570<br>#define clrcpy(x,siz,y)  for(int xx=0;xx&lt;siz;xx++)  x[xx]=y[xx];<br>using namespace std;<br>class XorBoardDivTwo<br>{<br>    public: int theMax(vector &lt;string&gt; board)<br>    {<br>        int n=board.size();<br>        int m=board[0].size();<br>        int res=0;<br>        for(int i=0;i&lt;n;i++)<br>           for(int j=0;j&lt;m;j++)<br>           {<br>               int mp[55][55];<br>               for(int k=0;k&lt;n;k++)<br>                  for(int l=0;l&lt;m;l++)<br>                      mp[k][l]=board[k][l]-'0';<br>               for(int k=0;k&lt;m;k++)<br>                  mp[i][k]=!mp[i][k];<br>               for(int k=0;k&lt;n;k++)<br>                  mp[k][j]=!mp[k][j];<br>               int count=0;<br>               for(int k=0;k&lt;n;k++)<br>                  for(int l=0;l&lt;m;l++)<br>                     count+=mp[k][l];<br>               res=max(res,count);<br>           }<br>        return res;<br>    }<br>};<br></td>