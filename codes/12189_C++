<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;set&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;map&gt;<br>#include &lt;bitset&gt;<br>#include &lt;vector&gt;<br>#include &lt;ctime&gt;<br><br>#define maxlongint 2147483647<br><br>using namespace std;<br>const int bigp=555555555;<br><br>int f[559][559][3][3];<br><br>class MuddyRoad2 {<br>public:<br>   int theCount( int n, int kv ) {<br>       int sc;<br>       memset(f,0,sizeof(f));<br>       f[1][0][1][2]=1;<br>       for (int i=1;i&lt;n;i++)<br>           for (int j=0;j&lt;=kv;j++)<br>               for (int i1=0;i1&lt;=2;i1++)<br>                   for (int j1=0;j1&lt;=2;j1++)<br>                        if (f[i][j][i1][j1]!=0)<br>                        {<br>                            //next 0<br>                            sc=0;<br>                            if (i1==1) sc++;<br>                            if (j1==1) sc++;<br>                            f[i+1][j][sc%2][i1]=(f[i+1][j][sc%2][i1]+f[i][j][i1][j1])%bigp;<br>                            //next 1<br>                            f[i+1][j+1][2][i1]=(f[i+1][j+1][2][i1]+f[i][j][i1][j1])%bigp;<br>                        }<br>       return (f[n][kv][0][0]+f[n][kv][0][1]+f[n][kv][0][2])%bigp;<br>   }<br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by moj 4.17 [modified TZTester]<br>// Powered by CodeProcessor<br></td>