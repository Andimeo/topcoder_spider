<td class="problemText" colspan="8" valign="middle" align="left">
            /*<br> Muhammad Magdi Muhammad<br> */<br>#include &lt;map&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;sstream&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;set&gt;<br>#include &lt;complex&gt;<br> <br>#define all(v)          v.begin(),v.end()<br>#define allr(v)         v.rbegin(),v.rend()<br>#define rep(i,m)        for(int i=0;i&lt;m;i++)<br>#define REP(i,k,m)      for(int i=k;i&lt;m;i++)<br>#define mem(a,b)        memset(a,b,sizeof(a))<br>#define mp              make_pair<br>#define pb              push_back<br>#define OO ((int)1e9)<br>#define MAX 100000<br> <br>typedef long long ll;<br> <br>int diri[] = { -1, 0, 1, 0, -1, 1, 1, -1 };<br>int dirj[] = { 0, 1, 0, -1, 1, 1, -1, -1 };<br>int compare(double d1, double d2) {<br>  if (fabs(d1 - d2) &lt; 1e-9)<br>    return 0;<br>  if (d1 &lt; d2)<br>    return -1;<br>  return 1;<br>}<br> <br>using namespace std;<br>int m[11], p[11];<br>vector&lt;string&gt; lve;<br>int n;<br>void dfs(int ind) {<br>  for (int i = 0; i &lt; n; ++i) {<br>    if (lve[ind][i] == 'Y' &amp;&amp; !p[i]) {<br>      p[i] = 1;<br>      dfs(i);<br>    }<br>  }<br>}<br>int check(int mask, int N) {<br>  mem(m, 0);<br>  mem(p, 0);<br>  n = N;<br>  for (int i = 0; i &lt; n; ++i) {<br>    if (mask &amp; (1 &lt;&lt; i)) {<br>      m[i] = 1;<br>      dfs(i);<br>    }<br>  }<br>  int ans = 0;<br>  for (int i = 0; i &lt; N; ++i) {<br>    if (m[i] &amp;&amp; !p[i])<br>      ans++;<br>  }<br>  return ans;<br>}<br> <br>class IncubatorEasy {<br>public:<br>  int maxMagicalGirls(vector&lt;string&gt; love) {<br>    int n = love.size(), mx = 0;<br>    lve = love;<br>    for (int mask = 0; mask &lt; (1 &lt;&lt; n); ++mask) {<br>      mx = max(mx, check(mask, n));<br>    }<br>    return mx;<br>  }<br>};<br> <br> <br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>