<td class="problemText" colspan="8" valign="middle" align="left">
            public class IncubatorEasy {<br><br>  boolean v[];<br><br>  boolean getLove(String[] love, int i, int j) {<br>    if (love[i].charAt(j) == 'Y')<br>      return true;<br>    return false;<br>  }<br><br>  void search(String[] love, int idx) {<br>    for (int i = 0; i &lt; love.length; ++i) {<br>      if (getLove(love, idx, i) &amp;&amp; !v[i]) {<br>        v[i] = true;<br>        search(love, i);<br>      }<br>    }<br>  }<br><br>  public int maxMagicalGirls(String[] love) {<br>    int n = love.length;<br>    int max = 0;<br>    for (int i = 0; i &lt; 1 &lt;&lt; n; ++i) {<br>      v = new boolean[n];<br>      for (int j = 0; j &lt; n; ++j) {<br>        if (((1 &lt;&lt; j) &amp; i) != 0) {<br>          search(love, j);<br>        }<br>      }<br>      int t = 0;<br>      for (int j = 0; j &lt; n; ++j) {<br>        if (!v[j] &amp;&amp; ((1 &lt;&lt; j) &amp; i) != 0)<br>          t++;<br>      }<br>      max = Math.max(t, max);<br>    }<br>    return max;<br>  }<br>}<br></td>