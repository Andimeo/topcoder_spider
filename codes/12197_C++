<td class="problemText" colspan="8" valign="middle" align="left">
            #ifdef NALP_PROJECT<br>#include "my.h"<br>#endif<br> <br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;utility&gt;<br> <br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;queue&gt;<br>#include &lt;memory.h&gt;<br> <br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br> <br>using namespace std;<br> <br>typedef long long int64;<br> <br>#define forn(i, n) for(int i = 0; i &lt; (int)(n); i++)<br>#define ford(i, n) for(int i = (int)(n) - 1; i &gt;= 0; i--)<br>#define pb push_back<br>#define mp make_pair<br>#define y1 YYYYYYYYYYYY1<br>#define all(a) (a).begin(), (a).end()<br>#define rall(a) (a).rbegin(), (a).rend()<br> <br>template&lt;typename T&gt; inline T Abs(T x) { return (x &gt;= 0) ? x : -x; }<br>template&lt;typename T&gt; inline T sqr(T x) { return x * x; }<br>template&lt;typename T&gt; string toStr(T x) { stringstream st; st &lt;&lt; x; string s; st &gt;&gt; s; return s; }<br> <br>const int INF = (int)1E9;<br>const int64 INF64 = (int64)1E18;<br>const long double EPS = 1E-9;<br>const long double PI = 3.1415926535897932384626433832795;<br> <br> <br> <br> <br>class XorAndSum {<br>public:<br> <br> <br> <br> <br> <br> <br>long long maxSum(vector&lt;long long&gt; a) {<br>  while (true) {<br>    bool good = false;<br>    forn(i, a.size())<br>      forn(j, a.size())<br>        forn(k, a.size())<br>          if (i != j &amp;&amp; i != k) {<br>            int64 nn = a[i] ^ a[j] ^ a[k];<br>            if (nn &gt; a[i]) {<br>              a[i] = nn;<br>              good = true;<br>            }<br>          }<br> <br>    forn(i, a.size())<br>      forn(j, a.size())<br>        if (i != j) {<br>          int64 nn = a[i] ^ a[j];<br>          if (nn &gt; a[i]) {<br>            a[i] = nn;<br>            good = true;<br>          }<br>        }<br> <br>    if (!good) break;<br>  }<br> <br>  int64 ans = 0;<br>  forn(i, a.size())<br>    ans += a[i];<br> <br>  return ans;<br>}<br>};<br> <br> <br>//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!<br></td>