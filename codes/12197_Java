<td class="problemText" colspan="8" valign="middle" align="left">
            public class XorAndSum {<br>  public long maxSum(long[] number) {<br>    number = number.clone();<br>    int n = number.length;<br>    int start = 0;<br>    for (int bit = 60; bit &gt;= 0; --bit) {<br>      int good = -1;<br>      for (int i = start; i &lt; n; i++) {<br>        if ((number[i] &amp; (1L &lt;&lt; bit)) != 0) {<br>          good = i;<br>          break;<br>        }<br>      }<br>      if (good &lt; 0) {<br>        continue;<br>      }<br>      {<br>        long t = number[start];<br>        number[start] = number[good];<br>        number[good] = t;<br>      }<br>      for (int i = start + 1; i &lt; n; i++) {<br>        if ((number[i] &amp; (1L &lt;&lt; bit)) != 0) {<br>          number[i] ^= number[start];<br>        }<br>      }<br>      start++;<br>    }<br>    for (int i = 0; i &lt; n; i++) {<br>      for (int j = 0; j &lt; n; j++) {<br>        if ((number[i] ^ number[j]) &gt; number[i]) {<br>          number[i] ^= number[j];<br>        }<br>      }<br>    }<br>    long res = 0;<br>    for (long i : number) {<br>      res += i;<br>    }<br>    return res;<br>  }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>