<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class LeftRightDigitsGame2<br>{<br>  public String minNumber(String digits, String lowerBound) {<br>    int n = digits.length();<br>    int[] lB = new int[n];<br>    for (int i = 0; i &lt; n; i++)<br>      lB[i] = lowerBound.charAt(i) - '0';<br>    int[] d = new int[n];<br>    for (int i = 0; i &lt; n; i++)<br>      d[i] = digits.charAt(i) - '0';<br> <br>    // 0 - less, 1 - equal, 2 - more<br>    int[][][][] res = new int[3][n][n][n];<br>    boolean[][][] w = new boolean[3][n][n];<br>    int[] test = new int[n];<br>    for (int i = 0; i &lt; n; i++) {<br>      Arrays.fill(test, 0);<br>      test[i] = d[0];<br>      int x = less(test, lB, i, i);<br>      cpy(test, res[x][i][i]);<br>      w[x][i][i] = true;<br>    }<br>    for (int len = 1; len &lt; n; len++) {<br>      for (int left = 0; left + len &lt;= n; left++) {<br>        int right = left + len - 1;<br>        for (int t = 0; t &lt; 3; t++) {<br>          if (!w[t][left][right])<br>            continue;<br>          if (left &gt; 0) {<br>            cpy(res[t][left][right], test);<br>            test[left - 1] = d[len];<br>            int left1 = left - 1, right1 = right;<br>            int u = less(test, lB, left1, right1);<br>            if (!w[u][left1][right1] || less(test, res[u][left1][right1]) == 0) {<br>              cpy(test, res[u][left1][right1]);<br>              w[u][left1][right1] = true;<br>//              System.out.println(left1 + " " + right1 + " " + toString(test));<br>            }<br>          }<br>          if (right + 1 &lt; n) {<br>            cpy(res[t][left][right], test);<br>            test[right + 1] = d[len];<br>            int left1 = left, right1 = right + 1;<br>            int u = less(test, lB, left1, right1);<br>            if (!w[u][left1][right1] || less(test, res[u][left1][right1]) == 0) {<br>              cpy(test, res[u][left1][right1]);<br>              w[u][left1][right1] = true;<br>//              System.out.println(left1 + " " + right1 + " " + toString(test));<br>            }<br>          }<br>        }<br>      }<br>    }<br>    if (!w[1][0][n - 1] &amp;&amp; !w[2][0][n - 1])<br>      return "";<br>    if (w[1][0][n - 1])<br>      cpy(lB, test);<br>    else<br>      cpy(res[2][0][n - 1], test);<br>    return toString(test);<br>  }<br> <br>  String toString(int[] test) {<br>    StringBuilder sb = new StringBuilder();<br>    for (int i = 0; i &lt; test.length; i++)<br>      sb.append((char) (test[i] + '0'));<br>    return sb.toString();<br>  }<br> <br>  void cpy(int[] x, int[] y) {<br>    for (int i = 0; i &lt; x.length; i++) {<br>      y[i] = x[i];<br>    }<br>  }<br> <br>  int less(int[] x, int[] y) {<br>    return less(x, y, 0, x.length - 1);<br>  }<br> <br>  int less(int[] x, int[] y, int left, int right) {<br>    for (int i = left; i &lt;= right; i++)<br>      if (x[i] &lt; y[i])<br>        return 0;<br>      else if (y[i] &lt; x[i])<br>        return 2;<br>    return 1;<br>  }<br> <br>  <br>  <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>