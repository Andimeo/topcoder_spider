<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;cstdio&gt;<br>#include&lt;cstring&gt;<br>#include&lt;cstdlib&gt;<br>#include&lt;cctype&gt;<br>#include&lt;cmath&gt;<br>#include&lt;iostream&gt;<br>#include&lt;fstream&gt;<br>#include&lt;string&gt;<br>#include&lt;vector&gt;<br>#include&lt;queue&gt;<br>#include&lt;map&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;set&gt;<br>#include&lt;sstream&gt;<br>#include&lt;stack&gt;<br>using namespace std;<br><br>struct BlockTower{<br><br>int getTallest(vector &lt;int&gt; blockHeights)<br><br>{<br>           int ret;<br>           int dp[60];<br>           int a,b,c;<br>           vector&lt;int&gt;v;<br>           v=blockHeights;<br>           for(a=0;a&lt;=v.size();a++) dp[a]=0;<br>           ret=0;<br>           for(a=0;a&lt;v.size();a++){<br>                 if(!a){ dp[a]=v[a]; continue; }<br>                 c=0;<br>                 for(b=a-1;b&gt;=0;b--){<br>                       if(v[a]%2==0 &amp;&amp; v[b]%2==1) continue;<br>                       c=max(c,dp[b]);<br>                 }<br>                 dp[a]=c+v[a];<br>                 ret=max(ret,dp[a]);<br>           }<br>           ret=max(ret,dp[0]);<br>           return ret;<br>}<br><br><br><br>};<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>