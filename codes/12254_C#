<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Text.RegularExpressions;<br>using System.Collections;<br>using System.Collections.Generic;<br><br>public class SurroundingGameEasy {<br><br>    string[] stone;<br>    int H, W;<br>    <br>    public int score(string[] cost, string[] benefit, string[] stone) {<br>        this.stone = stone;<br>        H = stone.Length;<br>        W = stone[0].Length;<br> <br>        int res = 0;<br>        for(int y = 0; y &lt; H; y++)<br>            for (int x = 0; x &lt; W; x++)<br>            {<br>                if (isDomi(y, x)) res += benefit[y][x] - '0';<br>                if (stone[y][x] == 'o') res -= cost[y][x] - '0';<br>            }<br>        return res;<br>    }<br><br>    bool isDomi(int y, int x)<br>    {<br>        if (stone[y][x] == 'o') return true;<br><br>        if (y - 1 &gt;= 0) if (stone[y - 1][x] != 'o') return false;<br>        if (x - 1 &gt;= 0) if (stone[y ][x - 1] != 'o') return false;<br>        if (y + 1 &lt; H)  if (stone[y + 1][x] != 'o') return false;<br>        if (x + 1 &lt; W)  if (stone[y ][x + 1] != 'o') return false;<br>        return true;<br><br>    }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>