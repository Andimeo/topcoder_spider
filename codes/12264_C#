<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br> <br>public class TheDivisionGame<br>{<br>  public long countWinningIntervals(int L, int R)<br>  {<br>      int N = R - L + 1;<br>        int[] rem = new int[N];<br>        int[] cnt = new int[N];<br>        bool[] flag = new bool[50000];<br>      for (int i = 0; i &lt; 50000; i++)<br>      {<br>          flag[i] = true;<br>      }<br>      for (int i = L; i &lt; R+1; i++)<br>      {<br>          rem[i - L] = i;<br>          cnt[i - L] = 0;<br>      }<br>      for (int i = 2; i*i &lt; R+1; i++)<br>      {<br>          if (!flag[i])<br>          {<br>              continue;<br> <br>          }<br>          for (long j = i*i; j &lt; 50000; j+=i)<br>          {<br>              flag[j] = false;<br>          }<br>          int start = L;<br>          if ((L%i)!=0 )<br>          {<br>              start = start - L%i + i;<br>          }<br>          for (int j = start; j &lt; R+1; j+=i)<br>          {<br>              while (rem[j-L]%i==0)<br>              {<br>                  rem[j-L] /= i;<br>                  cnt[j - L]++;<br>              }<br>          }<br> <br>      }<br>        for (int i = L; i &lt; R + 1; i++)<br>        {<br>            if (rem[i-L]!=1)<br>            {<br>                cnt[i - L]++;<br>            }<br>        }<br>        int[] xr = new int[127];<br>        xr[0] = 1;<br>      long NN = R - L + 1;<br>      long ret = (NN*(NN+1))/2;<br>      int cur = 0;<br>        for (int i = L; i &lt; R + 1; i++)<br>        {<br>            cur ^= cnt[i - L];<br>            ret -= xr[cur];<br>            xr[cur]++;<br>        }<br>      return ret;<br> <br> <br> <br>  }<br> <br> <br>}<br>//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!<br></td>