<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;cstring&gt;<br> <br>using namespace std;<br>typedef long long LL;<br> <br>LL f[1000006], g[1000006], h[1000006], a[1000006];<br> <br>class TheDivisionGame {<br>public:<br>  long long countWinningIntervals(LL L, LL R) {<br>    memset(g, 0, sizeof(g));<br>    memset(f, 0, sizeof(f));<br>    memset(h, 0, sizeof(h));<br>    for (int i = L; i &lt;= R; ++ i)  a[i - L] = i;<br>    for (LL i = 2; i * i &lt;= R; ++ i)  if (!g[i])<br>    {<br>      for (LL j = i * i; j &lt;= 1000000; j += i)  g[j] = 1;<br>      for (LL j = ((L - 1) / i + 1) * i; j &lt;= R; j += i)<br>      {<br>        for (; a[j - L] % i == 0; a[j - L] /= i)  f[j - L] ++;<br>      }<br>    }<br>    for (int i = 0; i &lt;= R - L; ++ i)  f[i] += (a[i] != 1);<br>    LL  ans = 0, tot = 1;<br>    for (int i = 1; i &lt;= R - L; ++ i)  f[i] ^= f[i - 1];<br>    h[0] = 1;<br>    for (int i = 0; i &lt;= R - L; ++ i)<br>    {<br>      ans += tot - h[f[i]];<br>      h[f[i]] ++;<br>      tot ++;<br>    }<br>    return ans;<br>  }<br>};<br> <br> <br>//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!<br></td>