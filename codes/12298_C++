<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;vector&gt;<br><br>using namespace std;<br><br>#define IX 100<br>#define IY 100<br><br>struct Field {<br>  int f[240][240];<br>  Field() { for(int i = 0 ; i &lt; 240 ; ++i) for(int j = 0 ; j &lt; 240 ; ++j) f[i][j] = 0; }<br>  bool operator==(const Field &amp; b) {<br>    bool ans = true;<br>    for(int i = 0 ; i &lt; 240 ; ++i)<br>      for(int j = 0 ; j &lt; 240 ; ++j)<br>        if(f[i][j] != b.f[i][j])<br>          return false;<br>    return ans;<br>  }<br>  Field forward() {<br>    Field curr = *this;<br>    Field ans;<br>    for(int i = 0 ; i &lt; 237 ; ++i)<br>      for(int j = 0 ; j &lt; 237 ; ++j)<br>        if(curr.f[i][j] &amp;&amp; curr.f[i+2][j] &amp;&amp; curr.f[i][j+2] &amp;&amp; curr.f[i+2][j+2])<br>          ans.f[i+1][j+1] = 1;<br>    return ans; <br>  }<br>  Field backward() {<br>    Field curr = *this;<br>    Field ans;<br>    for(int i = 1 ; i &lt; 238 ; ++i)<br>      for(int j = 1 ; j &lt; 238 ; ++j)<br>        if(curr.f[i][j]) {<br>          ans.f[i-1][j-1] = 1;<br>          ans.f[i-1][j+1] = 1;<br>          ans.f[i+1][j-1] = 1;<br>          ans.f[i+1][j+1] = 1;<br>        }<br>    return ans;<br>  }<br>};<br><br>class DrawingPointsDivTwo {<br>public:<br>  int maxSteps(vector &lt;string&gt; points) {<br>    Field f;<br>    for(int i = 0 ; i &lt; points.size() ; ++i) {<br>      for(int j = 0 ; j &lt; points[0].size() ; ++j) {<br>        if(points[i][j] == '*')<br>          f.f[IX+2*i][IY+2*j] = 1;<br>      }<br>    }<br>    Field curr = f;<br>    int i = 1;<br>    for( ; i &lt; 98 ; ++i) {<br>      curr = curr.backward();<br>      Field goingOriginal = curr;<br>      for(int j = 0 ; j &lt; i ; ++j)<br>        goingOriginal = goingOriginal.forward();<br>      if(!(goingOriginal == f))<br>        break;<br>    }<br>    if(i==98)<br>      return -1;<br>    else<br>      return i-1;<br>  }<br>};<br></td>