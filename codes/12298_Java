<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.Arrays;<br><br>public class DrawingPointsDivTwo {<br>  static int[][] minim(int[][] ar2){<br>    int[][] ar3 = new int[ar2.length-1][ar2[0].length-1];<br>    for (int i = 0; i &lt; ar2.length-1; i ++){<br>      for (int j = 0; j &lt; ar2[0].length-1; j++){<br>        if (ar2[i][j]*ar2[i+1][j]*ar2[i][j+1]*ar2[i+1][j+1] == 1){<br>          ar3[i][j] = 1;<br>        }<br>      }<br>    }<br>    return ar3;<br>  }<br>  <br>  static int[][] maxim(int[][] ar){<br>    int[][] ar2 = new int[ar.length + 1][ar[0].length + 1];<br>    for (int i = 0; i &lt; ar.length; i ++){<br>      for (int j = 0; j &lt; ar[0].length; j++){<br>        if (ar[i][j] == 1){<br>          ar2[i][j] = 1;<br>          ar2[i+1][j] = 1;<br>          ar2[i][j+1] = 1;<br>          ar2[i+1][j+1] = 1;<br>        }<br>      }<br>    }<br>    return ar2;<br>  }<br>  int max = 52;<br>  public int maxSteps(String[] points){<br>    int[][] ar = new int[points.length][points[0].length()];<br>    int [][]mas = ar;<br>    for (int i = 0; i &lt; points.length; i++){<br>      for (int j = 0; j &lt; points[0].length(); j++){<br>        if (points[i].charAt(j) == '*'){<br>          ar[i][j] = 1;<br>        }<br>      }<br>    }<br>    <br>    <br>    int count = 0;<br>    for (int k = 0; k &lt; max; k++){<br>      ar = maxim(ar);<br>      int[][] ar2 = minim(ar);<br>      for (int i = 0; i &lt; k; i++)<br>      ar2 = minim(ar2);<br>      <br>      if (Arrays.deepEquals(ar2, mas)){<br>        count = k + 1;<br>      }<br>      <br>    }<br>    <br>    if (count &gt; max - 1 ){<br>      return -1;<br>    }<br>    <br>    <br>    <br>    return count;<br>  }<br>}<br></td>