<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;cmath&gt;<br>#include &lt;ctime&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;memory&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;fstream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br> <br>#define sqr(x) ((x) * (x))<br>#define minn(x,y) (x=(y)&lt;(x)?(y):(x))<br>#define maxx(x,y) (x=(y)&gt;(x)?(y):(x))<br>#define pluss(x,y) (x+=(y),x%=mod)<br>#define random(x) ((((rand()%32767)*(rand()%32767)*(rand()%32767)%(x))+(x))%(x))<br> <br>using namespace std;<br> <br>typedef  long long  int64;<br> <br> <br> <br>int  a[222][222], b[222][222];<br> <br> <br>class TheMountain<br>{<br>public:<br>  int  minSum(int M, int N, vector&lt;int&gt; rz, vector&lt;int&gt; cz, vector&lt;int&gt; ez)<br>  {<br>    memset(b, 0, sizeof(b));<br>    memset(a, 0, sizeof(a));<br>    for (int i = 0; i &lt; rz.size(); ++ i)<br>      b[rz[i] + 1][cz[i] + 1] = a[rz[i] + 1][cz[i] + 1] = ez[i];<br>    <br>    int  ans = 1 &lt;&lt; 30;<br>    for (int x = 1; x &lt;= M; ++ x)<br>    {<br>      int  WA = 0, S = 0;<br>      <br>      for (int i = 1; i &lt; x; ++ i)<br>      for (int j = N; j &gt;= 1; -- j)<br>      {<br>        a[i][j] = max(a[i - 1][j], a[i][j + 1]) + 1;<br>        a[i][j] = max(a[i][j], b[i][j]);<br>        if (b[i][j]) WA += (b[i][j] &lt; a[i][j]);<br>        S += a[i][j];<br>      }<br>      for (int i = M; i &gt; x; -- i)<br>      for (int j = N; j &gt;= 1; -- j)<br>      {<br>        a[i][j] = max(a[i + 1][j], a[i][j + 1]) + 1;<br>        a[i][j] = max(a[i][j], b[i][j]);<br>        if (b[i][j]) WA += (b[i][j] &lt; a[i][j]);<br>        S += a[i][j];<br>      }<br>      for (int j = N; j &gt;= 1; -- j)<br>      {<br>        int  i = x;<br>        a[i][j] = max(max(a[i + 1][j], a[i - 1][j]), a[i][j + 1]) + 1;<br>        a[i][j] = max(a[i][j], b[i][j]);<br>        if (b[i][j]) WA += (b[i][j] &lt; a[i][j]);<br>        S += a[i][j];<br>      }<br>      <br>      for (int y = 1; y &lt;= N; ++ y)<br>      {<br>        if (WA == 0)<br>        {<br>          //cerr&lt;&lt;x&lt;&lt;' '&lt;&lt;y&lt;&lt;' '&lt;&lt;S&lt;&lt;endl;<br>          minn(ans, S);<br>        }<br>        <br>        int  j = y;<br>        for (int i = 1; i &lt; x; ++ i)<br>        {<br>          if (b[i][j]) WA -= (b[i][j] &lt; a[i][j]);<br>          S -= a[i][j];<br>          a[i][j] = max(a[i - 1][j], a[i][j - 1]) + 1;<br>          a[i][j] = max(a[i][j], b[i][j]);<br>          if (b[i][j]) WA += (b[i][j] &lt; a[i][j]);<br>          S += a[i][j];<br>        }<br>        for (int i = M; i &gt; x; -- i)<br>        {<br>          if (b[i][j]) WA -= (b[i][j] &lt; a[i][j]);<br>          S -= a[i][j];<br>          a[i][j] = max(a[i + 1][j], a[i][j - 1]) + 1;<br>          a[i][j] = max(a[i][j], b[i][j]);<br>          if (b[i][j]) WA += (b[i][j] &lt; a[i][j]);<br>          S += a[i][j];<br>        }<br>        {<br>          int  i = x;<br>          if (b[i][j]) WA -= (b[i][j] &lt; a[i][j]);<br>          S -= a[i][j];<br>          a[i][j] = max(max(a[i - 1][j], a[i + 1][j]), a[i][j - 1]) + 1;<br>          a[i][j] = max(a[i][j], b[i][j]);<br>          if (b[i][j]) WA += (b[i][j] &lt; a[i][j]);<br>          S += a[i][j];<br>        }<br>        <br>        if (y + 1 &gt; N) continue;<br>        <br>        j = y + 1;<br>        for (int i = 1; i &lt; x; ++ i)<br>        {<br>          if (b[i][j]) WA -= (b[i][j] &lt; a[i][j]);<br>          S -= a[i][j];<br>          a[i][j] = max(a[i - 1][j], max(a[i][j - 1], a[i][j + 1])) + 1;<br>          a[i][j] = max(a[i][j], b[i][j]);<br>          if (b[i][j]) WA += (b[i][j] &lt; a[i][j]);<br>          S += a[i][j];<br>        }<br>        for (int i = M; i &gt; x; -- i)<br>        {<br>          if (b[i][j]) WA -= (b[i][j] &lt; a[i][j]);<br>          S -= a[i][j];<br>          a[i][j] = max(a[i + 1][j], max(a[i][j - 1], a[i][j + 1])) + 1;<br>          a[i][j] = max(a[i][j], b[i][j]);<br>          if (b[i][j]) WA += (b[i][j] &lt; a[i][j]);<br>          S += a[i][j];<br>        }<br>        {<br>          int  i = x;<br>          if (b[i][j]) WA -= (b[i][j] &lt; a[i][j]);<br>          S -= a[i][j];<br>          a[i][j] = max(max(a[i - 1][j], a[i + 1][j]), max(a[i][j - 1], a[i][j + 1])) + 1;<br>          a[i][j] = max(a[i][j], b[i][j]);<br>          if (b[i][j]) WA += (b[i][j] &lt; a[i][j]);<br>          S += a[i][j];<br>        }<br>      }<br>    }<br>    <br>    if (ans &gt; 1 &lt;&lt; 29) ans = -1;<br>    return ans;<br>  }<br>};<br> <br> <br> <br>//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!<br></td>