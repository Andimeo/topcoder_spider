<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.Arrays;<br> <br>/**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> */<br>public class ThreeColorability {<br>    static final int UNKNOWN = 57;<br> <br>    public String[] lexSmallest(String[] cells) {<br>        int h = cells.length;<br>        int w = cells[0].length();<br>        int[][] diff = new int[h + w][h + w];<br>        for (int[] x : diff) Arrays.fill(x, UNKNOWN);<br>        for (int i = 0; i &lt; h + w; ++i) diff[i][i] = 0;<br>        for (int r = 0; r &lt; h; ++r)<br>            for (int c = 0; c &lt; w; ++c) {<br>                switch (cells[r].charAt(c)) {<br>                    case 'Z':<br>                        if (!markDiff(diff, r, c + h, 1)) return new String[0];<br>                        break;<br> <br>                    case 'N':<br>                        if (!markDiff(diff, r, c + h, 0)) return new String[0];<br>                        break;<br>                }<br>            }<br>        int[] cwhat = new int[w];<br>        int[] rwhat = new int[h];<br>        rwhat[0] = 0;<br>        for (int c = 0; c &lt; w; ++c) {<br>            int get;<br>            for (get = 0; get &lt; 2; ++get) {<br>                if (markDiff(diff, 0, c + h, get)) {<br>                    cwhat[c] = rwhat[0] ^ get;<br>                    break;<br>                }<br>            }<br>            if (get == 2) throw new RuntimeException();<br>        }<br>        for (int r = 1; r &lt; h; ++r) {<br>            int get;<br>            for (get = 0; get &lt; 2; ++get) {<br>                if (markDiff(diff, r, 0 + h, get)) {<br>                    rwhat[r] = get ^ cwhat[0];<br>                    break;<br>                }<br>            }<br>            if (get == 2) throw new RuntimeException();<br>        }<br>        String[] res = new String[h];<br>        for (int i = 0; i &lt; h; ++i) {<br>            StringBuilder b = new StringBuilder();<br>            for (int j = 0 ; j &lt; w; ++j)<br>                b.append("NZ".charAt(rwhat[i] ^ cwhat[j]));<br>            res[i] = b.toString();<br>        }<br>        return res;<br>    }<br> <br>    private boolean markDiff(int[][] diff, int a, int b, int what) {<br>        int n = diff.length;<br>        if (diff[a][b] != UNKNOWN) {<br>            if (diff[a][b] != what) return false;<br>            return true;<br>        }<br>        for (int c = 0; c &lt; n; ++c) if (diff[c][a] != UNKNOWN)<br>            for (int d = 0; d &lt; n; ++d) if (diff[b][d] != UNKNOWN) {<br>                diff[c][d] = diff[d][c] = diff[c][a] ^ diff[b][d] ^ what;<br>            }<br>        return true;<br>    }<br>}<br></td>