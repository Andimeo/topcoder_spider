<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;list&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>using namespace std;<br> <br>#define debug(x)<br> <br>class PastingPaintingDivOne {<br>  public:<br>  vector&lt;long long&gt; countColors(vector &lt;string&gt; clipboard, int T) {<br>        vector&lt;string&gt; grid(105, string(105, '.'));<br>        vector&lt;long long&gt; prev(3), cur(3);<br>        int Y=clipboard.size(), X=clipboard[0].size();<br>        for(int i=0; i&lt;52; i++)<br>        {<br>            for(int y=0; y&lt;Y; y++)<br>                for(int x=0; x&lt;X; x++)<br>                    if(clipboard[y][x]!='.')<br>                        grid[y+i][x+i]=clipboard[y][x];<br>            prev = cur;<br>            cur[0]=cur[1]=cur[2]=0;<br>            for(int y=0; y&lt;105; y++)<br>                for(int x=0; x&lt;105; x++)<br>                    if(grid[y][x]=='R')<br>                        cur[0]++;<br>                    else if(grid[y][x]=='G')<br>                        cur[1]++;<br>                    else if(grid[y][x]=='B')<br>                        cur[2]++;<br>            if(--T == 0)<br>                return cur;<br>        }<br>        vector&lt;long long&gt; res(3);<br>        for(int i=0; i&lt;3; i++){<br>            res[i] = cur[i] + (cur[i]-prev[i])*(long long)T;<br>        }<br>        return res;<br>  }<br> <br> <br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>