<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;map&gt;<br>#include &lt;vector&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;sstream&gt;<br>using namespace std;<br><br>#define MP make_pair<br>#define SS size()<br>#define PB push_back<br>#define ff(a, b) for (int a = 0; a &lt; int(b); ++a)<br>#define f1(a, b) for (int a = 1; a &lt; int(b); ++a)<br>#define ii(n)    ff(i, n)<br>typedef long long LL;<br>typedef pair&lt;int, int&gt; pii;<br><br>#define MOD (0LL)<br><br><br>set&lt;pair&lt;int, int&gt; &gt; black;<br><br>class PastingPaintingDivTwo {<br>public:<br><br>long long countColors(vector &lt;string&gt; clipboard, int T) {<br>    int N = min(55, T);<br>    int last_updated = 0;<br>    ii (N) {<br>        last_updated = 0;<br>        ff (y, clipboard.SS)<br>        ff (x, clipboard[0].SS) {<br>            if (clipboard[y][x] == 'B') {<br>                int ix = x + i;<br>                int iy = y + i;<br><br>                if (black.count(MP(ix, iy)) == 0) {<br>                    ++last_updated;<br>                    black.insert(MP(ix, iy));<br>                }<br>            }<br>        }<br>    }<br>    return black.SS + LL(T - N)*last_updated;<br>}<br>};<br></td>