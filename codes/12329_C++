<td class="problemText" colspan="8" valign="middle" align="left">
            //  SRM 563 (B)<br><br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cassert&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;utility&gt;<br>#include &lt;numeric&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;bitset&gt;<br>#include &lt;complex&gt;<br><br>using namespace std;<br><br>typedef unsigned uint;<br>typedef long long Int;<br>typedef vector&lt;int&gt; vint;<br>typedef pair&lt;int,int&gt; pint;<br>#define mp make_pair<br><br>template&lt;class T&gt; void pv(T a, T b) { for (T i = a; i != b; ++i) cout &lt;&lt; *i &lt;&lt; " "; cout &lt;&lt; endl; }<br>template&lt;class T&gt; void chmin(T &amp;t, T f) { if (t &gt; f) t = f; }<br>template&lt;class T&gt; void chmax(T &amp;t, T f) { if (t &lt; f) t = f; }<br><br>int N;<br>int dp[110];<br><br>struct SpellCards {<br>  <br>  int maxDamage(vector &lt;int&gt; level, vector &lt;int&gt; damage) {<br>    int i, j;<br>    <br>    N = level.size();<br>    for (i = 0; i &lt; N; ++i) {<br>      for (j = N; j &gt;= level[i]; --j) {<br>        chmax(dp[j], dp[j - level[i]] + damage[i]);<br>      }<br>    }<br>    return dp[N];<br>    <br>  }<br>  <br>};<br></td>