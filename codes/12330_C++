<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class CoinsGame {<br>public:<br>  int ways(vector &lt;string&gt;);<br>};<br> <br>const int dx[4] = {1, 0, -1, 0};<br>const int dy[4] = {0, 1, 0, -1};<br>const int md = 1000000009;<br>const int N = 2626262;<br> <br>vector &lt; pair &lt;int, int&gt; &gt; w[44][44][4];<br> <br>char was[44][44][44][44], g[1616][1616];<br> <br>int xa[N], ya[N], xb[N], yb[N];<br>int x[1616];<br>int id[44][44];<br>int wsw[1616];<br> <br>int CoinsGame::ways(vector &lt;string&gt; board) {<br>  int n = board.size(), m = board[0].length(), i, j, ii, jj, d, e;<br>  for (i=0;i&lt;=n;i++)<br>    for (j=0;j&lt;=m;j++)<br>      for (d=0;d&lt;=4;d++) w[i][j][d].clear();<br>  for (i=0;i&lt;n;i++)<br>    for (j=0;j&lt;m;j++)<br>      if (board[i][j] != '#')<br>        for (d=0;d&lt;4;d++) {<br>          int xk = i+dx[d];<br>          int yk = j+dy[d];<br>          if (xk &lt; 0 || yk &lt; 0 || xk &gt;= n || yk &gt;= m) xk = n, yk = m; else<br>          if (board[xk][yk] == '#') xk = i, yk = j;<br>          w[xk][yk][d].push_back(make_pair(i,j));<br>        }<br>  memset(was, 0, sizeof(was));<br>  e = 0;<br>  for (i=0;i&lt;n;i++)<br>    for (j=0;j&lt;m;j++)<br>      if (board[i][j] != '#') {<br>        e++;<br>        xa[e] = i;<br>        ya[e] = j;<br>        xb[e] = n;<br>        yb[e] = m;<br>        was[i][j][n][m] = 1;<br>      }<br>  i = 1;<br>  while (i &lt;= e) {<br>    for (d=0;d&lt;4;d++) {<br>      int sz1 = w[xa[i]][ya[i]][d].size(), sz2 = w[xb[i]][yb[i]][d].size();<br>      for (int p1=0;p1&lt;sz1;p1++)<br>        for (int p2=0;p2&lt;sz2;p2++) {<br>          int xxa = w[xa[i]][ya[i]][d][p1].first;<br>          int yya = w[xa[i]][ya[i]][d][p1].second;<br>          int xxb = w[xb[i]][yb[i]][d][p2].first;<br>          int yyb = w[xb[i]][yb[i]][d][p2].second;<br>          if (!was[xxa][yya][xxb][yyb]) {<br>            e++;<br>            xa[e] = xxa;<br>            ya[e] = yya;<br>            xb[e] = xxb;<br>            yb[e] = yyb;<br>            was[xxa][yya][xxb][yyb] = 1;<br>          }<br>        }<br>    }<br>    i++;<br>  }<br>  int nn = 0;<br>  for (i=0;i&lt;n;i++)<br>    for (j=0;j&lt;m;j++)<br>      if (board[i][j] != '#') id[i][j] = nn++;<br>  for (i=0;i&lt;nn;i++)<br>    for (j=0;j&lt;nn;j++) g[i][j] = 0;<br>  for (i=0;i&lt;n;i++)<br>    for (j=0;j&lt;m;j++)<br>      if (board[i][j] != '#')<br>        for (ii=0;ii&lt;n;ii++)<br>          for (jj=0;jj&lt;m;jj++)<br>            if (board[ii][jj] != '#')<br>              if (!was[i][j][ii][jj] &amp;&amp; !was[ii][jj][i][j]) {<br>                g[id[i][j]][id[ii][jj]] = 1;<br>                g[id[ii][jj]][id[i][j]] = 1;<br>              }<br>  int ans = 1;<br>  for (i=0;i&lt;nn;i++) ans = ans*2 % md;<br>  for (i=0;i&lt;nn;i++) wsw[i] = 0;<br>  for (ii=0;ii&lt;nn;ii++)<br>    if (!wsw[ii]) {<br>      i = 1; e = 1;<br>      x[1] = ii;<br>      wsw[ii] = 1;<br>      while (i &lt;= e) {<br>        for (j=0;j&lt;nn;j++)<br>          if (g[x[i]][j] &amp;&amp; !wsw[j]) {<br>            e++;<br>            x[e] = j;<br>            wsw[j] = 1;<br>          }<br>        i++;<br>      }<br>      int cur = 1;<br>      for (i=0;i&lt;e;i++) cur = cur*2 % md;<br>      cur = (cur+md-1) % md;<br>      ans = (ans-cur) % md;<br>    }<br>  ans = (ans+md-1) % md;<br>  return ans;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>