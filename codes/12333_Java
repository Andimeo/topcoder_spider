<td class="problemText" colspan="8" valign="middle" align="left">
            // BEGIN CUT HERE<br><br>// END CUT HERE<br><br>public class SpellCardsEasy {<br><br>  int[] l;<br>  int[] d;<br>  int n;<br><br>  public int maxDamage( final int[] level, final int[] damage ) {<br>    this.l = level;<br>    this.d = damage;<br><br>    this.n = level.length;<br><br>    return this.dp( this.n, 0 );<br>  }<br><br>  Integer cache[][] = new Integer[60][60];<br><br>  private int dp( final int cnt, final int after ) {<br>    if ( cnt == 0 || after &lt; 0 ) {<br>      return 0;<br>    }<br>    if ( this.cache[ cnt ][ after ] != null ) {<br>      return this.cache[ cnt ][ after ];<br>    }<br>    int max = 0;<br>    for ( int i = cnt - 1; i &gt;= 0; --i ) {<br>      final int nafter = after + cnt - i - this.l[ i ];<br>      final int tmp = ( nafter &gt;= 0 ) ? this.d[ i ] + this.dp( i, nafter ) : 0;<br>      if ( tmp &gt; max ) {<br>        max = tmp;<br>      }<br>    }<br>    this.cache[ cnt ][ after ] = max;<br>    return max;<br>  }<br>  }<br></td>