<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cmath&gt;<br>#include &lt;sstream&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;functional&gt;<br>using namespace std;<br>#define pb push_back<br>#define INF 1000000000<br>#define L(s) (int)((s).size())<br>#define FOR(i,a,b) for (int _n(b), i(a); i &lt;= _n; i++)<br>#define rep(i,n) FOR(i,1,(n))<br>#define rept(i,n) FOR(i,0,(n)-1)<br>#define C(a) memset((a),0,sizeof(a))<br>#define ll long long<br>#define SORT(c) sort(all(c))<br>#define VI vector&lt;int&gt;<br>#define MOD 1000000007<br><br>int f[351], g[351], mem[351], tmp[351];<br><br>int n;<br>inline void mul(int *a, int *b) {<br>  C(tmp);<br>  rept(i, n) {<br>    int cur = 0;<br>    rept(j, n) {<br>      cur = (cur + (ll)a[j] * b[(i - j + n) % n]) % MOD;<br>    }<br>    tmp[i] = cur;<br>  }<br>  rept(i, n) a[i] = tmp[i];<br>}<br>class PenguinEmperor <br>  {<br>    public:<br>       int countJourneys( int n, long long daysPassed )<br>    {<br>      //if (n != 4 || daysPassed != 3) return -1;<br>      ::n = n;<br>      C(f);<br>      f[0] = 1;<br>      rep(h, n) {<br>        C(g);<br>        rept(i, n) {<br>          g[i] = f[(i - h + n) % n];<br>          if ((i + h) % n != (i - h + n) % n) {<br>            g[i] = (g[i] + f[(i + h) % n]) % MOD;<br>          }<br>        }<br>        memmove(f, g, sizeof(g));<br>      }<br><br>      memmove(mem, f, sizeof(f));<br>      <br>      ll st = daysPassed / n;<br>      C(f);<br>      f[0] = 1;<br>      memmove(g, mem, sizeof(g));<br>      while (st) {<br>        if (st % 2) mul(f, g);<br>        mul(g, g);<br>        st /= 2;<br>      }<br><br>      int rem = daysPassed % n;<br>      rep(h, rem) {<br>        C(g);<br>        rept(i, n) {<br>          g[i] = f[(i - h + n) % n];<br>          if ((i + h) % n != (i - h + n) % n) {<br>            g[i] = (g[i] + f[(i + h) % n]) % MOD;<br>          }<br>        }<br>        memmove(f, g, sizeof(g));<br>      }<br><br>      return f[0];<br>    }<br>  };<br><br><br><br>// Powered by FileEdit<br>// Powered by moj 4.17 [modified TZTester]<br>// Powered by CodeProcessor<br></td>