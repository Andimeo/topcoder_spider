<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> */<br>public class PenguinEmperor {<br>    static final int MODULO = (int) (1e9 + 7);<br>    <br>  public int countJourneys(int numCities, long daysPassed) {<br>        int[] fullPeriod = unit(numCities);<br>        int[] extra = unit(numCities);<br>        for (int by = 1; by &lt;= numCities; ++by) {<br>            int[] cj = getJump(numCities, by);<br>            fullPeriod = mul(cj, fullPeriod);<br>            if (by &lt;= daysPassed % numCities) {<br>                extra = mul(cj, extra);<br>            }<br>        }<br>        int[] ans = mul(extra, pow(fullPeriod, daysPassed / numCities));<br>        return ans[0];<br>  }<br> <br>    private int[] getJump(int numCities, int by) {<br>        int[] res = new int[numCities];<br>        res[by % numCities] = 1;<br>        res[(numCities - by) % numCities] = 1;<br>        return res;<br>    }<br> <br>    private int[] pow(int[] a, long k) {<br>        int n = a.length;<br>        if (k == 0)<br>            return unit(n);<br>        if (k % 2 == 0) {<br>            return pow(mul(a, a), k / 2);<br>        } else {<br>            return mul(a, pow(a, k - 1));<br>        }<br>    }<br> <br>    private int[] mul(int[] a, int[] b) {<br>        int n = a.length;<br>        int[] c = new int[n];<br>        for (int i = 0; i &lt; n; ++i) {<br>            long z = 0;<br>            int j = i;<br>            for (int k = 0; k &lt; n; ++k) {<br>                z += a[k] * (long) b[j];<br>                if (z &gt;= 7e18) z %= MODULO;<br>                --j;<br>                if (j &lt; 0)<br>                    j = n - 1;<br>            }<br>            c[i] = (int) (z % MODULO);<br>        }<br>        return c;<br>    }<br> <br>    private int[] unit(int n) {<br>        int[] r = new int[n];<br>        r[0] = 1;<br>        return r;<br>    }<br>}<br></td>