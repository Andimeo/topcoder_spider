<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define ALL(v) (v).begin(),(v).end()<br>#define RALL(v) (v).rbegin(),(v).rend()<br>#define UNIQ(v) sort(ALL(v)),v.erase(unique(ALL(v)),(v).end())<br> <br>class AlternateColors {<br>public:<br>  string getColor(long long, long long, long long, long long);<br>};<br> <br>string AlternateColors::getColor(long long r, long long g, long long b, long long k) <br>{<br>  vector&lt; pair&lt;long long, string&gt; &gt; v;<br>  v.push_back(make_pair(r, "RED"));<br>  v.push_back(make_pair(g, "GREEN"));<br>  v.push_back(make_pair(b, "BLUE"));<br>  <br>  --k;<br>  while (k &gt;= v.size())<br>  {<br>    long long d = k / v.size();<br>    d = min(d, min_element(ALL(v))-&gt;first);<br>    for (size_t i = 0; i &lt; v.size(); ++i)<br>      v[i].first -= d;<br>    k -= d * v.size();<br>    vector&lt; pair&lt;long long, string&gt; &gt;:: iterator it;<br>    while (!(it = min_element(ALL(v)))-&gt;first)<br>      v.erase(it);<br>  }<br>  return v[k].second;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>