<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Collections;<br>using System.Diagnostics;<br>using System.Collections.Generic;<br>public class AlternateColors2<br>{<br>    public long countWays(int n, int k)<br>    {<br>        long res = 0;<br>        for (int t = 1; t &lt;= k; t++)<br>        {<br>            int rem; int x;<br>            if (3 * t - 2 == k)<br>            {<br>                rem = n - 3 * t + 2;<br>                if (rem &gt;= 0)<br>                    res += Comb(rem + 2, 2);<br>            }<br><br>            x = k - 2 * t + 1;<br>            if (t - 1 &gt; x &amp;&amp; x &gt;= 0)<br>            {<br>                rem = n - t - (t - 1) - x;<br>                if (rem &gt;= 0)<br>                    res += 2 * Comb(rem + 1, 1);<br>            }<br><br>            x = k - t;<br>            if (x &lt;= t - 2)<br>            {<br>                res += x + 1;<br>            }<br>            else if (x &lt;= 2 * (t - 2))<br>            {<br>                x -= 2 * (x - (t - 2));<br>                if (x &gt;= 0)<br>                    res += x + 1;<br>            }<br>            else<br>                res += 0;<br><br>        }//for t<br><br>        return res;<br>    }<br><br>    /// &lt;summary&gt;<br>    /// Combination[\u12398][\u35336][\u31639]<br>    /// //O( Max(n-k,k) )<br>    /// &lt;/summary&gt;<br>    /// &lt;param name="n"&gt;[\u36984][\u12409][\u12427][\u20491][\u25968]&lt;/param&gt;<br>    /// &lt;param name="k"&gt;[\u36984][\u12406][\u20491][\u25968]&lt;/param&gt;<br>    /// &lt;returns&gt;[\u23384][\u22312][\u12375][\u12394][\u12369][\u12428][\u12400][\u65296]&lt;/returns&gt;<br>    public static long Comb(int n, int k)<br>    {<br>        if (n &lt; k || k &lt; 0) return 0;  //combination is not defined<br>        long res = 1;<br>        int min = Math.Min(k, n - k);<br>        for (int i = 0; i &lt; min; i++)<br>            res = res * (n - i) / (i + 1);<br>        return res;<br>    }//Comb<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] Modified for C# by ysn<br>// Powered by CodeProcessor<br></td>