<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> */<br>public class RockPaperScissors {<br>    public double bestScore(int[] rockProb, int[] paperProb, int[] scissorsProb) {<br>        int n = rockProb.length;<br>        double[][][][] prWith = new double[n + 1][n + 1][][];<br>        for (int with = 0; with &lt;= n; ++with) {<br>            for (int a = 0; a &lt;= n; ++a) {<br>                prWith[with][a] = new double[n + 1 - a][];<br>                for (int b = 0; a + b &lt;= n; ++b)<br>                    prWith[with][a][b] = new double[n + 1 - a - b];<br>            }<br>            int count = 0;<br>            prWith[with][0][0][0] = 1.0;<br>            for (int i = 0; i &lt; n; ++i) {<br>                if (i == with) continue;<br>                double pa = rockProb[i] / 300.0;<br>                double pb = paperProb[i] / 300.0;<br>                double pc = scissorsProb[i] / 300.0;<br>                for (int a = count; a &gt;= 0; --a)<br>                    for (int b = count - a; b &gt;= 0; --b)<br>                        for (int c = count - a - b; c &gt;= 0; --c) {<br>                            double old = prWith[with][a][b][c];<br>                            prWith[with][a + 1][b][c] += old * pa;<br>                            prWith[with][a][b + 1][c] += old * pb;<br>                            prWith[with][a][b][c + 1] += old * pc;<br>                        }<br>                ++count;<br>            }<br>        }<br>        double[] pSum = new double[n + 1];<br>        for (int a = n - 1; a &gt;= 0; --a)<br>            for (int b = n - 1 - a; b &gt;= 0; --b)<br>                for (int c = n - 1 - a - b; c &gt;= 0; --c) {<br>                    pSum[a + b + c] += prWith[n][a][b][c];<br>                }<br>        double res = 0.0;<br>        for (int a = n - 1; a &gt;= 0; --a)<br>            for (int b = n - 1 - a; b &gt;= 0; --b)<br>                for (int c = n - 1 - a - b; c &gt;= 0; --c) {<br>                    double ea = 0.0;<br>                    double eb = 0.0;<br>                    double ec = 0.0;<br>                    double prTotal = prWith[n][a][b][c];<br>                    if (prTotal == 0.0) continue;<br>                    for (int i = 0; i &lt; n; ++i) {<br>                        double prCur = prWith[i][a][b][c] / prTotal;<br>                        ea += prCur * (rockProb[i] + 3 * scissorsProb[i]);<br>                        eb += prCur * (paperProb[i] + 3 * rockProb[i]);<br>                        ec += prCur * (scissorsProb[i] + 3 * paperProb[i]);<br> <br>                    }<br>                    double got = Math.max(ea, Math.max(eb, ec)) / (n - a - b - c);<br>                    res += got * prTotal / pSum[a + b + c];<br>                }<br>        return res / 300.0;<br>    }<br>}<br></td>