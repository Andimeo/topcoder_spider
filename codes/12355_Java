<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br><br>public class PenguinPals {<br>  int[][] dp;<br>   public int findMaximumMatching(String colors) {<br>     dp = new int[100][100];<br>     for(int i = 0; i &lt; dp.length; i++)<br>       Arrays.fill(dp[i], -1);<br>     <br>     int ans = solve(colors.toCharArray(), 0, colors.length() - 1);<br>     return ans;<br>   }<br><br>private int solve(char[] colors, int start, int end) {<br>  if(start &gt;= end)<br>    return 0;<br>  <br>  if(dp[start][end] != -1)<br>    return dp[start][end];<br>  <br>  int max = 0;<br>  for(int i = start; i &lt;= end; i++)<br>    for(int j = i + 1; j &lt;= end; j++)<br>      if(colors[i] == colors[j])<br>        max = Math.max(max, 1 + solve(colors, i+1, j - 1) + solve(colors, j+1, end));<br><br>  return dp[start][end] = max;<br>}<br><br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by moj 4.16 [modified TZTester]<br>// Powered by CodeProcessor<br></td>