<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class TheSquareRootDilemma {<br>public:<br>  int countPairs(int, int);<br>};<br> <br>int nleft[101000];<br>int nright[101000];<br> <br>int TheSquareRootDilemma::countPairs(int N, int M) {<br>  for (int i = 0; i &lt; 101000; i++)<br>    nleft[i] = nright[i] = 0;<br>  <br>  for (int i = 1; i &lt;= N; i++)<br>  {<br>    int temp = i;<br>    for (int j = 2; j * j &lt;= i; j++)<br>      while (temp % (j * j) == 0)<br>        temp /= j * j;<br>    nleft[temp]++;<br>  }<br>  for (int i = 1; i &lt;= M; i++)<br>  {<br>    int temp = i;<br>    for (int j = 2; j * j &lt;= i; j++)<br>      while (temp % (j * j) == 0)<br>        temp /= j * j;<br>    nright[temp]++;<br>  }<br>  <br>  int ans = 0;<br>  for (int i = 1; i &lt;= 100000; i++)<br>    ans += nleft[i] * nright[i];<br>  return ans;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>