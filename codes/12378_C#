<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class StringGame<br>{<br>  public int[] getWinningStrings( string[] s )<br>  {<br>    List&lt;int&gt; ans = new List&lt;int&gt;();<br>    int n = s.Length;<br><br>    int[,] cnt = new int[n, 26];<br><br>    for ( int i = 0; i &lt; n; ++i )<br>      for ( int j = 0; j &lt; s[i].Length; ++j ) ++cnt[i, s[i][j] - 'a'];<br><br>    for ( int i = 0; i &lt; n; ++i )<br>    {<br>      bool[] dead = new bool[n];<br>      dead[i] = true;<br>      bool[] used = new bool[26];<br>      int left = n - 1;<br>      bool canWin = false;<br>      while ( left &gt; 0 &amp;&amp; !canWin )<br>      {<br>        for ( int c = 0; c &lt; 26; ++c )<br>        {<br>          if ( used[c] ) continue;<br>          bool win = true;<br>          for ( int j = 0; j &lt; n; ++j )<br>            if ( !dead[j] &amp;&amp; cnt[j, c] &gt;= cnt[i, c] )<br>            {<br>              win = false;<br>              break;<br>            }<br>          if ( win )<br>          {<br>            canWin = true;<br>            break;<br>          }<br>        }<br>        List&lt;int&gt; draw = new List&lt;int&gt;();<br>        for ( int c = 0; c &lt; 26; ++c )<br>        {<br>          if ( used[c] ) continue;<br>          bool win = true;<br>          for ( int j = 0; j &lt; n; ++j )<br>            if ( !dead[j] &amp;&amp; cnt[j, c] &gt; cnt[i, c] )<br>            {<br>              win = false;<br>              break;<br>            }<br>          if ( win )<br>          {<br>            draw.Add( c );<br>          }<br>        }<br><br>        if ( draw.Count == 0 ) break;<br><br>        foreach ( int c in draw )<br>        {<br>          used[c] = true;<br>          for ( int j = 0; j &lt; n; ++j )<br>            if ( !dead[j] &amp;&amp; cnt[j, c] &lt; cnt[i, c] )<br>            {<br>              dead[j] = true;<br>              --left;<br>            }<br>        }<br>      }<br>      if ( canWin || left == 0 ) ans.Add( i );<br>    }<br><br>    return ans.ToArray();<br>  }<br><br>}<br><br><br> <br>// Powered by moj 4.16 [modified TZTester]<br>// Powered by CleanSharp 1.0<br>// Powered by CodeProcessor<br></td>