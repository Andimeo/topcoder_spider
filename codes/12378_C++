<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;cstring&gt;<br> <br>using namespace std;<br> <br>int num[60][60];<br>bool use[60],die[60];<br> <br>class StringGame {<br>public:<br>  vector &lt;int&gt; getWinningStrings(vector &lt;string&gt; S) <br>  {<br>    vector &lt;int&gt; ans;<br>    ans.clear();<br>    memset(num,0,sizeof(num));<br>    int n=S.size(),m=S[0].size();<br>    for (int i=0;i&lt;n;++i)<br>      for (int j=0;j&lt;m;++j)<br>        ++num[i][S[i][j]-'a'];<br>    for (int i=0;i&lt;n;++i)<br>    {<br>      bool flag=true;<br>      memset(use,false,sizeof(use));<br>      memset(die,false,sizeof(die));<br>      die[i]=true;<br>      for (int rest=n-1;flag &amp;&amp; rest&gt;0;)<br>      {<br>        bool good=false;<br>        for (int j=0;j&lt;26;++j)<br>          if (!use[j] &amp;&amp; num[i][j]&gt;0)<br>          {<br>            bool mark=true;<br>            for (int k=0;k&lt;n;++k)<br>              if (!die[k] &amp;&amp; num[k][j]&gt;num[i][j])<br>              {<br>                mark=false;<br>                break;<br>              }<br>            if (mark)<br>            {<br>              for (int k=0;k&lt;n;++k)<br>                if (!die[k] &amp;&amp; num[k][j]&lt;num[i][j])<br>                {<br>                  die[k]=true;<br>                  --rest;<br>                }<br>              use[j]=true;<br>              good=true;<br>              break;<br>            }<br>          }<br>        if (!good) flag=false;<br>      }<br>      if (flag) ans.push_back(i);<br>    }<br>    <br>    return ans;<br>  }<br>};<br> <br> <br> <br>//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!<br></td>