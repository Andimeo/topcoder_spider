<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;algorithm&gt;<br>#include&lt;cassert&gt;<br>#include&lt;complex&gt;<br>#include&lt;cstdio&gt;<br>#include&lt;cstring&gt;<br>#include&lt;iostream&gt;<br>#include&lt;map&gt;<br>#include&lt;queue&gt;<br>#include&lt;set&gt;<br>#include&lt;sstream&gt;<br>#include&lt;stack&gt;<br>#include&lt;string&gt;<br>#include&lt;vector&gt;<br>#define FORD(i,a,b) for(int i=(a);i&gt;=(b);--i)<br>#define REP(i,n) for(int i=0;i&lt;(n);++i)<br>#define FORE(i,c) for(__typeof(c.begin()) i=(c).begin();i!=(c).end();++i)<br>#define SZ(x) ((int)(x).size())<br>#define FI first<br>#define SE second<br> <br>using namespace std;<br>typedef long long LL;<br> <br>const int M = 1000*1000*1000+9;<br>map&lt;vector&lt;int&gt; ,int&gt; states[11];<br> <br>class Mountains {<br>    public:<br>        int countPlacements(vector &lt;int&gt; heights, vector &lt;string&gt; visibility) {<br>            int k = SZ(heights);<br>            REP(i, k+1) states[i].clear();<br>            int w = SZ(visibility[0]);<br>            states[k][vector&lt;int&gt;(w, 0)] = 1;<br>            FORD(s, k-1, 0) {<br>                int h = heights[s];<br>                FORE(it, states[s+1]) {<br>                    vector&lt;int&gt; st = it-&gt;FI;<br>                    vector&lt;int&gt; st2 = st;<br>                    LL cnt = it-&gt;SE;<br> <br>                    REP(i, w) {<br>                        int ok = true;<br>                        REP(j, w) {<br>                            st2[j] = max(st[j], h-abs(j-i));<br>                            if ((visibility[s][j] == 'X') ^ (st2[j] &gt; st[j])) {<br>                                ok = false;<br>                                break;<br>                            }<br>                        }<br>                        if (ok) states[s][st2] = (states[s][st2] + cnt) % M;<br>                    }<br>                }<br>            }<br>            int res = 0;<br>            FORE(it, states[0]) {<br>                res = (res + it-&gt;SE) % M;<br>            }<br>            return res;<br> <br>        }<br> <br>};<br> <br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.17 [modified TZTester]<br> <br>// Powered by CodeProcessor<br></td>