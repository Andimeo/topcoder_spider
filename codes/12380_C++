<td class="problemText" colspan="8" valign="middle" align="left">
            #line 5 "MountainsEasy.cpp"<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;iostream&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;ctime&gt;<br>using namespace std;<br><br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br>typedef vector&lt;double&gt; VD;<br>typedef pair&lt;int,int&gt; PII;<br>#define For(i,n) for(int i=0;i&lt;n;i++)<br>#define sz(i) int(i.size())<br>#define mst(i,n) memset(i,n,sizeof(i))<br>#define eps 1e-11<br>#define MOD 1000000009<br>#define LL long long<br>#define pi acos(-1)<br>#define ALL(n) n.begin(),n.end()<br>#define pb push_back<br>#define mp make_pair<br>#define iFor(i,n) for(typeof(n.begin()) i=n.begin();i!=n.end();i++)<br><br>void ele(vector &lt;string&gt; &amp;p,int i,int s,int t){<br>    int n = sz(p), m=sz(p[0]);<br>    if(i&gt;=n) return;<br>    for(int j=max(s,0);j&lt;min(m,t);j++)<br>        p[i][j]='.';<br>    ele(p,i+1,s-1,t+1);<br>}<br>LL dp[55][55]={};<br>class MountainsEasy<br>{<br>        public:<br>        int countPlacements(vector &lt;string&gt; p, int N)<br>        {<br>            int n = sz(p),m=sz(p[0]);<br>            int t = 0;<br>            int s = 0;<br>            For(i,n)<br>                For(j,m) if(p[i][j]!='.') s++;<br>            For(i,n)<br>                For(j,m) if(p[i][j]!='.') ele(p,i,j,j+1),t++;<br>            if(t&gt;N) return 0;<br>            dp[0][0]=1;<br><br>            For(i,N)<br>            For(j,i+1)if(dp[i][j]){<br>                dp[i][j] %= MOD;<br>                if(j&lt;t) dp[i+1][j+1] += dp[i][j]*(t - j);<br>                dp[i+1][j] += dp[i][j] * (s - j);<br>            }<br>            return dp[N][t]%MOD;<br>        }<br><br><br>};<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>