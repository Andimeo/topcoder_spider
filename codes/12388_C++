<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>using namespace std;<br> <br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br>typedef pair&lt;int, int&gt; II;<br>typedef long long LL;<br>#define FOR(i,b,e) for(int (i)=(int)b;(i)&lt;(int)(e);++(i))<br>#define FORIT(it,c) for(typedef((c).begin()) it=(c).begin();it!=(c).end();++it)<br>#define INF 987654321<br> <br>class TheDevice {<br>  public:<br>  int minimumAdditional(vector &lt;string&gt; plates) {<br>    int ans = 0;<br>    for (int i = 0; i &lt; plates[0].length(); i ++) {<br>      int countOne = 0, countZero = 0, tmpAns = 0;<br>      for (int j = 0; j &lt; plates.size(); j ++) {<br>        if (plates[j][i] == '1') countOne ++;<br>        else countZero ++;<br>      }<br>      <br>      if (countZero &lt;= 0) tmpAns ++;<br>      <br>      if (countOne &lt; 2) tmpAns += (2 - countOne);<br>      <br>      ans = max(ans, tmpAns);<br>    }<br>    <br>    return ans;<br>  }<br>  <br>  <br> <br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>