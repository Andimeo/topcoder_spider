<td class="problemText" colspan="8" valign="middle" align="left">
            using System.Collections.Generic;<br><br>public class EllysReversals<br>{<br>  private bool canMatch( string s1, string s2 )<br>  {<br>    if( s1.Length != s2.Length )<br>      return false;<br>    if( s1.Length % 2 == 1 &amp;&amp; s1[s1.Length - 1] != s2[s2.Length - 1] )<br>      return false;<br>    List&lt;string&gt; p1 = new List&lt;string&gt;();<br>    List&lt;string&gt; p2 = new List&lt;string&gt;();<br>    for( int i = 0; i &lt; s1.Length - 1; i += 2 )<br>    {<br>      string w1 = s1.Substring( i, 2 );<br>      if( w1[0] &gt; w1[1] ) w1 = string.Format( "{0}{1}", w1[1], w1[0] );<br>      string w2 = s2.Substring( i, 2 );<br>      if( w2[0] &gt; w2[1] ) w2 = string.Format( "{0}{1}", w2[1], w2[0] );<br>      p1.Add( w1 );<br>      p2.Add( w2 );<br>    }<br>    p1.Sort();<br>    p2.Sort();<br>    for( int i = 0; i &lt; p1.Count; ++i )<br>      if( p1[i] != p2[i] )<br>        return false;<br>   return true;<br>  }<br>  <br>  public int getMin( string[] dict )<br>  {<br>    bool[] gone = new bool[dict.Length];<br>    for( int i = 0; i &lt; gone.Length; ++i ) gone[i] = false;<br>    for( int i = 0; i &lt; gone.Length; ++i )<br>      if( !gone[i] )<br>        for( int j = i + 1; j &lt; gone.Length; ++j )<br>          if( !gone[j] &amp;&amp; canMatch( dict[i], dict[j] ) )<br>          {<br>            gone[i] = true;<br>            gone[j] = true;<br>            break;<br>          }<br>   int r = 0;<br>   for( int i = 0; i &lt; gone.Length; ++i )<br>     if( !gone[i] )<br>       ++r;<br>  return r;<br>  }<br>}<br></td>