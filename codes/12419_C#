<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Text.RegularExpressions;<br>using System.Collections;<br><br>public class LISNumber {<br>    long get(long n,  long m, long[,] C)<br>    {<br>        if (m &lt; 0 || m &gt; n) return 0;<br>        return C[n, m];<br>    }<br>    public int count(int[] cardsnum, int K) {<br>        long MOD = 1000000007;<br>        long[,] C = new long[2000, 2000];<br>        C[0,0] = 1;<br>        for(int i=1;i&lt;2000;i++)<br>        {<br>            C[i,0] = C[i,i] = 1;<br>            for(int j=1;j&lt;i;j++)<br>            {<br>                C[i,j] = (C[i-1,j-1]+C[i-1,j]) % MOD;<br>            }<br>        }<br>        long[,] dp = new long[50, 2000];<br>        dp[0, cardsnum[0]] = 1;<br>        long sum = cardsnum[0];<br>        for (int i = 1; i &lt; cardsnum.Length; i++)<br>        {<br>            for (int j = 0; j &lt;= sum; j++)<br>            {<br>                long p0 = j, p1 = sum + 1 - p0;<br>                for (int k0 = 0; k0 &lt;= cardsnum[i]; k0++)<br>                {<br>                    for (int k1 = 0; k1 &lt;= cardsnum[i]; k1++)<br>                    {<br>                        if (k0 + k1 &gt; cardsnum[i]) break;<br>                        long R0 = get(p0, k0,C);<br>                        long R1 = get(p1, k1,C);<br>                        long t = cardsnum[i] - k0 - k1;<br>                        long R2 = get(cardsnum[i] - 1, t, C);<br>                        long R = (R0 * R1) % MOD * R2 % MOD;<br>                        dp[i, j + cardsnum[i] - k0] += dp[i - 1, j] * R % MOD;<br>                        dp[i, j + cardsnum[i] - k0] %= MOD;<br>                    }<br>                }<br>            }<br>            sum += cardsnum[i];<br>        }<br><br>        int res = 0;<br>        return (int)dp[cardsnum.Length - 1, K];<br>    }<br><br><br>}<br></td>