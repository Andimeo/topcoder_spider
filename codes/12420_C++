<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class EllysBulls {<br>public:<br>  string getNumber(vector &lt;string&gt;, vector &lt;int&gt;);<br>};<br> <br>int p[10], digits[10];<br>map &lt; vector &lt; int &gt;, vector &lt; int &gt; &gt; M;<br> <br>string EllysBulls::getNumber(vector &lt;string&gt; guesses, vector &lt;int&gt; bulls) {<br>  int k = guesses[0].size();<br>  int n = guesses.size();<br> <br>  int k1 = k / 2;<br>  int k2 = k - k1;<br> <br>  p[0] = 1;<br>  for (int i = 1; i &lt; 10; ++i) {<br>    p[i] = p[i - 1] * 10;<br>  }<br> <br>  M.clear();<br> <br>  for (int i = 0; i &lt; p[k1]; ++i) {<br>    vector &lt; int &gt; a(n, 0);<br>    int x = i;<br>    for (int j = 0; j &lt; k1; ++j) {<br>      digits[j] = x % 10;<br>      x /= 10;<br>    }<br>    reverse(digits, digits + k1);<br>    for (int j = 0; j &lt; n; ++j) {<br>      for (int l = 0; l &lt; k1; ++l) {<br>        if (guesses[j][l] == digits[l] + '0') {<br>          ++a[j];<br>        }<br>      }<br>    }<br>    M[a].push_back(i);<br>  }<br> <br>  set &lt; int &gt; S;<br>  for (int i = 0; i &lt; p[k2]; ++i) {<br>    if (i == 172) {<br>      int x = 0;<br>    }<br>    vector &lt; int &gt; a = bulls;<br>    int x = i;<br>    for (int j = 0; j &lt; k2; ++j) {<br>      digits[j] = x % 10;<br>      x /= 10;<br>    }<br>    reverse(digits, digits + k2);<br> <br>    bool nice = true;<br>    for (int j = 0; j &lt; n; ++j) {<br>      for (int l = k1; l &lt; k; ++l) {<br>        if (guesses[j][l] == digits[l - k1] + '0') {<br>          --a[j];<br>        }<br>      }<br>      if (a[j] &lt; 0) {<br>        nice = false;<br>      }<br>    }<br>    if (!nice) {<br>      continue;<br>    }<br> <br>    if (M.count(a) != 0) {<br>      if (S.size() &gt; 1) {<br>        break;<br>      }<br>      vector &lt; int &gt; b = M[a];<br>      for (int j = 0; j &lt; b.size(); ++j) {<br>        S.insert(b[j] * p[k2] + i);<br>        if (S.size() &gt; 1) {<br>          break;<br>        }<br>      }<br>      if (S.size() &gt; 1) {<br>        break;<br>      }<br>    }<br>  }<br> <br>  if (S.size() == 1) {<br>    int x = * S.begin();<br>    string res = "";<br>    for (int i = 0; i &lt; k; ++i) {<br>      res += x % 10 + '0';<br>      x /= 10;<br>    }<br>    reverse(res.begin(), res.end());<br>    return res;<br>  }<br> <br>  if (S.size() == 0) {<br>    return "Liar";<br>  }<br> <br>  return "Ambiguity";<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>