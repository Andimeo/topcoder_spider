<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class CentaurCompany {<br>    bool[] check;<br><br>    int start = 100;<br>    int limit = 200;<br>    int N;<br>    List&lt;int&gt;[] l;<br><br>    public double getvalue(int[] a, int[] b)<br>    {<br>        N = a.Length + 1;<br>        check = new bool[N];<br>        l = new List&lt;int&gt;[N];<br>        for (int i = 0; i &lt; N; i++)<br>        {<br>            l[i] = new List&lt;int&gt;();<br>        }<br><br>        for (int i = 0; i &lt; a.Length; i++)<br>        {<br>            a[i]--; b[i]--;<br>        }<br>        for (int i = 0; i &lt; a.Length; i++)<br>        {<br>            l[a[i]].Add(b[i]);<br>            l[b[i]].Add(a[i]);<br>        }<br><br>        double ret = 0;<br>        long[,] r = getnum(0);<br>        for (int i = 0; i &lt; 2; i++)<br>        {<br>            for (int j = 0; j &lt; limit; j++)<br>            {<br>                ret += Math.Max(0, j - start - 2) * r[i, j];<br>            }<br>        }<br>        <br>        for (int i = 0; i &lt; N; i++)<br>        {<br>            ret /= 2;<br>        }<br>        return ret * 2;<br>    }<br><br>    long[,] getnum(int a)<br>    {<br>        long[,] ret = new long[2, limit];<br>        ret[0, start + 1] = 1;<br>        ret[1, start] = 1;<br>        check[a] = true;<br>        foreach (int item in l[a])<br>        {<br>            //Console.WriteLine(a + " to " + item);<br>            if (check[item]) continue;<br>            long[,] r = getnum(item);<br>            long[,] nextret = new long[2, limit];<br>            for (int i = 0; i &lt; 2; i++)<br>            {<br>                for (int p = 0; p &lt; limit; p++)<br>                {<br>                    if (ret[i, p] == 0) continue;<br>                    for (int j = 0; j &lt; 2; j++)<br>                    {<br>                        for (int q = 0; q &lt; limit; q++)<br>                        {<br>                            if (r[j, q] == 0) continue;<br>                            long nextsum = ret[i, p] * r[j, q];<br>                            int next = p + q - start;<br>                            if (i == 0 &amp;&amp; j == 0) next -= 2;<br>                            nextret[i, next] += nextsum;<br>                        }<br>                    }<br>                }<br>                <br>            }<br>            ret = nextret;<br>        }<br>        return ret;<br>    }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] Modified for C# by ysn<br>// Powered by CodeProcessor<br></td>