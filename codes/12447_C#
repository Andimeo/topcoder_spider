<td class="problemText" colspan="8" valign="middle" align="left">
            using System.Collections.Generic;<br><br>public class EllysFigurines<br>{<br>  public int getMoves( string[] board, int R, int C )<br>  {<br>    int best = -1;<br>    int m = 1;<br>    for( int i = 0; i &lt; board.Length; ++i ) m *= 2;<br>    for( int i = 0; i &lt; m; ++i )<br>    {<br>      List&lt;int&gt; rowstaken = new List&lt;int&gt;();<br>      List&lt;string&gt; rowsleft = new List&lt;string&gt;();<br>      int t = i;<br>      for( int j = 0; j &lt; board.Length; ++j )<br>      {<br>        if( t % 2 == 0 )<br>        {<br>          rowsleft.Add( board[j] );<br>        }<br>        else<br>        {<br>          rowstaken.Add( j );<br>        }<br>        t /= 2;<br>      }<br>      bool[] colsleft = new bool[board[0].Length];<br>      for( int c = 0; c &lt; board[0].Length; ++c )<br>        colsleft[c] = false;<br>      foreach( string s in rowsleft )<br>        for( int c = 0; c &lt; s.Length; ++c )<br>          if( s[c] == 'X' ) colsleft[c] = true;<br>      int totmoves = 0;<br>      for( int c = 0; c &lt; colsleft.Length; ++c )<br>        if( colsleft[c] )<br>        {<br>          totmoves++;<br>          c += ( C - 1 );<br>        }<br>      for( int r = 0; r &lt; board.Length; ++r )<br>        if( rowstaken.Contains( r ) )<br>        {<br>          totmoves++;<br>          r += ( R - 1 );<br>        }<br>      if( best == -1 || totmoves &lt; best ) best = totmoves;<br>    }<br>    return best;<br>  }<br>}<br></td>