<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>class EllysFigurines<br>{<br>private:<br>  int cal_moves(int this_bits,int n,int R)<br>  {<br>    int count = 0;<br>    for(int i=0;i&lt;n;i++)<br>    {<br>      if( ((1&lt;&lt;i)&amp;this_bits) != 0 )<br>      {<br>        i += R-1;<br>        count++;<br>      }<br>    }<br>    return count;<br>  }<br>public:<br>  int getMoves(vector &lt;string&gt; s, int R, int C)<br>  {<br>    int n = s.size(), m = s[0].size();<br>    int min_moves = n + m;<br>    int max_bits = 1&lt;&lt;n;<br>    for(int i = 0;i &lt; max_bits;i++)<br>    {<br>      int col_bits = 0;<br>      for(int j = 0;j &lt; n;j++)<br>      {<br>        if( ((1&lt;&lt;j) &amp; i) != 0 ) continue;<br>        for(int k = 0;k &lt; m;k++)<br>        {<br>          if('X' == s[j][k]) <br>          {<br>            col_bits |= (1&lt;&lt;k);<br>          }<br>        }<br>      }<br>      int this_moves = cal_moves(i,n,R) + cal_moves(col_bits,m,C);<br>      min_moves = min_moves &lt; this_moves ? min_moves : this_moves;<br>    }<br>    return min_moves;<br>  }<br>};<br></td>