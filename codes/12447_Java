<td class="problemText" colspan="8" valign="middle" align="left">
            import static java.lang.Math.min;<br> <br>public class EllysFigurines {<br>  public int getMoves(String[] board, int R, int C) {<br>    int n = board.length;<br>    int m = board[0].length();<br>    int[] grid = new int[n];<br>    for (int i = 0; i &lt; n; i++) {<br>      for (int j = 0; j &lt; m; j++) {<br>        if (board[i].charAt(j) != '.') {<br>          grid[i] |= 1 &lt;&lt; j;<br>        }<br>      }<br>    }<br>    int bestRes = Integer.MAX_VALUE;<br>    for (int killRows = 0; killRows &lt; 1 &lt;&lt; n; killRows++) {<br>      int rowsDead = 0;<br>      for (int i = 0; i &lt; n; i++) {<br>        if ((killRows &amp; (1 &lt;&lt; i)) == 0) {<br>          continue;<br>        }<br>        rowsDead |= ((1 &lt;&lt; R) - 1) &lt;&lt; i;<br>      }<br>      int colsAlive = 0;<br>      for (int i = 0; i &lt; n; i++) {<br>        if ((rowsDead &amp; (1 &lt;&lt; i)) != 0) {<br>          continue;<br>        }<br>        colsAlive |= grid[i];<br>      }<br>      int curRes = Integer.bitCount(killRows);<br>      for (int i = 0; i &lt; m; i++) {<br>        if ((colsAlive &amp; (1 &lt;&lt; i)) == 0) {<br>          continue;<br>        }<br>        int killMask = ((1 &lt;&lt; C) - 1) &lt;&lt; i;<br>        colsAlive &amp;= ~killMask;<br>        curRes++;<br>      }<br>      bestRes = min(bestRes, curRes);<br>    }<br>    return bestRes;<br>  }<br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>