<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#define FOR(x, s, e) for(int x = (s); x &lt; (e); ++x)<br>using namespace std;<br> <br>class TheOlympiadInInformatics {<br>  public:<br>    int find( vector &lt;int&gt; sums, int k ) {<br>      int n = sums.size();  <br>      int hi = 1111111111, lo = 0;<br>      int res = hi;<br>      while (lo &lt;= hi){<br>        int mi = (hi + lo)/2, cnt = 0;<br>        FOR(i, 0, n) cnt += sums[i] / (mi+1);<br>        if (cnt &gt; k) {<br>          lo = mi + 1;<br>        } else {<br>          hi = mi - 1;<br>          res = min(res, mi);<br>        }<br>      }<br>      return res;<br>    }<br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.17 [modified TZTester]<br>// Powered by CodeProcessor<br></td>