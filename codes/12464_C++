<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define FOR(i,a,b) for(__typeof(b) i=(a);i!=(b);i++)<br>#define REP(i,n) FOR(i,0,n)<br>#define ALL(a) a.begin(),a.end()<br>#define EACH(i,a) FOR(i,a.begin(),a.end())<br>#define PB push_back<br>#define iss istringstream<br>#define SZ(a) (int)a.size()<br>#define CLEAR(a) memset(a,0,sizeof(a))<br>#define ll long long<br> <br>class WolfPack {<br>public:<br>  int calc(vector &lt;int&gt;, vector &lt;int&gt;, int);<br>};<br> <br>const int MOD = 1000000007, MAX = 400005;<br> <br>inline ll pwr(ll bs, int pw) {<br>  if (pw == 0) {return 1;}<br>  if (pw == 1) {return (bs % MOD);}<br>  ll ret = pwr(bs, pw &gt;&gt; 1);<br>  ret = (ret * ret) % MOD;<br>  if (pw &amp; 1) {ret = (ret * bs) % MOD;}<br>  return ret;<br>}<br> <br>inline ll inv(ll bs) {<br>  return pwr(bs, MOD - 2);<br>}<br> <br>long long fac[MAX], invfac[MAX];<br>inline void process() {<br>  fac[0] = 1;<br>  invfac[0] = 1;<br>  for(int i = 1 ; i &lt; MAX ; i++) {<br>    fac[i] = (fac[i - 1] * i) % MOD;<br>    invfac[i] = (invfac[i - 1] * inv(i)) % MOD;<br>  }<br>}<br> <br>inline ll combo(int n, int k) {<br>  if (k &lt; 0 || k &gt; n) {return 0;}<br>  ll ret = fac[n];<br>  ret = (ret * invfac[k]) % MOD;<br>  ret = (ret * invfac[n - k]) % MOD;<br>  return ret;<br>}<br> <br>int M;<br>inline long long solve(vector&lt;int&gt; v) {<br>  sort(ALL(v));<br>  for(int i = 1 ; i &lt; SZ(v) ; i++) {<br>    if (((v[i] - v[0]) &amp; 1) == 1) {return 0;}<br>  }<br>  int L = SZ(v);<br>  <br>  int loop_start = v[L - 1] - M;<br>  int loop_end = v[0] + M;<br>  <br>  long long ret = 0;<br>  for(int i = loop_start ; i &lt;= loop_end ; i+=2) {<br>    long long mult = 1;<br>    for(int j = 0 ; j &lt; SZ(v) ; j++) {<br>      int d = abs(v[j] - i);<br>      mult *= combo(M, (M - d)/2);<br>      mult %= MOD;<br>    }<br>    ret = (ret + mult) % MOD;<br>  }<br>  return ret;<br>}<br> <br>int WolfPack::calc(vector &lt;int&gt; x, vector &lt;int&gt; y, int m) {<br>  process();<br>  vector&lt;int&gt; a, b;<br>  M = m;<br>  REP(i, SZ(x)) {<br>    a.PB(x[i] + y[i]);<br>    b.PB(x[i] - y[i]);<br>  }<br>  return ((solve(a) * solve(b)) % MOD);<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br> <br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>