<td class="problemText" colspan="8" valign="middle" align="left">
            import java.math.BigInteger;<br>import java.util.Arrays;<br><br>public class WolfPackDivTwo {<br><br>  <br>  <br>  BigInteger [][][] data = new BigInteger [160][160][55];<br>  public int calc(int[] x, int[] y, int m) {<br>    for(int i = 0 ; i &lt; 52 ; i++ )<br>    {<br>      for(int j = 0; j &lt; 160 ; j++)<br>      {<br>        for(int t = 0 ; t &lt; 160 ; t++)<br>        {<br>          data[j][t][i] = new BigInteger("0");<br>           <br>        }<br>      }<br>    }<br>     <br>      data[1][0][1] =new BigInteger("1");<br>      data[0][1][1] = new BigInteger("1");<br>      data[0][0][0] =new BigInteger("1");<br>      int ff = 0;<br>      for(int i = 1 ; i &lt; 51 ; i++ )<br>      {<br>        for(int j = 0; j &lt; 159 ; j++)<br>        {<br>          for(int t = 0 ; t &lt; 159 ; t++)<br>          {<br>            data[j][t][i] = data[Math.abs(j-1)][t][i-1] .<br>                add (data[j][Math.abs(t-1)][i-1] .<br>                add( data[Math.abs(j+1)][t][i-1].<br>                add( data[j][Math.abs(t+1)][i-1])));<br>             <br>          }<br>        }<br>      }<br>     <br>      BigInteger total = BigInteger.ZERO;<br>      BigInteger rem = new BigInteger("1000000007");<br>    for(int i = -50 ; i &lt; 101 ; i++)<br>    {<br>      for(int j = -50 ; j &lt; 101 ; j++)<br>      {<br>        BigInteger point = BigInteger.ONE;<br>        for(int h = 0; h &lt; x.length ; h++)<br>        {<br>          point=point.multiply(new BigInteger(""+ data[Math.abs(x[h] - i )][Math.abs(y[h]-j)][m]     )      );<br>          <br>          //System.out.println(data[Math.abs(x[h] - i )][Math.abs(y[h]-j)][m] );<br>        }<br>        total = total.add(point);<br>        total = total.remainder(rem);<br>      }<br>    }<br>      <br>      <br>    return total.intValue();<br>  }<br><br>}<br></td>