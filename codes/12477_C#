<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class PolygonTraversal {<br>    public long count(int N, int[] points)<br>    {<br>        int MAX = 1 &lt;&lt; N;<br><br>        for (int i = 0; i &lt; points.Length; i++)<br>        {<br>            points[i]--;<br>        }<br><br>        long[,] dp = new long[MAX, N];<br>        int first = points[0];<br>        for (int i = 0; i &lt; N; i++)<br>        {<br>            if (Math.Abs(first - i) &lt;= 1 || Math.Abs((first + 1) % N - (i + 1) % N) &lt;= 1) dp[MAX - 1, i] = 0;<br>            else dp[MAX - 1, i] = 1;<br>        }<br><br>        for (int i = MAX - 2; i &gt;= 0; i--)<br>        {<br>            for (int j = 0; j &lt; N; j++)<br>            {<br>                if ((i &gt;&gt; j) % 2 == 0) continue;<br>                int start = N;<br>                int end = 0;<br>                for (int k = 1; k &lt; N; k++)<br>                {<br>                    int next = (j + k) % N;<br>                    if ((i &gt;&gt; next) % 2 == 1)<br>                    {<br>                        start = k;<br>                        break;<br>                    }<br>                }<br>                for (int k = N - 1; k &gt; 0; k--)<br>                {<br>                    int next = (j + k) % N;<br>                    if ((i &gt;&gt; next) % 2 == 1)<br>                    {<br>                        end = k;<br>                        break;<br>                    }<br>                }<br><br>                for (int k = start + 1; k &lt;= end; k++)<br>                {<br>                    int next = (j + k) % N;<br>                    if ((i &gt;&gt; next) % 2 == 1) continue;<br>                    dp[i, j] += dp[i | (1 &lt;&lt; next), next];<br>                }<br>            }<br>        }<br>        int last = points[points.Length - 1];<br>        int flag = 0;<br>        for (int i = 0; i &lt; points.Length; i++)<br>        {<br>            flag |= (1 &lt;&lt; (points[i]));<br>        }<br><br>        return dp[flag,last];<br>    }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] Modified for C# by ysn<br>// Powered by CodeProcessor<br></td>