<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;fstream&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;memory.h&gt;<br>#include &lt;cstring&gt;<br>#include &lt;sstream&gt;<br>using namespace std;<br> <br>#define forn(i, n) for (int i=0; i &lt; (int)(n); i++)<br>typedef long long ll;<br> <br>vector&lt;int&gt; pp;<br>ll f[1&lt;&lt;18][18];<br>int full, n;<br> <br>ll getf(int mask, int last) {<br>  if (mask == full) {<br>    if ((last+1) % n == pp[0] || (last-1+n) % n == pp[0]) return 0;<br>    return 1;<br>  }<br>  if (f[mask][last] != -1) return f[mask][last];<br>  ll&amp; res = f[mask][last];<br>  res = 0;<br> <br>  forn(j, n)<br>    if ((mask &amp; (1 &lt;&lt; j)) == 0) {<br>      int mi = min(j, last);<br>      int ma = max(j, last);<br>      bool ok1 = false, ok2 = false;<br>      for (int i = 0; i &lt; n &amp;&amp; !(ok1 &amp;&amp; ok2); i++)<br>        if (i != mi &amp;&amp; i != ma)<br>          if (mask &amp; (1 &lt;&lt; i))<br>            if (mi &lt; i &amp;&amp; i &lt; ma) ok1 = true;<br>            else ok2 = true;<br>      if (ok1 &amp;&amp; ok2) res += getf(mask | (1 &lt;&lt; j), j);<br>    }<br> <br>  return res;<br>}<br> <br>class PolygonTraversal {<br>public:<br>    long long ans;<br>    long long count(int N, vector &lt;int&gt; points) {<br>      forn(i, points.size()) points[i]--;<br>      n = N;<br>      pp = points;<br> <br>      int mask = 0;<br>      forn(i, pp.size()) {<br>        mask |= 1 &lt;&lt; pp[i];<br>      }<br>      full = 1 &lt;&lt; N;<br>      full--; <br>      memset(f, 0xff, sizeof(f));<br>        return getf(mask, pp[pp.size() - 1]);<br>    }<br>};<br> <br>// Roman Udovichenko, 2013.<br> <br> <br>// Powered by FileEdit<br> <br>// Powered by moj 4.17+ [C++ mod by Romka]<br>// Powered by CodeProcessor<br></td>