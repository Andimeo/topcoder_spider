<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> */<br>public class PolygonTraversal {<br>    public long count(int N, int[] points) {<br>        long[][] ways = new long[1 &lt;&lt; N][N];<br>        int start = 0;<br>        for (int x : points) start |= 1 &lt;&lt; (x - 1);<br>        ways[start][points[points.length - 1] - 1] = 1;<br>        for (int set = 0; set &lt; ways.length; ++set)<br>            for (int cur = 0; cur &lt; N; ++cur)<br>                if (ways[set][cur] &gt; 0) {<br>                    for (int next = 0; next &lt; N; ++next)<br>                        if ((set &amp; (1 &lt;&lt; next)) == 0) {<br>                            int a = Math.min(cur, next);<br>                            int b = Math.max(cur, next);<br>                            int m1 = (set &amp; ((1 &lt;&lt; a) - 1)) | ((set &gt;&gt; (b + 1)) &lt;&lt; (b + 1));<br>                            int m2 = ((set &amp; ((1 &lt;&lt; b) - 1)) &gt;&gt; (a + 1)) &lt;&lt; (a + 1);<br>                            if (m1 == 0 || m2 == 0) continue;<br>                            ways[set | (1 &lt;&lt; next)][next] += ways[set][cur];<br>                        }<br>                }<br>        long res = 0;<br>        for (int cur = 0; cur &lt; N; ++cur)<br>            if (ways[ways.length - 1][cur] &gt; 0) {<br>                int set = ways.length - 1;<br>                int next = points[0] - 1;<br>                int a = Math.min(cur, next);<br>                int b = Math.max(cur, next);<br>                int m1 = (set &amp; ((1 &lt;&lt; a) - 1)) | ((set &gt;&gt; (b + 1)) &lt;&lt; (b + 1));<br>                int m2 = ((set &amp; ((1 &lt;&lt; b) - 1)) &gt;&gt; (a + 1)) &lt;&lt; (a + 1);<br>                if (m1 == 0 || m2 == 0) continue;<br>                res += ways[set][cur];<br>            }<br>        return res;<br>    }<br>}<br></td>