<td class="problemText" colspan="8" valign="middle" align="left">
            #line 5 "PolygonTraversal2.cpp"<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;deque&gt;<br>using namespace std;<br>int n;<br>int visited[15];<br>int nvis = 0;<br>int first;<br>int intersect(int a, int b){<br>  if(a &gt; b) swap(a, b);<br>  int exists = 0;<br>  for(int i = a+1; i &lt; b; i++){<br>    if(visited[i] == 1){<br>      exists = 1;<br>      break;<br>    }<br>  }<br>  if(exists == 0) return 0;<br>  exists = 0;<br>  for(int i = 0; i &lt; a; i++){<br>    if(visited[i] == 1){<br>      exists = 1;<br>      break;<br>    }<br>  }<br>  for(int i = b+1; i &lt; n; i++){<br>    if(visited[i] == 1){<br>      exists = 1;<br>      break;<br>    }<br>  }<br>  if(exists == 0) return 0;<br>  return 1;<br>}<br>int ans = 0;<br>void search(int cur){<br>  if(nvis == n){<br>    if(intersect(cur, first)){<br>      ans++;<br>    }<br>  }<br>  for(int i = 0; i &lt; n; i++){<br>    if(i != cur &amp;&amp; visited[i] == 0 &amp;&amp; intersect(cur, i)){<br>      visited[i] = 1;<br>      nvis++;<br>      search(i);<br>      visited[i] = 0;<br>      nvis--;<br>    }<br>  }<br>}<br>class PolygonTraversal2 {<br>  <br>public:<br>  int count(int N, vector &lt;int&gt; points) {<br>    n = N;<br>    int M = points.size();<br>    for(int i = 0; i &lt; 15; i++){<br>      visited[i] = 0;<br>    }<br>    for(int i = 0; i &lt; M; i++){<br>      points[i]--;<br>      visited[points[i]] = 1;<br>      nvis++;<br>    }<br>    first = points[0];<br>    search(points[M-1]);<br>    return ans;<br>  }<br>};<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>