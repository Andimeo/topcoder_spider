<td class="problemText" colspan="8" valign="middle" align="left">
            public class PolygonTraversal2 {<br>  static int n;<br>  public static int count(int N, int[] points) {<br>    n = 0;<br>    int[] tail = new int[N];<br>    boolean[] d = new boolean[N + 1];<br>    for (int i = 0; i &lt; points.length; i++) {<br>      tail[i] = points[i];<br>      d[tail[i]] = true;<br>    }<br>    r(tail, d, points.length - 1, N);<br>    return n;<br>  }<br>  <br>  private static void r(int[] tail, boolean[] d, int pos, int N) {<br>    if (pos == N - 1) {<br>      for (int j = 0; j &lt; N-2; j++) {<br>        if ((tail[j] - tail[0]) * (tail[j+1] - tail[0]) * (tail[j] - tail[N-1]) * (tail[j+1] - tail[N-1]) &lt; 0) {<br>          n++;<br>          return;<br>        }<br>      }<br>    }<br>    for (int i = 1; i &lt; d.length; i++) {<br>      if (!d[i]) {<br>        int p = tail[pos];<br>        for (int j = 0; j &lt; pos; j++) {<br>          if ((tail[j] - p) * (tail[j+1] - p) * (tail[j] - i) * (tail[j+1] - i) &lt; 0) {<br>            tail[pos + 1] = i;<br>            d[i] = true;<br>            r(tail, d, pos + 1, N);<br>            tail[pos + 1] = 0;<br>            d[i] = false;<br>            break;<br>          }<br>        }<br>      }<br>    }<br>  }<br>}<br></td>