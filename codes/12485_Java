<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.LinkedList;<br>import java.util.HashSet;<br><br>public class TheNumberGameDiv2 {<br><br>  public int minimumMoves(int A, int B) {<br>    HashSet&lt;Integer&gt; seen = new HashSet&lt;Integer&gt;();<br>    <br>    <br>    LinkedList&lt;TheNumberGameDiv2.state&gt; q = new LinkedList&lt;TheNumberGameDiv2.state&gt;();<br>    q.add(new state(A, 0));<br>    seen.add(A);<br>    while (!q.isEmpty()){<br>      state s = q.poll();<br>      if (s.a == B)return s.time;<br>      if (!seen.contains(s.a/10)){<br>        seen.add(s.a/10);<br>        q.add(new state(s.a/10,s.time+1));<br>      }<br>      int r = reverse(s.a);<br>      if (!seen.contains(r)){<br>        seen.add(r);<br>        q.add(new state(r,s.time+1));<br>      }<br>      <br>    }<br>    <br>    <br>    <br>    <br>    <br>    return -1;<br>  }<br>  public int reverse (int a){<br>    return Integer.valueOf(new StringBuilder().append(a).reverse().toString());<br>  }<br>  public static class state{<br>    <br>    int a;<br>    int time;<br>    public state(int a, int time){<br>      this .a = a;<br>      this.time = time;<br>    }<br>  }<br>}<br></td>