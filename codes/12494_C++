<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;utility&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br>using namespace std;<br><br>#define Px first<br>#define Py second<br>pair&lt;string, string&gt; f[600][600];<br><br>class TheLargestString {<br>public:<br>  string find (string S, string T) {<br>    int l = S.length();<br>    string res = "";<br>    for (int c = 1; c &lt;= l; ++c) {<br>      for (int i = 0; i &lt;= l; ++i)<br>        for (int j = 0; j &lt;= l; ++j)<br>          f[i][j].Px = f[i][j].Py = "";<br>      for (int i = 1; i &lt;= l; ++i) for (int j = 0; j &lt;= c; ++j) {<br>        f[i][j] = f[i - 1][j];<br>        if (j &gt; 0) {<br>          f[i][j] = max(f[i][j], make_pair(f[i - 1][j - 1].Px + S[i - 1], f[i - 1][j - 1].Py + T[i - 1]));<br>        }<br>      }<br>      for (int i = 1; i &lt;= l; ++i) res = max(res, f[i][c].Px + f[i][c].Py);<br>    }<br>    return res;<br>  }<br>};<br></td>