<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class TheSwapsDivOne {<br>public:<br>  double find(vector &lt;string&gt;, int);<br>};<br> <br>double place[1010101];<br> <br>double TheSwapsDivOne::find(vector &lt;string&gt; sequence, int k) {<br>  string s = "";<br>  int len = sequence.size();<br>  for (int i=0;i&lt;len;i++) s += sequence[i];<br>  int n = s.length();<br>  place[0] = 1.0;<br>  for (int i=0;i&lt;k;i++) {<br>    place[i+1] = place[i]*(n-2.0)/n + (1 - place[i])*(2.0 / n)*(1.0 / (n-1));<br>  }<br>  double exp = 0.0;<br>  for (int i=0;i&lt;n;i++)<br>    for (int j=0;j&lt;n;j++) {<br>      double prob;<br>      if (i == j) prob = place[k]*(n-1);<br>      else prob = (1.0-place[k]);<br>      exp += prob*(j+1)*(n-j)*(s[i]-48);<br>    }<br>  return exp / (n-1) / (n*(n+1)/2);<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>