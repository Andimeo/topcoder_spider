<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cmath&gt;<br>#include &lt;sstream&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;functional&gt;<br>using namespace std;<br>#define pb push_back<br>#define INF 1000000000<br>#define L(s) (int)((s).size())<br>#define FOR(i,a,b) for (int _n(b), i(a); i &lt;= _n; i++)<br>#define rep(i,n) FOR(i,1,(n))<br>#define rept(i,n) FOR(i,0,(n)-1)<br>#define C(a) memset((a),0,sizeof(a))<br>#define ll long long<br>#define mp make_pair<br>#define pii pair&lt;int,int&gt;<br>#define x first<br>#define y second<br><br>bool used[52][52];<br>inline bool check(vector&lt;string&gt; mas, int ei, int ej, int lad) {<br>  --ei; --ej;<br>  queue&lt;pii&gt; q;<br>  C(used);<br>  int n = L(mas);<br>  int m = L(mas[0]);<br>  used[n - 1][m - 1] = 1;<br>  q.push(mp(n - 1, m - 1));<br>  while (!q.empty()) {<br>    int ci = q.front().x, cj = q.front().y;<br>    q.pop();<br>    if (cj + 1 &lt; m &amp;&amp; mas[ci][cj + 1] == 'X' &amp;&amp; !used[ci][cj + 1]) {<br>      used[ci][cj + 1] = 1;<br>      q.push(mp(ci, cj + 1));<br>    }<br>    if (cj - 1 &gt;= 0 &amp;&amp; mas[ci][cj - 1] == 'X' &amp;&amp; !used[ci][cj - 1]) {<br>      used[ci][cj - 1] = 1;<br>      q.push(mp(ci, cj - 1));<br>    }<br>    FOR(di, -lad, lad) {<br>      if (ci + di &lt; 0 || ci + di &gt;= n) continue;<br>      if (used[ci + di][cj]) continue;<br>      if (mas[ci + di][cj] != 'X') continue;<br>      used[ci + di][cj] = 1;<br>      q.push(mp(ci + di, cj));<br>    }<br>  }<br>  return used[ei][ej];<br>}<br>class ArcadeManao <br>  {<br>    public:<br>       int shortestLadder( vector &lt;string&gt; level, int coinRow, int coinColumn )<br>    {<br>      rept(ladder, 51) {<br>        if (check(level, coinRow, coinColumn, ladder)) return ladder;<br>      }<br>      return -1;<br>    }<br>  };<br><br><br><br>// Powered by FileEdit<br>// Powered by moj 4.17 [modified TZTester]<br>// Powered by CodeProcessor<br></td>