<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class CharacterBoard2<br>{<br>    private long pow26(long x)<br>    {<br>        long ret = 1;<br>        for (long i = 0; i &lt; x; i++)<br>        {<br>            ret = (ret * 26) % 1000000009;<br>        }<br>        return ret;<br>    }<br><br>    public int countGenerators(string[] fragment, int W, int i0, int j0)<br>    {<br>        int finish = 0;<br>        bool suc = true;<br>        long index = 0;<br>        long ret = 0;<br>        long i = 0, j = 0, k = 0;<br><br>        for (k = 1; k &lt;= W; k++)<br>        {<br>            finish = 0;<br>            suc = true;<br>            char[] source = new char[k];<br>            bool[] generate = new bool[k];<br><br>            for (i = 0; i &lt; fragment.Length; i++)<br>            {<br>                for (j = 0; j &lt; fragment[0].Length; j++)<br>                {<br>                    index = ((i + i0) * W + (j0 + j)) % k;<br>                    if (!generate[index])<br>                    {<br>                        source[index] = fragment[(int)i][(int)j];<br>                        generate[index] = true;<br>                        finish++;<br>                    }<br>                    else<br>                    {<br>                        if (fragment[(int)i][(int)j] == source[index]) { continue; }<br>                        else { suc = false; break; }<br>                    }<br>                }<br>            }<br>            if (suc)<br>            {<br>                if (finish == k) { ret = (ret + 1) % 1000000009; }<br>                else if (finish &lt; k) { ret = (ret + pow26(k - finish)) % 1000000009; }<br>            }<br>        }<br>        return (int)ret;<br>    }<br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>