<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class TheExperiment {<br>    long mod = 1000000009;<br>    int[] sum;<br><br>    int n, m, l, a,b;<br>    public int countPlacements(string[] intensity, int M, int L, int A, int B)<br>    {<br>        string s = "";<br>        m = M;; a = A; b = B;<br>        foreach (string item in intensity)<br>        {<br>            s += item;<br>        }<br>        n = s.Length;<br>        sum = new int[n + 1];<br>        for (int i = 0; i &lt; n; i++)<br>        {<br>            sum[i + 1] = sum[i] + s[i] - '0';<br>        }<br>        return (int)(calc(s, L));<br>    }<br><br>    long calc(string s, int L){<br>        l = L;<br>        if (n &lt; l) return 0;<br>        long[,,] dp = new long[n + 1, m + 1, 3];<br>        dp[0, 0, 0] = 1;<br>        for (int i = 0; i &lt; n; i++)<br>        {<br>            //Console.WriteLine();<br>            for (int j = 1; j &lt;= l &amp;&amp; i + j &lt;= n; j++)<br>            {<br>                int ss = sum[i + j] - sum[i];<br>                //Console.WriteLine(ss + " " + a + " " + b);<br>                if (ss &lt; a) continue;<br>                if (ss &gt; b) break;<br>                for (int f = 0; f &lt; 3; f++)<br>                {<br>                    int next = 1;<br>                    if (f == 2 || j == l) next = 2;<br>                    for (int k = 0; k &lt; m; k++)<br>                    {<br>                        dp[i + j, k + 1, next] = (dp[i + j, k + 1, next] + dp[i, k, f]) % mod;<br><br>                    }<br>                }<br>            }<br>            for (int f = 0; f &lt; 3; f++)<br>            {<br>                if (f == 1) continue;<br><br>                for (int k = 0; k &lt;= m; k++)<br>                {<br>                    dp[i + 1, k, 0] = (dp[i + 1, k, 0] + dp[i, k, f]) % mod;<br>                }<br>            }<br>        }<br>        return (dp[n, m, 0] + dp[n, m, 2]) % mod;<br>    }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] Modified for C# by ysn<br>// Powered by CodeProcessor<br></td>