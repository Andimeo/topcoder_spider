<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> * @author Egor Kulikov (egor@egork.net)<br> */<br>public class TheExperiment {<br>  static final long MOD = (long) (1e9 + 9);<br> <br>    public int countPlacements(String[] intensity, int M, int L, int A, int B) {<br>    int count = 0;<br>    for (String s : intensity)<br>      count += s.length();<br>    int[] flow = new int[count];<br>    int index = 0;<br>    for (String s : intensity) {<br>      for (char c : s.toCharArray())<br>        flow[index++] = c - '0';<br>    }<br>    int[] sumFlow = new int[count + 1];<br>    for (int i = 0; i &lt; count; i++)<br>      sumFlow[i + 1] = sumFlow[i] + flow[i];<br>    long[][][] answer = new long[2][count + 1][M + 1];<br>    answer[0][0][0] = 1;<br>    for (int i = 1; i &lt;= count; i++) {<br>      answer[0][i][0] = 1;<br>      if (i &gt;= L &amp;&amp; isValid(A, B, sumFlow[i] - sumFlow[i - L])) {<br>        for (int j = 1; j &lt;= M; j++)<br>          answer[1][i][j] += answer[0][i - L][j - 1] + answer[1][i - L][j - 1];<br>      }<br>      for (int j = 0; j &lt; i; j++) {<br>        for (int k = 0; k &lt;= M; k++)<br>          answer[0][i][k] += answer[1][j][k];<br>      }<br>      for (int j = 1; j &lt;= M; j++) {<br>        for (int k = 0; k &lt; 2; k++) {<br>          for (int m = Math.max(0, i - L + 1); m &lt; i; m++) {<br>            if (isValid(A, B, sumFlow[i] - sumFlow[m]))<br>              answer[k][i][j] += answer[k][m][j - 1];<br>          }<br>          answer[k][i][j] %= MOD;<br>        }<br>      }<br>    }<br>    long total = 0;<br>    for (int i = 0; i &lt;= count; i++)<br>      total += answer[1][i][M];<br>    return (int) (total % MOD);<br>    }<br> <br>  private boolean isValid(int from, int to, int value) {<br>    return from &lt;= value &amp;&amp; value &lt;= to;<br>  }<br>}<br></td>