<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;math.h&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>using namespace std;<br> <br>class WellTimedSearch<br>{<br>  public:<br>  double getProbability(int N, int A, int B)<br>  {<br>    int step = B - A + 1;<br>    int piece_limit = N;<br>    if (A &lt; 25) piece_limit = min(piece_limit, 1&lt;&lt;(A-1));<br>    double res = 0.0;<br>    for (int piece = 1; piece &lt;= piece_limit; piece++) {<br>      int temp = piece;<br>      int st = 0;<br>      int used = 0;<br>      while (temp &gt; 1) {<br>        used += (temp + 1) / 2;<br>        temp -= temp/2;<br>        st ++;<br>      }<br>      used += A-1 - st;<br>      <br>      int remain = N - used;<br>      if (step &gt; 25) {<br>        res = max(res, remain/(double)N);<br>        continue;<br>      }<br>      long long r = ((1&lt;&lt;step)-1) * (long long)piece;<br>      r = min((long long)remain, r);<br>      res = max(res, r/(double)N);<br>    }<br>    return res;<br>  };<br>};<br></td>