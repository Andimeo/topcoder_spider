<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstring&gt;<br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define forn(i, n) for (int i = 0; i &lt; (int)(n); i++)<br>#define forab(i, a, b) for (int i = (a); i &lt;= (b); i++)<br>#define IS(a, i) (((a) &gt;&gt; (i)) &amp; 1)<br> <br>typedef long long ll;<br> <br>class LitPanels {<br>public:<br>  int countPatterns(int, int, int, int);<br>};<br> <br>const int MOD = (int)1e9 + 7;<br> <br>const int N = 42;<br> <br>int C[N][N];<br>int deg2[N * N];<br> <br>inline void add( int &amp;a, int b )<br>{<br>  if ((a += b) &gt;= MOD)<br>    a -= MOD;<br>}<br> <br>int mul( int a, int b )<br>{<br>  return (ll)a * b % MOD;<br>}<br> <br>int sub( int a, int b )<br>{<br>  return a &lt; b ? a - b + MOD : a - b;<br>}<br> <br>int calc1( int w, int h )<br>{<br>  if (w == 1 &amp;&amp; h == 1)<br>    return 1;<br>  if (w == 1 || h == 1)<br>    return deg2[max(w, h) - 2];<br>  int res = 0;<br>  forn(t, 1 &lt;&lt; 4)<br>    add(res, mul(mul(sub(deg2[w - 2], !IS(t, 0) &amp;&amp; !IS(t, 1)),<br>                     sub(deg2[w - 2], !IS(t, 2) &amp;&amp; !IS(t, 3))),<br>                 mul(sub(deg2[h - 2], !IS(t, 0) &amp;&amp; !IS(t, 3)),<br>                     sub(deg2[h - 2], !IS(t, 1) &amp;&amp; !IS(t, 2)))));<br>  return mul(res, deg2[(w - 2) * (h - 2)]);<br>}<br> <br>int calc2( int w, int h, int x ) // w &gt; x<br>{<br>  int dx = min(2 * x, w) - 2, dy = h - 2;<br>  if (h == 1)<br>    return deg2[dx];<br>  int res = 0;<br>  forn(t, 1 &lt;&lt; 4)<br>    add(res, mul(mul(sub(deg2[dx], !IS(t, 0) &amp;&amp; !IS(t, 1)),<br>                     sub(deg2[dx], !IS(t, 2) &amp;&amp; !IS(t, 3))),<br>                 mul(sub(deg2[dy], !IS(t, 0) &amp;&amp; !IS(t, 3)),<br>                     sub(deg2[dy], !IS(t, 1) &amp;&amp; !IS(t, 2)))));<br>  return mul(res, deg2[dx * dy]);<br>}<br> <br>int calc3( int w, int h, int x, int y ) // w &gt; x, h &gt; y<br>{<br>  int dx = x - 1, dy = y - 1, inside = 2 * (x - 1) * (y - 1);<br>  if (w &lt; 2 * x &amp;&amp; h &lt; 2 * y)<br>    inside -= (2 * x - w) * (2 * y - h);<br>  int res = 0;<br>  forn(t, 1 &lt;&lt; 2)<br>    add(res, mul(mul(sub(deg2[dx], !IS(t, 0)),<br>                     sub(deg2[dx], !IS(t, 1))),<br>                 mul(sub(deg2[dy], !IS(t, 0)),<br>                     sub(deg2[dy], !IS(t, 1)))));<br>  return mul(res, deg2[inside]);<br>}<br> <br>int calc4( int w, int h, int x, int y ) // 2x &gt; w &gt; x, 2y &gt; h &gt; y<br>{<br>  int dx = 2 * x - w, dy = 2 * y - h;<br>  int inside = dx * (h - 2) + dy * (w - 2) - dx * dy;<br>  int res = 0;<br>  add(res, mul(mul(sub(deg2[dx], 1),<br>                   sub(deg2[dx], 1)),<br>               mul(sub(deg2[dy], 1),<br>                   sub(deg2[dy], 1))));<br>  return mul(res, deg2[inside]);<br>}<br> <br>int LitPanels::countPatterns(int X, int Y, int sx, int sy)<br>{<br>  memset(C, 0, sizeof(C));<br>  C[0][0] = 1;<br>  forn(i, N - 1)<br>    forn(j, N - 1)<br>      add(C[i + 1][j + 1], C[i][j]), add(C[i + 1][j], C[i][j]);<br>  deg2[0] = 1;<br>  forn(i, N * N - 1)<br>    deg2[i + 1] = mul(deg2[i], 2);<br> <br>/*<br>  printf("%d\n", calc1(2, 2));<br>  printf("%d\n", calc1(2, 3));<br>  exit(0);<br>*/<br> <br>  int res = 1;<br>  forab(w, 1, sx)<br>    forab(h, 1, sy)<br>      add(res, mul(X - w + 1, mul(Y - h + 1, calc1(w, h))));<br>  forab(w, sx + 1, X)<br>    forab(h, 1, sy)<br>      add(res, mul(X - w + 1, mul(Y - h + 1, calc2(w, h, sx))));<br>  forab(w, 1, sx)<br>    forab(h, sy + 1, Y)<br>      add(res, mul(X - w + 1, mul(Y - h + 1, calc2(h, w, sy))));<br>  forab(w, sx + 1, X)<br>    forab(h, sy + 1, Y)<br>      add(res, mul(2, mul(X - w + 1, mul(Y - h + 1, calc3(w, h, sx, sy)))));<br>  forab(w, sx + 1, min(X, 2 * sx - 1))<br>    forab(h, sy + 1, min(Y, 2 * sy - 1))<br>      res = sub(res, mul(X - w + 1, mul(Y - h + 1, calc4(w, h, sx, sy))));<br>  return res;<br>}<br></td>