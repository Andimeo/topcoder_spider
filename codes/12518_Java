<td class="problemText" colspan="8" valign="middle" align="left">
            public class LitPanels {<br><br>  static final int MOD = 1000000007;<br>  <br>  public static int countPatterns(int X, int Y, int sx, int sy) {<br>    int ans = 1;<br>    map = new boolean[X][Y];<br>    pow2 = new int[X * Y + 1];<br>    pow2[0] = 1;<br>    for (int i = 1; i &lt; pow2.length; i++) {<br>      pow2[i] = mul(pow2[i - 1], 2);<br>    }<br>    for (int width = 1; width &lt;= X; width++) {<br>      for (int height = 1; height &lt;= Y; height++) {<br>        int cans = sub(add(get1(width, height, sx, sy, true, false),<br>          get1(width, height, sx, sy, false, true)),<br>          get1(width, height, sx, sy, true, true));<br>        <br>        <br>        ans = add(ans, mul(cans, (X - width + 1) * (Y - height + 1)));<br>      }<br>    }<br>    return (int) (ans % MOD);<br>  }<br>  <br>  static boolean map[][];<br>  static int pow2[];<br>  static final int sgn[] = new int[16];<br>  static {<br>    for (int i = 0; i &lt; 16; i++) {<br>      sgn[i] = (Integer.bitCount(i) &amp; 1) != 0 ? sub(0, 1) : 1;<br>    }<br>  }<br>  <br>  static int get1(int w, int h, int ww, int hh, boolean fix1, boolean fix2) {<br>    for (int x = 0; x &lt; w; x++) {<br>      for (int y = 0; y &lt; h; y++) {<br>        boolean curMap = true;<br>        if (fix1 &amp;&amp; !((x &lt; ww &amp;&amp; y &lt; hh) || (x &gt;= w - ww &amp;&amp; y &gt;= h - hh))) {<br>          curMap = false;<br>        }<br>        if (fix2 &amp;&amp; !((x &lt; ww &amp;&amp; y &gt;= h - hh) || (x &gt;= w - ww &amp;&amp; y &lt; hh))) {<br>          curMap = false;<br>        }<br>        map[x][y] = curMap;<br>      }<br>    }<br>    int ans = 0;<br>    for (int bits = 0; bits &lt; 16; bits++) {<br>      int minX = (bits &amp; 1) != 0 ? 1 : 0;<br>      int maxX = (bits &amp; 2) != 0 ? w - 1 : w;<br>      int minY = (bits &amp; 4) != 0 ? 1 : 0;<br>      int maxY = (bits &amp; 8) != 0 ? h - 1 : h;<br>      int cnt = 0;<br>      for (int x = minX; x &lt; maxX; x++) {<br>        for (int y = minY; y &lt; maxY; y++) {<br>          if (map[x][y]) {<br>            ++cnt;<br>          }<br>        }<br>      }<br>      ans = add(ans, mul(sgn[bits], pow2[cnt]));<br>    }<br>    return ans;<br>  }<br>  <br>  static int add(int a, int b) {<br>    int res = a + b;<br>    if (res &gt; MOD) {<br>      res -= MOD;<br>    }<br>    return res;<br>  }<br>  <br>  static int sub(int a, int b) {<br>    int res = a - b;<br>    if (res &lt; 0) {<br>      res += MOD;<br>    }<br>    return res;<br>  }<br>  <br>  static int mul(int a, int b) {<br>    return (int) ((long) a * b % MOD);<br>  }<br>}<br></td>