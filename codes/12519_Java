<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class ScotlandYard {<br>    private int n;<br>    private boolean[][][] a;<br> <br>    public int maxMoves(String[] taxi, String[] bus, String[] metro) {<br>        n = taxi.length;<br>        a = new boolean[3][n][n];<br>        st = new int[n][n];<br>        d = new int[n][n];<br>        for (int i = 0; i &lt; n; i++) {<br>            for (int j = 0; j &lt; n; j++) {<br>                a[0][i][j] = taxi[i].charAt(j) == 'Y';<br>                a[1][i][j] = bus[i].charAt(j) == 'Y';<br>                a[2][i][j] = metro[i].charAt(j) == 'Y';<br>            }<br>        }<br>        try {<br>            int res = 0;<br>            for (int i = 0; i &lt; n; i++) {<br>                for (int j = 0; j &lt; n; j++) {<br>                    res = Math.max(res, dfs(i, j));<br>                }<br>            }<br>            return res;<br>        } catch (RuntimeException e) {<br>            return -1;<br>        }<br>    }<br> <br>    int[][] st;<br>    int[][] d;<br> <br>    private int dfs(int i, int j) {<br>        if (i == j) return 0;<br>        if (st[i][j] == 2) return d[i][j];<br>        if (st[i][j] == 1) throw new RuntimeException();<br>        st[i][j] = 1;<br>        for (int t = 0; t &lt; 3; t++) {<br>            for (int ii = 0; ii &lt; n; ii++) if (a[t][i][ii] || a[t][j][ii]) {<br>                for (int jj = 0; jj &lt; n; jj++) if (a[t][i][jj] || a[t][j][jj]) {<br>                    d[i][j] = Math.max(d[i][j], 1 + dfs(ii, jj));<br>                }<br>            }<br>        }<br>        st[i][j] = 2;<br>        return d[i][j];<br>    }<br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>