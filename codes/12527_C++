<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;vector&gt;<br>#include&lt;string&gt;<br>#include&lt;algorithm&gt;<br>using namespace std;<br><br>class EllysChessboard<br>{<br>  int peb[15][15];<br>  int dp[15][15][15][15];<br>  <br>  int mx(int a, int b, int c=0, int d=0)<br>  {<br>    return max(max(a, b), max(c, d));<br>  }<br>  <br>  int solve(int x1, int x2, int y1, int y2)<br>  {<br>    //printf("%d %d %d %d\n", x1, x2, y1, y2);<br>    if(x1 &gt; x2 || y1 &gt; y2) return 100000;<br>    if(x1 == x2 &amp;&amp; y1 == y2) return dp[x1][x2][y1][y2] = 0;<br>    if(dp[x1][x2][y1][y2] != -1) return dp[x1][x2][y1][y2];<br>    <br>    dp[x1][x2][y1][y2] = 100000;<br>    int tmp;<br>    <br>    tmp = solve(x1+1, x2, y1, y2);<br>    for(int i=y1;i&lt;=y2;i++) if(peb[x1][i]) tmp += mx(i-y1, y2-i, x2-x1);<br>    dp[x1][x2][y1][y2] = min(dp[x1][x2][y1][y2], tmp);<br><br>    tmp = solve(x1, x2-1, y1, y2);<br>    for(int i=y1;i&lt;=y2;i++) if(peb[x2][i]) tmp += mx(i-y1, y2-i, x2-x1);<br>    dp[x1][x2][y1][y2] = min(dp[x1][x2][y1][y2], tmp);<br>    <br>    tmp = solve(x1, x2, y1+1, y2);<br>    for(int i=x1;i&lt;=x2;i++) if(peb[i][y1]) tmp += mx(y2-y1, i-x1, x2-i);<br>    dp[x1][x2][y1][y2] = min(dp[x1][x2][y1][y2], tmp);<br><br>    tmp = solve(x1, x2, y1, y2-1);<br>    for(int i=x1;i&lt;=x2;i++) if(peb[i][y2]) tmp += mx(y2-y1, i-x1, x2-i);<br>    dp[x1][x2][y1][y2] = min(dp[x1][x2][y1][y2], tmp);<br><br>    return dp[x1][x2][y1][y2];<br>  }<br>  <br>public:<br>  int minCost(vector&lt;string&gt; B)<br>  {<br>    for(int i=0;i&lt;15;i++) for(int j=0;j&lt;15;j++) peb[i][j] = 0;<br>    for(int i=0;i&lt;8;i++) for(int j=0;j&lt;8;j++) if(B[i][j]=='#'){<br>      peb[i+j][i-j+7] = 1;<br>    }<br>    <br>    for(int i=0;i&lt;15;i++) for(int j=0;j&lt;15;j++) for(int k=0;k&lt;15;k++) for(int l=0;l&lt;15;l++) dp[i][j][k][l] = -1;<br>    <br>    return solve(0, 14, 0, 14);<br>    <br>  }<br>};<br></td>