<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class WolfInZooDivOne<br>{<br>  private const int MOD = 1000000007;<br><br>  private int[] l, r;<br>  private int m;<br>  private int[,] dp, minR;<br>  private int n;<br><br>  int Go( int pos, int last )<br>  {<br>    if ( pos &gt;= n ) return 1;<br>    if ( dp[pos, last] != -1 ) return dp[pos, last];<br><br>    int res = 1;<br><br>    for ( int i = pos; i &lt; n; ++i )<br>    {<br>      res += Go( minR[last, i], i );<br>      if ( res &gt;= MOD ) res -= MOD;<br>    }<br><br>    return dp[pos, last] = res;<br>  }<br><br>  public int count( int n, string[] L, string[] R )<br>  {<br>    this.n = n;<br>    string s = "";<br>    foreach ( string s1 in L )<br>    {<br>      s += s1;<br>    }<br>    string[] data = s.Split();<br>    m = data.Length;<br>    l = new int[m];<br>    for ( int i = 0; i &lt; m; ++i ) l[i] = int.Parse( data[i] );<br>    s = "";<br>    foreach ( string s1 in R )<br>    {<br>      s += s1;<br>    }<br>    data = s.Split();<br>    r = new int[m];<br>    for ( int i = 0; i &lt; m; ++i ) r[i] = int.Parse( data[i] );<br><br>    int res = n + 1;<br>    dp = new int[n, n];<br>    for ( int i = 0; i &lt; n; ++i )<br>      for ( int j = 0; j &lt; n; ++j ) dp[i, j] = -1;<br><br>    minR = new int[n, n];<br><br>    for ( int i = 0; i &lt; n; ++i )<br>      for ( int j = i + 1; j &lt; n; ++j )<br>      {<br>        minR[i, j] = j + 1;<br>        for ( int k = 0; k &lt; m; ++k )<br>        {<br>          if ( l[k] &lt;= i &amp;&amp; r[k] &gt;= j )<br>            minR[i, j] = Math.Max( minR[i, j], r[k] + 1 );<br>        }<br>      }<br><br>    for ( int i = 0; i &lt; n; ++i )<br>      for ( int j = i + 1; j &lt; n; ++j )<br>      {<br>        res += Go( minR[i, j], j );<br>        if ( res &gt;= MOD ) res -= MOD;<br>      }<br><br>    return res;<br>  }<br><br>}<br><br><br> <br>// Powered by moj 4.16 [modified TZTester]<br>// Powered by CleanSharp 1.0<br>// Powered by CodeProcessor<br></td>