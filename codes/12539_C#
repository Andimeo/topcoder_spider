<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Text.RegularExpressions;<br>using System.Collections.Generic;<br><br>public class GooseInZooDivOne<br>{<br>  const long P = 1000000007;<br>  int n, m, maxDist;<br>  bool[,] vis, f;<br><br>  int distance(int x1, int y1, int x2, int y2)<br>  {<br>    return Math.Abs(x1 - x2) + Math.Abs(y1 - y2);<br>  }<br><br>  int dfs(int x, int y)<br>  {<br>    if(vis[x, y])<br>      return 0;<br><br>    vis[x, y] = true;<br>    int r = 1;<br><br>    for(int i = 0; i &lt; n; i++)<br>      for(int j = 0; j &lt; m; j++)<br>        if(f[i, j] &amp;&amp; distance(x, y, i, j) &lt;= maxDist)<br>          r += dfs(i, j);<br><br>    return r;<br>  }<br><br>  public int count(string[] field, int dist)<br>  {<br>    maxDist = dist;<br>    n = field.Length;<br>    m = field[0].Length;<br>    vis = new bool[n, m];<br>    f = new bool[n, m];<br><br>    for(int i = 0; i &lt; n; i++)<br>      for(int j = 0; j &lt; m; j++)<br>        f[i, j] = field[i][j] == 'v';<br><br>    List&lt;int&gt; comps = new List&lt;int&gt;();<br>    for(int i = 0; i &lt; n; i++)<br>      for(int j = 0; j &lt; m; j++)<br>        if(f[i, j] &amp;&amp; !vis[i, j])<br>          comps.Add(dfs(i, j));<br><br><br>    long even = 1, odd = 0;<br>    foreach(int x in comps)<br>    {<br>      //Console.Write(x + " ");<br>      if(x % 2 == 0)<br>      {<br>        even = (2 * even) % P;<br>        odd = (2 * odd) % P;<br>      }<br>      else<br>      {<br>        long tmp = (even + odd) % P;<br>        even = tmp;<br>        odd = tmp;<br>      }<br>    }<br><br>    return (int)(even - 1);<br>  }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>