<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define ALL(v) (v).begin(),(v).end()<br>#define RALL(v) (v).rbegin(),(v).rend()<br>#define UNIQ(v) sort(ALL(v)),v.erase(unique(ALL(v)),(v).end())<br> <br>typedef long long ll;<br>typedef long double ld;<br> <br>class GooseInZooDivTwo {<br>public:<br>  int count(vector &lt;string&gt;, int);<br>};<br> <br>vector&lt; pair&lt;int, int&gt; &gt; bds;<br>vector&lt;bool&gt; used;<br>int dist;<br> <br>void dfs(int v)<br>{<br>  used[v] = 1;<br>  for (size_t i = 0; i &lt; bds.size(); ++i)<br>  {<br>    if (!used[i] &amp;&amp; abs(bds[v].first-bds[i].first) + abs(bds[v].second-bds[i].second) &lt;= dist)<br>      dfs(i);<br>  }<br>}<br> <br>int GooseInZooDivTwo::count(vector &lt;string&gt; field, int _dist) <br>{<br>  dist = _dist;<br>  for (size_t i = 0; i &lt; field.size(); ++i)<br>    for (size_t j = 0; j &lt; field[0].size(); ++j)<br>      if (field[i][j] == 'v')<br>        bds.push_back(make_pair(i,j));<br>  int n = bds.size();<br>  used.resize(n, 0);<br>  long long d = 0;<br>  for (int i = 0; i &lt; n; ++i)<br>    if (!used[i])<br>    {<br>      ++d;<br>      dfs(i);<br>    }<br>  if (!d)<br>    return 0;<br>  long long ans = 1;<br>  for (int i = 0; i &lt; d; ++i)<br>    ans = (ans*2) % 1000000007;<br>  ans = (ans-1+1000000007) % 1000000007;<br>  return (int)ans;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>