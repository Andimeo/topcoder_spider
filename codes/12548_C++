<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;cmath&gt;<br>#include &lt;ctime&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;memory&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;fstream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br> <br>#define sqr(x) ((x) * (x))<br>#define minn(x,y) (x=(y)&lt;(x)?(y):(x))<br>#define maxx(x,y) (x=(y)&gt;(x)?(y):(x))<br>#define pluss(x,y) (x+=(y),x%=mod)<br>#define random(x) ((((rand()%32767)*(rand()%32767)*(rand()%32767)%(x))+(x))%(x))<br> <br>using namespace std;<br> <br>typedef  long long  int64;<br> <br> <br>int  dist[55][55], f[55];<br> <br> <br>class DancingFoxes<br>{<br>public:<br>  int  minimalDays(vector&lt;string&gt; g)<br>  {<br>    int  N = g.size();<br>    <br>    memset(dist, 60, sizeof(dist));<br>    for (int i = 0; i &lt; N; ++ i)<br>    for (int j = 0; j &lt; N; ++ j)<br>      if (g[i][j] == 'Y') dist[i][j] = 1;<br>    <br>    for (int k = 0; k &lt; N; ++ k)<br>    for (int i = 0; i &lt; N; ++ i)<br>    for (int j = 0; j &lt; N; ++ j)<br>      minn(dist[i][j], dist[i][k] + dist[k][j]);<br>    <br>    if (dist[0][1] &gt; 1 &lt;&lt; 29) return -1;<br>    <br>    f[1] = f[2] = 0; f[3] = 1;<br>    for (int i = 3; i &lt;= 50; ++ i)<br>      f[i] = f[(i / 3) * 2 + i % 3] + 1;<br>    <br>    return f[dist[0][1] + 1];<br>  }<br>};<br> <br> <br> <br>//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!<br></td>