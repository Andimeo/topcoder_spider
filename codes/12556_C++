<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>int m, n, mat[50][50], dis[50][50];<br>typedef pair &lt; int , int &gt; pii;<br> <br>class GameOnABoard {<br>public:<br>  int Dij( int x , int y )<br>  {<br>    priority_queue &lt; pair &lt; int , pii &gt; &gt; pq;<br>    pq.push( make_pair( mat[x][y] , pii( x , y ) ) );<br>    for( int i = 0 ; i &lt; n ; i ++ )<br>      for( int j = 0 ; j &lt; m ; j ++ )<br>        dis[i][j] = (1&lt;&lt;29);<br>    dis[x][y] = mat[x][y];<br>    while( !pq.empty() )<br>    {<br>      x = pq.top().second.first;<br>      y = pq.top().second.second;<br>      pq.pop();<br>      for( int i = -1 ; i &lt; 2 ; i ++ )<br>        for( int j = -1 ; j &lt; 2 ; j ++ )<br>          if( abs( i ) + abs( j ) == 1 )<br>          {<br>            int s = x+i;<br>            int t = y+j;<br>            if( 0 &lt;= s &amp;&amp; s &lt; n &amp;&amp; 0 &lt;= t &amp;&amp; t &lt; m )<br>              if( dis[s][t] &gt; dis[x][y] + mat[s][t] )<br>              {<br>                dis[s][t] = dis[x][y] + mat[s][t];<br>                pq.push( make_pair( -dis[s][t] , pii( s , t ) ) );<br>              }<br>          }<br>    }<br>    int mx = 0;<br>    for( int i = 0 ; i &lt; n ; i ++ )<br>      for( int j = 0 ; j &lt; m ; j ++ )<br>        mx = max( mx , dis[i][j] );<br>    return mx;<br>  }<br>  int optimalChoice(vector &lt;string&gt; c)<br>  {<br>    n = c.size();<br>    m = c[0].size();<br>    int mn = 1000000;<br>    for( int i = 0 ; i &lt; n ; i ++ )<br>      for( int j = 0 ; j &lt; m ; j ++ )<br>        mat[i][j] = c[i][j] == '1';<br>    for( int i = 0 ; i &lt; n ; i ++ )<br>      for( int j = 0 ; j &lt; m ; j ++ )<br>        mn = min( mn , Dij( i , j ) );<br>    return mn;<br>  }<br>};<br> <br> <br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>