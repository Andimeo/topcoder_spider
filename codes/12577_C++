<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class WallGameDiv1 {<br>public:<br>  int play(vector &lt;string&gt;);<br>};<br> <br>const int inf = (int)1e9;<br> <br>int c[55][55], f[55][55], s[55][55];<br>int b[55][55][3];<br> <br>int WallGameDiv1::play(vector &lt;string&gt; costs) {<br>  int n = costs.size(), m = costs[0].length();<br>  for (int i=0;i&lt;n;i++)<br>    for (int j=0;j&lt;m;j++) c[i][j] = costs[i][j] - 48;<br>  for (int i=0;i&lt;n;i++) {<br>    s[i][0] = 0;<br>    for (int j=0;j&lt;m;j++) s[i][j+1] = s[i][j]+c[i][j];<br>  }<br>  for (int j=0;j&lt;m;j++) f[n-1][j] = c[n-1][j];<br>  for (int i=n-2;i&gt;=0;i--) {<br>    for (int j=0;j&lt;m;j++) {<br>      int ll = 0, rr = (int)1e6;<br>      while (ll &lt; rr) {<br>        int mid = (ll+rr+1) &gt;&gt; 1;<br>        for (int x=j;x&gt;=0;x--)<br>          for (int y=j;y&lt;m;y++)<br>            for (int z=0;z&lt;=1;z++) b[x][y][z] = inf;<br>        b[j][j][0] = b[j][j][1] = c[i][j];<br>        for (int x=j;x&gt;=0;x--)<br>          for (int y=j;y&lt;m;y++)<br>            for (int z=0;z&lt;=1;z++)<br>              if (b[x][y][z] &lt; inf) {<br>                int add = (z == 0 ? f[i+1][x] : f[i+1][y]);<br>                if (b[x][y][z]+add &gt;= mid) {<br>                  b[x][y][z] = inf;<br>                  continue;<br>                }<br>                if (x &gt; 0) {<br>                  int ft = b[x][y][z] + (z == 0 ? s[i][x]-s[i][x-1] : s[i][y]-s[i][x-1]);<br>                  if (ft &lt; b[x-1][y][0]) b[x-1][y][0] = ft;<br>                }<br>                if (y &lt; m-1) {<br>                  int ft = b[x][y][z] + (z == 0 ? s[i][y+2]-s[i][x+1] : s[i][y+2]-s[i][y+1]);<br>                  if (ft &lt; b[x][y+1][1]) b[x][y+1][1] = ft;<br>                }<br>              }<br>        bool block = (b[0][m-1][0] == inf &amp;&amp; b[0][m-1][1] == inf);<br>        if (block) ll = mid;<br>        else rr = mid-1;<br>      }<br>      f[i][j] = ll;<br>    }<br>  }<br>  int ans = (int)1e9;<br>  for (int j=0;j&lt;m;j++)<br>    if (f[0][j] &lt; ans) ans = f[0][j];<br>  return ans;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>