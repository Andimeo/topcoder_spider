<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.Arrays;<br><br>/*<br> * To change this template, choose Tools | Templates<br> * and open the template in the editor.<br> */<br><br>/**<br> *<br> * @author Trung Pham<br> */<br>public class ColorTheCells {<br><br>    public int[] time, dry;<br>    public int N, min;<br>    public int[][]dp;<br>    public static void main(String[] args) {<br>        int [] val = {35198, 26281, 72533, 91031, 44326, 43178, 85530};<br>        System.out.println(new ColorTheCells().minimalTime(val));<br>                <br>    }<br><br>    public int minimalTime(int[] dryingTime) {<br>        min = 1000000;<br>        N = dryingTime.length;<br>        dry = dryingTime;<br>        dp = new int[1&lt;&lt; N][N];<br>        for(int []val : dp){<br>            Arrays.fill(val, Integer.MAX_VALUE);<br>        }<br>        time = new int[dryingTime.length];<br>        cal(0, 0, 0) ;<br>        return min ;<br>    }<br><br>    public void cal(int index, int mask, int cur) {<br>       // System.out.println(mask + " " + cur);<br>        if (mask == (1 &lt;&lt; N) - 1) {<br>            min = Math.min(cur, min);<br>            return;<br>        }<br>        if (cur &gt;= min) {<br>            return;<br>        }<br>        if(dp[mask][index] &lt; cur ){<br>            return;<br>        }<br>        dp[mask][index] = cur;<br><br>        if (index + 1 &lt; N) {<br>            int val = 1 &lt;&lt; (index + 1);<br>            if ((mask &amp; val) == 0) {<br>                time[index + 1] = cur + 1 + dry[index + 1];<br>                cal(index, mask | val, cur + 1);<br>                time[index + 1] = 0;<br>                cal(index + 1, mask, cur + 1);<br>            } else {<br>                if (time[index + 1] &lt;= cur) {<br>                    cal(index + 1, mask, cur + 1);<br>                } else {<br>                    cal(index + 1, mask, time[index + 1] + 1);<br>                }<br>            }<br><br>        }<br>        if (index - 1 &gt;= 0) {<br>            int val = 1 &lt;&lt; (index - 1);<br>            if ((mask &amp; val) == 0) {<br>                time[index - 1] = cur + 1 + dry[index - 1];<br>                cal(index, mask | val, cur + 1);<br>                time[index - 1] = 0;<br>                cal(index - 1, mask, cur + 1);<br>            } else {<br>                if (time[index - 1] &lt;= cur) {<br>                    cal(index - 1, mask, cur + 1);<br>                } else {<br>                    cal(index - 1, mask, time[index - 1] + 1);<br>                }<br>            }<br>        }<br><br><br>    }<br>}<br></td>