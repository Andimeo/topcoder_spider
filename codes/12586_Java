<td class="problemText" colspan="8" valign="middle" align="left">
            public class TreeUnion {<br><br>  public double expectedCycles(String t1[], String t2[], int K) {<br><br>    int a1[] = gen(t1);<br>    int a2[] = gen(t2);<br><br>    int N = a1.length;<br><br>    double ret = 0.0;<br><br>    for(int i=0; i&lt;N; ++i) {<br>      int j = K - i - 2;<br>      if( j &lt; 0 || j &gt;= N ) { continue; }<br>      ret += 2.0 * a1[i] * a2[j];<br>    }<br><br>    return ret / N / (N - 1.0);<br><br>  }<br><br>  int[] gen(String tree[]) {<br><br>    String s = "";<br>    for( String t : tree ) { s += t; }<br>    String tmp[] = s.split(" ");<br>    int N = tmp.length + 1;<br><br>    int ret[][] = new int[N][N];<br>    for(int i=0; i&lt;N; ++i) {<br>      for(int j=0; j&lt;N; ++j) {<br>        ret[i][j] = N * N;<br>      }<br>      ret[i][i] = 0;<br>    }<br><br>    for(int i=0; i&lt;N-1; ++i) {<br>      int x = Integer.parseInt(tmp[i]);<br>      ret[x][i + 1] = ret[i + 1][x] = 1;<br>    }<br><br>    for(int k=0; k&lt;N; ++k) {<br>      for(int i=0; i&lt;N; ++i) {<br>        for(int j=0; j&lt;N; ++j) {<br>          ret[i][j] = Math.min(ret[i][j], ret[i][k] + ret[k][j]);<br>        }<br>      }<br>    }<br><br>    int count[] = new int[N];<br><br>    for(int i=0; i&lt;N; ++i) {<br>      for(int j=i+1; j&lt;N; ++j) {<br>        if( ret[i][j] &lt; N ) { ++count[ ret[i][j] ]; }<br>      }<br>    }<br><br>    return count;<br><br>  }<br><br>}<br></td>