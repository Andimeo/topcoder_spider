<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;string&gt;<br> <br>using namespace std;<br> <br> <br>class BlackAndWhiteSolitaire {<br>public:<br>  int minimumTurns(string cardFront) {<br> <br>    int c1 = 0, c2 = 0;<br> <br>    for (int i = 0; i &lt; cardFront.size(); i++) {<br>            if (i % 2 == 0) {<br>                if (cardFront[i] != 'W'){<br>                    c1++;<br>                }<br>            } else {<br>                if (cardFront[i] != 'B') {<br>                    c1++;<br>                }<br>            }<br>    }<br> <br>    for (int i = 0; i &lt; cardFront.size(); i++) {<br>            if (i % 2 == 0) {<br>                if (cardFront[i] != 'B'){<br>                    c2++;<br>                }<br>            } else {<br>                if (cardFront[i] != 'W') {<br>                    c2++;<br>                }<br>            }<br>    }<br> <br>    return min(c1, c2);<br>  }<br>};<br></td>