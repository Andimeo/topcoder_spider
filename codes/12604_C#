<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Collections;<br>using System.Diagnostics;<br>using System.Collections.Generic;<br>public class SpaceWarDiv1<br>{<br>    public long minimalFatigue(int[] magicalGirlStrength, int[] enemyStrength, long[] enemyCount)<br>    {<br>        Array.Sort(magicalGirlStrength);<br>        Array.Sort(enemyStrength, enemyCount);<br>        Array.Reverse(magicalGirlStrength);<br>        Array.Reverse(enemyStrength);<br>        Array.Reverse(enemyCount);<br>        for (int i = 0; i &lt; enemyStrength.Length; i++)<br>        {<br>            bool flg = false;<br>            for (int j = 0; j &lt; magicalGirlStrength.Length; j++)<br>            {<br>                if (enemyStrength[i] &lt;= magicalGirlStrength[j])<br>                    flg = true;<br>            }//for j<br>            if (!flg)<br>                return -1;<br>        }//for i<br>        long high = long.MaxValue / 3; //be careful OutOfRange<br>        long low = 0;<br>        while (high - low &gt; 0)<br>        {<br>            long mid = (high &amp; low) + ((high ^ low) &gt;&gt; 1);  //round down<br>            if (C(mid, magicalGirlStrength, enemyStrength, enemyCount)) //mid or higher is true<br>                high = mid;<br>            else<br>                low = mid + 1;<br>        }//while<br>        return high;    //low = high<br>    }<br><br>    private bool C(long mid, int[] magicalGirlStrength, int[] enemyStrength, long[] enemyCount)<br>    {<br>        long[] copy = (long[])enemyCount.Clone();<br>        for (int i = 0; i &lt; magicalGirlStrength.Length; i++)<br>        {<br>            long have = mid;<br>            int pos = 0;<br>            while (have &gt; 0 &amp;&amp; pos &lt; enemyStrength.Length)<br>            {<br>                if (magicalGirlStrength[i] &gt;= enemyStrength[pos])<br>                {<br>                    long diff = Math.Min(have, copy[pos]);<br>                    have -= diff;<br>                    copy[pos] -= diff;<br>                }<br>                pos++;<br>            }//while<br>        }//for i<br>        for (int i = 0; i &lt; copy.Length; i++)<br>        {<br>            if (copy[i] &gt; 0)<br>                return false;<br>        }//for i<br>        return true;<br>    }<br><br>}//SpaceWarDiv1<br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] modified for C# by onigiri[25-Feb-2013]<br>// Powered by CodeProcessor<br></td>