<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class SpaceWarDiv1 {<br>public:<br>  long long minimalFatigue(vector &lt;int&gt;, vector &lt;int&gt;, vector &lt;long long&gt;);<br>};<br> <br>long long SpaceWarDiv1::minimalFatigue(vector &lt;int&gt; mgs, vector &lt;int&gt; es, vector &lt;long long&gt; ec) {<br>  int n = mgs.size(), m = es.size();<br>  for (int i=0;i&lt;m;i++) {<br>    bool ok = false;<br>    for (int j=0;j&lt;n;j++)<br>      if (mgs[j] &gt;= es[i]) ok = true;<br>    if (!ok) return -1;<br>  }<br>  long long ans = 0;<br>  for (int i=0;i&lt;m;i++) {<br>    int cnt = 0;<br>    for (int j=0;j&lt;n;j++)<br>      if (mgs[j] &gt;= es[i]) cnt++;<br>    long long total = 0;<br>    for (int j=0;j&lt;m;j++)<br>      if (es[j] &gt;= es[i]) total += ec[j];<br>    total = (total+cnt-1) / cnt;<br>    if (total &gt; ans) ans = total;<br>  }<br>  return ans;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>