<td class="problemText" colspan="8" valign="middle" align="left">
            //  SRM 583 (C)<br><br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cassert&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;utility&gt;<br>#include &lt;numeric&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;bitset&gt;<br>#include &lt;complex&gt;<br><br>using namespace std;<br><br>typedef unsigned uint;<br>typedef long long Int;<br>typedef vector&lt;int&gt; vint;<br>typedef pair&lt;int,int&gt; pint;<br>#define mp make_pair<br><br>template&lt;class T&gt; void pv(T a, T b) { for (T i = a; i != b; ++i) cout &lt;&lt; *i &lt;&lt; " "; cout &lt;&lt; endl; }<br>template&lt;class T&gt; void chmin(T &amp;t, T f) { if (t &gt; f) t = f; }<br>template&lt;class T&gt; void chmax(T &amp;t, T f) { if (t &lt; f) t = f; }<br><br>int M, N;<br>int A[40][40];<br><br>int S;<br>int dp[1510][2];<br>double cnt[1510];<br><br>struct RandomPaintingOnABoard {<br>  <br>  double expectedSteps(vector &lt;string&gt; prob) {<br>    int h;<br>    int x, y;<br>    int a, b;<br>    int l;<br>    <br>    M = prob.size();<br>    N = prob[0].size();<br>    if (M &gt;= N) {<br>      for (x = 0; x &lt; M; ++x) for (y = 0; y &lt; N; ++y) {<br>        A[x][y] = prob[x][y] - '0';<br>      }<br>    } else {<br>      swap(M, N);<br>      for (x = 0; x &lt; M; ++x) for (y = 0; y &lt; N; ++y) {<br>        A[x][y] = prob[y][x] - '0';<br>      }<br>    }<br>    <br>    if (M == 1 &amp;&amp; N == 1) {<br>      return 1;<br>    }<br>    <br>    for (x = 0; x &lt; M; ++x) for (y = 0; y &lt; N; ++y) {<br>      S += A[x][y];<br>    }<br>    for (h = 0; h &lt; 1 &lt;&lt; N; ++h) {<br>      memset(dp, 0, sizeof(dp));<br>      dp[0][__builtin_popcount(h) &amp; 1] = 1;<br>      for (x = 0; x &lt; M; ++x) {<br>        b = 0;<br>        for (y = 0; y &lt; N; ++y) if (h &amp; 1 &lt;&lt; y) {<br>          b += A[x][y];<br>        }<br>        if (b != 0) {<br>          for (a = S; a &gt;= b; --a) for (l = 0; l &lt; 2; ++l) {<br>            dp[a][l] += dp[a - b][l ^ 1];<br>          }<br>        } else {<br>          for (a = 0; a &lt;= S; ++a) {<br>            dp[a][0] = dp[a][1] = dp[a][0] + dp[a][1];<br>          }<br>        }<br>      }<br>// cout&lt;&lt;"h = "&lt;&lt;h&lt;&lt;endl;for(a=0;a&lt;=S;++a)cout&lt;&lt;dp[a][0]&lt;&lt;" "&lt;&lt;dp[a][1]&lt;&lt;endl;<br>      for (a = 0; a &lt;= S; ++a) {<br>        cnt[a] += dp[a][0] - dp[a][1];<br>      }<br>    }<br>// cout&lt;&lt;"cnt : ";pv(cnt,cnt+S+1);<br>    <br>    double ans = 0;<br>    for (a = 0; a &lt; S; ++a) {<br>      double p = a / (double)S;<br>      ans += (1 / (1 - p)) * cnt[a];<br>    }<br>    if (ans &lt; 0) {<br>      ans = -ans;<br>    }<br>    return ans;<br>    <br>  }<br>  <br>};<br></td>