<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.Arrays;<br> <br>/**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> */<br>public class RandomPaintingOnABoard {<br>    public double expectedSteps(String[] prob) {<br>        int rows = prob.length;<br>        int cols = prob[0].length();<br>        int[][] table = new int[rows][cols];<br>        for (int r = 0; r &lt; rows; ++r)<br>            for (int c = 0; c &lt; cols; ++c)<br>                table[r][c] = prob[r].charAt(c) - '0';<br>        if (rows &gt; cols) {<br>            int[][] nt = new int[cols][rows];<br>            for (int r = 0; r &lt; rows; ++r)<br>                for (int c = 0; c &lt; cols; ++c)<br>                    nt[c][r] = table[r][c];<br>            table = nt;<br>            int tmp = rows;<br>            rows = cols;<br>            cols = tmp;<br>        }<br>        int total = 0;<br>        for (int[] x : table) for (int y : x) total += y;<br>        double dtotal = total;<br>        int[] colSums = new int[cols];<br>        double res = 0.0;<br>        for (int rowSet = 0; rowSet &lt; (1 &lt;&lt; rows); ++rowSet) {<br>            int rowCount = Integer.bitCount(rowSet);<br>            Arrays.fill(colSums, 0);<br>            int totalCur = 0;<br>            for (int r = 0; r &lt; rows; ++r) if ((rowSet &amp; (1 &lt;&lt; r)) != 0)<br>                for (int c = 0; c &lt; cols; ++c) {<br>                    colSums[c] += table[r][c];<br>                    totalCur += table[r][c];<br>                }<br>            int[] waysSum = new int[totalCur + 1];<br>            waysSum[0] = (rowCount &amp; 1) != 0 ? 1 : -1;<br>            for (int x : colSums) {<br>                for (int oldSum = totalCur - x; oldSum &gt;= 0; --oldSum)<br>                    waysSum[oldSum + x] -= waysSum[oldSum];<br>            }<br>            for (int i = 0; i &lt;= totalCur &amp;&amp; i &lt; total; ++i) if (waysSum[i] != 0) {<br>                res += waysSum[i] * dtotal / (total - i);<br>            }<br>        }<br>        return Math.abs(res);<br>    }<br>}<br></td>