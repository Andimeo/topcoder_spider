<td class="problemText" colspan="8" valign="middle" align="left">
            //  SRM 583 (B)<br><br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cassert&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;utility&gt;<br>#include &lt;numeric&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;bitset&gt;<br>#include &lt;complex&gt;<br><br>using namespace std;<br><br>typedef unsigned uint;<br>typedef long long Int;<br>typedef vector&lt;int&gt; vint;<br>typedef pair&lt;int,int&gt; pint;<br>#define mp make_pair<br><br>template&lt;class T&gt; void pv(T a, T b) { for (T i = a; i != b; ++i) cout &lt;&lt; *i &lt;&lt; " "; cout &lt;&lt; endl; }<br>template&lt;class T&gt; void chmin(T &amp;t, T f) { if (t &gt; f) t = f; }<br>template&lt;class T&gt; void chmax(T &amp;t, T f) { if (t &lt; f) t = f; }<br><br>int N;<br>int d[110][110];<br><br>struct TravelOnMars {<br>  <br>  int minTimes(vector &lt;int&gt; range, int startCity, int endCity) {<br>    int u, v, w;<br>    int k;<br>    <br>    N = range.size();<br>    memset(d, 0x3f, sizeof(d));<br>    for (u = 0; u &lt; N; ++u) {<br>      d[u][u] = 0;<br>    }<br>    for (u = 0; u &lt; N; ++u) {<br>      for (v = 0; v &lt; N; ++v) {<br>        for (k = -2; k &lt;= +2; ++k) {<br>          if (abs(N * k + u - v) &lt;= range[u]) {<br>            chmin(d[u][v], 1);<br>          }<br>        }<br>      }<br>    }<br>    for (w = 0; w &lt; N; ++w) for (u = 0; u &lt; N; ++u) for (v = 0; v &lt; N; ++v) {<br>      chmin(d[u][v], d[u][w] + d[w][v]);<br>    }<br>    int ans = d[startCity][endCity];<br>    return ans;<br>    <br>  }<br>  <br>};<br></td>