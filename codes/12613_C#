<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class Egalitarianism {<br>    public int maxDifference(string[] isFriend, int d)<br>    {<br>        int n = isFriend.Length;<br>        int[,] dist = new int[n, n];<br>        int MAX = 9999;<br>        for (int i = 0; i &lt; n; i++)<br>        {<br>            for (int j = 0; j &lt; n; j++)<br>            {<br>                dist[i, j] = MAX;<br>            }<br>            dist[i, i] = 0;<br>        }<br><br>        for (int i = 0; i &lt; n; i++)<br>        {<br>            for (int j = 0; j &lt; n; j++)<br>            {<br>                if (isFriend[i][j] == 'Y') dist[i, j] = 1;<br>            }<br>        }<br><br>        for (int k = 0; k &lt; n; k++)<br>        {<br>            for (int i = 0; i &lt; n; i++)<br>            {<br>                for (int j = 0; j &lt; n; j++)<br>                {<br>                    dist[i, j] = Math.Min(dist[i, j], dist[i, k] + dist[k, j]);<br>                }<br>            }<br>        }<br><br>        int max = 0;<br>        for (int i = 0; i &lt; n; i++)<br>        {<br>            for (int j = i + 1; j &lt; n; j++)<br>            {<br>                if (dist[i, j] == MAX) return -1;<br>                max = Math.Max(dist[i, j], max);<br>            }<br>        }<br><br>        return max * d;<br><br>    }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] Modified for C# by ysn<br>// Powered by CodeProcessor<br></td>