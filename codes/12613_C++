<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define forn(i,n) for(int i=0;i&lt;(int)n;i++)<br>#define dforn(i,n) for(int i=(int)n-1;i&gt;=0;i--)<br>#define all(v) v.begin(),v.end()<br> <br>int dist[64][64];<br> <br>class Egalitarianism {<br>public:<br>  int maxDifference(vector &lt;string&gt; isFriend, int d)<br>  {<br>    int n = isFriend.size();<br>    forn(i,n)<br>    forn(j,n)<br>    if(isFriend[i][j]=='Y')<br>      dist[i][j] = 1;<br>    else<br>      dist[i][j] = 1000;<br>    forn(i,n)<br>      dist[i][i] = 0;<br>    forn(k,n)<br>    forn(i,n)<br>    forn(j,n)<br>      dist[i][j] = min(dist[i][j],dist[i][k]+dist[k][j]);<br>    int res = 0;<br>    forn(i,n)<br>    forn(j,n)<br>      res = max(res,dist[i][j]);<br>    if(res == 1000)<br>      return -1;<br>    return res*d;<br>  }<br>};<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>