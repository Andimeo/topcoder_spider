<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br> <br>public class Egalitarianism {<br>    final static int INF = (int)1e9;<br> <br>    public int maxDifference(String[] isFriend, int d) {    <br>        int n = isFriend.length;<br>        int[][] graph = new int[n][n];<br>        for (int i = 0; i &lt; n; ++ i) {<br>            for (int j = 0; j &lt; n; ++ j) {<br>                graph[i][j] = isFriend[i].charAt(j) == 'Y' ? 1 : INF;<br>            }<br>        }<br>        for (int k = 0; k &lt; n; ++ k) {<br>            for (int i = 0; i &lt; n; ++ i) {<br>                for (int j = 0; j &lt; n; ++ j) {<br>                    graph[i][j] = Math.min(graph[i][j], graph[i][k] + graph[k][j]);<br>                }<br>            }<br>        }<br>        int answer = 0;<br>        for (int i = 0; i &lt; n; ++ i) {<br>            for (int j = 0; j &lt; i; ++ j) {<br>                if (graph[i][j] &gt;= INF) {<br>                    return -1;<br>                }<br>                answer = Math.max(answer, d * graph[i][j]);<br>            }<br>        }<br>        return answer;<br>    }<br> <br>}<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.17 [modified TZTester]<br>// Powered by CodeProcessor<br></td>