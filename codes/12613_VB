<td class="problemText" colspan="8" valign="middle" align="left">
            Imports System.Array<br>Imports System.Collections.Generic<br> <br>Public Class Egalitarianism<br>    Private Const INF As Integer = 1000<br>    Public Function maxDifference(ByVal isFriend As String(), ByVal d As Integer) As Integer<br>        Dim sp As Integer = LongestShortestPath(isFriend)<br>        If sp = INF Then Return -1<br>        Return d * sp<br>    End Function<br>    Private Function LongestShortestPath(ByVal isFriend As String()) As Integer<br>        Dim n As Integer = isFriend.Length<br>        Dim sp(n - 1, n - 1) As Integer<br>        For i As Integer = 0 To n - 1<br>            For j As Integer = 0 To n - 1<br>                sp(i, j) = INF<br>                If isFriend(i)(j) = "Y"c Then sp(i, j) = 1<br>            Next<br>            sp(i, i) = 0<br>        Next<br>        For k As Integer = 0 To n - 1<br>            For i As Integer = 0 To n - 1<br>                For j As Integer = 0 To n - 1<br>                    Dim through_k As Integer = sp(i, k) + sp(j, k)<br>                    If through_k &lt; sp(i, j) Then sp(i, j) = through_k<br>                Next<br>            Next<br>        Next<br>        LongestShortestPath = 0<br>        For i As Integer = 0 To n - 1<br>            For j As Integer = 0 To i - 1<br>                If LongestShortestPath &lt; sp(i, j) Then LongestShortestPath = sp(i, j)<br>            Next<br>        Next<br>    End Function<br>End Class<br></td>