<td class="problemText" colspan="8" valign="middle" align="left">
            #line 5 "AntlerSwapping.cpp"<br>#define cerr cout<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;ctime&gt;<br>#include &lt;cmath&gt;<br>#include &lt;map&gt;<br>using namespace std;<br><br>int n;<br>vector &lt;int&gt; A, B;<br>int maxDiff;<br>char F[16][16][2][1&lt;&lt;16];<br><br>bool check(int pos, int loc, int pos2, int loc2)<br>{<br>  int v1, v2;<br>  if(loc == 0)<br>    v1 = A[pos];<br>  else<br>    v1 = B[pos];<br>  if(loc2 == 0)<br>    v2 = A[pos2];<br>  else<br>    v2 = B[pos2];<br>  return abs(v1 - v2) &lt;= maxDiff;<br>}<br><br>char f(int head, int cur, int upDown, int mask)<br>{<br>  char &amp;ret = F[head][cur][upDown][mask];<br>  if(ret != -1) return ret;<br>  ret = 0;<br>  // link to head?<br>  if(check(head, 1, cur, upDown))<br>  {<br>    char remainCirc = 1;<br>    int nextMask = mask | (1&lt;&lt;head);<br>    int pos = -1;<br>    for(int i = 0; i &lt; n; i++)<br>      if((nextMask &amp; (1&lt;&lt;i)) == 0)<br>      {<br>        pos = i;<br>        break;<br>      }<br>    if(pos != -1)<br>      remainCirc += f(pos, pos, 0, nextMask);<br>    else<br>      remainCirc += 100;<br>    ret = max(ret, remainCirc);<br>  }<br><br>  // link to others<br>  for(int i = 0; i &lt; n; i++)<br>    if((mask &amp; (1&lt;&lt;i)) == 0)<br>      if(i != head)<br>      {<br>        if(check(cur, upDown, i, 0))<br>        {<br>          ret = max(ret, f(head, i, 1, mask | (1&lt;&lt;i)));<br>        }<br>        if(check(cur, upDown, i, 1))<br>        {<br>          ret = max(ret, f(head, i, 0, mask | (1&lt;&lt;i)));<br>        }<br>      }<br><br>  return ret;<br>}<br><br>class AntlerSwapping<br>{<br>        public:<br>        int getmin(vector &lt;int&gt; antler1, vector &lt;int&gt; antler2, int capacity)<br>        {<br>          A = antler1, B = antler2;<br>          maxDiff = capacity;<br>          n = A.size();<br>          memset(F, 0xff, sizeof(F));<br>          int v = f(0, 0, 0, 0);<br>          if(v &gt;= 100)<br>            return n - (v-100);<br>          return -1;<br>        }<br>        <br><br>};<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>