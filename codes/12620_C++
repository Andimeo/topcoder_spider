<td class="problemText" colspan="8" valign="middle" align="left">
            // Paste me into the FileEdit configuration dialog<br> <br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;cstring&gt;<br> <br>using namespace std;<br> <br>typedef long long llint;<br>typedef pair&lt; int, int &gt; par;<br>#define x first<br>#define y second<br> <br>const int mod = 1000000009;<br> <br>int dp[10][10][1&lt;&lt;8][1&lt;&lt;8];<br> <br>class StringPath {<br>public:<br>  void add(int &amp;x, int y) {<br>    if((x += y) &gt;= mod) x -= mod;<br>  }<br> <br>  int countBoards( int n, int m, string A, string B ) {<br>    dp[0][0][1][1] = 1;<br>    for(int i = 0; i &lt; n; ++i)<br>      for(int j = 0; j &lt;= m; ++j)<br>        for(int sa = 0; sa &lt; (1&lt;&lt;m); ++sa)<br>          for(int sb = 0; sb &lt; (1&lt;&lt;m); ++sb) {<br>            if(j == m) {<br>              dp[i+1][0][sa][sb] = dp[i][j][sa][sb];<br>              continue;<br>            }<br>            <br>            //printf("%d %d %d %d, %d\n", i, j, sa, sb, dp[i][j][sa][sb]);<br> <br>            if(dp[i][j][sa][sb]) {<br>              int r = dp[i][j][sa][sb];<br>              //printf("%d %d %d %d, %d\n", i, j, sa, sb, dp[i][j][sa][sb]);   OB<br>              int pa = 0;<br>              if(sa&amp;(1&lt;&lt;j)) pa = 1;<br>              if(j &gt; 0 &amp;&amp; (sa&amp;(1&lt;&lt;(j-1)))) pa = 1;<br>              <br>              int pb = 0;<br>              if(sb&amp;(1&lt;&lt;j)) pb = 1;<br>              if(j &gt; 0 &amp;&amp; (sb&amp;(1&lt;&lt;(j-1)))) pb = 1;<br>              <br>              int sA = sa&amp;(~(1&lt;&lt;j));<br>              int sB = sb&amp;(~(1&lt;&lt;j));<br>              if(A[i+j] == B[i+j]) {<br>                add(dp[i][j+1][sA|(pa&lt;&lt;j)][sB|(pb&lt;&lt;j)], r);<br>                add(dp[i][j+1][sA][sB], (25LL*r)%mod);<br>              } else {<br>                add(dp[i][j+1][sA|(pa&lt;&lt;j)][sB], r);<br>                add(dp[i][j+1][sA][sB|(pb&lt;&lt;j)], r);<br>                add(dp[i][j+1][sA][sB], (24LL*r)%mod);<br>              }<br>            }<br>          }<br>    <br>    int ans = 0;<br>    for(int sa = 0; sa &lt; (1&lt;&lt;m); ++sa)<br>      for(int sb = 0; sb &lt; (1&lt;&lt;m); ++sb)<br>        if((sa&amp;(1&lt;&lt;(m-1))) &amp;&amp; (sb&amp;(1&lt;&lt;(m-1)))) add(ans, dp[n][0][sa][sb]);<br>    return ans;<br>  }<br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.17 [modified TZTester]<br>// Powered by CodeProcessor<br></td>