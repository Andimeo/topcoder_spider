<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>using namespace std;<br><br>class LittleElephantAndXor {<br>public:<br>  int go(int x, int t, int h) {<br>    if (x &amp; (1 &lt;&lt; h)) {<br>      if (!t)  return (1 &lt;&lt; h) - 1;<br>      else  return x - (1 &lt;&lt; h);<br>    }else  return x;<br>  }<br>  long long calc(int A, int B, int C, int h) {<br>    if (h == 0) {<br>      long long ans = 0;<br>      for (int i = 0; i &lt;= A; i++)<br>        for (int j = 0; j &lt;= B; j++)<br>          if ((i ^ j) &lt;= C)  ans++;<br>      return ans;<br>    }<br>    if (A == (1LL &lt;&lt; (h + 1)) - 1)  return 1LL * (B + 1) * (C + 1);<br>    if (B == (1LL &lt;&lt; (h + 1)) - 1)  return 1LL * (A + 1) * (C + 1);<br>    long long ans = 0;<br>    for (int i = 0; i &lt;= 1; i++)<br>      for (int j = 0; j &lt;= 1; j++)<br>        if (i * (1 &lt;&lt; h) &lt;= A &amp;&amp; j * (1 &lt;&lt; h) &lt;= B &amp;&amp; ((i * (1 &lt;&lt; h)) ^ (j * (1 &lt;&lt; h))) &lt;= C)  ans += calc(go(A, i, h), go(B, j, h), go(C, i ^ j, h), h - 1);<br>    return ans;<br>  }<br>  long long getNumber(int A, int B, int C) {<br>    return calc(A, B, C, 30);<br>  }<br>} a;<br></td>