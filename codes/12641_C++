<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;cmath&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;utility&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>using namespace std;<br>int n,m,i,j,xd,ed,cnt,ost,now,nowcnt,e,p;<br>vector&lt;int&gt; b[55],d;<br>long long r,f[55][55][55],C[55][55];<br>bool u[55];<br>bool cmp(int i, int j) { return d[i]&lt;d[j]; }<br>class Excavations {<br> public:<br>  long long count(vector&lt;int&gt; a, vector&lt;int&gt; dd, vector&lt;int&gt; c, int k) {<br>   for (i=0; i&lt;55; i++) {<br>     C[i][0]=1;<br>     for (j=1; j&lt;=i; j++) C[i][j]=C[i-1][j]+C[i-1][j-1];<br>   }<br>   n=a.size(); m=c.size();<br>   d=dd; d.push_back(0);<br>   for (i=0; i&lt;n; i++) b[a[i]].push_back(i);<br>   for (i=1; i&lt;=50; i++) sort(b[i].begin(),b[i].end(),cmp);<br>   f[0][0][n]=1;<br>   for (i=0; i&lt;m; i++) {<br>     now=c[i];<br>     u[now]=true;<br>   nowcnt=b[now].size();<br>     for (j=0; j&lt;k; j++) for (xd=0; xd&lt;=n; xd++) if (f[i][j][xd]&gt;0)<br>     for (e=0; e&lt;nowcnt; e++) {<br>       ed=xd;<br>     if (d[b[now][e]]&gt;d[ed]) ed=b[now][e];<br>       ost=nowcnt-e-1;<br>       for (p=0; p&lt;=ost &amp;&amp; j+1+p&lt;=k; p++)<br>         f[i+1][j+1+p][ed]+=f[i][j][xd]*C[ost][p];<br>     }<br>   }<br>   for (j=0; j&lt;=k; j++) for (xd=0; xd&lt;=n; xd++) if (f[m][j][xd]&gt;0) {<br>     for (cnt=i=0; i&lt;n; i++) if ((!u[a[i]]) &amp;&amp; d[i]&gt;d[xd]) cnt++;<br>   if (cnt&gt;=k-j) r+=f[m][j][xd]*C[cnt][k-j];<br>   }<br>   return r;<br>  }<br>};<br></td>