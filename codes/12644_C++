<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;set&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;iostream&gt;<br>#include&lt;cstdlib&gt;<br>#include&lt;cstring&gt;<br>#include&lt;cstdio&gt;<br>#include&lt;vector&gt;<br>using namespace std;<br>#define FOR(i,j,k) for(i=j;i&lt;=k;i++)<br>#define REP(i,j) for(i=0;i&lt;j;i++)<br>long long c[100][100],f[100][100];<br>int num[100];<br><br>class Excavations2<br>{<br>public:<br>    long long count(vector &lt;int&gt; kind, vector &lt;int&gt; found, int K)<br>    {<br>        int i,j,k;<br>        c[0][0]=1;<br>        FOR(i,1,50)<br>        {<br>            c[i][0]=c[i][i]=1;<br>            FOR(j,1,i-1)c[i][j]=c[i-1][j]+c[i-1][j-1];<br>        }<br>        for(i=0;i&lt;kind.size();i++)num[kind[i]]++;<br>        f[0][0]=1;<br>        for(j=0;j&lt;found.size();j++)<br>        {<br>            for(i=0;i&lt;=K;i++)<br>            {<br>                FOR(k,1,num[found[j]])<br>                if(i-k&gt;=0)<br>                {<br>                    f[j+1][i]+=c[num[found[j]]][k]*f[j][i-k];<br>                }<br>                f[j+1][0]=0;<br>                cout&lt;&lt;j+1&lt;&lt;" "&lt;&lt;i&lt;&lt;" "&lt;&lt;f[j+1][i]&lt;&lt;endl;<br>            }<br>        }<br>        return f[found.size()][K];<br>    }<br>};<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>