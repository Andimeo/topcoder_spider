<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;memory&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;algorithm&gt;<br>using namespace std;<br><br>typedef long long Int;<br>typedef pair&lt;int,int&gt; PII;<br>typedef vector&lt;int&gt; VInt;<br><br>#define FOR(i, a, b) for(i = (a); i &lt; (b); ++i)<br>#define RFOR(i, a, b) for(i = (a) - 1; i &gt;= (b); --i)<br>#define CLEAR(a, b) memset(a, b, sizeof(a))<br>#define SIZE(a) int((a).size())<br>#define ALL(a) (a).begin(),(a).end()<br>#define PB push_back<br>#define MP make_pair<br><br>#define INF (1 &lt;&lt; 29)<br><br>int R[64][32][32];<br><br>class StringWeight {<br>  public:<br>  int getMinimum(vector &lt;int&gt; L)<br>  {<br>    int n = SIZE(L);<br>    int m = 26;<br><br>    int i, j, k, p, q, t;<br>    FOR(i, 0, n + 1)<br>      FOR(j, 0, m + 1)<br>        FOR(k, 0, m + 1)<br>          R[i][j][k] = INF;<br><br>    R[0][0][0] = 0;<br>    int sum = 0;<br>    FOR(i, 0, n)<br>    {<br>      int need = min(L[i], m);<br>      FOR(j, 0, m + 1)<br>        FOR(k, 0, m + 1)<br>          if(R[i][j][k] != INF)<br>          {<br>            int left = m - j - k;<br>            FOR(p, 0, j + 1)<br>              FOR(q, 0, left + 1)<br>                FOR(t, 0, left + 1 - q)<br>                  if(p + q + t &lt;= L[i] &amp;&amp; j + q + t &gt;= need)<br>                  {<br>                    int ii = i + 1;<br>                    int jj = j - p + q;<br>                    int kk = k + p + t;<br>                    int r = R[i][j][k];<br><br>                    r += p*sum + p*(p - 1)/2;<br>                    r -= q*(sum + L[i] - 1) - q*(q - 1)/2;<br><br>                    if(p == j)<br>                      r += L[i] - p - q - t;<br><br>                    R[ii][jj][kk] = min(R[ii][jj][kk], r);<br>                  }<br>          }<br><br>      sum += L[i];<br>    }<br><br>    int res = INF;<br>    FOR(i, 0, m + 1)<br>      res = min(res, R[n][0][i]);<br><br>    return res;<br>  }<br><br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>