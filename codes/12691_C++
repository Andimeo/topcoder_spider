<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class PiecewiseLinearFunction {<br>public:<br>  int maximumSolutions(vector &lt;int&gt;);<br>};<br> <br>int N;<br>vector &lt;int&gt; val;<br> <br>int test (int cval)<br>{<br>  int res = 0;<br>  for (int i = 0; i &lt; N; i++)<br>    if (val[i] == cval)<br>      res++;<br>    <br>  for (int i = 0; i &lt; N - 1; i++)<br>  {<br>    if (val[i] &gt; cval &amp;&amp; cval &gt; val[i+1])<br>      res++;<br>    if (val[i+1] &gt; cval &amp;&amp; cval &gt; val[i])<br>      res++;<br>  }<br>  return res;<br>}<br> <br>int PiecewiseLinearFunction::maximumSolutions(vector &lt;int&gt; Y) {<br>  N = Y.size();<br>  <br>  for (int i = 0; i &lt; N; i++)<br>    val.push_back (2 * Y[i]);<br>  <br>  for (int i = 0; i &lt; N - 1; i++)<br>    if (Y[i] == Y[i+1])<br>      return -1;<br>  <br>  int res = 0;<br>  for (int i = 0; i &lt; N; i++)<br>  {<br>    res = max (res, test (val[i]));<br>    res = max (res, test (val[i] + 1));<br>  }<br>  return res;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>