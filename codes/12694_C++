<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;fstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstring&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;map&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>const int MAXN=305;<br>bool ok1[MAXN][MAXN],ok2[MAXN][MAXN];<br><br>class EnclosingTriangleColorful<br>{<br>  public:<br>    int work(int n,int m,vector&lt;int&gt; x,vector&lt;int&gt; y)<br>    {<br>      int ans=0;<br>      memset(ok1,0,sizeof(ok1));<br>      memset(ok2,0,sizeof(ok2));<br>      for(int i=1;i&lt;n;i++)<br>      {<br>        for(int j=1;j&lt;n;j++)<br>        {<br>          bool ok=true;<br>          for(int k=0;k&lt;m;k++)<br>          if(x[k]*(n-y[k])&lt;(j-x[k])*(y[k]-i)) ok=false;<br>          if(ok) ok1[i][j]=true;<br>          ok=true;<br>          for(int k=0;k&lt;m;k++)<br>          if((x[k]-n)*(n-y[k])&gt;(y[k]-i)*(j-x[k])) ok=false;<br>          if(ok) ok2[i][j]=true;<br>        }<br>      }<br>      for(int i=1;i&lt;n;i++)<br>      {<br>        for(int j=1;j&lt;n;j++)<br>        {<br>          bool ok=true;<br>          for(int k=0;k&lt;m;k++)<br>          if(x[k]*(j-y[k])&gt;(y[k]-i)*(n-x[k])) ok=false;<br>          if(!ok) continue;<br>          for(int k=1;k&lt;n;k++)<br>          if(ok1[i][k]&amp;&amp;ok2[j][k]) ans++;<br>        }<br>      }<br>      return ans;<br>    }<br>    int getNumber(int n, vector &lt;int&gt; x, vector &lt;int&gt; y)<br>    {<br>      int m=x.size();<br>      int ans=work(n,m,x,y);<br>      for(int j=1;j&lt;=3;j++)<br>      {<br>        for(int i=0;i&lt;m;i++)<br>        {<br>          int t=y[i];<br>          y[i]=x[i];<br>          x[i]=n-t;<br>        }<br>        ans+=work(n,m,x,y);<br>      }<br>      return ans;<br>    }<br>};<br></td>