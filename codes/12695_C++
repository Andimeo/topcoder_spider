<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;cstdio&gt;<br>#include&lt;cstdlib&gt;<br>#include&lt;cstring&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;iostream&gt;<br>#include&lt;fstream&gt;<br>#include&lt;map&gt;<br>#include&lt;ctime&gt;<br>#include&lt;set&gt;<br>#include&lt;queue&gt;<br>#include&lt;cmath&gt;<br>#include&lt;vector&gt;<br>#include&lt;bitset&gt;<br>#include&lt;functional&gt;<br>#define x first<br>#define y second<br>#define mp make_pair<br>#define pb push_back<br>#define REP(i,l,r) for((i)=(l);(i)&lt;=(r);++(i))<br>#define REP2(i,l,r) for((i)=(l);(i)!=(r);++(i))<br>using namespace std;<br><br>typedef long long LL;<br>typedef double ld;<br><br>const int MAX=1000+10;<br>const int Mod=(int)1e9+9;<br>const int Alpha=40;<br><br>int f[MAX][Alpha];<br><br>struct StringWeightDiv2<br>{<br>  int countMinimums(int L)<br>  {<br>    int i,j,k;<br>    f[0][0]=1;<br>    REP(i,1,L)<br>      REP(j,1,26)<br>        REP(k,1,i)<br>          f[i][j]=(f[i][j]+f[k-1][j-1]) % Mod;<br>    int num=min(L,26);<br>    int now=26;<br>    LL ans=f[L][num];<br>    while(num--)<br>      ans=ans*(LL)(now--) % Mod;<br>    return ans;<br>  }<br>};<br></td>