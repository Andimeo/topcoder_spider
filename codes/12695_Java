<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.Arrays;<br><br>public class StringWeightDiv2 {<br>  long dp[][];<br>  int mod  =  1000000009,L;<br>  public int countMinimums(int L) {<br>    this.L = L;<br>    dp = new long[27][L+1];<br>    for(int i=0;i&lt;27;i++)<br>      Arrays.fill(dp[i], -1L);<br>    long ans = 1;<br>    if(L&lt;=26)<br>    {<br>      for(int y=26,cnt=1;cnt&lt;=L;y--,cnt++)<br>      {<br>        ans*=y;<br>        ans%=mod;<br>      }<br>      return (int)ans;<br>    }<br>    for(int y=26;y&gt;=1;y--)<br>    {<br>      ans*=y;<br>      ans%=mod;<br>    }<br>    return (int)((ans*solve(26,L))%mod);<br>  }<br>  <br>  long solve(int al,int cl)<br>  {<br>    if(cl==0&amp;&amp;al&gt;0)<br>      return -1;<br>    else if(al==0&amp;&amp;cl&gt;0)<br>      return -1;<br>    else if(al==0&amp;&amp;cl==0)<br>      return 1;<br>    if(dp[al][cl]==-1)<br>    {<br>      dp[al][cl] = 0;<br>      for(int u=1;u&lt;=cl;u++)<br>      {<br>        long ans = solve(al-1,cl-u);<br>        if(ans!=-1)<br>          dp[al][cl]+=ans;<br>        dp[al][cl]%=mod;<br>      }<br>    }<br>    return dp[al][cl];<br>  }<br><br>}<br></td>