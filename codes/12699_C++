<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br> <br>class ThreeColorabilityEasy {<br>public:<br>  string isColorable(vector &lt;string&gt; cells) {<br>    int n = cells.size();<br>    int c1, c2;<br>    for (int i = 0; i &lt; n - 1; i++)<br>    {<br>      for (int j = 0; j &lt; cells[i].length() - 1; j++)<br>      {<br>        c1 = c2 = 0;<br>        if (cells[i][j] == 'N') c1++;<br>        else c2++;<br>        if (cells[i+1][j] == 'N') c1++;<br>        else c2++;<br>        if (cells[i][j+1] == 'N') c1++;<br>        else c2++;<br>        if (cells[i+1][j+1] == 'N') c1++;<br>        else c2++;<br>        <br>        if (c1 == 1 || c2 == 1) return "No";<br>      }<br>    }<br>    return "Yes";<br>  }<br>};<br> <br> <br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>