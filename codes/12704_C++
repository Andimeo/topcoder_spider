<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;vector&gt;<br>#include &lt;array&gt;<br>#include &lt;list&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;unordered_set&gt;<br>#include &lt;unordered_map&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;cstdint&gt;<br>#include &lt;cmath&gt;<br> <br>#define FOR(i,k,n)  for(int i = (k);i &lt; (n);++i)<br>#define REP(i,n)    FOR(i,0,n)<br>#define ALL(x)      begin(x),end(x)<br> <br>using namespace std;<br> <br>typedef vector&lt;int&gt; vecint;<br> <br>struct elem {<br>  long long num;<br>  long long sum;<br>};<br> <br>bool operator&lt;(const elem &amp;lhs,const elem &amp;rhs) {<br>  return lhs.num &lt; rhs.num;<br>}<br> <br>class LittleElephantAndArray {<br>  public:<br>  int getNumber(long long A, int N) {<br>    vector&lt;elem&gt; dp;<br>    elem e = {0,1};<br>    dp.push_back(e);<br>    REP(i,N+1) {<br>      vector&lt;elem&gt; ary;<br>      stringstream ss;<br>      ss &lt;&lt; A+i;<br>      string str = ss.str();<br>      FOR(j,1,1&lt;&lt;str.size()) {<br>        long long num = 0;<br>        REP(k,str.size()) {<br>          if(j &amp; (1 &lt;&lt; k)) {<br>            num *= 10;<br>            num += str[k] - '0';<br>          }<br>        }<br>        elem el = {num,0};<br>        auto itr = upper_bound(ALL(dp),el);<br>        if(itr != dp.begin())<br>          el.sum = itr[-1].sum;<br>        ary.push_back(el);<br>      }<br>      sort(ALL(ary));<br>      FOR(i,1,ary.size()) {<br>        ary[i].sum += ary[i-1].sum;<br>        ary[i].sum %= 1000000007;<br>      }<br>      dp.swap(ary);<br>    }<br>    return dp.back().sum;<br>  }<br>};<br></td>