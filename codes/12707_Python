<td class="problemText" colspan="8" valign="middle" align="left">
            def findMax(duration, tone, T, index, sung, timeUsed, toneMin, toneMax):<br>  next = False<br>  found = []<br>  for i in xrange(index, len(duration)):<br>    newTime = timeUsed + duration[i]<br>    newToneMax = toneMax<br>    newToneMin = toneMin<br>    if(tone[i] &gt; toneMax or toneMin == -1):<br>      newToneMax = tone[i]<br>    if(tone[i] &lt; toneMin or toneMin == -1):<br>      newToneMin = tone[i]<br>    newTime += (newToneMax - newToneMin) - (toneMax - toneMin)<br>    if(newTime &lt;= T):<br>      next = True<br>      found.append(findMax(duration, tone, T, i + 1, sung + 1, newTime, newToneMin, newToneMax))<br>  <br>  if(not next):<br>    return sung<br>  else:<br>    return max(found)<br> <br>class GUMIAndSongsDiv2:<br>  def maxSongs(self, duration, tone, T):<br>    songs = len(duration)<br>    #sort both lists by decreasing duration to increase efficiency<br>    zipped = zip(duration, tone)<br>    zipped.sort(reverse = True)<br>    sortedDuration, sortedTone = zip(*zipped)<br>    print sortedDuration, sortedTone<br>    <br>    #find best list recursively    <br>    return findMax(duration, tone, T, 0, 0, 0, -1, -1)<br></td>