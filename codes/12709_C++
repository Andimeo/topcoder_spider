<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class GameInDarknessDiv1 {<br>public:<br>  string check(vector &lt;string&gt;);<br>};<br> <br>const int dx[4] = {-1, 0, 1, 0};<br>const int dy[4] = {0, -1, 0, 1};<br>int n, m;<br>char a[77][77];<br>int dist[77][77];<br> <br>int dfs(int i, int j, int k) {<br>  dist[i][j] = k;<br>  int mx = k;<br>  for (int q=0;q&lt;4;q++) {<br>    int x = i + dx[q];<br>    int y = j + dy[q];<br>    if (x &lt; 0 || y &lt; 0 || x &gt;= n || y &gt;= m) continue;<br>    if (a[x][y] != '#' &amp;&amp; dist[x][y] == -1) {<br>      int cur = dfs(x, y, k + 1);<br>      if (cur &gt; mx) mx = cur;<br>    }<br>  }<br>  return mx;<br>}<br> <br>int da[77][77], db[77][77];<br> <br>string GameInDarknessDiv1::check(vector &lt;string&gt; Z) {<br>  n = Z.size();<br>  m = Z[0].length();<br>  for (int i=0;i&lt;n;i++)<br>    for (int j=0;j&lt;m;j++) {<br>      a[i][j] = Z[i][j];<br>      dist[i][j] = -1;<br>    }<br>  for (int i=0;i&lt;n;i++)<br>    for (int j=0;j&lt;m;j++) <br>      if (a[i][j] == 'A') dfs(i, j, 0);<br>  for (int i=0;i&lt;n;i++)<br>    for (int j=0;j&lt;m;j++) {<br>      da[i][j] = dist[i][j];<br>      dist[i][j] = -1;<br>    }<br>  for (int i=0;i&lt;n;i++)<br>    for (int j=0;j&lt;m;j++) <br>      if (a[i][j] == 'B') dfs(i, j, 0);<br>  for (int i=0;i&lt;n;i++)<br>    for (int j=0;j&lt;m;j++) db[i][j] = dist[i][j];<br>  for (int i=0;i&lt;n;i++)<br>    for (int j=0;j&lt;m;j++)<br>      if (a[i][j] != '#' &amp;&amp; da[i][j] &gt; db[i][j] + 1) {<br>        char old = a[i][j];<br>        a[i][j] = '#';<br>        for (int ii=0;ii&lt;n;ii++)<br>          for (int jj=0;jj&lt;m;jj++) dist[ii][jj] = -1;<br>        int cnt = 0;<br>        for (int q=0;q&lt;4;q++) {<br>          int x = i + dx[q];<br>          int y = j + dy[q];<br>          if (x &lt; 0 || y &lt; 0 || x &gt;= n || y &gt;= m) continue;<br>          if (a[x][y] != '#')<br>            if (dfs(x, y, 1) &gt;= 3) cnt++;<br>        }<br>        if (cnt &gt;= 3) return "Bob wins";<br>        a[i][j] = old;<br>      }<br>  return "Alice wins";<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>