<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;cstdio&gt;<br>#include&lt;cstring&gt;<br>#include&lt;cstdlib&gt;<br>#include&lt;cmath&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;iostream&gt;<br>#include&lt;vector&gt;<br>#include&lt;string&gt;<br>using namespace std;<br>typedef long long LL;<br>const int V=3100;<br>int dx[]={1,-1,0,0};<br>int dy[]={0,0,1,-1};<br>int x[V],y[V];<br>int can[2][60][60];<br>class GameInDarknessDiv2<br>{<br>  public:<br>  string check(vector &lt;string&gt; s, vector &lt;string&gt; M)<br>  {<br>    string mv="";<br>    for(int i=0;i&lt;(int)M.size();i++)<br>    mv+=M[i];<br>    int len=mv.length();<br>    int n=s.size();<br>    int m=s[0].length();<br>    for(int i=0;i&lt;n;i++)<br>    for(int j=0;j&lt;m;j++)<br>    if(s[i][j]=='A')<br>    x[0]=i,y[0]=j;<br>    for(int i=0;i&lt;len;i++)<br>    {<br>      x[i+1]=x[i];<br>      y[i+1]=y[i];<br>      if(mv[i]=='U')x[i+1]--;<br>      if(mv[i]=='D')x[i+1]++;<br>      if(mv[i]=='L')y[i+1]--;<br>      if(mv[i]=='R')y[i+1]++;<br>    }<br>    memset(can,0,sizeof(can));<br>    int fl=0,te=1;<br>    for(int i=0;i&lt;n;i++)<br>    for(int j=0;j&lt;m;j++)<br>    if(s[i][j]=='B')<br>    can[0][i][j]=1;<br>    if(len&gt;0&amp;&amp;s[x[1]][y[1]]=='B')<br>    return "Alice wins";<br>    for(int k=0;k&lt;len;k++)<br>    {<br>      te=1-fl;<br>      memset(can[te],0,sizeof(can[te]));<br>      for(int i=0;i&lt;n;i++)<br>      for(int j=0;j&lt;m;j++)<br>      if(can[fl][i][j])<br>      {<br>        for(int dr=0;dr&lt;4;dr++)<br>        {<br>          int tx=i+dx[dr];<br>          int ty=j+dy[dr];<br>          if(tx&lt;0||tx&gt;=n)continue;<br>          if(ty&lt;0||ty&gt;=m)continue;<br>          if(s[tx][ty]=='#')continue;<br>          if(tx==x[k+1]&amp;&amp;ty==y[k+1])continue;<br>          if(k+1&lt;len&amp;&amp;tx==x[k+2]&amp;&amp;ty==y[k+2])continue;<br>          can[te][tx][ty]=1;<br>        }<br>      }<br>      //printf("%d %d\n",x[k],y[k]);<br>      bool has=false;<br>      for(int i=0;i&lt;n;i++)<br>      for(int j=0;j&lt;m;j++)<br>      if(can[te][i][j])<br>      {<br>        has=true;<br>        //printf("%d %d %d\n",k,i,j);<br>      }<br>      if(!has)return "Alice wins";<br>      fl=te;<br>    }<br>    return "Bob wins";<br>  }<br>};<br></td>