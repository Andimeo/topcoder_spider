<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class GameInDarknessDiv2 {<br> <br>    private static final String A_WINS = "Alice wins";<br>    private static final String B_WINS = "Bob wins";<br> <br>    private int[][] map;<br>    private int[][] prev;<br> <br>  public String check(String[] field, String[] moves) {<br>        map = new int[field.length][field[0].length()];<br> <br>        int AX = 0, AY = 0;<br> <br>        for (int i = 0; i &lt; field.length; i++) {<br>            char[] t = field[i].toCharArray();<br>            for (int j = 0; j &lt; t.length; j++) {<br>                switch (t[j]) {<br>                    case '#' : map[i][j] = -1; break;<br>                    case '.' : map[i][j] = 0; break;<br>                    case 'A' : AX = i; AY = j; break;<br>                    case 'B' : map[i][j] = 1; break;<br>                }<br>            }<br>        }<br> <br>        prev = new int[map.length][map[0].length];<br> <br>        StringBuilder m = new StringBuilder();<br>        for (String s : moves) {<br>            m.append(s);<br>        }<br> <br>//        for (int i = 0; i &lt; map.length; i++) {<br>//            for (int j = 0; j &lt; map[0].length; j++) {<br>//                System.out.print(map[i][j] + " ");<br>//            }<br>//            System.out.println();<br>//        }<br>//        System.out.println("\n******************************");<br> <br>        for (char c : m.toString().toCharArray()) {<br>            switch (c) {<br>                case 'U' : AX--; break;<br>                case 'R' : AY++; break;<br>                case 'L' : AY--; break;<br>                case 'D' : AX++; break;<br>            }<br> <br>            map[AX][AY] = 0;<br> <br>            for (int i = 0; i &lt; map.length; i++) {<br>                for (int j = 0; j &lt; map[0].length; j++) {<br>                    prev[i][j] = map[i][j];<br>                }<br>            }<br> <br>            for (int i = 0; i &lt; map.length; i++) {<br>                for (int j = 0; j &lt; map[0].length; j++) {<br>                    if (map[i][j] &gt; -1) {<br>                        map[i][j] = 0;<br>                        if (i &gt; 0) map[i][j] = Math.max(map[i][j], prev[i-1][j]);<br>                        if (j &gt; 0) map[i][j] = Math.max(map[i][j], prev[i][j-1]);<br>                        if (i &lt; map.length-1) map[i][j] = Math.max(map[i][j], prev[i+1][j]);<br>                        if (j &lt; map[0].length-1) map[i][j] = Math.max(map[i][j], prev[i][j+1]);<br> <br>                        if (i == AX &amp;&amp; j == AY) map[i][j] = 0;<br>                    }<br>//                    System.out.print(map[i][j] + " ");<br>                }<br>//                System.out.println();<br>            }<br>//            System.out.println("\n******************************");<br>        }<br> <br>        for (int i = 0; i &lt; map.length; i++)<br>            for (int j = 0; j &lt; map[0].length; j++)<br>                if (map[i][j] == 1) return B_WINS;<br>    return A_WINS;<br>  }<br>}<br></td>