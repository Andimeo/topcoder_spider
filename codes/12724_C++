<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class KeyDungeonDiv2 {<br>public:<br>  int countDoors(vector &lt;int&gt;, vector &lt;int&gt;, vector &lt;int&gt;);<br>};<br> <br>int KeyDungeonDiv2::countDoors(vector &lt;int&gt; doorR, vector &lt;int&gt; doorG, vector &lt;int&gt; keys) {<br>  int len = doorR.size();<br>  int noOfDoors = 0;<br>  int r = keys[0];<br>  int g = keys[1];<br>  int w = keys[2];<br> <br>  for(int i = 0; i &lt; len; i++)<br>  {<br>    if(doorR[i] &lt;= r &amp;&amp; doorG[i] &lt;= g) {<br>      noOfDoors++;<br>    } else if(doorR[i] &lt;= r &amp;&amp; doorG[i] &gt; g) {<br>      if(doorG[i] &lt;= g + w) {<br>        noOfDoors++;<br>      }<br>    } else if(doorR[i] &gt; r &amp;&amp; doorG[i] &lt;= g) {<br>      if(doorR[i] &lt;= r + w) {<br>        noOfDoors++;<br>      }<br>    } else {<br>      if((doorR[i] - r) + (doorG[i] - g) &lt;= w) {<br>        noOfDoors++;<br>      }<br>    }<br>  }<br>  return noOfDoors;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>