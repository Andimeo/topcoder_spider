<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;cstring&gt;<br> <br>using namespace std;<br> <br>int N;<br>vector&lt;int&gt; V[52];<br>bool S[52];<br> <br>int tryN(int x)<br>{<br>  S[x] = true;<br>  <br>  int totnow = 0, diff = 0, sons = 0;<br>  for (vector&lt;int&gt;::iterator it = V[x].begin(); it != V[x].end(); ++it)<br>    if (!S[*it])<br>    {<br>      int aux = tryN(*it);<br>      totnow += aux;<br>      diff += (aux != 0);<br>      ++sons;<br>    }<br>  <br>  return totnow + max(0, (sons - 1) - diff);<br>}<br> <br>class TPS {<br>public:<br>  int minimalBeacons(vector &lt;string&gt; linked) {<br>    N = linked.size();<br>    for (int i = 0; i &lt; N; ++i)<br>      for (int j = 0; j &lt; N; ++j)<br>        if (linked[i][j] == 'Y')<br>          V[i].push_back(j);<br>    <br>    if (N == 1) return 0;<br>    <br>    int result = 0x3f3f3f3f;<br>    for (int i = 0; i &lt; N; ++i)<br>    {<br>      memset(S, 0, sizeof(S));<br>      int aux = tryN(i);<br>      result = min(result, 1 + aux);<br>    }<br>    <br>    return result;<br>  }<br>};<br> <br> <br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>