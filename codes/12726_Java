<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> * @author Egor Kulikov (egor@egork.net)<br> */<br>public class TPS {<br>    public int minimalBeacons(String[] linked) {<br>    int count = linked.length;<br>    char[][] graph = new char[count][];<br>    for (int i = 0; i &lt; count; i++)<br>      graph[i] = linked[i].toCharArray();<br>    boolean[] removed = new boolean[count];<br>    boolean[] single = new boolean[count];<br>    int remaining = count;<br>    for (int i = 0; i &lt; count; i++) {<br>      int edges = 0;<br>      int first = -1;<br>      int second = -1;<br>      for (int j = 0; j &lt; count; j++) {<br>        if (graph[i][j] == 'Y') {<br>          edges++;<br>          if (first == -1)<br>            first = j;<br>          else<br>            second = j;<br>        }<br>      }<br>      if (edges == 2) {<br>        removed[i] = true;<br>        graph[i][first] = graph[first][i] = 'N';<br>        graph[i][second] = graph[second][i] = 'N';<br>        graph[first][second] = graph[second][first] = 'Y';<br>        remaining--;<br>      } else if (edges == 1)<br>        single[i] = true;<br>    }<br>    if (remaining &lt;= 2)<br>      return remaining - 1;<br>    int answer = 0;<br>    for (int i = 0; i &lt; count; i++) {<br>      if (removed[i] || single[i])<br>        continue;<br>      int current = 0;<br>      for (int j = 0; j &lt; count; j++) {<br>        if (graph[i][j] == 'Y' &amp;&amp; single[j])<br>          current++;<br>      }<br>      answer += Math.max(0, current - 1);<br>    }<br>    return answer;<br>    }<br>}<br></td>