<td class="problemText" colspan="8" valign="middle" align="left">
            // never forget to say twice say twice!<br> <br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;stdio.h&gt;<br>using namespace std;<br> <br>#define LS &lt;<br>#define Size(x) (int(x.size()))<br> <br>// All macros with parameters "k,a,b" run the "k" variable in range [a,b)<br>#define FOR(k,a,b) for(__typeof(a) k=(a); k LS (b); ++k)<br>// the range is traversed from b-1 to a in FORREV<br>#define FORREV(k,a,b) for(__typeof(b) k=(b); (a) &lt;= (--k);)<br> <br>#line 3 "FoxAndCity.cpp"<br> <br>bool mmap[60][60];<br> <br>int real[60], real2[60];<br> <br>int sq(int a) { return a*a; }<br> <br>class FoxAndCity {<br>  public:<br>  int minimalCost(vector &lt;string&gt; linked, vector &lt;int&gt; want) {<br>    // !FDI<br>    int N = Size(linked);<br>    FOR(y,0,N) FOR(x,0,N) mmap[y][x] = linked[y][x] == 'Y';<br>    FOR(u,0,N) real[u] = 999;<br>    real[0] = 0;<br>    FOR(a,0,N) FOR(b,0,N) FOR(c,0,N) if(real[c] &gt; real[b]+1 &amp;&amp; mmap[b][c]) real[c] = real[b]+1;<br>    <br>    int total = 0;<br>    FOR(a,0,N) total += sq(real[a] - want[a]);<br>    <br>    // FOR(a,0,N) printf("%d ", real[a]); printf("\n");<br>    <br>    again:<br>    <br>    FORREV(di,2,N) FOR(a,0,N) if(real[a] == di &amp;&amp; want[a] &lt; di) {<br>      // printf("try shortcut to: %d\n", a);<br>      FOR(u,0,N) real2[u] = real[u];<br>      real2[a]--;<br>      bool mod = true;<br>      while(mod) {<br>        mod = false;<br>        FOR(b,0,N) FOR(c,0,N) <br>          if(real2[c] &gt; real2[b]+1 &amp;&amp; mmap[b][c]) <br>            real2[c] = real2[b]+1,<br>            mod = true;<br>        }<br>      int total2 = 0;<br>      FOR(a,0,N) total2 += sq(real2[a] - want[a]);<br>      if(total2 &lt; total) {<br>        // printf("shortcut to: %d\n", a);<br>        FOR(u,0,N) real[u] = real2[u];<br>        total = total2;<br>        goto again;<br>        }<br>      }<br> <br>    return total;<br>    }<br>  };<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.17 [modified TZTester]<br>// Powered by CodeProcessor<br></td>