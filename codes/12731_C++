<td class="problemText" colspan="8" valign="middle" align="left">
            #line 5 "FlippingBitsDiv2.cpp"<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;fstream&gt;<br>#include &lt;numeric&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;bitset&gt;<br>#include &lt;list&gt;<br>#include &lt;stdexcept&gt;<br>#include &lt;functional&gt;<br>#include &lt;utility&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class FlippingBitsDiv2<br>{<br>public:<br>  char buff[3000];<br>  int f[3000][2], g[3000][2], A[3000], B[3000];<br> <br>  void DP(int f[][2], int n) {<br>    f[0][0]=0, f[0][1]=0;<br>    for(int i=1; i&lt;=n; i++) {<br>      f[i][0]=min(f[i-1][1]+A[i]+1, f[i-1][0]+B[i]);<br>      f[i][1]=min(f[i-1][0]+B[i]+1, f[i-1][1]+A[i]);<br>    }<br>  }<br> <br>  int getmin(vector &lt;string&gt; S, int M)<br>  {<br>    memset(buff, 0, sizeof buff);<br>    for(int i=0, len=(int)S.size(), n=0; i&lt;len; i++) {<br>      int si=(int)S[i].size();<br>      for(int j=0; j&lt;si; j++) buff[n++]=S[i][j];<br>    }<br>    int n=(int)strlen(buff)/M;<br>    memset(A, 0, sizeof A);<br>    memset(B, 0, sizeof B);<br>    for(int i=1; i&lt;=n; i++) {<br>      for(int j=(i-1)*M; j&lt;i*M; j++) A[i]+=buff[j]!='1';<br>      B[i]=M-A[i];<br>    }<br>    DP(f, n);<br>    reverse(A+1, A+1+n);<br>    reverse(B+1, B+1+n);<br>    DP(g, n);<br>    int ans=0x3fffffff;<br>    for(int i=0; i&lt;=n; i++)  ans=min(ans, f[i][1]+g[n-i][1]);<br>    return ans;<br>  }<br> <br> <br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>