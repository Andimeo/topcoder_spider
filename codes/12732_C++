<td class="problemText" colspan="8" valign="middle" align="left">
            #line 5 "GearsDiv2.cpp"<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;fstream&gt;<br>#include &lt;numeric&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;bitset&gt;<br>#include &lt;list&gt;<br>#include &lt;stdexcept&gt;<br>#include &lt;functional&gt;<br>#include &lt;utility&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class GearsDiv2<br>{<br>public:<br>  int f[55][2];<br> <br>  int DP(char S[]) {<br>    int n=(int)strlen(S);<br>    f[0][0]=1, f[0][1]=0;<br>    for(int i=1; i&lt;n; i++) {<br>      f[i][1]=(S[i]==S[i-1])?f[i-1][0]:min(f[i-1][0], f[i-1][1]);<br>      f[i][0]=min(f[i-1][0], f[i-1][1])+1;<br>    }<br>    return min(f[n-1][0], f[n-1][1]);<br>  }<br> <br>  int getmin(string Directions)<br>  {<br>    int n=(int)Directions.length();<br>    char S1[55], S2[55];<br>    if(Directions[0]==Directions[n-1]) {<br>      memset(S1, 0, sizeof S1);<br>      memset(S2, 0, sizeof S2);<br>      for(int i=0; i&lt;n-1; i++) S1[i]=Directions[i], S2[i]=Directions[i+1];<br>      int ans=min(DP(S1), DP(S2))+1;<br>      return ans;<br>    }<br>    else {<br>      memset(S1, 0, sizeof S1);<br>      for(int i=0; i&lt;n; i++) S1[i]=Directions[i];<br>      return DP(S1);<br>    }<br>  }<br> <br> <br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>