<td class="problemText" colspan="8" valign="middle" align="left">
            d =( ((0,0),(0,1),(0,2),(0,3),(0,4)),((0,0),(1,0),(2,0),(3,0),(4,0)),((0,0),(1,1),(2,2),(3,3),(4,4)), ((0,0),(1,-1),(2,-2),(3,-3),(4,-4)))<br>  <br>class FoxAndGomoku:<br>  def test(self, ix, iy):<br>    for m in d:<br>      win = 0<br>      for i in range(5):<br>        tx = ix + m[i][0]<br>        ty = iy + m[i][1]<br>        if tx &gt;= self.n or ty &gt;= self.n or tx &lt; 0 or ty &lt; 0:<br>          break<br>        if self.board[tx][ty] == 'o':<br>          win += 1<br>      if win == 5:<br>        return True<br><br>  def win(self, board):<br>    n = len(board)<br>    self.n = n<br>    self.board = board<br>    win = False<br>    for ix in range(n):<br>      for iy in range(n):<br>        if self.test(ix, iy):<br>          return 'found'<br>    return 'not found'<br></td>