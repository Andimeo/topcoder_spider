<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;cstring&gt;<br><br>using namespace std;<br><br>typedef long long ll;<br><br>#define INF 1000000000<br>#define FOR(i,a,b) for(int i=(a);i&lt;(b);i++)<br>#define REP(i,n) FOR(i,0,n)<br>#define pb push_back<br>#define itr iterator<br>#define sz size()<br><br>class TheTree {<br>public:<br>    int maximumDiameter(vector &lt;int&gt; cnt);<br>};<br><br>int TheTree::maximumDiameter(vector &lt;int&gt; cnt) {<br>  int D = cnt.sz;<br>  int b = 0;<br><br>  for (int i = 0; i &lt; D; i++) {<br>    int d = D-i;<br>    for (int j = i; j &lt; D; j++) {<br>      if (cnt[j] &lt; 2) break;<br>      else d++;<br>    }<br>    b = max(b,d);<br>  }<br><br>  return b;<br>}<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>// Powered by FileEdit<br>// Powered by TesterDream 1.2.4 by fushar (December 19 2012)<br>// Powered by CodeProcessor<br></td>