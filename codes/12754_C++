<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br> <br>class ConvertibleStrings {<br>public:<br>  int leastRemovals(string A, string B) {<br>    vector&lt;char&gt; perm;<br>    int i;<br>    for(i=0;i&lt;9;i++)<br>      perm.push_back('A'+i);<br>    <br>    int minimum = A.length()+1;<br>    do<br>    {<br>      int count = 0;<br>      for(i=0;i&lt;A.length();i++)<br>      {<br>        if(A[i]!=perm[B[i]-'A'])<br>          count++;<br>      <br>      }<br>      minimum = min(minimum,count);<br>    <br>    <br>    }<br>    while(next_permutation(perm.begin(),perm.end()));<br>    <br>    return minimum;<br>    <br>  }<br>};<br> <br> <br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>