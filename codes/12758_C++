<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;cstdio&gt;<br>#include&lt;cstring&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;cmath&gt;<br>#include&lt;vector&gt;<br>#include&lt;set&gt;<br>#include&lt;queue&gt;<br>#include&lt;map&gt;<br>#include&lt;sstream&gt;<br>#include&lt;iostream&gt;<br>using namespace std;<br><br>#define FOR(i,a,b) for(int (i)=(a);(i)&lt;=(b);(i)++)<br>#define DOR(i,a,b) for(int (i)=(a);(i)&gt;=(b);(i)--)<br>#define bug puts("Fuck");<br>#define LL long long<br>#define pb push_back<br>#define mp make_pair<br><br>#define nMax 1010<br>#define eps 1e-8<br>#define inf 0x7fffffff<br>#define CLR(a) memset((a),0,sizeof((a)))<br>#define rep(i,n) for(int (i)=0;(i)&lt;(n);(i)++)<br><br><br>class LittleElephantAndBalls{<br>  public:<br>       int getNumber(string S){<br>      bool a[50]={0},b[50]={0};<br>      int ans=0;<br>      int len=S.size();<br>      rep(i,len)<br>            {<br><br>                if (!a[S[i]-'A']){ans+=a['B'-'A']+a['G'-'A']+a['R'-'A']+b['B'-'A']+b['G'-'A']+b['R'-'A'];a[S[i]-'A']=1;}<br>                else<br>                {<br>                    ans+=a['B'-'A']+a['G'-'A']+a['R'-'A']+b['B'-'A']+b['G'-'A']+b['R'-'A'];b[S[i]-'A']=1;<br>                }<br>            }<br>            return ans;<br><br>    }<br><br>};<br></td>