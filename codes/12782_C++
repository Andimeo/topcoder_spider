<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;  <br>#include &lt;string&gt;  <br>#include &lt;set&gt;  <br>#include &lt;map&gt;  <br>#include &lt;vector&gt;  <br>#include &lt;queue&gt;   <br>#include &lt;iostream&gt;  <br>#include &lt;iterator&gt;  <br>#include &lt;math.h&gt;  <br>#include &lt;cstdio&gt;  <br>#include &lt;cstdlib&gt;  <br>#include &lt;sstream&gt;  <br>#include &lt;ctime&gt;<br>#include &lt;cfloat&gt;<br>#include &lt;memory.h&gt;<br><br>#pragma comment(linker, "/STACK:60777216")  <br><br>using namespace std;  <br><br>typedef pair&lt;int,int&gt; pii;  <br>typedef long long ll;  <br>typedef vector&lt;int&gt; vi;  <br>typedef pair&lt;double,double&gt; pdd;<br><br>#define UN(v) SORT(v),v.erase(unique(v.begin(),v.end()),v.end())  <br>#define SORT(c) sort((c).begin(),(c).end())  <br>#define FOR(i,a,b) for (int  i=(a); i &lt; (b); i++)   <br>#define REP(i,n) FOR(i,0,n)   <br>#define CL(a,b) memset(a,b,sizeof(a))  <br>#define pb push_back  <br><br>const int mod = 1000000007;<br><br>int d[2222222];<br>int sum[2222222];<br><br>class WolfDelaymasterHard {<br>public:<br>  int countWords(int N, int wlen, int w0, int wmul, int wadd, int olen, int o0, int omul, int oadd) {<br>    string s(N,'?');<br><br>    ll x = w0;<br>    REP(i,wlen){<br>      s[x] = 'w';<br>      x = (x * wmul + wadd) % N;<br>    }<br><br>    x = o0;<br>    REP(i,olen){<br>      s[x] = 'o';<br>      x = (x * omul + oadd) % N;<br>    }<br>    CL(d,0);CL(sum,0);<br>    d[0]=1;sum[0]=1;<br>    vector&lt;pii&gt; zones;<br>    int lastw = -1, beg, end,minl,maxl;<br>    /*s="";<br>    int num = 2000;<br>    REP(i,num){<br>      REP(j,num-i)s.pb('?');<br>      s.pb('o');<br>    }<br>    cout&lt;&lt;s.size()&lt;&lt;endl;*/<br>    //N=s.size();<br>    REP(i,N){<br>      if (s[i]=='w') lastw=i;<br>      if(i%2==1){<br>        int len = i - lastw;<br>        len = min(len, (i+1)/2);<br>        for (int j = int(zones.size()) -1; j&gt;=0;j--){<br>          beg = i - zones[j].second;<br>          end = beg + zones[j].first - 1;<br>          minl = beg;<br>          maxl = (end+1)/2;<br>          maxl = min(maxl, len);<br>          //cout&lt;&lt;"add " &lt;&lt; i &lt;&lt; " " &lt;&lt; minl &lt;&lt; ' '&lt;&lt;maxl&lt;&lt;endl;<br>          if(minl&lt;=maxl){<br>            d[i+1] += sum[i+1-minl*2];<br>            if(d[i+1]&gt;=mod) d[i+1]-=mod;<br>            if(i-maxl*2&gt;=0){<br>              d[i+1] -= sum[i-maxl*2];<br>              if(d[i+1]&lt;0) d[i+1]+=mod;<br>            }<br>          }<br>        }<br>      }<br><br>      <br>      if(s[i]!='o'){<br>        if(zones.size() &amp;&amp; zones.back().second==i-1) zones.back().second=i,zones.back().first++;<br>        else zones.pb(pii(1,i));<br>      }<br>      /*while(zones.size() &gt; 1 &amp;&amp; zones.back().first &gt;= zones[zones.size() - 2].first) {<br>        swap(zones.back(), zones[zones.size() - 2]);<br>        zones.pop_back();<br>      }*/<br>      for(int j=int(zones.size())-1;j&gt;=0;j--){<br>        int diff = i - zones[j].second;<br>        if(zones[j].first&lt;diff){<br>          zones.erase(zones.begin()+j);<br>        }<br>      }<br><br>      sum[i + 1] = sum[i] + d[i+1];<br>      if(sum[i+1] &gt;= mod) sum[i+1] -= mod;<br><br>      //if(d[i+1]) cout&lt;&lt;i&lt;&lt;": " &lt;&lt;d[i+1]&lt;&lt;endl;<br>    }<br>    return d[N];<br>  }<br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by moj 4.17 [modified TZTester]<br>// Powered by CodeProcessor<br></td>