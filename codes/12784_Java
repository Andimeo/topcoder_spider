<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> */<br>public class HexagonalBoard {<br>    int n;<br>    boolean[] field;<br>    int[][] adj;<br> <br>    public int minColors(String[] board) {<br>        n = board.length;<br>        field = new boolean[n * n];<br>        for (int i = 0; i &lt; n; ++i)<br>            for (int j = 0; j &lt; n; ++j)<br>                field[i * n + j] = board[i].charAt(j) == 'X';<br>        adj = new int[n * n][];<br>        int[] tmp = new int[6];<br>        for (int i = 0; i &lt; n; ++i)<br>            for (int j = 0; j &lt; n; ++j) {<br>                int cnt = 0;<br>                if (i &gt; 0) {<br>                    tmp[cnt++] = (i - 1) * n + j;<br>                }<br>                if (i &gt; 0 &amp;&amp; j + 1 &lt; n)<br>                    tmp[cnt++] = (i - 1) * n + (j + 1);<br>                if (j &gt; 0)<br>                    tmp[cnt++] = i * n + (j - 1);<br>                if (j + 1 &lt; n)<br>                    tmp[cnt++] = i * n + (j + 1);<br>                if (i + 1 &lt; n &amp;&amp; j &gt; 0)<br>                    tmp[cnt++] = (i + 1) * n + (j - 1);<br>                if (i + 1 &lt; n)<br>                    tmp[cnt++] = (i + 1) * n + j;<br>                adj[i * n + j] = new int[cnt];<br>                System.arraycopy(tmp, 0, adj[i * n + j], 0, cnt);<br>            }<br>        boolean any = false;<br>        for (int i = 0; i &lt; field.length; ++i)<br>            if (field[i])<br>                any = true;<br>        if (!any) return 0;<br>        boolean anyAdj = false;<br>        for (int i = 0; i &lt; field.length; ++i)<br>            if (field[i])<br>                for (int j : adj[i])<br>                    if (field[j])<br>                        anyAdj = true;<br>        if (!anyAdj) return 1;<br>        int[] color = new int[field.length];<br>        for (int i = 0; i &lt; field.length; ++i)<br>            if (field[i] &amp;&amp; color[i] == 0)<br>                if (colorIt(i, 1, adj, field, color))<br>                    return 3;<br>        return 2;<br>    }<br> <br>    private boolean colorIt(int at, int col, int[][] adj, boolean[] field, int[] color) {<br>        if (color[at] != 0) {<br>            if (color[at] != col)<br>                return true;<br>            return false;<br>        }<br>        color[at] = col;<br>        for (int x : adj[at])<br>            if (field[x])<br>                if (colorIt(x, 3 - col, adj, field, color))<br>                    return true;<br>        return false;<br>    }<br>}<br></td>