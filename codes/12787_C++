<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class RabbitsAndCakes {<br>public:<br>  long long getNumber(int, int, int, int);<br>};<br> <br>long long RabbitsAndCakes::getNumber(int minR, int maxR, int minC, int maxC) {<br>  long long ans = 0;<br>  for (int c = minC; c &lt;= maxC; c++) {<br>    int lg = 1, rg = c;<br>    if (minR &gt; lg) lg = minR;<br>    if (maxR &lt; rg) rg = maxR;<br>    if (lg &lt;= rg) ans += rg - lg + 1;<br>  }<br>  for (int dv = 1; dv &lt;= maxC; dv++) {<br>    for (int c = dv; c &lt;= maxC; c += dv) {<br>      if (c &gt;= minC) {<br>        if (minR &lt;= c + dv &amp;&amp; c + dv &lt;= maxR) ans++;<br>      }<br>    }<br>  }<br>  return ans;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>