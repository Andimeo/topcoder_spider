<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> * @author Egor Kulikov (egor@egork.net)<br> */<br>public class RabbitsAndCakes {<br>    public long getNumber(int minR, int maxR, int minC, int maxC) {<br>        long result = 0;<br>        for (int i = 2; i &lt;= maxR; i++) {<br>            for (int j = 1; j * i &lt;= maxR; j++) {<br>                if (j * i &lt; minR)<br>                    continue;<br>//                int curR = i * j;<br>                int curC = (i - 1) * j;<br>                if (curC &gt;= minC &amp;&amp; curC &lt;= maxC)<br>                    result++;<br>//                int to = maxC - curC;<br>//                if (to &lt; 0)<br>//                    continue;<br>//                int from = minC - curC;<br>//                if (from &lt; 0)<br>//                    from = 0;<br>//                to /= curR;<br>//                from = (from + curR - 1) / curR;<br>//                result += to - from + 1;<br>            }<br>        }<br>        for (int i = minR; i &lt;= maxR; i++) {<br>            int to = maxC;<br>            int from = Math.max(i, minC);<br>//            to /= i;<br>//            from = (from + i - 1) / i;<br>//            result += to - from + 1;<br>            if (to &gt;= from)<br>                result += to - from + 1;<br>        }<br>        return result;<br>    }<br>}<br></td>