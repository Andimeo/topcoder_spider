<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Diagnostics;<br>using System.Linq;<br>using System.Numerics;<br>using System.Text;<br>using E = System.Linq.Enumerable;<br> <br>public class PairsOfStrings {<br>    const int mod = 1000000007;<br> <br>    static public long ModPow(long x, long n, long mod) {<br>        x %= mod;<br>        if (n == 0)<br>            return 1;<br>        else if (n % 2 != 0)<br>            return x * ModPow(x, n - 1, mod) % mod;<br>        else<br>            return ModPow((x * x) % mod, n / 2, mod);<br>    }<br> <br>    Dictionary&lt;int, List&lt;int&gt;&gt; memo = new Dictionary&lt;int, List&lt;int&gt;&gt;();<br> <br>    public List&lt;int&gt; GetYakusuu(int x) {<br>        if (memo.ContainsKey(x))<br>            return memo[x];<br>        List&lt;int&gt; ret = new List&lt;int&gt;();<br>        for (int i = 1; i * i &lt;= x; i++) {<br>            if (x % i == 0) {<br>                ret.Add(i);<br>                if (i != x / i) ret.Add(x / i);<br>            }<br>        }<br>        ret.Sort();<br>        memo[x] = ret;<br>        return ret;<br>    }<br> <br>    public int getNumber(int n, int k) {<br>        long ans = 0;<br>        Dictionary&lt;long, long&gt; cyclePattern = new Dictionary&lt;long, long&gt;();<br>        foreach (int cycle in GetYakusuu(n)) { // todo<br>            if (n % cycle == 0) {<br>                long sub = ModPow(k, cycle, mod); // pattern<br>                foreach (int j in GetYakusuu(n)) {<br>                    if (cycle == j) continue;<br>                    if (cycle % j == 0) {<br>                        sub = (sub - cyclePattern[j] + mod) % mod;<br>                    }<br>                }<br>                cyclePattern[cycle] = sub;<br>                sub = (sub * cycle) % mod;<br>                ans += sub;<br>                ans %= mod;<br>            }<br>        }<br>        return (int)ans;<br>    }<br>}<br> <br>// Powered by Greed 2.0-beta<br></td>