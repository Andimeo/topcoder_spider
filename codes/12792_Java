<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.Arrays;<br> <br>/**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> */<br>public class BitwiseAnd {<br>    public long[] lexSmallest(long[] subset, int N) {<br>        for (int i = 0; i &lt; subset.length; ++i)<br>            for (int j = i + 1; j &lt; subset.length; ++j)<br>                if ((subset[i] &amp; subset[j]) == 0) return new long[0];<br>        for (int i = 0; i &lt; subset.length; ++i)<br>            for (int j = i + 1; j &lt; subset.length; ++j)<br>                for (int k = j + 1; k &lt; subset.length; ++k)<br>                    if ((subset[i] &amp; subset[j] &amp; subset[k]) != 0) return new long[0];<br>        int[] cnt = new int[60];<br>        for (long x : subset)<br>            for (int i = 0; i &lt; 60; ++i)<br>                if ((x &amp; (1L &lt;&lt; i)) != 0)<br>                    ++cnt[i];<br>        int extra = N - subset.length;<br>        for (long x : subset) {<br>            int num = 0;<br>            for (int i = 0; i &lt; 60; ++i)<br>                if ((x &amp; (1L &lt;&lt; i)) != 0 &amp;&amp; cnt[i] == 1)<br>                    ++num;<br>            if (num &lt; extra) return new long[0];<br>        }<br>        int numfree = 0;<br>        for (int i = 0; i &lt; 60; ++i) if (cnt[i] == 0) ++numfree;<br>        if (numfree &lt; extra * (extra - 1) / 2) return new long[0];<br>        long[] ex = new long[extra];<br>        for (int exId = 0; exId &lt; extra; ++exId) {<br>            for (long x : subset) {<br>                for (int i = 0; i &lt; 60; ++i) {<br>                    if ((x &amp; (1L &lt;&lt; i)) != 0 &amp;&amp; cnt[i] == 1) {<br>                        ex[exId] |= (1L &lt;&lt; i);<br>                        ++cnt[i];<br>                        break;<br>                    }<br>                }<br>            }<br>            for (int other = exId + 1; other &lt; extra; ++other) {<br>                for (int i = 0; i &lt; 60; ++i) if (cnt[i] == 0) {<br>                    cnt[i] = 2;<br>                    ex[exId] |= (1L &lt;&lt; i);<br>                    ex[other] |= (1L &lt;&lt; i);<br>                    break;<br>                }<br>            }<br>        }<br>        long[] all = new long[N];<br>        System.arraycopy(subset, 0, all, 0, subset.length);<br>        System.arraycopy(ex, 0, all, subset.length, extra);<br>        Arrays.sort(all);<br>        return all;<br>    }<br>}<br></td>