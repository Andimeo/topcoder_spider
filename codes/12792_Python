<td class="problemText" colspan="8" valign="middle" align="left">
            f = lambda n, l=20 : ('0'*100+bin(n)[2:])[-l:]<br> <br>def bits(x):<br>    return bits(x&gt;&gt;1)+(x&amp;1) if x else 0<br> <br>class BitwiseAnd:<br>    def lexSmallest(self, s, n):<br>        m = len(s)<br>        <br>        for i in range(m):<br>            for j in range(i+1,m):<br>                if s[i] &amp; s[j] == 0:<br>                    return ()<br> <br>        for x in s:<br>            if bits(x) &lt; n-1:<br>                return ()<br> <br>                <br>        cnt = [0] * 600<br>        <br>        for x in s:<br>            for i in range(x.bit_length()):<br>                if x &amp; (1&lt;&lt;i):<br>                    cnt[i] += 1<br>                    if cnt[i] &gt; 2:<br>                        return ()<br>                    <br>        while len(s) &lt; n:<br>            <br>            k = 0<br>            x = 0<br> <br>            for y in s:<br>                found = False<br>                for j in range(y.bit_length()):<br>                    if (y&amp;(1&lt;&lt;j)) and cnt[j] == 1:<br>                        k += 1<br>                        x |= (1&lt;&lt;j)<br>                        cnt[j] += 1<br>                        found = True<br>                        break<br>                if not found:<br>                    return ()<br> <br>            i = 0<br>            while k &lt; n-1:<br>                if cnt[i] == 0:<br>                    k += 1<br>                    x |= (1&lt;&lt;i)<br>                    cnt[i] += 1<br>                i += 1<br> <br>            if x.bit_length() &gt; 60:<br>                return ()<br> <br>            s += (x,)<br>            <br>        return tuple(sorted(s))<br>        return ()<br> <br>        <br> <br> <br>obj = BitwiseAnd()<br> <br>print(obj.lexSmallest((14,20), 3))<br>print(obj.lexSmallest((11, 17, 20), 4))<br>print(obj.lexSmallest((99, 157), 4))<br>print(obj.lexSmallest((1152921504606846975,), 3))<br>print(obj.lexSmallest((), 5))<br>print(obj.lexSmallest((1, 3, 5, 7, 9, 11), 6))<br> <br>""" cases<br>{7,14}, 4<br>"""<br></td>