<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class AstronomicalRecords {<br>public:<br>  int minimalPlanets(vector &lt;int&gt;, vector &lt;int&gt;);<br>};<br> <br>int f[55][55];<br> <br>int AstronomicalRecords::minimalPlanets(vector &lt;int&gt; A, vector &lt;int&gt; B) {<br>  int n = A.size(), m = B.size();<br>  int ans = n + m;<br>  for (int x = 0; x &lt; n; x++)<br>    for (int y = 0; y &lt; m; y++) {<br>      for (int i = 0; i &lt;= n; i++)<br>        for (int j = 0; j &lt;= m; j++) f[i][j] = 0;<br>      for (int i = 1; i &lt;= n; i++)<br>        for (int j = 1; j &lt;= m; j++) {<br>          bool ok = (((long long)A[i - 1] * B[y]) == ((long long)B[j - 1] * A[x]));<br>          if (ok) f[i][j] = f[i - 1][j - 1] + 1; else<br>          if (f[i - 1][j] &gt; f[i][j - 1]) f[i][j] = f[i - 1][j];<br>          else f[i][j] = f[i][j - 1];<br>        }<br>      int cur = n + m - f[n][m];<br>      if (cur &lt; ans) ans = cur;<br>    }<br>  return ans;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>