<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;cstdio&gt;<br>#include&lt;cstring&gt;<br>#include&lt;cstdlib&gt;<br>#include&lt;cmath&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;iostream&gt;<br>#include&lt;vector&gt;<br>#include&lt;string&gt;<br>using namespace std;<br>typedef long long LL;<br>const int V=3020;<br>const int En=200000;<br>const int oo=0x3f3f3f3f;<br>struct Edge{int num,ne,c;}e[En];<br>int d[V],p[V],pre[V],low[V];<br>int gap[V],cur[V];<br>int N,K,st,ed;<br>void add(int x,int y,int c)<br>{<br>  e[K].num=y;e[K].c=c;<br>  e[K].ne=p[x];p[x]=K++;<br>  e[K].num=x;e[K].c=0;<br>  e[K].ne=p[y];p[y]=K++;<br>}<br>int sap()<br>{<br>  int ret=0;<br>  bool fail;<br>  for(int i=0;i&lt;=N;i++)<br>  {<br>    low[i]=gap[i]=d[i]=0;<br>    cur[i]=p[i];<br>  }<br>  low[st]=oo;gap[0]=N;int u=st;<br>  while(d[st]&lt;N)<br>  {<br>    fail=true;<br>    for(int i=cur[u];i!=-1;i=e[i].ne)<br>    {<br>      int v=e[i].num;cur[u]=i;<br>      if(e[i].c&amp;&amp;d[u]==d[v]+1)<br>      {<br>        pre[v]=i;<br>        low[v]=min(low[u],e[i].c);u=v;<br>        if(u==ed)<br>        {<br>          do<br>          {<br>            e[pre[u]].c-=low[ed];<br>            e[pre[u]^1].c+=low[ed];<br>            u=e[pre[u]^1].num;<br>          }while(u!=st);<br>          ret+=low[ed];<br>        }<br>        fail=false;break;<br>      }<br>    }<br>    if(fail)<br>    {<br>      gap[d[u]]--;<br>      if(!gap[d[u]])return ret;<br>      d[u]=N;<br>      for(int i=p[u];i!=-1;i=e[i].ne)<br>      if(e[i].c)d[u]=min(d[u],d[e[i].num]+1);<br>      gap[d[u]]++;cur[u]=p[u];<br>      if(u!=st)u=e[pre[u]^1].num;<br>    }<br>  }<br>  return ret;<br>}<br>int dx[]={1,-1,0,0};<br>int dy[]={0,0,1,-1};<br>class FoxAndGo3<br>{<br>  public:<br>  int maxEmptyCells(vector &lt;string&gt; s)<br>  {<br>    int n=s.size();<br>    memset(p,-1,sizeof(p));K=0;<br>    N=n*n+2;st=N-2;ed=N-1;<br>    int ret=0;<br>    for(int i=0;i&lt;n;i++)<br>    for(int j=0;j&lt;n;j++)<br>    if(s[i][j]=='o')<br>    {<br>      for(int k=0;k&lt;4;k++)<br>      {<br>        int tx=i+dx[k];<br>        int ty=j+dy[k];<br>        if(tx&lt;0||tx&gt;=n)continue;<br>        if(ty&lt;0||ty&gt;=n)continue;<br>        if(s[tx][ty]=='.')add(tx*n+ty,i*n+j,oo);<br>      }<br>      add(i*n+j,ed,1);<br>      ret++;<br>    }<br>    else if(s[i][j]=='.')<br>    {<br>      add(st,i*n+j,1);<br>      ret++;<br>    }<br>    return ret-sap();<br>  }<br>};<br></td>