<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class GoodNumbers {<br>public:<br>  int count(vector &lt;int&gt;, vector &lt;int&gt;, int);<br>};<br> <br>long long gcd(long long a, long long b) {<br>  if (a == 0 || b == 0) {<br>    return a + b;<br>  }<br>  if (a &gt; b) {<br>    return gcd(a % b, b);<br>  }  else {<br>    return gcd(b % a, a);<br>  }<br>}<br> <br>const long long inf = 1000000000000000000LL;<br> <br>long long lcm(long long a, long long b) {<br>  long long x = a / gcd(a, b);<br>  if (x &gt; inf / b) {<br>    return inf;<br>  }<br>  else {<br>    return x * b;<br>  }<br>}<br> <br>long long get(long long n, long long a, long long b) {<br>  long long x = lcm(a, b);<br>  return n / x;<br>}<br> <br>long long get(long long n, long long a, vector &lt; long long &gt; b) {<br>  long long res = 0;<br>  int m = b.size();<br>  for (int i = 0; i &lt; (1 &lt;&lt; m); ++i) {<br>    int bits = 0;<br>    for (int j = 0; j &lt; m; ++j) {<br>      if (i &amp; (1 &lt;&lt; j)) {<br>        ++bits;<br>      }<br>    }<br> <br>    long long value = 1;<br>    for (int j = 0; j &lt; m; ++j) {<br>      if (i &amp; (1 &lt;&lt; j)) {<br>        value = lcm(value, b[j]);<br>      }<br>    }<br> <br>    long long current = get(n, a, value);<br>    if (bits % 2 == 0) {<br>      res += current;<br>    } else {<br>      res -= current;<br>    }<br>  }<br>  return res;<br>}<br> <br>int GoodNumbers::count(vector &lt;int&gt; a, vector &lt;int&gt; b, int N) {<br>  int m = a.size();<br>  long long res = 0;<br>  for (int i = 1; i &lt; (1 &lt;&lt; m); ++i) {<br>    vector &lt; long long &gt; buf;<br>    long long A = 1;<br>    for (int j = 0; j &lt; m; ++j) {<br>      if (i &amp; (1 &lt;&lt; j)) {<br>        buf.push_back(b[j]);<br>        A = lcm(A, a[j]);<br>      }<br>    }<br> <br>    long long current = get(N, A, buf);<br>    if (buf.size() % 2 == 1) {<br>      res += current;<br>    } else {<br>      res -= current;<br>    }<br>  }<br>  //cerr &lt;&lt; brute(a, b, N) &lt;&lt; endl;<br>  return (int)(res);<br>}<br> <br>//Powered by [KawigiEdit] 2.0!<br></td>