<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> * @author nasko<br> */<br>public class AlienAndGame {<br>    public int getNumber(String[] board) {<br>        <br>        char[][] map = new char[board.length][board[0].length()];<br>        for(int i = 0; i &lt; board.length; ++i) {<br>            <br>            for(int j = 0; j &lt; board[i].length(); ++j) {<br>                <br>                map[i][j] = board[i].charAt(j);<br>                <br>            }<br>        }<br>        <br>        int max = 0;<br>        for(int i = 0; i &lt; map.length; ++i) {<br>            <br>            for(int j = 0; j &lt; map[i].length; ++j) {<br>                <br>                // start square ( i , j )<br>                <br>                for(int side = 0; side &lt;= 50; ++side) {<br>                    if(i + side &lt; map.length &amp;&amp; j + side &lt; map[i].length) {<br>                        boolean ok = true;<br>                        for(int a = i; a &lt;= i+side; ++a) {<br>                            boolean white = false;<br>                            boolean black = false;<br>                            for(int b = j; b &lt;= j + side; ++b) {<br>                                if(map[a][b] == 'B') black = true;<br>                                else white = true;<br>                            }<br>                            if(white &amp;&amp; black) ok = false;<br>                        }<br>                        if(ok) {<br>                            max = Math.max(max,(side+1)*(side+1));<br>                        }<br>                        <br>                    }<br>                }<br>                <br>            }<br>            <br>        }<br>        return max;<br>        <br>    }<br>}<br></td>