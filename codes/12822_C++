<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;sstream&gt; <br>#include &lt;iostream&gt;<br>#include &lt;string.h&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;stdlib.h&gt; <br>#include &lt;stdio.h&gt; <br>#include &lt;numeric&gt;<br>#include &lt;math.h&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>using namespace std;<br> <br>int a[1024];<br>int u[1024];<br> <br>long long solve ( int M, vector &lt;int&gt; L, vector &lt;int&gt; R ) {<br>  int i, j;<br>  <br>  memset(a, -1, sizeof a);<br>  for (i = 0; i &lt; (int)L.size(); i++) {<br>    for (j = L[i]; j &lt;= R[i]; j++) a[j] = i;<br>  }<br>  <br>  long long ans = 1;<br>  <br>  for (i = 1; i &lt;= M; i++) {<br>    if (a[i] != -1 &amp;&amp; !u[ a[i]]) {<br>      u[ a[i] ] = 1;<br>      ans *= 2;<br>    }<br>  }<br>  <br>  return ans;<br>}<br> <br>class LittleElephantAndIntervalsDiv1 {<br>  public:<br>  long long getNumber(int M, vector &lt;int&gt; L, vector &lt;int&gt; R) {<br>    return solve ( M, L, R );<br>  }<br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.17 [modified TZTester]<br>// Powered by CodeProcessor<br></td>