<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;string.h&gt;<br>#include &lt;sstream&gt;<br>#include &lt;math.h&gt;<br>#include &lt;cmath&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;bitset&gt;<br>#include &lt;complex&gt;<br>#include &lt;functional&gt;<br>#include &lt;deque&gt;<br>#include &lt;iomanip&gt;<br>using namespace std;<br><br>typedef vector&lt;int&gt; vi;<br>#define L(s) (int)((s).size())<br>#define INF ((1&lt;&lt;30)-1)<br><br>class TheShuttles {<br>public:<br>  int getLeastCost(vector &lt;int&gt; cnt, int BC, int SC){<br>    int Max = -1;<br>    int n = L(cnt);<br>    for (int i = 0; i &lt; n; ++i)<br>      if(cnt[i] &gt; Max)<br>        Max = cnt[i];<br>    int MC = INF;<br>    for (int i = Max; i &gt; 0; --i) {<br>      int cost = 0;<br>      for (int j = 0; j &lt; L(cnt); ++j)<br>        cost += (cnt[j] + i - 1) / i;<br>      cost *= (BC + SC * i);<br>      if (cost &lt; MC)<br>        MC = cost;<br>    }<br>    return MC;<br>  }<br>};<br></td>