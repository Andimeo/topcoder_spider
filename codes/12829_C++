<td class="problemText" colspan="8" valign="middle" align="left">
            // {{{<br>#include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;stack&gt;<br>#include &lt;string&gt;<br>#include &lt;utility&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br>#define REP(i,n) for(int _n=n, i=0;i&lt;_n;++i)<br>#define FOR(i,a,b) for(int i=(a),_b=(b);i&lt;=_b;++i)<br>#define FORD(i,a,b) for(int i=(a),_b=(b);i&gt;=_b;--i)<br>typedef long long LL; typedef unsigned long long ULL;<br>const int INF = 1000000000; const LL INFLL = LL(INF) * LL(INF);<br>typedef vector&lt;int&gt; VI; typedef vector&lt;string&gt; VS; typedef vector&lt;VI&gt; VVI;<br>template&lt;class T&gt; inline int size(const T&amp;c) { return c.size(); }<br><br>template&lt;class T&gt; string i2s(T x) { ostringstream o; o&lt;&lt;x; return o.str(); }<br>int s2i(string s) { istringstream i(s); int x; i&gt;&gt;x; return x; }<br>LL s2ll(string s) { istringstream i(s); LL x; i&gt;&gt;x; return x; }<br><br>// }}}<br><br>struct ModuloCounters {<br>long long minFoxes(long long M, vector&lt;long long&gt; v) {<br>  int n = size(v);<br>  for(;;) {<br>    LL minS = INFLL;<br>    REP(i, n-1) {<br>      if(v[i] + v[i+1] &lt; minS) {<br>        minS = v[i] + v[i+1];<br>      }<br>    }<br>    LL max1 = *max_element(v.begin(), v.end());<br>    if(max1 &lt;= minS) return max1;<br>    *min_element(v.begin(), v.end()) += M;<br>  }<br>}<br><br>};<br><br><br>// Powered by FileEdit<br></td>