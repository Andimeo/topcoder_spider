<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;cstring&gt;<br> <br>using namespace std;<br> <br> <br>class ColorfulRoad {<br>public:<br>    string s;<br>    int dp[20], rl;<br> <br>    int func(int pos)<br>    {<br>        if(pos==rl-1) return 0;<br>        if(pos&gt;=rl) return 1e8;<br> <br>        int &amp;ret=dp[pos];<br>        if(ret!=-1) return ret;<br>        ret=1e5;<br> <br>        if(s[pos]=='R')<br>            for(int i=pos+1;i&lt;rl+3;i++)<br>                if(s[i]=='G')<br>                    ret=min(ret, func(i) + (i-pos)*(i-pos));<br>       if(s[pos]=='G')<br>            for(int i=pos+1;i&lt;rl+3;i++)<br>                if(s[i]=='B')<br>                    ret=min(ret, func(i) + (i-pos)*(i-pos));<br> <br>        if(s[pos]=='B')<br>            for(int i=pos+1;i&lt;rl+3;i++)<br>                if(s[i]=='R')<br>                    ret=min(ret, func(i) + (i-pos)*(i-pos));<br>    return ret;<br>    }<br> <br> <br>  int getMin(string road) {<br>      s=road;<br>      rl=road.length();<br>      s+="RGB";<br>      if(rl==1) return 0;<br>      if(road[rl-1]=='B')<br>        {<br>            bool chk=true;<br>            for(int i=1;i&lt;rl-1;i++)<br>                if(road[i]=='G')<br>                    chk=false;<br>            if(chk) return -1;<br>        }<br>        if(road[rl-1]=='R')<br>        {<br>            bool chk=true;<br>            int i=1;<br>            for(;i&lt;rl-1;i++)<br>                if(road[i]=='G')<br>                    for(;i&lt;rl-1;i++)<br>                        if(road[i]=='B')<br>                            chk=false;<br>            if(chk) return -1;<br>        }<br>        memset(dp,-1,sizeof(dp));<br>        return func(0);<br>  }<br>};<br> <br> <br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>