<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;climits&gt;<br>#include &lt;cfloat&gt;<br>#include &lt;map&gt;<br>#include &lt;utility&gt;<br>#include &lt;set&gt;<br>#include &lt;iostream&gt;<br>#include &lt;memory&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;sstream&gt;<br>#include &lt;complex&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;cstring&gt;<br>#include &lt;assert.h&gt;<br>#include &lt;sys/time.h&gt;<br>#include &lt;fstream&gt;<br><br>#define FOR(i,a,b) for(int i=(a);i&lt;(b);++i)<br>#define rep(i,n)  FOR(i,0,n)<br>#define exist(s,e) ((s).find(e)!=(s).end())<br><br><br>#define debug(x) cerr &lt;&lt; #x &lt;&lt; " = " &lt;&lt; (x) &lt;&lt; " (L" &lt;&lt; __LINE__ &lt;&lt; ")" &lt;&lt; " " &lt;&lt; __FILE__ &lt;&lt; endl;<br>#define deb(x) cerr &lt;&lt; #x &lt;&lt; " = " &lt;&lt; (x) &lt;&lt; " , ";<br>#define debl cerr &lt;&lt; " (L" &lt;&lt; __LINE__ &lt;&lt; ")"&lt;&lt; endl;<br><br>using namespace std;<br>typedef long long ll;<br>typedef vector&lt;ll&gt; vl;<br><br><br>bool is_square(ll v){<br>  ll sr = sqrt(v)+0.5;<br>  return sr*sr==v;<br>}<br><br>ll inf = 1e9;<br><br>class FindPolygons {<br><br>  public: double minimumPolygon(ll L) {<br>    if(L==2)return -1;<br>    debug(L);<br>    double ret = inf;<br>    for(ll a=1; a&lt;=L; a++){<br>      for(ll b=a; b+a&lt;L; b++){<br>        ll c = L-a-b;<br>        if(b&gt;c)continue;<br>        if(a+b&gt;c &amp;&amp; is_square((a+b+c)*(-a+b+c)*(a-b+c)*(a+b-c))){<br>          //deb(a);deb(b);deb(c);debl;<br>          ret = min(ret, 1.0*c-a);<br>        }<br>      }<br>    }<br>    if(ret!=inf){<br>      return ret;<br>    }<br>    if(L%4==0)return 0.0;<br>    if(L%2==0)return 1.0;<br>    return -1;<br>  }<br><br>};<br></td>