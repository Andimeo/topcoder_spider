<td class="problemText" colspan="8" valign="middle" align="left">
            Imports System.Collections.Generic<br> <br>Public Class WinterAndPresents<br>    Public Function getNumber(ByVal apple As Integer(), ByVal orange As Integer()) As Long<br>        Dim n = apple.Length<br>        Dim i = 1<br>        getNumber = 0<br>        While enoughFruit(i, apple, orange)<br>            Dim applest = getMost(i, apple)<br>            Dim orangest = getMost(i, orange)<br>            getNumber += Math.Min(n * i, applest) - Math.Max(n * i - orangest, 0) + 1<br>            i += 1<br>        End While<br>    End Function<br> <br>    Private Function getMost(X As Integer, more As Integer()) As Long<br>        getMost = 0<br>        For Each m In more<br>            getMost += Math.Min(X, m)<br>        Next<br>    End Function<br> <br>    Private Function enoughFruit(X As Integer, apple As Integer(), orange As Integer()) As Boolean<br>        For i = 0 To apple.Length - 1<br>            If apple(i) + orange(i) &lt; X Then Return False<br>        Next<br>        Return True<br>    End Function<br> <br>End Class<br></td>