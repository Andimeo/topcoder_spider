<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.Arrays;<br>import java.util.Random;<br> <br>/**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> */<br>public class BinPacking {<br>    public int minBins(int[] item) {<br>        ArrayUtils.rsort(item);<br>        int res = 0;<br>        while (true) {<br>            boolean found = false;<br>            for (int i = 0; i &lt; item.length; ++i) {<br>                if (item[i] &gt; 0) found = true;<br>            }<br>            if (!found) break;<br> <br>            int space = 300;<br>            for (int i = 0; i &lt; item.length; ++i) {<br>                if (item[i] &lt;= 0) continue;<br>                if (item[i] &lt;= space) {<br>                    space -= item[i];<br>                    item[i] = 0;<br>                }<br>            }<br>            res++;<br>        }<br>        return res;<br>    }<br>}<br> <br>class ArrayUtils {<br> <br>    public static void sort(int[] a) {<br>        ArrayShuffler shuffler = new ArrayShuffler();<br>        shuffler.shuffle(a);<br>        Arrays.sort(a);<br>    }<br> <br>    public static void rsort(int[] a) {<br>        sort(a);<br>        for (int i = 0, j = a.length - 1; i &lt; j; ++i, --j) {<br>            int temp = a[i];<br>            a[i] = a[j];<br>            a[j] = temp;<br>        }<br>    }<br> <br>    }<br> <br>class ArrayShuffler {<br>    static Random random = new Random(7428429L);<br> <br>    public void shuffle(int[] p) {<br>        for (int i = 0; i &lt; p.length; ++i) {<br>            int j = i + random.nextInt(p.length - i);<br>            int temp = p[i];<br>            p[i] = p[j];<br>            p[j] = temp;<br>        }<br>    }<br> <br>    }<br></td>