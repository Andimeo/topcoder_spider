<td class="problemText" colspan="8" valign="middle" align="left">
            import math<br><br>def factor(n):<br>    p = 2<br>    ret = []<br>    while n &gt; 1:<br>        count = 0<br>        while n%p == 0:<br>            count += 1<br>            n /= p<br>        if count &gt; 0:<br>            ret.append([p, count])<br>        elif p &gt; math.sqrt(n):<br>            ret.append([n, 1])<br>            return ret<br>        p += 1<br>    return ret<br><br>class BigFatInteger:<br>  def minOperations(self, A, B):<br>    f = factor(A)<br>    M = max([fact[1] * B for fact in f])<br>    count = len(f)<br>    exp = 1<br>    while exp &lt; M:<br>      count += 1<br>      exp += exp<br>    return count<br></td>