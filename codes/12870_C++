<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class BigFatInteger2 {<br>public:<br>string isDivisible(int, int, int, int);<br>};<br> <br>string BigFatInteger2::isDivisible(int A, int B, int C, int D)<br>{<br>string div("divisible"),nodiv("not divisible");<br>map&lt;int,long long int&gt; primeA,primeB;<br>int ta=sqrt(A),tc=sqrt(C);<br>for(int i=2;i&lt;=ta;i++)<br>{<br>long long int cnt=0;<br>while(A%i==0)<br>{<br>A/=i; cnt++;<br>}<br>if(cnt)<br>{<br>primeA.insert(make_pair(i,(long long )cnt*B));<br>}<br>}<br>if(A!=1LL) primeA.insert(make_pair(A,(long long )B));<br>bool flag=true;<br>for(int i=2;i&lt;=tc;i++)<br>{<br>long long int cnt=0;<br>while(C%i==0)<br>{<br>C/=i; cnt++;<br>}<br>if(cnt)<br>{<br> <br>if(primeA.count(i)==0)<br>{<br>flag=false;break;<br>}<br>else if(primeA[i] &lt;(long long )D*cnt)<br>{<br>flag=false;break;<br>}<br>}<br>}<br>if(C!=1LL&amp;&amp;flag)<br>{<br>if(primeA.count(C)==0||primeA[C] &lt;D)<br>{<br>flag=false;<br>}<br>}<br>if(flag)<br>{<br>return div;<br>}<br>else return nodiv;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>