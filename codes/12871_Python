<td class="problemText" colspan="8" valign="middle" align="left">
            class SimilarNames2:<br>    def count(self,names,L):<br>        def NcR(N,r):<br>            # N!//(r! . (N-r)!)<br>            # (a / b) mod p = ((a mod p) * (b^(-1) mod p)) mod p<br>            # b^(-1) mod p = b^(p - 2) mod p<br> <br>            amodp = Factorial[N]<br>            invmodb = (Factorial[r]*Factorial[N-r])%(10**9+7)<br>            invmodb = pow(invmodb , 10**9+5 , 10**9+7)<br> <br>            return (amodp*invmodb)%(10**9+7)<br> <br> <br>        Factorial=[1]<br>        p=1<br>        for i in range(1,51):<br>            p*=i<br>            Factorial.append(p%(10**9+7))<br>            p%=10**9+7<br>        <br>        names=sorted(names,key=len)<br>        L-=1<br>        D=[]<br>        n=len(names)<br>        N=n<br>        for i in range(n):<br>            D.append([])<br>            for j in range(i):<br>                if(names[j]==names[i][0:len(names[j])]):<br>                    D[-1].append(j)<br>        ans=0<br>        for i in range(n):<br>            if(len(D[i])&gt;=L):<br>                ans+=NcR(len(D[i]),L)*Factorial[N-L-1]<br>                ans%=10**9+7<br>        return ans<br></td>