<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br>const int MAXN = 2100;<br>const long long MOD = 1000000007;<br> <br>class WinterAndSnowmen {<br>public:<br>  int getNumber(int, int);<br>};<br> <br>long long dp[MAXN][2]; //xor, first bit<br>long long nval[MAXN][2];<br> <br>int WinterAndSnowmen::getNumber(int N, int M) {<br>  long long ans = 0;<br>  for (int i = 0; i &lt; 11; i++) // first bit where dif<br>  {<br>    for (int j = 0; j &lt; MAXN; j++)<br>      for (int k = 0; k &lt; 2; k++)<br>        dp[j][k] = nval[j][k] = 0;<br>    dp[0][0] = 1;<br>    <br>    for (int j = 1; j &lt;= max (N, M); j++)<br>    {<br>      for (int k = 0; k &lt; MAXN; k++)<br>        nval[k][0] = nval[k][1] = 0;<br>      <br>      for (int k = 0; k &lt; MAXN; k++)<br>        for (int l = 0; l &lt; 2; l++)<br>        {<br>          if (j &lt;= N)<br>          {<br>            int nl = l;<br>            if (j &amp; (1 &lt;&lt; i))<br>              nl = 1 - nl;<br>            nval[k ^ j][nl] += dp[k][l];<br>          }<br>          if (j &lt;= M)<br>          {<br>            nval[k ^ j][l] += dp[k][l];<br>          }<br>        }<br>      <br>      for (int k = 0; k &lt; MAXN; k++)<br>        for (int l = 0; l &lt; 2; l++)<br>          dp[k][l] = (dp[k][l] + nval[k][l]) % MOD;<br>    }<br>    <br>    for (int j = 0; j &lt; MAXN; j++)<br>      if (j / (1 &lt;&lt; i) == 1)<br>        ans = (ans + dp[j][0]) % MOD;<br>  }<br>  return ans;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>