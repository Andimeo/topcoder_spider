<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> */<br>public class WinterAndSnowmen {<br>    static final long MODULO = (long) (1e9 + 7);<br> <br>    public int getNumber(int N, int M) {<br>        int p2 = 1;<br>        int bits = 0;<br>        while (N &gt;= p2 || M &gt;= p2) {<br>            p2 *= 2;<br>            ++bits;<br>        }<br>        long res = 0;<br>        for (int equalBits = 0; equalBits &lt; bits; ++equalBits) {<br>            int[] ways = new int[1 &lt;&lt; (equalBits + 2)];<br>            int[] nways = new int[1 &lt;&lt; (equalBits + 2)];<br>            ways[0] = 1;<br>            for (int x = 1; x &lt;= N || x &lt;= M; ++x) {<br>                System.arraycopy(ways, 0, nways, 0, ways.length);<br>                int prefix = x &gt;&gt; (bits - equalBits);<br>                int toggles = ((x &gt;&gt; (bits - equalBits - 1)) &amp; 1);<br>                if (x &lt;= N) {<br>                    for (int old = 0; old &lt; ways.length; ++old) {<br>                        int amt = ways[old];<br>                        if (amt != 0) {<br>                            int nxt = old ^ (prefix &lt;&lt; 2) ^ (toggles &lt;&lt; 1);<br>                            nways[nxt] += amt;<br>                            if (nways[nxt] &gt;= MODULO) nways[nxt] -= MODULO;<br>                        }<br>                    }<br>                }<br>                if (x &lt;= M) {<br>                    for (int old = 0; old &lt; ways.length; ++old) {<br>                        int amt = ways[old];<br>                        if (amt != 0) {<br>                            int nxt = old ^ (prefix &lt;&lt; 2) ^ toggles;<br>                            nways[nxt] += amt;<br>                            if (nways[nxt] &gt;= MODULO) nways[nxt] -= MODULO;<br>                        }<br>                    }<br>                }<br>                int[] tmp = ways;<br>                ways = nways;<br>                nways = tmp;<br>            }<br>            res = (res + ways[1]) % MODULO;<br>        }<br>        return (int) res;<br>    }<br>}<br></td>