<td class="problemText" colspan="8" valign="middle" align="left">
            // Paste me into the FileEdit configuration dialog<br><br>#include &lt;cmath&gt;<br>#include &lt;ctime&gt;<br>#include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#ifdef _MSC_VER<br>#define sprintf sprintf_s<br>#endif<br>using namespace std;<br><br>double a[51];<br>bool w[51];<br>class GraphWalkWithProbabilities {<br>public:<br>   double findprob( vector &lt;string&gt; graph, vector &lt;int&gt; winprob, vector &lt;int&gt; looseprob, int Start ) {<br>     int n = graph.size();<br>     for (int i = 0; i &lt; n; i++) w[i] = false, a[i] = (double)(winprob[i]) / (double)(winprob[i] + looseprob[i]);<br>     for (int tt = 0; tt &lt; n; tt++)<br>     {<br>       int b = -1;<br>       for (int i = 0; i &lt; n; i++)<br>       {<br>         if (w[i]) continue;<br>         if ((b == -1) || (a[i] &gt; a[b])) b = i;<br>       }<br>       w[b] = true;<br>       for (int i = 0; i &lt; n; i++)<br>       {<br>         if (graph[i][b] == '0') continue;<br>         a[i] = max(a[i], (double)(winprob[i]) / 100.0 + (double)(100 - winprob[i] - looseprob[i]) / 100.0 * a[b]);<br>       }<br>     }<br>     double res = 0;<br>     for (int i = 0; i &lt; n; i++)<br>     {<br>       if (graph[Start][i] == '1') res = max(res, a[i]);<br>     }<br>     return res;<br>   }<br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by moj 4.16 [modified TZTester]<br>// Powered by CodeProcessor<br></td>