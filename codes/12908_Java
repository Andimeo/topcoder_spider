<td class="problemText" colspan="8" valign="middle" align="left">
            public class GraphWalkWithProbabilities {<br>    public double findprob(String[] graph, int[] winprob, int[] looseprob, int Start) {<br>        int n = graph.length;<br>        double[] p = new double[n];<br>        double maxProb = 0.0;<br>        for(int i = 0; i &lt; n; i++) {<br>            p[i] = (double)winprob[i] / (winprob[i] + looseprob[i]);<br>        }<br>        for(int k = 0; k &lt; 2 * n; k++) {<br>            for(int i = 0; i &lt; n; i++) {<br>                for(int j = 0; j &lt; n; j++) {<br>                    if(graph[i].charAt(j) == '1') {<br>                        p[i] = Math.max(p[i], <br>                                 winprob[i] * 0.01 + (1 - winprob[i] * 0.01 - looseprob[i] * 0.01) * p[j]);<br>                    }<br>                }<br>            }<br>        }<br>        for(int i = 0; i &lt; n; i++) {<br>            if(graph[Start].charAt(i) == '1') {<br>                maxProb = Math.max(maxProb, p[i]);<br>            }<br>        }<br>        return maxProb;<br>    }<br>}<br></td>