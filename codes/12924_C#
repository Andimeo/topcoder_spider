<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class TypoCoderDiv1 {<br>    public int getmax(int[] D, int X)<br>    {<br>        Dictionary&lt;long, int&gt; d = new Dictionary&lt;long, int&gt;();<br>        d[X] = 0;<br>        foreach (var item in D)<br>        {<br>            Dictionary&lt;long, int&gt; nd = new Dictionary&lt;long, int&gt;();<br>            foreach (var t in d)<br>            {<br>                long now = t.Key;<br>                int num = t.Value;<br>                while (true)<br>                {<br>                    long next = now + item;<br>                    int nextnum = num;<br>                    if ((next &lt; 2200) != (now &lt; 2200)) nextnum++;<br>                    if ((next &gt;= 2200) &amp;&amp; (now &gt;= 2200)) break;<br>                    if (next &lt; 0) next = 0;<br>                    if (!nd.ContainsKey(next)) nd[next] = nextnum;<br>                    else nd[next] = Math.Max(nd[next], nextnum);<br>                    break;<br>                }<br>                while (true)<br>                {<br>                    long next = now - item;<br>                    int nextnum = num;<br>                    if ((next &lt; 2200) != (now &lt; 2200)) nextnum++;<br>                    if ((next &gt;= 2200) &amp;&amp; (now &gt;= 2200)) break;<br>                    if (next &lt; 0) next = 0;<br>                    if (!nd.ContainsKey(next)) nd[next] = nextnum;<br>                    else nd[next] = Math.Max(nd[next], nextnum);<br>                    break;<br>                }<br><br>            }<br><br>            d = nd;<br>        }<br>        int ret = 0;<br>        foreach (var item in d)<br>        {<br>            ret = Math.Max(ret, item.Value);<br>        }<br>        return ret;<br>    }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] Modified for C# by ysn<br>// Powered by CodeProcessor<br></td>