<td class="problemText" colspan="8" valign="middle" align="left">
            #import math,string,itertools,fractions,heapq,collections,re,array,bisect<br> <br> <br> <br>INF = 2147483647<br> <br>table = [{} for i in range(55)]<br> <br>def update(i, next_rating, previous, so_far):<br>    #print "update", i, next_rating, previous, so_far<br>    if next_rating &gt;= 2200 and previous &gt;= 2200:<br>        return<br>    if next_rating &lt; 0:<br>        next_rating = 0<br>    if next_rating &gt;= 2200 &gt; previous or previous &gt;= 2200 &gt; next_rating:<br>        so_far += 1<br>    if next_rating in table[i]:<br>        table[i][next_rating] = max(table[i][next_rating], so_far)<br>    else:<br>        table[i][next_rating] = so_far<br> <br>class TypoCoderDiv1:<br>    def getmax(self, D, X):<br>        table[0][X] = 0<br>        N = len(D)<br>        for i in range(1, N+1):<br>            last_possibilities = table[i-1]<br>            for k in last_possibilities:<br>                if k &lt; 2200:<br>                    update(i, k + D[i-1], k, last_possibilities[k])<br>                update(i, k - D[i-1], k, last_possibilities[k])<br> <br>        best = 0<br>        for k in table[N]:<br>            best = max(best, table[N][k])<br> <br>        return best<br></td>