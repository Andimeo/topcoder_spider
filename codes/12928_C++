<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cassert&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;climits&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;ctime&gt;<br> <br>#include &lt;algorithm&gt;<br>#include &lt;deque&gt;<br>#include &lt;functional&gt;<br>#include &lt;iterator&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;stack&gt;<br>#include &lt;string&gt;<br>#include &lt;utility&gt;<br>#include &lt;vector&gt;<br> <br>#include &lt;fstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br> <br>#include &lt;ext/numeric&gt;<br> <br>using namespace std;<br>using namespace __gnu_cxx;<br> <br>typedef long long int64;<br> <br>const int INF = 0x3f3f3f3f;<br> <br>template &lt;class T&gt; int len (T a) { return a.size (); }<br> <br>int memo [55][205][205];<br>int N, lim, LIM;<br>vector &lt;int&gt; L, B;<br> <br>int<br>solve (int idx, int l, int b) {<br>    if (idx == N) {<br>        if (l == LIM &amp;&amp; b == LIM) return -1;<br>        if (l * b &gt;= lim) return 0;<br>        if (l * b &lt; lim) return -INF;<br>    }<br>    if (memo [idx][l][b] != -1) return memo [idx][l][b];<br>    int ret = 0;<br>    ret = 1 + max (solve (idx + 1, min (L [idx], l), min (B [idx], b)),<br>                   solve (idx + 1, min (B [idx], l), min (L [idx], b)));<br>    ret = max (ret, solve (idx + 1, l, b));<br>    return memo [idx][l][b] = ret;<br>}<br> <br>class PilingRectsDiv2 {<br>    public:<br>    int<br>    getmax(vector&lt;int&gt; X, vector&lt;int&gt; Y, int limit) {<br>        L = X; B = Y;<br>        memset (memo, -1, sizeof (memo));<br>        LIM = 202;<br>        lim = limit;<br>        N = len (X);<br>        return solve (0, LIM, LIM);<br>    }<br>};<br> <br>// Powered by Greed 2.0-beta<br></td>