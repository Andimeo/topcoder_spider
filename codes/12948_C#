<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class AlienAndHamburgers {<br>    public int getNumber(int[] type, int[] taste)<br>    {<br>        Dictionary&lt;int, int&gt; dic = new Dictionary&lt;int, int&gt;();<br>        <br>        for (int i = 0; i &lt; type.Length; i++)<br>        {<br>            if (taste[i] &gt;= 0)<br>            {<br>                if (!dic.ContainsKey(type[i])) dic[type[i]] = 0;<br>                dic[type[i]] += taste[i];<br>            }<br>        }<br><br>        for (int i = 0; i &lt; type.Length; i++)<br>        {<br>            if (taste[i] &lt; 0)<br>            {<br>                if (!dic.ContainsKey(type[i])) dic[type[i]] = taste[i];<br>                else dic[type[i]] = Math.Max(dic[type[i]], taste[i]);<br>            }<br>        }<br><br>        List&lt;int&gt; l = new List&lt;int&gt;();<br>        foreach (var item in dic.Values)<br>        {<br>            l.Add(item);<br>        }<br>        int[] ar = l.ToArray();<br>        Array.Sort(ar);<br>        Array.Reverse(ar);<br><br>        int ret = 0;<br>        int nowtaste = 0;<br><br>        for (int i = 0; i &lt; ar.Length; i++)<br>        {<br>            nowtaste += ar[i];<br>            ret = Math.Max(ret, (i + 1) * nowtaste);<br>        }<br><br>        return ret;<br>    }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] Modified for C# by ysn<br>// Powered by CodeProcessor<br></td>