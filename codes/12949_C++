<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;vector&gt;<br>#include&lt;string&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;set&gt;<br>#include&lt;map&gt;<br>#include&lt;queue&gt;<br>#include&lt;cmath&gt;<br>#include&lt;cstdio&gt;<br>#include&lt;iostream&gt;<br>#include&lt;sstream&gt;<br>#include&lt;cstdlib&gt;<br>#define MOD 1000000007<br>#define ADD(X,Y) ((X) = ((X) + (Y)%MOD) % MOD)<br>using namespace std;<br>typedef long long i64; typedef vector&lt;int&gt; ivec; typedef vector&lt;string&gt; svec;<br><br>int dp[205][205][205][2];<br><br>class AlienAndPermutation {<br>  vector&lt;int&gt; P;<br>  int N, K;<br>  int L[205], R[205];<br>  public:<br>  int getNumber(vector &lt;int&gt; Ps, int Ks)<br>  {<br>    P = Ps; K = Ks; N = P.size();<br><br>    for(int i=0;i&lt;N;i++) --P[i];<br>    for(int i=0;i&lt;N;i++){<br>      L[P[i]] = i;<br>      R[P[i]] = i;<br>      int v = P[i];<br><br>      while(L[v] &gt; 0 &amp;&amp; P[L[v]-1] &lt; v) --L[v];<br>      while(R[v] &lt; N-1 &amp;&amp; P[R[v]+1] &lt; v) ++R[v];<br><br>      //printf("%d %d %d\n", P[i], L[P[i]], R[P[i]]);<br>    }<br><br>    for(int i=0;i&lt;=N;i++)<br>      for(int j=0;j&lt;=N;j++)<br>        for(int k=0;k&lt;=K;k++)<br>          dp[i][j][k][0] = dp[i][j][k][1] = 0;<br><br>    P.push_back(0);<br>    dp[0][0][0][0] = 1;<br>    for(int i=0;i&lt;=N;i++){<br>      for(int j=0;j&lt;N;j++)<br>        for(int k=0;k&lt;=K;k++){<br>          //printf("%d %d %d: %d %d\n", i, j, k, dp[i][j][k][0], dp[i][j][k][1]);<br>          ADD(dp[i][j+1][k][0], dp[i][j][k][0]);<br>          ADD(dp[i][j+1][k][0], dp[i][j][k][1]);<br><br>          //use?<br>          if(L[P[j]] &lt;= i &amp;&amp; i &lt;= R[P[j]]){<br>            bool out = (i != j);<br>            ADD(dp[i+1][j][k][1], dp[i][j][k][1]);<br>            if(out) ADD(dp[i+1][j][k+1][1], dp[i][j][k][0]);<br>            else ADD(dp[i+1][j][k][0], dp[i][j][k][0]);<br>          }<br>        }<br>    }<br><br>    int ret = 0;<br>    for(int i=0;i&lt;=K;i++){<br>      ADD(ret, dp[N][N][i][0]);<br>      ADD(ret, dp[N][N][i][1]);<br>    }<br><br>    return ret;<br>  }<br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>