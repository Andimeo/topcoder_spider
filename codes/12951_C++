<td class="problemText" colspan="8" valign="middle" align="left">
            #line 5 "FoxConnection2.cpp"<br>#include &lt;iostream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstring&gt;<br>#include &lt;algorithm&gt;<br>using namespace std;<br> <br>typedef long long LL;<br> <br>const int maxN = 100 + 10;<br>const int MOD = 1000000007;<br> <br>struct EDGE<br>{<br>  EDGE *pre;<br>  int other;<br>};<br> <br>class FoxConnection2 {<br>  EDGE edgeData[maxN], *totEdge, *last[maxN];<br>  int vis[maxN];<br>  LL f[maxN][maxN];<br>  int N, M;<br> <br>  void addEdge(int u, int v)<br>  {<br>    EDGE *l = totEdge++;<br>    l-&gt;pre = last[u];<br>    l-&gt;other = v;<br>    last[u] = l;<br>  }<br> <br>  void DFS(int x)<br>  {<br>    vis[x] = 1;<br>    f[x][0] = 1;<br>    f[x][1] = 1;<br>    for (EDGE *p = last[x]; p != NULL; p = p-&gt;pre) {<br>      int y = p-&gt;other;<br>      if (vis[y]) continue;<br>      DFS(y);<br>      for (int i = M; i &gt; 1; --i)<br>        for (int j = 1; j &lt; i; ++j)<br>          f[x][i] = (f[x][i] + f[x][i - j] * f[y][j] % MOD) % MOD;<br>    }<br>  }<br> <br>  public:<br>  int ways(vector &lt;int&gt; A, vector &lt;int&gt; B, int k) {<br>    totEdge = edgeData;<br>    N = A.size() + 1;<br>    for (int i = 1; i &lt;= N; ++i) last[i] = NULL;<br>    M = k;<br>    for (int i = 0; i &lt; N - 1; ++i) {<br>      addEdge(A[i], B[i]);<br>      addEdge(B[i], A[i]);<br>    }<br>    memset(f, 0, sizeof f);<br>    memset(vis, 0, sizeof vis);<br>    DFS(1);<br>    int ans = 0;<br>    for (int i = 1; i &lt;= N; ++i) ans = (ans + f[i][M]) % MOD;<br>    return ans;<br>  }<br>};<br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>