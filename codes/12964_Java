<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> */<br>public class PalindromicSubstringsDiv1 {<br>    public double expectedPalindromes(String[] S1, String[] S2) {<br>        StringBuilder builder = new StringBuilder();<br>        for (String x : S1) builder.append(x);<br>        for (String x : S2) builder.append(x);<br>        String s = builder.toString();<br>        double res = 0;<br>        double oneChance = 1.0 / 26;<br>        for (int center = 0; center &lt;= 2 * s.length() - 2; ++center) {<br>            double cur = 0;<br>            double pr = 1.0;<br>            int left;<br>            int right;<br>            if (center % 2 == 0) {<br>                left = center / 2;<br>                right = center / 2;<br>                cur += pr;<br>            } else {<br>                left = center / 2 + 1;<br>                right = center / 2;<br>            }<br>            while (true) {<br>                --left;<br>                ++right;<br>                if (left &gt;= 0 &amp;&amp; right &lt; s.length()) {<br>                    char c1 = s.charAt(left);<br>                    char c2 = s.charAt(right);<br>                    if (c1 == '?' || c2 == '?') {<br>                        pr *= oneChance;<br>                    } else if (c1 != c2) break;<br>                    cur += pr;<br>                } else break;<br>            }<br>            res += cur;<br>        }<br>        return res;<br>    }<br>}<br></td>