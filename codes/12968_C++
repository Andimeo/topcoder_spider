<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class CombinationLockDiv1 {<br>public:<br>  int minimumMoves(vector &lt;string&gt;, vector &lt;string&gt;);<br>};<br> <br>const int inf = (int)1e9;<br>const int co = 12500;<br> <br>int _f[2 * (co + 10)], *f = _f + co + 10;<br> <br>int CombinationLockDiv1::minimumMoves(vector &lt;string&gt; P, vector &lt;string&gt; Q) {<br>  string s = "", t = "";<br>  for (int i = 0; i &lt; (int)P.size(); i++) s += P[i];<br>  for (int i = 0; i &lt; (int)Q.size(); i++) t += Q[i];<br>  int n = s.length();<br>  for (int j = -co; j &lt;= co; j++) f[j] = inf;<br>  f[0] = 0;<br>  for (int i = 0; i &lt; n; i++) {<br>    for (int j = co; j &gt; 0; j--)<br>      if (f[j] &lt; f[j - 1]) f[j - 1] = f[j];<br>    for (int j = -co; j &lt; 0; j++)<br>      if (f[j] &lt; f[j + 1]) f[j + 1] = f[j];<br>    for (int j = 0; j &lt; co; j++)<br>      if (f[j] + 1 &lt; f[j + 1]) f[j + 1] = f[j] + 1;<br>    for (int j = 0; j &gt; -co; j--)<br>      if (f[j] + 1 &lt; f[j - 1]) f[j - 1] = f[j] + 1;<br>    int diff = t[i] - s[i];<br>    int u = diff + (-co);<br>    int r = ((u % 10) + 10) % 10;<br>    for (int j = -co; j &lt;= co; j++) {<br>      if (r != 0) {<br>        f[j] = inf;<br>      }<br>      r++;<br>      if (r == 10) r = 0;<br>    }<br>  }<br>  int ans = inf;<br>  for (int j = -co; j &lt;= co; j++)<br>    if (f[j] &lt; ans) ans = f[j];<br>  return ans;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>