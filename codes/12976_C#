<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br> <br>public class MinimumSquare<br>{<br>  public long minArea(int[] x, int[] y, int K)<br>  {<br>        int N = x.Length;<br>        long bestArea = long.MaxValue;<br>        for (int xtopidx = 0; xtopidx &lt; N; xtopidx++)<br>        {<br>            long xtop = x[xtopidx] - 1;<br>            for (int ytopidx = 0; ytopidx &lt; N; ytopidx++)<br>            {<br>                long ytop = y[ytopidx] - 1;<br> <br>                long minSize = 2;<br>                long maxSize = 2000000002;<br>                while (minSize &lt; maxSize)<br>                {<br>                    long size = (maxSize + minSize) / 2;<br>                    long xbot = xtop + size;<br>                    long ybot = ytop + size;<br>                    int incount = 0;<br>                    for (int i = 0; i &lt; N; i++)<br>                    {<br>                        if (x[i] &gt; xtop &amp;&amp; x[i] &lt; xbot &amp;&amp; y[i] &gt; ytop &amp;&amp; y[i] &lt; ybot) incount++;<br>                    }<br> <br>                    if (incount &gt;= K)<br>                    {<br>                        maxSize = size;<br>                    }<br>                    else<br>                    {<br>                        minSize = size + 1;<br>                    }<br>                }<br> <br>                bestArea = Math.Min(bestArea, minSize * minSize);<br>            }<br>        }<br>        return bestArea;    <br>  }<br> <br> <br>}<br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>