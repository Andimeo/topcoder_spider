<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;cassert&gt;<br>#include &lt;cstring&gt;<br> <br>using namespace std;<br> <br>#define eprintf printf<br>#define pb push_back<br>#define mp make_pair<br>#define sz(x) ((int)(x).size())<br>#define sqr(x) ((x) * (x))<br>typedef long long ll;<br>typedef vector&lt;ll&gt; vll;<br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;vi&gt; vvi;<br>typedef vector&lt;bool&gt; vb;<br>typedef vector&lt;vb&gt; vvb;<br>typedef pair&lt;int, int&gt; pii;<br> <br>const int MOD = 1e9 + 7;<br>void madd(int &amp;a, int b) { if ((a += b) &gt;= MOD) a -= MOD; }<br>//int mmul(int a, int b) { return ll(a) * b % MOD; }<br> <br>const int MAXN = 50;<br>const int MAXK = 10;<br> <br>int dyn[MAXN + 1][MAXN + 1][1 &lt;&lt; MAXK];<br>int n, k, kmsk;<br> <br>int calc(int p1, int p2, int msk);<br> <br>int get(int ty, int p1, int p2, int msk) {<br>  if (!ty) return calc(p1, p2, msk);<br>  else return calc(p2, p1, kmsk - msk);<br>}<br> <br>int find_kth_one(int msk, int k) {<br>  int res = 0;<br>  while (msk) {<br>    if (msk &amp; 1) {<br>      if (!--k)<br>        return res;<br>    }<br>    res++;<br>    msk &gt;&gt;= 1;<br>  }<br>  return 100;<br>}<br> <br>int calc(int p1, int p2, int msk) {<br>  assert(0 &lt;= msk &amp;&amp; msk &lt;= kmsk);<br>  int &amp;res = dyn[p1][p2][msk];<br>  if (res &gt;= 0) return res;<br>  if (p1 == n &amp;&amp; p2 == n) return res = 1;<br> <br>  int val = p1 + p2; // val \in [0..2n)<br>  res = 0;<br>  for (int t = 0; t &lt; 2; t++, swap(p1, p2), msk = kmsk - msk) {<br>    if (p1 &gt;= n) continue;<br> <br>    if (p1 &gt;= p2) {<br>      madd(res, get(t, p1 + 1, p2, (msk &lt;&lt; 1) &amp; kmsk));<br>    } else { // need to check<br>      int id = find_kth_one(msk, p2 - p1) + 1;<br>      int nval = val - id;<br>      if (abs(nval - val) &gt;= k)<br>        madd(res, get(t, p1 + 1, p2, (msk &lt;&lt; 1) &amp; kmsk));<br>    }<br>  }  <br>  return res;<br>}<br> <br>class AlienAndSetDiv1 {<br>public:<br>  int getNumber(int N, int K) {<br>    memset(dyn, -1, sizeof dyn);<br>    n = N;<br>    k = K;<br>    kmsk = (1 &lt;&lt; k) - 1;<br>    return calc(0, 0, 0);<br>  }<br>};<br> <br> <br> <br> <br> <br> <br> <br> <br>//Powered by KawigiEdit 2.1.6 (beta) modified by pivanof (C++ patch by vexorian)!<br></td>