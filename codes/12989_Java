<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class VocaloidsAndSongs {<br>    long MOD = 1000000007;<br>    long[][][][] memo;<br>    public int count(int S, int gumi, int ia, int mayu) {<br><br>        memo = new long[S + 1][gumi+1][ia+1][mayu+1];<br>        for (int i = 0; i &lt; memo.length; i++) {<br>            for (int j = 0; j &lt; memo[i].length; j++) {<br>                for (int k = 0; k &lt; memo[i][j].length; k++) {<br>                    Arrays.fill(memo[i][j][k], -1);<br>                }<br>            }<br>        }<br>        long res = go(S, gumi, ia, mayu);<br>        <br><br>        return (int) res;<br>    }<br><br>    private long go(int s, int n1, int n2, int n3) {<br>        if (memo[s][n1][n2][n3] != -1) {<br>            return memo[s][n1][n2][n3];<br>        }<br>        if (s == 0) {<br>            if (n1 == 0 &amp;&amp; n2 == 0 &amp;&amp; n3 == 0) {<br>            return 1;<br>            } else {<br>                return 0;<br>            }<br>        } else {<br>            long res = 0;<br>            <br>            if (n1 &gt; 0) {<br>                res += go(s-1, n1-1, n2, n3);<br>            }<br>            res %= MOD;<br>            if (n2 &gt; 0) {<br>                res += go(s-1, n1, n2-1, n3);<br>            }<br>            res %= MOD;<br>            if (n3 &gt; 0) {<br>                res += go(s-1, n1, n2, n3-1);<br>            }<br>            res %= MOD;<br>            if (n1 &gt; 0 &amp;&amp; n2 &gt; 0) {<br>                res += go(s-1, n1-1, n2 - 1, n3);<br>            }<br>            res %= MOD;<br>            if (n1 &gt; 0 &amp;&amp; n3 &gt; 0) {<br>                res += go(s-1, n1-1, n2, n3 - 1);<br>            }<br>            res %= MOD;<br>            if (n2 &gt; 0 &amp;&amp; n3 &gt; 0) {<br>                res += go(s-1, n1, n2-1, n3 - 1);<br>            }<br>            res %= MOD;<br>            if (n1 &gt; 0 &amp;&amp; n2 &gt; 0 &amp;&amp; n3 &gt; 0) {<br>                res += go(s-1, n1-1, n2-1, n3 - 1);<br>            }<br>            res %= MOD;<br>            <br>            return memo[s][n1][n2][n3] = res;<br>        }<br>    }<br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>