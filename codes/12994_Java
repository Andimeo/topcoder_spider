<td class="problemText" colspan="8" valign="middle" align="left">
            //import static java.lang.Math.*;<br>import static java.util.Arrays.*;<br>import static java.util.Collections.*;<br> <br>public class PackingBallsDiv1<br>{<br>  public int minPacks(int K, int A, int B, int C, int D)<br>  {<br>    Long [] X = new Long [K]; X[0] = A + 0L;<br>    for (int i : rep(1, K))<br>      X[i] = (X[i-1] * B + C) % D + 1;<br> <br>    long res = 0;<br>    for (int i : rep(K)) {<br>      res += X[i]/K;<br>      X[i] %= K;<br>    }<br> <br>    sort(X, reverseOrder()); long Z = K+1;<br>    for (int i : rep(K))<br>      Z = min(Z, i + X[i]);<br> <br>    res += Z;<br>    return (int)res;<br>  }<br> <br>  private static &lt;T extends Comparable&lt;T&gt;&gt; T min(T x, T y) { return x.compareTo(y) &lt; 0 ? x : y; }<br>  private static int [] rep(int N) { return rep(0, N); }<br>  private static int [] rep(int S, int T) { if (T &lt;= S) return new int [0]; int [] res = new int [T-S]; for (int i = S; i &lt; T; ++i) res[i-S] = i; return res; }<br> <br>}<br>//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!<br></td>