<td class="problemText" colspan="8" valign="middle" align="left">
            import math,string,itertools,fractions,heapq,collections,re,array,bisect,random<br> <br>class MysticAndCandies:<br>    def minBoxes(self, C, X, low, high):<br>        n = len(low)<br>        res = n<br>        p = [i for i in range(n)]<br>        p.sort(key=lambda x: low[x], reverse=True)<br>        m = 0<br>        for i in range(n):<br>            m += low[p[i]]<br>            if m &gt;= X:<br>                res = min(res, i + 1)<br> <br>        p.sort(key=lambda x: high[x])<br>        m = 0<br>        for i in range(n):<br>            m += high[p[i]]<br>            if C - m &gt;= X:<br>                res = min(res, n - i - 1)<br> <br>        return res<br> <br> <br> <br> <br> <br> <br> <br> <br> <br>def make_array2(size):<br>    if len(size) == 1:<br>        return [0] * size[0]<br>    else:<br>        return [make_array2(size[1:]) for i in range(size[0])]<br> <br> <br>def make_array(*size):<br>    size_array = list(size)<br>    return make_array2(size_array)<br> <br> <br>#Powered by KawigiEdit-pf 2.3.0!<br></td>