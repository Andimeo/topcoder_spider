<td class="problemText" colspan="8" valign="middle" align="left">
            import math<br>import string<br> <br>class BigOEasy:<br>    def isBounded(self, graph):<br>        graph = [map(lambda x: x == "Y", g) for g in graph]<br>        N = len(graph)<br>        def check(start):<br>            q = set([start])<br>            visited = [False] * N<br>            flag = 0<br>            while len(q) != 0:<br>                cur = q.pop()<br>                for i in xrange(N):<br>                    if not graph[cur][i] or visited[i]:<br>                        continue<br>                    if i == start:<br>                        flag += 1<br>                        if flag &gt; 1:<br>                            return True<br>                    else:<br>                        visited[i] = True<br>                        q.add(i)<br>            return False<br>        for i in xrange(N):<br>            if check(i):<br>                return "Unbounded"<br>        return "Bounded"<br> <br> <br>#Powered by KawigiEdit-pfx 2.1.9!<br></td>