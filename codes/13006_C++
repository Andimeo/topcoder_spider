<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>typedef pair&lt;int, int&gt; pi;<br> <br>#define sz(v) (int)v.size()<br>#define all(c) (c).begin(),(c).end()<br> <br>class TaroString {<br>public:<br>  string getAnswer(string S) {<br>    string ret[] = {"Possible","Impossible"};<br>    map&lt;char,int&gt; M;<br>    for(int i = 0; i &lt; sz(S); i++) M[S[i]]++;<br>    string C = "CAT", SS = "";<br>    for(int i = 0; i &lt; sz(C); i++){<br>      if(!M[C[i]] || M[C[i]] &gt; 1) return ret[1];<br>    }<br>    for(int j = 0; j &lt; sz(S); j++)<br>      for(int i = 0; i &lt; sz(C); i++)<br>        if(S[j] == C[i])<br>          SS += C[i];<br>    if(C == SS) return ret[0];<br>    return ret[1];<br>  }<br>};<br> <br> <br> <br>//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!<br>//With unused code cleaner (beta) by ahmed_aly<br></td>