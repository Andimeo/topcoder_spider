<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br> <br>using namespace std;<br> <br>typedef pair&lt;int, int&gt; pii;<br>typedef pair&lt;double, pii&gt; ed;<br> <br>#define repi(i, a) for(auto i = (a).begin(), _##i = (a).end(); i != _##i; ++i)<br>const int MAXN = 222;<br>double dist[MAXN][MAXN];<br>int N;<br> <br>double sq(double x) {<br>  return x * x;<br>}<br> <br> <br>int par[MAXN];<br>int find(int x) {<br>  if (par[x] == x) return x;<br>  else return par[x] = find(par[x]);<br>}<br>bool join(int a, int b) {<br>  a = find(a);<br>  b = find(b);<br>  par[a] = b;<br>  return a != b;<br>}<br>void init() {<br>  for(int i = 0; i &lt; N; ++i) {<br>    par[i] = i;<br>  }<br>}<br> <br>double go(double mid) {<br>  vector&lt;ed&gt; v;<br>  init();<br>  for(int i = 0; i &lt; N; ++i) {<br>    for(int j = 0; j &lt; i; ++j) {<br>      v.push_back(ed(abs(dist[i][j] - mid), pii(i, j)));<br>    }<br>  }<br>  sort(v.begin(), v.end());<br>  vector&lt;pii&gt; k;<br>  repi(i, v) {<br>    int a = i-&gt;second.first, b = i-&gt;second.second;<br>    if (join(a, b)) {<br>      k.push_back(pii(a, b));<br>    }<br>  }<br>  <br>  double tot = 0;<br>  repi(i, k) {<br>    int a = i-&gt;first, b = i-&gt;second;<br>    tot += dist[a][b];<br>  }<br>  tot /= (N - 1);<br>  double dev = 0;<br>  repi(i, k) {<br>    int a = i-&gt;first, b = i-&gt;second;<br>    dev += sq(dist[a][b] - tot);<br>  }<br>  dev /= N - 1;<br>  dev = sqrt(dev);<br>  return dev;<br>}<br> <br>struct Egalitarianism2 {<br>public: double minStdev(vector&lt;int&gt; xx, vector&lt;int&gt; yy) {<br>  N = xx.size();<br>  vector&lt;double&gt; mids;<br>  vector&lt;double&gt; lens;<br>  for(int i = 0; i &lt; N; ++i) {<br>    for(int j = 0; j &lt; N; ++j) {<br>      dist[i][j] = sqrt(sq(xx[i] - xx[j]) + sq(yy[i] - yy[j]));<br>      repi(k, lens) {<br>        mids.push_back((*k + dist[i][j]) / 2);<br>      }<br>      lens.push_back(dist[i][j]);<br>    }<br>  }<br>  double ans = 1E20;<br>  repi(i, mids) {<br>    double k = go(*i);<br>    if (k &lt; ans) ans = k;<br>  }<br>  return ans;<br>}<br>};<br></td>