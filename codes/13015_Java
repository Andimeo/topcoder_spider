<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br><br>public class TaroCards {<br>    public static long[][][] dp = new long[2050][110][51];<br>    public static int[] f,s;<br>    public static int k, n;<br>    public long getNumber(int[] first, int[] second, int K) {<br>        k = K;<br>        f = first;<br>        n = f.length;<br>        s= second;<br>        for (int i = 0;i &lt; 2050; ++ i){<br>            for (int j =0; j &lt; 110; ++ j){<br>                for (int v = 0; v &lt; 51; ++ v){<br>                    dp[i][j][v] = -1;<br>                }<br>            }<br>        }<br>        return rec(0,0,0);<br>    }<br><br>    public static long rec(int msk,int sum, int index){<br>        if (sum &gt; k)return 0;<br>        if (index == n){<br>            return 1;<br>        }<br>        if (dp[msk][sum][index] != -1){<br>            return dp[msk][sum][index];<br>        }<br>        long res = 0;<br>        int nsec = s[index];<br>        int nfir = f[index];<br>        // add<br>        int tmsk = msk;<br>        int add = 0;<br>        if (nfir &lt;= 10){<br>            if ((tmsk &amp; (1 &lt;&lt; nfir)) == 0){<br>                tmsk |= (1 &lt;&lt; nfir);<br>                add++;<br>            }<br>        }else {<br>            add++;<br>        }<br>        if ((tmsk &amp; (1 &lt;&lt; nsec)) == 0){<br>            tmsk |= (1 &lt;&lt; nsec);<br>            add++;<br>        }<br>        res += rec(tmsk, sum + add, index + 1);<br>        //not add<br>        res += rec(msk, sum, index + 1);<br>        dp[msk][sum][index] = res;<br>        return res;<br>    }<br><br>    public static void main(String[] args) {<br>        TaroCards temp = new TaroCards();<br>        System.out.println(temp.getNumber(new int[]{3,1,2}, new int[]{1, 1,1}, 3));<br>    }<br>}<br></td>