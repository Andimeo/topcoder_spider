<td class="problemText" colspan="8" valign="middle" align="left">
            /*<br> * in the name of god<br> *<br> *<br> *<br> *<br> *<br> *<br> *<br> *<br> */<br><br>#include &lt;iostream&gt;<br>#include &lt;fstream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;ctime&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;complex&gt;<br>#include &lt;bitset&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;utility&gt;<br><br>using namespace std;<br><br>typedef long long LL;<br>typedef pair&lt;int,int&gt; pii;<br>typedef complex&lt;double&gt; point;<br><br>const int mod = 1000000007;<br><br>int f[200000];<br><br>int POW (int base, int p){<br>  int ret = 1, cur = base;<br>  while (p){<br>    if (p &amp; 1) ret = (LL)ret * cur % mod;<br>    p&gt;&gt;=1;<br>    cur = (LL)cur * cur % mod;<br>  }<br>  return ret;<br>}<br><br>struct RandomGCD{<br>  int countTuples(int N, int K, int lo, int hi){<br>    lo = (lo+K-1)/K, hi = hi/K; <br>    if (lo &gt; hi)<br>      return 0;<br>    for (int i=100000; i&gt;=1; i--){<br>      int L = (lo + i-1) / i;<br>      int H = hi / i;<br>      if (L &lt;= H){<br>        f[i] = POW(H-L+1, N); <br>        f[i]-= (H-L+1);<br>        if (f[i] &lt; 0) f[i]+= mod;<br>        for (int j=i*2; j&lt;=100000; j+=i){<br>          f[i]-=f[j];<br>          if (f[i]&lt;0) f[i]+= mod;<br>        }<br>      }<br>    }<br>    if (lo == 1)<br>      f[1] = (f[1] + 1) % mod;<br>    return f[1];<br>  }  <br>};<br></td>