<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.Comparator;<br>import java.util.Arrays;<br> <br>/**<br> * Built using CHelper plug-in<br> * Actual solution is at the top<br> */<br>public class AlbertoTheAviator {<br>    static class Mission {<br>        int duration;<br>        int refuel;<br> <br>        Mission(int duration, int refuel) {<br>            this.duration = duration;<br>            this.refuel = refuel;<br>        }<br>    }<br> <br> <br>    public int MaximumFlights(int F, int[] duration, int[] refuel) {<br>        Mission[] missions = new Mission[duration.length];<br>        for (int i = 0; i &lt; duration.length; ++i) {<br>            missions[i] = new Mission(duration[i], refuel[i]);<br>        }<br>        Arrays.sort(missions, new Comparator&lt;Mission&gt;() {<br>            @Override<br>            public int compare(Mission o1, Mission o2) {<br>                return o2.refuel - o1.refuel;<br>            }<br>        });<br>        int[] best = new int[F + 1];<br>        for (Mission mission : missions) {<br>            for (int fuel = mission.duration; fuel &lt;= F; ++fuel)<br>                best[fuel - mission.duration + mission.refuel] = Math.max(best[fuel - mission.duration + mission.refuel], best[fuel] + 1);<br>        }<br>        int max = 0;<br>        for (int x : best) max = Math.max(max, x);<br>        return max;<br>    }<br>}<br></td>