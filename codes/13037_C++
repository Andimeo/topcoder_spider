<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br>const int MAXN = 1000100;<br> <br>class LeftAndRightHandedDiv1 {<br>public:<br>  long long countSwaps(string, int, int, int, int, int);<br>};<br> <br>int val[MAXN]; // 1 if left, 0 if right<br>long long rlist[2*MAXN];<br>int nlist;<br> <br>long long plist[2*MAXN];<br> <br>long long LeftAndRightHandedDiv1::countSwaps(string Y, int A, int B, int C, int D, int N) {<br>  int L = Y.length();<br>  long long cval = A;<br>  for (int i = 0; i &lt; N; i++)<br>  {<br>    if (Y[cval % L] == 'L')<br>      val[i] = 1;<br>    else<br>      val[i] = 0;<br>    <br>    cval = (cval * B + C) % D;<br>  }<br>  <br>  nlist = 0;<br>  for (int i = 0; i &lt; N; i++)<br>    if (val[i])<br>      rlist[nlist++] = i;<br>  for (int i = nlist; i &lt; 2 * nlist; i++)<br>    rlist[i] = rlist[i-nlist] + N;<br>  <br>  plist[0]= 0;<br>  for (int i = 0; i &lt; 2 * nlist; i++)<br>    plist[i+1] = plist[i] + rlist[i];<br>  <br>  long long best = 1e18;<br>  if (nlist == 0) best = 0;<br>  //for (int i = 0; i &lt; 2 * nlist; i++)<br>//    cout &lt;&lt; rlist[i] &lt;&lt; endl;<br>  <br>  for (int i = 0; i &lt; nlist; i++)<br>  {<br>    long long mid = i+nlist/2;<br>    best = min (best, (rlist[mid] * (mid - i) - ((mid - i) * (mid - i + 1) / 2) - (plist[mid] - plist[i])) + <br>    ((plist[i+nlist] - plist[mid]) - (rlist[mid] * (nlist - (mid - i))) - ((nlist - (mid - i)) * (nlist - (mid - i) - 1) / 2)));<br>  }<br>  return best;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>