<td class="problemText" colspan="8" valign="middle" align="left">
            #ifdef defines<br><br>class MicroStrings<br>{<br>  public:<br>  string makeMicroString( int A, int D )<br>  {<br>    stringstream ss;<br>    while(A &gt;= 0)<br>    {<br>      ss &lt;&lt; A;<br>      A -= D;<br>    }<br>    return ss.str();<br>  }<br>};<br><br><br>#else<br><br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;unordered_set&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br><br>using namespace std;<br><br>const double EPS = 1e-10;<br>const double PI = 3.14159265358979323846264338328;<br>const int MNI = numeric_limits&lt;int&gt;::min();<br>const int MXI = numeric_limits&lt;int&gt;::max();<br><br>#define FOR(i, start, end) for (long long i = (start); i &lt; (end); i++)<br>#define FORD(i, start, end) for (long long i = (start) - 1; i &gt;= (end); i--)<br>#define MSG(a) cout &lt;&lt; #a &lt;&lt; " = "  &lt;&lt; a &lt;&lt; endl<br>#define ALL(a)  (a).begin(), (a).end()<br>#define ALLR(a)  (a).rbegin(), (a).rend()<br>#define SORT(a) sort(ALL(a))<br>#define RSORT(a) sort(ALLR(a))<br>#define REV(a) reverse(ALL(a))<br>#define FE(i, n) for(__typeof(n.begin()) i = n.begin(); i != n.end(); ++i)<br>#define PAA(a) FOR(i, 0, (a).size()) { FOR(j, 0, (a)[i].size()) cout &lt;&lt; (a)[i][j] &lt;&lt; " "; cout &lt;&lt; endl; }<br>#define PAS(a) FOR(i, 0, (a).size()) { FOR(j, 0, (a)[i].length()) cout &lt;&lt; (a)[i][j] &lt;&lt; " "; cout &lt;&lt; endl; }<br><br>typedef long long LL;<br>typedef pair&lt;int, int&gt; pii;<br><br>#define fi first<br>#define se second<br>#define mp make_pair<br>#define pb push_back<br><br>pii M[8] = {mp(0, 1), mp(1, 1), mp(1, 0), mp(1, -1), mp(0, -1), mp(-1, -1), mp(-1, 0), mp(-1, 1)};<br>pii O[8] = {mp(0, 1), mp(1, 0), mp(0, -1), mp(-1, 0)};<br><br>#define defines<br>#include "MicroStrings.cc"<br><br>#endif<br><br><br>// Powered by FileEdit<br>// Powered by moj 4.18 [modified TZTester]<br>// Powered by CodeProcessor<br></td>