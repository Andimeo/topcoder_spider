<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;utility&gt;<br>#include &lt;string&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstring&gt;<br>#define INF (int)1e9<br>#define EPS 1e-9<br>#define forall(i,a,b) for(int i=a;i&lt;b;i++)<br>#define forneg(i,a,b) for(int i=a;i&gt;=b;i--)<br>#define pb push_back<br>#define mp make_pair<br>#define sz(a) ((int)(a.size()))<br>#define DREP(a) sort(all(a));a.erase(unique(all(a)),a.end())<br> <br>using namespace std;<br>class TwoLLogo {<br>  public:<br>    vector&lt;string&gt; grid;<br>  long long countWays(vector &lt;string&gt; grid1) {<br>    grid=grid1;<br>    int n=grid.size(), m=grid[0].length(), r[n][m],u[n][m];<br>    memset(r,0,sizeof(r));<br>    memset(u,0,sizeof(u));<br>    forall(i,1,n) <br>      forall(j,0,m) <br>        if (grid[i][j]=='.') {<br>          if (grid[i-1][j]=='#') u[i][j]=0;<br>          else u[i][j]=u[i-1][j]+1;<br>        }<br>    forall(i,0,n) <br>      forneg(j,m-2,0) <br>        if (grid[i][j]=='.') {<br>          if (grid[i][j+1]=='#') r[i][j]=0;<br>          else r[i][j]=r[i][j+1]+1;<br>        }<br>    long long t=0;<br> <br> <br>    // forall(i,0,n) {forall(j,0,m) cout&lt;&lt;r[i][j]&lt;&lt;" "; cout&lt;&lt;endl;}<br>    // forall(i,0,n) {forall(j,0,m) cout&lt;&lt;u[i][j]&lt;&lt;" "; cout&lt;&lt;endl;}<br>    // forall(i,0,n) forall(j,0,m) ot+=u[i][j]*r[i][j];<br>    <br> <br>    forall(i,1,n) {<br>      forall(j,0,m-1) {<br>        if (grid[i][j]!='.') continue;<br>        int up=u[i][j],rt=r[i][j];<br>        if (up==0 || rt==0) continue;<br>        <br>        grid[i][j]='#';<br>        forall(x,1,up+1) {<br>          grid[i-x][j]='#';<br>          forall(y,1,rt+1) {<br>            grid[i][j+y]='#';<br>            //cout&lt;&lt;countit()&lt;&lt;" ";<br>            t+=countit();<br>          }<br>          //cout&lt;&lt;endl;<br>          forall(y,1,rt+1) <br>            grid[i][j+y]='.';<br>        }<br>        forall(x,1,up+1) <br>          grid[i-x][j]='.';<br>        grid[i][j]='.';<br>      }<br>    }<br>    <br>    return t/2;<br>  }<br>  long long countit() {<br>    int n=grid.size(), m=grid[0].length(), r[n][m],u[n][m];<br>    memset(r,0,sizeof(r));<br>    memset(u,0,sizeof(u));<br>    forall(i,1,n) <br>      forall(j,0,m) <br>        if (grid[i][j]=='.') {<br>          if (grid[i-1][j]=='#') u[i][j]=0;<br>          else u[i][j]=u[i-1][j]+1;<br>        }<br>    forall(i,0,n) <br>      forneg(j,m-2,0) <br>        if (grid[i][j]=='.') {<br>          if (grid[i][j+1]=='#') r[i][j]=0;<br>          else r[i][j]=r[i][j+1]+1;<br>        }<br> <br> <br>    // forall(i,0,n) {forall(j,0,m) cout&lt;&lt;r[i][j]&lt;&lt;" "; cout&lt;&lt;endl;}<br>    // forall(i,0,n) {forall(j,0,m) cout&lt;&lt;u[i][j]&lt;&lt;" "; cout&lt;&lt;endl;}<br>    long long t=0;<br>    forall(i,0,n) forall(j,0,m) t+=u[i][j]*r[i][j];<br>    return t;<br>  }<br>};<br> <br> <br>// Powered by FileEdit<br>// Powered by TesterDream 1.2.4 by fushar (December 19 2012)<br>// Powered by CodeProcessor<br></td>