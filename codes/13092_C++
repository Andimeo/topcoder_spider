<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;cstring&gt;<br> <br>using namespace std;<br> <br>const int MOD = 1000000007;<br> <br>int f[5555][55][111];<br> <br>class AlternativePiles {<br>public:<br>  void add(int &amp;a, int b) {<br>    a += b;<br>    if (a &gt;= MOD)<br>      a -= MOD;<br>  }<br>  <br>  int count(string C, int M) {<br>    int n = C.size();<br>    int m = M;<br>    memset(f, 0, sizeof(f));<br>    f[0][0][0] = 1;<br>    for(int i = 0; i &lt; n; i++)<br>      for(int j = 0; j &lt;= m; j++)<br>        for(int k = 0; k &lt; 2 * m; k++) {<br>          if (C[i] == 'B') {<br>            add(f[i + 1][j][k], f[i][j][k]);<br>          } else if (C[i] == 'R') {<br>            if (j &lt; m) {<br>              add(f[i + 1][j + 1][(k + 1) % (2 * m)], f[i][j][k]);<br>            }<br>          } else if (C[i] == 'G') {<br>            if (j &gt; 0) {<br>              add(f[i + 1][j - 1][(k + 1) % (2 * m)], f[i][j][k]);<br>            }<br>          } else if (C[i] == 'W') {<br>            if (j &lt; m) {<br>              add(f[i + 1][j + 1][(k + 1) % (2 * m)], f[i][j][k]);<br>            }<br>            if (j &gt; 0) {<br>              add(f[i + 1][j - 1][(k + 1) % (2 * m)], f[i][j][k]);<br>            }<br>            add(f[i + 1][j][k], f[i][j][k]);<br>          }<br>        }<br>    return f[n][0][0];<br>  }<br>};<br> <br> <br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>