<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cctype&gt;<br>#include &lt;sstream&gt;<br> <br>using namespace std;<br> <br>const string AMB="AMBIGUOUS! ";<br>const string IMP="IMPOSSIBLE! ";<br> <br>class MessageMess<br>{<br>  vector&lt;string&gt; dict;<br>  map&lt;string, string&gt; R;<br>  string rest (string m)<br>  {<br>    if (m=="") return m;<br>    if (R.count(m)!=0) return R[m];<br>    string sol=IMP;<br>    for (int i=0; i&lt;dict.size(); i++)<br>    if (m.size()&gt;=dict[i].size() &amp;&amp; m.substr(0, dict[i].size())==dict[i])<br>    {<br>      string tail=rest(m.substr(dict[i].size()));<br>      if (tail==AMB) return R[m]=AMB;<br>      if (tail==IMP) continue;<br>      if (sol!=IMP) return R[m]=AMB;<br>      sol=dict[i]+" "+tail;<br>    }<br>    return R[m]=sol;<br>  }<br>  <br>  public:<br>  string restore(vector &lt;string&gt; a, string b) <br>  {<br>    dict=a;<br>    string sol=rest(b);<br>    return sol.substr(0, sol.size()-1);<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>