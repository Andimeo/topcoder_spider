<td class="problemText" colspan="8" valign="middle" align="left">
            #line 192 "Pareto.cpp"<br> <br>#include &lt;algorithm&gt;<br>//#include &lt;bitset&gt;<br>#include &lt;climits&gt;<br>//#include &lt;complex&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>//#include &lt;deque&gt;<br>//#include &lt;hash_map&gt;<br>#include &lt;iostream&gt;<br>#include &lt;string&gt;<br>//#include &lt;map&gt;<br>//#include &lt;queue&gt;<br>//#include &lt;set&gt;<br>//#include &lt;stack&gt;<br>//#include &lt;strstream&gt;<br>#include &lt;vector&gt;<br> <br>using namespace std;<br> <br>typedef long long i64; typedef unsigned long long u64;<br>typedef vector&lt;string&gt; VS; typedef vector&lt;int&gt; VI;<br>typedef vector&lt;VS&gt; VVS; typedef vector&lt;VI&gt; VVI;<br>typedef pair&lt;int,int&gt; PII;<br> <br>VS split( const char* s, string chars, bool empty_ok = false );<br>VI vstovi( const VS&amp; vs );<br>VI xvi( const char* s );<br>VS xvs( const char* s );<br>ostream&amp; operator&lt;&lt;( ostream&amp; os, const VI&amp; vi );<br>ostream&amp; operator&lt;&lt;( ostream&amp; os, const VS&amp; vs );<br> <br>#define ALL(x) (x).begin(),(x).end()<br>#define SORT(x) sort((x).begin(),(x).end())<br>#define UNIQUE(x) (x).erase(unique((x).begin(),(x).end()),(x).end())<br> <br>////////////////////////////////////////////////////////////////////////<br> <br>string ss[6] = { "awful", "bad", "fair", "fairly-happy", "happy", "ecstatic" };<br> <br>class Pareto {public:<br> <br>int code( string s )<br>{<br>    for( int i = 0; i &lt; 6; i++ ) if( s == ss[i] ) return i;<br>    return 0;<br>}<br> <br>int optima( vector &lt;string&gt; a )<br>{<br>    int n = a.size();<br>    int ret = 0;<br> <br>    for( int i = 0; i &lt; n; i++ ) <br>    {<br>  VS vs = split( a[i].c_str(), " " );<br> <br>printf("checking %s\n",a[i].c_str());<br> <br>  for( int j = 0; j &lt; n; j++ ) <br>  {<br>      VS vs2 = split( a[j].c_str(), " " );<br>      int nbetter = 0;<br>      int nworse = 0;<br> <br>      for( int k = 0; k &lt; vs.size(); k++ ) {<br>    if( code(vs2[k]) &lt; code(vs[k]) ) nworse++;<br>    if( code(vs2[k]) &gt; code(vs[k]) ) nbetter++;<br>      }<br> <br>      if( nworse == 0 &amp;&amp; nbetter &gt;= 1 ) {<br>    ret++;<br>    break;<br>      }<br>  }<br>    }<br> <br>    return n-ret;<br>}<br> <br>};<br> <br>//#define T<br>#ifdef T<br>int main()<br>{<br>    Pareto c;<br> <br>    cout &lt;&lt; c.optima( vector &lt;string&gt; a );<br>    cout &lt;&lt; endl;<br>}<br>#endif<br> <br>////////////////////////////////////////////////////////////////////////<br> <br> <br>vector&lt;string&gt; split( const char* s, string chars, bool empty_ok )<br>{<br>    vector&lt;string&gt; ret;<br>    int len=strlen(s);<br> <br>    for( int i=0; i&lt;len; ) {<br>        string z="";<br>        while( s[i] &amp;&amp; chars.find(s[i])==string::npos ) {<br>            z += s[i];<br>            i++;<br>        }<br>        if( empty_ok || z.length() ) ret.push_back(z);<br>        if( s[i] ) i++;<br>    }<br> <br>    return ret;<br>}<br> <br>vector&lt;int&gt; vstovi( const vector&lt;string&gt;&amp; vs ) {<br>    vector&lt;int&gt; ret;<br>    for( int i=0; i&lt;vs.size(); i++ ) {<br>        ret.push_back( atoi(vs[i].c_str()) );<br>    }<br>    return ret;<br>}<br> <br>vector&lt;int&gt; xvi( const char* s ) {<br>    return vstovi( split(s, ",") );<br>}<br> <br>vector&lt;string&gt; xvs( const char* s ) {<br>    return split(s, ",");<br>}<br> <br>ostream&amp; operator&lt;&lt;( ostream&amp; os, const vector&lt;int&gt;&amp; vi ) {<br>    os &lt;&lt; '{';<br>    for( int i=0; i &lt; vi.size(); i++ ) {<br>        if( i ) os &lt;&lt; ',';<br>        os &lt;&lt; vi[i];<br>    }<br>    os &lt;&lt; '}';<br>    return os;<br>}<br> <br>ostream&amp; operator&lt;&lt;( ostream&amp; os, const vector&lt;string&gt;&amp; vs ) {<br>    os &lt;&lt; '{';<br>    for( int i=0; i &lt; vs.size(); i++ ) {<br>        if( i ) os &lt;&lt; ',';<br>        os &lt;&lt; vs[i];<br>    }<br>    os &lt;&lt; '}';<br>    return os;<br>}<br></td>