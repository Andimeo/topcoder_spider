<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class WidgetRepairs {<br>  public int days(int[] arrivals, int numPerDay) {<br>    int r = 0;<br>        int all = 0;<br>        for (int i = 0; i &lt; arrivals.length; i++) {<br>            all += arrivals[i];<br>            if(all&gt;0)<br>                r++;<br>            all -= numPerDay;<br>            if(all&lt;0)<br>                all=0;<br>        }<br>        while(all&gt;0){<br>            r++;<br>            all-=numPerDay;<br>        }<br>        return r;<br>  }<br> <br> <br> <br> <br> <br> <br> <br>////////////////////////////////////////////////////////////////////<br>    public final static void main(String[] args)<br>  {<br>    try {<br>      validateExample("1", new WidgetRepairs().days(new int[] { 10, 0, 0, 4, 20 },8), 6, "days(new int[] { 10, 0, 0, 4, 20 },8)");<br>      validateExample("2", new WidgetRepairs().days(new int[] { 0, 0, 0 },10), 0, "days(new int[] { 0, 0, 0 },10)");<br>      validateExample("3", new WidgetRepairs().days(new int[] { 100, 100 },10), 20, "days(new int[] { 100, 100 },10)");<br>      validateExample("4", new WidgetRepairs().days(new int[] { 27, 0, 0, 0, 0, 9 },9), 4, "days(new int[] { 27, 0, 0, 0, 0, 9 },9)");<br>      validateExample("5", new WidgetRepairs().days(new int[] { 6, 5, 4, 3, 2, 1, 0, 0, 1, 2, 3, 4, 5, 6 },3), 15, "days(new int[] { 6, 5, 4, 3, 2, 1, 0, 0, 1, 2, 3, 4, 5, 6 },3)");<br>    } catch (Exception e) {<br>      System.out.println(e);<br>      e.printStackTrace(System.out);<br>    }<br>  }<br> <br>  private static void validateExample(String exampleNum, int returned, int expected, String methodInvocation) {<br>    print(exampleNum);<br>    print("  ");<br>    if (!eq(returned,expected)) {<br>      print("FAIL");<br>    } else {<br>      print("SUCCESS");<br>    }<br>    print(" ");  <br>    print(methodInvocation);<br>    print("\tGot:[");<br>    print(returned);<br>    print("]\t");<br>    print("Expected:[");<br>    print(expected);<br>    print("]");<br>    print("\n");<br>  }<br> <br>  public static void print(boolean a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(long a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(int a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(char a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(String a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(int[] a) {<br>    if (a==null) {System.out.print("null"); return;} <br>    for (int i=0; i&lt;a.length; i++) System.out.print(a[i]+(i&lt;a.length-1?",":"")); <br>  }<br> <br>  public static void print(int[][] a) {<br>    if (a==null) {System.out.print("null"); return;} <br>    for (int i=0; i&lt;a.length; i++) { print(a[i]); print("\n"); }<br>  }<br> <br>  public static void print(String[] a) {<br>    if (a==null) {System.out.print("null"); return;} <br>    for (int i=0; i&lt;a.length; i++) System.out.print(a[i]+(i&lt;a.length-1?",":"")); <br>  }<br> <br>  public static boolean eq(boolean a, boolean b) {<br>    return a==b;<br>  }<br> <br>  public static boolean eq(long a, long b) {<br>    return a==b;<br>  }<br> <br>  public static boolean eq(int a, int b) {<br>    return a==b;<br>  }<br> <br>  public static boolean eq(char a, char b) {<br>    return a==b;<br>  }<br> <br>  public static boolean eq(String a, String b) {<br>    return a.equals(b);<br>  }<br> <br>  public static boolean eq(int[] a, int[] b) { return Arrays.equals(a,b); }<br>  public static boolean eq(String[] a, String[] b) { return Arrays.equals(a,b); }<br> <br>}<br> <br>// Powered by CodeProcessor<br></td>