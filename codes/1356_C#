<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br> <br>public class Intersect<br>{<br>  class rect<br>  {<br>    public rect()<br>    {<br>      left=0;<br>      top=0;<br>      right=0;<br>      bottom=0;<br>    }<br>    public rect(int xx0,int yy0,int xx1,int yy1)<br>    {<br>      left=xx0;<br>      top=yy0;<br>      right=xx1;<br>      bottom=yy1;<br>      check();<br>    }<br> <br>    public void check()<br>    {<br>      int t;<br>      if (left&gt;right) { t = left; left = right; right = t; }<br>      if (top&gt;bottom) { t = top; top = bottom; bottom = t; }<br>    }<br>    <br>    public int left;<br>    public int top;<br>    public int right;<br>    public int bottom;<br> <br>    public rect inters(rect r2)<br>    {<br>      if(bottom &lt; r2.top)          return new rect();<br>      if(top &gt; r2.bottom)          return new rect();<br> <br>      if(right &lt; r2.left)          return new rect();<br>      if(left &gt; r2.right)          return new rect();<br> <br>      int bottom2 = (bottom &gt; r2.bottom) ?r2.bottom:bottom;<br>      int top2    = (top &lt; r2.top)?r2.top:top;<br>      int right2  = (right &gt; r2.right)?r2.right:right;<br>      int left2   = (left &lt; r2.left)?r2.left:left;<br> <br>      return new rect(left2,top2,right2,bottom2);<br>    }<br> <br>    public int field()<br>    {<br>      return (right-left)*(bottom-top);<br>    }<br>  }<br> <br>  public int area(int[] x, int[] y)<br>  {<br>    rect all = new rect(x[0],y[0],x[1],y[1]);<br>    for (int i=0;i&lt;x.Length;i+=2)<br>    {<br>      all = all.inters(new rect(x[i],y[i],x[i+1],y[i+1]));<br>    }<br>    return all.field();<br>  }<br>  <br>}<br></td>