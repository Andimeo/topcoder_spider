<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;sstream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>using namespace std;<br>typedef long long ll;<br>typedef vector&lt;int&gt; vi; typedef vector&lt;vi&gt; vvi;<br>typedef vector&lt;string&gt; vs; typedef vector&lt;vs&gt; vvs;<br>typedef istringstream iss; typedef ostringstream oss;<br>#define pq priority_queue<br>#define let(a,b) typeof(b) a(b)<br>#define all(a) a.begin(),a.end()<br>#define forall(a,b) for (let(a,b.begin());a!=b.end();a++)<br>#define forrall(a,b) for (let(a,b.rbegin());a!=b.rend();a++)<br>#define contains(a,b) (find(all(a),b)!=a.end())<br>template&lt;typename T&gt; string str(const T &amp;t){oss s;s&lt;&lt;t;return s.str();}<br>template&lt;typename T&gt; ll Int(const T &amp;t){stringstream s;s&lt;&lt;t;ll r;s&gt;&gt;r;return r;}<br>template&lt;typename T&gt; double Double(const T &amp;t){stringstream s;s&lt;&lt;t;double r;s&gt;&gt;r;return r;}<br><br>class FryingHamburgers{<br>public:<br>int howLong(int panSize, int hamburgers)<br>{<br>int ans=0;<br>if (hamburgers) ans=10;<br>ans&gt;?=(hamburgers*2+panSize-1)/panSize*5;<br>return ans;<br>}<br>};<br><br><br><br>// Powered by FileEdit<br></td>