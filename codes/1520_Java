<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br>public class Dragons {<br>  int[][] m = new int[][] {{0, 0, 1, 1, 1, 1},<br>                           {0, 0, 1, 1, 1, 1},<br>                           {1, 1, 0, 0, 1, 1},<br>                           {1, 1, 0, 0, 1, 1},<br>                           {1, 1, 1, 1, 0, 0},<br>                           {1, 1, 1, 1, 0, 0}};<br>  public String snaug(int[] f, int r) {<br>    BigInteger d = BigInteger.ONE;<br>    BigInteger four = BigInteger.valueOf(4);<br>    BigInteger[] n = new BigInteger[6];<br>    for (int i = 0; i &lt; 6; i++) n[i] = BigInteger.valueOf(f[i]);<br>    while (r &gt; 0) {<br>      d = d.multiply(four);<br>      BigInteger[] n2 = new BigInteger[6];<br>      for (int i = 0; i &lt; 6; i++) {<br>        n2[i] = BigInteger.ZERO;<br>        for (int j = 0; j &lt; 6; j++)<br>          if (m[i][j] != 0) n2[i] = n2[i].add(n[j]);<br>      }<br>      n = n2;<br>      r--;<br>    }<br>    BigInteger g = n[2].gcd(d);<br>    n[2] = n[2].divide(g);<br>    d = d.divide(g);<br>    if (d.equals(BigInteger.ONE)) return n[2].toString();<br>    else return n[2] + "/" + d;<br>  }<br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>