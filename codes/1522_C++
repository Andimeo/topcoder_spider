<td class="problemText" colspan="8" valign="middle" align="left">
            using namespace std;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;string.h&gt;<br> <br>struct planet {<br>    double x, y, z;<br>    double vx, vy, vz;<br>    double m;<br>};<br> <br>const int MAXN = 8;<br>const double G = 6.673E-11;<br> <br>class Planets {<br>public:<br>    void format( char buf[], double x ) {<br>  char buf2[256];<br>  if (fabs( x ) &lt;= 0.5) {<br>      sprintf( buf2, "%.3fE0", x );<br>  } else {<br>      sprintf( buf2, "%.3E", x );<br>      char *p = strchr( buf2, 'E' );<br>      int exp = atoi( p+1 );<br>      sprintf( p+1, "%d", exp );<br>  }<br>  if (!strcmp( buf2, "-0.000E0" )) {<br>      strcpy( buf2, "0.000E0" );<br>  }<br>  strcpy( buf, buf2 );<br>    }<br> <br>    vector &lt;string&gt; locations(vector &lt;string&gt; a, int b) {<br>  int np = a.size();<br>  planet p[MAXN];<br>  for (int i = 0; i &lt; np; i++) {<br>      sscanf( a[i].c_str(), "%lf %lf %lf %lf %lf %lf %lf",<br>        &amp;p[i].x, &amp;p[i].y, &amp;p[i].z,<br>        &amp;p[i].vx, &amp;p[i].vy, &amp;p[i].vz, &amp;p[i].m );<br>  }<br>  for (int t = 0; t &lt; b; t++) {<br>      for (int i = 0; i &lt; np; i++) {<br>    double dvx = 0, dvy = 0, dvz = 0;<br>    for (int j = 0; j &lt; np; j++) <br>        if (j != i) {<br>      double r = sqrt( (p[i].x - p[j].x) * (p[i].x - p[j].x) +<br>           (p[i].y - p[j].y) * (p[i].y - p[j].y) + <br>           (p[i].z - p[j].z) * (p[i].z - p[j].z) );<br>      double k = G * p[j].m * 3600 / (r * r * r);<br>      dvx += k * (p[j].x - p[i].x);<br>      dvy += k * (p[j].y - p[i].y);<br>      dvz += k * (p[j].z - p[i].z);<br>        }<br>    p[i].vx += dvx;<br>    p[i].vy += dvy;<br>    p[i].vz += dvz;<br>      }<br>      for (int i = 0; i &lt; np; i++) {<br>    p[i].x += p[i].vx * 3600;<br>    p[i].y += p[i].vy * 3600;<br>    p[i].z += p[i].vz * 3600;<br>      }<br>  }<br>  vector&lt;string&gt; result;<br>  for (int i = 0; i &lt; np; i++) {<br>      char buf[256];<br>      char bufq[3][256];<br>      format( bufq[0], p[i].x );<br>      format( bufq[1], p[i].y );<br>      format( bufq[2], p[i].z );<br>      sprintf( buf, "%s %s %s", bufq[0], bufq[1], bufq[2] );<br>      string s = buf;<br>      result.push_back( s );<br>  }<br>  return result;<br>    }<br>};<br> <br> <br>// Powered by FileEdit<br></td>