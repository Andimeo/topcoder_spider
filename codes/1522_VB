<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System.Math<br>Imports System<br>Imports System.Collections<br> <br>Public Class Planets<br> <br>    Private Structure Vector3<br>        Dim x As Double<br>        Dim y As Double<br>        Dim z As Double<br>        Public Sub Add(ByVal v As Vector3)<br>            x += v.x<br>            y += v.y<br>            z += v.z<br>        End Sub<br>        Public Sub Scale(ByVal s As Double)<br>            x *= s<br>            y *= s<br>            z *= s<br>        End Sub<br>    End Structure<br> <br>    Private Function subtract(ByVal v1 As Vector3, ByVal v2 As Vector3) As Vector3<br>        Dim v As Vector3<br>        v.x = v1.x - v2.x<br>        v.y = v1.y - v2.y<br>        v.z = v1.z - v2.z<br>        Return v<br>    End Function<br> <br>    Private Function dist3(ByVal v1 As Vector3, ByVal v2 As Vector3) As Double<br>        Return ((v1.x - v2.x) * (v1.x - v2.x) + (v1.y - v2.y) * (v1.y - v2.y) + (v1.z - v2.z) * (v1.z - v2.z)) ^ 1.5<br>    End Function<br> <br>    Private Structure Planet<br>        Dim p As Vector3<br>        Dim v As Vector3<br>        Dim m As Double<br>        Public Sub New(ByVal desc As String)<br>            Dim s() As String = desc.Split(" "c)<br>            p.x = s(0)<br>            p.y = s(1)<br>            p.z = s(2)<br>            v.x = s(3)<br>            v.y = s(4)<br>            v.z = s(5)<br>            m = s(6)<br>        End Sub<br>    End Structure<br> <br>    Private Const t As Double = 3600<br>    Private Const G As Double = 6.673 * (10 ^ -11)<br> <br>    Public Function locations(ByVal planets As String(), ByVal time As Integer) As String()<br>        Dim P(planets.Length - 1) As Planet<br>        Dim a, b As Integer<br>        For a = 0 To planets.Length - 1<br>            P(a) = New Planet(planets(a))<br>        Next<br>        Dim q As Integer<br>        For q = 1 To time<br>            For a = 0 To planets.Length - 1<br>                Dim sum As New Vector3<br>                For b = 0 To planets.Length - 1<br>                    If a &lt;&gt; b Then<br>                        Dim v As Vector3 = subtract(P(b).p, P(a).p)<br>                        v.Scale(G * P(a).m * P(b).m / dist3(P(a).p, P(b).p))<br>                        sum.Add(v)<br>                    End If<br>                Next<br>                sum.Scale(t / P(a).m)<br>                P(a).v.Add(sum)<br>            Next<br>            For a = 0 To planets.Length - 1<br>                Dim v As Vector3 = P(a).v<br>                v.Scale(t)<br>                P(a).p.Add(v)<br>            Next<br>        Next<br>        'out<br>        Dim ret(planets.Length - 1) As String<br>        For a = 0 To planets.Length - 1<br>            ret(a) = fmt(P(a).p.x) &amp; " " &amp; fmt(P(a).p.y) &amp; " " &amp; fmt(P(a).p.z)<br>        Next<br>        Return ret<br>    End Function<br> <br>    Private Function fmt(ByVal d As Double) As String<br>        Dim s As String = d.ToString("0.000E0")<br>        Dim st() As String = s.Split("E"c)<br>        Dim n As Integer = st(1)<br>        If n &lt; 0 Then<br>            s = d.ToString("0.000") &amp; "E0"<br>        End If<br>        Dim pos As Integer = s.IndexOf("E"c)<br>        Dim e As String = s.Substring(pos)<br>        Dim v As Double = d / ("1" &amp; e)<br>        s = Math.Round(v, 3).ToString("0.000") &amp; e<br>        If s = "-0.000E0" Then s = "0.000E0"<br>        Return s<br>    End Function<br>End Class<br></td>