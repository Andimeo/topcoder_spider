<td class="problemText" colspan="8" valign="middle" align="left">
            #line 2 "Marketing.cpp"<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;numeric&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>using namespace std;<br><br>#ifdef _WIN32<br>typedef __int64 int64;<br>#else<br>typedef long long int64;<br>#endif<br><br>class Marketing <br>{<br>  public:<br>    bool adj[50][50];<br>    //0 no color<br>    //1 red<br>    //2 blue<br>    int color[50];<br>    int n;<br>    bool error;<br>  int64 howMany(vector &lt;string&gt; compete) <br>  {<br>    error = false;<br>    for(int i=0;i&lt;50;i++)<br>      for(int j=0;j&lt;50;j++)<br>      {<br>        adj[i][j] = false;<br>      }<br>    <br>    for(int i=0;i&lt;compete.size();i++)<br>    {<br>      istringstream in(compete[i]);<br>      int n;<br>      while(in&gt;&gt;n)<br>      {<br>        adj[i][n] = adj[n][i] = true;<br>      }<br>      color[i] = 0;<br>    }<br>    int64 ways = 1;<br><br>    for(int i=0;i&lt;compete.size();i++)<br>    {<br>      if(color[i] == 0)<br>      {<br>        colorit(i,1);<br>        if(error) return -1;<br>        ways *= 2;<br>      }<br>    }<br>    return ways;<br>  }<br>  void colorit(int i,int c)<br>  {<br>    if(color[i] != 0)<br>    {<br>      if(color[i] != c)<br>        error = true;<br>      return;<br>    }<br>    else<br>    {<br>      color[i] = c;<br>      int other=0;<br>      if(c == 1)<br>        other = 2;<br>      else <br>        other = 1;<br>      for(int j=0;j&lt;50;j++)<br>      {<br>        if(adj[i][j])<br>        {<br>          colorit(j,other);<br>        }  <br>      }<br>    }<br>  }<br>};<br><br><br><br>// Powered by FileEdit<br></td>