<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class Marketing<br>{<br>boolean adj[][] = new boolean[64][64];<br>int color[] = new int[64];<br>int n;<br>boolean oddcycle = false;<br> <br>public long howMany(String[] compete)<br>{<br>   n = compete.length;<br>   for (int i = 0; i &lt; compete.length; i++) {<br>      StringTokenizer st = new StringTokenizer(compete[i], " ");<br>      while (st.hasMoreTokens()) {<br>         int j = Integer.parseInt(st.nextToken());<br>         adj[i][j] = adj[j][i] = true;<br>      }<br>   }<br>   for (int i = 0; i &lt; n; i++) color[i] = 0;<br> <br>   int ncomp = 0;<br> <br>   // count components<br>   for (int i = 0; i &lt; n; i++)<br>      if (color[i] == 0) {<br>         ncomp++;<br>         dfs(i, 1);<br>      }<br>   if (oddcycle)<br>      return -1;<br> <br>   long res = 1;<br>   while (ncomp-- &gt; 0) res *= 2;<br>   return res;<br>}<br> <br>void dfs(int u, int c)<br>{<br>   if (color[u] != 0) {<br>      if (color[u] != c) oddcycle = true;<br>      return;<br>   }<br>   <br>   color[u] = c;<br>   for (int v = 0; v &lt; n; v++)<br>      if (adj[u][v])<br>         dfs(v, 3 - c);<br>}<br>}<br></td>