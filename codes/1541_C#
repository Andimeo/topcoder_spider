<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Text.RegularExpressions;<br>using System.Collections;<br><br>public class Masterbrain {<br>    static string score( string g, string p) {<br>        int b = 0;<br>        int w = 0;<br>        bool[] ug = new bool[4];<br>        bool[] up = new bool[4];<br>        for ( int i = 0; i != 4; i ++) {<br>            if ( g[i] == p[i]) {<br>                b++;<br>                ug[i]=true;<br>                up[i]=true;<br>            }<br>        }<br>        for ( int i = 0; i != 4; i++) {<br>            for ( int j = 0; j != 4; j++) {<br>                if (!ug[i] &amp;&amp; !up[j] &amp;&amp; g[i]==p[j]) {<br>                    ug[i] = true;<br>                    up[j] = true;<br>                    w++;<br>                }<br>            }<br>        }<br>        return ""+b+"b "+w+"w";<br>    }<br>    bool check(string[] gg, string[] rr, string p) {<br>        int lies = 0;<br>        for ( int i = 0; i != gg.Length; i++) {<br>            string res = score(gg[i], p);<br>            if ( res != rr[i]) {<br>                if ( lies == 1) {<br>                    return false;<br>                } else {<br>                    lies = 1;<br>                }<br>            }<br>        }<br>        return lies == 1;<br>    }<br>    public int possibleSecrets(string[] gg, string[] rr) {<br>        int res = 0;<br>        char[] p = new char[4];<br>        for ( p[0] = '1'; p[0] &lt;= '7'; p[0]++)<br>            for ( p[1] = '1'; p[1] &lt;= '7'; p[1]++)<br>                for ( p[2] = '1'; p[2] &lt;= '7'; p[2]++)<br>                    for ( p[3] = '1'; p[3] &lt;= '7'; p[3]++) {<br>                        if ( check(gg,rr,new string(p))) {<br>                            res++;<br>                        }<br>                    }<br>        return res;<br>    }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>