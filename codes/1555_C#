<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>public class CircleBugs {<br>  private int val(string s) {<br>    int ret = 0;<br>    for (int i = 0; i &lt; s.Length; i++) {<br>      ret *= 2;<br>      if (s[i] == 'R') {<br>        ret++;<br>      }<br>    }<br>    return(ret);<br>  }<br>  private int best(string s) {<br>    int ret = int.MaxValue;<br>    <br>    for (int i = 0; i &lt; s.Length; i++) {<br>      int v = val(s.Substring(i) + s.Substring(0,i));<br>      if (v &lt; ret) {<br>        ret = v;<br>      }<br>    }<br>    return(ret);<br>  }<br>  public int cycleLength(string formation) {<br>    int ret = 0;<br>    <br>    Hashtable ht = new Hashtable();<br>    ht.Add(best(formation), 1);<br>    string t = formation;<br>    <br>    for (int x = 2; ; x++) {<br>      string t1 = "";<br>      for (int i = 0; i &lt; t.Length-1; i++) {<br>        if (t[i] == t[i+1]) {<br>          t1 += "R";<br>        } else {<br>          t1 += "G";<br>        }<br>      }<br>      if (t[0] == t[t.Length-1]) {<br>        t1 += "R";<br>      } else {<br>        t1 += "G";<br>      }<br>      int v = best(t1);<br>      if (ht.Contains(v)) {<br>        ret = x - (int)(ht[v]);<br>        break;<br>      }<br>      ht.Add(v, x);<br>      t = t1;<br>    }<br>    <br>    return (ret);<br>  }<br>}<br> <br>// Powered by PopsEdit<br></td>