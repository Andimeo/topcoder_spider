<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;  typedef vector&lt;vector&lt;int&gt; &gt; VVI;<br>typedef vector&lt;string&gt; VS;  typedef vector&lt;vector&lt;string&gt; &gt; VVS;<br>typedef signed long long i64;  typedef unsigned long long u64;<br><br>string mn(string s) {<br>  string ret = s;<br>  for( int flip = 0; flip &lt; 2; flip++ ) {<br>    for( int i = 0; i &lt; s.size(); i++ ) {<br>      if( s &lt; ret ) ret = s;<br>      s = s.substr(1) + s[0];<br>    }<br>    reverse(s.begin(), s.end());<br>  }<br>  return ret;<br>}<br><br>map&lt;string, int&gt; memo;<br><br>class CircleBugs {<br>public:<br>int cycleLength(string s) {<br>  int i, j, k, x, y, z, n;<br>  int ret;<br><br>  x = 0;<br>  for(;;) {<br>    if( memo.count(s) ) return x-memo[s];<br>    memo[s] = x;<br>    string t;<br>    s += s[0];<br>    for( i = 0; i &lt; s.size()-1; i++ )<br>      t += (s[i]==s[i+1])?'R':'G';<br>    s = mn(t);<br>    x++;<br>  }<br>}<br>};<br><br><br>// Powered by FileEdit<br></td>