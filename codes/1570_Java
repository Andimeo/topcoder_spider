<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class DesertWind {<br>  StringTokenizer st;<br> <br>  int[][] times;<br> <br>  int starti;<br>  int startj;<br> <br>  //int[][][] directs = new int[][][]{{{-1, 0, +1}<br> <br>  public int daysNeeded(String[] theMap) {<br>    times = new int[theMap.length + 2][theMap[0].length() + 2];<br>    for(int i = 0; i &lt; times.length; i++)<br>      for(int j = 0; j &lt; times[0].length; j++) {<br>  times[i][j] = 10000;<br>      }<br>    for(int i = 0; i &lt; theMap.length; i++)<br>      for(int j = 0; j &lt; theMap[0].length(); j++) {<br>  if(theMap[i].charAt(j) == '*')<br>    times[i+1][j+1] = 0;<br>  if(theMap[i].charAt(j) == '@') {<br>    starti = i+1; startj = j+1;<br>  }<br>      }<br> <br>    boolean done = false;<br>    while(!done) {<br>      done = true;<br>      for(int i = 1; i &lt; times.length-1; i++)<br>  for(int j = 1; j &lt; times[0].length-1; j++) {<br>    if(theMap[i-1].charAt(j-1) == 'X')<br>      continue;<br>    int best = 10000;<br>    int second = 10000;<br>    for(int di = -1; di &lt;= 1; di++)<br>      for(int dj = -1; dj &lt;= 1; dj++) {<br>        if(times[i+di][j+dj] &lt; best) {<br>    second = best;<br>    best = times[i+di][j+dj];<br>        } else if(times[i+di][j+dj] &lt; second) {<br>    second = times[i+di][j+dj];<br>        }<br>      }<br>    int trueBest = Math.min(best+3, second+1);<br>    if(trueBest &lt; times[i][j]) {<br>      times[i][j] = trueBest;<br>      done = false;<br>    }<br>  }<br>    }<br> <br>    if(times[starti][startj] &gt;= 10000) <br>      return -1;<br>    return times[starti][startj];<br>    <br>  }<br>}<br> <br> <br>// Powered by FileEdit<br></td>