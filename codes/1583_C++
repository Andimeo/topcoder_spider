<td class="problemText" colspan="8" valign="middle" align="left">
            #line 4 "Robot.cpp"<br>#include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;sstream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;map&gt;<br><br>using namespace std;<br><br>// Template start<br><br>template &lt;class T&gt;<br>vector&lt;T&gt; split(string s, string tok, bool flag=false)<br>{<br>  s+=tok;<br>  int cur=0,i;<br>  vector&lt;T&gt; ans;<br>  while ((i=s.find(tok,cur))!=s.npos) {<br>    stringstream ss;<br>    ss &lt;&lt; string(&amp;s[cur],&amp;s[i]);<br>    T tmp;<br>    if ((ss &gt;&gt; tmp) || flag)<br>      ans.push_back(tmp);<br>    cur=i+tok.size();<br>  }<br>  return ans;<br>}<br><br>template &lt;class T&gt;<br>ostream&amp; operator&lt;&lt;(ostream &amp;os, vector&lt;T&gt; v)<br>{<br>  os &lt;&lt; "{";<br>  for(int i=0;i&lt;v.size();i++) {<br>    if (i) os &lt;&lt; ",";<br>    os &lt;&lt; v[i];<br>  }<br>  os &lt;&lt; "}";<br>  return os;<br>}<br><br>// Template end<br><br>double prob[50][50][1010];<br><br>const int dx[8]={0,0,1,-1,1,1,-1,-1};<br>const int dy[8]={1,-1,0,0,1,-1,-1,1};<br><br>int xsize,ysize;<br><br>bool outside(int x, int y)<br>{<br>  return x&lt;0 || y&lt;0 || x&gt;=xsize || y&gt;=ysize;<br>}<br><br>class Robot {<br>public:<br>  int getProb(vector &lt;string&gt; floor, int ex, int ey, int time) {<br>    memset(prob,0,sizeof(prob));<br>    xsize=floor[0].size();<br>    ysize=floor.size();<br>    int sx=0,sy=0;<br>    for(int y=0;y&lt;ysize;y++) {<br>      for(int x=0;x&lt;xsize;x++)<br>  if (floor[y][x]=='R') {<br>    floor[y][x]='.';<br>    sx=x; sy=y;<br>  }<br>    }<br>    prob[sy][sx][0]=1;<br>    for(int i=1;i&lt;=time;i++) {<br>      for(int y=0;y&lt;ysize;y++)<br>  for(int x=0;x&lt;xsize;x++) {<br>    if (floor[y][x]=='X') continue;<br>    for(int j=0;j&lt;4;j++) {<br>      int ox=x+dx[j],oy=y+dy[j];<br>      if (outside(ox,oy) || floor[oy][ox]=='X')<br>        prob[y][x][i]+=prob[y][x][i-1]/8;<br>      else<br>        prob[y][x][i]+=prob[oy][ox][i-1]/8;<br>    }<br>    for(int j=4;j&lt;8;j++) {<br>      int ox=x+dx[j],oy=y+dy[j];<br>      if (outside(ox,oy) || floor[oy][ox]=='X' || floor[oy][x]=='X' || floor[y][ox]=='X')<br>    prob[y][x][i]+=prob[y][x][i-1]/8;<br>      else<br>        prob[y][x][i]+=prob[oy][ox][i-1]/8;<br>    }<br>  }<br>    }<br>    return int(prob[ey][ex][time]*1000+1e-8);<br>  }<br>};<br><br><br>// Powered by FileEdit<br></td>