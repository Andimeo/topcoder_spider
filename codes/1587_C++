<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;  typedef vector&lt;vector&lt;int&gt; &gt; VVI;<br>typedef vector&lt;string&gt; VS;  typedef vector&lt;vector&lt;string&gt; &gt; VVS;<br>typedef signed long long i64;  typedef unsigned long long u64;<br><br>long double doit(int a, const VI &amp;b, const VI &amp;c, long double x) {<br>  long double cur = 0;<br>  int j;<br>  for( j = 0; j &lt; b.size()-1; j++ ) {<br>    if( x &lt;= b[j] &amp;&amp; x+a &gt;= b[j+1] ) {<br>      cur += (c[j]+c[j+1])*(b[j+1]-b[j])/2.0;<br>    } else if( x &lt;= b[j] &amp;&amp; x+a &gt;= b[j] ) {<br>      cur += (c[j]+c[j]+(x+a-b[j])*(long double)(c[j+1]-c[j])/(b[j+1]-b[j]))<br>          *(x+a-b[j])/2.0;<br>    } else if( x &lt;= b[j+1] &amp;&amp; x+a &gt;= b[j+1] ) {<br>      cur += (c[j+1]+(b[j+1]-x)*(long double)(c[j]-c[j+1])/(b[j+1]-b[j])+c[j+1])<br>          *(b[j+1]-x)/2.0;<br>    } else if( x &gt;= b[j] &amp;&amp; x+a &lt;= b[j+1] ) {<br>      cur += (c[j+1]+(b[j+1]-x-a)*(long double)(c[j]-c[j+1])/(b[j+1]-b[j])+<br>          c[j]+(x-b[j])*(long double)(c[j+1]-c[j])/(b[j+1]-b[j]))<br>          *a/2.0;<br>    }<br>  }<br>  return cur;<br>}<br><br>class GForce {<br>public:<br>long double avgAccel(int a, vector &lt;int&gt; c, vector &lt;int&gt; b) {<br>  int i, j, k, z, n;<br>  long double ret = 0, cur, hi, lo, x, y;<br>  VI pos;<br><br>  for( i = 0; i &lt; b.size(); i++ ) if( b[i]+a &lt;= b.back() ) pos.push_back(b[i]);<br>  for( i = 0; i &lt; b.size(); i++ ) if( b[i]-a &gt;= b[0] ) pos.push_back(b[i]-a);<br>  sort(pos.begin(), pos.end());<br>  for( i = 0; i &lt; pos.size()-1; i++ ) {<br>    hi = pos[i+1]; lo = pos[i];<br>    for( j = 0; j &lt;= 1000; j++ ) {<br>      x = (hi+2*lo)/3;<br>      y = (2*hi+lo)/3;<br>      if( doit(a, b, c, x) &gt;= doit(a, b, c, y) ) hi = y; else lo = x;<br>    }<br>    ret &gt;?= doit(a, b, c, (hi+lo)/2)/a;<br>  }<br>  return ret;<br>}<br>};<br><br><br>// Powered by FileEdit<br></td>