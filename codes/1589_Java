<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class RectangularGrid {<br>  public long countRectangles(int width, int height) {<br>    long sum = 0;<br>    for ( int i = 1; i &lt;= width; i++ ) {<br>      for ( int j = 1; j &lt;= height; j++ ) {<br>        if ( i != j )<br>        sum += ( width - i + 1 ) * ( height - j + 1 );<br>      }<br>    }<br>    return sum;<br>  }<br>    public final static void main(String[] args)<br>  {<br>    try {<br>      validateExample("1", new RectangularGrid().countRectangles(3,3), 22L, "countRectangles(3,3)");<br>      validateExample("2", new RectangularGrid().countRectangles(5,2), 31L, "countRectangles(5,2)");<br>      validateExample("3", new RectangularGrid().countRectangles(10,10), 2640L, "countRectangles(10,10)");<br>      validateExample("4", new RectangularGrid().countRectangles(1,1), 0L, "countRectangles(1,1)");<br>      validateExample("5", new RectangularGrid().countRectangles(592,964), 81508708664L, "countRectangles(592,964)");<br>    } catch (Exception e) {<br>      System.out.println(e);<br>      e.printStackTrace(System.out);<br>    }<br>  }<br> <br>  private static void validateExample(String exampleNum, long returned, long expected, String methodInvocation) {<br>    print(exampleNum);<br>    print("  ");<br>    if (!eq(returned,expected)) {<br>      print("FAIL");<br>    } else {<br>      print("SUCCESS");<br>    }<br>    print(" ");  <br>    print(methodInvocation);<br>    print("\tGot:[");<br>    print(returned);<br>    print("]\t");<br>    print("Expected:[");<br>    print(expected);<br>    print("]");<br>    print("\n");<br>  }<br> <br>  public static void print(boolean a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(long a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(int a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(char a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(String a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(int[] a) {<br>    if (a==null) {System.out.print("null"); return;} <br>    for (int i=0; i&lt;a.length; i++) System.out.print(a[i]+(i&lt;a.length-1?",":"")); <br>  }<br> <br>  public static void print(int[][] a) {<br>    if (a==null) {System.out.print("null"); return;} <br>    for (int i=0; i&lt;a.length; i++) { print(a[i]); print("\n"); }<br>  }<br> <br>  public static void print(String[] a) {<br>    if (a==null) {System.out.print("null"); return;} <br>    for (int i=0; i&lt;a.length; i++) System.out.print(a[i]+(i&lt;a.length-1?",":"")); <br>  }<br> <br>  public static boolean eq(boolean a, boolean b) {<br>    return a==b;<br>  }<br> <br>  public static boolean eq(long a, long b) {<br>    return a==b;<br>  }<br> <br>  public static boolean eq(int a, int b) {<br>    return a==b;<br>  }<br> <br>  public static boolean eq(char a, char b) {<br>    return a==b;<br>  }<br> <br>  public static boolean eq(String a, String b) {<br>    return a.equals(b);<br>  }<br> <br>  public static boolean eq(int[] a, int[] b) { return Arrays.equals(a,b); }<br>  public static boolean eq(String[] a, String[] b) { return Arrays.equals(a,b); }<br> <br>}<br>// Powered by CodeProcessor<br></td>