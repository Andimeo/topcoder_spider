<td class="problemText" colspan="8" valign="middle" align="left">
            #line 2 "ChessMetric.cpp"<br><br>#include &lt;iostream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;map&gt;<br>#include &lt;cmath&gt;<br><br>using namespace std;<br><br>long long ways[100][100][55];<br><br>const int dx[16]={1,1,1,0,-1,-1,-1,0, 2,1,-1,-2,-2,-1,1,2};<br>const int dy[16]={1,0,-1,-1,-1,0,1,1, -1,-2,-2,-1,1,2,2,1};<br><br>class ChessMetric {<br>  public:<br>  long long howMany(int size, vector &lt;int&gt; start, vector &lt;int&gt; end, int nomoves) {<br>    int x,y,i,j;<br>    for(x=0;x&lt;100;x++) for(y=0;y&lt;100;y++) for(i=0;i&lt;55;i++) ways[y][x][i]=0;<br>    int sx=start[0],sy=start[1],ex=end[0],ey=end[1];<br>    ways[sy][sx][0]=1;<br>    for(i=1;i&lt;=nomoves;i++) {<br>      for(x=0;x&lt;size;x++)<br>        for(y=0;y&lt;size;y++) {<br>          for(j=0;j&lt;16;j++) {<br>            int nx=x+dx[j];<br>            int ny=y+dy[j];<br>            if (nx&lt;0 || ny&lt;0 || nx&gt;=size || ny&gt;=size) continue;<br>            ways[ny][nx][i]+=ways[y][x][i-1];<br>          }<br>        }<br>    }<br>    cout &lt;&lt; ways[ey][ex][nomoves] &lt;&lt; endl;<br>    return ways[ey][ex][nomoves];<br>  }<br>};<br><br><br>// Powered by FileEdit<br></td>