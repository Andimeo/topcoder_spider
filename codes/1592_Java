<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br>import java.awt.*;<br>public class ChessMetric {<br>   public long howMany(int n, int[] start, int[] end, int num) {<br>      int [] dx = new int [] {1, 0, -1, 0, 1, -1, -1, 1, -2, -2, -1, -1, 1, 1, 2, 2};<br>      int [] dy = new int [] {0, 1, 0, -1, 1, 1, -1, -1, -1, 1, -2, 2, -2, 2, -1, 1};<br>      <br>      long ways[][] = new long[n][n];<br>      ways[start[0]][start[1]] = 1;<br>      for (int i = 0; i &lt; num; i ++ ) {<br>         long tmp[][] = new long [n][n];<br>         for (int ia = 0; ia &lt; n; ia ++ ) for (int ib = 0; ib &lt; n; ib ++ )<br>            tmp[ia][ib] = ways[ia][ib];<br>         for (int ia = 0; ia &lt; n; ia ++ ) for (int ib = 0; ib &lt; n; ib ++ )<br>            ways[ia][ib] = 0;<br>         for (int ia = 0; ia &lt; n; ia ++ ) for (int ib = 0; ib &lt; n; ib ++ )<br>            for (int dir = 0; dir &lt; dx.length; dir ++ ) {<br>               int nx = ia + dx[dir], ny = ib + dy[dir];<br>               if (nx &gt;= 0 &amp;&amp; nx &lt; n &amp;&amp; ny &gt;= 0 &amp;&amp; ny &lt; n) {<br>                  ways[nx][ny] += tmp[ia][ib];<br>               } /* end if */<br>            } /* end for */<br>      }<br>      return ways[end[0]][end[1]];<br>   } // end of method howMany<br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>