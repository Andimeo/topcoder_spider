<td class="problemText" colspan="8" valign="middle" align="left">
            public class Quilting {<br>  int map[][];<br>  int g(int y,int x) {<br>    if(y&lt;0 || x&lt;0 || x&gt;=map.length || y&gt;=map[0].length) return -2;<br>    return map[x][y]-1;<br>  }<br>public String lastPatch(int length, int width, String[] colorList) {<br>  // this can probably be done in O(1), but hey<br> <br>  int y = (width)/2;<br>  int x = (length)/2;<br>  int left[] = new int[colorList.length];<br>  map = new int[length][width];<br> <br>  int dx[] = new int[] { 0, -1, 0, 1 };<br>  int dy[] = new int[] { -1, 0, 1, 0 };<br> <br>  int dir = 3;<br>  int last;<br> <br>  while(true) {<br>    int c[] = new int[colorList.length];<br>    for(int X=3;X--&gt;0;)<br>    for(int Y=3;Y--&gt;0;) {<br>      int g = g(X+y-1,Y+x-1);<br>      if(g&gt;=0) c[g]++;<br>    }<br>    int height=-1, area=10000000;<br>    for(int i=0;i&lt;colorList.length;i++) {<br>      int s = c[i]*100000 + left[i];<br>      if(s &lt; area) {<br>        height = i;<br>        area = s;<br>      }<br>    }<br>    left[height]++;<br>    map[x][y] = 1+(last = height);<br> <br>    int nd = (dir+1)&amp;3;<br>    if(g(y+dx[nd],x+dy[nd])==-1) {<br>      dir=nd;<br>    }<br>    y += dx[dir];<br>    x += dy[dir];<br>    if(g(y,x)!=-1) break;<br>  }<br>  return colorList[last];<br>}}<br></td>