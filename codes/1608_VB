<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System.Math<br>Imports System<br>Imports System.Collections<br> <br>Public Class Quilting<br>    Public Function lastPatch(ByVal length As Integer, ByVal width As Integer, ByVal colorList As String()) As String<br>        If width = 1 Then<br>            If length = 1 Then<br>                Return colorList(0)<br>            Else<br>                If colorList.Length = 1 Then<br>                    Return colorList(0)<br>                Else<br>                    Return colorList(1)<br>                End If<br>            End If<br>        End If<br>        Dim patchColor(300, 300) As Integer<br>        Dim i, c, x, y, xx, yy As Integer<br>        For x = 0 To 299<br>            For y = 0 To 299<br>                patchColor(x, y) = -1<br>            Next<br>        Next<br>        x = 150<br>        y = 150<br>        Dim used(colorList.Length - 1) As Integer<br>        Dim dx, dy As Integer<br>        dx = 1<br>        dy = 0<br>        Dim minx, maxx, miny, maxy As Integer<br>        minx = x<br>        miny = y<br>        maxx = x<br>        maxy = y<br>        Do<br>            minx = Min(minx, x)<br>            maxx = Max(maxx, x)<br>            miny = Min(miny, y)<br>            maxy = Max(maxy, y)<br> <br>            'check color<br>            Dim neigh(colorList.Length - 1) As Integer<br>            Dim m As Integer = Integer.MaxValue<br>            Dim m2 As Integer = Integer.MaxValue<br>            c = 0<br>            For xx = x - 1 To x + 1<br>                For yy = y - 1 To y + 1<br>                    If patchColor(xx, yy) &gt; -1 Then neigh(patchColor(xx, yy)) += 1<br>                Next<br>            Next<br>            For i = 0 To colorList.Length - 1<br>                m = Min(m, neigh(i))<br>            Next<br>            For i = 0 To colorList.Length - 1<br>                If neigh(i) = m Then<br>                    m2 = Min(m2, used(i))<br>                End If<br>            Next<br>            For i = 0 To colorList.Length - 1<br>                If neigh(i) = m AndAlso used(i) = m2 Then<br>                    Exit For<br>                End If<br>            Next<br>            patchColor(x, y) = i<br>            used(i) += 1<br> <br>            'change dir<br>            Dim ndx, ndy As Integer<br>            ndx = -dy<br>            ndy = dx<br>            If patchColor(x + ndx, y + ndy) = -1 Then<br>                dx = ndx<br>                dy = ndy<br>            Else<br>                'possible end<br>                If (maxx - minx + 1 = width AndAlso maxy - miny + 1 = length) AndAlso (x = minx OrElse x = maxx) AndAlso (y = miny OrElse y = maxy) Then<br>                    Return colorList(patchColor(x, y))<br>                End If<br>            End If<br>            x += dx<br>            y += dy<br> <br>        Loop<br>    End Function<br>End Class<br></td>