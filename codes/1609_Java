<td class="problemText" colspan="8" valign="middle" align="left">
            import java.lang.*;<br>import java.util.*;<br> <br>public class TickTick<br>{<br> <br>public int count(String[] events)<br>{<br>  Hashtable  ht = new Hashtable();<br> <br>  String  s;<br>  double  times[];<br>  double  decimals[];<br>  double  offset;<br>  int  i, j, k, n, v, last, count;<br> <br>  n = events.length + 1;<br>  times = new double[n];<br>  decimals = new double[n];<br>  times[0] = 0;<br>  for (i = 1; i &lt; n; i ++)<br>    times[i] = Double.parseDouble(events[i - 1]);<br> <br>  Arrays.sort(times);<br> <br>  for (i = 0; i &lt; n; i ++)<br>  {<br>    v = (int) Math.floor(times[i]);<br>    decimals[i] = times[i] - v;<br>  }<br> <br>  count = 0;<br>  for (i = 0; i &lt; n ; i ++)<br>  {<br>    for (j = i + 1; j &lt; n; j ++)<br>    {<br>      offset = (decimals[i] + decimals[j]) / 2;<br> <br>      s = new String("");<br>      last = (int) Math.floor(times[0] - offset);<br>      for (k = 1; k &lt; n; k ++)<br>      {<br>        v = (int) Math.floor(times[k] - offset);<br>        if (v != last) s += "D";<br>        else s += "S";<br> <br>        last = v;<br>      }<br> <br>      if (!ht.contains(s))<br>      {<br>        ht.put(s, s);<br>        count ++;<br>      }<br>    }<br>  }<br> <br>  offset = (decimals[n - 1] + 1) / 2;<br> <br>  s = new String("");<br>  last = (int) Math.floor(times[0] - offset);<br>  for (k = 1; k &lt; n; k ++)<br>  {<br>    v = (int) Math.floor(times[k] - offset);<br>    if (v != last) s += "D";<br>    else s += "S";<br> <br>    last = v;<br>  }<br> <br>  if (!ht.contains(s))<br>  {<br>    ht.put(s, s);<br>    count ++;<br>  }<br> <br>  return count;<br>}<br> <br>}<br></td>