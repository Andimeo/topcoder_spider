<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>  public class ContinuedFractions<br>  {<br>    int remainder(int a, int b, int c, int fsqrta, out int outb, out int outc)<br>    {<br>      outc = (a-b*b)/c;<br>      int res = (fsqrta + b) / outc;<br>      outb = outc * res - b;<br>      return res;<br>      <br>    }<br> <br> <br>    class Found<br>    {<br>      public int b = 0;<br>      public int c = 0;<br>    }<br> <br>    public int[] squareRoot(int n)<br>    {<br>      ArrayList alreadyFound = new ArrayList();<br>      ArrayList results = new ArrayList();<br> <br> <br>      int fsqrt = 1;<br>      while(fsqrt*fsqrt &lt;= n)<br>      {<br>        fsqrt++;<br>      }<br>      fsqrt--;<br> <br>      bool firsttime = true;<br> <br>      int b = 0;<br>      int c = 1;<br>      while(true)<br>      {<br>        int b2, c2;<br>        int res = remainder(n,b,c,fsqrt,out b2,out c2);<br>        foreach(Found f in alreadyFound)<br>        {<br>          if(f.b == b2 &amp;&amp; f.c == c2)<br>          {<br>            results.Add(res);<br>            return (int[]) results.ToArray(typeof(int));<br>          }<br>        }<br> <br>        Found f2 = new Found();<br>        f2.b = b2;<br>        f2.c = c2;<br>        alreadyFound.Add(f2);<br> <br>        if(!firsttime)<br>        {<br>          results.Add(res);<br>          <br>        }<br>        firsttime = false;<br>        b = b2;<br>        c = c2;<br> <br>      }<br> <br>      <br>    }<br>}<br></td>