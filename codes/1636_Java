<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class SetComparison {<br>  Set getSet(StringTokenizer st) {<br>    Set s = new HashSet();<br>    String t = st.nextToken();<br>    while (!t.equals("}")) {<br>      if (t.equals("{")) {<br>        s.add(getSet(st));<br>      } else {<br>        if (!t.equals(",")) s.add(t);<br>      }<br>      t = st.nextToken();<br>    }<br>    return s;<br>  }<br>  public String[] relation(String _a, String _b) {<br>    StringTokenizer st = new StringTokenizer(_a, "{},", true);<br>    st.nextToken();<br>    Set a = getSet(st);<br>    st = new StringTokenizer(_b, "{},", true);<br>    st.nextToken();<br>    Set b = getSet(st);<br>    Set ret = new TreeSet();<br>    if (b.contains(a)) ret.add("MEMBER");<br>    boolean eq = a.equals(b);<br>    if (eq) ret.add("EQUIVALENT");<br>    if (b.containsAll(a)) {<br>      ret.add("SUBSET");<br>      if (!eq) ret.add("PROPER SUBSET");<br>    }<br>    if (b.size() == a.size()) ret.add("EQUIPOTENT");<br>    if (a.size() == 1 &lt;&lt; b.size()) {<br>      boolean f = true;<br>      Object[] o = b.toArray();<br>      for (int x = 0; x &lt; a.size() &amp;&amp; f; x++) {<br>        Set t = new HashSet();<br>        for (int i = 0; i &lt; b.size(); i++)<br>          if ((x &amp; 1 &lt;&lt; i) != 0) t.add(o[i]);<br>        if (!a.contains(t)) f = false;<br>      }<br>      if (f) ret.add("POWERSET");<br>    }<br>    return (String[]) ret.toArray(new String[0]);<br>  }<br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>