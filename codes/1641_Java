<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br>public class SkewTree {<br>  int[] sprobs;<br>  int[][] score;<br>  int[] sum;<br>  <br>  int best(int left, int right) {<br>    if (right==left+1) return sprobs[left];<br>    if (right&lt;=left) return 0;<br>    <br>    if (score[left][right]==0) {<br>      int min = Integer.MAX_VALUE;<br>      for (int h=left; h&lt;right; h++) {<br>        int tscore = sprobs[h] + best(left,h)+sum[h]-sum[left] + best(h+1,right) + sum[right]-sum[h+1];<br>        if (tscore&lt;min) min = tscore;<br>      }<br>      score[left][right]=min;<br>      System.out.println(""+left+" "+right+" "+score[left][right]);<br>    }<br>    <br>    return score[left][right];<br>  }<br>  <br>  public int bestScore(int[] values, int[] probs) {<br>    for (int i=0; i&lt;values.length-1; i++) {<br>      int min = i;<br>      for (int j=i; j&lt;values.length; j++) {<br>        if (values[j]&lt;values[min]) min =j;<br>      }<br>      int tmp=values[i];<br>      values[i]=values[min];<br>      values[min]=tmp;<br>      <br>      tmp=probs[i];<br>      probs[i]=probs[min];<br>      probs[min]=tmp;<br>    }<br>    sprobs = probs;<br>    <br>    sum = new int[sprobs.length+1];<br>    for (int i=1; i&lt;sum.length; i++) sum[i]=sum[i-1]+sprobs[i-1];<br>    <br>    score = new int[sprobs.length+1][sprobs.length+1];<br>    <br>    return best(0, sprobs.length);<br>  }<br>}<br> <br>// Powered by PopsEdit<br></td>