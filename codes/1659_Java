<td class="problemText" colspan="8" valign="middle" align="left">
            /*/*///*/*/ Powered by radedit!            /*/*/*/*/*/ ;<br>/*/*//*/*/  import java . util .           /*/*/*/*/*/ ;<br>/*/*//*/*/  import java . lang . reflect . /*/*/*/*/*/ ;<br>public class Lottery {<br>   boolean ddd = false ;<br>String[] s2sa(String s) {<br>  StringTokenizer t=new StringTokenizer(s.trim());<br>  String[]r=new String[t.countTokens()];<br>  int i=0;<br>  while(t.hasMoreTokens())try{<br>     r[i++]=t.nextToken();<br>  }catch(Exception e){};<br>  return r;<br>}<br>  long choose(long a, long b) {<br>    if (b == 0) {<br>      return 1 ;<br>    } else {<br>      return a * choose(a-1, b-1) / b ;<br>    }<br>  }<br>  long perm(long a, long b) {<br>    if (b == 0) {<br>      return 1 ;<br>    } else {<br>      return a * perm(a-1, b-1) ;<br>    }<br>  }<br>  long pow(long a, long b) {<br>    if (b == 0) {<br>      return 1 ;<br>    } else if ((b &amp; 1) != 0) {<br>      return a * pow(a*a, b/2) ;<br>    } else {<br>      return pow(a*a, b/2) ;<br>    }<br>  }<br>  long v(String s) {<br>    int i = s.indexOf(":") ;<br>    s = s.substring(i+1) ;<br>    String[] f = s2sa(s) ;<br>    long a = Integer.parseInt(f[0]) ;<br>    long b = Integer.parseInt(f[1]) ;<br>    if (f[2].equals("T")) {<br>      if (f[3].equals("T")) {<br>  return choose(a, b) ;<br>      } else {<br>  return choose(a+b-1, b) ;<br>      }<br>    } else {<br>      if (f[3].equals("T")) {<br>  return perm(a, b) ;<br>      } else {<br>  return pow(a, b) ;<br>      }<br>    }<br>  }<br>  public String[] sortByOdds(String[] rules) {<br>    int i, j, k ;<br>    Arrays.sort(rules, new Comparator() {<br>  public int compare(Object a_, Object b_) {<br>    String a = (String)a_ ;<br>    String b = (String)b_ ;<br>    long av = v(a) ;<br>    long bv = v(b) ;<br>    System.out.println("For " + a + " got " + av) ;<br>    System.out.println("For " + b + " got " + bv) ;<br>    if (av &gt; bv) {<br>      return 1 ;<br>    } else if (bv &gt; av) {<br>      return -1 ;<br>    } else {<br>      return a.compareTo(b) ;<br>    }<br>  }<br>      }) ;<br>    for (i=0; i&lt;rules.length; i++) {<br>      rules[i] = rules[i].substring(0, rules[i].indexOf(":")) ;<br>    }<br>    return rules ;<br>  }<br>}<br></td>