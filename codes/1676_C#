<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>public class StampPads {<br>  public int bestCombo(string[] pads, string[] wishlist) {<br>    int ret = -1;<br>    int best = int.MaxValue;<br>    <br>    bool[,] haves = new bool[pads.Length, wishlist.Length];<br>    <br>    for (int i = 0; i &lt; pads.Length; i++) {<br>      string[] s = pads[i].Split(" ".ToCharArray());<br>      for (int j = 0; j &lt; s.Length; j++) {<br>        for (int k = 0; k &lt; wishlist.Length; k++) {<br>          if (s[j] == wishlist[k]) {<br>            haves[i,k] = true;<br>          }<br>        }<br>      }<br>    }<br>    <br>    for (int i = 0; i &lt; Math.Pow(2, pads.Length); i++) {<br>      int x = i;<br>      bool[] done = new bool[wishlist.Length];<br>      int c = 0;<br>      for (int j = 0; j &lt; pads.Length; j++) {<br>        if (x % 2 == 1) {<br>          c++;<br>          if (c &gt; best) {<br>            break;<br>          }<br>          for (int k = 0; k &lt; wishlist.Length; k++) {<br>            if (haves[j, k]) {<br>              done[k] = true;<br>            }<br>          }<br>        }<br>        x /= 2;<br>      }<br>      bool all = true;<br>      for (int k = 0; k &lt; wishlist.Length; k++) {<br>        if (!done[k]) {<br>          all = false;<br>          break;<br>        }<br>      }<br>      if (all &amp;&amp; (c &lt; best)) {<br>        best = c;<br>      }<br>    }<br>    <br>    if (best != int.MaxValue) {<br>      ret = best;<br>    }<br> <br>    return (ret);<br>  }<br>}<br> <br>// Powered by PopsEdit<br></td>