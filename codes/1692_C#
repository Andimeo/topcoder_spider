<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Text.RegularExpressions;<br>using System.Collections;<br><br>public class YahtzeeScore {<br>  public int maxPoints(int[] toss) {<br>    int ret = Int32.MinValue;<br>    for (int ii=1; ii&lt;7; ii++)<br>    {<br>      int val = 0;<br>      for (int jj=0; jj&lt;toss.Length; jj++)<br>        if (toss[jj] == ii)<br>          val += toss[jj];<br>      ret = Math.Max(val,ret);<br>    }<br>      return ret;<br>    }<br>  public static object minO(ArrayList arr) { if (arr.Count == 0) return null; ArrayList ar = (ArrayList)arr.Clone(); ar.Clone(); ar.Sort(); return ar[0]; }<br>  public static object maxO(ArrayList arr) { if (arr.Count == 0) return null; ArrayList ar = (ArrayList)arr.Clone(); ar.Clone(); ar.Sort(); return ar[ar.Count-1]; }<br>  public static object minO(System.Array arr) { if (arr.Length==0) return null;System.Array ar = Array.CreateInstance(arr.GetValue(0).GetType(),arr.Length); Array.Copy(arr,ar,arr.Length); Array.Sort(ar); if (arr.Length&gt;0) return ar.GetValue(0); else return null; }<br>  public static object maxO(System.Array arr) { if (arr.Length==0) return null;System.Array ar = Array.CreateInstance(arr.GetValue(0).GetType(),arr.Length); Array.Copy(arr,ar,arr.Length); Array.Sort(ar); if (arr.Length&gt;0) return ar.GetValue(ar.Length-1); else return null; }<br>  public static string gets(object o) { return Convert.ToString(o); }<br>  public static string gets(object[] arr) {string s=string.Empty; for (int ii=0; ii&lt;arr.Length; ii++) s += (Convert.ToString(arr[ii]) + " , "); s += (string.Empty); return s; }<br>  public static void prn(object o) { Console.WriteLine(Convert.ToString(o)); }<br>  public static void pr(object o) { Console.Write(Convert.ToString(o)); }<br>  public static void prn(object[] arr) { for (int ii=0; ii&lt;arr.Length; ii++) pr(Convert.ToString(arr[ii]) + " , "); prn(string.Empty); }<br>  public static void prn(System.Array arr) {<br>    if (arr.Rank == 2) {<br>      for (int ii=0; ii&lt;arr.Rank; ii++) {<br>        for (int jj=0; jj&lt;arr.Length/arr.Rank; jj++)<br>          pr(Convert.ToString(arr.GetValue(ii,jj)) + " , ");<br>        prn(string.Empty); prn("-----------------"); } }<br>    else if (arr.Rank == 1) {<br>      for (int jj=0; jj&lt;arr.Length; jj++)<br>        pr(Convert.ToString(arr.GetValue(jj)) + " , "); }<br>    prn(string.Empty); }<br>  public static string gets(System.Array arr) { string s = string.Empty;<br>    if (arr.Rank == 2) { for (int ii=0; ii&lt;arr.Rank; ii++) {<br>        for (int jj=0; jj&lt;arr.Length/arr.Rank; jj++)<br>          s += (Convert.ToString(arr.GetValue(ii,jj)) + " , ");<br>        prn(string.Empty); prn("-----------------"); } }<br>    else if (arr.Rank == 1) { for (int jj=0; jj&lt;arr.Length; jj++)<br>        s += (Convert.ToString(arr.GetValue(jj)) + " , "); }<br>    s += (string.Empty); return s;}<br>  public static void prn(ArrayList arr) { for (int ii=0; ii&lt;arr.Count; ii++)<br>      pr(Convert.ToString(arr[ii]) + " , ");<br>    prn(string.Empty); }<br>  public static string gets(ArrayList arr) { string s = string.Empty;<br>    for (int ii=0; ii&lt;arr.Count; ii++)<br>      s += (Convert.ToString(arr[ii]) + " , ");<br>    s += (string.Empty); return s; }<br>}<br>/****************************************<br>****************************************/<br><br><br>// Powered by FileEdit<br></td>