<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;  typedef vector&lt;vector&lt;int&gt; &gt; VVI;<br>typedef vector&lt;string&gt; VS;  typedef vector&lt;vector&lt;string&gt; &gt; VVS;<br>typedef signed long long i64;  typedef unsigned long long u64;<br><br>int test(string m, string s) {<br>  s = "0"+s+"0";<br>  for( int i = 1; i &lt; s.size()-1; i++ )<br>    if( m[i-1] != s[i-1]+s[i]-'0'+s[i+1]-'0' ) return 0;<br>  for( int i = 1; i &lt; s.size()-1; i++ )<br>    if( s[i] != '0' &amp;&amp; s[i] != '1' ) return 0;<br>  return 1;<br>}<br><br>class BinaryCode {<br>public:<br>vector &lt;string&gt; decode(string m) {<br>  int i, j, k, x, y, z, n;<br>  vector &lt;string&gt; ret;<br><br>  string s = "0";<br>  for( i = 1; i &lt; m.size(); i++ )<br>    s += m[i-1]-(i==1 ? '0' : s[i-2])+'0'-s[i-1]+'0';<br>  if( test(m, s) ) ret.push_back(s); else ret.push_back("NONE");<br>  s = "1";<br>  for( i = 1; i &lt; m.size(); i++ )<br>    s += m[i-1]-(i==1 ? '0' : s[i-2])+'0'-s[i-1]+'0';<br>  if( test(m, s) ) ret.push_back(s); else ret.push_back("NONE");<br>  return ret;<br>}<br>};<br><br><br>// Powered by FileEdit<br></td>