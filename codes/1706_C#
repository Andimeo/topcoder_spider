<td class="problemText" colspan="8" valign="middle" align="left">
            using System; using System.Collections; public class CaseysArt<br>{<br>  public double howManyWays(int X, int Y) {<br>    if (X&lt;=1 || Y&lt;=1 || X+Y&lt;=4) return 0;<br>    if (X==2 || Y==2) { if ((X*Y)%6==0) return 1&lt;&lt;((X*Y)/6); else return 0; }<br>    <br>    // we've fully filled A columns, filled the top B of the next<br>    // column, and C is the bitmask of the Y+2 entries after that.<br>    double[,,] c = new double[X+1,Y+1,(1&lt;&lt;(Y+2))];<br>    c[0,0,0]=1;<br>    <br>    int yy = (1&lt;&lt;Y);<br>    int yym1 = 1&lt;&lt;(Y-1);<br>    int yyp1 = 1&lt;&lt;(Y+1);<br>    int yyym1 = yy|yym1;<br>    int yyyp1 = yy|yyp1;<br>    <br>    for (int A=0; A&lt;=X-1; A++)<br>    for (int B=0; B&lt;Y; B++)<br>    for (int C=0; C&lt;(1&lt;&lt;(Y+2)); C++)<br>    {<br>      double ch = c[A,B,C];<br>      <br>      if ((C&amp;1) != 0)<br>      {<br>        if (B==Y-1)<br>          c[A+1,0,C&gt;&gt;1] += ch;<br>        else<br>          c[A,B+1,C&gt;&gt;1] += ch;<br>        continue;<br>      }<br>      <br>      <br>      if (B &lt; Y-2)<br>      {<br>      if ((C&amp;2)==0 &amp;&amp; (C&amp;yy)==0)<br>        c[A,B+2,(C+3+(1&lt;&lt;Y))&gt;&gt;2] += ch;<br>      <br>      if ((C&amp;2)==0 &amp;&amp; (C&amp;yyp1)==0)<br>         c[A,B+2,(C+3+(1&lt;&lt;(Y+1)))&gt;&gt;2] += ch;<br>      }<br>      <br>      if (B &lt;= Y-2 &amp;&amp; (C&amp;yyyp1)==0) <br>        c[A,B+1,(C+1+(1&lt;&lt;Y)+(1&lt;&lt;(Y+1)))&gt;&gt;1] += ch;<br>      <br>        <br>      if (B&gt;0 &amp;&amp; (C&amp;yyym1)==0) <br>        c[A,B+1,(C+1+(1&lt;&lt;Y)+(1&lt;&lt;(Y-1)))&gt;&gt;1] += ch;<br>      <br>      if (B == Y-2)<br>      {<br>      if (!Test(C,1) &amp;&amp; !Test(C,Y))<br>        c[A+1,0,(C+3+(1&lt;&lt;Y))&gt;&gt;2] += ch;<br>      <br>      if (!Test(C,1) &amp;&amp; !Test(C,Y+1))<br>         c[A+1,0,(C+3+(1&lt;&lt;(Y+1)))&gt;&gt;2] += ch;<br>      }<br>      <br>      if (B==Y-1 &amp;&amp; !Test(C,Y-1) &amp;&amp; !Test(C,Y)) <br>        c[A+1,0,(C+1+(1&lt;&lt;Y)+(1&lt;&lt;(Y-1)))&gt;&gt;1] += ch;<br>      <br>      //if (A&gt;=1) WSL(A,B,C,ch);<br>/*      <br>      if(B==0)<br>      {<br>        if (C==0 &amp;&amp; A&gt;0) c[A,B,C] = c[A-1,Y,0];<br>        if (A&gt;0) WSL(A,B,C,c[A,B,C]);<br>        continue;<br>      }<br>      <br>      <br>      if (A+B+C==0) continue;<br>      if (B&gt;=2 &amp;&amp; Test(C,B-2)) c[A,B,C] += c[A,B-2,C-(1&lt;&lt;B-2)];<br>      if (B&gt;=2 &amp;&amp; Test(C,B-1)) c[A,B,C] += c[A,B-2,C-(1&lt;&lt;B-1)];<br>      if (B&gt;=2 &amp;&amp; Test(C,B-2) &amp;&amp; Test(C,B-1)) c[A,B,C] += c[A,B-1,C-(1&lt;&lt;B-2)-(1&lt;&lt;B-1)];<br>      if (B&gt;=1 &amp;&amp; B&lt;Y &amp;&amp; Test(C,B) &amp;&amp; Test(C,B-1)) c[A,B,C] += c[A,B-1,C-(1&lt;&lt;B)-(1&lt;&lt;B-1)];<br>      if (A&gt;0) WSL(A,B,C,c[A,B,C]);<br>*/<br>    }<br>    <br>    return (double) c[X,0,0];<br>}<br> <br> <br>bool Test(int mask, int pos) { return (mask&amp;(1&lt;&lt;pos)) != 0; }<br> <br> <br>static ArrayList AR { get { return new ArrayList(); }}<br>static Hashtable MAP { get { return new Hashtable(); }}<br> <br>static int   [] IA(ArrayList ar) { return (int   []) ar.ToArray(typeof(int   )); }<br>static string[] SA(ArrayList ar) { return (string[]) ar.ToArray(typeof(string)); }<br> <br>int    INT   (Object x) { return Convert.ToInt32 (x.ToString()); }<br>long   LONG  (Object x) { return Convert.ToInt64 (x.ToString()); }<br>double DOUBLE(Object x) { return Convert.ToDouble(x.ToString()); }<br> <br>static void WR(Object x, params object[] p) { Console.Write(x.ToString(), p); }<br>static void WL(Object x, params object[] p) { Console.WriteLine(x.ToString(), p); }<br>static void WL() { WL(""); }<br>static void WS(params Object[] c) { foreach (Object x in c) WR(x.ToString() + " "); }<br>static void WSL(params Object[] c) { foreach (Object x in c) WR(x.ToString() + " "); WL(); }<br>static void WS(Array ar, int X) { for (int x=0; x&lt;X; x++) WS(ar.GetValue(x)); WL(); }<br>static void WS(Array ar, int X, int Y) { for (int y=0; y&lt;Y; y++) { for (int x=0; x&lt;X; x++) WS(ar.GetValue(x,y)); WL(); }}}<br> <br>// Powered by PopsEdit<br></td>