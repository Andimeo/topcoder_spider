<td class="problemText" colspan="8" valign="middle" align="left">
            #line 2 "CaseysArt.cpp"<br><br>// Warning: no successful challenges against me yet.<br><br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;ctype.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;iostream&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br><br>using namespace std;<br>typedef long long ll; typedef long double ld;<br>typedef vector&lt;int&gt; vi; typedef vector&lt;string&gt; vs;<br><br>#define LS &lt;<br>#define FOR(k,start,end) for(typeof(start) k=(start); k LS (end); ++k)<br>#define Size(x) (int(x.size()))<br>#define LET(k,val) typeof(val) k = (val)<br><br>#define CLC(act,val) (*({act; static typeof(val) CLCR; CLCR = (val); &amp;CLCR;}))<br> <br>#define FIRST(k,a,b,cond) CLC(LET(k, a); for(; k LS (b); k++) if(cond) break, k)<br>#define EXISTS(k,a,b,cond) (FIRST(k,a,b,cond) LS (b))<br>#define FORALL(k,a,b,cond) (!EXISTS(k,a,b,!(cond)))<br> <br>#define FOLD0(k,a,b,init,act) CLC(LET(k, a); LET(R##k, init); for(; k LS (b); k++) {act;}, R##k)<br>#define SUMTO(k,a,b,init,x)  FOLD0(k,a,b,init,R##k += (x))<br>#define PRODTO(k,a,b,init,x) FOLD0(k,a,b,init,R##k *= (x))<br>#define MAXTO(k,a,b,init,x)  FOLD0(k,a,b,init,R##k &gt;?= (x))<br>#define MINTO(k,a,b,init,x)  FOLD0(k,a,b,init,R##k &lt;?= (x))<br>#define SUM(k,a,b,x) SUMTO(k,a,b,(typeof(x)) (0), x)<br>#define PROD(k,a,b,x) PRODTO(k,a,b,(typeof(x)) (1), x)<br> <br>#define FOLD1(k,a,b,init,act) CLC(LET(k, a); LET(R##k, init); for(k++; k LS (b); k++) act, R##k)<br>#define MAX(k,a,b,x) FOLD1(k,a,b,x, R##k &gt;?= (x))<br>#define MIN(k,a,b,x) FOLD1(k,a,b,x, R##k &lt;?= (x))<br> <br>#define INF 2000000000<br>int tcize(int n) {return n&lt;INF ? n : -1;}<br><br><br>ld hmw[32768];<br>ld hmw2[32768];<br><br>#define HAS(set,val) (set &amp; (1&lt;&lt;val))<br><br>int wide, lft;<br><br>void fit(int pos, int done) {<br>  while(HAS(lft,pos)) pos++;<br>  if(pos == wide) {<br>    hmw2[done] += hmw[lft];<br>//  printf("%d fits %d (%Lf)\n", lft, done, hmw[lft]);<br>    return;<br>    }<br>  int prv = pos-1;<br>  int nxt = pos+1;<br>  int sprv = 1 &lt;&lt; prv;<br>  int spos = 1 &lt;&lt; pos;<br>  int snxt = 1 &lt;&lt; nxt;<br>  if(pos &amp;&amp; !(done&amp;sprv)) fit(nxt, done | sprv | spos);<br>  if(pos&lt;wide-1) {<br>    if(!(done&amp;spos)) fit(nxt, done | spos | snxt);<br>    if((!(done&amp;spos)) &amp;&amp; !(lft&amp;snxt)) fit(nxt+1, done | spos);<br>    if(!(lft&amp;snxt)) fit(nxt+1, done | snxt);<br>    }<br>  }<br><br>class CaseysArt {<br>  public:<br>  double howManyWays(int length, int width) {<br>    // !FDI<br>    wide = width;<br>    <br>    int z = 1 &lt;&lt; width;<br>    <br>    if(width == 1 || length == 1) return 0;<br>    FOR(k, 0, z) hmw[k] = 0; hmw[0] = 1;<br><br>    FOR(h, 0, length) {<br>      FOR(l,0,z) hmw2[l] = 0;<br>      FOR(k, 0, z) {<br>        lft = k;<br>        fit(0, 0);<br>        }<br>      FOR(l,0,z) hmw[l] = hmw2[l];<br>      }<br><br>    return hmw[0];<br>    }<br>  <br> <br>  };<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>