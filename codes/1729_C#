<td class="problemText" colspan="8" valign="middle" align="left">
            using System; using System.Collections; public class TopCan<br>{<br>  public double minSurface(int volume) {<br>    v = volume;<br>    return S(F(1E-5, v*10.0));<br>  }<br>  <br>  double F(double minH, double maxH)<br>  {<br>    if (maxH-minH &lt; 1E-9) return (maxH+minH)/2.0;<br>    if (maxH/minH &lt; (1+1E-10)) return (maxH+minH)/2.0;<br>    <br>    double h1 = (minH+minH+maxH)/3.0;<br>    double h2 = (minH+maxH+maxH)/3.0;<br>    double v0 = S(minH), v1=S(h1), v2=S(h2), v3=S(maxH);<br>    if (v1 &lt; v2) return F(minH, h2); else return F(h1, maxH);<br>  }<br>  <br>  double S(double h)<br>  {<br>    double r = Math.Sqrt(v/h/Math.PI);<br>    return 2*Math.PI*r*(r+h);<br>  }<br> <br>double v;<br> <br> <br>static ArrayList AR { get { return new ArrayList(); }}<br>static Hashtable MAP { get { return new Hashtable(); }}<br> <br>static int   [] IA(ArrayList ar) { return (int   []) ar.ToArray(typeof(int   )); }<br>static string[] SA(ArrayList ar) { return (string[]) ar.ToArray(typeof(string)); }<br> <br>int    INT   (Object x) { return Convert.ToInt32 (x.ToString()); }<br>long   LONG  (Object x) { return Convert.ToInt64 (x.ToString()); }<br>double DOUBLE(Object x) { return Convert.ToDouble(x.ToString()); }<br> <br>static void WR(Object x, params object[] p) { Console.Write(x.ToString(), p); }<br>static void WL(Object x, params object[] p) { Console.WriteLine(x.ToString(), p); }<br>static void WL() { WL(""); }<br>static void WS(params Object[] c) { foreach (Object x in c) WR(x.ToString() + " "); }<br>static void WSL(params Object[] c) { foreach (Object x in c) WR(x.ToString() + " "); WL(); }<br>static void WS(Array ar, int X) { for (int x=0; x&lt;X; x++) WS(ar.GetValue(x)); WL(); }<br>static void WS(Array ar, int X, int Y) { for (int y=0; y&lt;Y; y++) { for (int x=0; x&lt;X; x++) WS(ar.GetValue(x,y)); WL(); }}}<br> <br>// Powered by PopsEdit<br></td>