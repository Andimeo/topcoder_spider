<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;  typedef vector&lt;vector&lt;int&gt; &gt; VVI;<br>typedef vector&lt;string&gt; VS;  typedef vector&lt;vector&lt;string&gt; &gt; VVS;<br>typedef signed long long i64;  typedef unsigned long long u64;<br><br>int val(char ch) {<br>  if( !ch ) return -20;<br>  if( ch == 'K' ) return 13;<br>  if( ch == 'Q' ) return 12;<br>  if( ch == 'J' ) return 11;<br>  if( ch == 'T' ) return 10;<br>  if( ch == 'A' ) return 1;<br>  return ch-'0';<br>}<br><br>class CircleGame {<br>public:<br>int cardsLeft(string deck) {<br>  char ch = 0;<br>  int i, j, k, x, y, z, n;<br>  int ret = deck.size();<br>  char *last = &amp;ch;<br><br>  for( i = 0; i &lt; 1000; i++ )<br>    for( j = 0; j &lt; deck.size(); j++ ) if( deck[j] ) {<br>      if( deck[j] == 'K' ) {<br>        deck[j] = 0;<br>        ret--;<br>      } else if( val(deck[j])+val(*last) == 13 ) {<br>        deck[j] = 0;<br>        *last = 0;<br>        ret -= 2;<br>      }<br>      last = &amp;deck[j];<br>    }<br>  return ret;<br>}<br>};<br><br><br>// Powered by FileEdit<br></td>