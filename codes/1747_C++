<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;  typedef vector&lt;vector&lt;int&gt; &gt; VVI;<br>typedef vector&lt;string&gt; VS;  typedef vector&lt;vector&lt;string&gt; &gt; VVS;<br>typedef signed long long i64;  typedef unsigned long long u64;<br><br>int a;<br>VI b;<br><br>int val(int g) {<br>  int mn = -1000, mx = 1000000000;<br>  for( int i = 0; i &lt; b.size(); i++ ) {<br>    if( b[i] &lt; g ) mn &gt;?= b[i]; else if( b[i] &gt; g ) mx &lt;?= b[i];<br>  }<br>  return 1 + ((mn==-1000)?g-1:(g-mn-1)/2) +<br>         ((mx==1000000000)?a-g:(mx-g-1)/2);<br>}<br><br>int doit(int c) {<br>  int i, j, k, x, y, z, n;<br>  int ret, retv = 0;<br><br>  if( c == 0 ) {<br>    VI b2 = b;<br>    b2.pop_back();<br>    if( b.size() == 1 ) return b.back()=1;<br>    sort(b2.begin(), b2.end());<br>    ret = -1;<br>    if( b2[0]-1 &gt; retv ) {retv = b2[0]-1; ret = b2[0]-1;}<br>    for( i = 0; i &lt; b2.size()-1; i++ )<br>      if((b2[i+1]-b2[i])/2 &gt; retv)<br>        {retv = (b2[i+1]-b2[i])/2; ret = b2[i]+1;}<br>    if( a-b2.back() &gt; retv )<br>      {retv = a-b2.back(); ret = b2.back()+1;}<br>    b.back() = ret;<br>    return ret;<br>  }<br>  VI::iterator nv = b.begin()+(b.size()-c-1);<br>  VI bestb;<br>  for( i = 1; i &lt;= a; i++ ) {<br>    if( find(b.begin(), nv, i) == nv ) {<br>      *nv = i;<br>      doit(c-1);<br>      y = val(i);<br>      if( y &gt; retv ) {retv = y; bestb = b;}<br>    }<br>  }<br>  b = bestb;<br>  return b[b.size()-c-1];<br>}<br><br>class NumberGuessing {<br>public:<br>int bestGuess(int A, vector &lt;int&gt; B, int c) {<br>  a = A;<br>  b = B;<br>  for( int i = 0; i &lt;= c; i++ ) b.push_back(-1000);<br>  return doit(c);<br>}<br>};<br><br><br>// Powered by FileEdit<br></td>