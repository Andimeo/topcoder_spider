<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>#define REP(i,n) for(int i=0;i&lt;(n);++i)<br>#define FOR(i,a,b) for(int i=(a);i&lt;=(b);++i)<br>#define FORD(i,a,b) for(int i=(a);i&gt;=(b);--i)<br>#define FOREACH(i,c) for(typeof((c).begin()) i=(c).begin();i!=(c).end();++i)<br>typedef long long LL;<br>const int INF = 1000000000;<br>typedef vector&lt;int&gt; VI;<br>template&lt;class T&gt; inline int size(const T&amp;c) { return c.size(); }<br><br>char buf1[1000];<br><br>string i2s(int x) {<br>  sprintf(buf1,"%d",x);<br>  return buf1;<br>}<br><br><br>struct PermutationCounter {<br>  LL nw[100][100];<br>  int cnt[15];<br>  <br>  void cnw() {<br>    nw[0][0]=1;<br>    FOR(i,1,99) nw[0][i]=0;<br>    FOR(n,1,99) {<br>      nw[n][0]=1;<br>      FOR(k,1,99) nw[n][k]=nw[n-1][k-1]+nw[n-1][k];<br>    }<br>  }<br>  <br>  LL komb(int ile) {<br>    LL res=1;<br>    FOR(i,0,9) {<br>      res *= nw[ile][cnt[i]];<br>      ile-=cnt[i];<br>    }<br>    return res;<br>  }<br>  <br>  // MAIN<br>  long long count(string n) {<br>    cnw();<br>    int ile=size(n);<br>    REP(i,10) cnt[i]=0;<br>    FOREACH(it,n) {<br>      ++cnt[*it-'0'];<br>    }<br>    int len = size(n);<br>    LL res = 0;<br>    REP(i,len) {<br>      FOR(j,0,n[i]-'0'-1) if(cnt[j]&gt;0) {<br>        --cnt[j];<br>        res+=komb(ile-1);<br>        ++cnt[j];<br>      }<br>      --ile; --cnt[n[i]-'0'];<br>    }<br>    return res;<br>  }<br>  <br><br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>