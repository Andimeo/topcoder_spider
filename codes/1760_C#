<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Text.RegularExpressions;<br>using System.Collections;<br><br>public class ContestScore : IComparer {<br>    public int Compare( object ls, object rs ) {<br>        string[] lhs = ((string)ls).Split(" ".ToCharArray());<br>        string[] rhs = ((string)rs).Split(" ".ToCharArray());<br>        int lhr = Int32.Parse(lhs[1]);<br>        int rhr = Int32.Parse(rhs[1]);<br>        if ( lhr != rhr ) return -(rhr-lhr);<br>        double lhc = Double.Parse(lhs[2]);<br>        double rhc = Double.Parse(rhs[2]);<br>        if ( lhc != rhc ) return Math.Sign(rhc-lhc);<br>        return String.Compare(lhs[0],rhs[0]);<br>    }<br>    int R,C;<br>    public string[] sortResults(string[] data) {<br>        if ( data.Length == 0 ) return new string[0];<br>        string[] res = new string[data.Length];<br>        R = data.Length;<br>        C = data[0].Split(" ".ToCharArray()).Length-1;<br>        double[,] sc = new double[R,C];<br>        double[] tot = new double[R];<br>        for ( int r = 0 ; r != R ; r++ ) {<br>            string[] tok = data[r].Split(" ".ToCharArray());<br>            for ( int c = 0 ; c != C ; c++ ) {<br>                sc[r,c] = Double.Parse(tok[c+1]);<br>                tot[r] += sc[r,c];<br>            }<br>        }<br>        for ( int r = 0 ; r != R ; r++ ) {<br>            int tr = 0;<br>            for ( int c = 0 ; c != C ; c++ ) {<br>                int rank = 1;<br>                for ( int i = 0 ; i != R ; i++ ) {<br>                    if ( sc[i,c] &gt; sc[r,c] )<br>                        rank++;<br>                }<br>                tr += rank;<br>            }<br>            res[r] = data[r].Split(" ".ToCharArray())[0] + " " + tr + " " + String.Format("{0:F1}",tot[r]);<br>        }<br>        Array.Sort(res, this );<br>        return res;<br>    }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>