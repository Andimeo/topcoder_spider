<td class="problemText" colspan="8" valign="middle" align="left">
            #pragma warning( disable : 4786 )<br><br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;functional&gt;<br>#include &lt;deque&gt;<br><br>using namespace std;<br><br>vector&lt; string &gt; tokenize( string in, string kar ) {<br>  string::iterator cp = in.begin();<br>  vector&lt; string &gt; oot;<br>  while( cp != in.end() ) {<br>    while( cp != in.end() &amp;&amp; count( kar.begin(), kar.end(), *cp ) )<br>      cp++;<br>    if( cp != in.end() )<br>      oot.push_back( string( cp, find_first_of( cp, in.end(), kar.begin(), kar.end() ) ) );<br>    cp = find_first_of( cp, in.end(), kar.begin(), kar.end() );<br>  };<br>  return oot;<br>};<br><br>vector&lt; int &gt; sti( const vector&lt; string &gt; &amp;foo ) {<br>  int i;<br>  vector&lt; int &gt; bar;<br>  for( i = 0; i &lt; foo.size(); i++ ) {<br>    bar.push_back( atoi( foo[ i ].c_str() ) );<br>  }<br>  return bar;<br>};<br><br>class ContestScore {<br>  public:<br>  vector &lt;string&gt; sortResults(vector &lt;string&gt; a) {<br>    if( !a.size() )<br>      return vector&lt; string &gt;();<br>    vector&lt; vector&lt; int &gt; &gt; scor;<br>    vector&lt; string &gt; nam;<br>    for( int i = 0; i &lt; a.size(); i++ ) {<br>      vector&lt; string &gt; tok = tokenize( a[ i ], " ." );<br>      vector&lt; int &gt; tik = sti( tok );<br>      nam.push_back( tok[ 0 ] );<br>      vector&lt; int &gt; ts;<br>      for( int j = 1; j &lt; tik.size(); j += 2 )<br>        ts.push_back( tik[ j ] * 10 + tik[ j + 1 ] );<br>      scor.push_back( ts );<br>    }<br>    vector&lt; int &gt; accu( nam.size() );<br>    vector&lt; int &gt; saccu( nam.size() );<br>    for( int i = 0; i &lt; scor[ 0 ].size(); i++ ) {<br>      vector&lt; int &gt; ts;<br>      for( int j = 0; j &lt; scor.size(); j++ ) {<br>        ts.push_back( scor[ j ][ i ] );<br>        saccu[ j ] += scor[ j ][ i ];<br>      }<br>      sort( ts.begin(), ts.end() );<br>      reverse( ts.begin(), ts.end() );<br>      for( int j = 0; j &lt; scor.size(); j++ )<br>        accu[ j ] += find( ts.begin(), ts.end(), scor[ j ][ i ] ) - ts.begin() + 1;<br>    }<br>    vector&lt; pair&lt; pair&lt; int, int &gt;, string &gt; &gt; skor;<br>    for( int i = 0; i &lt; accu.size(); i++ )<br>      skor.push_back( make_pair( make_pair( accu[ i ], -saccu[ i ] ), nam[ i ] ) );<br>    sort( skor.begin(), skor.end() );<br>    vector&lt; string &gt; oot;<br>    for( int i = 0; i &lt; skor.size(); i++ ) {<br>      char buf[ 128 ];<br>      sprintf( buf, "%s %d %d.%d", skor[ i ].second.c_str(), skor[ i ].first.first, -skor[ i ].first.second / 10, -skor[ i ].first.second % 10 );<br>      oot.push_back( buf );<br>    }<br>    return oot;<br>  }<br>};<br></td>