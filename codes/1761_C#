<td class="problemText" colspan="8" valign="middle" align="left">
            using System; using System.Collections; public class AlphaDice { public int badData(string[] roll) {<br>for (int i=0; i&lt;roll.Length; i++)<br> {<br> String curRoll = roll[i];<br> char a = curRoll[0];<br> char b = curRoll[1];<br> char c = curRoll[2];<br> <br> if (labels.IndexOf(a) &lt; 0) labels += a.ToString();<br> if (labels.IndexOf(b) &lt; 0) labels += b.ToString();<br> if (labels.IndexOf(c) &lt; 0) labels += c.ToString();<br> if (labels.Length &gt; 6) return i;<br> <br> ArrayList perms = BuildPerms();<br> bool ok = false;<br> foreach (String perm in perms)<br>  {<br>  bool goodPerm = true;<br>  ArrayList rots = BuildRots(perm);<br>  for (int j=0; j&lt;=i; j++)<br>   if (rots.IndexOf(roll[j]) &lt; 0)<br>    goodPerm = false;<br>  if (goodPerm) ok = true;<br>  }<br> <br> if (!ok) return i;<br> }<br> <br>return -1;<br>}<br> <br>ArrayList BuildPerms()<br>{<br>String aug = labels;<br>for (int i=0; i&lt;6; i++)<br> if (aug.Length &lt; 6) aug += i.ToString();<br> <br>ArrayList perms = new ArrayList();<br>for (int pass=0; pass &lt;= 1; pass++)<br>{<br>for (int i=0; i&lt;4; i++)<br> {<br> String bas = aug.Substring(0,2);<br> String A = aug.Substring(2+i, 1);<br> String X = aug.Substring(2,i) + aug.Substring(3+i, 3-i);<br> String B = X.Substring(0,1);<br> String C = X.Substring(1,1);<br> String D = X.Substring(2,1);<br> perms.Add(bas + A + B + C + D);<br> perms.Add(bas + A + B + D + C);<br> perms.Add(bas + A + C + B + D);<br> perms.Add(bas + A + C + D + B);<br> perms.Add(bas + A + D + C + B);<br> perms.Add(bas + A + D + B + C);<br> }<br> <br>aug = aug.Substring(0,1) + aug.Substring(2,4) + aug.Substring(1,1);<br>}<br> <br>return perms;<br>} // BuildPerms<br> <br>ArrayList BuildRots(String perm)<br>{<br>String U = perm[0].ToString();<br>String F = perm[1].ToString();<br>String R = perm[2].ToString();<br>String B = perm[3].ToString();<br>String L = perm[4].ToString();<br>String D = perm[5].ToString();<br> <br>ArrayList rots = new ArrayList();<br> <br>rots.Add(U+F+R);<br>rots.Add(U+R+B);<br>rots.Add(U+B+L);<br>rots.Add(U+L+F);<br> <br>rots.Add(D+R+F);<br>rots.Add(D+B+R);<br>rots.Add(D+L+B);<br>rots.Add(D+F+L);<br> <br>for (int i=0; i&lt;8; i++)<br> {<br> String s = (String) rots[i];<br> rots.Add(s.Substring(1,1) + s.Substring(2,1) + s.Substring(0,1));<br> rots.Add(s.Substring(2,1) + s.Substring(0,1) + s.Substring(1,1));<br> }<br> <br>return rots;<br>} // BuildRots<br> <br>String labels = "";<br>}<br></td>