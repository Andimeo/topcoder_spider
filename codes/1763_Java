<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class ProblemWriting {<br>  int NUMBER1 = 0;<br>  int DOT1 = 1;<br>  int OPERATOR = 2;<br>  int NUMBER2 = 3;<br>  int DOT2 = 4;<br>  public String myCheckData(String dotForm) {<br>    String s = dotForm;<br>    boolean done = false;<br>    if (dotForm.length() &lt;= 0 || dotForm.length() &gt; 25) return "dotForm must contain between 1 and 25 characters, inclusive.";<br>    int expecting = NUMBER1;<br>    for (int i = 0; i &lt; dotForm.length(); ++i) {<br>      out("i=" + i);<br>      done = false;<br>      String c = s.substring(i, i+1);<br>      if (expecting == NUMBER1) {<br>        out("NUMBER1");<br>        if (!isNumber(c)) return bad(i);<br>        expecting = DOT1;<br>      } else if (expecting == DOT1) {<br>        out("DOT1");<br>        int leadingDots = leadingDots(s.substring(i, s.length()));<br>        out("  leadingDots=" + leadingDots);<br>        i += leadingDots;<br>        i -= 1;<br>        expecting = OPERATOR;<br>      } else if (expecting == OPERATOR) {<br>        out("OPERATOR");<br>        if (!isOperator(c)) return bad(i);<br>        expecting = DOT2;<br>      } else if (expecting == DOT2) {<br>        out("DOT2");<br>        int leadingDots = leadingDots(s.substring(i, s.length()));<br>        out("  leadingDots=" + leadingDots);<br>        i += leadingDots;<br>        i -= 1;<br>        expecting = NUMBER2;<br>      } else if (expecting == NUMBER2) {<br>        out("NUMBER2");<br>        if (!isNumber(c)) return bad(i);<br>        expecting = DOT1;<br>        done = true;<br>      }<br>    }<br>    if (done == true) return "";<br>    else return bad(s.length());<br>      <br>    }<br>  static String bad(int i) {<br>    return "dotForm is not in dot notation, check character " + i + ".";<br>  }<br>  <br>  static int leadingDots(String s) {<br>    for (int i = 0; i &lt; s.length(); ++i) {<br>      if (!s.substring(i, i + 1).equals(".")) return i;<br>    }<br>    return s.length();<br>  }<br>  <br>  static boolean isNumber(String s) {<br>    int i = 0;<br>    try {<br>      i = Integer.parseInt(s);<br>    } catch (NumberFormatException nfe) {<br>      return false;<br>    }<br>    return i &gt;= 0 &amp;&amp; i &lt;= 9;<br>  }<br>  <br>  static boolean isOperator(String s) {<br>    if (s.equals("+")) return true;<br>    if (s.equals("-")) return true;<br>    if (s.equals("*")) return true;<br>    if (s.equals("/")) return true;<br>    return false;<br>  }<br>  <br>  static boolean isDots(String s) {<br>    if (s.equals("")) return true;<br>    for (int i = 0; i &lt; s.length(); ++i) {<br>      if (s.charAt(i) != '.') return false;<br>      <br>    }<br>    return true;<br>  }<br> <br>  public static void main(String[] args) {<br>    runTest(-1);<br>  }<br> <br>  <br>// BEGIN CUT HERE<br>  public static void runTest(int Case) {   ProblemWriting obj = new ProblemWriting();if ((Case == -1) || (Case == 0)) test_case_0(obj); if ((Case == -1) || (Case == 1)) test_case_1(obj); if ((Case == -1) || (Case == 2)) test_case_2(obj); if ((Case == -1) || (Case == 3)) test_case_3(obj); if ((Case == -1) || (Case == 4)) test_case_4(obj); }<br>  public static void verify_case(int Case, String expected, String received) { <br>    System.out.print("Test Case #" + Case + ": ");<br>    if (expected.equals(received)) System.out.println("PASSED");<br>    else { System.out.println("FAILED");<br>    System.out.println("Expected: " + expected);<br>    System.out.println("Received: " + received);<br> } }<br> <br>  private static void test_case_0(ProblemWriting obj) { String Arg0 = "3+5"; String Arg1 = ""; <br>    verify_case(0, Arg1, obj.myCheckData(Arg0)); }<br> <br>  private static void test_case_1(ProblemWriting obj) { String Arg0 = "9..+.5...*....3"; String Arg1 = ""; <br>    verify_case(1, Arg1, obj.myCheckData(Arg0)); }<br> <br>  private static void test_case_2(ProblemWriting obj) { String Arg0 = "5.3+4"; String Arg1 = "dotForm is not in dot notation, check character 2."; <br>    verify_case(2, Arg1, obj.myCheckData(Arg0)); }<br> <br>  private static void test_case_3(ProblemWriting obj) { String Arg0 = "9*9*9*9*9*9*9*9*9*9*9*9*9*9"; String Arg1 = "dotForm must contain between 1 and 25 characters, inclusive."; <br>    verify_case(3, Arg1, obj.myCheckData(Arg0)); }<br> <br>  private static void test_case_4(ProblemWriting obj) { String Arg0 = "3.........../...........4"; String Arg1 = ""; <br>    verify_case(4, Arg1, obj.myCheckData(Arg0)); }<br> <br>// END CUT HERE<br> <br> <br>  private static void out(String s) {<br>    System.out.println(s);<br>  }<br> <br>}<br> <br> <br>// Powered by PopsEdit<br>// Powered by TZTester.Java 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>