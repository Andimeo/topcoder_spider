<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;sstream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br> <br>#define REP(i,n) for(int i=0;i&lt;(n);++i)<br>#define FOR(i,a,b) for(int i=(a);i&lt;=(b);++i)<br>#define FORD(i,a,b) for(int i=(a);i&gt;=(b);--i)<br>#define FOREACH(it,c) for(typeof(c) it=(c).begin();it!=(c).end();++it)<br> <br>template&lt;class T&gt; inline int size(const T &amp;c) { return c.size(); }<br> <br>typedef long long LL;<br> <br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br> <br>char buf1[1000];<br> <br>string i2s(int x) {<br>  sprintf(buf1, "%d", x);<br>  return buf1;<br>}<br> <br> <br>const LL INF = 1000000000000000000LL;<br> <br>struct GasStations {<br> <br>  // MAIN<br>  double tripCost(vector &lt;int&gt; dist, vector &lt;int&gt; price, int mpg, int tankSize, int tripLength) {<br>    dist.push_back(tripLength);<br>    price.push_back(0);<br>    <br>    int n = size(dist);<br>    REP(i,n) REP(j,n-1) {<br>      if(dist[j]&gt;dist[j+1]) { swap(dist[j],dist[j+1]); swap(price[j],price[j+1]); }<br>    }<br>    tankSize *= mpg;<br>    if(tankSize&gt;tripLength) tankSize=tripLength;<br>    vector&lt;LL&gt; ccc(tankSize+1);<br>    FOR(i,0,tankSize) ccc[i]=INF;<br>    ccc[tankSize] = 0;<br>    REP(i,n) {<br>      int dd=dist[i];<br>      if(i&gt;0) dd-=dist[i-1];<br>      FOR(j,0,tankSize)<br>        if(j+dd &lt;= tankSize) ccc[j] = ccc[j+dd];<br>        else ccc[j] = INF;<br>      FOR(j,1,tankSize)<br>        ccc[j] = min(ccc[j], ccc[j-1]+price[i]);<br>    }<br>    return double( ccc[tankSize]) / double(mpg);<br>  }<br> <br>  <br> <br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>