<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class GasStations {<br>  public double tripCost(int[] dist, int[] price, int mpg, int tankSize, int tripLength) {<br>    if (mpg * tankSize &gt;= tripLength - 0.00000000001) {<br>      return 0d;<br>    }<br>    int min = 1000000;<br>    int mini = -1;<br>    for (int i = 0; i &lt; price.length; i++) {<br>      if (price[i] &lt; min) {<br>        min = price[i];<br>        mini = i;<br>      }<br>    }<br>    double ret = tripLength - dist[mini];<br>    ret /= mpg;<br>    double gasleft = tankSize - (((double) dist[mini]) / mpg);<br>    ret = Math.min(ret, tankSize);<br>    gasleft = Math.max(0d, gasleft);<br>    ret -= gasleft;<br>    ret = Math.max(0d, ret);<br>    ret *= min;<br>    Vector leftdist = new Vector();<br>    Vector leftprice = new Vector();<br>    Vector rightdist = new Vector();<br>    Vector rightprice = new Vector();<br>    for (int i = 0; i &lt; dist.length; i++) {<br>      if (dist[i] &lt; dist[mini]) {<br>        leftdist.add(new Integer(dist[i]));<br>        leftprice.add(new Integer(price[i]));<br>      } else if (dist[i] &gt; dist[mini]) {<br>        rightdist.add(new Integer(dist[i] - dist[mini]));<br>        rightprice.add(new Integer(price[i]));<br>      }<br>    }<br>    int[] ld = new int[leftdist.size()];<br>    int[] lp = new int[leftprice.size()];<br>    for (int i = 0; i &lt; leftdist.size(); i++) {<br>      ld[i] = ((Integer) leftdist.get(i)).intValue();<br>      lp[i] = ((Integer) leftprice.get(i)).intValue();<br>    }<br>    int[] rd = new int[rightdist.size()];<br>    int[] rp = new int[rightprice.size()];<br>    for (int i = 0; i &lt; rightdist.size(); i++) {<br>      rd[i] = ((Integer) rightdist.get(i)).intValue();<br>      rp[i] = ((Integer) rightprice.get(i)).intValue();<br>    }<br>    return ret + tripCost(ld, lp, mpg, tankSize, dist[mini]) + tripCost(rd, rp, mpg, tankSize, tripLength - dist[mini]);<br>  }<br>}<br> <br>// Powered by PopsEdit<br></td>