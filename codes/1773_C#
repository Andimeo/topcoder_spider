<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Collections;<br> <br>public class PickTeam<br>{<br>    int[][] p = null;<br>    int[] ret = null;<br>    int w = 0;<br>  public string[] pickPeople(int teamSize, string[] people)<br>  {<br>        p = new int[people.Length][];<br>        for(int i = 0; i &lt; people.Length; i++)<br>        {<br>            string[] sp = people[i].Split(null);<br>            p[i] = new int[sp.Length - 1];<br>            for(int j = 1; j &lt; sp.Length; j++)<br>            {<br>                p[i][j-1] = int.Parse(sp[j]);<br>            }<br> <br>        }<br>        ret = new int[teamSize];<br>        w = int.MinValue;<br>        Combination(people.Length, teamSize, new int[teamSize], 0);<br>        ArrayList rr = new ArrayList();<br>        for(int i = 0; i &lt; ret.Length; i++)<br>        {<br>            rr.Add(people[ret[i]].Split(null, 2)[0]);<br>        }<br>        rr.Sort();<br>    return (string[])rr.ToArray(typeof(string));<br>  }<br> <br>    private void Combination(int m, int n, int[] res, int now)<br>    {<br>        if(now &lt; n )<br>        {<br>            for(int i = (now == 0 ? 0 : res[now - 1]); i &lt; m; i++)<br>            {<br>                if(Array.IndexOf(res, i, 0, now) == -1)<br>                {<br>                    res[now] = i;<br>                    Combination(m, n, res, now + 1);<br>                }<br>            }<br>        }<br>        else<br>        {<br>            int cur = 0;<br>            for(int i = 0; i &lt; res.Length; i++)<br>            {<br>                for(int j = i + 1; j &lt; res.Length; j++)<br>                {<br>                    cur += p[res[i]][res[j]];<br>                }<br>            }<br>            if(cur &gt; w)<br>            {<br>                w = cur;<br>                res.CopyTo(ret, 0);<br>            }<br>        }<br>    }<br> <br>}<br></td>