<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;ctype.h&gt;<br>#include &lt;string.h&gt;<br> <br>using namespace std;<br> <br>class TCMLParser {<br>public:<br> <br>  string replaceTag( string tagstring, int code, string parse ) {<br>    char outcode[ 8 ] = "";<br>    char outdat[ 1000 ] = "";<br> <br>    sprintf( outcode, "%d", code );<br> <br>    const char *inp = parse.c_str();<br> <br>    bool intag = false;<br> <br>    while( *inp ) {<br>      if( intag ) {<br>        if( *inp == '&gt;' ) {<br>          strcat( outdat, "&gt;" );<br>          intag = false;<br>          inp++;<br>          continue;<br>        } else {<br>          const char *tmep = inp;<br>          const char *mov = tagstring.c_str();<br>          while( *mov &amp;&amp; *tmep &amp;&amp; tolower( *tmep ) == tolower( *mov ) ) {<br>            tmep++;<br>            mov++;<br>          }<br>          if( !*mov ) {<br>            inp = tmep;<br>            strcat( outdat, outcode );<br>            continue;<br>          }<br>        }<br>        char foo[ 2 ];<br>        foo[ 0 ] = *inp;<br>        foo[ 1 ] = '\0';<br>        strcat( outdat, foo );<br>        inp++;<br>        continue;<br>      } else {<br>        if( *inp == '&lt;' ) {<br>          strcat( outdat, "&lt;" );<br>          intag = true;<br>          inp++;<br>          continue;<br>        }<br>        char foo[ 2 ];<br>        foo[ 0 ] = *inp;<br>        foo[ 1 ] = '\0';<br>        strcat( outdat, foo );<br>        inp++;<br>        continue;<br>      }<br>    }<br> <br>    return string( outdat );<br> <br>  }<br> <br>};<br></td>