<td class="problemText" colspan="8" valign="middle" align="left">
            /*<br> * I make it this hard to understand on purpose, yo.<br> */<br> <br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;climits&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;ctime&gt;<br>#include &lt;functional&gt;<br>#include &lt;regex.h&gt;<br>#include &lt;queue&gt;<br> <br>using namespace std;<br> <br>#define debug(x) cout &lt;&lt; #x &lt;&lt; " = " &lt;&lt; x &lt;&lt; endl<br>#define vout(x) cout &lt;&lt; #x &lt;&lt; ": {"; for (int blob = 0; blob &lt; x.size(); blob++) {cout &lt;&lt; x[blob]; if (blob!=x.size() -1) cout &lt;&lt; ", ";} cout &lt;&lt; "}" &lt;&lt; endl<br>#define len length()<br>#define si size()<br>#define loop(A,B) for (A = 0; A &lt; B; A++)<br>#define vi vector&lt;int&gt;<br>#define vs vector&lt;string&gt;<br>#define vb vector&lt;bool&gt;<br>#define vvi vector&lt;vector&lt;int&gt; &gt;<br>#define vvb vector&lt;vector&lt;bool&gt; &gt;<br>#define mod(A, B) ((((A) % (B)) + (B)) % (B))<br>#define b2e(A) (A).begin(), (A).end()<br>#define e2b(A) (A).rbegin(), (A).rend()<br>#define rev(A) std::reverse(b2e(A))<br>#define s(A) std::sort(b2e(A))<br>#define ss(A) std::stable_sort(b2e(A))<br>#define un(A) std::unique(b2e(A))<br>#define er(A) (A).erase(un(A), (A).end())<br>#define Fill(A,B) std::fill(b2e(A), B)<br>#define minelt(A) *min_element(b2e(A))<br>#define maxelt(A) *max_element(b2e(A))<br>#define nextp(A) next_permutation(b2e(A))<br>#define prevp(A) prev_permutation(b2e(A))<br> <br>string itos (int i) {stringstream s; s &lt;&lt; i; return s.str();}<br>string lltos (long long i) {stringstream s; s &lt;&lt; i; return s.str();}<br>int ipow(int a, int b) {return (int) (std::pow((double) (a), (double) (b)));}<br>template &lt;class T&gt;<br>ostream&amp; operator &lt;&lt; (ostream&amp; os, vector&lt;T&gt; temp) {<br>  os &lt;&lt; "{";<br>  for (int i = 0; i &lt; temp.si; i++) {<br>    if (i) os &lt;&lt; ", ";<br>    os &lt;&lt; temp[i];<br>  }<br>  os &lt;&lt; "}";<br>  return os;<br>}<br>int gcd(int a, int b) {if (a==0 || b==0) return max(a,b); if (a &gt; b) return gcd(b, a); if (!(b % a)) return a; return gcd(a, b % a);}<br> <br>//----------------------------<br> <br>class ThePriceIsRight {<br>  public:<br>  vector &lt;int&gt; howManyReveals(vector &lt;int&gt; a) {<br>    vi Q(a.si,0), N(a.si, 0);<br>    for (int i = 0; i &lt; a.si; i++) {<br>      int sofar = 0, bestlen = 0;<br>      for (int j = 0; j &lt; i; j++) {<br>        if (a[j] &lt; a[i]) {<br>          if (Q[j] == bestlen - 1) {<br>            N[i] += N[j];<br>          }<br>          else if (Q[j] &gt;= bestlen) {<br>            N[i] = N[j];<br>            bestlen = Q[j] + 1;<br>          }<br>        }<br>      }<br>      if (bestlen == 0) {<br>        Q[i] = 1; <br>        N[i] = 1;<br>      }<br>      else {<br>        Q[i] = bestlen;<br>      }<br>    }<br>    int c = 0;<br>    vi ret;<br>    for (int i = 0; i &lt; Q.si; i++) c &gt;?= Q[i];<br>    ret.push_back(c);<br>    int r = 0;<br>    for (int i = 0; i &lt; Q.si; i++) {<br>      if (Q[i] == c) r += N[i];<br>    }<br>    ret.push_back(r);<br>    return ret;<br>  }<br>};<br></td>