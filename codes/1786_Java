<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br>import java.text.*;<br>public class Salary {<br>    ////////////////////////////////////////////////////////<br>    /////////  Note: helper functions start here  //////////<br>    ////////////////////////////////////////////////////////<br>    <br>    void sout(int a) {<br>        if (!debug) return; System.out.println(a);<br>    }<br>    void sout(long a) {<br>        if (!debug) return; System.out.println(a);<br>    }<br>    void sout(char a) {<br>        if (!debug) return; System.out.println(a);<br>    }<br>    void sout(boolean a) {<br>        if (!debug) return; System.out.println(a);<br>    }<br>    void sout(Object a) {<br>        if (!debug) return; System.out.println(a);<br>    }<br>    void sout(String [] a) {<br>        if (!debug) return;<br>        System.out.println("Array size = " + a.length);<br>        System.out.print("[");<br>        for (int i = 0; i &lt; a.length; i ++) System.out.println(a[i] + ",");<br>        System.out.println("]");<br>    }<br>    void sout(int [] a) {<br>        if (!debug) return;<br>        System.out.println("Array size = " + a.length);<br>        System.out.print("[");<br>        for (int i = 0; i &lt; a.length; i ++) System.out.print(a[i] + ",");<br>        System.out.println("]");<br>    }<br>    void sout(long [] a) {<br>        if (!debug) return;<br>        System.out.println("Array size = " + a.length);<br>        System.out.print("[");<br>        for (int i = 0; i &lt; a.length; i ++) System.out.print(a[i] + ",");<br>        System.out.println("]");<br>    }<br>    void sout(char [] a) {<br>        if (!debug) return;<br>        System.out.println("Array size = " + a.length);<br>        System.out.print("[");<br>        for (int i = 0; i &lt; a.length; i ++) System.out.print(a[i] + ",");<br>        System.out.println("]");<br>    }<br>    void sout(boolean [] a) {<br>        if (!debug) return;<br>        System.out.println("Array size = " + a.length);<br>        System.out.print("[");<br>        for (int i = 0; i &lt; a.length; i ++) System.out.print(a[i] + ",");<br>        System.out.println("]");<br>    }<br>    <br>    <br>    Hashtable lookup = new Hashtable();<br>    int lookupIdx = 0;<br>    int indexOf(String in) {<br>        if (!lookup.containsKey(in)) {<br>            lookup.put(in, new Integer(lookupIdx));<br>            lookupIdx ++;<br>        }<br>        return ((Integer) lookup.get(in)).intValue();<br>    }<br>    <br>    ////////////////////////////////////////////////////////<br>    ///////////  Note: helper functions end here  //////////<br>    ////////////////////////////////////////////////////////<br>    <br>    <br>    boolean debug = false;<br>    <br>    Set set = new HashSet(), seta = new HashSet(), setb = new HashSet();<br>    ArrayList al = new ArrayList(), ala = new ArrayList(), alb = new ArrayList();<br>    Hashtable ht = new Hashtable(), hta = new Hashtable(), htb = new Hashtable();<br>    StringTokenizer tok, toka, tokb;<br>    StringBuffer buf = new StringBuffer();<br>    <br>    public int howMuch(String[] ar, String[] dep, int r) {<br>        int in[] = new int [86400];<br>        for (int i = 0; i &lt; ar.length; i ++) {<br>            int aa = t(ar[i]), bb = t(dep[i]);<br>            for (int j = aa; j &lt; bb; j ++) {<br>                in[j] = 1;<br>            }<br>        }<br>        <br>        int K = 21600;<br>        int cnt = 0;<br>        for (int i = 0; i &lt; K; i ++) {<br>            cnt += in[i] * 3;<br>        }<br>        for (int i = K; i &lt; 3 * K; i ++) {<br>            cnt += in[i] * 2;<br>        }<br>        for (int i = 3 * K; i &lt; 4 * K; i ++) {<br>            cnt += in[i] * 3;<br>        }<br>        <br>        return (int) ((long) r * (long) cnt / 7200);<br>    } // end of method howMuch<br>    <br>    int t(String s) {<br>        int hh, mm, ss;<br>        tok = new StringTokenizer(s, ":");<br>        hh = Integer.parseInt(tok.nextToken());<br>        mm = Integer.parseInt(tok.nextToken());<br>        ss = Integer.parseInt(tok.nextToken());<br>        return hh * 3600 + mm * 60 + ss;<br>    }<br>    <br>}<br> <br>// Powered by CodeProcessor<br></td>