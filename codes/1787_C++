<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br> <br>using namespace std;<br> <br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>class HourGlass {<br>  public:<br>    int depth;<br>    set&lt;int&gt; sum;<br>    vector&lt;int&gt; result;<br> <br>    void calc(int x, int y, int _Rx, int _Ry, int _S) {<br>      depth++;<br>      int Rx = _Rx, Ry = _Ry, S = _S;<br>      if (Rx &lt; Ry) { <br>        S += Rx; Ry -= Rx; Rx = 0; <br>        sum.insert(S);<br>        if (depth &lt;= 10) {<br>          calc(x,y,Ry,Ry,S);<br>          calc(x,y,x,Ry,S);<br>          calc(x,y,Rx,y-Ry,S);<br>          calc(x,y,x,y-Ry,S);<br>        }<br>      } else { <br>        S += Ry; Rx -= Ry; Ry = 0; <br>        sum.insert(S);<br>        if (depth &lt;= 10) {<br>          calc(x,y,Rx,Rx,S);<br>          calc(x,y,Rx,y,S);<br>          calc(x,y,x-Rx,Ry,S);<br>          calc(x,y,x-Rx,y,S);<br>        }<br>      };<br>      depth--;<br>    }<br>  vector &lt;int&gt; measurable(int glass1, int glass2) {<br>    depth = 0;<br>    int x = glass1, y = glass2, Rx = glass1, Ry = glass2;<br>    int S = 0;<br>    calc(x,y,Rx,Ry,S);<br>    set&lt;int&gt;::iterator si = sum.begin();<br>    for (int i=0; i&lt;10; i++) {<br>      result.push_back(*si);<br>      si++;<br>    }<br>    return result;<br>  }<br>};<br> <br> <br>// Powered by PopsEdit<br></td>