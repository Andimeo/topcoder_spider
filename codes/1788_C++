<td class="problemText" colspan="8" valign="middle" align="left">
            #line 2 "SmartElevator.cpp"<br><br>#include &lt;iostream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;map&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cmath&gt;<br><br>using namespace std;<br><br><br>class SmartElevator {<br>  public:<br>  vector&lt;int&gt; arrivalTime,startFloor,destFloor;<br>  int n;<br>  <br>  int go(int pickedleft, int doneleft, int floor, int time)<br>  {<br>    if (!doneleft) return time;      <br>    int best=999999999;<br>    for(int i=0;i&lt;n;i++)<br>      if (((1&lt;&lt;i)&amp;pickedleft)) {<br>        // Pick up employee i<br>        best&lt;?=go(pickedleft-(1&lt;&lt;i),doneleft,startFloor[i],arrivalTime[i]&gt;?(time+abs(floor-startFloor[i])));<br>      }<br>    for(int i=0;i&lt;n;i++)<br>      if (!((1&lt;&lt;i)&amp;pickedleft) &amp;&amp; ((1&lt;&lt;i)&amp;doneleft)) {<br>        // Drop off employee i<br>        best&lt;?=go(pickedleft,doneleft-(1&lt;&lt;i),destFloor[i],time+abs(floor-destFloor[i]));<br>      }<br>    return best;<br>  }<br>  <br>  int timeWaiting(vector &lt;int&gt; a, vector &lt;int&gt; b, vector &lt;int&gt; c) {<br>    n=a.size();<br>    arrivalTime=a;<br>    startFloor=b;<br>    destFloor=c;<br>    return go((1&lt;&lt;n)-1,(1&lt;&lt;n)-1,1,0);<br>  }<br>};<br><br><br>// Powered by FileEdit<br></td>