<td class="problemText" colspan="8" valign="middle" align="left">
            public class SmartElevator<br>{<br>int used[] = new int[5];<br>int npeople;<br>int best = 1000000000;<br>public int timeWaiting(int[] arrival, int[] start, int[] dest)<br>{<br>   npeople = arrival.length;<br>   search(0, 1, 0, arrival, start, dest);<br>   return best;<br>}<br> <br>void search(int t, int f, int nd, int[] a, int s[], int[] d)<br>{<br>   if (nd == npeople) {<br>      if (t &lt; best) best = t;<br>      return;<br>   }<br> <br>   // pick up a person?<br>   for (int i = 0; i &lt; npeople; i++)<br>      if (used[i] == 0) {<br>         used[i] = 1;<br>         search(Math.max(a[i], t + Math.abs(f - s[i])), s[i], nd, a, s, d);<br>         used[i] = 0;<br>      }<br> <br>   // drop off a person?<br>   for (int i = 0; i &lt; npeople; i++)<br>      if (used[i] == 1) {<br>         used[i] = 2;<br>         search(t + Math.abs(f - d[i]), d[i], nd + 1, a, s, d);<br>         used[i] = 1;<br>      }<br>}<br>}<br></td>