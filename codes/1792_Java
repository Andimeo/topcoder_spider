<td class="problemText" colspan="8" valign="middle" align="left">
            /*<br>// PROBLEM STATEMENT<br>// The least common multiple of a group of integers is the smallest number that can be evenly divided by all the integers in the group.  Given two ints, first and last, find the least common multiple of all the numbers between first and last, inclusive.<br><br>DEFINITION<br>Class:LCMRange<br>Method:lcm<br>Parameters:int, int<br>Returns:int<br>Method signature:int lcm(int first, int last)<br><br><br>CONSTRAINTS<br>-first will be between 1 and 12, inclusive.<br>-last will be between first and 12, inclusive.<br><br><br>EXAMPLES<br><br>0)<br>1<br>5<br><br>Returns: 60<br><br>The following statements show how 60 can be divided by all numbers from 1 to 5:<br>1*60 = 60<br>2*30 = 60<br>3*20 = 60<br>4*15 = 60<br>5*12 = 60<br><br>1)<br>4<br>5<br><br>Returns: 20<br><br>Although 60 would be a common multiple for 4 and 5, 20 is the least common multiple.<br><br>2)<br>1<br>12<br><br>Returns: 27720<br><br>*/<br><br>import java.util.*;<br>public class LCMRange {<br>  public boolean feasible(int a, int b, int c) {<br>    for(int i=a;i&lt;=b;i++)<br>      if(c%i != 0) return false;<br>    return true;<br>  }<br>  public int lcm(int first, int last) {<br>    int max = Math.max(first, last);<br>    int i, j, k;<br>    if(first==last) return first;<br>    if(first&gt;last) return 1;<br>    for(i=max;;i++) {<br>      if(feasible(first, last, i)) return i;<br>    }<br>  }<br>  public static void main(String[] args) {<br>    LCMRange a = new LCMRange();<br>//    a.lcm(int first, int last);<br>  }<br>}<br><br><br>// Powered by FileEdit<br></td>