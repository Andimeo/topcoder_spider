<td class="problemText" colspan="8" valign="middle" align="left">
            #pragma warning( disable : 4786 )<br>#pragma warning( disable : 4503 )<br> <br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;map&gt;<br>#include &lt;stdio.h&gt;<br> <br>using namespace std;<br> <br>class FSM {<br> <br>  void breakApart( string in, vector&lt; string &gt; *out ) {<br>    const char *st = in.c_str();;<br>    const char *nd;<br> <br>    while( *st ) {<br> <br>      while( *st == ' ' )<br>        st++;<br>      if( !*st )<br>        break;<br> <br>      nd = st;<br>      while( *nd != ' ' &amp;&amp; *nd )<br>        nd++;<br> <br>      out-&gt;push_back( string( st, nd ) );<br> <br>      st = nd;<br> <br>    };<br> <br>  };<br> <br> <br>public:<br>  vector&lt; string &gt; runFSM( string symbols, string states, vector&lt; string &gt; edges ) {<br> <br>    vector&lt; string &gt; symbol;<br> <br>    breakApart( symbols, &amp;symbol );<br> <br>    vector&lt; string &gt; state;<br>    breakApart( states, &amp;state );<br> <br>    map&lt; string, map&lt; string, pair&lt; string, string &gt; &gt; &gt; edge;<br> <br>    vector&lt; string &gt;::iterator itr;<br>    for( itr = edges.begin(); itr != edges.end(); itr++ ) {<br>      vector&lt; string &gt; chunks;<br>      breakApart( *itr, &amp;chunks );<br>      printf( "(%s) (%s) (%s) (%s)\n", chunks[ 0 ].c_str(), chunks[ 2 ].c_str(), chunks[ 1 ].c_str(), chunks[ 3 ].c_str() );<br>      edge[ chunks[ 0 ] ][ chunks[ 2 ] ] = pair&lt; string, string &gt;( chunks[ 1 ], chunks[ 3 ] );<br>    };<br> <br>    string thisstate = state[ 0 ];<br> <br>    vector&lt; string &gt; oot;<br> <br>    for( itr = symbol.begin(); itr != symbol.end(); itr++ ) {<br>      if( edge[ thisstate ].find( *itr ) == edge[ thisstate ].end() ) {<br>        oot.push_back( string( "ERROR" ) );<br>      } else {<br>        pair&lt; string, string &gt; det = edge[ thisstate ][ *itr ];<br>        thisstate = det.first;<br>        char ert[ 200 ];<br>        sprintf( ert, "%s(%s)", det.second.c_str(), itr-&gt;c_str() );<br>        oot.push_back( string( ert ) );<br>      }<br>      printf( "now in %s\n", thisstate.c_str() );<br>    };<br> <br>    return oot;<br> <br>  };<br> <br>};<br></td>