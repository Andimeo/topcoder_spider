<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class FSM<br>{<br>  public String getWord(String s, int word)<br>  {<br>    StringTokenizer st = new StringTokenizer(s);<br>    String  x = "";<br>    for (int i = 0; i &lt; word; i++)<br>    {<br>      if (!st.hasMoreTokens()) return "";<br>      x = st.nextToken();<br>    }<br>    return x;<br>  }<br> <br>  public String[] runFSM(String symbols, String states, String[] edges)<br>  {<br>    StringTokenizer  st;<br> <br>    st = new StringTokenizer(symbols);<br>    ArrayList        symAL = new ArrayList();<br>    while (st.hasMoreTokens()) symAL.add(st.nextToken());<br> <br>    st = new StringTokenizer(states);<br>    ArrayList        stAL = new ArrayList();<br>    while (st.hasMoreTokens()) stAL.add(st.nextToken());<br> <br>    String[]  result = new String[symAL.size()];<br> <br>    String currentState = (String) stAL.get(0);<br>    String currentSymbol;<br>    for (int sym = 0; sym &lt; symAL.size(); sym++)<br>    {<br>      currentSymbol = (String) symAL.get(sym);<br>      String  nextEdge = null;<br>      <br>      for (int e = 0; e &lt; edges.length; e++)<br>      {<br>        String thisEdge = edges[e];<br>        if (getWord(thisEdge,1).equals(currentState) &amp;&amp; getWord(thisEdge,3).equals(currentSymbol))<br>          nextEdge = thisEdge;<br>      }<br> <br>      if (nextEdge == null)<br>      {<br>        result[sym] = "ERROR";<br>      } else {<br>        String  nextState = getWord(nextEdge,2);<br>        String  thisFunction = getWord(nextEdge,4);<br>        result[sym] = thisFunction+"("+currentSymbol+")";<br>        currentState = nextState;<br>      }<br>    }<br> <br>    return result;<br>  }<br>}<br></td>