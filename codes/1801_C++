<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;map&gt;<br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;string&gt;<br>#include &lt;set&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;numeric&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>using namespace std;<br>#include &lt;math.h&gt;<br><br>#ifdef __GNUC__<br>    #define __int64 long long<br>#endif<br><br>class StringTrain<br>{<br>public:<br>    string buildTrain(vector &lt;string&gt; cars)<br>    {<br>        string train = cars[0];<br>        int n = cars.size();<br>        for (int i = 1; i &lt; n; ++i)<br>        {<br>            sufapp(train, cars[i]);<br>        }<br>        int l = train.length();<br>        string final = "";<br>        for (int i = 0; i &lt; l; ++i)<br>        {<br>            char c = train[i];<br>            int k = train.find_last_of(c);<br>            if (i == k)<br>                final += c;<br>        }<br>        stringstream s;<br>        s &lt;&lt; l &lt;&lt; ' ' &lt;&lt; final;<br>        return s.str();<br>    }<br>    <br>private:<br>    void sufapp(string&amp; orig, string targ)<br>    {<br>        int n = orig.length();<br>        int l = targ.length();<br>        int b = n - (l - 1);<br>        for (int i = l - 1; i &gt; 0; --i)<br>        {<br>            string pre = targ.substr(0, i);<br>            if (b &gt; 0)<br>            {<br>                string suf = orig.substr(b, i);<br>                if (suf == pre)<br>                {<br>                    orig += targ.substr(i, l - i);<br>                    return;<br>                }<br>            }<br>            b++;<br>        }<br>    }<br><br>};<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>