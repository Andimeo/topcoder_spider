<td class="problemText" colspan="8" valign="middle" align="left">
            Option Explicit On <br>Option Strict On<br> <br>Public Class StringTrain<br>    Public Function buildTrain(ByVal cars As String()) As String<br>        Dim tmpCont As Integer<br>        Dim maxCont As Integer = cars.Length<br>        Dim tmpTrain As String = cars(0)<br> <br>        For tmpCont = 1 To maxCont - 1<br>            tmpTrain += getLongestPrefixElement(tmpTrain, cars(tmpCont))<br>        Next<br>        Return cleartrain(tmpTrain)<br> <br>    End Function<br> <br>    Private Function getLongestPrefixElement(ByVal whatTrain As String, ByVal whatElement As String) As String<br>        Dim tmpCont As Integer<br>        Dim maxCont As Integer = whatElement.Length<br>        Dim tmpPref As String = ""<br>        Dim tmpPos As Integer<br>        Dim tmpTrL As Integer = whatTrain.Length<br> <br>        For tmpCont = maxCont - 1 To 1 Step -1<br>            tmpPref = whatElement.Substring(0, tmpCont)<br>            tmpPos = whatTrain.LastIndexOf(tmpPref)<br>            If tmpPos &gt; 0 AndAlso tmpTrL - tmpPos = tmpCont Then Return whatElement.Substring(tmpCont)<br>        Next<br>        Return ""<br> <br>    End Function<br>    Private Function clearTrain(ByVal whatTrain As String) As String<br>        Dim tmpInitL As Integer = whatTrain.Length<br>        Dim tmpCont As Integer<br>        Dim maxCont As Integer = tmpInitL<br>        Dim tmpNew As String = ""<br>        Dim tmpL As String = ""<br> <br>        For tmpCont = maxCont - 1 To 0 Step -1<br>            tmpL = whatTrain.Substring(tmpCont, 1)<br>            If tmpNew.IndexOf(tmpL) &lt; 0 Then tmpNew = tmpL &amp; tmpNew<br>        Next<br>        tmpNew = tmpInitL.ToString.Trim &amp; " " &amp; tmpNew<br>        Return tmpNew<br>    End Function<br> <br>End Class<br></td>