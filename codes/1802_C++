<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;vector&gt;<br>#include&lt;string&gt;<br>#include&lt;functional&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;numeric&gt;<br>#include&lt;strstream&gt;<br>#include&lt;cmath&gt;<br>using namespace std;<br> <br>template&lt;class Tp&gt;int SZ(Tp&amp;v){return(int)v.size();}<br>#define FORNF(i,n,f) {int for_n=(n);for(int i=0;i&lt;for_n&amp;&amp;(f);i++){<br>#define FORN(i,n) FORNF(i,n,1)<br>#define FEACHF(i,v,f) FORN(i,SZ(v),f)<br>#define FEACH(i,v) FORN(i,SZ(v))<br>#define FORF(i,s,e,f) {int for_e=(e);for(int i=(s);i&lt;=for_e&amp;&amp;(f);i++){<br>#define FOR(i,s,e) FORF(i,s,e,1)<br>#define FORRF(i,s,e,f) {int for_e=(e);for(int i=(s);i&gt;=for_e&amp;&amp;(f);i--){<br>#define FORR(i,s,e) FORRF(i,s,e,1)<br>#define NEXT }}<br> <br>#define VALL(v) v.begin(),v.end()<br>#define SZO sizeof<br>#define ARRSET(a,el,val) FORN(i,SZO(a)/SZO(el))((el*)(a))[i]=val;NEXT<br>#define MEMCLR(a) memset(a,0,SZO(a));<br>#define VARCLR(a) memset(&amp;a,0,SZO(a));<br>typedef vector&lt;string&gt; vecs; typedef vector&lt;double&gt; vecd;typedef vector&lt;int&gt; veci;<br>//#define iint long long<br>typedef istrstream itext; typedef ostrstream otext;<br> <br>int numL;<br>vecs forb;<br>int allo;<br>int sum;<br>char r[100];<br> <br>#define CATCHREC(code) {if(code)return 1;}<br> <br>int rec0(int depth,int pts){<br>  FEACH(i,forb)<br>    int p=depth-forb[i].size();<br>    int f1=1;<br>    FORF(j,p,depth-1,f1)<br>      if(r[j]!=forb[i][j-p]) f1=0;<br>    NEXT<br>    if(f1) pts++;<br>  NEXT<br>    <br>  if(pts&gt;=allo) return 0;<br>  if(depth&gt;=numL){<br>    ++sum;return 0;<br>  }<br> <br>  r[depth]='c';<br>  CATCHREC(rec0(depth+1,pts));<br>  r[depth]='d';<br>  CATCHREC(rec0(depth+1,pts));<br>  return 0;<br>}<br> <br>struct TennisRallies{<br>int howMany(int numL, vecs forb, int allo){<br>  ::numL=numL;::forb=forb;::allo=allo;<br>  return Main();<br>}<br>int Main(){<br>  sum=0;<br>  rec0(0,0);<br>  return sum;<br>}<br>};<br></td>