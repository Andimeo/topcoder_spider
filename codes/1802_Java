<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class TennisRallies {<br>  int count=0;<br>  public int howMany(int num, String[] f, int a) {<br>    char [] cur=new char [num];<br>    char [][]ff=new char[f.length][0];<br>    for(int x=0; x&lt;f.length; x++){<br>      ff[x]=new char[f[x].length()];<br>      for(int y=0; y&lt;ff[x].length; y++){<br>        ff[x][y]=f[x].charAt(y);<br>      }<br>    }<br>    go(cur, 0, ff, a, 0);<br>    return count;<br>  }<br>  <br>  void go(char [] cur, int errors, char [][]f, int allowed, int ind){<br>    for(int x=0; x&lt;f.length; x++){<br>      int i=ind-1;<br>      for(int y=f[x].length-1; y&gt;=0; y--){<br>        if(i&lt;0) continue;<br>        if(cur[i--]!=f[x][y]) break;<br>        else if(y==0) errors++;<br>      }<br>    }<br>    if(ind==cur.length){<br>      if(errors&lt;allowed) count++;<br>      return;<br>    }<br>    cur[ind]='c';<br>    go(cur, errors, f, allowed, ind+1);<br>    cur[ind]='d';<br>    go(cur, errors, f, allowed, ind+1);<br>  }<br>  <br> <br>  public long gcd(long a, long b){<br>    if(b==0) return a;<br>    return gcd(b, a%b);<br>  }<br> <br>  long lcm(long a, long b){<br>       return b/gcd(a, b)*a;<br>  }<br> <br>  double log(double base, double num){<br>    return Math.log(num)/Math.log(base);<br>  }<br> <br> <br> <br>  /*   *_*_*_TESTING DONE BELOW_*_*_*  */<br> <br>    public final static void main(String[] args)<br>  {<br>    try {<br>      validateExample("1", new TennisRallies().howMany(3,new String[] {"cc","dd"},1), 2, "howMany(3,new String[] {\"cc\",\"dd\"},1)");<br>      validateExample("2", new TennisRallies().howMany(10,new String[] {"c"},1), 1, "howMany(10,new String[] {\"c\"},1)");<br>      validateExample("3", new TennisRallies().howMany(10,new String[] {"c"},2), 11, "howMany(10,new String[] {\"c\"},2)");<br>      validateExample("4", new TennisRallies().howMany(18,new String[] {"c","d"},1), 0, "howMany(18,new String[] {\"c\",\"d\"},1)");<br>      validateExample("5", new TennisRallies().howMany(18,new String[] {},1), 262144, "howMany(18,new String[] {},1)");<br>      validateExample("6", new TennisRallies().howMany(18,new String[] {"c","cc","ccc","cccc","ccccc","cccccc","ccccccc",  "cccccccc","ccccccccc","cccccccccc"},100), 262122, "howMany(18,new String[] {\"c\",\"cc\",\"ccc\",\"cccc\",\"ccccc\",\"cccccc\",\"ccccccc\",  \"cccccccc\",\"ccccccccc\",\"cccccccccc\"},100)");<br>    } catch (Exception e) {<br>      System.out.println(e);<br>      e.printStackTrace(System.out);<br>    }<br>  }<br> <br>  private static void validateExample(String exampleNum, int returned, int expected, String methodInvocation) {<br>    print(exampleNum);<br>    print("  ");<br>    if (!eq(returned,expected)) {<br>      print("FAIL");<br>    } else {<br>      print("SUCCESS");<br>    }<br>    print(" ");  <br>    print(methodInvocation);<br>    print("\tGot:[");<br>    print(returned);<br>    print("]\t");<br>    print("Expected:[");<br>    print(expected);<br>    print("]");<br>    print("\n");<br>  }<br> <br>  public static void print(boolean a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(long a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(int a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(char a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(String a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(int[] a) {<br>    if (a==null) {System.out.print("null"); return;} <br>    for (int i=0; i&lt;a.length; i++) System.out.print(a[i]+(i&lt;a.length-1?",":"")); <br>  }<br> <br>  public static void print(int[][] a) {<br>    if (a==null) {System.out.print("null"); return;} <br>    for (int i=0; i&lt;a.length; i++) { print(a[i]); print("\n"); }<br>  }<br> <br>  public static void print(String[] a) {<br>    if (a==null) {System.out.print("null"); return;} <br>    for (int i=0; i&lt;a.length; i++) System.out.print(a[i]+(i&lt;a.length-1?",":"")); <br>  }<br> <br>  public static boolean eq(boolean a, boolean b) {<br>    return a==b;<br>  }<br> <br>  public static boolean eq(long a, long b) {<br>    return a==b;<br>  }<br> <br>  public static boolean eq(int a, int b) {<br>    return a==b;<br>  }<br> <br>  public static boolean eq(char a, char b) {<br>    return a==b;<br>  }<br> <br>  public static boolean eq(String a, String b) {<br>    return a.equals(b);<br>  }<br> <br>  public static boolean eq(int[] a, int[] b) { return Arrays.equals(a,b); }<br>  public static boolean eq(String[] a, String[] b) { return Arrays.equals(a,b); }<br> <br>}<br>// Powered by CodeProcessor<br></td>