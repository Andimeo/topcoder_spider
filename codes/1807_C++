<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>#define REP(i,n) for(int i=0;i&lt;(n);++i)<br>#define FOR(i,a,b) for(int i=(a);i&lt;=(b);++i)<br>#define FORD(i,a,b) for(int i=(a);i&gt;=(b);--i)<br>#define FOREACH(i,c) for(typeof((c).begin()) i=(c).begin();i!=(c).end();++i)<br>typedef long long LL;<br>const int INF = 1000000000;<br>typedef vector&lt;int&gt; VI;<br>template&lt;class T&gt; inline int size(const T&amp;c) { return c.size(); }<br><br>char buf1[1000];<br><br>string i2s(int x) {<br>  sprintf(buf1,"%d",x);<br>  return buf1;<br>}<br><br><br>struct IsHomomorphism {<br>  // MAIN<br>  vector &lt;string&gt; numBad(vector &lt;string&gt; source, vector &lt;string&gt; target, vector &lt;int&gt; mapping) {<br>      int n = size(source);<br>      vector&lt;string&gt; res;<br>      REP(a,n) REP(b,n) {<br>          if(mapping[source[a][b]-'0']!=target[mapping[a]][mapping[b]]-'0') {<br>              sprintf(buf1,"(%d,%d)",a,b);<br>              res.push_back(buf1);<br>          }<br>      }<br>      return res;<br>  }<br>  <br><br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>