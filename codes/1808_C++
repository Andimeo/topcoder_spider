<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;  typedef vector&lt;vector&lt;int&gt; &gt; VVI;<br>typedef vector&lt;string&gt; VS;  typedef vector&lt;vector&lt;string&gt; &gt; VVS;<br>typedef signed long long i64;  typedef unsigned long long u64;<br><br>i64 atoll(string s) {<br>  istringstream i(s);<br>  i64 ret;<br>  i &gt;&gt; ret;<br>  return ret;<br>}<br><br>class PermutationValues {<br>public:<br>vector &lt;int&gt; getValues(vector &lt;int&gt; a, vector &lt;int&gt; b, string c, vector &lt;string&gt; d) {<br>  i64 i, j, k, x, y, z, n;<br>  i64 tot = 0;<br>  vector &lt;int&gt; ret;<br><br>  for( i = 0; i &lt; a.size(); i++ ) tot += (i64)b[i]+1-a[i];<br>  <br>  VI rest;<br>  for( i = 0; i &lt; b.size(); i++ )<br>    for( j = (b[i]-50) &gt;? a[i]; j &lt;= b[i]; j++ )<br>      rest.push_back(j);<br>  sort(rest.begin(), rest.end());<br>  if( rest.size() &gt; 21 ) rest.erase(rest.begin(), rest.end()-21);<br><br>  VI perm(rest.size());<br>  for( x = 1, i = 1; i &lt; rest.size(); i++ ) x *= i;<br>  z = atoll(c);<br>  set&lt;int&gt; s(rest.begin(), rest.end());<br>  for( i = 0; i &lt; rest.size(); i++ ) {<br>    set&lt;int&gt;::iterator it = s.begin();<br>    while( z &gt;= x ) {<br>      z -= x;<br>      it++;<br>      if( it == s.end() ) {<br>        it = s.begin();<br>        z %= s.size() * x;<br>      }<br>    }<br>    perm[i] = *it;<br>    s.erase(perm[i]);<br>    if( i &lt; rest.size()-1 ) x /= (rest.size()-1-i);<br>  }<br><br>  vector&lt;pair&lt;i64, i64&gt; &gt; v;<br>  for( i = 0; i &lt; a.size(); i++ )<br>    v.push_back(make_pair((i64)a[i], (i64)b[i]+1));<br>  sort(v.begin(), v.end());<br>  for( i = 0; i &lt; d.size(); i++ ) {<br>    x = atoll(d[i]);<br>    if( tot-x &lt;= perm.size() ) {<br>      ret.push_back(perm[perm.size()-(tot-x)]);<br>      continue;<br>    }<br>    for( j = 0; j &lt; v.size(); j++ ) {<br>      if( x &lt; v[j].second-v[j].first ) break;<br>      x -= v[j].second-v[j].first;<br>    }<br>    ret.push_back(v[j].first+x);<br>  }<br>  return ret;<br>}<br>};<br><br><br>// Powered by FileEdit<br></td>