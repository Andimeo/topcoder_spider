<td class="problemText" colspan="8" valign="middle" align="left">
            import java.awt.*;<br>import java.awt.geom.Line2D;<br> <br>public class Parachuter<br>{<br>    public int overArea(String[] points, int planeX, int planeY)<br>    {<br>  try<br>  {<br>      int[] xp = new int[points.length];<br>      int[] yp = new int[points.length];<br> <br>      for (int i = 0; i &lt; points.length; ++i)<br>      {<br>    xp[i] = Integer.parseInt(points[i].substring(1, points[i].indexOf(',')));<br>    yp[i] = Integer.parseInt(points[i].substring(points[i].indexOf(',') + 1,<br>                   points[i].length() - 1));<br>    System.out.println("#" + i + ": " + xp[i] + "," + yp[i]);<br>      }<br> <br>      int onBorder = 0;<br> <br>      // Self intersections?<br>      for (int i = 0; i &lt; points.length; ++i)<br>      {<br>    if (new Line2D.Double(xp[i], yp[i],<br>              xp[(i+1)%xp.length], yp[(i+1)%yp.length]).<br>        intersects(planeX - .0000001, planeY - .0000001,<br>             .0000002, .0000002))<br>    {<br>        System.out.println("on border " + i);<br>        onBorder = 1;<br>    }<br> <br>    for (int j = 0; j &lt; points.length; ++j)<br>    {<br>        if (i != j &amp;&amp; (i + 1)%points.length != j)<br>        {<br>      if (new Line2D.Double(xp[i], yp[i],<br>                xp[(i+1)%xp.length], yp[(i+1)%yp.length]).<br>          intersects(xp[j] - .0000001, yp[j] - .0000001,<br>               .0000002, .0000002))<br>      {<br>          System.out.println("point on a line: i="+i+"; j="+j);<br>          return 0;<br>      }<br>        }<br> <br>        if (i == j || i + 1 == j || i - 1 == j ||<br>      (i == 0 &amp;&amp; j == points.length - 1) ||<br>      (j == 0 &amp;&amp; i == points.length - 1))<br>        {<br>      continue;<br>        }<br>        if (new Line2D.Double(xp[i], yp[i],<br>            xp[(i+1)%xp.length], yp[(i+1)%yp.length]).<br>      intersectsLine(new Line2D.Double(xp[j], yp[j],<br>               xp[(j+1)%xp.length], yp[(j+1)%yp.length])))<br>        {<br>      System.out.println("#" + i + " and " + j + " intersect!");<br>      return 0;<br>        }<br>    }<br>      }<br> <br>      if (onBorder == 1)<br>    return 1;<br>      return new Polygon(xp, yp, xp.length).contains(planeX, planeY) ? 1 : 2;<br>  }<br>  catch (Exception e)<br>  {<br>      e.printStackTrace();<br>      return 0;<br>  }<br>    }<br> <br>    public static void main(String[] args)<br>    {<br>  try<br>  {<br>      System.out.println(new Parachuter().overArea<br>    (new String[] { "(0,0)","(0,2)","(2,2)","(2,0)" }, 1, 1));<br> <br>      System.out.println(new Parachuter().overArea<br>    (new String[] { "(0,0)","(0,2)","(2,2)","(2,0)" }, 2, 2));<br> <br>      System.out.println(new Parachuter().overArea<br>    (new String[] { "(0,0)","(0,2)","(2,2)","(2,0)" }, 2, 3));<br> <br>      System.out.println(new Parachuter().overArea<br>    (new String[] { "(10,10)","(10,20)","(20,10)","(10,15)","(20,10)" }, 1, 1));<br> <br>      System.out.println(new Parachuter().overArea<br>    (new String[] { "(5,5)","(10,10)","(7,7)" }, 2, 2));<br> <br>      System.out.println(new Parachuter().overArea<br>    (new String[] { "(0,0)","(4,4)","(0,4)","(4,0)" }, 2, 2));<br> <br>      System.out.println(new Parachuter().overArea<br>    (new String[] { "(0,0)","(0,1)","(1,1)","(1,0)","(0,0)" }, 90, 90));<br> <br>  }<br>  catch (Exception e) { e.printStackTrace(); }<br>     <br>    }<br>}<br></td>