<td class="problemText" colspan="8" valign="middle" align="left">
            #pragma warning( disable : 4786 )<br><br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;functional&gt;<br>#include &lt;deque&gt;<br>#include &lt;cctype&gt;<br><br>using namespace std;<br><br>vector&lt; string &gt; tokenize( string in, string kar ) {<br>  string::iterator cp = in.begin();<br>  vector&lt; string &gt; oot;<br>  while( cp != in.end() ) {<br>    while( cp != in.end() &amp;&amp; count( kar.begin(), kar.end(), *cp ) )<br>      cp++;<br>    if( cp != in.end() )<br>      oot.push_back( string( cp, find_first_of( cp, in.end(), kar.begin(), kar.end() ) ) );<br>    cp = find_first_of( cp, in.end(), kar.begin(), kar.end() );<br>  };<br>  return oot;<br>};<br><br>vector&lt; int &gt; sti( const vector&lt; string &gt; &amp;foo ) {<br>  int i;<br>  vector&lt; int &gt; bar;<br>  for( i = 0; i &lt; foo.size(); i++ ) {<br>    bar.push_back( atoi( foo[ i ].c_str() ) );<br>  }<br>  return bar;<br>};<br><br>class Logger {<br>  public:<br>  vector &lt;string&gt; log(vector &lt;string&gt; a, vector &lt;string&gt; b, vector &lt;string&gt; c, string d) {<br>    for( int i = 0; i &lt; b.size(); i++ )<br>      for( int j = 0; j &lt; b[ i ].size(); j++ )<br>        b[ i ][ j ] = tolower( b[ i ][ j ] );<br>    for( int i = 0; i &lt; c.size(); i++ )<br>      for( int j = 0; j &lt; c[ i ].size(); j++ )<br>        c[ i ][ j ] = tolower( c[ i ][ j ] );<br>    for( int j = 0; j &lt; d.size(); j++ )<br>      d[ j ] = tolower( d[ j ] );<br>    vector&lt; int &gt; prid;<br>    for( int i = 0; i &lt; b.size(); i++ ) {<br>      vector&lt; string &gt; tk = tokenize( b[ i ], " " );<br>      vector&lt; int &gt; tki = sti( tk );<br>      tki.push_back( 0 );<br>      prid.push_back( ( find( c.begin(), c.end(), tk[ 0 ] ) - c.begin() ) * 1000 + tki[ 1 ] );<br>    };<br>    vector&lt; string &gt; tk = tokenize( d, " " );<br>    vector&lt; int &gt; tki = sti( tk );<br>    tki.push_back( 0 );<br>    int gole = ( find( c.begin(), c.end(), tk[ 0 ] ) - c.begin() ) * 1000 + tki[ 1 ];<br>    vector&lt; string &gt; ort;<br>    for( int i = 0; i &lt; prid.size(); i++ )<br>      if( prid[ i ] &gt;= gole )<br>        ort.push_back( a[ i ] );<br>    return ort;<br>  }<br>};<br><br><br><br>// Powered by FileEdit<br></td>