<td class="problemText" colspan="8" valign="middle" align="left">
            #pragma warning( disable : 4786 )<br> <br>#include &lt;stdio.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;set&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;iostream&gt;<br>#include &lt;string&gt;<br> <br>using namespace std;<br> <br>class BitChecker {<br>public:<br>  string getResidue( string dat, string k ) {<br>    vector&lt; bool &gt; cdata;<br>    vector&lt; bool &gt; key;<br> <br>    const char *ptr;<br>    for( ptr = dat.c_str(); *ptr; ptr++ ) {<br>      if( *ptr == '0' )<br>        cdata.push_back( false );<br>        else<br>        cdata.push_back( true );<br>    }<br> <br>    for( ptr = k.c_str(); *ptr; ptr++ ) {<br>      if( *ptr == '0' )<br>        key.push_back( false );<br>        else<br>        key.push_back( true );<br>    }<br> <br>    int spot;<br>    int nem;<br>    for( spot = 0; spot &lt;= cdata.size() - key.size(); spot++ ) {<br>      if( cdata[ spot ] ) {<br>        for( nem = 0; nem &lt; key.size(); nem++ ) {<br>          cdata[ spot + nem ] = key[ nem ] ^ cdata[ spot + nem ];<br>        }<br>      }<br>    };<br>    <br> <br>    char boof[ 50 ];<br>    *boof = '\0';<br>    for( spot = cdata.size() - key.size() + 1; spot &lt; cdata.size(); spot++ ) {<br>      if( cdata[ spot ] )<br>        strcat( boof, "1" );<br>        else<br>        strcat( boof, "0" );<br>    };<br> <br>    return string( boof );<br> <br>  }<br> <br>};<br></td>