<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br> <br>public class Poetry {<br>string getPat(string line) {<br>  bool gotAvowel = false;<br>  string pattern="";<br>  int len = line.Length;<br>  int i=len-1;<br>  while (i&gt;=0) {<br>    string c = line.Substring(i,1);<br>    if (c == " ") {<br>      if (pattern != "") {<br>        return pattern;<br>      }<br>    }<br>    else {<br>        if (c=="a" || c=="e" || c=="i" || c=="o" || c=="u" || (c=="y" &amp;&amp; pattern != "" &amp;&amp; i&gt;0 &amp;&amp; line.Substring(i-1,1) != " ")) {<br>          gotAvowel = true;<br>          pattern = c.ToString() + pattern;<br>        }<br>        else {<br>          if (gotAvowel) {<br>            return pattern;<br>          }<br>          else {<br>            pattern = c.ToString() + pattern;<br>          }<br>        }<br>    }<br>    --i;<br>  }<br>  return pattern;<br>}<br>public string rhymeScheme(string[] poem) {<br> <br>int len = poem.Length;<br>Hashtable h = new Hashtable();<br>string[] pattern = new string[len];<br> <br>string scheme = "";<br>char label='a';<br> <br>for (int i=0;i&lt;len;++i) {<br>  poem[i] = poem[i].ToLower();<br>  pattern[i] = getPat(poem[i]);<br>System.Console.WriteLine("'{0}'", pattern[i]);<br>  if (pattern[i] == "") {<br>    scheme += " ";<br>  }<br>  else {<br>    if (h.Contains(pattern[i])) {<br>      scheme += h[pattern[i]];<br>    }<br>    else {<br>      scheme += label.ToString();<br>      h[pattern[i]] = label.ToString();<br>      if (label == 'z') {<br>        label = 'A';<br>      }<br>      else {<br>        label++;<br>      }<br>    }<br>  }<br>}<br> <br>return scheme;<br> <br>}}<br></td>