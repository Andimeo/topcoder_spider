<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.io.*;<br>import java.text.*;<br>import java.math.*;<br> <br>/**<br> * @author yaniv<br> */<br>public class Poetry {<br>    public String rhymeScheme(String[] asl) {<br>        int icl = asl.length;<br>        int il;<br>        for (il = 0; il &lt; icl; il++) {<br>            Matcher m = Pattern.compile("\\b([a-zA-Z]+) *$").matcher(asl[il]);<br>            if (m.find()) {<br>                String sw = m.group(1);<br>                int ih;<br>                int icw = sw.length();<br>                int ib = -1;<br>                for (ih = icw - 1; ih &gt;= 0; ih--) {<br>                    char c = sw.charAt(ih);<br>                    if ("aeiouAEIOU".indexOf(c) != -1<br>                        || ih != icw - 1<br>                        &amp;&amp; ih != 0<br>                        &amp;&amp; "yY".indexOf(c) != -1) {<br>                        ib = ih;<br>                    } else {<br>                        if (ib != -1)<br>                            break;<br>                    }<br>                }<br>                asl[il] = sw.substring(ib);<br>            } else {<br>                asl[il] = "";<br>            }<br>        }<br>        char[] ac = new char[icl];<br>        char cn = 'a';<br>        for (il = 0; il &lt; icl; il++) {<br>            if (ac[il]!= 0)<br>                continue;<br>            if (asl[il].length() == 0)<br>                ac[il] = ' ';<br>            else {<br>                ac[il] = cn;<br>                for (int il2 = 0; il2 &lt; icl; il2++) {<br>                    if (ac[il2] == 0 &amp;&amp; asl[il].equalsIgnoreCase(asl[il2])) {<br>                        ac[il2] = cn;<br>                    }<br>                }<br>                if (cn == 'z')<br>                    cn = 'A';<br>                else<br>                    cn++;<br>            }<br>        }<br>        return new String(ac);<br>    }<br>}<br></td>