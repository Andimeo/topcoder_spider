<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;math.h&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br> <br>using namespace std;<br> <br>class SMBus {<br>  public:<br>  int transmitTime(vector &lt;string&gt; messages, vector &lt;int&gt; times) {<br>    vector&lt;bool&gt; trans;<br>    vector&lt;bool&gt; done;<br>    vector&lt;int&gt; pos;<br>    bool alldone = false;<br>    for(int i=0;i&lt;messages.size();i++) {<br>      trans.push_back(true);<br>      done.push_back(false);<br>      pos.push_back(0);<br>    }<br>    <br>    int time=0;<br>    while(!alldone) {<br>      int low = 9;<br>      int bigtime = 0;<br>      // gets low and find slow time<br>      for(int i=0;i&lt;messages.size();i++) {<br>        if(trans[i] &amp;&amp; !done[i]) {<br>          if(messages[i][pos[i]]-'0' &lt; low) {<br>            low = messages[i][pos[i]]-'0';<br>          }<br>          if(times[i] &gt; bigtime) {<br>            bigtime = times[i];<br>          }<br>        }<br>      }<br>      // stops those that arent low<br>      for(int i=0;i&lt;messages.size();i++) {<br>        if(trans[i] &amp;&amp; !done[i]) {<br>          if(messages[i][pos[i]]-'0' &gt; low) {<br>            pos[i] = 0;<br>            trans[i]= false;<br>          }<br>        }<br>      }<br>      time += bigtime;<br>      <br>      // go forward start over if one finishes<br>      bool change = false;<br>      for(int i=0;i&lt;messages.size() &amp;&amp; !change;i++) {<br>        if(trans[i] &amp;&amp; !done[i]) {<br>          pos[i]++;<br>          if(pos[i] &gt;= messages[i].length()) {<br>            done[i] = true;<br>            change = true;<br>            for(int j=0;j&lt;messages.size();j++) {<br>              pos[j] = 0;<br>              trans[j] = true;<br>            }<br>          }<br>        }<br>      }<br>      alldone = true;<br>      for(int i=0;i&lt;messages.size();i++) {<br>        if(!done[i]) alldone = false;<br>      }<br>    }<br>    return time;<br>      <br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>