<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cassert&gt;<br>#include &lt;numeric&gt;<br>#include &lt;algorithm&gt;<br> <br>using namespace std;<br> <br>typedef vector&lt;int&gt; vi;<br> <br>#define For(i,a,b) for(int i=(a); i&lt;=(b); i++)<br>#define Rep(i,n) for(int i=0; i&lt;(n); i++)<br>#define Size(x) (int(x.size()))<br> <br>bool check(vi &amp;v,int last)<br>{<br>  int cnt,mn,mx;<br>  cnt=mn=mx=0;<br>  Rep(i,Size(v)) <br>    if(v[i]&lt;v[last] || v[i]==v[last] &amp;&amp; i&gt;=last)<br>    {<br>      ++cnt;<br>      if(cnt==1) <br>      {<br>        mn=mx=v[i];<br>      }<br>      if(mn&lt;v[i] &amp;&amp; v[i]&lt;mx) return false;<br>      mn&lt;?=v[i];<br>      mx&gt;?=v[i];<br>    }<br>  return true;<br>}<br> <br>vi doit(vi v)<br>{<br>  vi res;<br>  int k=-1;<br>  Rep(i,Size(v)) <br>    if(check(v,i)) <br>      if(k==-1 || v[i]&gt;v[k]) k=i;<br>  assert(k!=-1);<br>  Rep(i,Size(v)) <br>    if(!(v[i]&lt;v[k] || v[i]==v[k] &amp;&amp; i&gt;=k))<br>      res.push_back(v[i]);<br>  return res;<br>}<br> <br>struct HardDequeSort<br>{<br>  int minDeques(vi data)<br>  {<br>    int res=0;<br>    while(Size(data)) <br>    {<br>      ++res;<br>      data=doit(data);<br>    }<br>    return res;<br>  }<br>};<br></td>