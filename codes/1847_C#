<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>public class CalendarRecycle {<br>  public CalendarRecycle()<br>  {<br><br>  }<br>  public int useAgain(int year) {<br>    DateTime king = new DateTime(year,9,8,0,0,0,0);<br><br>        Console.WriteLine(king.DayOfWeek.GetHashCode());<br>        Console.WriteLine(king.DayOfWeek);<br><br>        int day = king.DayOfWeek.GetHashCode();<br><br>        bool bOrigLeap = false;<br>        if(year % 4 == 0)<br>        {<br>            if(year % 100 == 0)<br>            {<br>                if(year % 400 == 0)<br>                {<br>                    bOrigLeap = true;<br>                }<br>            }<br>            else<br>                bOrigLeap = true;<br><br>        }      <br><br>        bool bLeap = false;<br>        int current_year = year;<br>        long new_day = day;<br>        do<br>        {<br>            current_year++;<br><br>            new_day += (4*30);<br>            new_day += (7*31);<br>            bLeap = false;<br>            if(current_year % 4 == 0)<br>            {<br>                if(current_year % 100 == 0)<br>                {<br>                    if(current_year % 400 == 0)<br>                    {<br>                        bLeap = true;<br>                    }<br>                }<br>                else<br>                    bLeap = true;<br><br>            }            <br><br>            if(bLeap)<br>            {<br>                new_day += 29;<br>                Console.WriteLine("leap:" + current_year);<br>            }<br>            else<br>                new_day += 28;<br><br>         } while(day != (new_day % 7) || bLeap != bOrigLeap);<br><br>        //Console.WriteLine(new DateTime(current_year,9,8,0,0,0,0).DayOfWeek);<br><br>        return current_year;<br>  }<br>}<br><br><br>// Powered by FileEdit<br></td>