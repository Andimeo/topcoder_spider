<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;queue&gt;<br>#include &lt;climits&gt;<br>using namespace std;<br> <br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br>typedef long long ll;<br> <br>char buffer[500];<br>string sval(int num)    { sprintf(buffer, "%d", num); return buffer; }<br>int    ival(string inp) { return atoi(inp.c_str()); }<br>float  fval(string inp) { return (float)atof(inp.c_str()); }<br>double dval(string inp) { return (double)atof(inp.c_str()); }<br> <br>VS split(string inp, string sep) {<br>   VS ans;<br>   inp += sep;      // this is SO ugly...<br>   for (int i = 0, j = 0; i &lt; inp.length(); i++)<br>      if (inp[i] == sep[0]) {<br>         ans.push_back(inp.substr(j, i - j));<br>         j = i + 1;<br>      }<br>   return ans;<br>}<br> <br>// ****************************************** //<br> <br>class PartySeats {<br>   public:<br> <br>vector &lt;string&gt; seating(vector &lt;string&gt; attendees) {<br>  VS boyz, girlz;<br>  VS ret;<br>    for (int i = 0; i &lt; attendees.size(); i++) {<br>      VS temp = split(attendees[i], " ");<br>      if (temp[1] == "boy") { boyz.push_back(temp[0]); }<br>      if (temp[1] == "girl") { girlz.push_back(temp[0]); }<br>    }<br>    sort(boyz.begin(), boyz.end());<br>    sort(girlz.begin(), girlz.end());<br>    bool good = true;<br>    ret.push_back("HOST");<br>    int nb = 0;<br>    int ng = 0;<br>    for (int nums = 1; nums &lt; attendees.size() + 2; nums++) {<br>      if (nums == (attendees.size() / 2) + 1) <br>      {<br>        ret.push_back("HOSTESS");<br>      }<br>      else<br>      if (nums % 2 == 0) {<br>        if (nb &lt; boyz.size()) {<br>          ret.push_back(boyz[nb]);<br>          nb++;<br>        }<br>        else good = false;<br>      }<br>      else {<br>      if (ng &lt; girlz.size()) {<br>        ret.push_back(girlz[ng]);<br>        ng++;<br>      }<br>      else good = false;<br>    }<br>    }<br>    VS ret2;<br>    if (attendees.size() % 2 == 1) good = false;<br>    if (good) return ret;<br>    else return ret2;<br>   }<br>};<br> <br>// Powered by PopsEdit<br></td>