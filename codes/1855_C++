<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br> <br>#define REP(i,n) for(int i=0;i&lt;(n);++i)<br>#define FOR(i,a,b) for(int i=(a);i&lt;=(b);++i)<br>#define FORD(i,a,b) for(int i=(a);i&gt;=(b);--i)<br>#define FOREACH(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();++i)<br>typedef long long LL;<br>const int INF = 1000000000;<br>typedef vector&lt;int&gt; VI;<br>template&lt;class T&gt; inline int size(const T&amp;c) { return c.size(); }<br> <br>char buf1[1000];<br> <br>string i2s(int x) {<br>  sprintf(buf1,"%d",x);<br>  return buf1;<br>}<br> <br>bool name(string s) {<br>  if(size(s)&lt;2) return false;<br>  FOREACH(it,s) if(!isalpha(*it)) return false;<br>  return true;<br>}<br> <br>bool initial(string s) {<br>  if(size(s)!=2 || !isalpha(s[0]) || s[1]!='.') return false;<br>  return true;<br>}<br> <br>string f(string s) {<br>  vector&lt;string&gt; parts;<br>  if(size(s)&lt;3) return "";<br>  if(s[0]==' ' || s[size(s)-1]==' ') return "";<br>  s+=' ';<br>  string w;<br>  FOREACH(it,s) {<br>    if(*it==' ') {<br>      if(w!="") parts.push_back(w);<br>      w="";<br>    }<br>    else w+= *it;<br>  }<br>  if(size(parts)&lt;2 || size(parts)&gt;3) return "";<br>  FOREACH(it,parts) if(!name(*it) &amp;&amp; !initial(*it)) return "";<br>  if(!name(parts.back())) return "";<br>  string res;<br>  FOREACH(it,parts) {<br>    if(it!=parts.begin()) res+=' ';<br>    string s=*it;<br>    FOREACH(jt,s) *jt = tolower(*jt);<br>    s[0] = toupper(s[0]);<br>    res += s;<br>  }<br>  return res;<br>}<br> <br>struct NameCheck {<br>  // MAIN<br>  vector &lt;string&gt; formatList(vector &lt;string&gt; namelist) {<br>    vector&lt;string&gt; res;<br>    FOREACH(it,namelist) {<br>      string s = f(*it);<br>      if(s!="") res.push_back(s);<br>    }<br>    return res;<br>  }<br>  <br> <br> <br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>