<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Text.RegularExpressions;<br>using System.Collections;<br><br>public class WhatSort : IComparer {<br>    string ord;<br>    class X {<br>        public X(string n, int a, int w) {<br>            this.n = n;<br>            this.a = a;<br>            this.w = w;<br>        }<br>        public string n;<br>        public int a;<br>        public int w;<br>    }<br>    int cmp( X lhs, X rhs, char c ) {<br>        if ( c == 'N') return string.Compare(lhs.n,rhs.n);<br>        if ( c == 'W') return rhs.w-lhs.w;<br>        if ( c == 'A') return lhs.a-rhs.a;<br>        return 0;<br>    }<br>    public int Compare( object A, object B ) {<br>        X lhs = (X)A;<br>        X rhs = (X)B;<br>        foreach( char c in ord ) {<br>            int res = cmp(lhs,rhs,c);<br>            if(res != 0)<br>                return res;<br>        }<br>        return 0;<br>    }<br>    public string sortType(string[] name, int[] age, int[] wt) {<br>        X[] x = new X[name.Length];<br>        string res = null;<br>        foreach ( string ox in new String[] {"NAW","NWA","ANW","AWN","WAN","WNA"} ) {<br>            ord = ox;<br>            for( int i = 0 ; i != name.Length; i++ ) {<br>                x[i] = new X(name[i],age[i],wt[i]);<br>            }<br>            Array.Sort(x,this);<br>            bool good = true;<br>            for( int i = 0 ; good &amp;&amp; i != name.Length; i++ ) {<br>                good &amp;= ((x[i].n==name[i])&amp;&amp;(x[i].a==age[i])&amp;&amp;(x[i].w==wt[i]));<br>            }<br>            if ( good ) {<br>                if ( res == null ) {<br>                    res = ox;<br>                } else {<br>                    return "IND";<br>                }<br>            }<br>        }<br>        return res==null?"NOT":res;<br>    }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>