<td class="problemText" colspan="8" valign="middle" align="left">
            public class Orchard {<br>  public int[] nextTree(String[] orchard) {<br>    int bestX = 0, bestY = 0, best = 0;<br>    int out = 0, near = 0, con = 0;<br>    int result[] = new int[2];<br>    <br>    for (int y = 0; y &lt; orchard.length; y++) {<br>      for (int x = 0; x &lt; orchard.length; x++) {<br>        if (orchard[y].charAt(x) == '-') {<br>          out = y + 1; // north<br>          if (x + 1 &lt; out) {  //west<br>            out = x + 1;<br>          }<br>          if (orchard.length - y &lt; out) {<br>            out = orchard.length - y;<br>          }<br>          if (orchard.length - x &lt; out) {<br>            out = orchard.length - x;<br>          }<br>          <br>          near = 10000;<br>          for (int b = 0; b &lt; orchard.length; b++) {<br>            for (int a = 0; a &lt; orchard.length; a++) {<br>              if (orchard[b].charAt(a) == 'T') {<br>                if (abs(x - a) + abs(y - b) &lt; near) {<br>                  near = abs(x - a) + abs(y - b);<br>                }<br>              }<br>            }<br>          }<br>        }<br>        <br>        if (out &lt; near) {<br>          con = out;<br>        }<br>        else {<br>          con = near;<br>        }<br>        <br>        if (con &gt; best) {<br>          best = con;<br>          bestX = x;<br>          bestY = y;<br>        }<br>      }<br>    }<br>    <br>    result[0] = bestY + 1;<br>    result[1] = bestX + 1;<br>    <br>    return result;<br>  }<br>  <br>  public int abs(int n) {<br>    if (n &lt; 0) {<br>      return (0 - n);<br>    }<br>    else {<br>      return n;<br>    }<br>  }<br>}<br> <br>// Powered by PopsEdit<br></td>