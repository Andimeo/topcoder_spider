<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;iostream&gt;<br>#include &lt;strstream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cmath&gt;<br>using namespace std;<br> <br>int len[50][50];<br>int pad[50][50];<br>int n;<br> <br> <br> <br>class ShortPalindromes {<br>  public:<br>  string shortest(string base) {<br>    string ans = "";<br>    int i,j,l;<br>    <br>    n = base.size();<br>    for(i = 0; i &lt; n; i++){<br>      len[i][i] = 1;<br>      pad[i][i] = 4;<br>      len[i+1][i] = 0;<br>      pad[i+1][i] = 4;<br>    }<br>    <br>    for(l = 2; l &lt;= n; l++){<br>      for(i = 0; i &lt;= n - l; i++){<br>        char h, t;<br>        j = i + l - 1;<br>        h = base[i];<br>        t = base[j];<br>        if(h == t){<br>          len[i][j] = len[i+1][j-1] + 2;<br>          pad[i][j] = 3;<br>        }<br>        else{<br>          if(len[i+1][j] &lt; len[i][j-1]){<br>            len[i][j] = len[i+1][j] + 2;<br>            pad[i][j] = 1;<br>          }<br>          if(len[i+1][j] &gt; len[i][j-1]){<br>            len[i][j] = len[i][j-1] + 2;<br>            pad[i][j] = 2;<br>          }<br>          if(len[i+1][j] == len[i][j-1]){<br>            if(h &lt; t){<br>              len[i][j] = len[i+1][j] + 2;<br>              pad[i][j] = 1;<br>            }<br>            else{<br>              len[i][j] = len[i][j-1] + 2;<br>              pad[i][j] = 2;<br>            }<br>          }<br>        }<br>      }<br>    }<br>    <br>    //cout&lt;&lt;"end";<br>    <br>    i = 0;<br>    j = n - 1;<br>    l = 0;<br>    while(i &lt; j){<br>      <br>      switch(pad[i][j]){<br>        case 1: ans = ans + base[i]; i++; l++; break;<br>        case 2: ans = ans + base[j]; j--; l++; break;<br>        case 3: ans = ans + base[i]; i++; j--; l++; break;<br>        case 4: break;<br>      }<br>    }<br>    if(i==j) ans += base[i];<br>    for(i = l - 1; i &gt;= 0; i--){<br>      ans += ans[i];<br>    }<br>    return ans;<br>  <br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>