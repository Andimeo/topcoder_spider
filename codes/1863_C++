<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;  typedef vector&lt;vector&lt;int&gt; &gt; VVI;<br>typedef vector&lt;string&gt; VS;  typedef vector&lt;vector&lt;string&gt; &gt; VVS;<br>typedef signed long long i64;  typedef unsigned long long u64;<br><br>int nd(i64 n) {<br>  if( n &lt; 10 ) return 1;<br>  return 1+nd(n/10);<br>}<br><br>int dig(i64 n, int k) {<br>  if( k == nd(n) ) return n%10;<br>  return dig(n/10, k);<br>}<br><br>int do1(i64 k) {<br>  i64 x, n;<br>  for( n = 1, x = 1; ; ) {<br>    while( x*1000000 &lt; k &amp;&amp; nd(n+1000000) == nd(n) ) {<br>      n += 1000000;<br>      k -= x*1000000;<br>    }<br>    while( x*10000 &lt; k &amp;&amp; nd(n+10000) == nd(n) ) {<br>      n += 10000;<br>      k -= x*10000;<br>    }<br>    while( x*100 &lt; k &amp;&amp; nd(n+100) == nd(n) ) {<br>      n += 100;<br>      k -= x*100;<br>    }<br>    if( x &gt;= k ) break;<br>    k -= x;<br>    x = nd(++n);<br>  }<br>  return dig(n, k);<br>}<br><br>int do2(i64 k) {<br>  i64 x, n;<br>  for( n = 1, x = 1; ; ) {<br>    while( x*1000000 &lt; k &amp;&amp; nd((n+1000000)*(n+1000000)) == nd(n*n) ) {<br>      n += 1000000;<br>      k -= x*1000000;<br>    }<br>    while( x*10000 &lt; k &amp;&amp; nd((n+10000)*(n+10000)) == nd(n*n) ) {<br>      n += 10000;<br>      k -= x*10000;<br>    }<br>    while( x*100 &lt; k &amp;&amp; nd((n+100)*(n+100)) == nd(n*n) ) {<br>      n += 100;<br>      k -= x*100;<br>    }<br>    if( x &gt;= k ) break;<br>    k -= x;<br>    n++;<br>    x = nd(n*n);<br>  }<br>  return dig(n*n, k);<br>}<br><br>class LongNumber {<br>public:<br>int findDigit(i64 k) {<br>  int ret, x;<br><br>  ret = do1(k)+do2(k);<br>  for(;;) {<br>    k++;<br>    x = do1(k)+do2(k);<br>    if( x &gt;= 10 ) {ret++; break;}<br>    if( x &lt; 9 ) break;<br>  }<br>  return ret%10;<br>}<br>};<br><br><br>// Powered by FileEdit<br></td>