<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Text.RegularExpressions;<br>using System.Collections;<br><br>public class CityLink {<br>    int N;<br>    void go( bool[,] g, bool[] seen, int n ) {<br>        if ( !seen[n] ) {<br>            seen[n] = true;<br>            for ( int i = 0 ; i != N; i++ ) {<br>                if ( g[n,i] )<br>                    go( g, seen, i );<br>            }<br>        }<br>    }<br>    public int timeTaken(int[] x, int[] y) {<br>        N = x.Length;<br>        int[,] d = new int[N,N];<br>        Hashtable ht = new Hashtable();<br>        for ( int i = 0; i != N; i++ )<br>            for ( int j = 0 ; j != N; j++ ) {<br>                if ( x[i]==x[j] ) {<br>                    d[i,j] = (Math.Abs(y[i]-y[j])+1)/2;<br>                } else if (y[i]==y[j]) {<br>                    d[i,j] = (Math.Abs(x[i]-x[j])+1)/2;<br>                } else {<br>                    d[i,j] = Math.Max( Math.Abs(x[i]-x[j]), Math.Abs(y[i]-y[j]));<br>                }<br>                ht[d[i,j]]=null;<br>            }<br>        int[] keys = new int[ht.Count];<br>        ht.Keys.CopyTo(keys,0);<br>        Array.Sort(keys);<br>        bool[,] g = new bool[N,N];<br>        foreach ( int t in keys ) {<br>            for( int i = 0 ; i != N; i++ )<br>                for ( int j = 0 ; j != N; j++ )<br>                    g[i,j] = d[i,j]&lt;=t;<br>            bool[] seen = new bool[N];<br>            go( g, seen, 0);<br>            bool conn = true;<br>            for( int i = 0 ; conn &amp;&amp; i != N; i++)<br>                conn = seen[i];<br>            if ( conn ) return t;<br>        }<br>        return -1;<br>    }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>