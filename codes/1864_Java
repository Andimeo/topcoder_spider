<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class CityLink {<br>  class con implements Comparable {<br>    public int tm;<br>    int c1, c2;<br>    public int compareTo( Object b) {<br>      int t = tm - ((con)b).tm;<br>      if (t != 0) return t;<br>      t = c1 - ((con)b).c1;<br>      if (t != 0) return t;<br>      return c2 - ((con)b).c2;<br>    }<br>    public boolean equals(Object b) { return compareTo(b) == 0; }<br>  }<br>  public int timeTaken(int[] x, int[] y) {<br>          int n = x.length;<br>          TreeSet cons = new TreeSet();<br>          for (int i=0;i&lt;n;i++)<br>            for (int j=i+1;j&lt;n;j++) {<br>              con c = new con();<br>              c.c1 = i;<br>              c.c2 = j;<br>              int d;<br>              if (x[i] == x[j])<br>                d = (Math.abs(y[i] - y[j]) + 1)/2;<br>              else if (y[i] == y[j])<br>                d = (Math.abs(x[i] - x[j]) + 1)/2;<br>              else<br>                d = Math.max(Math.abs(x[i] - x[j]), Math.abs(y[i] - y[j]));<br>              c.tm = d;<br>              cons.add(c);<br>            }<br>          Set[] nodes = new Set[n];<br>          for (int i=0;i&lt;n;i++) {<br>            nodes[i] = new HashSet();<br>            nodes[i].add(new Integer(i));<br>          }<br>          int tm=0;<br>          while (true) {<br>            if (nodes[0].size() == n) return tm;<br>            con c = (con)cons.first();<br>            cons.remove(c);<br>            tm = c.tm;<br>            Integer b = new Integer(c.c2);<br>            Set s = nodes[c.c1];<br>            if (s.contains(b)) continue;<br>            nodes[c.c2].addAll(s);<br>            for (Iterator iter = s.iterator(); iter.hasNext(); ) {<br>              Integer item = (Integer)iter.next();<br>              nodes[item.intValue()] = nodes[c.c2];<br>            }<br>          }<br>  }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>