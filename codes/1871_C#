<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Collections;<br><br>public class ShuffleMethod {<br>  int n;<br>  int [] t;<br>  int [] o;<br>  int [] m;<br><br>  bool go(int i, int j)<br>  {<br>    if (o[i] == j) return true;<br>    if (o[i] != 0) return false;<br><br>    o[i] = j;<br>        bool b = go(j,t[i]);<br>    if (!b)<br>      o[i] = 0; <br><br><br>    return b;<br>  }<br><br>  bool explore(int i, int k)<br>  {<br>    while( (i&lt;=n) &amp;&amp; (o[i] != 0)) i++;<br>    if (i &gt; n)<br>      return true;<br><br>    for(int j = 1; j&lt;=n; j++)<br>    {<br><br>      if (go(i,j)) <br>      {<br>        if (explore(i+1, k+1))<br>          return true;<br>    <br>        int z=o[i];<br>        for(int l = i; l != i; l = z)<br>        {<br>          z = o[l];<br>          o[l] = 0;<br>        }<br>      }<br>    }<br>    return false;  <br>  }<br><br>  public int[] oneTime(int[] two) {<br>    n = two.Length;<br>    t = new int [n+1];<br>    m = new int [n+1];<br><br>    two.CopyTo(t, 1);<br><br>    <br>    o = new int[n+1];<br><br><br>    if (!explore(1,1))<br>      return new int [] {};<br><br>    int [] sol = new int [n];<br><br>    for(int i = 0; i&lt;n; i++) sol[i] = o[i+1];<br><br>    return sol;<br>  }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester for c# [12-oct-2003]<br>// Powered by CodeProcessor<br></td>