<td class="problemText" colspan="8" valign="middle" align="left">
            /*/*///*/*/ Powered by radedit!            /*/*/*/*/*/ ;<br>/*/*//*/*/  import java . util .           /*/*/*/*/*/ ;<br>/*/*//*/*/  import java . lang . reflect . /*/*/*/*/*/ ;<br>public class DirectoryTree {<br>   boolean ddd = false ;<br>String[] s2sa(String s) {<br>  StringTokenizer t=new StringTokenizer(s.trim(), "/");<br>  String[]r=new String[t.countTokens()];<br>  int i=0;<br>  while(t.hasMoreTokens())try{<br>     r[i++]=t.nextToken();<br>  }catch(Exception e){};<br>  return r;<br>}<br> <br>  public String[] display(String[] files) {<br>    int i, j, k ;<br>    String[] res = new String[200] ;<br>    Arrays.sort(files) ;<br>    int at = 0 ;<br>    res[0] = "ROOT" ;<br>    String[] prev = new String[0] ;<br>    int out = 1 ;<br>    for (i=0; i&lt;files.length; i++) {<br>      String s = files[i] ;<br>      String[] f = s2sa(s) ;<br>      for (j=0; j&lt;prev.length &amp;&amp; j &lt; f.length &amp;&amp; prev[j].equals(f[j]); j++) {<br>      }<br>      for (k=out-1; k&gt;0; k--) {<br>  if (res[k].charAt(2*j) == ' ') {<br>    res[k] = res[k].substring(0, 2*j) + "|" +<br>      res[k].substring(2*j+1) ;<br>  } else {<br>    break ;<br>  }<br>      }<br>      for (k=j; k&lt;f.length; k++) {<br>  String r = "" ;<br>  for (int kk=0; kk&lt;k; kk++) {<br>    r += "  " ;<br>  }<br>  r += "+-" ;<br>  r += f[k] ;<br>  res[out++] = r ;<br>      }<br>      prev = f ;<br>    }<br>    String[] rr = new String[out] ;<br>    for (i=0; i&lt;out; i++) {<br>      rr[i] = res[i] ;<br>    }<br>    return rr ;<br>  }<br> <br>  static void pp(Object o) { System.out.println(o) ; }<br>}<br></td>