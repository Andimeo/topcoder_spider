<td class="problemText" colspan="8" valign="middle" align="left">
            #pragma warning( disable : 4786 )<br><br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;functional&gt;<br>#include &lt;deque&gt;<br><br>using namespace std;<br><br>vector&lt; string &gt; tokenize( string in, string kar ) {<br>  string::iterator cp = in.begin();<br>  vector&lt; string &gt; oot;<br>  while( cp != in.end() ) {<br>    while( cp != in.end() &amp;&amp; count( kar.begin(), kar.end(), *cp ) )<br>      cp++;<br>    if( cp != in.end() )<br>      oot.push_back( string( cp, find_first_of( cp, in.end(), kar.begin(), kar.end() ) ) );<br>    cp = find_first_of( cp, in.end(), kar.begin(), kar.end() );<br>  };<br>  return oot;<br>};<br><br>vector&lt; int &gt; sti( const vector&lt; string &gt; &amp;foo ) {<br>  int i;<br>  vector&lt; int &gt; bar;<br>  for( i = 0; i &lt; foo.size(); i++ ) {<br>    bar.push_back( atoi( foo[ i ].c_str() ) );<br>  }<br>  return bar;<br>};<br><br>class MineField {<br>  public:<br>  vector &lt;string&gt; getMineField(string mineLocations) {<br>    vector&lt; int &gt; ml = sti( tokenize( mineLocations, "(,)" ) );<br>    vector&lt; string &gt; malk( 9, "000000000" );<br>    for( int i = 0; i &lt; ml.size(); i += 2 ) {<br>      swap( ml[ i ], ml[ i + 1 ] );<br>      malk[ ml[ i + 1 ] ][ ml[ i ] ] = 'M';<br>      for( int y = ml[ i + 1 ] - 1; y &lt;= ml[ i + 1 ] + 1; y++ ) {<br>        for( int x = ml[ i ] - 1; x &lt;= ml[ i ] + 1; x++ ) {<br>          if( x &lt; 0 || y &lt; 0 || x &gt;= 9 || y &gt;= 9 )<br>            continue;<br>          if( malk[ y ][ x ] != 'M' )<br>            malk[ y ][ x ]++;<br>        }<br>      }<br>    }<br>    return malk;<br>  }<br>};<br><br><br><br>// Powered by FileEdit<br></td>