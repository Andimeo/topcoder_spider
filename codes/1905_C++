<td class="problemText" colspan="8" valign="middle" align="left">
            using namespace std;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;string.h&gt;<br><br>const int MAXS = 300;<br><br>class MakeUnique {<br>public:<br>    string eliminated(string original) {<br>  const char *buf = original.c_str();<br>  int n = original.length();<br>  int appears[26];<br>  for (int i = 0; i &lt; 26; i++)<br>      appears[i] = 0;<br>  for (int i = 0; buf[i]; i++)<br>      appears[buf[i] - 'A']++;<br>  <br>  int la = 0;<br>  for (int i = 0; i &lt; 26; i++)<br>      if (appears[i])<br>    la = i + 'A';<br><br><br>  int best_cost = 10000;<br>  char best_str[MAXS];<br><br>  int used[MAXS];<br>  for (int k = 0; k &lt; n; k++)<br>      if (buf[k] == la) {<br>    for (int i = 0; i &lt; n; i++)<br>        used[i] = 0;<br>    used[k] = 1;<br><br>    int nl = la;<br>    int j = k;<br>    while (1) {<br>        nl--;<br>        while (nl &gt;= 'A' &amp;&amp; appears[nl-'A'] == 0)<br>      nl--;<br>        if (nl &lt; 'A')<br>      break;<br>        while (j &gt;= 0 &amp;&amp; buf[j] != nl)<br>      j--;<br>        if (j &lt; 0)<br>      goto fail;<br>        used[j] = 1;<br>    }<br><br>    char new_str[MAXS];<br>    int f;<br>    f = -1;<br>    for (int i = 0; i &lt; n; i++)<br>        if (used[i]) {<br>      new_str[i] = buf[i];<br>      if (f == -1)<br>          f = i;<br>        }<br>        else<br>      new_str[i] = '.';<br>    new_str[n] = '\0';<br>    <br>    <br>    int cost;<br>    cost = k - f;<br><br>    if (best_cost &gt;= cost) {<br>        best_cost = cost;<br>        strcpy( best_str, new_str );<br>    }<br>      fail:;<br>      }<br>  <br>  if (best_cost &lt; 1000)<br>      return best_str;<br>  else<br>      return "";<br>    }<br>};<br><br><br><br>// Powered by FileEdit<br></td>