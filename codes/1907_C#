<td class="problemText" colspan="8" valign="middle" align="left">
            using System; using System.Collections; using System.Text; public class WaterPressure {<br>public int howLong(string[] layout) {<br>X=layout[0].Length;<br>Y=layout.Length;<br>grid = new char[X,Y];<br>for (int x=0; x&lt;X; x++)<br> for (int y=0; y&lt;Y; y++)<br>  grid[x,y] = layout[y][x];<br> <br>int[,] xa = new int[2500,10];<br>int[,] ya = new int[2500,10];<br>int[] ct = new int[10];<br> <br>for (int x=0; x&lt;X; x++)<br> for (int y=0; y&lt;Y; y++)<br>  {<br>  char c = grid[x,y];<br>  if (c &gt;= '0' &amp;&amp; c &lt;= '9')<br>   {<br>   int d = (int)c - 48;<br>   xa[ct[d],d] = x;<br>   ya[ct[d],d] = y;<br>   ct[d]++;<br>   }<br>  }<br> <br>int[] xs = new int[2500];<br>int[] ys = new int[2500];<br> <br>while (true)<br> {<br> water++;<br> int thresh = (water-1) / wet;<br> if (thresh &gt; 9) thresh = 9;<br> char tc = (char)(thresh+48);<br> int count = 0;<br> <br> for (int i=0; i&lt;=thresh; i++)<br>  for (int j=0; j&lt;ct[i]; )<br>   {<br>   int x = xa[j,i];<br>   int y = ya[j,i];<br>   if ( (x &gt; 0   &amp;&amp; grid[x-1,y] == '.') ||<br>        (x &lt; X-1 &amp;&amp; grid[x+1,y] == '.') ||<br>        (y &gt; 0   &amp;&amp; grid[x,y-1] == '.') ||<br>        (y &lt; Y-1 &amp;&amp; grid[x,y+1] == '.') )<br>    {<br>    xs[count] = x; ys[count] = y;<br>    count++;<br>    ct[i]--;<br>    xa[j,i] = xa[ct[i],i];<br>    ya[j,i] = ya[ct[i],i];<br>    }<br>   else<br>    j++;<br>   }<br> <br> /*<br> int remaining = 0;<br> for (int x=0; x&lt;X; x++)<br>  for (int y=0; y&lt;Y; y++)<br>   {<br>   char c = grid[x,y];<br>   if (c &gt;= '0' &amp;&amp; c &lt;= '9')<br>    remaining++;<br>   if (c &gt;= '0' &amp;&amp; c &lt;= tc)<br>    {<br>    if ( (x &gt; 0   &amp;&amp; grid[x-1,y] == '.') ||<br>         (x &lt; X-1 &amp;&amp; grid[x+1,y] == '.') ||<br>         (y &gt; 0   &amp;&amp; grid[x,y-1] == '.') ||<br>         (y &lt; Y-1 &amp;&amp; grid[x,y+1] == '.') )<br>     {<br>     xs[count] = x; ys[count] = y;<br>     count++;<br>     }<br>    }<br>   }<br> <br> if (remaining &lt;= count) return time;<br> */<br> <br> int rem = 0;<br> for (int i=0; i&lt;=9; i++)<br>  rem += ct[i];<br> if (rem &lt;= 0) return time;<br> <br> for (int i=0; i&lt;count; i++)<br>  grid[xs[i],ys[i]] = '.';<br> <br> if (thresh &gt;= 9 &amp;&amp; count == 0) break;<br> <br> wet += count;<br> time++;<br> }<br> <br>return -1;<br>}<br> <br>char[,] grid;<br>int X,Y;<br>int wet = 1;<br>int water = 1;<br>int time = 0;<br> <br> <br>void WR(String s) { Console.Write(s); }<br>void WR(Object x, params object[] p) { Console.Write(x.ToString(), p); }<br> <br>void WL(Object x, params object[] p) { Console.WriteLine(x.ToString(), p); }<br>void WL() { WL(""); }<br> <br>//void WS(IEnumerable c) { foreach (Object x in c) WR(x.ToString() + " "); }<br>void WS(params Object[] c) { foreach (Object x in c) WR(x.ToString() + " "); }<br>void WS(int[] ar, int X)<br> { for (int x=0; x&lt;X; x++) WS(ar[x]); WL(); }<br>void WS(int[,] ar, int X, int Y)<br> { for (int y=0; y&lt;Y; y++) { for (int x=0; x&lt;X; x++) WS(ar[x,y]); WL(); }}<br> <br>void MATCH(String lbl, Object x, Object y)<br> { if (!x.Equals(y)) throw new Exception(lbl + String.Format(" expected [{0}], got [{1}]", x, y)); }<br> <br>void MATCH(ICollection x, ICollection y)<br> {<br> MATCH("count", x.Count, y.Count);<br> }<br>}<br></td>