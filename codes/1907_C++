<td class="problemText" colspan="8" valign="middle" align="left">
            using namespace std;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br> <br>const int MAXN = 52;<br> <br>int R, C;<br>int grid[MAXN][MAXN];<br>int flood[MAXN][MAXN];<br>int newflood[MAXN][MAXN];<br> <br>class WaterPressure {<br>public:<br>    int howLong(vector &lt;string&gt; a) {<br>  R = a.size() + 2;<br>  C = a[0].length() + 2;<br>  for (int i = 0; i &lt; R; i++)<br>      for (int j = 0; j &lt; C; j++)<br>    grid[i][j] = -1;<br>  for (int i = 1; i &lt; R - 1; i++)<br>      for (int j = 1; j &lt; C - 1; j++) {<br>    if ('0' &lt;= a[i-1][j-1] &amp;&amp; a[i-1][j-1] &lt;= '9')<br>        grid[i][j] = a[i-1][j-1] - '0';<br>      }<br>  <br>  for (int i = 0; i &lt; R; i++)<br>      for (int j = 0; j &lt; C; j++)<br>    flood[i][j] = 0;<br>  flood[1][1] = 1;<br>  <br>  int nflood = 1;<br>  int total_volume = 1;<br> <br>  int time = 0;<br> <br>  while (1) {<br>      int keep = 0;<br> <br>      // get more water<br>      total_volume ++;<br>      <br>      // flood new squares<br>      for (int i = 0; i &lt; R; i++)<br>    for (int j = 0; j &lt; C; j++)<br>        newflood[i][j] = 0;<br> <br>      for (int i = 1; i &lt; R-1; i++)<br>    for (int j = 1; j &lt; C-1; j++)<br>        if (grid[i][j] != -1) {<br>      int dx[4] = {1, 0, -1, 0};<br>      int dy[4] = {0, 1, 0, -1};<br>      int hit = 0;<br>      for (int d = 0; d &lt; 4; d++)<br>          if (flood[i+dx[d]][j+dy[d]])<br>        hit = 1;<br>      if (hit)<br>          keep = 1;<br>      if (hit &amp;&amp; (grid[i][j] * nflood &lt; total_volume))<br>          newflood[i][j] = 1;<br>        }<br> <br>      for (int i = 0; i &lt; R; i++)<br>    for (int j = 0; j &lt; C; j++)<br>        if (newflood[i][j]) {<br>      flood[i][j] = 1;<br>      grid[i][j] = -1;<br>      nflood++;<br>        }<br>      <br>      if (!keep)<br>    break;<br>      <br>      time++;<br>  }<br>  <br>  int all = 1;<br>  for (int i = 0; i &lt; R; i++)<br>      for (int j = 0; j &lt; C; j++)<br>    if (grid[i][j] &gt;= 0)<br>        all = 0;<br>  <br>  if (all)<br>      return time - 1;<br>  else<br>      return -1;<br>    }<br>};<br> <br> <br>// Powered by FileEdit<br></td>