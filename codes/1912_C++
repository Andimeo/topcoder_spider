<td class="problemText" colspan="8" valign="middle" align="left">
            using namespace std;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;string.h&gt;<br><br>const double INF = 1.0E10;<br><br>double memo[32][32];<br><br>class NoMo {<br>public:<br>    double avg_m( int a, int b ) {<br>  if (memo[a][b] &lt; INF / 2)<br>      return memo[a][b];<br><br>  if (a == 0) {<br>      return b - 1;<br>  }<br>  if (b == 0) {<br>      return a - 1;<br>  }<br>  double tot = a + b;<br>  double answer;<br>  answer = a / tot * (avg_m( a - 1, b ) + ((a - 1 - b) / (tot - 1)))<br>      +    b / tot * (avg_m( a, b - 1 ) + ((b - 1 - a) / (tot - 1)));<br>  memo[a][b] = answer;<br>  return answer;<br>    }<br><br>    double momentum(string game) {<br>  const char *buf = game.c_str();<br>  if (game.length() == 0)<br>      return 0;<br>  <br>  // compute m<br>  int m = 0;<br>  int a = 0;<br>  int b = 0;<br>  for (int i = 0; i &lt; game.length(); i++)<br>      if (buf[i] == 'A')<br>    a++;<br>      else<br>    b++;<br>  for (int i = 0; i &lt; game.length() - 1; i++)<br>      m += (buf[i] == buf[i+1]) ? 1 : -1;<br>  <br>  for (int i = 0; i &lt; 32; i++)<br>      for (int j = 0; j &lt; 32; j++)<br>    memo[i][j] = INF;<br><br>  return m - avg_m( a, b );<br>    }<br>};<br><br><br><br>// Powered by FileEdit<br></td>