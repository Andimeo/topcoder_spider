<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cmath&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;algorithm&gt;<br> <br>#define iis istringstream<br>#define ss  stringstream<br> <br>using namespace std;<br> <br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cmath&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;algorithm&gt;<br> <br>#define iis istringstream<br>#define ss  stringstream<br> <br>using namespace std;<br> <br> <br> <br>class OldestOne<br>{<br>public:<br>string oldest(vector &lt;string&gt; data)<br>{<br>   int old = -1;<br>   int i,j,k;<br>   string res;<br>   for (i = 0;i &lt; data.size();i++)<br>   {<br>      j = 0;<br>      char n[1000];<br> <br>      while (data[i][j] == ' ') j++;<br>      k = 0;<br>      while (!isdigit(data[i][j])) { n[k++] = data[i][j++]; }<br>      k--;<br>      while (n[k] == ' ') k--;<br>      n[k+1] = 0;<br>      char nn[100];<br>      k = 0;<br>      while (isdigit(data[i][j])) nn[k++] = data[i][j++];<br>      nn[k] = 0;<br>      int w = atoi(nn);<br>      if (w &gt; old)<br>      {<br>         res = string(n);<br>         old = w;<br>      }<br>   }<br>   return res;<br>}<br> <br>};<br></td>