<td class="problemText" colspan="8" valign="middle" align="left">
            #pragma warning( disable : 4786 )<br><br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;functional&gt;<br>#include &lt;deque&gt;<br><br>using namespace std;<br><br>class Animation {<br>  public:<br>  vector &lt;string&gt; animate(int speed, string init) {<br>    string left;<br>    string right;<br>    for( int i = 0; i &lt; init.size(); i++ ) {<br>      switch( init[ i ] ) {<br>      case '.':<br>        left += '.';<br>        right += '.';<br>        break;<br>      case 'R':<br>        left += '.';<br>        right += 'X';<br>        break;<br>      case 'L':<br>        left += 'X';<br>        right += '.';<br>        break;<br>      }<br>    }<br>    vector&lt; string &gt; oot;<br>    while( 1 ) {<br>      string merg;<br>      for( int i = 0; i &lt; left.size(); i++ ) {<br>        if( left[ i ] != '.' || right[ i ] != '.' )<br>          merg += 'X';<br>          else<br>          merg += '.';<br>      };<br>      oot.push_back( merg );<br>      for( int i = 0; i &lt; speed; i++ ) {<br>        left.erase( left.begin() );<br>        left += '.';<br>        right.erase( right.end() - 1 );<br>        right = '.' + right;<br>      };<br>      if( count( merg.begin(), merg.end(), 'X' ) == 0 )<br>        break;<br>    }<br>    return oot;<br>  }<br>};<br><br><br><br>// Powered by FileEdit<br></td>