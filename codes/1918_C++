<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br> <br>#define REP(i,n) for(int i=0;i&lt;(n);++i)<br>#define FOR(i,a,b) for(int i=(a);i&lt;=(b);++i)<br>#define FORD(i,a,b) for(int i=(a);i&gt;=(b);--i)<br>#define FOREACH(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();++i)<br>#define ALL(x) (x).begin(),(x).end()<br>typedef long long LL;<br>const int INF = 1000000000;<br>typedef vector&lt;int&gt; VI;<br>template&lt;class T&gt; inline int size(const T&amp;c) { return c.size(); }<br> <br>char buf1[1000];<br> <br>string i2s(int x) {<br>  sprintf(buf1,"%d",x);<br>  return buf1;<br>}<br> <br> <br>struct FlowerGarden {<br>  // MAIN<br>  vector &lt;int&gt; getOrdering(vector &lt;int&gt; height, vector &lt;int&gt; bloom, vector &lt;int&gt; wilt) {<br>    int n = size(height);<br>    vector&lt;bool&gt; done(n,false);<br>    vector&lt;int&gt; res(n);<br>    REP(i,n) {<br>      int best = -1;<br>      REP(j,n) if(!done[j]) {<br>        bool ok = true;<br>        REP(k,n) if(k!=j &amp;&amp; !done[k] &amp;&amp; height[k]&lt;height[j] &amp;&amp;<br>            bloom[k]&lt;=wilt[j] &amp;&amp; wilt[k]&gt;=bloom[j]) ok = false;<br>        if(ok &amp;&amp; (best==-1 || height[j]&gt;height[best])) best=j;<br>      }<br>      res[i] = height[best];<br>      done[best] = true;<br>    }<br>    return res;<br>  }<br>  <br> <br> <br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>