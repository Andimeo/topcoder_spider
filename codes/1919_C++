<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;set&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br> <br>using namespace std;<br>typedef vector&lt;int&gt; VI;<br> <br>class WindowWasher<br>{<br>public:<br>  int fastest(int width, int height, VI washTimes);<br>};<br> <br>int max(int x, int y) { return x&gt;y ? x : y; }<br> <br>int find_better(const VI&amp; washTimes, int maxtime, int width)<br>{<br>  int tot_columns = 0;<br>  int tot_time = 0;<br>  for (int i=0; i&lt;washTimes.size(); ++i) {<br>    int columns = (maxtime-1)/washTimes[i];<br>    tot_columns += columns;<br>    tot_time = max(tot_time, columns*washTimes[i]);<br>  }<br>  if (tot_time&gt;=maxtime) return 0;<br>  if (tot_columns&lt;width) return 0;<br>  return tot_time;<br>}<br> <br>int WindowWasher::fastest(int width, int height, VI washTimes)<br>{<br>  sort(washTimes.begin(), washTimes.end());<br>  int maxtime = width*washTimes[0];<br>  for(;;) {<br>    int newtime = find_better(washTimes, maxtime, width); // not optimistic<br>    if (newtime==0) return maxtime*height;<br> <br>    maxtime=newtime;<br>  }<br>}<br></td>