<td class="problemText" colspan="8" valign="middle" align="left">
            using System; using System.Collections; using System.Text; public class WhichData {<br>public int[] bestVariance(int[] samples, int num, int den) {<br>Array.Sort(samples);<br>int N = samples.Length;<br>ArrayList best = null;<br>double bv = 0;<br>double want = (double)num / (double)den;<br>for (int x=1; x&lt;(1&lt;&lt;N); x++)<br> {<br> ArrayList cur = new ArrayList();<br> double mean = 0;<br> int n = 0;<br> for (int i=0; i&lt;N; i++)<br>  if ((x &amp; (1&lt;&lt;i)) != 0)<br>   { n++; mean += samples[i]; cur.Add(samples[i]); }<br> <br> mean /= n;<br> double varsum = 0;<br> for (int i=0; i&lt;N; i++)<br>  if ((x &amp; (1&lt;&lt;i)) != 0)<br>   {<br>   double y = mean - samples[i];<br>   varsum += y*y;<br>   }<br> <br> double variance = varsum / n;<br> bool doit = (best == null);<br> double v1 = Math.Abs(variance-want);<br> double v2 = Math.Abs(bv-want);<br> if (Math.Abs(v1-v2) &lt;= 1E-9)<br>  v1 = v2;<br> // WS(v1, v2); WL();<br> if (!doit &amp;&amp; v1 &lt; v2)<br>  {<br>  doit = true;<br>  if (n &gt;= 5555) WL("second reason");<br>  }<br> if (!doit &amp;&amp; v1 == v2 &amp;&amp; Better(cur,best))<br>  {<br>  doit = true;<br>  if (n &gt;= 5555) WL("third reason");<br>  }<br> if (doit)<br>  {<br>  if (n &gt;= 5555)<br>   {<br>   WS(x, n, mean, varsum, variance, want); WL();<br>   foreach (int z in cur) WS(z);<br>   WL();<br>   WL();<br>   }<br>  best = cur;<br>  bv = variance;<br>  }<br> }<br> <br>return (int[]) best.ToArray(typeof(int));<br>}<br> <br>bool Better(ArrayList a, ArrayList b)<br>{<br>for (int i=0; i&lt;Math.Min(a.Count,b.Count); i++)<br> {<br> int d = (int)a[i] - (int)b[i];<br> if (d &lt; 0)<br>  {<br> // WS("returning true:", i, d); WL();<br>  return true;<br>  }<br> if (d &gt; 0)<br>  {<br>//  WS("returning false:", i, d); WL();<br>  return false;<br>  }<br> }<br> <br>//WS(a.Count, b.Count); WL();<br>return a.Count &lt; b.Count;<br>}<br> <br> <br>static void WR(String s) { Console.Write(s); }<br>static void WR(Object x, params object[] p) { Console.Write(x.ToString(), p); }<br>static void WL(Object x, params object[] p) { Console.WriteLine(x.ToString(), p); }<br>static void WL() { WL(""); }<br>static void WS(params Object[] c) { foreach (Object x in c) WR(x.ToString() + " "); }<br>static void WS(int[] ar, int X) { for (int x=0; x&lt;X; x++) WS(ar[x]); WL(); }<br>static void WS(int[,] ar, int X, int Y) { for (int y=0; y&lt;Y; y++) { for (int x=0; x&lt;X; x++) WS(ar[x,y]); WL(); }}<br>void MATCH(String lbl, Object x, Object y)<br> { if (!x.Equals(y)) throw new Exception(lbl + String.Format(" expected [{0}], got [{1}]", x, y)); }<br>void MATCH(ICollection x, ICollection y) {<br> MATCH("count", x.Count, y.Count);<br> int i=0; ArrayList ay = new ArrayList(y);<br> foreach (Object ox in x) { MATCH(i.ToString(), ox, ay[i]); i++; }<br>}}<br></td>