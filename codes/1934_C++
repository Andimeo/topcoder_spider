<td class="problemText" colspan="8" valign="middle" align="left">
            #line 2 "problem.cpp"<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstring&gt;<br>#include &lt;climits&gt;<br>#include &lt;cmath&gt;<br>#include &lt;sstream&gt;<br>using namespace std;<br>#define BAE(C) (C).begin(),(C).end()<br>#define FOREACH(I,C,T) for (T::iterator I = (C).begin(); I != (C).end(); ++I)<br>#define FORA(I,C) for (int I = 0; I &lt; (C).size(); I++)<br>#define FORI(I,E) for (int I = 0, end434 = E; I &lt; end434; I++)<br><br>struct AustrianLotto {<br>  vector &lt;int&gt; evaluate(string drawing, vector &lt;string&gt; picks) {<br>    vector&lt;int&gt; res(7,0);<br>    vector&lt;int&gt; t2 = sti(tokenize(drawing," "));<br>    FORA(i,picks) {<br>      vector&lt;int&gt; tmp = sti(tokenize(picks[i]," "));<br>      int numm = 0;<br>      FORA(j,tmp) {<br>        if (myFind(t2,tmp[j])) numm++;<br>      }<br>      res[numm]++;<br>    }<br>    return res;<br>  }<br><br>   template&lt;class T,class V&gt;<br>   bool myFind(T &amp;src,V &amp;value)<br>   {<br>      if (find(BAE(src),value) != src.end()) return true;<br>      return false;<br>   }<br>   <br>   vector&lt;string&gt; tokenize(string in,string tok) {<br>      string::iterator cp = in.begin();<br>      vector&lt;string&gt; res;<br>      while (cp != in.end()) {<br>         while (cp != in.end() &amp;&amp; count(BAE(tok),*cp)) cp++;<br>         string::iterator tmp = find_first_of(cp,in.end(),BAE(tok));<br>         if (cp != in.end()) res.push_back(string(cp,tmp));<br>         cp = tmp;<br>      }<br>      return res;<br>   }<br>   <br>   vector&lt;int&gt; sti(const vector&lt;string&gt; &amp;in) {<br>      vector&lt;int&gt; out;<br>      FORA(i,in) {<br>         int tmp; sscanf(in[i].c_str(),"%d",&amp;tmp); out.push_back(tmp);<br>      }<br>      return out;<br>   }<br>  <br><br>};<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>