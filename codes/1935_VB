<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System.Math<br>Imports System<br>Imports System.Collections<br>Imports System.Text<br> <br>Public Class RoomSummary<br>    Private Class entry<br>        Implements IComparable<br> <br>        Public Handle As String<br>        Public Score(2) As Decimal<br>        Public Challenge As Decimal<br> <br>        Public ReadOnly Property ScoreTotal() As Decimal<br>            Get<br>                Return Score(0) + Score(1) + Score(2) + Challenge<br>            End Get<br>        End Property<br> <br>        Public Function CompareTo(ByVal obj As Object) As Integer Implements System.IComparable.CompareTo<br>            If ScoreTotal &lt;&gt; obj.ScoreTotal Then<br>                Return Sign(obj.ScoreTotal - ScoreTotal)<br>            Else<br>                Return String.CompareOrdinal(Handle, obj.Handle)<br>            End If<br>        End Function<br> <br>        Public Sub New(ByVal name As String)<br>            Handle = name<br>        End Sub<br> <br>        Public Overrides Function ToString() As String<br>            Return Handle &amp; " " &amp; ScoreTotal.ToString("0.00")<br>        End Function<br>    End Class<br> <br>    Public Function generate(ByVal problems As String(), ByVal handle As String(), ByVal submissions As String(), ByVal challenges As String(), ByVal failed As String()) As String()<br>        Dim h As New Hashtable<br>        Dim list As New ArrayList<br>        Dim prob As New Hashtable<br>        prob(problems(0)) = 0<br>        prob(problems(1)) = 1<br>        prob(problems(2)) = 2<br>        Dim a As Integer<br>        For a = 0 To handle.Length - 1<br>            Dim en As New entry(handle(a))<br>            h.Add(handle(a), en)<br>            list.Add(en)<br>        Next<br>        For a = 0 To submissions.Length - 1<br>            Dim ss() As String = submissions(a).Split(" "c)<br>            h(ss(0)).Score(prob(ss(1))) = ss(2)<br>        Next<br>        For a = 0 To challenges.Length - 1<br>            Dim ss() As String = challenges(a).Split(" "c)<br>            If ss(3) = "successful" Then<br>                h(ss(0)).Challenge += 50<br>                h(ss(1)).Score(prob(ss(2))) = 0<br>            Else<br>                h(ss(0)).Challenge -= 50<br>            End If<br>        Next<br>        For a = 0 To failed.Length - 1<br>            Dim ss() As String = failed(a).Split(" "c)<br>            h(ss(0)).Score(prob(ss(1))) = 0<br>        Next<br>        list.Sort()<br>        Dim ret(list.Count - 1) As String<br>        For a = 0 To list.Count - 1<br>            ret(a) = list(a).ToString()<br>        Next<br>        Return ret<br>    End Function<br>End Class<br></td>