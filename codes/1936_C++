<td class="problemText" colspan="8" valign="middle" align="left">
            #line 5 "CongruenceLock.cpp"<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;sstream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br>#define max2(a,b) ( (a) &gt;= (b) ? (a) : (b) )<br>#define min2(a,b) ( (a) &lt;= (b) ? (a) : (b) )<br>int gcd(int a, int b) {<br>  if(a==0||b==0) return a+b;<br>  if(a&gt;b) return gcd(b,a%b); else return gcd(a,b%a);<br>}<br> <br>vector&lt;string&gt; tokenize(string s, char sep) {<br>  vector&lt;string&gt; ret;<br>  for(int i=0; i&lt;s.length();) {<br>    int j;<br>    for(j=0; i+j&lt;s.length(); j++) {<br>      if(s[i+j]==sep) break;<br>    }<br>    ret.push_back( s.substr(i, j) );<br>    i += j+1;<br>  }<br>  if( s[s.length()-1]==sep ) ret.push_back( string("") );<br>  return ret;<br>}<br> <br>class CongruenceLock {<br>  public:<br>  <br>  int d[100000];<br>  int minPushes(int current, int target, vector &lt;int&gt; buttons) {  <br>    const int inf=1000000000;<br>    for(int i=0;i&lt;100000;i++)<br>      d[i]=inf;<br>    d[current]=0;<br>    queue&lt;int&gt; q;<br>    q.push(current);<br>    while(!q.empty()) {<br>      int u=q.front(); q.pop();<br>      for(int i=0; i&lt;buttons.size(); i++) {<br>        int v = (u+buttons[i])%100000;<br>        if( d[v] &gt; d[u]+1 ) {<br>          d[v] = d[u]+1;<br>          q.push(v);<br>        }<br>      }<br>    }<br>    if( d[target] &lt; inf ) return d[target]; else return -1;<br>  }<br> <br> <br>};<br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>