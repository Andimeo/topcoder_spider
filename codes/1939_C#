<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Collections;<br><br>public class UndergroundVault {<br>  bool [,] d;<br>  int n;<br><br>  bool [] visit;<br>  bool [] seal;<br><br>  int cnt;<br><br><br>  void explore(int i)<br>  {<br>    if (seal[i] || visit[i]) return;<br><br>    cnt++;<br>    visit[i] = true;<br><br>    for(int j =0; j&lt;n; j++)<br>      if (d[i,j])<br>        explore(j);<br>  }<br><br>  public int[] sealOrder(string[] rooms) {<br>    int i,j,k;<br>    n = rooms.Length;<br>    d = new bool[n,n];<br>    visit = new bool[n];<br>    seal = new bool[n];<br><br><br>    for(i = 0; i&lt;n; i++)<br>    {<br>      string [] x = rooms[i].Split(",".ToCharArray());<br><br>      foreach(string y in x)<br>      if (y != "")<br>      {<br>        d[i, int.Parse(y)] = true;<br>      }<br>    }<br><br>    int [] sol = new int[n];<br><br>    for(i = 0; i&lt;n; i++)<br>    {<br>      int maxi = -1;<br>      int max = -1;<br><br>      for(j = 0; j&lt;n; j++)<br>      if (!seal[j])<br>      {<br>        Array.Clear(visit,0,visit.Length);<br>        seal[j] = true;<br>        cnt = 0;<br>        explore(0);<br>        if(cnt&gt;max)<br>        {<br>          max = cnt;<br>          maxi = j;<br>        }<br>        seal[j] = false;<br>      }<br><br>      seal[maxi] = true;<br>      sol[i] = maxi;<br><br>    }<br><br><br>    return sol;<br>  }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester for c# [12-oct-2003]<br>// Powered by CodeProcessor<br></td>