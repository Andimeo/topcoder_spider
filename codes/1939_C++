<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;strstream&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cmath&gt;<br> <br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br> <br>using namespace std;<br> <br>typedef long long i64;<br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br> <br>class UndergroundVault  {<br>  public: vector &lt;int&gt; sealOrder(vector &lt;string&gt; rooms);<br>};<br> <br>vector &lt;int&gt; rst;<br> <br>int gcd(int a, int b)<br>{<br>  if(a==0) return(b);<br>  return(gcd(b%a, a));<br>}<br> <br>void showv(vector&lt;string&gt;&amp; v)<br>{<br>  int i,l=v.size();<br>  cout&lt;&lt;"Size = "&lt;&lt;l&lt;&lt;endl;<br>  for(i=0;i&lt;l;i++) cout&lt;&lt;v[i]&lt;&lt;endl;<br>  cout&lt;&lt;endl;<br>}<br> <br>void showv(vector&lt;int&gt;&amp; v)<br>{<br>  int i,l=v.size();<br>  cout&lt;&lt;"Size = "&lt;&lt;l&lt;&lt;endl;<br>  for(i=0;i&lt;l;i++) cout&lt;&lt;v[i]&lt;&lt;" ";<br>  cout&lt;&lt;endl;<br>}<br> <br>int strToInt(string str)<br>{<br>  strstream ss; int r;<br>  ss&lt;&lt;str; ss&gt;&gt;r;<br>  return(r);<br>}<br> <br>void tks(string str, string del, vector&lt;string&gt;&amp; v)<br>{<br>  int i,j,l=str.length();<br>  for(i=0;i&lt;l;i++)<br>  {<br>    j=del.find(str[i]);<br>    if(j&gt;=0) str[i]=' ';<br>  }<br>  strstream ss; string s1;<br>  ss&lt;&lt;str;<br>  v.clear();<br>  while(ss&gt;&gt;s1) v.push_back(s1);<br>}<br> <br>void tksInt(string str, string del, vector&lt;int&gt;&amp; v)<br>{<br>  int i,j,l=str.length();<br>  for(i=0;i&lt;l;i++)<br>  {<br>    j=del.find(str[i]);<br>    if(j&gt;=0) str[i]=' ';<br>  }<br>  strstream ss; string s1;<br>  ss&lt;&lt;str;<br>  v.clear();<br>  while(ss&gt;&gt;s1) v.push_back(strToInt(s1));<br>}<br> <br>int findit(vector&lt;string&gt;&amp; v, string k)<br>{<br>  int i,l=v.size();<br>  for(i=0;i&lt;l;i++) if(v[i]==k) return(i);<br>  //v.push_back(k);<br>  return(-1);<br>}<br> <br>int findit(vector&lt;int&gt;&amp; v, int k)<br>{<br>  int i,l=v.size();<br>  for(i=0;i&lt;l;i++) if(v[i]==k) return(i);<br>  //v.push_back(k);<br>  return(-1);<br>}<br> <br>string rev(string str)<br>{<br>  int i,l=str.length();<br>  string s1=str;<br>  for(i=0;i&lt;l;i++) s1[i]=str[l-1-i];<br>  return(s1);<br>}<br> <br>int N,M;<br>int valid(int xx, int yy)<br>{<br>  if(xx&lt;0 || yy&lt;0 || xx&gt;=N || yy&gt;=M) return(0);<br>  return(1);<br>}<br> <br>int n;<br>int usd[100];<br>int vst[100];<br>int r[100][100];<br> <br>void dfs(int a)<br>{<br>  int i;<br>  vst[a]=1;<br>  for(i=0;i&lt;n;i++)<br>  if(r[a][i])<br>    if(!usd[i])<br>      if(!vst[i])<br>        dfs(i);<br>}<br> <br>int good()<br>{<br>  int i;<br>  for(i=0;i&lt;n;i++) vst[i]=0;<br>  dfs(0);<br>  for(i=0;i&lt;n;i++)<br>    if(usd[i]==0 &amp;&amp; vst[i]==0) return(0);<br>  return(1);<br>}<br> <br>vector &lt;int&gt; UndergroundVault ::sealOrder(vector &lt;string&gt; rooms) <br>{  <br>  int i,j;<br>  rst.clear();<br>  n=rooms.size();<br>  VI tmp;<br>  for(i=0;i&lt;n;i++)<br>    for(j=0;j&lt;n;j++)<br>      r[i][j]=0;<br>  for(i=0;i&lt;n;i++)<br>  {<br>    tksInt(rooms[i],", ", tmp);<br>    for(j=0;j&lt;tmp.size();j++)<br>      r[i][tmp[j]]=1;<br>  }<br>  for(i=0;i&lt;n;i++) usd[i]=0;<br>  for(i=0;i&lt;n-1;i++)<br>    for(j=1;j&lt;n;j++)<br>      if(!usd[j])<br>      {<br>        usd[j]=1;<br>        if(good()) {rst.push_back(j); j=n+100;}<br>        usd[j]=0;<br>      }<br>  rst.push_back(0);<br>  return(rst);<br>}<br> <br> <br>// Powered by PopsEdit<br></td>