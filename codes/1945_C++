<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;algorithm&gt;<br>using namespace std;<br> <br>#define ll long long<br>#define vs vector&lt;string&gt;<br>#define vi vector&lt;int&gt;<br>#define vd vector&lt;double&gt;<br>#define vll vector&lt;ll&gt;<br>#define fo(x,y) for((x)=0;(x)&lt;(y);(x)++)<br>#define fi fo(i,n)<br>#define fj fo(j,n)<br>#define fk fo(k,n)<br>#define fr(x,y,z) for((x)=(y);(x)&lt;(z);(x)++)<br>#define pb push_back<br>#define sz size()<br>#define cs c_str()<br>#define ins(x) insert(x)<br>#define dub (double)<br>#define df double<br> <br>class CombinationLock { public: df degreesTurned(vi f, int size,int start) {<br>int n=f.size();<br>int turn=0;<br>int i,j,k,dir=1;<br>fi {<br>  turn+=size*(n-i);<br>  if (dir==1) <br>    turn+=(3*size+f[i]-start)%size;<br>  else<br>    turn+=(3*size+start-f[i])%size;<br>  start=f[i];<br>  dir=-dir;<br>}<br>return 360.0*turn/size;<br>}};<br></td>