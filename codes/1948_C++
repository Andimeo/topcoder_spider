<td class="problemText" colspan="8" valign="middle" align="left">
            using namespace std;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;ctype.h&gt;<br>#include &lt;stack&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>typedef long long I64;<br>typedef pair&lt;int,int&gt; PII;<br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br>typedef vector&lt;double&gt; VD;<br>typedef vector&lt;PII&gt; VPII;<br>#define FOR(i,n) for(int i=0;i&lt;(n);i++)<br>#define VAR(a,b) __typeof(b) a=b<br>#define FORIT(it,c) for(VAR(it,(c).begin());it!=(c).end();it++)<br>#define ALL(x) (x).begin(),(x).end()<br> <br>struct TwoTurtledovesImpl {<br>    int n;<br>    TwoTurtledovesImpl(int _n) {<br>        n = _n;<br>    }<br> <br>    int presentType() {<br>        int used = 0;<br>        int day = 1;<br>        while(1) {<br>            for(int i=day; i&gt;=1; i--) {<br>                used += i;<br>                if(used &gt;= n) return i;<br>            }<br>            day++;<br>        }<br>    };<br>};<br> <br> <br>struct TwoTurtledoves {<br>    int presentType(int n) {<br>        TwoTurtledovesImpl impl(n);<br>        return impl.presentType();<br>    }<br> <br>};<br> <br> <br> <br> <br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>