<td class="problemText" colspan="8" valign="middle" align="left">
            #pragma warning( disable : 4786 )<br><br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;functional&gt;<br>#include &lt;deque&gt;<br><br>using namespace std;<br><br>string fo;<br><br>int cat( int kar, int ct ) {<br>  int acu = 0;<br>  for( int i = 0; i &lt; fo.size(); i++ ) {<br>    if( ct == 0 )<br>      break;<br>    if( fo[ i ] == kar ) {<br>      acu += i;<br>      ct--;<br>    }<br>  }<br>  if( ct )<br>    return 1000000;<br>  return acu;<br>}<br><br>class st {<br>public:<br>  bool operator()( char a, char b ) const {<br>    int aca = cat( a, 5 );<br>    int acb = cat( b, 5 );<br>    if( aca == acb ) {<br>      aca = cat( a, 6 );<br>      acb = cat( b, 6 );<br>    }<br>    if( aca == acb ) {<br>      return a &lt; b;<br>    }<br>    return aca &lt; acb;<br>  }<br>};<br><br>class CrossCountry {<br>  public:<br>  string scoreMeet(int numTeams, string finishOrder) {<br>    fo = finishOrder;<br>    string beef;<br>    for( int i = 0; i &lt; numTeams; i++ )<br>      if( count( finishOrder.begin(), finishOrder.end(), 'A' + i ) &gt;= 5 )<br>        beef += ( 'A' + i );<br>    sort( beef.begin(), beef.end(), st() );<br>    return beef;<br>  }<br>};<br><br><br><br>// Powered by FileEdit<br></td>