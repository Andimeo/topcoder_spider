<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class CrossCountry {<br>  <br>  <br>  public String scoreMeet(int numTeams, String finishOrder) {<br>    int[] runners = new int[26];<br>    int[] tot = new int[26];<br>    for (int i = 0; i &lt; finishOrder.length(); ++i) {<br>      int c = finishOrder.charAt(i) - 'A';<br>      if (runners[c] &lt; 5) {<br>        tot[c] += 100 * (1 + i);<br>      }<br>      if (runners[c] == 5) {<br>        tot[c] += 1 + i;<br>      }<br>      runners[c]++;<br>    }<br>    int n = 0;<br>    <br>    for (int i = 0; i &lt; 26; ++i) {<br>      if (runners[i] &lt; 5) tot[i] = Integer.MAX_VALUE; else {<br>        if (runners[i] == 5) tot[i] += 99;<br>        tot[i] = tot[i] * 100 + i;<br>        ++n;<br>      }<br>    }<br>    Arrays.sort(tot);<br>    String r = "";<br>    for (int i = 0; i &lt; n; ++i) {<br>      int x = tot[i];<br>      if (x == Integer.MAX_VALUE) break;<br>      r += (char) ((x % 100) + 'A');<br>    }<br>    return r;<br>  }<br>  public final static void main(String[] args)<br>  {<br>    try {<br>      validateExample("1", new CrossCountry().scoreMeet(2,"AABBABBABBA"), "AB", "scoreMeet(2,\"AABBABBABBA\")");<br>      validateExample("2", new CrossCountry().scoreMeet(3,"CCCBBBBBAAACC"), "BC", "scoreMeet(3,\"CCCBBBBBAAACC\")");<br>      validateExample("3", new CrossCountry().scoreMeet(4,"ABDCBADBDCCDBCDBCAAAC"), "BDCA", "scoreMeet(4,\"ABDCBADBDCCDBCDBCAAAC\")");<br>      validateExample("4", new CrossCountry().scoreMeet(10,"BDHCEAJBIDBCCHGCBDJEBAAHEGAGGADHGIECJEHAEBDADJCDHG"), "BCDAHEG", "scoreMeet(10,\"BDHCEAJBIDBCCHGCBDJEBAAHEGAGGADHGIECJEHAEBDADJCDHG\")");<br>      validateExample("5", new CrossCountry().scoreMeet(3,"BABCAABABAB"), "AB", "scoreMeet(3,\"BABCAABABAB\")");<br>    } catch (Exception e) {<br>      System.out.println(e);<br>      e.printStackTrace(System.out);<br>    }<br>  }<br> <br>  private static void validateExample(String exampleNum, String returned, String expected, String methodInvocation) {<br>    print(exampleNum);<br>    print("  ");<br>    if (!eq(returned,expected)) {<br>      print("FAIL");<br>    } else {<br>      print("SUCCESS");<br>    }<br>    print(" ");  <br>    print(methodInvocation);<br>    print("\tGot:[");<br>    print(returned);<br>    print("]\t");<br>    print("Expected:[");<br>    print(expected);<br>    print("]");<br>    print("\n");<br>  }<br> <br>  public static void print(boolean a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(long a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(int a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(char a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(String a) {<br>    System.out.print(a);<br>  }<br> <br>  public static void print(int[] a) {<br>    if (a==null) {System.out.print("null"); return;} <br>    for (int i=0; i&lt;a.length; i++) System.out.print(a[i]+(i&lt;a.length-1?",":"")); <br>  }<br> <br>  public static void print(int[][] a) {<br>    if (a==null) {System.out.print("null"); return;} <br>    for (int i=0; i&lt;a.length; i++) { print(a[i]); print("\n"); }<br>  }<br> <br>  public static void print(String[] a) {<br>    if (a==null) {System.out.print("null"); return;} <br>    for (int i=0; i&lt;a.length; i++) System.out.print(a[i]+(i&lt;a.length-1?",":"")); <br>  }<br> <br>  public static boolean eq(boolean a, boolean b) {<br>    return a==b;<br>  }<br> <br>  public static boolean eq(long a, long b) {<br>    return a==b;<br>  }<br> <br>  public static boolean eq(int a, int b) {<br>    return a==b;<br>  }<br> <br>  public static boolean eq(char a, char b) {<br>    return a==b;<br>  }<br> <br>  public static boolean eq(String a, String b) {<br>    return a.equals(b);<br>  }<br> <br>  public static boolean eq(int[] a, int[] b) { return Arrays.equals(a,b); }<br>  public static boolean eq(String[] a, String[] b) { return Arrays.equals(a,b); }<br> <br>}<br>// Powered by CodeProcessor<br></td>