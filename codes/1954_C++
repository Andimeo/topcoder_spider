<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;stdio.h&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;string.h&gt;<br>#include &lt;ctype.h&gt;<br>#include &lt;string&gt;<br>#include &lt;math.h&gt;<br> <br>using namespace std;<br> <br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br>typedef vector&lt;VI&gt; VII;<br> <br>string bla;<br> <br>double probs[60][101];<br> <br>double getProb(int pos, int max)<br>{<br>        if(bla[pos] == 'X')<br>  return 0;<br> <br>    if(max == 0)<br>  return 1;<br> <br>    if(probs[pos][max] &lt; 0)<br>    {<br>  probs[pos][max] = 0;<br>  for(int i = 1;i&lt;=max;i++)<br>      probs[pos][max] += getProb((pos+i)%bla.size(), max-1);<br>  probs[pos][max] /= max;<br>    }<br>    return probs[pos][max];<br> <br>}<br> <br>class RockSkipping {<br> <br>  public:<br>  double probability(string pads, int maxDist) {<br>      for(int i = 0;i&lt;60;i++)<br>    for(int j =0;j&lt;101;j++)<br>        probs[i][j] = -1;<br>      bla = pads;<br>      return getProb(0, maxDist) * 100;<br>  }<br>};<br> <br> <br>// Powered by FileEdit<br></td>