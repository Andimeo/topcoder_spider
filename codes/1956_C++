<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br> <br>#define REP(i,n) for(int i=0;i&lt;(n);++i)<br>#define FOR(i,a,b) for(int i=(a);i&lt;=(b);++i)<br>#define FORD(i,a,b) for(int i=(a);i&gt;=(b);--i)<br>#define FOREACH(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();++i)<br>#define ALL(x) (x).begin(),(x).end()<br>typedef long long LL;<br>const int INF = 1000000000;<br>typedef vector&lt;int&gt; VI;<br>template&lt;class T&gt; inline int size(const T&amp;c) { return c.size(); }<br> <br>char buf1[1000];<br> <br>string i2s(int x) {<br>  sprintf(buf1,"%d",x);<br>  return buf1;<br>}<br> <br>int n;<br>vector&lt;string&gt; code;<br>int poz;<br>vector&lt;string&gt; result;<br> <br>void output(int s,int v) {<br>  if(s&amp;(1&lt;&lt;26)) return;<br>  REP(i,26) if(!(s&amp;(1&lt;&lt;i)) &amp;&amp; (v&amp;(1&lt;&lt;i))) {<br>    sprintf(buf1,"Line %d: variable %c might not have been initialized",poz+1,'A'+i);<br>    result.push_back(string(buf1));<br>  }<br>}<br> <br>int readValue(const string&amp;s) {<br>  char c = s[0];<br>  if(isupper(c)) return 1&lt;&lt;(c-'A'); else return 1&lt;&lt;27;<br>}<br> <br>int parseArgs(const string &amp;s) {<br>  istringstream is(s);<br>  string s2;<br>  is &gt;&gt; s2;<br>  int v=0;<br>  for(;;) {<br>    is &gt;&gt; s2;<br>    if(!is) break;<br>    v |= 1&lt;&lt;(s2[0]-'A');<br>  }<br>  return v;<br>}<br> <br>int go(int s) {<br>  for(;;) {<br>    if(poz&gt;=size(code)) return s;<br>    istringstream is(code[poz]);<br>    string com; is&gt;&gt;com;<br>    if(com=="END" || com=="ELSE") return s;<br>    if(s&amp;(1&lt;&lt;26)) {<br>      sprintf(buf1,"Line %d: unreachable code", poz+1);<br>      result.push_back(string(buf1));<br>    }<br>    if(com=="RETURN") {<br>      string s2; is &gt;&gt; s2;<br>      int v = readValue(s2);<br>      output(s,v);<br>      s |= (1&lt;&lt;30)-1;<br>      ++poz;<br>    }<br>    else if(com=="IF") {<br>      string s2; is &gt;&gt; s2;<br>      int v = readValue(s2);<br>      is &gt;&gt; s2; is&gt;&gt;s2;<br>      v |= readValue(s2);<br>      output(s,v);<br>      ++poz;<br>      int then1 = go(s);<br>      int else1=0;<br>      istringstream is2(code[poz]);<br>      is2 &gt;&gt; s2; ++poz;<br>      if(s2=="ELSE") {<br>        else1 = go(s);<br>        ++poz;<br>      }<br>      s |= then1 &amp; else1;<br>    }<br>    else { // assigment<br>      int left = readValue(com);<br>      string s2; is &gt;&gt; s2;<br>      is &gt;&gt; s2;<br>      int v = readValue(s2);<br>      is &gt;&gt; s2;<br>      if(!is) {}<br>      else {<br>        is &gt;&gt; s2;<br>        v |= readValue(s2);<br>      }<br>      output(s,v);<br>      s |= left;<br>      ++poz;<br>    }<br>  }<br>  return -1;<br>}<br> <br>struct ScriptLanguage {<br>  // MAIN<br>  vector &lt;string&gt; warnings(vector &lt;string&gt; cc) {<br>    code = cc;<br>    n = size(code);<br>    int v = parseArgs(code[0]);<br>    poz = 1;<br>    result.clear();<br>    go(v | (1&lt;&lt;27));<br>    return result;<br>  }<br>  <br> <br> <br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>