<td class="problemText" colspan="8" valign="middle" align="left">
            //program framework generated with WishingBone's parser :)-<br> <br>//common header<br>#ifdef WIN32<br>#  pragma warning(disable:4786)<br>#  define for if (0); else for<br>#endif<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;deque&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;utility&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cmath&gt;<br>using namespace std;<br> <br>//64 bit integer definition<br>#ifdef WIN32<br>#define in_routine(type,spec) \<br>istream&amp; operator&gt;&gt;(istream&amp; s,type &amp;d){char b[30];s&gt;&gt;b;sscanf(b,spec,&amp;d);return s;}<br>#define out_routine(type,spec) \<br>ostream&amp; operator&lt;&lt;(ostream&amp; s,type d){char b[30];sprintf(b,spec,d);s&lt;&lt;b;return s;}<br>typedef signed __int64 i64; in_routine(i64,"%I64d") out_routine(i64,"%I64d")<br>typedef unsigned __int64 u64; in_routine(u64,"%I64u") out_routine(u64,"%I64u")<br>#else<br>typedef signed long long i64;<br>typedef unsigned long long u64;<br>#endif<br> <br>//common routines<br>#ifdef WIN32<br>#define min(a,b) _cpp_min(a,b)<br>#define max(a,b) _cpp_max(a,b)<br>#endif<br>#define abs(a) ((a)&gt;0?(a):-(a))<br>#define s2d(s,d) {istringstream(s)&gt;&gt;d;}<br>#define d2s(d,s) {ostringstream t;t&lt;&lt;d;s=t.str();}<br>int gcd(int a,int b){for(int c;b;c=a,a=b,b=c%b);return a;}<br>int lcm(int a,int b){return a/gcd(a,b)*b;}<br> <br>//remove routine<br>template &lt;class T&gt;<br>void remove(vector&lt;T&gt;&amp; v,const T&amp;e){<br>  v.resize(remove(v.begin(),v.end(),e)-v.begin());<br>}<br>template &lt;class T&gt;<br>vector&lt;T&gt; remove_copy(vector&lt;T&gt;&amp; v,const T&amp;e){<br>  vector&lt;T&gt; result;<br>  remove_copy(v.begin(),v.end(),back_inserter(result),e);<br>  return result;<br>}<br> <br>//output routine<br>ostream&amp; operator&lt;&lt;(ostream&amp; s,string d){<br>  s&lt;&lt;'\"'&lt;&lt;d.c_str()&lt;&lt;'\"';<br>  return s;<br>}<br>template &lt;class T&gt;<br>ostream&amp; operator&lt;&lt;(ostream&amp; s,vector&lt;T&gt; d){<br>  s&lt;&lt;"{";<br>  for (typename vector&lt;T&gt;::iterator i=d.begin();i!=d.end();i++)<br>    s&lt;&lt;(i!=d.begin()?",":"")&lt;&lt;*i;<br>  s&lt;&lt;"}";<br>  return s;<br>}<br> <br>//parsing routine<br>template &lt;class T&gt;<br>vector&lt;basic_string&lt;T&gt; &gt; parse(const basic_string&lt;T&gt; &amp;s,const basic_string&lt;T&gt; &amp;delim){<br>  vector&lt;basic_string&lt;T&gt; &gt; ret(0);<br>  for (int b,e=0;;ret.push_back(s.substr(b,e-b)))<br>    if ((b=s.find_first_not_of(delim,e))==(e=s.find_first_of(delim,b)))<br>      return ret;<br>}<br>vector&lt;int&gt; intparse(const string &amp;s,const string &amp;delim=" \t\n"){<br>  vector&lt;string&gt; tmp=parse(s,delim);<br>  vector&lt;int&gt; ret(0);<br>  int t;<br>  for (vector&lt;string&gt;::iterator i=tmp.begin();i!=tmp.end();i++)<br>    sscanf(i-&gt;c_str(),"%d",&amp;t),ret.push_back(t);<br>  return ret;<br>}<br> <br>//name mapper<br>class mapper{<br>public:<br>  map&lt;string,int&gt; m;<br>  vector&lt;string&gt; v;<br>  void reset(){<br>    v.clear();<br>    m.clear();<br>  }<br>  int size(){<br>    return v.size();<br>  }<br>  int get(const string str){<br>    if (m.find(str)==m.end()){<br>      m[str]=v.size();<br>      v.push_back(str);<br>    }<br>    return m[str];<br>  }<br>  string get(int i){<br>    return v[i];<br>  }<br>  vector&lt;int&gt; get(const vector&lt;string&gt;&amp; strs){<br>    vector&lt;int&gt; ret;<br>    ret.reserve(strs.size()+2);<br>    for(int i=0;i&lt;strs.size();i++)<br>      ret.push_back(get(strs[i]));<br>    return ret;<br>  }<br>  vector&lt;string&gt; get(const vector&lt;int&gt;&amp; is){<br>    vector&lt;string&gt; ret;<br>    ret.reserve(is.size()+2);<br>    for(int i=0;i&lt;is.size();i++)<br>      ret.push_back(get(is[i]));<br>    return ret;<br>  }<br>};<br> <br> <br>class GoldMine{<br>public:<br>  int calc(vector&lt;int&gt;&amp; p, int k) {<br>    int ret = 0;<br>    for (int i = 0; i &lt;= 6; ++i) {<br>      if (i &gt; k) ret += 60 * p[i] * k;<br>      else if (i == k) ret += 50 * p[i] * k;<br>      else {<br>        ret += 50 * p[i] * i - 20 * p[i] * (k - i);<br>      }<br>    }<br>    return ret;<br>  }<br>  vector&lt;int&gt; getAllocation(vector&lt;string&gt; mines,int miners){<br>    int n = mines.size();<br>    int m = miners;<br>    vector&lt;int&gt; mine[50];<br>    for (int i = 0; i &lt; n; ++i) {<br>      mine[i] = intparse(mines[i], string(" ,"));<br>    }<br>    int ret[50][301], last[50][301];<br>    for (int i = 0; i &lt; n; ++i) for (int j = 0; j &lt;= m; ++j) {<br>      if (i == 0) {<br>        if (j &gt; 6) ret[i][j] = -100000000;<br>        else {<br>          ret[i][j] = calc(mine[i], j);<br>          last[i][j] = j;<br>        }<br>      } else {<br>        ret[i][j] = -100000000;<br>        for (int k = 0; k &lt;= 6; ++k) {<br>          if (j - k &lt; 0) break;<br>          int t = calc(mine[i], k);<br>          if (t + ret[i - 1][j - k] &gt; ret[i][j]) {<br>            ret[i][j] = ret[i - 1][j - k] + t;<br>            last[i][j] = k;<br>          }<br>        }<br>      }<br>    }<br>    vector&lt;int&gt; p(n);<br>    for (int i = n - 1, s = m; i &gt;= 0; --i) {<br>      p[i] = last[i][s];<br>      s -= last[i][s];<br>    }<br>    return p;<br>  }<br>};<br></td>