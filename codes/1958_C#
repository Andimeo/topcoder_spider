<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Collections;<br><br>public class TreasureHunt {<br>  string [] map;<br>  int lx,ly;<br><br>  int xx, xy;<br><br><br>  bool getmap(int x, int y)<br>  {<br>    if (x &lt; 0 || x &gt;= lx || y &lt; 0 || y &gt;= ly) return false;<br><br>    if (map[y][x] != '.') return true;<br><br>    return  false;<br>  }<br>  <br>  int [] walk (int x, int y, string [] ins)<br>  {<br>    int dy,dx;<br>    int [] s = { 100000, 100000 };<br>    if (!getmap(x,y)) return s;<br>    if (getmap(x-1,y) &amp;&amp; getmap(x+1,y) &amp;&amp; getmap(x,y-1) &amp;&amp; getmap(x,y+1)) return s;<br><br>    foreach(string w in ins)<br>    {<br>      dx = dy = 0;<br><br>      switch ( w[0] )<br>      {<br>        case 'N' : dy = -1; break;<br>        case 'S' : dy = 1; break;<br>        case 'E' : dx = 1; break;<br>        case 'W' : dx = -1; break;<br>      }<br><br>      int cnt = w[2]-'0';<br><br>      while (cnt-- &gt; 0)<br>      {<br>        x += dx;<br>        y += dy;<br>        if (!getmap(x,y)) return s;      <br>      }<br>    }<br>    <br>    s[0] = x;<br>    s[1] = y;<br>    return s;<br>  }<br><br>  public int[] findTreasure(string[] island, string[] instructions) {<br>    map = island;<br>    ly = map.Length;<br>    lx = map[0].Length;<br><br>    int minx, miny, mind;<br><br>    mind = int.MaxValue;<br>    minx = miny = 100000;<br><br>    for(int i =0 ; i&lt;ly; i++)<br>      for(int j = 0; j&lt;lx; j++)<br>      {<br>        if (map[i][j] == 'X')<br>        {<br>          xx = j;<br>          xy = i;<br>        }<br>      }<br><br>    bool solved = false;<br><br>    for(int i =0 ; i&lt;ly; i++)<br>      for(int j = 0; j&lt;lx; j++)<br>      {<br>        int d;<br>        int [] s = walk(j, i, instructions);<br><br>        if (s[0] &lt; lx &amp;&amp; s[1] &lt; ly)<br>        {<br>          d = (s[0] - xx) * (s[0] - xx) + (s[1] - xy) * (s[1] - xy);<br><br>          if (d &gt; mind) continue;<br>          if (d == mind &amp;&amp; s[1] &gt; miny) continue;<br>          if (d == mind &amp;&amp; s[1] == miny &amp;&amp; s[0] &gt; minx) continue;<br><br>          mind = d;<br>          minx = s[0];<br>          miny = s[1];<br>          solved = true;<br><br>        }<br><br><br><br>      }<br>    <br>    if (!solved) return new int[] {};<br><br>    return new int[] { minx, miny} ;<br><br><br>    <br>  }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester for c# [12-oct-2003]<br>// Powered by CodeProcessor<br></td>