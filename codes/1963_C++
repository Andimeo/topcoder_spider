<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;iterator&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br> <br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;deque&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;bitset&gt;<br> <br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br> <br>using namespace std;<br> <br>#define all(x) (x).begin(),(x).end()<br>#define rall(x) (x).rbegin(),(x).rend()<br>#define fore(i,x) for(typeof((x).begin()) i=(x).begin();i!=(x).end();++i)<br>#define rfore(i,x) for(typeof((x).begin()) i=(x).end();i!=(x).begin() &amp;&amp; (--i,1);)<br>#define todbg(x) ( #x + (":"+tostr(x)+" "))<br>#define vtodbg(x) ( #x + (":"+vtostr(x)+" "))<br> <br>typedef long long i64;typedef unsigned long long u64;<br>typedef vector&lt;int&gt; vi;typedef vector&lt;vi&gt; vvi;<br>typedef vector&lt;string&gt; vs;typedef vector&lt;vs&gt; vvs;<br>typedef vector&lt;double&gt; vd;typedef vector&lt;vd&gt; vvd;<br>typedef vector&lt;char&gt; vc;<br>typedef pair&lt;int,int&gt; pii;typedef vector&lt;pii&gt; vpii;<br>typedef set&lt;int&gt; si;typedef set&lt;string&gt; ss;<br>typedef set&lt;char&gt; sc;typedef set&lt;pii&gt; spii;<br> <br>template&lt;class t,class u&gt;<br>ostream&amp; operator&lt;&lt;(ostream&amp; o,const pair&lt;t,u&gt;&amp; x)<br>{<br>  return o&lt;&lt;"("&lt;&lt;x.first&lt;&lt;","&lt;&lt;x.second&lt;&lt;")";<br>}<br> <br>template&lt;class t&gt;<br>t fromstr(const string&amp; s)<br>{<br>  istringstream str(s);<br>  t x;<br>  str&gt;&gt;x;<br>  return x;<br>}<br> <br>template&lt;class t&gt;<br>string tostr(const t&amp; x)<br>{<br>  ostringstream str;<br>  str&lt;&lt;x;<br>  return str.str();<br>}<br> <br>template&lt;class t&gt;<br>string vtostr(const t&amp; x)<br>{<br>  ostringstream str;<br>  str&lt;&lt;"(";<br>  fore(i,x)<br>  {<br>    if(i!=x.begin())str&lt;&lt;",";<br>    str&lt;&lt;*i;<br>  }<br>  str&lt;&lt;")";<br>  return str.str();<br>}<br> <br>vs gettok(const string&amp; s,const string&amp; sep,bool retsep=0,bool groupsep=1)<br>{<br>  vs r;<br>  string tok;<br>  for(int i=0;i&lt;=s.size();i++)<br>  {<br>    if(tok!="" &amp;&amp; (i==s.size() || (sep.find(tok[0])==-1)!=(sep.find(s[i])==-1)))<br>    {<br>      if(sep.find(tok[0])==-1)r.push_back(tok);else<br>      if(retsep)<br>      if(groupsep)r.push_back(tok);else<br>      fore(c,tok)r.push_back(string(1,*c));<br>      tok="";<br>    }<br>    if(i&lt;s.size())tok+=s[i];<br>  }<br>  return r;<br>}<br> <br>vi getinttok(const string&amp; s)<br>{<br>  static const string ok="1234567890-";<br>  vi r;<br>  string tok;<br>  for(int i=0;i&lt;=s.size();i++)<br>  {<br>    if(i&lt;s.size() &amp;&amp; ok.find(s[i])!=-1)tok+=s[i];else<br>    if(tok!="")<br>    {<br>      r.push_back(fromstr&lt;int&gt;(tok));<br>      tok="";<br>    }<br>  }<br>  return r;<br>}<br> <br>int gcd(int a,int b)<br>{<br>  if(a&lt;0)a=-a;<br>  if(b&lt;0)b=-b;<br>  while(a &amp;&amp; b)if(a&gt;b)a%=b;else b%=a;<br>  return a+b;<br>}<br> <br>struct pt<br>{<br>  int x,y;<br>  pt(){}<br>  pt(int _x,int _y):x(_x),y(_y){}<br>  bool operator&lt;(const pt&amp; a)const<br>  {<br>    if(x!=a.x) return x&lt;a.x;<br>    return y&lt;a.y;<br>  }<br>  bool operator!=(const pt&amp; a)const<br>  {<br>    if(x!=a.x) return 1;<br>    return y!=a.y;<br>  }<br>  pt operator*(int k)const<br>  {<br>    return pt(x*k,y*k);<br>  }<br>  pt operator+(const pt&amp; a)const<br>  {<br>    return pt(x+a.x,y+a.y);<br>  }<br>  pt operator-(const pt&amp; a)const<br>  {<br>    return pt(x-a.x,y-a.y);<br>  }<br>  void norm()<br>  {<br>    int d=gcd(x,y);<br>    x/=d;y/=d;<br>  }<br>};<br>ostream&amp; operator&lt;&lt;(ostream&amp; o,const pt&amp; a)<br>{<br>  return o&lt;&lt;pii(a.x,a.y);<br>}<br> <br>int nwall(const pt&amp; p)<br>{<br>  int r=0;<br>  if(p.x&gt;2000)r+=p.x/2000;else if(p.x&lt;0)r+=1+(-p.x)/2000;<br>  if(p.y&gt;1000)r+=p.y/1000;else if(p.y&lt;0)r+=1+(-p.y)/1000;<br>  return r;<br>}<br> <br>i64 getdist(const pt&amp; p)<br>{<br>  i64 x2=p.x;x2*=p.x;<br>  i64 y2=p.y;y2*=p.y;<br>  return x2+y2;<br>}<br> <br>struct st<br>{<br>  pt slope;<br>  i64 dist;<br>  int nw;<br>  bool operator&lt;(const st&amp; a)const<br>  {<br>    if(slope!=a.slope)return slope&lt;a.slope;<br>    if(dist!=a.dist)return dist&lt;a.dist;<br>    return nw&lt;a.nw;<br>  }<br>};<br>ostream&amp; operator&lt;&lt;(ostream&amp; o,const st&amp; a)<br>{<br>  return o&lt;&lt;"("&lt;&lt;a.slope&lt;&lt;","&lt;&lt;a.dist&lt;&lt;","&lt;&lt;a.nw&lt;&lt;")";<br>}<br> <br>vector&lt;st&gt; q(3000000);<br> <br>class NCushion<br>{<br>  public:<br>  int numShots(vector &lt;int&gt; cue, vector &lt;int&gt; opponent, int N)<br>  {<br>    pt me(cue[0],cue[1]);<br>    vector&lt;pt&gt; y(4);<br>    y[0]=pt(opponent[0],opponent[1]);<br>    y[1]=pt(-opponent[0],opponent[1]);<br>    y[2]=pt(opponent[0],-opponent[1]);<br>    y[3]=pt(-opponent[0],-opponent[1]);<br>    //cout&lt;&lt;vtodbg(y)&lt;&lt;endl;<br>    <br>    int i,k1,k2;<br>    <br>    q.clear();<br>    for(k1=-500;k1&lt;=500;k1++)<br>    for(k2=-500;k2&lt;=500;k2++)<br>    //for(k1=-1;k1&lt;=1;k1++)<br>    //for(k2=-1;k2&lt;=1;k2++)<br>    for(i=0;i&lt;4;i++)<br>    {<br>      pt p=y[i]+pt(4000*k1,2000*k2);<br>      //cout&lt;&lt;todbg(p)&lt;&lt;todbg(nwall(p))&lt;&lt;endl;<br>      if(nwall(p)&lt;=N)<br>      {<br>        st qq;<br>        qq.slope=p-me;qq.slope.norm();<br>        qq.dist=getdist(me-p);<br>        qq.nw=nwall(p);<br>        q.push_back(qq);<br>      }<br>    }<br>    sort(all(q));<br>    //cout&lt;&lt;vtodbg(q)&lt;&lt;endl;<br>    <br>    int rez=0;<br>    for(i=0;i&lt;q.size();i++)<br>    if(i==0 || q[i].slope!=q[i-1].slope)<br>    if(q[i].nw==N)<br>    rez++;<br>    <br>    return rez;<br>  }<br>};<br> <br> <br>// Powered by PopsEdit<br></td>