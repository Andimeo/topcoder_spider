<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class T9Input {<br>  char getNum(char letter) {<br>    if (letter&gt;='a' &amp;&amp; letter&lt;='c') return '2';<br>    if (letter&gt;='d' &amp;&amp; letter&lt;='f') return '3';<br>    if (letter&gt;='g' &amp;&amp; letter&lt;='i') return '4';<br>    if (letter&gt;='j' &amp;&amp; letter&lt;='l') return '5';<br>    if (letter&gt;='m' &amp;&amp; letter&lt;='o') return '6';<br>    if (letter&gt;='p' &amp;&amp; letter&lt;='s') return '7';<br>    if (letter&gt;='t' &amp;&amp; letter&lt;='v') return '8';<br>    if (letter&gt;='w' &amp;&amp; letter&lt;='z') return '9';<br>    throw new IllegalArgumentException();<br>  }<br>  <br>  String getNumForWord(String word) {<br>    StringBuffer sb = new StringBuffer();<br>    for (int i=0; i&lt;word.length(); i++) {<br>      sb.append(getNum(word.charAt(i)));<br>    }<br>    return sb.toString();<br>  }<br>  <br>  public String[] getKeypresses(String[] messages) {<br>    HashMap dict = new HashMap();<br>    for (int i=0; i&lt;messages.length; i++) {<br>      String m[] = messages[i].split(" ");<br>      for (int j=0; j&lt;m.length; j++) {<br>        String numCode = getNumForWord(m[j]);<br>        TreeSet ts = (TreeSet) dict.get(numCode);<br>        if (ts == null) {<br>          ts = new TreeSet();<br>        }<br>        ts.add(m[j]);<br>        dict.put(numCode, ts);<br>      }<br>    }<br>    <br>    String rv[] = new String[messages.length];<br>    <br>    for (int i=0; i&lt;messages.length; i++) {<br>      int pos=0;<br>      StringBuffer sb = new StringBuffer();<br>      String msg = messages[i];<br>      while (pos &lt; msg.length()) {<br>        char c = msg.charAt(pos);<br>        if (c == ' ') {<br>          sb.append('#');<br>          pos++;<br>          continue;<br>        }<br>        StringBuffer wordBuf = new StringBuffer();<br>        for (;;) {<br>          if (pos &gt;= msg.length() || msg.charAt(pos) == ' ') break;<br>          wordBuf.append(msg.charAt(pos));<br>          pos++;<br>        }<br>        String word = wordBuf.toString();<br>        String code = getNumForWord(word);<br>        TreeSet wordSet = (TreeSet) dict.get(code);<br>        sb.append(code);<br>        for (Iterator it = wordSet.iterator(); it.hasNext(); ) {<br>          String w = (String) it.next();<br>          if (w.equals(word)) break;<br>          sb.append('0');<br>        }<br>      }<br>      <br>      rv[i] = sb.toString();<br>    }<br>    return rv;<br>  }<br>}<br> <br>// Powered by PopsEdit<br></td>