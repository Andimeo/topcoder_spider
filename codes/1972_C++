<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;cctype&gt;<br>using namespace std;<br><br>#define REP(i,n) for(int i=0;i&lt;(n);++i)<br>#define FOR(i,a,b) for(int i=(a);i&lt;=(b);++i)<br>#define FORD(i,a,b) for(int i=(a);i&gt;=(b);--i)<br>#define FOREACH(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();++i)<br><br>typedef long long LL; typedef vector&lt;int&gt; VI; typedef vector&lt;string&gt; VS;<br>const int INF = 1000000000;<br>template&lt;class T&gt; inline int size(const T&amp;c) { return c.size(); }<br><br>string i2s(int x) {<br>  char buf[20];<br>  sprintf(buf,"%d",x);<br>  return buf;<br>}<br><br>double stats[9][6];<br><br>double cache[9][2][2][2][21][4][10];<br><br>double calc(int n, int f,int s,int t, int done, int out, int inn) {<br>  if(n==9) n=0;<br>  if(out==3 || done==20) { out=0; done=0; f=0; s=0; t=0; ++inn; }<br>  if(inn==9) return 0.0;<br>  if(cache[n][f][s][t][done][out][inn]==-1) {<br>    double res=0.0;<br>    res += stats[n][0] * calc(n+1,f,s,t,done+1,out+1,inn);<br>    {<br>      int ff = f, ss=s, tt=t, cnt=0;<br>      if(ff) {<br>        if(ss) {<br>          if(tt) ++cnt;<br>          tt = 1;<br>        }<br>        ss = 1;<br>      }<br>      ff = 1;<br>      res += stats[n][1] * (cnt+calc(n+1,ff,ss,tt,done+1,out,inn));<br>    }<br>    res += stats[n][2] * (s+t+calc(n+1,1,f,0,done+1,out,inn));<br>    res += stats[n][3] * (f+s+t+calc(n+1,0,1,0,done+1,out,inn));<br>    res += stats[n][4] * (f+s+t+calc(n+1,0,0,1,done+1,out,inn));<br>    res += stats[n][5] * (1+f+s+t+calc(n+1,0,0,0,done+1,out,inn));<br>    cache[n][f][s][t][done][out][inn] = res;<br>  }<br>  return cache[n][f][s][t][done][out][inn];<br>}<br><br>struct BaseballLineup {<br>  // MAIN<br>  double expectedRuns(vector &lt;string&gt; aaa) {<br>    REP(i,9) {<br>      istringstream is(aaa[i]);<br>      REP(j,6) {<br>        int x; is &gt;&gt; x;<br>        stats[i][j] = x*0.001;<br>      }<br>    }<br>    REP(a,9) REP(b,2) REP(c,2) REP(d,2) REP(e,21) REP(f,4) REP(g,10)<br>      cache[a][b][c][d][e][f][g] = -1;<br>    return calc(0,0,0,0,0,0,0);<br>  }<br>};<br><br><br><br>// Powered by FileEdit<br></td>