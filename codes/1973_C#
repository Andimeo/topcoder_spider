<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br> <br>class Interval<br>{<br>  public Interval(long b, long e, long bv)<br>  {<br>    begin = b;<br>    end = e;<br>    begin_val = bv;<br>  }<br>  public long begin;<br>  public long end;<br> <br>  public long begin_val;<br>}<br> <br>public class Removal <br>{<br>  public int finalPos(int n, int k, string[] remove) <br>  {<br>    ArrayList al = new ArrayList();<br>    al.Add(new Interval(1, n, 1));<br> <br>    foreach(string a in remove)<br>    {<br>      string[] spl = a.Split(new char[] {'-'});<br>      long start = long.Parse(spl[0]);<br>      long end = long.Parse(spl[1]);<br> <br>      ArrayList newList = new ArrayList();<br> <br>      foreach(Interval inter in al)<br>      {<br> <br>        if(start &gt; inter.end)<br>        {<br>          newList.Add(inter);<br>          continue;<br>        }<br> <br>        if(end &lt; inter.begin)<br>        {<br>          newList.Add(inter);<br>          continue;<br>        }<br> <br>        if(end &gt;= inter.begin &amp;&amp; start &lt;= inter.end)<br>        {<br>          newList.Add(new Interval(inter.begin, start - 1, inter.begin_val));<br>          newList.Add(new Interval(end+1, inter.end, inter.begin_val+(end-inter.begin)+1));<br>          continue;<br>        }<br> <br>        if(end &lt;= inter.end)<br>        {<br>          newList.Add(new Interval(end+1, inter.end, inter.begin_val+(end-inter.begin)+1));<br>          continue;<br>        }<br> <br>        if(start &gt;= inter.begin)<br>        {<br>          newList.Add(new Interval(inter.begin, start - 1, inter.begin_val));<br>          continue;<br>        }<br>      }<br> <br>      al = newList;<br>      long length = end - start + 1;<br>      foreach(Interval inter in al)<br>      {<br>        if(inter.begin &gt;= start) inter.begin -= length;<br>        if(inter.end &gt;= start) inter.end -= length;<br>      }<br> <br> <br>      Console.WriteLine();<br> <br> <br>    }<br> <br>    foreach(Interval inter in al)<br>    {<br>      if(k &gt;= inter.begin &amp;&amp; k &lt;= inter.end) return (int) (inter.begin_val + k - inter.begin);<br>    }<br>    <br>    return -1;<br>  }<br>}<br></td>