<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;vector&gt;<br>#include &lt;set&gt;<br>#include &lt;string&gt;<br>#include &lt;cmath&gt;<br>#include &lt;sstream&gt;<br>#include &lt;map&gt;<br>#include &lt;algorithm&gt;<br><br>using namespace std;<br><br><br>#ifdef __GNUC__<br>typedef long long i64;<br>#endif<br><br>#ifdef __WIN32__<br>typedef __int64 i64;<br>#endif<br><br>#define VI vector &lt;int&gt;<br>#define VVI vector &lt; VI &gt;<br>#define VS vector &lt;string&gt;<br>#define VVS vector &lt; VS &gt;<br><br>#define forn(i, n) for(int i = 0; i &lt; (n); i++)<br>#define fors(i, s) forn(i, s.length())<br>#define forv(i, v) forn(i, v.size())<br><br>#define pb push_back<br><br>int str2int(string s);<br>string int2str(int ind);<br>vector &lt;string&gt; tokenize(string s, string tokens);<br><br>int str2int(string s) {<br>        stringstream ss;<br>        int res;<br>        ss &lt;&lt; s;<br>        ss &gt;&gt; res;<br>        return res;<br>}<br><br>string int2str(int ind) {<br>        stringstream ss;<br>        string res;<br>        ss &lt;&lt; ind;<br>        ss &gt;&gt; res;<br>        return res;<br>}<br><br>vector &lt;string&gt; tokenize(string s, string tokens) {<br>        s = s + tokens;<br>        vector &lt;string&gt; res;<br>        string tmp;<br>        for (int i = 0; i &lt; s.length(); i++) {<br>                if (tokens.find(s[i]) != string::npos) {<br>                        if (tmp != "") {<br>                                res.push_back(tmp);<br>                                tmp = "";<br>                        }<br>                } else <br>                        tmp += s[i];<br>        }<br>        return res;<br>}<br><br>//---------------------------------------------------<br><br>int read_int(void) {<br>        int res;<br>        cin &gt;&gt; res;<br>        return res;<br>}<br><br>int readln_int(void) {<br>        int res = read_int();<br>        string s;<br>        getline(cin, s);<br>        return res;<br>}<br><br>string readln_string(void) {<br>        string s, res;<br>        getline(cin, s);<br>        for (int i = 0; i &lt; s.length(); i++)<br>                if (s[i] &gt; 13) res += s[i];<br>        return res;<br>}<br><br>vector &lt;int&gt; read_vector_int(void) {<br>        vector &lt;int&gt; res;<br>        string tmp;<br>        char ch = ' ';<br>        while (ch != '{') cin &gt;&gt; ch;<br>        cin &gt;&gt; ch;<br>        while (ch != '}') {<br>                if (ch == ',') {<br>                        if (tmp != "") {<br>                                stringstream ss;<br>                                int r;<br>                                ss &lt;&lt; tmp;<br>                                ss &gt;&gt; r;<br>                                res.push_back(r);<br>                                tmp = "";<br>                        }<br>                } else {<br>                        if ((ch &gt;= '0' &amp;&amp; ch &lt;= '9') || (ch == '-')) tmp += ch;<br>                }<br>                cin &gt;&gt; ch;<br>        }<br>        if (tmp != "") {<br>                stringstream ss;<br>                int r;<br>                ss &lt;&lt; tmp;<br>                ss &gt;&gt; r;<br>                res.push_back(r);<br>        }<br>        return res;<br>}<br><br>void write_vector_int(vector &lt;int&gt; data) {<br>        cout &lt;&lt; "SIZE = " &lt;&lt; data.size() &lt;&lt; endl;<br>        for (int i = 0; i &lt; data.size(); i++)<br>                cout &lt;&lt; "x[" &lt;&lt; i &lt;&lt; "] = " &lt;&lt; data[i] &lt;&lt; endl;<br>}<br><br>vector &lt;string&gt; read_vector_string(void) {<br>        vector &lt;string&gt; res;<br>        string tmp;<br>        char ch = ' ';<br>        while (ch != '{') cin &gt;&gt; ch;<br>        while (ch != '}') {<br>                while (ch != '"') cin.get(ch);<br>                cin.get(ch);<br>                while (ch != '"') {<br>                        if (ch &gt; 13) tmp += ch;<br>                        cin.get(ch);<br>                }<br>                cin.get(ch);<br>                while (ch == ' ') cin.get(ch);<br>                res.push_back(tmp);<br>                tmp = "";<br>        }<br>        return res;<br>}<br><br>void write_vector_string(vector &lt;string&gt; data) {<br>        cout &lt;&lt; "SIZE = " &lt;&lt; data.size() &lt;&lt; endl;<br>        for (int i = 0; i &lt; data.size(); i++)<br>                cout &lt;&lt; "x[" &lt;&lt; i &lt;&lt; "] = " &lt;&lt; data[i] &lt;&lt; endl;<br>}<br><br>//-------------------------------------------------------------------------------------<br><br>int n;<br>int ans;<br><br>class Removal {<br>    public :<br>    int finalPos(int n, int k, vector &lt;string&gt; r) {<br>        int res;<br>        ans = 0;<br>        i64 cur = k;<br>        if (r.size() == 0)<br>            return k;<br>        for(int i = r.size() - 1; i &gt;= 0; i--)<br>        {<br>            int lo, hi;<br>            sscanf(r[i].c_str(), "%d-%d", &amp;lo, &amp;hi);<br>            if (lo &gt; cur) continue;<br>            cur = i64(hi) + cur - i64(lo) + 1;<br>            if (cur &gt; n)<br>                return -1;<br>        }<br>        return cur;<br>    }<br>    <br> <br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>