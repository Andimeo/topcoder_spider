<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br><br>public class ScheduleStrength {<br>  struct Team<br>  {<br>    public string name;<br>    public int p;<br>    public int q;<br><br>    public Team(string name)<br>    {<br>      this.name = name;<br>      p = 0;<br>      q = 0;<br>    }<br>  }<br><br>  class TeamComparer : IComparer<br>  {<br>    public int Compare(object x, object y)<br>    {<br>      Team tx = (Team) x;<br>      Team ty = (Team) y;<br><br>      if (tx.p*ty.q &gt; tx.q*ty.p)<br>        return -1;<br>      else if (tx.p*ty.q &lt; tx.q*ty.p)<br>        return 1;<br>      else<br>        return tx.name.CompareTo(ty.name);<br>    }<br>  }<br><br>  public string[] calculate(string[] teams, string[] results) {<br>    int n = teams.Length;<br><br>    Team[] t = new Team[n];<br><br>    for (int i = 0; i &lt; n; ++i)<br>    {<br>      Team ct = new Team(teams[i]);<br><br>      for (int j = 0; j &lt; n; ++j)<br>        if (i != j &amp;&amp; results[i][j] != '-')<br>          for (int k = 0; k &lt; n; ++k)<br>            if (j != k &amp;&amp; i != k &amp;&amp; results[j][k] != '-')<br>            {<br>              ++ct.q;<br>              if (results[j][k] == 'W')<br>                ++ct.p;<br>            }<br><br>      t[i] = ct;<br>    }<br><br>    Array.Sort(t, new TeamComparer());<br><br>    string[] res = new string[n];<br><br>    for (int i = 0; i &lt; n; ++i)<br>      res[i] = t[i].name;<br><br>    return res;<br>  }<br><br>  <br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>