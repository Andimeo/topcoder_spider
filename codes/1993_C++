<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cassert&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;complex&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;ctime&gt;<br>#include &lt;deque&gt;<br>#include &lt;functional&gt;<br>#include &lt;iterator&gt;<br>#include &lt;iostream&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;string&gt;<br>#include &lt;valarray&gt;<br>#include &lt;vector&gt;<br><br>using namespace std;<br><br>#ifdef  WIN32<br>typedef __int64 int64;<br>#define min __min<br>#define max __max<br>#else<br>typedef long long int64;<br>#endif<br><br>vector&lt;double&gt; strength;<br>vector&lt;string&gt; tms;<br><br>const double eps=1e-12;<br><br>bool cmp(int a,int b)<br>{<br>  if(fabs(strength[a]-strength[b])&gt;eps)<br>    return (strength[a]&gt;strength[b]+eps);<br>  return tms[a]&lt;tms[b];<br>}<br><br>class ScheduleStrength {<br>  public:<br>  vector &lt;string&gt; calculate(vector &lt;string&gt; teams, vector &lt;string&gt; results) <br>  {<br>    vector &lt;string&gt; res;<br>    int  i,j,k;<br>    int n=results.size();<br>    tms=teams;<br>    strength.resize(n);<br>    vector&lt;int&gt; per;<br>    for(i=0;i&lt;n;i++)<br>    {<br>      int allgames=0;<br>      int wins=0;<br>      for(j=0;j&lt;n;j++)<br>        if(results[i][j]!='-')<br>        {<br>          for(k=0;k&lt;n;k++)<br>            if(k!=i&amp;&amp;results[j][k]!='-')<br>            {<br>              allgames++;<br>              if(results[j][k]=='W')<br>                wins++;<br>            }<br>        }<br>      strength[i]=double(wins)/double(allgames);<br>    }<br>    for(i=0;i&lt;n;i++)<br>      per.push_back(i);<br>    sort(per.begin(),per.end(),&amp;cmp);<br>    res.clear();<br>    for(i=0;i&lt;n;i++)<br>      res.push_back(teams[per[i]]);<br>    return res;<br>  }<br>  <br><br>};<br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>