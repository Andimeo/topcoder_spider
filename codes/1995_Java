<td class="problemText" colspan="8" valign="middle" align="left">
            // Powered by radeclipse!<br>import java.util.* ;<br>public class BadParser {<br>  int[] s2ia(String s) {<br>    StringTokenizer t=new StringTokenizer(s.trim());<br>    int[]r=new int[t.countTokens()];<br>    int i=0;<br>    while(t.hasMoreTokens())try{<br>      r[i++]=Integer.parseInt((String)t.nextToken());<br>    }catch(Exception e){};<br>    return r;<br>  }<br>  String[] bad ;<br>  String get(int i) {<br>    if (bad[i].indexOf(" ") &lt; 0) {<br>      return bad[i] ;<br>    } else {<br>      int[] f = s2ia(bad[i]) ;<br>      return get(f[1]) + bad[i].charAt(0) + get(f[2]) ;<br>    }<br>  }<br>  int eval(String s) {<br>    System.out.println("See " + s) ;<br>    for (int i=s.length()-1; i&gt;=0; i--) {<br>      if (s.charAt(i) == '+' || s.charAt(i) == '-') {<br>  return eval(s.substring(0, i)) + (s.charAt(i) == '+' ? 1 : -1) *<br>    eval(s.substring(i+1)) ;<br>      }<br>    }<br>    for (int i=s.length()-1; i&gt;=0; i--) {<br>      if (s.charAt(i) == '*' || s.charAt(i) == '/') {<br>  if (s.charAt(i) == '*')<br>    return eval(s.substring(0, i)) *  eval(s.substring(i+1)) ;<br>  else<br>    return eval(s.substring(0, i)) /  eval(s.substring(i+1)) ;<br>      }<br>    }<br>    return Integer.parseInt(s) ;<br>  }<br>  public int evaluate(String[] badTree) {<br>    bad = badTree ;<br>    return eval(get(0)) ;<br>  }<br>}<br></td>