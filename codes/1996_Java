<td class="problemText" colspan="8" valign="middle" align="left">
            /*/*///*/*/ Powered by radedit!            /*/*/*/*/*/ ;<br>/*/*//*/*/  import java . util .           /*/*/*/*/*/ ;<br>/*/*//*/*/  import java . lang . reflect . /*/*/*/*/*/ ;<br>public class MiniPaint {<br>   boolean ddd = false ;<br>  int[] dostr(String s) {<br>    char[] ss = s.toCharArray() ;<br>    int n = s.length() + 1 ;<br>    int[][] w = new int[n][n] ;<br>    int[] r = new int[s.length()-1] ;<br>    for (int i=0; i&lt;n; i++) {<br>      w[i][0] = i ;<br>    }<br>    for (int at=1; at&lt;=s.length(); at++) {<br>      for (int j=0; j&lt;n; j++) {<br>  w[at][j] = w[at-1][j] + 1 ;<br>      }<br>      int countB = 0 ;<br>      int countW = 0 ;<br>      for (int bef=at-1; bef&gt;=0; bef--) {<br>  if (ss[bef] == 'B')<br>    countB++ ;<br>  else<br>    countW++ ;<br>  int m = Math.min(countB, countW) ;<br>  for (int k=1; k&lt;n; k++) {<br>    w[at][k] = Math.min(w[at][k],<br>            w[bef][k-1] + m) ;<br>  }<br>      }<br>    }<br>    System.out.print("For " + s + " we got ") ;<br>    for (int i=0; w[s.length()][i] &gt; 0; i++) {<br>      System.out.print(" " + w[s.length()][i]) ;<br>    }<br>    System.out.println() ;<br>    return w[s.length()] ;<br>  }<br>  public int leastBad(String[] picture, int maxStrokes) {<br>    int i, j, k ;<br>    int[] best = new int[3010] ;<br>    for (i=0; i&lt;picture.length; i++) {<br>      int nn = picture[i].length() ;<br>      int[] a = dostr(picture[i]) ;<br>      int newbest[] = new int[3010] ;<br>      for (j=0; j&lt;3010; j++) {<br>  newbest[j] = best[j] + nn ;<br>      }<br>      for (j=0; j&lt;a.length; j++) { // how many to give to this pic<br>  for (k=j; k&lt;3010; k++) {<br>    newbest[k] = Math.min(newbest[k], best[k-j] + a[j]) ;<br>  }<br>      }<br>      best = newbest ;<br>    }<br>    return best[maxStrokes] ;<br>  }<br> <br>  static void pp(Object o) { System.out.println(o) ; }<br>}<br></td>