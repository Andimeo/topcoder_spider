<td class="problemText" colspan="8" valign="middle" align="left">
            using System; using System.Collections; public class Find3Cheaters<br>{<br>  public int shortest(string a, string b, string c) {<br>    int A=a.Length, B=b.Length, C=c.Length;<br>    int[,,] x=new int[A+1,B+1,C+1];<br>    <br>    for (int i=0; i&lt;=A; i++) for (int j=0; j&lt;=B; j++) for (int k=0; k&lt;=C; k++)<br>    {<br>      if (i+j+k==0) continue;<br>      int best=999999;<br>      if (i&gt;0) best = x[i-1,j-MATCH(a,i-1,b,j-1),k-MATCH(a,i-1,c,k-1)] + 1;<br>      if (j&gt;0) best = Math.Min(best,x[i-MATCH(a,i-1,b,j-1), j-1, k-MATCH(b,j-1,c,k-1)] + 1);<br>      if (k&gt;0) best = Math.Min(best,x[i-MATCH(a,i-1,c,k-1), j-MATCH(b,j-1,c,k-1), k-1] + 1);<br>      x[i,j,k]=best;<br>    }<br>    <br>    return x[A,B,C];<br>}<br> <br>int MATCH(String a, int A, String b, int B)<br>{<br>  if (A&gt;=0 &amp;&amp; B&gt;=0 &amp;&amp; a[A]==b[B]) return 1;<br>  return 0;<br>}<br> <br>static ArrayList AR { get { return new ArrayList(); }}<br>static Hashtable MAP { get { return new Hashtable(); }}<br> <br>static int   [] IA(ArrayList ar) { return (int   []) ar.ToArray(typeof(int   )); }<br>static string[] SA(ArrayList ar) { return (string[]) ar.ToArray(typeof(string)); }<br> <br>int    INT   (Object x) { return Convert.ToInt32 (x.ToString()); }<br>long   LONG  (Object x) { return Convert.ToInt64 (x.ToString()); }<br>double DOUBLE(Object x) { return Convert.ToDouble(x.ToString()); }<br> <br>static void WR(Object x, params object[] p) { Console.Write(x.ToString(), p); }<br>static void WL(Object x, params object[] p) { Console.WriteLine(x.ToString(), p); }<br>static void WL() { WL(""); }<br>static void WS(params Object[] c) { foreach (Object x in c) WR(x.ToString() + " "); }<br>static void WSL(params Object[] c) { foreach (Object x in c) WR(x.ToString() + " "); WL(); }<br>static void WS(Array ar, int X) { for (int x=0; x&lt;X; x++) WS(ar.GetValue(x)); WL(); }<br>static void WS(Array ar, int X, int Y) { for (int y=0; y&lt;Y; y++) { for (int x=0; x&lt;X; x++) WS(ar.GetValue(x,y)); WL(); }}}<br> <br>// Powered by PopsEdit<br></td>