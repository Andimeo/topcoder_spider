<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;functional&gt;<br>#include &lt;iostream&gt;<br>#include &lt;map&gt;<br>#include &lt;stack&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br> <br>using namespace std;<br> <br>typedef vector&lt;bool&gt; VB; typedef vector&lt;double&gt; VD;<br>typedef vector&lt;int&gt; VI; typedef vector&lt;string&gt; VS;<br> <br>#define N 0<br>#define S 1<br>#define E 2<br>#define W 3<br> <br>int go(int y, int x, int dir, VS pipes, VS vis)<br>{<br>  int ny=y,nx=x,ret=0;<br>  <br>  if(dir==N) ny=y-1;<br>  if(dir==S) ny=y+1;<br>  if(dir==E) nx=x+1;<br>  if(dir==W) nx=x-1;<br>  <br>  if(nx&lt;0||nx&gt;=pipes[0].length()) return 0;<br>  if(ny&lt;0||ny&gt;=pipes.size()) return 0;<br>  if(vis[ny][nx]=='Y'&amp;&amp;pipes[ny][nx]!='+') return 0;<br>  <br>  vis[ny][nx]='Y';<br>  ret++;<br>  <br>  if(pipes[ny][nx]=='L') {<br>    if(dir==N||dir==S) ret+=max( go(ny,nx,E,pipes,vis), go(ny,nx,W,pipes,vis) );<br>    else ret+= max( go(ny,nx,N,pipes,vis), go(ny,nx,S,pipes,vis) );<br>  }<br>  else ret+=go(ny,nx,dir,pipes,vis);<br>  <br>  return ret;<br>}<br> <br>class PipePuzzle<br>{<br>public:<br> <br>int longest(VS pipes)<br>{<br>  int i,j;<br>  int x=-1,y=-1,dir;<br>  <br>  string dirs="NSEW";<br>  <br>  for(i=0;i&lt;pipes.size();i++) {<br>    if(x!=-1&amp;&amp;y!=-1) break;<br>    for(j=0;j&lt;pipes[i].length();j++) {<br>      if(dirs.find(pipes[i][j])!=string::npos) {<br>        y=i;x=j;<br>        dir=dirs.find(pipes[i][j]);<br>        break;<br>      }<br>    }<br>  }<br>  <br>  VS vis=pipes;<br>  for(i=0;i&lt;pipes.size();i++) for(j=0;j&lt;pipes[i].length();j++) vis[i][j]='N';<br>  vis[y][x]='Y';<br>  <br>  return go(y,x,dir,pipes,vis);<br>}<br> <br>};<br></td>