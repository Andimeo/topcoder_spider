<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;  typedef vector&lt;vector&lt;int&gt; &gt; VVI;<br>typedef vector&lt;string&gt; VS;  typedef vector&lt;vector&lt;string&gt; &gt; VVS;<br>typedef signed long long i64;  typedef unsigned long long u64;<br><br>string vowels = "AEIOU";<br><br>class WordForm {<br>public:<br>string getSequence(string word) {<br>  int i, j, k, x, y, z, n;<br>  string ret;<br>  char ch;<br><br>  for( i = 0; i &lt; word.size(); i++ ) {<br>    word[i] = toupper(word[i]);<br>    if( vowels.find(word[i]) != -1 ) {<br>      ch = 'V';<br>    } else if( word[i] == 'Y' &amp;&amp; ret.size() &amp;&amp; ret[ret.size()-1] == 'C' ) {<br>      ch = 'V';<br>    } else {<br>      ch = 'C';<br>    }<br>    if( !ret.size() || ret[ret.size()-1] != ch ) ret += ch;<br>  }<br>  return ret;<br>}<br>};<br><br><br>// Powered by FileEdit<br></td>