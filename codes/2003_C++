<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cctype&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;stack&gt;<br>using namespace std;<br><br>#define REP(i,n) for(int i=0;i&lt;(n);++i)<br>#define FOR(i,a,b) for(int i=(a);i&lt;=(b);++i)<br>#define FORD(i,a,b) for(int i=(a);i&gt;=(b);--i)<br>#define FOREACH(it,c) for(typeof((c).begin()) it=(c).begin();it!=(c).end();++it)<br><br>const int INF = 1000000000;<br>typedef long long LL;<br>typedef vector&lt;int&gt; VI;<br>template&lt;class T&gt; inline int size(const T&amp;c) { return c.size(); }<br>string i2s(int x) {<br>  char buf[20];<br>  sprintf(buf,"%d",x);<br>  return buf;<br>}<br><br>////////////////////////////////////////////////////////////<br><br>string com;<br>vector&lt;int&gt; lewy,prawy;<br><br>void parse() {<br>  stack&lt;int&gt; ss;<br>  REP(i,size(com)) {<br>    if(com[i]=='.') {<br>      ss.push(i);<br>    }<br>    else {<br>      prawy[i] = ss.top(); ss.pop();<br>      lewy[i] = ss.top(); ss.pop();<br>      ss.push(i);<br>    }<br>  }<br>}<br><br>int cache[100][100];<br><br>int calc2(int,int);<br><br>int calc(int maxh, int poz) {<br>  if(com[poz]=='.') {<br>    if(maxh&lt;1) return INF;<br>    return 0;<br>  }<br>  else {<br>    int sw0 = calc2(maxh,lewy[poz])+calc2(maxh-1,prawy[poz]);<br>    int sw1 = 1+calc2(maxh-1,lewy[poz])+calc2(maxh,prawy[poz]);<br>    return min(min(sw0,sw1),INF);<br>  }<br>}<br><br><br>int calc2(int a,int b) {<br>  if(cache[a][b]==-1)<br>    cache[a][b] = calc(a,b);<br>  return cache[a][b];<br>}<br><br>struct StackMachine {<br>  // MAIN<br>  vector &lt;int&gt; minimize(string commands) {<br>    com = commands;<br>    REP(a,100) REP(b,100) cache[a][b] = -1;<br>    lewy.resize(size(com));<br>    prawy.resize(size(com));<br>    parse();<br>    int aa = -1, bb = size(com) + 1;<br>    int nsw = -1;<br>    while(bb-aa&gt;1) {<br>      int cc = (aa+bb)/2;<br>      int v;<br>      v = calc(cc, size(com)-1);<br>      if(v==INF) aa = cc; else { bb=cc; nsw = v; }<br>    }<br>    VI res;<br>    res.push_back(bb);<br>    res.push_back(nsw);<br>    return res;<br>  }<br>};<br><br><br><br>// Powered by FileEdit<br></td>