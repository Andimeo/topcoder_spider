<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class LogCabin<br>{<br>  int[] f;<br>  int cut[] = new int[50];<br>  int max = 0;  <br> <br>  public void recurse(int level)<br>  {<br>    int tmp = level + 1;<br>    if (max &lt; level) max = level;<br>/*    if (level == 19) <br>    {<br>      System.out.println("--- level");<br>      for (int i = 0; i &lt; max; i++) System.out.println(cut[i]);<br>    }*/<br>//    System.out.println(level + " " + f[0] + " " + f[1] + " " + f[2] + " " + f[3] + "---" + cut[level] + " " + cut[level - 2] + " " +  cut[level - 3]);<br>    for (int i = 0; i &lt; 4; i++)<br>    {<br>      if (f[i] &gt;= (tmp &gt;&gt; 1) &amp;&amp; <br>          cut[level] != i   &amp;&amp;<br>          cut[level - 2] != i &amp;&amp;<br>          cut[level - 3] != i) <br>      {<br>        if (level &lt;= 3 &amp;&amp; cut[level - 1] == i) continue;<br>        cut[tmp] = i;<br>        f[i] -= tmp &gt;&gt; 1;<br>        recurse (tmp);<br>        f[i] += tmp &gt;&gt; 1;<br>        cut[tmp] = 6;<br>      }<br>    }<br>  }<br> <br>  public int maxStrips(int[] fabrics)<br>  {<br>    f = fabrics;<br>    Arrays.fill(cut, 6);<br>    Arrays.sort(f);<br>    for (int i = 0; i &lt; 4; i++)<br>    {<br>      f[i]--;<br>      for (int j = 0; j &lt; 4; j++)<br>      {<br>        if (i == j) continue;<br>        f[j]--;<br>        cut[2] = i; cut[3] = j;<br>        recurse(3);<br>        f[j]++;<br>      }<br>      f[i]++;<br>    }<br>    return max - 1;<br>  }<br>}<br></td>