<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class Deranged<br>{<br>  public long numDerangements(int[] nums) <br>  {<br>    int[] available = new int[nums.length];<br>    for(int i = 0; i &lt; nums.length; i++) available[nums[i]]++;<br>    return numDerangements(nums, available, 0);<br>  }<br>  <br>  public Long getHash(int[] available)<br>  {<br>    long hash = 0;<br>    for(int i = 0; i &lt; available.length; i++)<br>    {<br>      hash *= available.length;<br>      hash += available[i];<br>    }<br>    return new Long(hash);<br>  }<br>  <br>  Hashtable cache = new Hashtable();<br>  public long numDerangements(int[] nums, int[] available, int pos)<br>  {<br>    long r = 0;<br>    if(cache.containsKey(getHash(available)))<br>    {<br>      long[] temp = (long[])cache.get(getHash(available));<br>      if(temp[pos] &gt;= 0) return temp[pos];<br>    }<br>    else<br>    {<br>      long[] temp = new long[nums.length + 1];<br>      for(int i = 0; i &lt; temp.length; i++) temp[i] = -1;<br>      cache.put(getHash(available), temp);<br>    }<br>    if(pos &gt;= nums.length) r = 1;<br>    else<br>    {<br>      for(int i = 0; i &lt; available.length; i++)<br>      {<br>        if(available[i] == 0 || nums[pos] == i) continue;<br>        available[i]--;<br>        r += numDerangements(nums, available, pos + 1);<br>        available[i]++;<br>      }<br>    }<br>    long[] cached = (long[])cache.get(getHash(available));<br>    cached[pos] = r;<br>    cache.put(getHash(available), cached);<br>    return r;<br>  }<br> <br>  <br>}<br> <br>// Powered by PopsEdit<br>// Powered by CodeProcessor<br></td>