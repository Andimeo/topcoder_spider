<td class="problemText" colspan="8" valign="middle" align="left">
            public class ChessCover {<br> <br>char[][] board;<br>boolean[][] a;<br>int xd, yd;<br> <br>int[] fx = { 0,1,0,-1,-1,1,-1,1 };<br>int[] fy = { 1,0,-1,0,-1,-1,1,1 };<br>int[] dx = { 1,1,-1,-1};<br>int[] dy = { -1,1,1,-1};<br>int[] sx = { 0,0,1,-1};<br>int[] sy = { 1,-1,0,0};<br> <br>int[] kx = {1,-1, 1,-1,2,-2, 2,-2};<br>int[] ky = {2, 2,-2,-2,1, 1,-1,-1};<br> <br>void mark(int x, int y, int[] cx, int[] cy) {<br>  for (int i=0; i&lt;cx.length; i++) {<br>    int curx=x+cx[i];<br>    int cury=y+cy[i];<br>    while (curx&gt;=0 &amp;&amp; cury&gt;=0 &amp;&amp; curx&lt;xd &amp;&amp; cury&lt;yd &amp;&amp; board[curx][cury]=='U') {<br>      a[curx][cury]=true;<br>      curx+=cx[i];<br>      cury+=cy[i];<br>    }<br>  }<br>}<br> <br>void mark2(int x, int y, int[] cx, int[] cy) {<br>  for (int i=0; i&lt;cx.length; i++) {<br>    int curx=x+cx[i];<br>    int cury=y+cy[i];<br>    if (curx&gt;=0 &amp;&amp; cury&gt;=0 &amp;&amp; curx&lt;xd &amp;&amp; cury&lt;yd &amp;&amp; board[curx][cury]=='U') {<br>      a[curx][cury]=true;<br>      curx+=cx[i];<br>      cury+=cy[i];<br>    }<br>  }<br>}<br> <br>public int getSafe(String[] sboard) {<br>  if (sboard.length==0) return 0;<br>  xd = sboard[0].length(); <br>  yd = sboard.length;<br> <br>  board = new char[xd][yd];<br>  a = new boolean [xd][yd];<br> <br>  for (int y=0; y&lt;yd; y++) for (int x=0; x&lt;xd; x++)<br>    board[x][y]=sboard[y].charAt(x);<br> <br>  for (int y=0; y&lt;yd; y++) for (int x=0; x&lt;xd; x++) if (board[x][y]!='U') {<br>    if (board[x][y]=='Q') {<br>      mark(x,y,fx,fy);<br>    } else if (board[x][y]=='R') {<br>      mark(x,y,sx,sy);<br>    } else if (board[x][y]=='B') {<br>      mark(x,y,dx,dy);<br>    } else if (board[x][y]=='K') {<br>      mark2(x,y,kx,ky);<br>    } else if (board[x][y]=='P') {<br>      mark2(x,y,dx,dy);<br>    }<br>  }<br> <br>  int sf =0;<br>  for (int x=0; x&lt;xd; x++) for (int y=0; y&lt;yd; y++)<br>    if (board[x][y]=='U' &amp;&amp; !a[x][y]) sf++;  <br> <br>  return sf;<br>}<br> <br> <br> <br>}<br></td>