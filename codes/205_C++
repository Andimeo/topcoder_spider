<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;stdio.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br> <br>class ArgParser<br>{<br> public:vector&lt;string&gt; parse(string args)<br> {<br>  vector&lt;string&gt; ret, fail;<br>  char buf[4096], word[4096];<br>  int len, wordi, i;<br> <br>  strcpy(buf, args.c_str());<br>  len = strlen(buf);<br>  if(*buf != '{' || buf[strlen(buf) - 1] != '}')<br>   goto failure;<br>  wordi = 0;<br>  for(i = 1; i &lt; len - 1; i++) {<br>   if(buf[i] != '\\' &amp;&amp; buf[i] != ',' &amp;&amp; buf[i] != '{' &amp;&amp; buf[i] != '}') {<br>    word[wordi++] = buf[i];<br>    continue;<br>   }<br>   if(buf[i] == '{' || buf[i] == '}')<br>    goto failure;<br>   if(buf[i] == ',') {<br>    if(buf[i + 1] != ' ')<br>     goto failure;<br>    word[wordi] = 0;<br>    ret.push_back(string(word));<br>    wordi = 0;<br>    i++;<br>    continue;<br>   }<br>   i++;<br>   if(buf[i] != ',' &amp;&amp; buf[i] != '{' &amp;&amp; buf[i] != '}') {<br>    i--;<br>    word[wordi++] = buf[i];<br>    continue;<br>   }<br>   word[wordi++] = buf[i];<br>  }<br>  if(i != len - 1)<br>   goto failure;<br>  word[wordi] = 0;<br>  ret.push_back(string(word));<br>  return ret;<br> <br>failure:<br>  fail.push_back(string("INVALID"));<br>  return fail;<br> }<br>};<br></td>