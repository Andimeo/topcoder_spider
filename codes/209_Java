<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class Networking {<br> <br>int[][] numconns;<br>String[] cs;<br>int[] frm;<br>int[] to;<br>double[] prob;<br>int numnodes;<br> <br>public double getProbability(int nodes, String[] conns) {<br>  numnodes = nodes;<br>  numconns = new int[nodes][nodes];<br>  cs = conns;<br> <br>  frm = new int[conns.length];<br>  to = new int[conns.length];<br>  prob = new double[conns.length];<br>  for (int i=0; i&lt;conns.length; i++) {<br>    StringTokenizer st = new StringTokenizer(conns[i]);<br>    frm[i] = Integer.parseInt(st.nextToken());<br>    to[i] = Integer.parseInt(st.nextToken());<br>    prob[i] = Double.parseDouble(st.nextToken());<br>  }<br> <br>  return rec(0);<br> <br>}<br> <br>double rec(int lev) {<br>  if (lev == cs.length) {<br>    boolean[] touched = new boolean[numnodes];<br>    touched[0]=true;<br>    boolean done = false;<br>    while (!done) {<br>      done = true;<br>      for (int i=0; i&lt;numnodes; i++) if (touched[i]) for (int j=0; j&lt;numnodes; j++) if (!touched[j]) {<br>        if (numconns[i][j]&gt;0) {<br>          touched[j]=true;<br>          done = false;<br>          if (j==numnodes-1) {<br>            return 1.0;<br>          }<br>        }<br>      }<br>    }<br>    return 0.0;<br>  } else {<br>    double cprob=(1-prob[lev])*rec(lev+1);<br> <br>    numconns[frm[lev]][to[lev]]++;<br>    numconns[to[lev]][frm[lev]]++;<br> <br>    cprob+=prob[lev]*rec(lev+1);<br> <br>    numconns[frm[lev]][to[lev]]--;<br>    numconns[to[lev]][frm[lev]]--;<br> <br>    return cprob;<br>  }<br>}<br> <br> <br> <br> <br>}<br></td>