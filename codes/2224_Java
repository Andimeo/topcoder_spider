<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class DNAMultiMatcher {<br>  public int longestMatch(String[] sequence1, String[] sequence2, String[] sequence3) {<br>    TreeSet w1 = new TreeSet();<br>    TreeSet w2 = new TreeSet();<br>    String s1 = "", s2 = "", s3 = "";<br>    for (int i=0; i&lt;sequence1.length; i++) s1 += sequence1[i];<br>    for (int i=0; i&lt;sequence2.length; i++) s2 += sequence2[i];<br>    for (int i=0; i&lt;sequence3.length; i++) s3 += sequence3[i];<br>    for (int i=0; i&lt;s1.length(); i++) {w1.add(s1.substring(i)); <br>//      System.out.println(s1.substring(i));<br>    }<br>    for (int i=0; i&lt;s2.length(); i++) w2.add(s2.substring(i));<br>    int result = 0;<br>    for (int i=0; i&lt;s3.length(); i++)<br>    {<br>      for (int j=result+1; j&lt;s3.length()-i+1; j++)<br>      {<br>        String z = s3.substring(i, i+j);<br>        SortedSet ww = w1.subSet(z, "Z");<br>        if (ww.size() == 0) break;<br>        String p = (String)ww.first();<br>        if (p.length() &lt; j || ! p.substring(0, j).equals(z)) break;<br>        ww = w2.subSet(z, "Z");<br>        if (ww.size() == 0) break;<br>        String q = (String)ww.first();<br>        if (q.length() &lt; j || ! q.substring(0, j).equals(z)) break;<br>        result = j;<br>        //System.out.println(s3.substring(i, i+j));<br>      }<br>    }<br>    return result;<br>  }<br>}<br> <br>// Powered by PopsEdit<br></td>