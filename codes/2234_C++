<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br> <br>struct ProbabilityTree {<br>int par[60];<br>int ptak[60];<br>int pnie[60];<br>VI adj[60];<br>double prob[60];<br> <br>void drzewo(int korz) {<br>   for (int i = 0; i &lt; adj[korz].size(); ++i) {<br>      int kk = adj[korz][i];<br>      prob[kk] = double(ptak[kk]/100.0) * prob[korz] + double(pnie[kk]/100.0) * (1.0 - prob[korz]);<br>      drzewo(kk);<br>   }<br>}<br> <br>VI getOdds(VS tree, int low, int upp) {<br>   int pr;<br>   sscanf(tree[0].c_str(), "%d", &amp;pr); prob[0] = double(pr) / 100.0;<br>   for (int i = 1; i &lt; tree.size(); ++i) {<br>      sscanf(tree[i].c_str(), "%d %d %d", &amp;par[i], &amp;ptak[i], &amp;pnie[i]);<br>      adj[par[i]].push_back(i);<br>   }<br>   drzewo(0);<br>   VI odp;<br>   for (int i = 0; i &lt; tree.size(); ++i)<br>      if (prob[i]*100.0 &gt; double(low) &amp;&amp; prob[i]*100.0 &lt; double(upp)) odp.push_back(i);<br>   return odp;<br>}<br>};<br></td>