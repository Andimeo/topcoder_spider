<td class="problemText" colspan="8" valign="middle" align="left">
            Option Explicit On <br>Option Strict On<br> <br>Public Class ProbabilityTree<br>    Public Function getOdds(ByVal tree As String(), ByVal lowerBound As Integer, ByVal upperBound As Integer) As Integer()<br>        Dim tmpNodes() As EventNode<br>        Dim tc As Integer<br>        Dim mc As Integer = tree.Length<br>        Dim tmpIsC As Boolean<br>        Dim tmpI() As Integer<br>        Dim tmpCI As Integer = -1<br> <br>        ReDim tmpNodes(mc - 1)<br>        For tc = 0 To mc - 1<br>            tmpNodes(tc) = New EventNode(tc, tree(tc))<br>        Next<br>        tmpIsC = True<br>        While tmpIsC<br>            tmpIsC = False<br>            For tc = 0 To mc - 1<br>                If Not tmpNodes(tc).isComputed Then<br>                    If tmpNodes(tmpNodes(tc).ComputedFromNode).isComputed Then tmpNodes(tc).Compute(tmpNodes(tmpNodes(tc).ComputedFromNode))<br>                    tmpIsC = True<br>                End If<br>            Next<br>        End While<br>        For tc = 0 To mc - 1<br>            If tmpNodes(tc).PrToOccur &gt; lowerBound AndAlso tmpNodes(tc).PrToOccur &lt; upperBound Then<br>                tmpCI += 1<br>                ReDim Preserve tmpI(tmpCI)<br>                tmpI(tmpCI) = tmpNodes(tc).EvNumber<br>            End If<br>        Next<br>        If tmpCI = -1 Then ReDim tmpI(-1)<br>        Return tmpI<br>    End Function<br> <br>End Class<br>Public Class EventNode<br>    Public EvNumber As Integer<br>    Public PrToOccur As Single<br>    Public PrToNot As Single<br>    Public IsRoot As Boolean = False<br>    Public isComputed As Boolean = False<br>    Public ComputedFromNode As Integer = -1<br> <br>    Public Sub New(ByVal whatNo As Integer, ByVal desc As String)<br>        Dim tmpN() As String<br> <br>        desc = desc.Trim<br>        EvNumber = whatNo<br>        If desc.IndexOf(" ") &gt; 0 Then<br>            tmpN = desc.Split(" "c)<br>            ComputedFromNode = Integer.Parse(tmpN(0))<br>            PrToOccur = Single.Parse(tmpN(1))<br>            PrToNot = Single.Parse(tmpN(2))<br>        Else<br>            IsRoot = True<br>            PrToOccur = Integer.Parse(desc)<br>            PrToNot = 100 - PrToOccur<br>            isComputed = True<br>        End If<br>    End Sub<br>    Public Sub Compute(ByVal WhatNode As EventNode)<br>        Dim tmpO As Single<br>        Dim tmpN As Single<br> <br>        tmpO = (PrToOccur / 100 * WhatNode.PrToOccur / 100 + PrToNot / 100 * WhatNode.PrToNot / 100) * 100<br>        tmpN = 100 - tmpO<br>        PrToOccur = tmpO<br>        PrToNot = tmpN<br>        isComputed = True<br> <br>    End Sub<br>End Class<br></td>