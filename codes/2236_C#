<td class="problemText" colspan="8" valign="middle" align="left">
            using System; using System.Collections; public class MLBRecord<br>{<br>  public string teamStatus(int[] wins, int G, int N) {<br>    int T = wins.Length;<br>    String result = "";<br>    <br>    for (int i=0; i&lt;T; i++)<br>    {<br>      // Are we eliminated?<br>      int best = wins[i] + G;<br>      int mustLose = 0;<br>      int availableLosses = G*T/2;<br>      int[] x = (int[]) wins.Clone();<br>      x[i] = 999999999;<br>      Array.Sort(x);<br>      foreach (int y in x) if (y != 999999999)<br>        if (y+Math.Max(0, G-availableLosses) &gt; best)<br>          {<br>          mustLose++;<br>          //if (i==8) WSL(y, mustLose, availableLosses);<br>          }<br>        else<br>          {<br>          if (y+G &gt; best)<br>            availableLosses = Math.Max(0, availableLosses - (y+G-best));<br>          //if (i==8) WSL(y, mustLose, availableLosses);<br>          }<br>            <br>      if (mustLose &gt;= N)<br>        { result += "E"; continue; }<br>      <br>      // Have we clinched?<br>      int worst = wins[i];<br>      int mustWin = 0;<br>      int availableWins = G*T/2;<br>      x = (int[]) wins.Clone();<br>      x[i] = 999999999;<br>      Array.Sort(x);<br>      Array.Reverse(x);<br>      foreach (int y in x) if (y != 999999999)<br>        if (y+Math.Min(G, availableWins) &gt;= worst)<br>          {<br>          if (y &lt; worst) availableWins -= (worst-y);<br>          availableWins = Math.Max(availableWins, 0);  <br>          //if (i==0) WSL(y,mustWin,availableWins);<br>          }<br>        else<br>          mustWin++;<br>          <br>      if (T - mustWin &lt;= N) { result += "C"; continue; }<br>      <br>      result += ".";<br>    }<br>    <br>    return result;<br>}<br> <br> <br>static ArrayList AR { get { return new ArrayList(); }}<br>static Hashtable MAP { get { return new Hashtable(); }}<br> <br>static int   [] IA(ArrayList ar) { return (int   []) ar.ToArray(typeof(int   )); }<br>static string[] SA(ArrayList ar) { return (string[]) ar.ToArray(typeof(string)); }<br> <br>int    INT   (Object x) { return Convert.ToInt32 (x.ToString()); }<br>long   LONG  (Object x) { return Convert.ToInt64 (x.ToString()); }<br>double DOUBLE(Object x) { return Convert.ToDouble(x.ToString()); }<br> <br>static void WR(Object x, params object[] p) { Console.Write(x.ToString(), p); }<br>static void WL(Object x, params object[] p) { Console.WriteLine(x.ToString(), p); }<br>static void WL() { WL(""); }<br>static void WS(params Object[] c) { foreach (Object x in c) WR(x.ToString() + " "); }<br>static void WSL(params Object[] c) { foreach (Object x in c) WR(x.ToString() + " "); WL(); }<br>static void WS(Array ar, int X) { for (int x=0; x&lt;X; x++) WS(ar.GetValue(x)); WL(); }<br>static void WS(Array ar, int X, int Y) { for (int y=0; y&lt;Y; y++) { for (int x=0; x&lt;X; x++) WS(ar.GetValue(x,y)); WL(); }}}<br> <br>// Powered by PopsEdit<br></td>