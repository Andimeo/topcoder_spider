<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br> <br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;utility&gt;<br> <br>#include &lt;set&gt;<br>#include &lt;map&gt;<br> <br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstring&gt;<br> <br>using namespace std;<br> <br>typedef long long LL;<br>typedef unsigned long long SLL;<br> <br>#define V vector<br>#define S string<br>#define I int<br>typedef V&lt;I&gt; VI;<br>typedef V&lt;V&lt;I&gt; &gt; VVI;<br>typedef V&lt;S&gt; VS;<br>typedef V&lt;V&lt;S&gt; &gt; VVS;<br>typedef V&lt;double&gt; VD;<br>typedef V&lt;V&lt;double&gt; &gt; VVD;<br>typedef pair&lt;int,int&gt; PII;<br>typedef pair&lt;int,string&gt; PIS;<br>typedef pair&lt;string,int&gt; PSI;<br>typedef pair&lt;string,string&gt; PSS;<br> <br>LL gcd(LL a, LL b){<br>  while(b){<br>    a=a%b;<br>    swap(a,b);<br>  }<br>  return abs(a);<br>}<br> <br>LL lcm(LL a, LL b){<br>  return a/gcd(a,b)*b;<br>}<br> <br>VS parse(string s, string d = " \t\n") {<br>  VS r;<br>  s+=d[0];<br>  int e=0;<br>  for(int i=0;i&lt;s.size();i++){<br>    if(d.find(s[i])!=string::npos){<br>      if(i-e&gt;0) {<br>        r.push_back(s.substr(e,i-e));<br>      }<br>      e = i+1;<br>    }<br>  }<br>  return r;<br>}<br> <br>VI intparse(string s, string d =" \t\n") {<br>  VS vs=parse(s,d);<br>  VI r;<br>  for(int i=0;i&lt;vs.size();i++){<br>    r.push_back(atoi(vs[i].c_str()));<br>  }<br>  return r;  <br>}<br> <br>#define debug(a) cout&lt;&lt; #a &lt;&lt; ":" &lt;&lt; a &lt;&lt;endl;<br>template&lt;class c&gt; ostream&amp; operator&lt;&lt;(ostream&amp; os, const vector&lt;c&gt;&amp; a) {<br>  for(int i=0;i&lt;a.size();i++){<br>    os&lt;&lt;a[i]&lt;&lt;',';<br>  }<br>  os&lt;&lt;endl;<br>  return os;<br>}<br> <br> <br>// ================================ template ends ===========================================<br>/*<br>// *** topology<br>VI d(n,-1);<br>int done =0;<br>do {<br>  bool changed = false;<br>  for(int i=0;i&lt;d.size();i++) if(d[i]==-1){<br>    <br>    if(xxx) {<br>      changed = true;<br>      d[i] = xxx;<br>      done ++;<br>    }<br>  }<br>} while(changed);<br> <br>// *** combination<br>VI possible;<br>VI comb;<br>int need;<br>void go(int from) {<br>  if(comb.size()==need) {<br>    cout&lt;&lt;"comb"&lt;&lt;endl;<br>    return;<br>  }<br>  for(int i=from;i&lt;possible.size();i++){<br>    comb.push_back(possible[i]);<br>    go(i+1);<br>    comb.pop_back();<br>  }<br>}<br>*/<br>// ***<br> <br>class MLBRecord {<br>  public:<br>  string teamStatus(vector &lt;int&gt; wins, int gamesLeft, int N) {<br>    string r(wins.size(), '.');<br>    typedef pair&lt;int,int&gt; PII;<br>    vector&lt;PII&gt; w;<br>    for(int i=0; i&lt;wins.size(); i++) w.push_back(PII(wins[i],i));<br>    sort(w.begin(),w.end());<br>    reverse(w.begin(), w.end());<br>    for(int i=0; i&lt;w.size(); i++) cout &lt;&lt; w[i].first &lt;&lt; ' ' &lt;&lt; w[i].second &lt;&lt; endl;<br>    <br>    int total = gamesLeft * wins.size() / 2;<br>    for(int i=0; i&lt;N; i++) {<br>      int now = w[i].first;<br>      if (w[N].first + gamesLeft &lt; now ) {<br>        r[w[i].second] = 'C';<br>        continue;<br>      }<br>      int need=0;<br>      for(int j = i+1; j&lt;=N; j++) {<br>        need += now - w[j].first;<br>      }<br>      if (need &gt; total) r[w[i].second] = 'C';<br>    }<br>    <br>    for(int i=0; i&lt;w.size(); i++) w[i].first += gamesLeft;<br>    for(int i=N; i&lt;w.size(); i++) {<br>      int now = w[i].first;<br>      if (w[N-1].first - gamesLeft &gt; now ) {<br>        r[w[i].second] = 'E';<br>        continue;<br>      }<br>      int need = 0;<br>      for(int j = i-1; j&gt;=N-1; j--) {<br>        need += w[j].first - now;<br>      }<br>      if (need &gt; total) r[w[i].second] = 'E';<br>    }<br>    return r;    <br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>