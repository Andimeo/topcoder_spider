<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>using namespace std;<br>#define foreach(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)<br>typedef vector&lt;int&gt; VI;  typedef vector&lt;vector&lt;int&gt; &gt; VVI;<br>typedef vector&lt;string&gt; VS;  typedef vector&lt;vector&lt;string&gt; &gt; VVS;<br>typedef signed long long i64;  typedef unsigned long long u64;<br><br>set&lt;VS&gt; seen[2];<br>int ret = 0;<br><br>void doit(const VS &amp;a, char c) {<br>  if( !a.size() ) return;<br>  if( c != 'X' &amp;&amp; seen[c=='s'].count(a) ) return;<br>  if( c != 'X' ) seen[c=='s'].insert(a);<br>  ret++;<br>  if( a[0] == "" ) return;<br>  VS b;<br>  int i;<br>  for( i = 0; i &lt; a.size(); i++ ) {<br>    if( a[i][0] == 's' ) break;<br>    b.push_back(a[i].substr(1));<br>  }<br>  doit(b, 'b');<br>  b.clear();<br>  for( ; i &lt; a.size(); i++ ) {<br>    b.push_back(a[i].substr(1));<br>  }<br>  doit(b, 's');<br>}<br><br>class BinaryQuipu {<br>public:<br>int fewestKnots(vector &lt;string&gt; a) {<br>  sort(a.begin(), a.end());<br>  doit(a, 'X');<br>  return ret;<br>}<br>};<br><br><br>// Powered by FileEdit<br></td>