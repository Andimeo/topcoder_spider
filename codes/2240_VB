<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System.Math<br>Imports System<br>Imports System.Collections<br>Imports System.Text<br> <br>Public Class Books<br>    Implements IComparer<br> <br>    Dim mem(,) As Integer<br> <br>    Public Function sortMoves(ByVal titles As String()) As Integer<br>        Dim t(titles.Length - 1) As String<br>        ReDim mem(titles.Length, titles.Length)<br>        Array.Copy(titles, t, titles.Length)<br>        Array.Sort(t, Me)<br>        Dim tit As New ArrayList<br>        Dim a, b As Integer<br>        For a = 0 To titles.Length - 1<br>            b = Array.IndexOf(t, titles(a))<br>            tit.Add(b)<br>        Next<br>        Return titles.Length - longest(tit, 0, 0)<br>    End Function<br> <br>    Private Function longest(ByVal tit As ArrayList, ByVal index As Integer, ByVal low As Integer) As Integer<br>        If mem(index, low) &gt; 0 Then Return mem(index, low)<br>        If index &gt;= tit.Count Then<br>            Return 0<br>        End If<br>        If tit(index) &lt; low Then<br>            mem(index, low) = longest(tit, index + 1, low)<br>            Return mem(index, low)<br>        End If<br>        mem(index, low) = Max(longest(tit, index + 1, low), 1 + longest(tit, index + 1, tit(index)))<br>        Return mem(index, low)<br>    End Function<br> <br>    Public Function Compare(ByVal x As Object, ByVal y As Object) As Integer Implements System.Collections.IComparer.Compare<br>        Return String.CompareOrdinal(x, y)<br>    End Function<br>End Class<br></td>