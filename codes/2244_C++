<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;set&gt;<br>#include &lt;iostream&gt;<br>#include &lt;map&gt;<br>#include &lt;functional&gt;<br>#include &lt;deque&gt;<br>#include &lt;sstream&gt;<br>#include &lt;numeric&gt;<br><br>using namespace std;<br><br>class InstantRunoff {<br>  public:<br>  string outcome(string a, vector &lt;string&gt; b) {<br>        if( !a.size() )<br>            return "";<br>        vector&lt; int &gt; votz( a.size() );<br>        for( int i = 0; i &lt; b.size(); i++ ) {<br>            for( int j = 0; j &lt; b[ i ].size(); j++ ) {<br>                if( count( a.begin(), a.end(), b[ i ][ j ] ) ) {<br>                    votz[ find( a.begin(), a.end(), b[ i ][ j ] ) - a.begin() ]++;<br>                    break;<br>                }<br>            }<br>        }<br>        for( int i = 0; i &lt; votz.size(); i++ )<br>            printf( "%d ", votz[ i ] );<br>        printf( "\n" );<br>        int hf = b.size() / 2;<br>        printf( "hf is %d\n", hf );<br>        for( int i = 0; i &lt; votz.size(); i++ )<br>            if( votz[ i ] &gt; hf )<br>                return string( a.begin() + i, a.begin() + i + 1 );<br>        int loest = 10000;<br>        for( int i = 0; i &lt; votz.size(); i++ )<br>            loest = min( loest, votz[ i ] );<br>        string gnu;<br>        for( int i = 0; i &lt; votz.size(); i++ )<br>            if( votz[ i ] &gt; loest )<br>                gnu += a[ i ];<br>        return outcome( gnu, b );<br>  }<br>};<br><br><br><br>// Powered by FileEdit<br></td>