<td class="problemText" colspan="8" valign="middle" align="left">
            // another fine solution by misof<br>#include &lt;algorithm&gt;<br> <br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br> <br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cassert&gt;<br> <br>#include &lt;cmath&gt;<br>#include &lt;complex&gt;<br>using namespace std;<br> <br>#define REP(i,n) for(typeof(n) i=0;i&lt;(n);++i)<br>#define FOR(i,a,b) for(typeof(b) i=(a);i&lt;=(b);++i)<br>#define FORD(i,a,b) for(typeof(a) i=(a);i&gt;=(b);--i)<br> <br>/////////////////// CODE WRITTEN DURING THE COMPETITION FOLLOWS ////////////////////////////////<br> <br>class Piglets {<br>public:<br>  int choose(string trough) {<br>    int N = trough.size();<br>    if (trough[0] == '-') return 0;<br>    if (trough[N-1] == '-') return N-1;<br>    int free=0; REP(i,N) if (trough[i]=='-') free=1;<br>    if (!free) return -1;<br> <br>    int dlhsi=0;<br>    FOR(i,1,N-2) if (trough[i]=='-' &amp;&amp; trough[i+1]=='-') dlhsi=1;<br> <br>    if (!dlhsi) REP(i,N) if (trough[i]=='-') return i;<br>    <br>    FORD(i,N-2,0) if (trough[i]=='-' &amp;&amp; trough[i+1]=='-') return i;<br>    return -47;<br>  }<br> <br> <br>};<br>// Unused code automatically removed, but the UCR still sucks<br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>