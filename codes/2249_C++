<td class="problemText" colspan="8" valign="middle" align="left">
            #pragma warning( disable : 4786 )<br><br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;functional&gt;<br>#include &lt;deque&gt;<br><br>using namespace std;<br><br>char *sh1[] = { "CIRCLE", "SQUIGGLE", "DIAMOND" };<br>char *sh2[] = { "RED", "BLUE", "GREEN" };<br>char *sh3[] = { "SOLID", "STRIPED", "EMPTY" };<br>char *sh4[] = { "ONE", "TWO", "THREE" };<br><br>class Matching {<br>  public:<br>  vector &lt;string&gt; findMatch(vector &lt;string&gt; a, vector &lt;string&gt; b) {<br>    vector&lt; set&lt; string &gt; &gt; foo;<br>    foo.push_back( set&lt; string &gt;( sh1, sh1 + 3 ) );<br>    foo.push_back( set&lt; string &gt;( sh2, sh2 + 3 ) );<br>    foo.push_back( set&lt; string &gt;( sh3, sh3 + 3 ) );<br>    foo.push_back( set&lt; string &gt;( sh4, sh4 + 3 ) );<br>    vector&lt; string &gt; oot;<br>    for( int i = 0; i &lt; 4; i++ ) {<br>      foo[ i ].erase( a[ i ] );<br>      foo[ i ].erase( b[ i ] );<br>      if( foo[ i ].size() == 1 ) {<br>        oot.push_back( *foo[ i ].begin() );<br>      } else {<br>        oot.push_back( a[ i ] );<br>      }<br>    }<br>    return oot;<br>  }<br>};<br><br><br><br>// Powered by FileEdit<br></td>