<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Text.RegularExpressions;<br><br>public class RaceCalculator <br>{<br>  public int bestRace(int[] distances, int[] times) <br>  {<br>    int num = distances.Length;<br>    double[] dBadness = new double[num];<br>    for(int i = 0; i &lt; num; ++i)<br>      dBadness[i] = double.MinValue;<br><br>    for(int i = 0; i &lt; num; ++i)<br>      for(int j = i + 1; j &lt; num; ++j)<br>      {<br>        for(int k = 0; k &lt; num; ++k)<br>        {<br>          if((k != i) &amp;&amp; (k != j))<br>          {<br>            double T1 = times[i];<br>            double T2 = times[j];<br>            double D1 = distances[i];<br>            double D2 = distances[j];<br>            double D = distances[k];<br>            double expectedTime = T1 * Math.Exp(Math.Log(T2 / T1) * Math.Log(D1 / D) / Math.Log(D1 / D2));<br>            double actualTime = times[k];<br>            double badness = (actualTime - expectedTime) / expectedTime;<br>            if(badness &gt; dBadness[k])<br>              dBadness[k] = badness;<br>          }<br>        }<br>      }<br><br>    int ret = 0;<br>    for(int i = 1; i &lt; num; ++i)<br>    {<br>      if(dBadness[i] &lt; dBadness[ret])<br>        ret = i;<br>    }<br><br>    return ret;  <br>  }<br>}<br><br><br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester [Jay_Slupesky modified] [25-Jan-2004]<br>// Powered by CodeProcessor<br></td>