<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br> <br>#define REP(i,n) for(int i=0;i&lt;(n);++i)<br>#define FOR(i,a,b) for(int i=(a);i&lt;=(b);++i)<br>#define FORD(i,a,b) for(int i=(a);i&gt;=(b);--i)<br>#define FOREACH(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();++i)<br>typedef long long LL;<br>const int INF = 1000000000;<br>typedef vector&lt;int&gt; VI;<br>template&lt;class T&gt; inline int size(const T&amp;c) { return c.size(); }<br> <br>char buf1[1000];<br> <br>string i2s(int x) {<br>  sprintf(buf1,"%d",x);<br>  return buf1;<br>}<br> <br>int bits(int x) {<br>  if(x==0) return 0; else return (x&amp;1)+bits(x&gt;&gt;1);<br>}<br> <br>struct TrueFalse {<br>  // MAIN<br>  string answerKey(vector &lt;string&gt; graded) {<br>    vector&lt;int&gt; ile;<br>    vector&lt;int&gt; ans;<br>    int n;<br>    FOREACH(it,graded) {<br>      istringstream is(*it);<br>      int x; string s;<br>      is &gt;&gt; x &gt;&gt; s;<br>      n = size(s);<br>      ile.push_back(x);<br>      int y = 0;<br>      REP(i,n) if(s[i]=='T') y+= 1&lt;&lt;(n-1-i);<br>      ans.push_back(y);<br>    }<br>    int m = size(ile);<br>    int aa;<br>    for(aa=0;aa&lt;1&lt;&lt;n;++aa) {<br>      REP(i,n) {<br>        int cor = 0;<br>        REP(j,m) {<br>          if((ans[j]&amp;(1&lt;&lt;i))==((aa&amp;(1&lt;&lt;i)))) ++cor;<br>        }<br>        if(cor==0) goto yyy;<br>      }<br>      REP(i,m) {<br>        if(bits(ans[i] ^ aa) != n-ile[i]) goto yyy;<br>      }<br>      goto xxx;<br>yyy:;<br>    }<br>    return "inconsistent";<br>xxx:;<br>    string res;<br>    REP(i,n) if(aa&amp;(1&lt;&lt;(n-1-i))) res+='T'; else res+='F';<br>    return res;<br>  }<br>  <br> <br> <br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>