<td class="problemText" colspan="8" valign="middle" align="left">
            /*/*///*/*/ Powered by radedit!            /*/*/*/*/*/ ;<br>/*/*//*/*/  import java . util .           /*/*/*/*/*/ ;<br>/*/*//*/*/  import java . lang . reflect . /*/*/*/*/*/ ;<br>public class TrueFalse {<br>   boolean ddd = false ;<br>String[] s2sa(String s) {<br>  StringTokenizer t=new StringTokenizer(s.trim());<br>  String[]r=new String[t.countTokens()];<br>  int i=0;<br>  while(t.hasMoreTokens())try{<br>     r[i++]=t.nextToken();<br>  }catch(Exception e){};<br>  return r;<br>}<br>  int bc(int v) {<br>    int r = 0 ;<br>    while (v &gt; 0) {<br>      r++ ;<br>      v &amp;= v - 1 ;<br>    }<br>    return r ;<br>  }<br>  public String answerKey(String[] graded) {<br>    int i, j, k ;<br>    int v[] = new int[graded.length] ;<br>    int s[] = new int[graded.length] ;<br>    int len = 0 ;<br>    for (i=0; i&lt;graded.length; i++) {<br>      String[] f = s2sa(graded[i]) ;<br>      s[i] = Integer.parseInt(f[0]) ;<br>      len = f[1].length() ;<br>      for (j=0; j&lt;f[1].length(); j++) {<br>  if (f[1].charAt(j) == 'F') {<br>    v[i] |= 1&lt;&lt;(f[1].length()-1-j) ;<br>  }<br>      }<br>    }<br>    System.out.println("Length is " + len) ;<br>    for (i=0; i&lt;65536; i++) {<br>      int wbm = 0 ;<br>      boolean okay = true ;<br>      for (j=0; j&lt;graded.length; j++) {<br>  if (bc(v[j] ^ i) != s[j]) {<br>    okay = false ;<br>    //    System.out.println("Failing " + i + " at " + j + " " + bc(v[j] ^ i) + " " + s[j]) ;<br>    break ;<br>  }<br>  wbm |= v[j] ^ i ;<br>      }<br>      if (okay &amp;&amp; wbm == (1 &lt;&lt; len) - 1) {<br>  String r = "" ;<br>  for (j=0; j&lt;len; j++) {<br>    if ((i &amp; (1 &lt;&lt; (len - 1 - j))) != 0) {<br>      r = r + "T" ;<br>    } else {<br>      r = r + "F" ;<br>    }<br>  }<br>  return r ;<br>      }<br>    }<br>    return "inconsistent" ;<br>  }<br> <br>  static void pp(Object o) { System.out.println(o) ; }<br>}<br></td>