<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;numeric&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;iostream&gt;<br> <br>using namespace std;<br> <br>vector&lt; string &gt; tokenize( const string &amp;in, const string &amp;tok ) {<br>  const char *cs = in.c_str();<br>  vector&lt; string &gt; oot;<br>  while( *cs ) {<br>    while( count( tok.begin(), tok.end(), *cs ) ) cs++;<br>    const char *nd = cs;<br>    while( *nd &amp;&amp; !count( tok.begin(), tok.end(), *nd ) ) nd++;<br>    if( nd != cs ) oot.push_back( string( cs, nd ) );<br>    cs = nd;<br>  }<br>  return oot;<br>}<br> <br>vector&lt; int &gt; sti( const vector&lt; string &gt; &amp;vs ) {<br>  vector&lt; int &gt; oot;<br>  for( int i = 0; i &lt; vs.size(); i++ ) oot.push_back( atoi( vs[ i ].c_str() ) );<br>  return oot;<br>}<br> <br>class zzz {<br>} zz;<br> <br>zzz operator,( zzz a, zzz b ) {<br>  a = b;<br>  cout &lt;&lt; endl;<br>  return a;<br>}<br> <br>zzz operator,( zzz a, int x ) {<br>  cout &lt;&lt; x &lt;&lt; " ";<br>  return a;<br>}<br> <br>zzz operator,( zzz a, double x ) {<br>  cout &lt;&lt; x &lt;&lt; " ";<br>  return a;<br>}<br> <br>zzz operator,( zzz a, string x ) {<br>  cout &lt;&lt; "\"" &lt;&lt; x &lt;&lt; "\" ";<br>  return a;<br>}<br> <br>template&lt; typename T, typename U &gt;<br>zzz operator,( zzz a, pair&lt; T, U &gt; x ) {<br>  cout &lt;&lt; "[ ";<br>  a,x.first;<br>  cout &lt;&lt; ", ";<br>  a,x.second;<br>  cout &lt;&lt; "] ";  <br>  return a;<br>}<br> <br>template&lt; typename T &gt;<br>zzz operator,( zzz a, const vector&lt; T &gt; &amp;x ) {<br>  cout &lt;&lt; "{ ";<br>  for( int i = 0; i &lt; x.size(); i++ ) {<br>    a,x[ i ];<br>    cout &lt;&lt; ", ";<br>  }<br>  cout &lt;&lt; "} ";<br>  return a;<br>}<br> <br>/*<br>template&lt; typename T &gt;<br>zzz operator,( zzz a, const set&lt; T &gt; &amp;x ) {<br>  cout &lt;&lt; "{ ";<br>  for( set&lt; T &gt;::const_iterator itr = x.begin(); itr != x.end(); itr++ ) {<br>    a,*itr;<br>    cout &lt;&lt; ", ";<br>  }<br>  cout &lt;&lt; "} ";<br>  return a;  <br>}<br> <br>template&lt; typename T, typename U &gt;<br>zzz operator,( zzz a, const map&lt; T, U &gt; &amp;x ) {<br>  cout &lt;&lt; "{ ";<br>  for( map&lt; T, U &gt;::const_iterator itr = x.begin(); itr != x.end(); itr++ ) {<br>    a,*itr;<br>    cout &lt;&lt; ", ";<br>  }<br>  cout &lt;&lt; "} ";<br>  return a;  <br>}<br>*/<br> <br>int ncr[ 50 ][ 50 ];<br>void mncr( int x ) {<br>  for( int i = 0; i &lt; x; i++ ) {<br>    ncr[ 0 ][ i ] = 0;<br>    ncr[ i ][ 0 ] = 1;<br>  }<br>  for( int y = 1; y &lt; x; y++ ) {<br>    for( int xt = 1; xt &lt; x; xt++ ) {<br>      ncr[ y ][ xt ] = ncr[ y - 1 ][ xt ] + ncr[ y - 1 ][ xt - 1 ];<br>    }<br>  }<br>}<br> <br>#define gcd __gcd<br>//#define i64 long long<br> <br>vector&lt; int &gt; status;<br> <br>long long cash[ 80 ][ 80 ][ 80 ];<br> <br>long long doit( int dol, int hleft, int cbi ) {<br>  if( hleft &lt; 0 ) return 0;<br>  if( dol == -1 &amp;&amp; hleft == 0 ) return 1;<br>  if( dol == -1 ) return 0;<br>  if( cash[ dol ][ hleft ][ cbi ] != -1 )<br>    return cash[ dol ][ hleft ][ cbi ];<br>  if( status[ dol ] == 1 ) {<br>    cash[ dol ][ hleft ][ cbi ] = doit( dol - 1, hleft, cbi + 1 );<br>  } else {<br>    cash[ dol ][ hleft ][ cbi ] = doit( dol - 1, hleft - 1, cbi + 1 ) + doit( dol - 1, hleft, cbi ) * cbi;<br>  }<br>  return cash[ dol ][ hleft ][ cbi ];<br>};<br> <br>class RussianDolls {<br>  public:<br>  long long arrangements(int N, vector &lt;int&gt; visible, int hidden) {<br>    memset( cash, 0xff, sizeof( cash ) );<br>    status.resize( N );<br>    for( int i = 0; i &lt; visible.size(); i++ )<br>      status[ visible[ i ] - 1 ] = 1;<br>    return doit( N - 1, hidden, 0 );<br>  };<br>};<br> <br> <br>// Powered by PopsEdit<br></td>