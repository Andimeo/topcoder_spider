<td class="problemText" colspan="8" valign="middle" align="left">
            // Scale::scale<br> <br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br> <br>using namespace std;<br> <br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br> <br>#define TC_T template&lt;class T&gt;<br>TC_T T sqr(T x) { return x * x; }<br>TC_T T sqrt(T x) { return (T)sqrt((double)x); }<br>TC_T T gcd(T a, T b) { return b ? gcd(b, a % b) : a; }<br>TC_T T lcm(T a, T b) { return a / gcd(a, b) * b; }<br>TC_T T bin(T n, T k) { k = min(k, n-k); return k ? bin(n-1, k-1)*n/k : 1; }<br>TC_T T str2num(string&amp; s, T _) { istringstream i(s); T t; i &gt;&gt; t; return t; }<br>TC_T string num2str(T n) { ostringstream s; s &lt;&lt; n; return s.str(); }<br> <br>class Scale<br>{<br>  public:<br>  vector &lt;string&gt; scale(int x, int y, vector &lt;string&gt; image)<br>  {<br>    VS sol(y, string(x, ' '));<br>    int m = image.size();<br>    int n = image[0].size();<br>    VS big(y*m, string(x*n, ' '));<br>    for (int i=0; i&lt;m; i++)<br>      for (int j=0; j&lt;n; j++)<br>        for (int ii=y*i; ii&lt;y*(i+1); ii++)<br>          for (int jj=x*j; jj&lt;x*(j+1); jj++)<br>            big[ii][jj] = image[i][j];<br>    for (int i=0; i&lt;y; i++)<br>      for (int j=0; j&lt;x; j++)<br>      {<br>        double sum = 0;<br>        for (int ii=m*i; ii&lt;m*(i+1); ii++)<br>          for (int jj=n*j; jj&lt;n*(j+1); jj++)<br>            sum += big[ii][jj];<br>        sol[i][j] = (int)(sum / (double)(m*n) + 0.5);<br>      }<br>    return sol;<br>  }<br>};<br> <br> <br>// Powered by FileEdit<br></td>