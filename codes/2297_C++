<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;ctype.h&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt; <br>#include &lt;deque&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>using namespace std;<br> <br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;vi&gt; vvi;<br>typedef vector&lt;vvi&gt; vvvi;<br>typedef vector&lt;bool&gt; vb;<br>typedef vector&lt;vb&gt; vvb;<br>typedef vector&lt;string&gt; vs;<br>typedef vector&lt;vs&gt; vvs;<br>typedef long long i64;<br>#define debug(x) cout &lt;&lt; #x &lt;&lt; " = " &lt;&lt; x &lt;&lt; endl<br>#define sz size()<br>#define mod(A, B) ((((A) % (B)) + (B)) % (B))<br>#define b2e(A) (A).begin(), (A).end()<br>#define e2b(A) (A).rbegin(), (A).rend()<br>#define rev(A) reverse(b2e(A))<br>#define s(A) sort(b2e(A))<br>#define ss(A) stable_sort(b2e(A))<br>#define un(A) unique(b2e(A))<br>#define er(A) (A).erase(un(A), (A).end())<br>#define Fill(A,B) fill(b2e(A), B)<br>#define minelt(A) *min_element(b2e(A))<br>#define maxelt(A) *max_element(b2e(A))<br>#define contains(A,B) (find(b2e(A),B)!=(A).end()) <br> <br>int gcd(int a, int b) { return (b==0) ? a : gcd(b,a%b); }<br>vs tok(string a){vs r; char b[100],*s; strcpy(b,a.c_str()); for(s=strtok(b," ");s;s=strtok(0," ")) r.push_back(s); return r;}<br>vs tokS(string a, string d){vs r; char b[100],*s; strcpy(b,a.c_str()); for(s=strtok(b,d.c_str());s;s=strtok(0,d.c_str())) r.push_back(s); return r;}<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>class BettingMoney {<br>  public:<br>  int moneyMade(vector &lt;int&gt; amounts, vector &lt;int&gt; centsPerDollar, int finalResult) {<br>    int intake=0;<br>    for(int i=0;i&lt;amounts.sz;i++)<br>    {<br>      if(i==finalResult)<br>      {<br>        intake-=amounts[i]*centsPerDollar[i];  <br>      }<br>      else intake+=100*amounts[i];<br>    }<br>    return intake;  <br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>