<td class="problemText" colspan="8" valign="middle" align="left">
            public class BagOfDevouring<br>  {<br> <br>    int[] v;<br>    int[] w;<br>    double []ev;<br>    public double expectedYield(int[] values, int[] weights)<br>    {<br>      ev = new double[1 &lt;&lt; 16];<br>      for(int i=0;i&lt;ev.Length;i++)<br>        ev[i] = -1;<br>      for(int i=0;i&lt;values.Length;i++)<br>        ev[1&lt;&lt;i] = values[i];<br> <br>      v = values;<br>      w = weights;<br>      return calc((1 &lt;&lt; values.Length)- 1);<br>    }<br>    double calc(int bits)<br>    {<br>      if(ev[bits] != -1) return ev[bits];<br>      double best = -1;<br> <br>      for(int i=0;i&lt;v.Length;i++)<br>      {<br>        if((bits &amp; (1&lt;&lt;i)) != 0)<br>        {<br>          int lessbits = bits - (1&lt;&lt;i);<br>          double vv = v[i];<br>          double sumprob = 0;<br>          for(int j=0;j&lt;v.Length;j++)<br>          {<br>            if((lessbits &amp; (1&lt;&lt;j)) != 0)<br>            {<br>              double sum = 100;<br>              for(int k=0;k&lt;v.Length;k++)<br>                if((lessbits &amp; (1&lt;&lt;k)) != 0)<br>                  sum += w[k];<br>              double prob = w[j] / sum;<br>              double toAdd = prob * calc(lessbits - (1&lt;&lt;j));<br>              vv += toAdd;<br>            //  Console.WriteLine("added " + toAdd);<br>              sumprob += prob;<br>            }<br>          }<br>          vv += (1-sumprob)*calc(lessbits);<br>          <br>          if(vv &gt; best)<br>          {<br>            best = vv;<br>          }<br>        }<br>      }<br>      if(best == -1) best = 0;<br>      ev[bits] = best;<br>      return best;<br>    }<br>  }<br></td>