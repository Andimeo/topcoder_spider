<td class="problemText" colspan="8" valign="middle" align="left">
            Public Class Apothecary<br>    Private myW As Integer<br> <br>    Private Function doit(ByVal invert As Integer, ByVal left As Integer, ByRef pow As Integer()) As Boolean<br>        Dim i, sum As Integer<br> <br>        sum = myW<br>        For i = 0 To 13<br>            sum -= pow(i) * 3 ^ i<br>        Next<br>        If sum = 0 Then Return True<br> <br>        For i = 13 To 0 Step -1<br>            If pow(i) = 0 AndAlso 3 ^ i &lt;= left Then Exit For<br>        Next<br>        If i &gt;= 0 Then<br>            pow(i) = invert<br>            If doit(invert, left - 3 ^ i, pow) Then Return True<br>            pow(i) = 0<br>        End If<br> <br>        For i = 0 To 13<br>            If pow(i) = 0 AndAlso 3 ^ i &gt; left Then Exit For<br>        Next<br>        If i &lt;= 13 Then<br>            pow(i) = invert<br>            If doit(-invert, 3 ^ i - left, pow) Then Return True<br>            pow(i) = 0<br>        End If<br>    End Function<br> <br>    Public Function balance(ByVal W As Integer) As Integer()<br>        Dim i, pow(13), ret(0) As Integer<br> <br>        myW = W<br>        doit(1, W, pow)<br> <br>        For i = 13 To 0 Step -1<br>            If pow(i) = -1 Then<br>                ret(ret.Length - 1) = -(3 ^ i)<br>                ReDim Preserve ret(ret.Length)<br>            End If<br>        Next<br>        For i = 0 To 13<br>            If pow(i) = 1 Then<br>                ret(ret.Length - 1) = 3 ^ i<br>                ReDim Preserve ret(ret.Length)<br>            End If<br>        Next<br> <br>        ReDim Preserve ret(ret.Length - 2)<br>        Return ret<br>    End Function<br>End Class<br></td>