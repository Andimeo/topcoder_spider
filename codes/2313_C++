<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;set&gt;<br>using namespace std;<br> <br>#define REP(i,n) for(int i=0;i&lt;(n);++i)<br>#define FOR(i,a,b) for(int i=(a);i&lt;=(b);++i)<br>#define FORD(i,a,b) for(int i=(a);i&gt;=(b);--i)<br>#define FOREACH(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();++i)<br>typedef long long LL;<br>const int INF = 1000000000;<br>typedef vector&lt;int&gt; VI;<br>template&lt;class T&gt; inline int size(const T&amp;c) { return c.size(); }<br> <br>char buf1[1000];<br> <br>string i2s(int x) {<br>  sprintf(buf1,"%d",x);<br>  return buf1;<br>}<br> <br>set&lt;string&gt; spamWords;<br> <br>vector&lt;string&gt; parse(string s) {<br>  s+=' ';<br>  vector&lt;string&gt; res;<br>  string w;<br>  FOREACH(it,s) {<br>    if(isalpha(*it)) w+=char(tolower(*it));<br>    else {<br>      if(w!="") res.push_back(w);<br>      w="";<br>    }<br>  }<br>  return res;<br>}<br> <br>void add(string s) {<br>  vector&lt;string&gt; v = parse(s);<br>  FOREACH(it,v) spamWords.insert(*it);<br>}<br> <br>bool spam(string s) {<br>  vector&lt;string&gt; v = parse(s);<br>  set&lt;string&gt; ss(v.begin(),v.end());<br>  int a = size(ss);<br>  int r = 0;<br>  FOREACH(it,ss) {<br>    if(spamWords.find(*it)!=spamWords.end()) ++r;<br>  }<br>  return r*4 &gt;= a*3;<br>}<br> <br>struct Spamatronic {<br>  // MAIN<br>  vector &lt;int&gt; filter(vector &lt;string&gt; knownSpam, vector &lt;string&gt; newMail) {<br>    FOREACH(it, knownSpam) add(*it);<br>    VI res;<br>    REP(i,size(newMail)) {<br>      if(spam(newMail[i])) add(newMail[i]); else res.push_back(i);<br>    }<br>    return res;<br>  }<br>  <br> <br> <br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>