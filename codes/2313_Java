<td class="problemText" colspan="8" valign="middle" align="left">
            /*/*///*/*/ Powered by radedit!            /*/*/*/*/*/ ;<br>/*/*//*/*/  import java . util .           /*/*/*/*/*/ ;<br>/*/*//*/*/  import java . lang . reflect . /*/*/*/*/*/ ;<br>public class Spamatronic {<br>   boolean ddd = false ;<br>  HashSet hm = new HashSet() ;<br>  String[] tw(String s) {<br>    s = s.toLowerCase() ;<br>    ArrayList r = new ArrayList() ;<br>    String ss = "" ;<br>    for (int i=0; i&lt;s.length(); i++) {<br>      char c = s.charAt(i) ;<br>      if ('a' &lt;= c &amp;&amp; c &lt;= 'z') {<br>  ss = ss + c ;<br>      } else {<br>  if (ss.length() &gt; 0) {<br>    r.add(ss) ;<br>    ss = "" ;<br>  }<br>      }<br>    }<br>    if (ss.length() &gt; 0) {<br>      r.add(ss) ;<br>      ss = "" ;<br>    }<br>    System.out.println("Words: " + r) ;<br>    return (String[])r.toArray(new String[0]) ;<br>  }<br>  public int[] filter(String[] knownSpam, String[] newMail) {<br>    int i, j, k ;<br>    int[] r = new int[newMail.length] ;<br>    int rn = 0 ;<br>    for (i=0; i&lt;knownSpam.length; i++) {<br>      String[] f = tw(knownSpam[i]) ;<br>      for (j=0; j&lt;f.length; j++) {<br>  hm.add(f[j]) ;<br>      }<br>    }<br>    for (i=0; i&lt;newMail.length; i++) {<br>      int n = 0 ;<br>      int sw = 0 ;<br>      String[] f = tw(newMail[i]) ;<br>      HashSet hs2 = new HashSet() ;<br>      for (j=0; j&lt;f.length; j++) {<br>  hs2.add(f[j]) ;<br>      }<br>      n = hs2.size() ;<br>      hs2.removeAll(hm) ;<br>      sw = n - hs2.size() ;<br>      if (4 * sw &gt;= 3 * n) {<br>  hm.addAll(hs2) ;<br>      } else {<br>  r[rn++] = i ;<br>      }<br>    }<br>    int[] rr = new int[rn] ;<br>    for (i=0; i&lt;rn; i++) {<br>      rr[i] = r[i] ;<br>    }<br>    return rr ;<br>  }<br> <br>  static void pp(Object o) { System.out.println(o) ; }<br>}<br></td>