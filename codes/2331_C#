<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Text.RegularExpressions;<br> <br>public class PolicePair<br>{<br>  public int[] bestSquad(int[] skillStart, int[] skillEnd)<br>  {<br>    int best = 0;<br>    int carsmade = 0;<br>    int min = 1001;<br>    int max = 0;<br>    int officers=0;<br>    int[] officersWithSkill = new int[1001];<br>    for (int loop=1; loop&lt;=1000; loop++)<br>    {<br>      for (int i=0; i&lt;skillStart.Length; i++)<br>      {<br>        if ((loop&gt;=skillStart[i])&amp;&amp;(loop&lt;=skillEnd[i]))<br>        {<br>          officersWithSkill[loop]++;<br>          officers++;<br>        }<br>      }<br>      if (officersWithSkill[loop]&gt;0)<br>      {<br>        if (min&gt;loop)<br>        {<br>          min=loop;<br>        }<br>        max=loop;<br>      }<br>    }<br>    for (int test=min*2; test&lt;=max*2; test++)<br>    {<br>      int counthere = 0;<br>      for (int loop=min; loop&lt;=(test/2); loop++)<br>      {<br>        int check = test-loop;<br>        if (check&lt;=1000)<br>        {<br>          if (check!=loop)<br>          {<br>            counthere+=Math.Min(officersWithSkill[loop],officersWithSkill[check]);<br>          }<br>          else<br>          {<br>            counthere+=officersWithSkill[loop]/2;<br>          }<br>        }<br>      }<br>      if (counthere&gt;=carsmade)<br>      {<br>        carsmade=counthere;<br>        best=test;<br>      }<br>    }<br>    return new int[] {officers-(carsmade*2),best/2};<br>  }<br> <br>  #region MultiCompareTo<br>  public static int MultiCompareTo(params IComparable[] arg)<br>  {<br>    int diff = 0;<br>    for (int loop=0; loop&lt;arg.Length; loop+=2)<br>    {<br>      diff=arg[loop].CompareTo(arg[loop+1]);<br>      if (diff!=0)<br>      {<br>        return diff;<br>      }<br>    }<br>    return diff;<br>  }<br>  #endregion<br> <br>  #region Testcode<br>  // Tested with Mossop's LocalFileEdit<br>  #endregion<br>}<br></td>