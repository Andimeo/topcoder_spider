<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;  typedef vector&lt;vector&lt;int&gt; &gt; VVI;<br>typedef vector&lt;string&gt; VS;  typedef vector&lt;vector&lt;string&gt; &gt; VVS;<br>typedef signed long long i64;  typedef unsigned long long u64;<br><br>int sk[5000];<br><br>class PolicePair {<br>public:<br>vector &lt;int&gt; bestSquad(vector &lt;int&gt; a, vector &lt;int&gt; b) {<br>  int i, j, k, x, y, z, n;<br>  vector &lt;int&gt; ret(2, 10000);<br><br>  int tot = 0;<br>  for( i = 0; i &lt; a.size(); i++ ) {<br>    for( j = a[i]; j &lt;= b[i]; j++ ) sk[j]++;<br>    tot += b[i]-a[i]+1;<br>  }<br>  for( z = 2000; z &gt;= 0; z-- ) {<br>    n = 0;<br>    for( x = 0; x &lt;= 1000; x++ ) {<br>      if( x*2 == z ) n += sk[x]/2;<br>      else if( z-x &gt; x ) n += sk[x] &lt;? sk[z-x];<br>    }<br>    n = tot-n-n;<br>    if( n &lt; ret[0] ) {ret[0] = n; ret[1] = z/2;}<br>  }<br>  return ret;<br>}<br>};<br><br><br>// Powered by FileEdit<br></td>