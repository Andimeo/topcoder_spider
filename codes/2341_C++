<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;queue&gt;<br>#include &lt;climits&gt;<br>using namespace std;<br> <br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br>typedef long long ll;<br> <br>char buffer[500];<br>string sval(int num)    { sprintf(buffer, "%d", num); return buffer; }<br>int    ival(string inp) { return atoi(inp.c_str()); }<br>float  fval(string inp) { return (float)atof(inp.c_str()); }<br>double dval(string inp) { return (double)atof(inp.c_str()); }<br> <br>VS split(string inp, string sep) {<br>   VS ans;<br>   inp += sep;      // this is SO ugly...<br>   for (int i = 0, j = 0; i &lt; inp.length(); i++)<br>      if (inp[i] == sep[0]) {<br>         ans.push_back(inp.substr(j, i - j));<br>         j = i + 1;<br>      }<br>   return ans;<br>}<br> <br>// ****************************************** //<br> <br>class ScoringEfficiency {<br>   public:<br> <br>   double getPointsPerShot(vector &lt;string&gt; g) {<br>    /*<br>    - "Made 2 point field goal"<br>    - "Missed 2 point field goal"<br>    - "Made 3 point field goal"<br>    - "Missed 3 point field goal"<br>    - "Made free throw"<br>    - "Missed free throw"<br>    */<br>    int shots = 0, ft = 0;<br>    int points = 0;<br>    for (int i = 0; i &lt; g.size(); i++) {<br>      VS tmp = split(g[i], " ");<br>      if (tmp[0] == "Made") {<br>        if (tmp[1] == "2") {<br>          shots++;<br>          points += 2;<br>        } else<br>        if (tmp[1] == "3") {<br>          shots++;<br>          points += 3;<br>        } else {<br>          points++;<br>          ft++;<br>        }<br>      } else {<br>        if (tmp[1] != "free") {<br>          shots++;<br>        } else {<br>          ft++;<br>        }<br>      }<br>    }<br>    return 1.0*points/(shots+0.5*ft);<br>   }<br>};<br> <br>// Powered by PopsEdit<br></td>