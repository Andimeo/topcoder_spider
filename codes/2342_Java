<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class SquareFree {<br>  int[] primes;<br>  int prc; <br>  long countWithSquares(int n, int k, int fromp) {<br>    if(k==0) return n;<br>    long sum = 0;<br>    for(int i = fromp; i&lt;prc; i++) {<br>      long val = 1;<br>      for(int j = 0; j&lt;k; j++) val*=primes[i+j]*primes[i+j];<br>      if(val&gt;n) break;<br>      sum += countWithSquares(n/primes[i]/primes[i], k-1, i+1);      <br>    }<br>    return sum;<br>  }<br>  long count(int n, int fromk) {<br>    long s = countWithSquares(n, fromk, 0);<br>    if(s==0) return s;<br>    return s-count(n, fromk+1);<br>  }<br>  public int getNumber(int n) {<br>    primes = new int[100000];<br>    prc = 0;<br>    for(int i = 2; i&lt;100000; i++) {<br>      boolean ok = true;<br>      for(int j = 0; j&lt;prc; j++) {<br>        if(i%primes[j]==0) {<br>          ok = false;<br>          break;<br>        }<br>      }<br>      if(ok) {<br>        primes[prc] = i;<br>        prc++;<br>      }<br>    }<br>    long small = 0;<br>    long large = Integer.MAX_VALUE;<br>    while(large-small&gt;1) {<br>      long inter = (small+large+1)/2;<br>      if(inter-count((int)inter, 1)&gt;=n) large = inter;<br>      else small = inter;<br>    }<br>    return (int)large;<br>  }<br> <br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>