<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br> <br>#define REP(i,n) for(int i=0;i&lt;(n);++i)<br>#define FOR(i,a,b) for(int i=(a);i&lt;=(b);++i)<br>#define FORD(i,a,b) for(int i=(a);i&gt;=(b);--i)<br>#define FOREACH(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();++i)<br>#define ALL(x) (x).begin(),(x).end()<br>typedef long long LL;<br>const int INF = 1000000000;<br>typedef vector&lt;int&gt; VI;<br>template&lt;class T&gt; inline int size(const T&amp;c) { return c.size(); }<br> <br>char buf1[1000];<br> <br>string i2s(int x) {<br>  sprintf(buf1,"%d",x);<br>  return buf1;<br>}<br> <br> <br>int best;<br>int pot10[9];<br>int dig[3][6];<br> <br>void cDig(int p, int x) {<br>  REP(i,6) { dig[p][i]=x%10; x/=10; }<br>}<br> <br>void rek(int nr, int ch, int aa, int bb) {<br>  if(ch&gt;=best) return;<br>  best = min(best, ch+(6-nr));<br>  if(nr==6) return;<br>#define AA(x,y) \<br>  { \<br>    int aa2 = aa + (x) * pot10[nr]; \<br>    int bb2 = bb + (y) * pot10[nr]; \<br>    int z = (LL(aa2) * LL(bb2) / pot10[nr])%10; \<br>    int ch2 = ch + ((x)!=dig[0][nr]) + ((y)!=dig[1][nr]) + (z!=dig[2][nr]); \<br>    rek(nr+1, ch2, aa2, bb2); \<br>  }<br>  AA(dig[0][nr], dig[1][nr]);<br>  if(ch+1 &lt; best) {<br>    REP(i,10) if(i!=dig[0][nr]) AA(i, dig[1][nr]);<br>    REP(i,10) if(i!=dig[1][nr]) AA(dig[0][nr], i);<br>  }<br>  if(ch+2 &lt; best) {<br>    REP(i,10) REP(j,10) if(i!=dig[0][nr] &amp;&amp; j!=dig[1][nr]) AA(i,j);<br>  }<br>#undef AA<br>}<br> <br>struct AlienMultiplication {<br>  // MAIN<br>  int getCorrections(int a, int b, int c) {<br>    pot10[0]=1;<br>    FOR(i,1,8) pot10[i]=10*pot10[i-1];<br>    <br>    cDig(0,a); cDig(1,b); cDig(2,c);<br>    <br>    best = 6;<br>    rek(0,0,0,0);<br>    return best;<br>  }<br>  <br> <br> <br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>