<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>public class MagicianTour <br>{<br>  string[] roads;<br>  int[] pop;<br>  Hashtable found = new Hashtable();<br> <br>  void recurse(int c, ref int pop1, ref int pop2, bool p1)<br>  {<br>    if(found.Contains(c)) return;<br>    if(p1) pop1 += pop[c];<br>    else pop2 += pop[c];<br>    found[c] = true;<br>    for(int i = 0; i &lt; roads.Length; i++)<br>      if(roads[c][i] == '1') recurse(i, ref pop1, ref pop2, !p1);<br>  }<br> <br> <br>  public int bestDifference(string[] rrrr, int[] pop_) <br>  {<br>    pop = pop_;<br>    roads = rrrr;<br>    ArrayList popd = new ArrayList();<br> <br>    <br>    for(int i = 0; i &lt; roads.Length; i++)<br>    {<br>      if(found.Contains(i)) continue;<br>      int pop1 = 0;<br>      int pop2 = 0;<br>      recurse(i, ref pop1, ref pop2, false);<br>      popd.Add(Math.Abs(pop1 - pop2));<br>    }<br> <br>    Hashtable old = new Hashtable();<br>    old[(int)popd[0]] = true;<br>    for(int i = 1; i &lt; popd.Count; i++)<br>    {<br>      Hashtable nh = new Hashtable();<br>      foreach(int a in old.Keys)<br>      {<br>        nh[Math.Abs((int)popd[i]-a)] = true;<br>        nh[Math.Abs((int)popd[i]+a)] = true;<br>      }<br>      old = nh;<br>    }<br>    ArrayList res = new ArrayList(old.Keys);<br>    res.Sort();<br> <br>    return (int)res[0];<br>  }<br>}<br></td>