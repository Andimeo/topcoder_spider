<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;  typedef vector&lt;vector&lt;int&gt; &gt; VVI;<br>typedef vector&lt;string&gt; VS;  typedef vector&lt;vector&lt;string&gt; &gt; VVS;<br>typedef signed long long i64;  typedef unsigned long long u64;<br><br>VS c;<br>VI p;<br>int seen[100];<br>int poss[10001], poss2[10001];<br><br>int np[2];<br>void doit(int x, int n) {<br>  if( seen[x] ) return;<br>  seen[x] = 1;<br>  np[n] += p[x];<br>  for( int i = 0; i &lt; c.size(); i++ ) if( c[x][i] == '1' )<br>    doit(i, !n);<br>}<br><br>class MagicianTour {<br>public:<br>int bestDifference(vector &lt;string&gt; a, vector &lt;int&gt; b) {<br>  c = a;<br>  p = b;<br>  int i, j, k, x, y, z, n;<br>  <br>  poss[5000] = 1;<br>  for( i = 0; i &lt; a.size(); i++ ) if( !seen[i] ) {<br>    np[0] = np[1] = 1;<br>    doit(i, 0);<br>    memset(poss2, 0, sizeof(poss2));<br>    x = abs(np[1]-np[0]);<br>    for( j = x; j &lt;= 10000-x; j++ )<br>      poss2[j] = (poss[j-x] || poss[j+x]);<br>    memcpy(poss, poss2, sizeof(poss));<br>  }<br>  for( i = 0; i &lt;= 5000; i++ ) if( poss[5000+i] || poss[5000-i] ) return i;<br>  return -1;<br>}<br>};<br><br><br>// Powered by FileEdit<br></td>