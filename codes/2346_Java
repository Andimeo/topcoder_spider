<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class MagicianTour {<br>  boolean[] visited;<br>  String[] roads;<br>  int[] populations;<br>  int visit(int x) {<br>    visited[x] = true;<br>    int s = populations[x];<br>    for(int i = 0; i&lt;populations.length; i++) {<br>      if(roads[x].charAt(i)=='1' &amp;&amp; !visited[i]) {<br>        s -= visit(i);<br>      }<br>    }<br>    return s;<br>  }<br>  <br>  public int bestDifference(String[] roads, int[] populations) {<br>    this.roads = roads;<br>    this.populations = populations;<br>    visited = new boolean[populations.length];<br>    Vector v = new Vector();<br>    int total = 0;<br>    for(int i = 0; i&lt;populations.length; i++) {<br>      if(!visited[i]) {<br>        int t = Math.abs(visit(i));<br>        total += t;<br>        v.add(new Integer(t));<br>      }<br>    }<br>    boolean[] canAchieve = new boolean[2000];<br>    canAchieve[0] = true;<br>    for(Iterator it = v.iterator(); it.hasNext(); ) {<br>      int x = ((Integer) it.next()) .intValue();<br>      for(int s = 1999; s&gt;=0; s--) {<br>        int a = s-x;<br>        if(a&gt;=0 &amp;&amp; canAchieve[a]) {<br>          canAchieve[s] = true;<br>        }<br>      }<br>    }<br>    int bestVal = 100000000;<br>    for(int i = 0; i&lt;2000; i++) {<br>      if(canAchieve[i]) {<br>        int x = Math.abs(total-2*i);<br>        bestVal = Math.min(x, bestVal);<br>      }<br>    }<br>    return bestVal;<br>  }<br> <br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>