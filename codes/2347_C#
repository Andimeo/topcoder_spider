<td class="problemText" colspan="8" valign="middle" align="left">
            public class Rationalization<br>  {<br>    int[] iWeight;<br>    int[] curWeight = new int [20];<br>    string[] iScore;<br>    int[] curScore = new int[20];<br>    int nItem;<br>    int nValue;<br>    int iWin;<br>    int[,] maxDelta = new int[20,20];<br>    int[,] mDelta = new int[20,20];<br> <br>    int max(int a, int b){if (a&lt;b ) return b; return a;}<br>    int MinWin()<br>    {<br>      int ii, i,j,k;<br>      int best, res;<br>      best = 1&lt;&lt;21;<br>      for(ii=0;ii&lt;nItem;ii++)<br>      {<br>        for(j=0;j&lt;nValue;j++)<br>          mDelta[0,j] = 0;<br>        for(i=1;i&lt;=nValue;i++)<br>        {<br>          mDelta[i,0] = 0;<br>          for(j=1;j&lt;=i;j++)<br>          {<br>            mDelta[i,j] = max(mDelta[i-1,j], mDelta[i,j-1]);<br>            k = mDelta[i-1,j-1] + curWeight[i-1];<br>            if (((ii != iWin)&amp;&amp;(iScore[ii][i-1] != '1')) || ((ii == iWin)&amp;&amp;(iScore[ii][i-1] != '9')))<br>              if (mDelta[i,j] &lt; k) mDelta[i,j] = k;<br>          }<br>        }<br>        for(j=0;j&lt;=nValue;j++)<br>          maxDelta[ii,j] = mDelta[nValue,j];<br> <br>      }<br> <br>      for(ii=0;ii&lt;=nValue;ii++)<br>      {<br>        int s = maxDelta[iWin, ii] + curScore[iWin];<br>        res = ii;<br>        for(i=0;i&lt;nItem;i++)<br>          if (i!=iWin)<br>          {<br>            for(j=0;j&lt;=nValue;j++)<br>              if (curScore[i] - maxDelta[i,j] &lt; s)<br>              {<br>                res += j;<br>                break;<br>              }<br>            if (j&gt; nValue) res = 1&lt;&lt;20;<br>          }<br>        if (res &lt; best) best = res;<br> <br>      }<br> <br>        return best;<br>    }<br>    public int minTweaks(int[] weights, string[] scores, int desired)<br>    {<br>      int i,j,k,n;<br>      int best, res;<br>      iWeight = weights;<br>      iScore = scores;<br>      nValue = weights.Length;<br> <br>      nItem = scores.Length;<br>      iWin = desired;<br>      n=1;<br>      for(j=0;j&lt;nValue;j++)<br>        n*=3;<br>      best = 1&lt;&lt;20;<br>      for(i=0;i&lt;n;i++)<br>      {<br>        k = i;<br>        res = 0;<br>        for(j=0;j&lt;nValue;j++)<br>        {<br>          curWeight[j] = weights[j] + (k%3)-1;<br>          if (curWeight[j] &lt; 1) curWeight[j] = 1;<br>          if (curWeight[j] &gt; 9) curWeight[j] = 9;<br>          if ((k%3)!= 1) res++;<br>          k/=3;<br>        }<br>        for(int i1=0;i1&lt;nItem;i1++)<br>        {<br>          curScore[i1] = 0;<br>          for(k=0;k&lt;nValue;k++)<br>            curScore[i1] += curWeight[k] * (iScore[i1][k] - '0');<br>        }<br>        res += MinWin();<br>        if (res &lt; best) best = res;<br>      }<br>      if (best &gt; (1&lt;&lt;19)) return -1;<br>      return best;<br>  <br>    }<br>  }<br></td>