<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;queue&gt;<br>#include &lt;climits&gt;<br>using namespace std;<br> <br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br>typedef long long ll;<br> <br>char buffer[500];<br>string sval(int num)    { sprintf(buffer, "%d", num); return buffer; }<br>int    ival(string inp) { return atoi(inp.c_str()); }<br>float  fval(string inp) { return (float)atof(inp.c_str()); }<br>double dval(string inp) { return (double)atof(inp.c_str()); }<br> <br>VS split(string inp, string sep) {<br>   VS ans;<br>   inp += sep;      // this is SO ugly...<br>   for (int i = 0, j = 0; i &lt; inp.length(); i++)<br>      if (inp[i] == sep[0]) {<br>         ans.push_back(inp.substr(j, i - j));<br>         j = i + 1;<br>      }<br>   return ans;<br>}<br> <br>// ****************************************** //<br> <br>class RaceApproximator {<br>   public:<br> <br>   string timeToBeat(int d1, int t1, int d2, int t2, int rd) {<br>    int ans = (int) (1.0*t1*(exp(log(1.0*t2/t1)*log(1.0*d1/rd)/log(1.0*d1/d2))));<br>    int hh = ans / 3600;<br>    ans = ans % 3600;<br>    int mm = ans / 60;<br>    ans = ans % 60;<br>    string blah;<br>    blah = sval(hh) + ":";<br>    if (mm &lt; 10) blah = blah + "0" + sval(mm); else blah = blah + sval(mm);<br>    blah = blah + ":";<br>    if (ans &lt; 10) blah = blah + "0" + sval(ans); else blah = blah + sval(ans);<br>    return blah;<br>   }<br>};<br> <br>// Powered by PopsEdit<br></td>