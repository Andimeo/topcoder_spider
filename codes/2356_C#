<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br> <br>  public class TeamBuilder<br>  {<br>    public TeamBuilder()<br>    {<br>      //<br>      // TODO: Add constructor logic here<br>      //<br>    }<br> <br>    public int[] specialLocations(string[] paths)<br>    {<br>      int[] result = {0,0};<br>      int[,] g = new int[paths.Length,paths.Length];<br>      for (int i = 0; i &lt; paths.Length; i++)<br>        for (int j = 0; j &lt; paths.Length; j++)<br>        {<br>                    g[i,j] = paths[i][j] == '0' ? 0 : 1;<br>        }<br> <br>      int[] v = new int[paths.Length];<br>      for (int j = 0; j &lt; paths.Length; j++)<br>      {<br>        for (int i = 0; i &lt; paths.Length; i++)<br>          v[i] = 0;<br>        v[j] = 2;<br>        bool loop = true;<br>        while (loop)<br>        {<br>          loop = false;<br>          for (int i = 0; i &lt; paths.Length; i++)<br>          {<br>            if (v[i] == 2)<br>            {<br>                            v[i] = 1;<br>              for (int k = 0; k &lt; paths.Length; k++)<br>                if ((g[i,k] == 1) &amp;&amp; (v[k]!=1) &amp;&amp; (v[k]!=2))<br>                {<br>                  v[k] = 2;<br>                  loop = true;<br>                }                  <br>            }<br>          }<br>        }<br>        int count = 0;<br>        for (int i = 0; i &lt; paths.Length; i++)<br>          if (v[i]==1) count++;<br>        if (count == paths.Length)<br>          result[0] = result[0] + 1;        <br>      }<br>            <br>      for (int j = 0; j &lt; paths.Length; j++)<br>      {<br>        for (int i = 0; i &lt; paths.Length; i++)<br>          v[i] = 0;<br>        v[j] = 2;<br>        bool loop = true;<br>        while (loop)<br>        {<br>          loop = false;<br>          for (int i = 0; i &lt; paths.Length; i++)<br>          {<br>            if (v[i] == 2)<br>            {<br>              v[i] = 1;<br>              for (int k = 0; k &lt; paths.Length; k++)<br>                if ((g[k,i] == 1) &amp;&amp; (v[k]!=1) &amp;&amp; (v[k]!=2))<br>                {<br>                  v[k] = 2;<br>                  loop = true;<br>                }                  <br>            }<br>          }<br>        }<br>        int count = 0;<br>        for (int i = 0; i &lt; paths.Length; i++)<br>          if (v[i]==1) count++;<br>        if (count == paths.Length)<br>          result[1] = result[1] + 1;        <br>      }<br>            <br>      return result;<br>    }<br>      <br>  }<br></td>