<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports math = System.Math<br>Imports System.Collections<br> <br>Public Class TVAntenna<br>   Public Function minRadius(ByVal x As Integer(), ByVal y As Integer()) As Double<br>      'plan - iterate<br> <br>      Dim ix As Integer<br>      Dim iy As Integer<br>      Dim currMinX, currMinY As Integer<br>      Dim currMinRadius As Integer = -1<br>      Dim hypProp As Integer<br> <br>      For ix = -200 To 200<br>         For iy = -200 To 200<br> <br>            hypProp = calcMaxRadius(x, y, ix, iy)<br> <br>            If hypProp &lt; currMinRadius Or currMinRadius = -1 Then<br>               currMinX = ix<br>               currMinY = iy<br>               currMinRadius = hypProp<br>            End If<br> <br>         Next<br>      Next<br> <br>      'now calc proper result<br>      Return math.Sqrt(currMinRadius) '?<br> <br>   End Function<br> <br> <br>   Public Function calcMaxRadius(ByVal x As Integer(), ByVal y As Integer(), ByVal currX As Integer, ByVal currY As Integer) As Double<br> <br>      Dim i As Integer<br>      Dim currMax As Integer = -1<br>      Dim thisTime As Integer<br> <br>      For i = 0 To x.Length - 1<br>         thisTime = (math.Abs(x(i) - currX) * math.Abs(x(i) - currX)) + (math.Abs(y(i) - currY) * math.Abs(y(i) - currY))<br>         If thisTime &gt; currMax Then<br>            currMax = thisTime<br>         End If<br>      Next<br> <br>      Return currMax<br> <br> <br>   End Function<br>End Class<br></td>