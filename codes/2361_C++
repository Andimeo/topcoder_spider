<td class="problemText" colspan="8" valign="middle" align="left">
            #line 2 "Partial.cpp"<br><br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;ctype.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;iostream&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br><br>using namespace std;<br>typedef long long ll; typedef long double ld;<br>typedef vector&lt;int&gt; VI; typedef vector&lt;string&gt; VS; typedef string S;<br><br>#define LS &lt;<br>#define FOR(k,start,end) for(typeof(start) k=(start); k LS (end); ++k)<br>#define Size(x) (int(x.size()))<br><br><br>ll coeff[10][10][10];<br><br>string itoa(ll i) {<br>  char buf[64];<br>  sprintf(buf, "%Ld", i);<br>  string s = buf;<br>  return s;<br>  }<br><br>class Partial {<br>  public:<br>  string derivative(string expr, string vars) {<br>    FOR(x,0,10)  FOR(y,0,10)  FOR(z,0,10) coeff[x][y][z] = 0;<br>    expr += " ";<br>    int cx = 0, cy = 0, cz = 0, co = 1;<br>    FOR(c,0,Size(expr)) {<br>      if(isdigit(expr[c])) co *= expr[c]-48;<br>      if(expr[c] == 'x' &amp;&amp; expr[c+1] != '^') cx += 1;<br>      if(expr[c] == 'y' &amp;&amp; expr[c+1] != '^') cy += 1;<br>      if(expr[c] == 'z' &amp;&amp; expr[c+1] != '^') cz += 1;<br>      if(expr[c] == 'x' &amp;&amp; expr[c+1] == '^') {cx += expr[c+2]-48; c+=2;}<br>      if(expr[c] == 'y' &amp;&amp; expr[c+1] == '^') {cy += expr[c+2]-48; c+=2;}<br>      if(expr[c] == 'z' &amp;&amp; expr[c+1] == '^') {cz += expr[c+2]-48; c+=2;}<br>      if(expr[c] == ' ') {<br>        coeff[cx][cy][cz] += co; cx=0;cy=0;cz=0;co=1; c+=2;<br>        }<br>      }<br>    FOR(l,0,Size(vars)) FOR(x,0,10)  FOR(y,0,10) FOR(z,0,10) <br>      coeff[x][y][z] =<br>        vars[l] == 'x' ? (x==9 ? 0 : coeff[x+1][y][z] * (x+1)) :<br>        vars[l] == 'y' ? (y==9 ? 0 : coeff[x][y+1][z] * (y+1)) :<br>        vars[l] == 'z' ? (z==9 ? 0 : coeff[x][y][z+1] * (z+1)) : 0;<br>    string rs;<br>    int terms = 0;<br>    for(int s=30; s&gt;=0; s--)<br>    for(int x=9; x&gt;=0; x--) for(int y=9; y&gt;=0; y--) for(int z=9; z&gt;=0; z--)<br>    if(x+y+z == s &amp;&amp; coeff[x][y][z]) {<br>      if(terms) rs += " + "; terms++;<br>      if(x==0 &amp;&amp; y==0 &amp;&amp; z==0) rs += itoa(coeff[x][y][z]);<br>      else {<br>        int ms = 0;<br>        if(coeff[x][y][z]&gt;1) {ms++; rs += itoa(coeff[x][y][z]);}<br>        if(x&gt;0) {<br>          if(ms) rs+="*"; ms++; rs+="x"; if(x&gt;1) rs+="^"; if(x&gt;1) rs+=itoa(x);<br>          }<br>        if(y&gt;0) {<br>          if(ms) rs+="*"; ms++; rs+="y"; if(y&gt;1) rs+="^"; if(y&gt;1) rs+=itoa(y);<br>          }<br>        if(z&gt;0) {<br>          if(ms) rs+="*"; ms++; rs+="z"; if(z&gt;1) rs+="^"; if(z&gt;1) rs+=itoa(z);<br>          }<br>        }<br>      }<br>    if(!terms) rs = "0";<br>    return rs;<br>    }<br>  <br> <br>  };<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>