<td class="problemText" colspan="8" valign="middle" align="left">
            /*/*///*/*/ Powered by radedit!            /*/*/*/*/*/ ;<br>/*/*//*/*/  import java . util .           /*/*/*/*/*/ ;<br>/*/*//*/*/  import java . lang . reflect . /*/*/*/*/*/ ;<br>public class Partial {<br>  String[] s2sa(String s, String split) {<br>    StringTokenizer t=new StringTokenizer(s.trim(), split);<br>    String[]r=new String[t.countTokens()];<br>    int i=0;<br>    while(t.hasMoreTokens())try{<br>      r[i++]=t.nextToken();<br>    }catch(Exception e){};<br>    return r;<br>  }<br>   boolean ddd = false ;<br>  public String derivative(String expr, String vars) {<br>    int i, j, k ;<br>    int v[][][] = new int[13][13][13] ;<br>    String[] terms = s2sa(expr, "+ ") ;<br>    for (i=0; i&lt;terms.length; i++) {<br>      int xpow = 0 ;<br>      int ypow = 0 ;<br>      int zpow = 0 ;<br>      int coef = 1 ;<br>      String[] add = s2sa(terms[i], "*") ;<br>      for (j=0; j&lt;add.length; j++) {<br>  String tt = add[j] ;<br>  int s = tt.charAt(0) ;<br>  int lv = 0 ;<br>  if (tt.length() == 3) {<br>    lv = tt.charAt(2)-'0' ;<br>  } else {<br>    lv = 1 ;<br>  }<br>  if (Character.isDigit((char)s)) {<br>    coef *= Integer.parseInt(tt) ;<br>  } else if (s == 'x') {<br>    xpow += lv ;<br>  } else if (s == 'y') {<br>    ypow += lv ;<br>  } else if (s == 'z') {<br>    zpow += lv ;<br>  }<br>      }<br>      v[xpow][ypow][zpow] += coef ;<br>    }<br>    for (i=0; i&lt;vars.length(); i++) {<br>      char c = vars.charAt(i) ;<br>      int x, y, z ;<br>      for (x=0; x&lt;10; x++) {<br>  for (y=0; y&lt;10; y++) {<br>    for (z=0; z&lt;10; z++) {<br>      if (c == 'x') {<br>        v[x][y][z] = (x+1) * v[x+1][y][z] ;<br>      } else if (c == 'y') {<br>        v[x][y][z] = (y+1) * v[x][y+1][z] ;<br>      } else if (c == 'z') {<br>        v[x][y][z] = (z+1) * v[x][y][z+1] ;<br>      }<br>    }<br>  }<br>      }<br>    }<br>    String r = "" ;<br>    for (int s=30; s&gt;=0; s--) {<br>      for (int x=Math.min(s, 10); x&gt;=0; x--) {<br>  for (int y=Math.min(s-x, 10); y&gt;=0; y--) {<br>    int z = s - x - y ;<br>    if (z &lt; 0 || z &gt; 10) {<br>      continue ;<br>    }<br>    if (v[x][y][z] &gt; 0) {<br>      if (s == 0) {<br>        r = r + " + " + v[x][y][z] ;<br>      } else {<br>        if (v[x][y][z] != 1) {<br>    r = r + " + " + v[x][y][z] + "*" ;<br>        } else {<br>    r = r + " + " ;<br>        }<br>        if (x &gt; 0) {<br>    r = r + p(x, 'x') ;<br>        }<br>        if (y &gt; 0) {<br>    r = r + p(y, 'y') ;<br>        }<br>        if (z &gt; 0) {<br>    r = r + p(z, 'z') ;<br>        }<br>        r = r.substring(0, r.length()-1) ;<br>      }<br>    }<br>  }<br>      }<br>    }<br>    if (r.length() &lt; 3) {<br>      return "0" ;<br>    }<br>    return r.substring(3) ;<br>  }<br>  String p(int x, char var) {<br>    if (x == 0) {<br>      return "" ;<br>    }<br>    if (x == 1) {<br>      return "" + var + "*" ;<br>    }<br>    return "" + var + "^" + x + "*" ;<br>  }<br>  static void pp(Object o) { System.out.println(o) ; }<br>}<br></td>