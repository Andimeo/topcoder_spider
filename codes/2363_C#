<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Text;<br> <br>public class Homomorphism<br>{<br>  static void Main(string[] args)<br>  {<br>    Homomorphism test = new Homomorphism();<br>    string u = "001";<br>    string v = "1010001";<br>    Console.WriteLine(test.count(u, v));<br>  }<br>  string flip(string u)<br>  {<br>    StringBuilder st = new StringBuilder();<br>    for (int i=0; i&lt;u.Length; ++i)<br>      if (u[i] == '0')<br>        st.Append('1');<br>    else<br>        st.Append('0');<br>    return st.ToString();<br>  }<br>  string h0;<br>  string h1;<br>  string uu, vv;<br> <br>  bool func()<br>  {<br>    while (uu.Length &gt; 0 &amp;&amp; uu[0] == '0')<br>    {<br>      if (vv.Length &lt; h0.Length) return false;<br>      if (vv.Substring(0, h0.Length) == h0)<br>      {<br>        uu = uu.Substring(1);<br>        vv = vv.Substring(h0.Length);<br>      }<br>      else<br>        return false;<br>    }<br>    return true;<br>  }<br> <br>  bool func2()<br>  {<br>    while (uu.Length &gt; 0)<br>    {<br>      if (uu[0] == '0')<br>      {<br>        if (vv.Length &lt; h0.Length) return false;<br>        if (vv.Substring(0, h0.Length) == h0)<br>        {<br>          uu = uu.Substring(1);<br>          vv = vv.Substring(h0.Length);<br>        }<br>        else<br>          return false;<br>      }<br>      else if (uu[0] == '1')<br>      {<br>        if (vv.Length &lt; h1.Length) return false;<br>        if (vv.Substring(0, h1.Length) == h1)<br>        {<br>          uu = uu.Substring(1);<br>          vv = vv.Substring(h1.Length);<br>        }<br>        else<br>          return false;<br>      }<br>    }<br>    return true;<br>  }<br> <br>  public int count(string u, string v)<br>  {<br>    if (u[0] == '1')<br>      u = flip(u);<br> <br>    int total=0;<br> <br>    // u starts with 0<br>    for (int i=1; i&lt;=v.Length; ++i)<br>    {<br>      h0 = v.Substring(0, i);<br>      uu=u; vv=v;<br>      if (!func())<br>        continue;<br> <br>      if (uu.Length == 0 &amp;&amp; vv.Length == 0)<br>        return -1;<br>      // uu begins with 1<br>      string uuu = uu;<br>      string vvv = vv;<br>      for (int j=1; j&lt;=vvv.Length; ++j)<br>      {<br>        uu = uuu;<br>        vv = vvv;<br>        h1 = vv.Substring(0, j);<br>        if (func2() &amp;&amp; vv == "")<br>          total++;<br>      }<br>    }<br>    return total;<br>  }<br>}<br></td>