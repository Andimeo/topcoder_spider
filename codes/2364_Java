<td class="problemText" colspan="8" valign="middle" align="left">
            // Powered by radeclipse!<br>import java.util.* ;<br>public class LinePlotter {<br>/*s2ia */<br>int[] s2ia(String s) {<br>  StringTokenizer t=new StringTokenizer(s.trim());<br>  int[]r=new int[t.countTokens()];<br>  int i=0;<br>  while(t.hasMoreTokens())try{<br>     r[i++]=Integer.parseInt((String)t.nextToken());<br>  }catch(Exception e){};<br>  return r;<br>}<br>  int t[][] = new int[32768][33] ;<br>  int x[] = new int[33] ;<br>  int y[] = new int[33] ;<br>  int dd[][] = new int[33][33] ;<br>  int n ;<br>  int np = 0 ;<br>  public int timeToPlot(String[] lines) {<br>    n = lines.length ;<br>    for (int i=0; i&lt;n; i++) {<br>      int[] f = s2ia(lines[i]) ;<br>      x[i*2] = f[0] ;<br>      y[i*2] = f[1] ;<br>      x[i*2+1] = f[2] ;<br>      y[i*2+1] = f[3] ;<br>    }<br>    np = 2 * n + 1 ;<br>    int mask = (1 &lt;&lt; n) - 1 ;<br>    for (int j=0; j&lt;np; j++) {<br>      t[0][j] = 1000000000 ;<br>    }<br>    t[0][2*n] = 0 ;<br>    for (int i=0; i&lt;np; i++) {<br>      for (int j=0; j&lt;np; j++) {<br>  dd[i][j] = Math.max(Math.abs(x[i]-x[j]), Math.abs(y[i]-y[j])) ;<br>      }<br>    }<br>    for (int i=1; i&lt;=mask; i++) {<br>      for (int j=0; j&lt;np; j++) {<br>  t[i][j] = 1000000000 ;<br>      }<br>      for (int j=0; j&lt;n; j++) if (0 != (i &amp; (1 &lt;&lt; j))) {<br>  for (int k=0; k&lt;2; k++) {<br>    for (int ii=0; ii&lt;np; ii++) {<br>      t[i][2*j+1-k] = Math.min(t[i][2*j+1-k],<br>             t[i-(1&lt;&lt;j)][ii] +<br>             dd[ii][2*j+k] +<br>             dd[2*j+k][2*j+1-k]) ;<br>    }<br>  }<br>      }<br>    }<br>    int r = 1000000000 ;<br>    for (int i=0; i&lt;2*n; i++) {<br>      r = Math.min(r, t[mask][i] + dd[i][2*n]) ;<br>    }<br>    return r ;<br>  }<br>}<br></td>