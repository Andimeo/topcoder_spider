<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;  typedef vector&lt;vector&lt;int&gt; &gt; VVI;<br>typedef vector&lt;string&gt; VS;  typedef vector&lt;vector&lt;string&gt; &gt; VVS;<br>typedef signed long long i64;  typedef unsigned long long u64;<br><br>VS c;<br>VI cur;<br>void doit(int x, int e) {<br>  if( x == e ) return;<br>  cur.push_back(x);<br>  if( e == -1 ) e = x;<br>  for( int i = 0; i &lt; c.size(); i++ ) if( c[x][i] == '1' ) {<br>    c[x][i] = c[i][x] = '0';<br>    doit(i, e);<br>    return;<br>  }<br>}<br><br>class EulerianRace {<br>public:<br>vector &lt;int&gt; planRoute(vector &lt;string&gt; a) {<br>  c = a;<br>  int i, j, k, x, y, z, n;<br>  vector &lt;int&gt; ret;<br><br>  doit(0, -1);<br>  ret = cur;<br>  ret.push_back(0);<br>  for(;;) {<br>    for( i = 0; i &lt; ret.size(); i++ ) {<br>      x = ret[i];<br>      for( j = 0; j &lt; c.size(); j++ ) if( c[x][j] == '1' ) break;<br>      if( j &lt; c.size() ) break;<br>    }<br>    if( i == ret.size() ) break;<br>    cur.clear();<br>    doit(x, -1);<br>    ret.insert(ret.begin()+i, cur.begin(), cur.end());<br>  }<br>  return ret;<br>}<br>};<br><br><br>// Powered by FileEdit<br></td>