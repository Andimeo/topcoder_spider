<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class PointInPolygon <br>{<br>  public String testPoint(String[] vertices, int testPointX, int testPointY) <br>  {  <br>    Boundary[] lines = new Boundary[vertices.length];<br>    for (int i = 0; i &lt; vertices.length - 1; i++)<br>    {<br>      lines[i] = new Boundary(vertices[i], vertices[i + 1]);<br>    }<br>    lines[vertices.length - 1] = new Boundary(vertices[vertices.length - 1], vertices[0]);<br>    <br>    // Are we on the boundary?<br>    for (int i = 0; i &lt; lines.length; i++)<br>    {<br>      if (lines[i].has(testPointX, testPointY)) return "BOUNDARY";<br>    }<br>    <br>    // Are we in or out?<br>    int crossCount = 0;<br>    for (int horiz = -1000; horiz &lt;= 1000; horiz++)<br>    {<br>      for (int i = 0; i &lt; lines.length; i++)<br>      {<br>        if (lines[i].vertical() &amp;&amp; lines[i].has(horiz, testPointY))<br>        {<br>          if(testPointY != lines[i].y2)<br>          {<br>            crossCount++;<br>          }<br>        }<br>      }<br>      if (horiz == testPointX) break;<br>    }<br>    if (crossCount % 2 == 1) return "INTERIOR";<br>    else return "EXTERIOR";<br>  }<br>  <br>  public class Boundary<br>  {<br>    public Boundary(String p1, String p2)<br>    {<br>      String[] coords1 = p1.split(" ");<br>      String[] coords2 = p2.split(" ");<br>      x1 = Integer.parseInt(coords1[0]);<br>      x2 = Integer.parseInt(coords2[0]);<br>      y1 = Integer.parseInt(coords1[1]);<br>      y2 = Integer.parseInt(coords2[1]);<br>      if (x1 == x2) vertical = true;<br>      else vertical = false;<br>      if (x1 &gt; x2)<br>      {<br>        int temp = x1;<br>        x1 = x2;<br>        x2 = temp;<br>      }<br>      if (y1 &gt; y2)<br>      {<br>        int temp = y1;<br>        y1 = y2;<br>        y2 = temp;<br>      }<br>    }<br>    <br>    public boolean vertical()<br>    {<br>      return vertical;<br>    }<br>    <br>    public boolean has(int x, int y)<br>    {<br>      if (vertical)<br>      {<br>        if (x != x1) return false;<br>        else<br>        {<br>          return y &gt;= y1 &amp;&amp; y &lt;= y2;<br>        }<br>      }<br>      else<br>      {<br>        if (y != y1) return false;<br>        else<br>        {<br>          return x &gt;= x1 &amp;&amp; x &lt;= x2;<br>        }<br>      }<br>    }<br>    <br>    public int x1, x2, y1, y2;<br>    boolean vertical;<br>  }<br>}<br> <br>// Powered by PopsEdit<br></td>