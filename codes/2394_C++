<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br> <br>#define REP(i,n) for(int i=0;i&lt;(n);++i)<br>#define FOR(i,a,b) for(int i=(a);i&lt;=(b);++i)<br>#define FORD(i,a,b) for(int i=(a);i&gt;=(b);--i)<br>#define FOREACH(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();++i)<br>#define ALL(x) (x).begin(),(x).end()<br>typedef long long LL;<br>const int INF = 1000000000;<br>typedef vector&lt;int&gt; VI;<br>template&lt;class T&gt; inline int size(const T&amp;c) { return c.size(); }<br> <br>char buf1[1000];<br> <br>string i2s(int x) {<br>  sprintf(buf1,"%d",x);<br>  return buf1;<br>}<br> <br> <br>struct OddsAndEvens {<br>  // MAIN<br>  string find(vector &lt;string&gt; sums, vector &lt;string&gt; products) {<br>    int n=1;<br>    while(n*(n-1)/2 != size(sums)) ++n;<br>    int ns=0, np = 0;<br>    FOREACH(it,sums) if(*it=="ODD") ++ns;<br>    FOREACH(it,products) if(*it=="ODD") ++np;<br>    FOR(x,0,n) {<br>      if(x*(n-x)==ns &amp;&amp; x*(x-1)/2==np) {<br>        return "EVEN " + i2s(n-x) + " ODD " + i2s(x);<br>      }<br>    }<br>    return "IMPOSSIBLE";<br>  }<br>  <br> <br> <br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>