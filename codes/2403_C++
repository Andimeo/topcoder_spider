<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt; <br>#include &lt;string&gt; <br>#include &lt;vector&gt; <br>#include &lt;algorithm&gt; <br>#include &lt;functional&gt; <br>#include &lt;numeric&gt; <br>#include &lt;cstdio&gt; <br>#include &lt;cstdlib&gt; <br>#include &lt;cmath&gt; <br>#include &lt;queue&gt;<br>#include &lt;cstring&gt;<br>#include &lt;map&gt;<br>#include &lt;ctype.h&gt;<br> <br>using namespace std;<br> <br>vector&lt;string&gt; tokenize(string s, string ch) { <br>  vector&lt;string&gt; ret; <br>  for( int p = 0, p2; p &lt; s.size(); p = p2+1 ) { <br>    p2 = s.find_first_of(ch, p); <br>    if( p2 == -1 ) p2 = s.size(); <br>    if( p2-p &gt; 0 ) ret.push_back( s.substr(p, p2-p) ); <br>  } <br>  return ret; <br>} <br> <br>class BoxLoader {<br>  public:<br>  int fit ( int boxX, int boxY, int boxZ, int itemX, int itemY, int itemZ) {<br>    return ( boxX / itemX ) * ( boxY / itemY ) * ( boxZ / itemZ );<br>  }<br>  int mostItems(int boxX, int boxY, int boxZ, int itemX, int itemY, int itemZ) {<br>    int m = 0;<br>    m &gt;?= fit( boxX, boxY, boxZ, itemX, itemY, itemZ );<br>    m &gt;?= fit( boxX, boxY, boxZ, itemX, itemZ, itemY );<br>    m &gt;?= fit( boxX, boxY, boxZ, itemY, itemX, itemZ );<br>    m &gt;?= fit( boxX, boxY, boxZ, itemY, itemZ, itemX );<br>    m &gt;?= fit( boxX, boxY, boxZ, itemZ, itemX, itemY );<br>    m &gt;?= fit( boxX, boxY, boxZ, itemZ, itemY, itemX );<br>    return m;<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>