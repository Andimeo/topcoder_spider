<td class="problemText" colspan="8" valign="middle" align="left">
            /*<br> * å[\u65533][\u65533]é[\u8225][\u338]å¹³æ¹[\u8211]é[\u339][\u339]æ»¡å¤©ï¼[\u338]<br> * å¯¸å¯¸é[\u65533][\u8217]ä¸[\u65533]æ[\u8222][\u65533]å[\u65533][\u381]å¹´ã[\u8364][\u8218]<br> * å¯¹æ[\u339][\u710]å½¢å[\u65533][\u8226]æ[\u339][\u8250]ç[\u8250]¸æ[\u352]¤ï¼[\u338]<br> * å[\u65533]ªç¾¡é¸³é¸¯ä¸[\u65533]ç¾¡ä»[\u8482]ã[\u8364][\u8218]<br> */<br>#include &lt;algorithm&gt;<br>#include &lt;bitset&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;ctime&gt;<br>#include &lt;deque&gt;<br>#include &lt;fstream&gt;<br>#include &lt;functional&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;iostream&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;stack&gt;<br>#include &lt;string&gt;<br>#include &lt;utility&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>bool match(string a, string b) {<br>    for (int i = 0; i &lt; 7; i++) {<br>        for (int j = 0; j &lt; 7; j++) {<br>            if (a[i * 7 + j] == b[i *  7 + j]) {<br>                return false;<br>            }<br>        }<br>    }<br>    return true;<br>}<br><br>string rotate(string t) {<br>    vector&lt;string&gt; M = vector&lt;string&gt;(7, "       ");<br>    for (int i = 0; i &lt; 7; i++) {<br>        for (int j = 0; j &lt; 7; j++) {<br>            M[i][j] = t[i * 7 + j];<br>        }<br>    }<br>    vector&lt;string&gt; N = M;<br>    for (int i = 0;i &lt; 7;i++) {<br>        for (int j = 0; j &lt; 7; j++) {<br>            M[i][j] = N[j][6 - i];<br>        }<br>    }<br>    string result = "";<br>    for (int i = 0; i &lt; 7; i++) {<br>        for (int j = 0; j &lt; 7; j++) {<br>            result += M[i][j];<br>        }<br>    }<br>    return result;<br>}<br><br>string reflect(string t) {<br>    vector&lt;string&gt; M = vector&lt;string&gt;(7, "       ");<br>    for (int i = 0; i &lt; 7; i++) {<br>        for (int j = 0; j &lt; 7; j++) {<br>            M[i][j] = t[i * 7 + j];<br>        }<br>    }<br>    for (int i = 0; i &lt; 7; i++) {<br>        for (int j = 0;j &lt; 4; j++) {<br>            swap(M[i][j], M[i][6 - j]);<br>        }<br>    }<br>    string result = "";<br>    for (int i = 0; i &lt; 7; i++) {<br>        for (int j = 0; j &lt; 7; j++) {<br>            result += M[i][j];<br>        }<br>    }<br>    return result;<br>}<br><br>bool bmatch(string a, string b) {<br>    string c = b;<br>    if (match(a, c) || match(a, reflect(c))) {<br>        return true;<br>    }<br>    c = rotate(c);<br>    if (match(a, c) || match(a, reflect(c))) {<br>        return true;<br>    }<br>    c = rotate(c);<br>    if (match(a, c) || match(a, reflect(c))) {<br>        return true;<br>    }<br>    c = rotate(c);<br>    if (match(a, c) || match(a, reflect(c))) {<br>        return true;<br>    }<br>    c = rotate(c);<br>    return false;<br>}<br><br>class CrimeLab {<br>public:<br>    int matchFragment(string t, vector &lt;string&gt; c) {<br>        int cnt = 0, p = -1;<br>        for (int i = 0; i &lt; (int) c.size(); i++) {<br>            if (bmatch(t, c[i])) {<br>                p = i;<br>                cnt++;<br>            }<br>        }<br>        if (cnt == 0) {<br>            return -1;<br>        } else if (cnt &gt; 1) {<br>            return -2;<br>        }<br>        return p;<br>    }<br><br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>