<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;  typedef vector&lt;vector&lt;int&gt; &gt; VVI;<br>typedef vector&lt;string&gt; VS;  typedef vector&lt;vector&lt;string&gt; &gt; VVS;<br>typedef signed long long i64;  typedef unsigned long long u64;<br><br>class NCMultiplication {<br>public:<br>long long findFactors(vector &lt;int&gt; a) {<br>  long long x = 0, y, z, v, p1, p2;<br>  int i, j, k;<br>  long long A = -1;<br>  for( i = 0; i &lt; a.size(); i++ ) x = (x*10) + a[i];<br>  for( y = 1; y*y &lt;= x; y++ ) if( x%y == 0 ) {<br>    z = x/y;<br>    for( i = 0; i &lt; a.size(); i++ ) {<br>      for( p1 = 1, j = 0; j &lt; i; j++, p1 *= 10 );<br>      v = 0;<br>      for( p2 = 1; p1; p2 *= 10, p1 /= 10 )<br>        v += ((y/p1)%10) * ((z/p2)%10);<br>      if( v != a[a.size()-1-i] ) break;<br>    }<br>    if( i == a.size() ) A = z;<br>  }<br>  return A;<br>}<br>};<br><br><br>// Powered by FileEdit<br></td>