<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>public class GeneralChess <br>{<br>  public string[] attackPositions(string[] pieces) <br>  {<br>    foreach( string s in pieces )<br>    {<br>      string[] t = s.Split(',');<br>      int x = int.Parse(t[0]);<br>      int y = int.Parse(t[1]);<br>      MakeH(x+2,y+1);<br>      MakeH(x+2,y-1);<br>      MakeH(x+1,y+2);<br>      MakeH(x+1,y-2);<br>      MakeH(x-2,y+1);<br>      MakeH(x-2,y-1);<br>      MakeH(x-1,y+2);<br>      MakeH(x-1,y-2);<br>    }<br>    ArrayList ans = new ArrayList();<br>    foreach( string s in ht.Keys )<br>    {<br>      if ( (int)ht[s] == pieces.Length )<br>      {<br>        string[] t = s.Split(',');<br>        ans.Add(new Loc(int.Parse(t[0]),int.Parse(t[1])));<br>      }<br>    }<br>    ans.Sort(new Loc(1,2));<br>    string[] ret = new string[ans.Count];<br>    for( int i=0; i&lt;ans.Count; i++ )<br>      ret[i] = ((Loc)ans[i]).x + "," + ((Loc)ans[i]).y;<br>    return ret;<br>  }<br><br>  class Loc : IComparer<br>  {<br>    public int x, y;<br>    public Loc(int xin, int yin)<br>    {<br>      x=xin; y=yin;<br>    }<br><br>    public int Compare(object x, object y)<br>    {<br>      Loc a = (Loc)x;<br>      Loc b = (Loc)y;<br>      if ( a.x != b.x )<br>        return a.x - b.x;<br>      if ( a.y != b.y )<br>        return a.y - b.y;<br>      return 0;<br>    }<br>  }<br><br>  Hashtable ht = new Hashtable();<br>  void MakeH(int x,int y)<br>  {<br>    string key = x.ToString() + "," + y.ToString();<br>    if ( !ht.Contains(key) )<br>      ht[key] = 1;<br>    else<br>      ht[key] = (int)ht[key] + 1;<br>  }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>