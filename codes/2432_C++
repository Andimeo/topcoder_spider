<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;time.h&gt;<br> <br>#include &lt;algorithm&gt;<br>#include &lt;utility&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br> <br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br> <br>using namespace std;<br> <br>#define TRACE(x) x<br>#define PRINT(x...) TRACE(printf(x))<br>#define WATCH(x) TRACE(cout &lt;&lt; #x" = " &lt;&lt; x &lt;&lt; endl)<br> <br>#define INF 0x3f3f3f3f<br> <br>#define all(c) (c).begin(),(c).end()<br>#define rall(c) (c).rbegin(), (c).rend()<br> <br>#define MSET(c, v) memset((c), (v), sizeof(c))<br> <br>////////////////////////////////////////////////////////////////////////////////////////////////////<br> <br>class MnemonicMemory {<br>public:<br>  string getPhrase(string, vector &lt;string&gt;);<br>};<br> <br>string join(vector&lt;string&gt; &amp;v, string sep) {<br>  string s="";<br>  if (v.size() == 0) return "";<br>  s = v[0];<br>  for (int i=1; i &lt; v.size(); i++) s += sep + v[i];<br>  return s;<br>}<br> <br>string MnemonicMemory::getPhrase(string num, vector &lt;string&gt; dict) {<br>  sort( all(dict) );<br>  int vis[55];<br>  MSET(vis, 0);<br>  vector&lt;string&gt; ans;<br>  for (int i=0; num[i]; i++) {<br>    int x = num[i]-'0';<br>    for (int j=0; j &lt; dict.size(); j++) {<br>      if (dict[j].size() == x) {<br>        if (!vis[j]) {<br>          vis[j] = 1;<br>          ans.push_back( dict[j] );<br>          break;<br>        }<br>      }<br>    }<br>  }<br>  return join(ans, " ");<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>