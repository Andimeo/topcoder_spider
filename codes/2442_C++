<td class="problemText" colspan="8" valign="middle" align="left">
            # include &lt;string&gt;<br># include &lt;vector&gt;<br># include &lt;stdlib.h&gt;<br><br>using namespace std ;<br><br>typedef struct pair1_<br>{<br>  int val ;<br>  int num ;<br>} pair1 ;<br><br>int cmp ( const void * a , const void * b )<br>{<br>  return ( ( pair1 * ) b ) -&gt; val - ( ( pair1 * ) a ) -&gt; val ;<br>}<br><br>class ChangePurse <br>{<br>public :<br>  vector &lt;int&gt; optimalCoins ( vector &lt;int&gt; coinTypes, int value ) <br>  {<br>    pair1 * t = new pair1 [ coinTypes . size ( ) ] ;<br>    vector &lt;int&gt; res ( coinTypes . size ( ) ) ;<br>    int i ;<br><br>    for ( i = 0 ; i &lt; coinTypes . size ( ) ; i ++ )<br>    {<br>      t [ i ] . val = coinTypes [ i ] ;<br>      t [ i ] . num = i ;<br>    }<br>    qsort ( t , coinTypes . size ( ) , sizeof ( pair1 ) , &amp; cmp ) ;<br>    for ( i = 0 ; i &lt; coinTypes . size ( ) - 1 ; i ++ )<br>      if ( value % t [ i ] . val == t [ i ] . val - 1 )<br>      {<br>        res [ t [ i ] . num ] = value / t [ i ] . val ;<br>        value = t [ i ] . val - 1 ;<br>      }<br>      else<br>        res [ t [ i ] . num ] = 0 ;<br>    res [ t [ i ] . num ] = value ;<br>    return res ;<br>  }    <br>} ;<br><br><br>// Powered by FileEdit<br></td>