<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System.Math<br>Imports System<br>Imports System.Collections<br>Imports System.Text<br> <br>Public Class DungeonEscape<br>    Private hit(50, 50) As Short<br>    Private hitSurface As Short<br>    Private dx() As Integer = {-1, 0, 1, 0}<br>    Private dy() As Integer = {0, -1, 0, 1}<br>    Private map(,,) As Short<br>    Private wid, hei As Integer<br> <br>    Private Structure State<br>        Public X As Short<br>        Public Y As Short<br>        Public ReadOnly Property Hash() As Integer<br>            Get<br>                Return Y + 50 * X<br>            End Get<br>        End Property<br>    End Structure<br> <br>    Public Function exitTime(ByVal up As String(), ByVal down As String(), ByVal east As String(), ByVal west As String(), ByVal startLevel As Integer, ByVal startEasting As Integer) As Integer<br>        hei = up.Length<br>        wid = up(0).Length<br>        ReDim map(wid, hei, 3)<br>        Dim x, y, i As Integer<br>        hitSurface = 5000<br>        For x = 0 To wid - 1<br>            For y = 0 To hei - 1<br>                hit(x, y) = 5000<br>                If west(y).Chars(x) = "x"c Then<br>                    map(x, y, 0) = -1<br>                Else<br>                    map(x, y, 0) = CStr(west(y).Chars(x))<br>                End If<br>                If up(y).Chars(x) = "x"c Then<br>                    map(x, y, 1) = -1<br>                Else<br>                    map(x, y, 1) = CStr(up(y).Chars(x))<br>                End If<br>                If east(y).Chars(x) = "x"c Then<br>                    map(x, y, 2) = -1<br>                Else<br>                    map(x, y, 2) = CStr(east(y).Chars(x))<br>                End If<br>                If down(y).Chars(x) = "x"c Then<br>                    map(x, y, 3) = -1<br>                Else<br>                    map(x, y, 3) = CStr(down(y).Chars(x))<br>                End If<br>            Next<br>        Next<br>        Dim time As Integer = 0<br>        Dim q(9) As Queue<br>        For i = 0 To 9<br>            q(i) = New Queue<br>        Next<br>        Dim s As State<br>        s.X = startEasting<br>        s.Y = startLevel<br>        q(0).Enqueue(s)<br>        hit(s.X, s.Y) = 0<br>        Do<br>            While q(0).Count &gt; 0<br>                s = q(0).Dequeue<br>                If s.Y = -1 Then Return time<br>                If hit(s.X, s.Y) &gt;= 0 Then<br>                    For i = 0 To 3<br>                        If map(s.X, s.Y, i) &gt; -1 Then<br>                            Dim n As State<br>                            n.X = s.X + dx(i)<br>                            n.Y = s.Y + dy(i)<br>                            If (n.Y &lt; 0 AndAlso hitSurface &gt; map(s.X, s.Y, i)) OrElse (n.Y &gt;= 0 AndAlso n.X &gt;= 0 AndAlso n.X &lt; wid AndAlso n.Y &lt; hei AndAlso hit(n.X, n.Y) &gt; map(s.X, s.Y, i) AndAlso n.Y &lt; hei - (time + map(s.X, s.Y, i)) \ wid) Then<br>                                q(map(s.X, s.Y, i)).Enqueue(n)<br>                                If n.Y &gt;= 0 Then<br>                                    hit(n.X, n.Y) = map(s.X, s.Y, i)<br>                                Else<br>                                    hitSurface = map(s.X, s.Y, i)<br>                                End If<br>                            End If<br>                        End If<br>                    Next<br>                End If<br>            End While<br>            Dim tmp As Queue = q(0)<br>            For i = 0 To 8<br>                q(i) = q(i + 1)<br>            Next<br>            q(9) = tmp<br>            hitSurface -= 1<br>            For x = 0 To wid - 1<br>                For y = 0 To hei - 1<br>                    hit(x, y) -= 1<br>                Next<br>            Next<br>            time += 1<br>        Loop Until time = 3000<br>        Return -1<br>    End Function<br>End Class<br></td>