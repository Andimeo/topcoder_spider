<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;  typedef vector&lt;vector&lt;int&gt; &gt; VVI;<br>typedef vector&lt;string&gt; VS;  typedef vector&lt;vector&lt;string&gt; &gt; VVS;<br>typedef signed long long i64;  typedef unsigned long long u64;<br><br>int width(VS &amp;b, int s, int e) {<br>  int ret = 0;<br>  for( int i = s; i &lt; e; i++ ) ret &gt;?= b[i].size();<br>}<br><br>class Lister {<br>public:<br>vector &lt;string&gt; doList(int a, vector &lt;string&gt; b) {<br>  int i, j, k, x, y, z, n;<br>  vector &lt;string&gt; ret;<br><br>  sort(b.begin(), b.end());<br>  int nc, rows, wid, bestrows = 1000, bestwid;<br>  for( nc = 1; nc &lt;= b.size(); nc++ ) {<br>    rows = (b.size()+nc-1)/nc;<br>    if( rows &gt; bestrows ) continue;<br>    wid = 0;<br>    int spill = b.size()%nc;<br>    for( int cw = 0; cw &lt; b.size(); ) {<br>      if( wid ) wid++;<br>      n = b.size()/nc + (spill-- &gt; 0);<br>      wid += width(b, cw, cw+n);<br>      cw += n;<br>    }<br>    if( wid &gt; a ) continue;<br>    if( rows == bestrows &amp;&amp; wid &gt;= bestwid ) continue;<br>    bestrows = rows; bestwid = wid;<br>    wid = 0;<br>    ret = VS(rows);<br>    spill = b.size()%nc;<br>    for( int cw = 0; cw &lt; b.size(); ) {<br>      if( wid ) wid++;<br>      for( i = 0; i &lt; ret.size(); i++ )<br>        while( ret[i].size() &lt; wid ) ret[i] += ' ';<br>      n = b.size()/nc + (spill-- &gt; 0);<br>      wid += x = width(b, cw, cw+n);<br>      for( i = 0; i &lt; n; i++ ) ret[i] += b[cw+i];<br>      cw += n;<br>    }<br>    for( i = 0; i &lt; ret.size(); i++ )<br>      while( ret[i].size() &lt; a ) ret[i] += ' ';<br>  }<br>  return ret;<br>}<br>};<br><br><br>// Powered by FileEdit<br></td>