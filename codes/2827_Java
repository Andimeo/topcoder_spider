<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class ChangeOptimizer {<br>  int[] coins;<br>  int[][] min;<br>  <br>  int[] getMin(int coin, int target) {<br>    if (target == 0) return new int[coins.length];<br>    if (coins[coin] == 1) {<br>      int[] res = new int[coins.length];<br>      res[coin] = target;<br>      return res;<br>    }<br>    <br>    int[] minnotusing = getMin(coin-1, target);<br>    if (target % coins[coin] != coins[coin] - 1) return minnotusing;<br>    <br>    if (min[coin] == null) {<br>      min[coin] = getMin(coin-1, coins[coin]-1);<br>    }<br>    <br>    int[] thismin = (int[])min[coin].clone();<br>    thismin[coin] += target / coins[coin];<br>    <br>    int thist = 0;<br>    int nott = 0;<br>    for (int i=0; i&lt;coins.length; i++) {<br>      thist += thismin[i];<br>      nott += minnotusing[i];<br>    }<br>    if (thist &lt; nott) return thismin;<br>    if (thist &gt; nott) return minnotusing;<br>    return thismin;<br>  }<br>  <br>  public int[] fewestCoins(int[] coinTypes, int value) {<br>    HashMap m = new HashMap();<br>    for (int i=0; i&lt;coinTypes.length; i++) {<br>      m.put(new Integer(coinTypes[i]), new Integer(i));<br>    }<br>    Arrays.sort(coinTypes);<br>    coins = coinTypes;<br>    min = new int[coins.length][];<br>    <br>    int[] res = getMin(coins.length - 1, value);<br>    int[] finres = new int[coins.length];<br>    for (int i=0; i&lt;coins.length; i++) {<br>      Integer val = (Integer)m.get(new Integer(coins[i]));<br>      finres[val.intValue()] = res[i];<br>    }<br>    return finres;<br>  }<br>}<br> <br>// Powered by PopsEdit<br></td>