<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;iostream&gt;<br>#include&lt;vector&gt;<br>#include&lt;string&gt;<br>#include&lt;sstream&gt;<br>#include&lt;algorithm&gt;<br> <br>#include&lt;numeric&gt;<br>#include&lt;map&gt;<br>#include&lt;set&gt;<br>#include&lt;stdio.h&gt;<br>#include&lt;string.h&gt;<br>using namespace std;<br>typedef vector&lt;int&gt;veci;<br>#define ABS(x) ((x)&gt;0?(x):-(x))<br>#define MIN(a,b) ((a)&lt;(b)?(a):(b))<br>#define MAX(a,b) ((a)&gt;(b)?(a):(b))<br>#define DIST(x,y) ABS((x)-(y))<br>int gcd(int x,int y){if(y==0)return x;else return(gcd(y,x%y));}<br>#define DPP 0.000000001<br>vector&lt;string&gt;sToken(string s,string c)<br>{<br>  vector&lt;string&gt;ans;<br>  if(c.length()==0)<br>  {<br>    ans.push_back(s);<br>    return ans;<br>  }<br>  bool found=0;<br>  int i,j,len=0,start=-1;<br>  s+=c;<br>  for(i=0;i&lt;s.length();i++)<br>  {<br>    found=0;<br>    for(j=0;j&lt;c.length();j++)<br>      if(s[i]==c[j])found=1;<br>    if(found)<br>    {<br>      if(len)<br>      {<br>        ans.push_back(s.substr(start+1,i-start-1));<br>        len=0;<br>      }<br>      start=i;<br>    }<br>    else len++;<br>  }<br>  return ans;<br>}<br>long int nPr(int n,int r)<br>{<br>  long int ans=1;<br>  if(r&gt;n)return 0;<br>  for(int i=n-r+1;i&lt;=n;i++)<br>    ans*=i;<br>  return ans;<br>}<br>long int nCr(int n,int r)<br>{<br>  long int ans=1;<br>  if(r&gt;n)return 0;<br>  for(int i=1;i&lt;=r;i++)<br>  {<br>    ans*=(n-i+1)/i;<br>  }<br>  return ans;<br>}<br>bool isPrime(int x)<br>{<br>  if(x&lt;2)return 0;<br>  int i;<br>  if(x%2==0)return 0;<br>  for(i=3;i&lt;=(int)sqrt(double(x));i+=2)<br>  {<br>    if(x%i==0)return 0;<br>  }<br>  return 1;<br>}<br>long long fact(int x)<br>{<br>  long long ans=1;<br>  for(int i=1;i&lt;=x;i++)<br>    ans*=i;<br>  return ans;<br>}<br>class ShoelaceLength<br>{<br>public:<br>  double calculate(int sw, int ew, int sp, int np)<br>  {<br>    double ans=0,tw,twp=ew;<br>    int i;<br>    ans+=sw;<br>    for(i=1;i&lt;np;i++)<br>    {<br>      tw=(double)(sw*i+ew*(np-i-1))/(np-1);<br>      ans+=2*sqrt(sp*sp+(tw/2+twp/2)*(tw/2+twp/2));<br>      twp=tw;<br>    }<br>    return ans;<br>    <br>  }<br>};<br></td>