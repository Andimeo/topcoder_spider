<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;  typedef vector&lt;vector&lt;int&gt; &gt; VVI;<br>typedef vector&lt;string&gt; VS;  typedef vector&lt;vector&lt;string&gt; &gt; VVS;<br>typedef signed long long i64;  typedef unsigned long long u64;<br><br>int taken[128];<br><br>// NOTE: returns -1 for unmatched items.  nm is number of matchable items.<br>int bipartitematch(const vector&lt;vector&lt;int&gt; &gt; &amp;m, int nm = 128) {<br>  vector&lt;int&gt; mat(nm, -1), ret(m.size(), -1);<br>  int i, j, x, y;<br>  int retn = 0;<br><br>  for( i = 0; i &lt; m.size(); i++ ) {<br>    queue&lt;int&gt; q;<br>    vector&lt;int&gt; pred(m.size(), -1);<br>    q.push(i);<br>    pred[i] = -2;<br>    while( !q.empty() ) {<br>      x = q.front(); q.pop();<br>      for( j = 0; j &lt; m[x].size(); j++ ) if( taken[m[x][j]] ) {<br>        y = mat[m[x][j]];<br>        if( y == -1 ) goto found;<br>        if( pred[y] != -1 ) continue;<br>        pred[y] = x;<br>        q.push(y);<br>      }<br>    }<br>    continue;<br>found:  y = m[x][j];<br>    retn++;<br>    while( x != -2 ) {<br>      mat[y] = x;<br>      swap(ret[x], y);<br>      x = pred[x];<br>    }<br>  }<br>  return retn;<br>}<br><br>class Graduation {<br>public:<br>string moreClasses(string a, vector &lt;string&gt; b) {<br>  int i, j, k, x, y, z, n;<br>  string ret = "";<br>  VVI m;<br><br>  for( i = 0; i &lt; b.size(); i++ ) {<br>    n = atoi(b[i].c_str());<br>    for( j = 0; j &lt; n; j++ ) {<br>      m.push_back(VI());<br>      for( k = 0; k &lt; b[i].size(); k++ ) if( !isdigit(b[i][k]) )<br>        m.back().push_back(b[i][k]);<br>    }<br>  }<br>  if( m.size() &gt; 128 ) return "0";<br>  for( i = 0; i &lt; a.size(); i++ ) taken[a[i]] = 1;<br>  n = m.size()-bipartitematch(m);<br>  x = 33;<br>  while( n ) {<br>    if( x &gt;= 128 ) return "0";<br>    if( taken[x] ) {x++; continue;}<br>    taken[x] = 1;<br>    z = m.size()-bipartitematch(m);<br>    if( z == n )<br>      taken[x] = 0;<br>    else<br>      ret += x;<br>    n = z;<br>    x++;<br>  }<br>  return ret;<br>}<br>};<br><br><br>// Powered by FileEdit<br></td>