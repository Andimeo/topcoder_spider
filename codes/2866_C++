<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cmath&gt;<br><br>using namespace std;<br><br><br>struct Team<br>{<br>  string name;<br>  int wins;<br>};<br><br>bool operator&lt;(const Team &amp;a, const Team &amp;b)<br>{<br>  if (a.wins!=b.wins)<br>    return a.wins&gt;b.wins;<br>  return a.name&lt;b.name;<br>}<br><br>class RegularSeason {<br>  public:<br>  vector &lt;string&gt; finalStandings(vector &lt;string&gt; teams, int rounds) {<br>    int n=teams.size();<br>    vector&lt;Team&gt; vt(n);<br>    for(int i=0;i&lt;n;i++) vt[i].wins=0;<br>    <br>    for(int i=0;i&lt;n;i++) {<br>      istringstream ss(teams[i]);<br>      ss &gt;&gt; vt[i].name;<br>      for(int j=0;j&lt;n;j++) {<br>        int p;<br>        ss &gt;&gt; p;<br>        if (i!=j) {<br>          vt[i].wins+=p*rounds;<br>          vt[j].wins+=(100-p)*rounds;<br>        }<br>      }<br>    }<br>    sort(vt.begin(),vt.end());<br>    vector&lt;string&gt; ans;<br>    for(int i=0;i&lt;n;i++) {<br>      ostringstream ss;<br>      ss &lt;&lt; vt[i].name &lt;&lt; " " &lt;&lt; (vt[i].wins+50)/100;<br>      ans.push_back(ss.str());<br>    }<br>    return ans;<br>  }<br>};<br><br><br>// Powered by FileEdit<br></td>