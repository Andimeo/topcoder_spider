<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cctype&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;utility&gt;<br>#include &lt;numeric&gt;<br><br>using namespace std;<br><br>double stod(string s)<br>{<br>  istringstream iss(s);<br>  double ans;<br>  iss &gt;&gt; ans;<br>  return ans;<br>}<br><br>double attack(double a, double x)<br>{<br>  int k = (int) (a / x);<br>  if (k &gt;= 15) k = 14;<br>  return min(abs(a - k*x), abs(a - ((k+1)*x)));<br>}<br><br>class ChartError {<br>  public:<br>  double minErr(vector &lt;string&gt; val) {<br>    <br>    vector &lt;double&gt; a;<br>    for (int i = 0; i &lt; val.size(); i++)<br>      a.push_back(stod(val[i]));<br>    int n = val.size();<br>    double best = 1e9;<br>    for (int i = 0; i &lt; n; i++)<br>      for (int j = i; j &lt; n; j++)<br>        for (int k = 1; k &lt;= 30; k++)<br>    {<br>      double d = (a[i]+a[j]) / k;<br>      double worst = 0;<br>      for (int m = 0; m &lt; n; m++)<br>        {<br>          worst &gt;?= attack(a[m], d);<br>        }<br>      best &lt;?= worst;<br>    }<br>    return best;<br><br>  }<br>};<br><br><br>// Powered by FileEdit<br></td>