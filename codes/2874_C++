<td class="problemText" colspan="8" valign="middle" align="left">
            /*<br> * Hey, stop reading this code right this instant!<br> * You don't know what it could do to your fragile mind!<br> */<br> <br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;climits&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;ctime&gt;<br>#include &lt;functional&gt;<br>#include &lt;regex.h&gt;<br>#include &lt;queue&gt;<br>//#include &lt;brains&gt;  /* commented out to avoid compile error -- brains not found */<br> <br>using namespace std;<br> <br>#define debug(x) cout &lt;&lt; #x &lt;&lt; " = " &lt;&lt; x &lt;&lt; endl<br>#define len length()<br>#define si size()<br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;string&gt; vs;<br>typedef vector&lt;bool&gt; vb;<br>typedef vector&lt;vi&gt; vvi;<br>typedef vector&lt;vb&gt; vvb;<br>typedef long long ii;<br>#define mod(A, B) ((((A) % (B)) + (B)) % (B))<br>#define b2e(A) (A).begin(), (A).end()<br>#define e2b(A) (A).rbegin(), (A).rend()<br>#define rev(A) std::reverse(b2e(A))<br>#define s(A) std::sort(b2e(A))<br>#define ss(A) std::stable_sort(b2e(A))<br>#define un(A) std::unique(b2e(A))<br>#define er(A) (A).erase(un(A), (A).end())<br>#define Fill(A,B) std::fill(b2e(A), B)<br>#define minelt(A) *min_element(b2e(A))<br>#define maxelt(A) *max_element(b2e(A))<br>#define nextp(A) next_permutation(b2e(A))<br>#define prevp(A) prev_permutation(b2e(A))<br>#define pb(x) push_back((x));<br> <br>string itos (int i) {stringstream s; s &lt;&lt; i; return s.str();}<br>string lltos (long long i) {stringstream s; s &lt;&lt; i; return s.str();}<br>int ipow(int a, int b) {return (int) (std::pow((double) (a), (double) (b)));}<br>template &lt;class T&gt;<br>ostream&amp; operator &lt;&lt; (ostream&amp; os, vector&lt;T&gt; temp) {<br>  os &lt;&lt; "{";<br>  for (int i = 0; i &lt; temp.si; i++) os &lt;&lt; (i?", ":"") &lt;&lt; temp[i];<br>  os &lt;&lt; "}";<br>  return os;<br>}<br>template&lt;class S,class T&gt;<br>ostream&amp; operator &lt;&lt; (ostream &amp;os ,const pair&lt;S,T&gt; &amp;a) {<br>  os &lt;&lt; "(" &lt;&lt; a.first &lt;&lt; ", " &lt;&lt; a.second &lt;&lt; ")";<br>  return os;<br>}<br>ii gcd(ii a, ii b) {if (a&lt;0&amp;&amp;b&lt;0) return gcd(-a,-b); if (a==0) return b; if (b==0) return a; if (a &gt; b) return gcd(b, a); if (!(b % a)) return a; return gcd(a, b % a);}<br>//int dx[] = {1,0,-1,0}, dy[] = {0,1,0,-1};<br>//int dx[] = {1,1,1,0,0,-1,-1,-1}, dy[] = {1,0,-1,1,-1,1,0,-1};<br> <br>/*<br>public class antimatter extends Idiot {<br>  String[] codeSolution(String[] problemStatement) {<br>    //re-code this method!<br>    //it always returns quickly, but is often incorrect (about 33% of the time)<br>    return null;<br>  }<br>}<br>*/<br> <br>//----------------------------<br> <br>class Histogram {<br>  public:<br>  vector &lt;string&gt; draw(vector &lt;string&gt; title, vector &lt;int&gt; value) {<br>    int height = *max_element(value.begin(),value.end()) + 1;<br>    vi ls, rs;<br>    for (int i = 0; i &lt; value.si; i++) {<br>      ls.push_back((title[i].si-1)/2);<br>      rs.push_back(title[i].si/2);<br>    }<br>    int spacing = 0;<br>    for (int i = 0; i &lt; value.si - 1; i++) spacing &gt;?= rs[i] + ls[i+1] + 1;<br>    debug(spacing);<br>    vs ret(height);<br>    int X = height - 1;<br>    for (int i = 0; i &lt; value.si; i++) {<br>      if (i) {<br>        int S = spacing - rs[i-1] - ls[i];<br>        for (int m = 0; m &lt; S; m++) <br>        for (int j = 0; j &lt;= X; j++) ret[j] += " ";<br>      }<br>      ret[X] += title[i];<br>      for (int j = 0; j &lt; ls[i]; j++) for (int k = 0; k &lt; X; k++) ret[k] += " ";<br>      for (int j = 0, k = X - 1; j &lt; value[i]; j++,k--) ret[k] += "X";<br>      for (int j = X - 1 - value[i]; j &gt;= 0; j--) ret[j] += " ";<br>      for (int j = 0; j &lt; rs[i]; j++) for (int k = 0; k &lt; X; k++) ret[k] += " ";<br>    }<br>    for (int i = 0; i &lt; ret.si; i++) {<br>      int S = ret[i].si;<br>      while (ret[i][S-1] == ' ') S--;<br>      ret[i].resize(S);<br>    }<br>    for (int i = 0; i &lt; ret.si; i++)<br>    cout &lt;&lt; ret[i] &lt;&lt; "_\n";<br>    return ret;<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>