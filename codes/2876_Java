<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.Vector;<br> <br>public class SimplePath {<br>  class Point {<br>    int northSouth;<br>    int eastWest;<br>    Point(int v, int h) {<br>      northSouth = v;<br>      eastWest = h;<br>    }<br>    Point(Point p) {<br>      northSouth = p.northSouth;<br>      eastWest = p.eastWest;<br>    }<br>  }<br> <br>  class Line {<br>    Point start;<br>    Point end;<br>    Line(Point a, Point b) {<br>      start = a;<br>      end = b;<br>    }<br>    <br>    boolean touches(Point point) {<br>      if (point.northSouth == start.northSouth &amp;&amp; point.northSouth == end.northSouth) {<br>        if ((point.eastWest &lt;= start.eastWest &amp;&amp; point.eastWest &gt;= end.eastWest) ||<br>            (point.eastWest &gt;= start.eastWest &amp;&amp; point.eastWest &lt;= end.eastWest))<br>          return true;<br>      }<br>      if (point.eastWest == start.eastWest &amp;&amp; point.eastWest == end.eastWest) {<br>        if ((point.northSouth &lt;= start.northSouth &amp;&amp; point.northSouth &gt;= end.northSouth) ||<br>            (point.northSouth &gt;= start.northSouth &amp;&amp; point.northSouth &lt;= end.northSouth))<br>          return true;<br>      }<br>      return false;<br>    }<br>  }<br> <br>  public int trouble(String direction, int[] length) {<br>    int result = -1;<br>    int elements = length.length;<br> <br>    int touches;<br>    char dir;<br>    Vector v = new Vector(elements);<br>    Line line;<br>    Point start = new Point(0, 0);<br>    Point current;<br>    for (int i = 0; i &lt; elements; i++) {<br>      current = new Point(start);<br>      dir = direction.charAt(i);<br>      for (int j = 0; j &lt; length[i]; j++) {<br>        switch (dir) {<br>          case 'N':<br>            current.northSouth++;<br>            break;<br>          case 'S':<br>            current.northSouth--;<br>            break;<br>          case 'E':<br>            current.eastWest++;<br>            break;<br>          case 'W':<br>            current.eastWest--;<br>            break;<br>          default:<br>            throw new IllegalArgumentException();<br>        }<br>        touches = touches(v, current);<br>        if (touches != -1) {<br>          if (result == -1)<br>            result = touches;<br>          result = Math.min(touches, result);<br>        }<br>      }<br>      line = new Line(start, current);<br>      v.add(line);<br>      start = new Point(current);<br>    }<br>    <br>    return result;<br>  }<br>  <br>  private int touches(Vector v, Point p) {<br>    Line line;<br>    for (int i = 0; i &lt; v.size(); i++) {<br>      line = (Line) v.elementAt(i);<br>      if (line.touches(p))<br>        return i;<br>    }<br>    return -1;<br>  }<br>}<br></td>