<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Text;<br>public class RPGRobot {<br>    string[] moves;<br>    string[] map;<br>    int h,w;<br> <br>    Hashtable dirs;<br> <br>    char get(int i, int j) {<br>        if (i &lt; 0 || i &gt;= h || j &lt; 0 || j &gt;=w) return '?';<br>        else return map[i][j];<br>    }<br>    <br>    public string[] where(string[] _map, string movements) {<br>        dirs = new Hashtable();<br>        dirs['N'] = new int[]{-1,0};<br>        dirs['S'] = new int[]{1,0};<br>        dirs['W'] = new int[]{0,-1};<br>        dirs['E'] = new int[]{0,1};<br>        <br> <br> <br>        map = _map;<br>        moves = movements.Split(new char[]{',',' '});<br>        h = map.Length;<br>        w = map[0].Length;<br> <br>        ArrayList res = new ArrayList();<br> <br>         for (int j = 1; j &lt; w; j++) for (int i = 1; i &lt; h; i+=2){<br>            if (go1(i,j,0))<br>                res.Add(j+","+i);<br>        }<br> <br>        return (string[])res.ToArray("".GetType());<br>    }<br> <br>    bool go1(int i, int j, int ind) {<br>        //if (ind == moves.Length-1 &amp;&amp; (i &lt;0 || i&gt;=h || j &lt;0 || j&gt;=w)) return true;<br>        Hashtable used = new Hashtable();<br>        foreach (char c in moves[ind]) {<br>            used[c] = 1;<br>            int[] dir = (int[])dirs[c];<br>            if (get(i+dir[0],j+dir[1]) != ' ' &amp;&amp; get(i+dir[0],j+dir[1]) != '?') <br>                return false;<br>        }<br>        foreach (char c in dirs.Keys) {<br>            if (used.ContainsKey(c)) continue;<br>            int[] dir = (int[])dirs[c];<br>            if (get(i+dir[0],j+dir[1]) == ' ') <br>                return false;<br>        }<br>        <br> <br>        return go2(i,j,ind+1);<br> <br>    }<br>    <br>    bool go2(int i, int j, int ind) {<br>        if (ind == moves.Length) return true;<br> <br>        int[] move = (int[])dirs[moves[ind][0]];<br>        <br>        return go1(i+2*move[0],j+2*move[1], ind+1);<br> <br>        <br>    }<br> <br>   <br>        <br>}<br> <br> <br>// Powered by FileEdit<br></td>