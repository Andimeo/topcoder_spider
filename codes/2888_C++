<td class="problemText" colspan="8" valign="middle" align="left">
            /*<br> * Hey, stop reading this code right this instant!<br> * You don't know what it could do to your fragile mind!<br> */<br> <br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;climits&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;ctime&gt;<br>#include &lt;functional&gt;<br>#include &lt;regex.h&gt;<br>#include &lt;queue&gt;<br>//#include &lt;brains&gt;  /* commented out to avoid compile error -- brains not found */<br> <br>using namespace std;<br> <br>#define debug(x) cout &lt;&lt; #x &lt;&lt; " = " &lt;&lt; x &lt;&lt; endl<br>#define len length()<br>#define si size()<br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;string&gt; vs;<br>typedef vector&lt;bool&gt; vb;<br>typedef vector&lt;vi&gt; vvi;<br>typedef vector&lt;vb&gt; vvb;<br>typedef long long ii;<br>#define mod(A, B) ((((A) % (B)) + (B)) % (B))<br>#define b2e(A) (A).begin(), (A).end()<br>#define e2b(A) (A).rbegin(), (A).rend()<br>#define rev(A) std::reverse(b2e(A))<br>#define s(A) std::sort(b2e(A))<br>#define ss(A) std::stable_sort(b2e(A))<br>#define un(A) std::unique(b2e(A))<br>#define er(A) (A).erase(un(A), (A).end())<br>#define Fill(A,B) std::fill(b2e(A), B)<br>#define minelt(A) *min_element(b2e(A))<br>#define maxelt(A) *max_element(b2e(A))<br>#define nextp(A) next_permutation(b2e(A))<br>#define prevp(A) prev_permutation(b2e(A))<br>#define pb(x) push_back((x));<br> <br>string itos (int i) {stringstream s; s &lt;&lt; i; return s.str();}<br>string lltos (long long i) {stringstream s; s &lt;&lt; i; return s.str();}<br>int ipow(int a, int b) {return (int) (std::pow((double) (a), (double) (b)));}<br>template &lt;class T&gt;<br>ostream&amp; operator &lt;&lt; (ostream&amp; os, vector&lt;T&gt; temp) {<br>  os &lt;&lt; "{";<br>  for (int i = 0; i &lt; temp.si; i++) os &lt;&lt; (i?", ":"") &lt;&lt; temp[i];<br>  os &lt;&lt; "}";<br>  return os;<br>}<br>template&lt;class S,class T&gt;<br>ostream&amp; operator &lt;&lt; (ostream &amp;os ,const pair&lt;S,T&gt; &amp;a) {<br>  os &lt;&lt; "(" &lt;&lt; a.first &lt;&lt; ", " &lt;&lt; a.second &lt;&lt; ")";<br>  return os;<br>}<br>ii gcd(ii a, ii b) {if (a&lt;0&amp;&amp;b&lt;0) return gcd(-a,-b); if (a==0) return b; if (b==0) return a; if (a &gt; b) return gcd(b, a); if (!(b % a)) return a; return gcd(a, b % a);}<br>int dx[] = {-2,0,2,0}, dy[] = {0,2,0,-2};<br>int dx2[] = {-1,0,1,0}, dy2[] = {0,1,0,-1};<br>//int dx[] = {1,1,1,0,0,-1,-1,-1}, dy[] = {1,0,-1,1,-1,1,0,-1};<br> <br>/*<br>public class antimatter extends Idiot {<br>  String[] codeSolution(String[] problemStatement) {<br>    //re-code this method!<br>    //it always returns quickly, but is often incorrect (about 33% of the time)<br>    return null;<br>  }<br>}<br>*/<br> <br> //----------------------------<br> struct pt<br> {<br>   int first, second, x, y;<br> };<br> bool operator &lt; (const pt &amp;a, const pt &amp;b) {<br>   if (a.x != b.x) return a.x &lt; b.x;<br>   return a.y &lt; b.y;<br> }<br> ostream&amp; operator &lt;&lt; (ostream &amp;os , const pt &amp;a) {<br>   os &lt;&lt; "(" &lt;&lt; a.first &lt;&lt; ", " &lt;&lt; a.second &lt;&lt; ")";<br>   return os;<br> }<br>map&lt;char,int&gt; dir;<br>vs m;<br>int R, C;<br>class RPGRobot {<br>  public:<br>  void cango(string dirs, vector&lt;pt&gt; &amp;vp) {<br>    debug(dirs);<br>    for (int x = 0; x &lt; vp.si; x++) {<br>      bool d[4] = {0,0,0,0}, e[4] = {0,0,0,0};<br>      for (int i = 0; i &lt; dirs.si; i++) {<br>        e[dir[dirs[i]]] = 1;<br>      }<br>      for (int i = 0; i &lt; 4; i++) {<br>        int tx = vp[x].first + dx2[i], ty = vp[x].second + dy2[i];<br>        if (tx &lt; 0 || ty &lt; 0 || tx &gt;= R || ty &gt;= C) {<br>          d[i] = e[i] = 1;<br>        }<br>        else if (m[tx][ty] == ' ') d[i] = 1;<br>      }<br>//      printf("%i %i %i %i %i %i %i %i\n", d[0],d[1],d[2],d[3],e[0],e[1],e[2],e[3]);<br>      for (int i = 0; i &lt; 4; i++) {<br>        if (e[i] != d[i]) {<br>          vp.erase(vp.begin()+x);<br>          x--;<br>          goto done;<br>        }<br>      }<br>      done:;<br>    }<br>  }<br>  <br>  void mv(char d, vector&lt;pt&gt; &amp;vp) {<br>    int D = dir[d];<br>    for (int i = 0; i &lt; vp.si; i++) {<br>      vp[i].first += dx[D];<br>      vp[i].second += dy[D];<br>    }<br>  }<br>  <br>  vector &lt;string&gt; where(vector &lt;string&gt; mp, string movements) {<br>    dir['N'] = 0; dir['E'] = 1; dir['S'] = 2; dir['W'] = 3;<br>    m = mp;<br>    R = mp.si, C = mp[0].si;<br>    vector&lt;pt&gt; vp;<br>    for (int i = 1; i &lt; mp.si; i += 2)<br>    for (int j = 1; j &lt; mp[0].si; j += 2)<br>    if (mp[i][j] == ' ') {<br>      pt temp = {i,j,i,j};<br>      vp.pb(temp);<br>    }<br>    for (int i = 0; i &lt; movements.si; i++) if (movements[i] == ',') movements[i] = ' ';<br>    stringstream S(movements);<br>    vs move; string v; while (S &gt;&gt; v) move.pb(v);<br>    cango(move[0],vp);<br>//    debug(vp);<br>    for (int i = 1; i &lt; move.si; i += 2) {<br>      mv(move[i][0], vp);<br>//      debug(vp);<br>      cango(move[i+1],vp);<br>//      debug(vp);<br>    }<br>    for (int i = 0; i &lt; vp.si; i++) {<br>      swap(vp[i].x, vp[i].y);<br>    }<br>    s(vp);<br>    vs ret;<br>    for (int i = 0; i &lt; vp.si; i++) {<br>      char buf[100]; sprintf(buf, "%i,%i", vp[i].x, vp[i].y);<br>      ret.push_back(string(buf));<br>    }<br>    return ret;<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>