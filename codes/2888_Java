<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class RPGRobot {<br>  static final int[] dx = {-1, 0, 1, 0};<br>  static final int[] dy = {0, -1, 0, 1};<br>  public String[] where(String[] map, String movements) {<br>    int h = map.length;<br>    int w = map[0].length();<br>    int[][] m = new int[h][w];<br>    for (int i = 1; i &lt; h; i += 2)<br>      for (int j = 1; j &lt; w; j += 2)<br>        for (int k = 0; k &lt; 4; k++)<br>          if (map[i + dy[k]].charAt(j + dx[k]) == ' ') m[i][j] |= 1 &lt;&lt; k;<br>    String[] s = movements.split("[, ]");<br>    int n = s.length / 2 + 1;<br>    int[] r = new int[n];<br>    int[] d = new int[n - 1];<br>    for (int i = 0; i &lt; n; i++) {<br>      for (int j = 0; j &lt; s[i * 2].length(); j++)<br>        r[i] |= 1 &lt;&lt; "WNES".indexOf(s[i * 2].charAt(j));<br>      if (i + 1 &lt; n) d[i] = "WNES".indexOf(s[i * 2 + 1]);<br>    }<br>    ArrayList l = new ArrayList();<br>    for (int j = 1; j &lt; w; j += 2)<br>      for (int i = 1; i &lt; h; i += 2) {<br>        int x = j;<br>        int y = i;<br>        boolean f = true;<br>        for (int k = 0; k &lt; n; k++) {<br>          if (x &gt; 0 &amp;&amp; y &gt; 0 &amp;&amp; x &lt; w &amp;&amp; y &lt; h &amp;&amp; m[y][x] != r[k]) f = false;<br>          if (y &gt; 0 &amp;&amp; y &lt; h) {<br>            if (x == -1 &amp;&amp; ((m[y][x + 2] &amp; 1) == 0) != ((r[k] &amp; 4) == 0)) f = false;<br>            if (x == w + 1 &amp;&amp; ((m[y][x - 2] &amp; 4) == 0) != ((r[k] &amp; 1) == 0)) f = false;<br>          }<br>          if (x &gt; 0 &amp;&amp; x &lt; w) {<br>            if (y == -1 &amp;&amp; ((m[y + 2][x] &amp; 2) == 0) != ((r[k] &amp; 8) == 0)) f = false;<br>            if (y == h + 1 &amp;&amp; ((m[y - 2][x] &amp; 8) == 0) != ((r[k] &amp; 2) == 0)) f = false;<br>          }<br>          if (k + 1 &lt; n) {<br>            x += dx[d[k]] * 2;<br>            y += dy[d[k]] * 2;<br>          }<br>        }<br>        if (f) l.add(j + "," + i);<br>      }<br>    return (String[]) l.toArray(new String[0]);<br>  }<br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>