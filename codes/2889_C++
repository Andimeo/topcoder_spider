<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;map&gt; // find insert erase make_pair<br>#include &lt;set&gt;<br>#include &lt;cassert&gt; // assert<br>//#include &lt;list&gt;<br>//#include &lt;deque&gt;<br>//#include &lt;iomanip&gt;<br>//#include &lt;cstring&gt;<br>//#include &lt;cmath&gt;<br>//#include &lt;cstdio&gt;<br>//#include &lt;cctype&gt; // isalpha isdigit isalnum isupper islower tolower toupper<br>#include &lt;string&gt; // size<br>#include &lt;vector&gt; // push_back pop_back front back<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt; // istringstream ostringstream<br>#include &lt;algorithm&gt; // next_permutation reverse count<br>#include &lt;numeric&gt; // accumulate<br>#include &lt;functional&gt;<br><br>using namespace std;<br><br>#ifdef HOME_RUN // this is debug output code<br>int NTR = 1000;struct UU{~UU(){cerr&lt;&lt;endl;}<br>template&lt;class X&gt;UU&amp;operator|(const X&amp;x){cerr&lt;&lt;' '&lt;&lt;x;return*this;}};<br>UU uu(const char*f,int l,const char*v){<br>for(cerr&lt;&lt;f&lt;&lt;':'&lt;&lt;l&lt;&lt;' ';*v;++v)cerr&lt;&lt;(*v-'|'?*v:' ');return UU();}<br>#define TR(v) if(--NTR&lt;0);else uu(__FILE__,__LINE__,#v)|'='|v<br>#else<br>#define TR(v) do{}while(0)<br>#endif // end of debug output code<br>#define ALL(C) (C).begin(), (C).end()<br>#define forIter(I, C) for(typeof((C).begin()) I=(C).begin(); I!=(C).end(); ++I)<br>#define forN(I, C) for ( int I = 0; I &lt; (C); ++(I) )<br>#define forEach(I, C) forN(I,int((C).size()))<br>#define forEach2(I, J, C) forEach(I, C)forEach(J, (C)[I])<br>typedef long long i64; typedef unsigned long long u64;<br>typedef vector&lt;int&gt; VI; typedef vector&lt;VI&gt; VVI; typedef vector&lt;string&gt; VS;<br><br>#define METHOD TriangleCount::count<br>class TriangleCount<br>{<br>public:<br>    int np(int N)<br>    {<br>        int ret = 0;<br>        for ( int i = 0; i &lt;= N; ++i )<br>            ret += i+1;<br>        return ret;<br>    }<br>    int count(int N) <br>    {<br>        int ret = 0;<br>        for ( int l = 1; l &lt;= N; ++l ) {<br>            ret += np(N-l);<br>            ret += np(N-2*l);<br>        }<br>        return ret;<br>    }<br>};<br><br><br>// Powered by FileEdit<br></td>