<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cmath&gt;<br><br>using namespace std;<br><br><br>class TCSocks {<br>  public:<br>  <br>  int n,best;<br>  int cst[10][10],tm[10][10];<br>  int mny[10][1000]; // mny[i][k] = money at city i if reached at time k<br>  bool vis[10];<br>  <br>  void go(int cur, int curtm, int profit)<br>  {<br>    profit+=mny[cur][curtm];<br>    if (profit-cst[cur][0]&gt;best)<br>      best=profit-cst[cur][0];<br>    for(int i=1;i&lt;n;i++)<br>      if (!vis[i]) {<br>        vis[i]=true;<br>        go(i,curtm+tm[cur][i],profit-cst[cur][i]);<br>        vis[i]=false;<br>      }<br>  }<br>  <br>  int earnMoney(vector &lt;int&gt; money, vector &lt;string&gt; cost, vector &lt;string&gt; time, vector &lt;string&gt; competitors) {<br>    n=money.size();<br>    for(int i=0;i&lt;n;i++) {<br>      vis[i]=false;<br>      for(int j=0;j&lt;1000;j++)<br>        mny[i][j]=money[i];<br>      istringstream ss1(cost[i]), ss2(time[i]);<br>      for(int j=0;j&lt;n;j++) {<br>        ss1 &gt;&gt; cst[i][j];<br>        ss2 &gt;&gt; tm[i][j];<br>      }<br>    }<br>    for(int i=0;i&lt;competitors.size();i++) {<br>      int t=0,cur=0,next;<br>      istringstream ss(competitors[i]);<br>      while (ss &gt;&gt; next) {<br>        t+=tm[cur][next];<br>        for(int j=t;j&lt;1000;j++)<br>          mny[next][j]/=2;<br>        cur=next;<br>      }<br>    }<br>    <br>    vis[0]=true;<br>    best=0;<br>    go(0,0,0);<br>    return best;<br>  }<br>};<br><br><br>// Powered by FileEdit<br></td>