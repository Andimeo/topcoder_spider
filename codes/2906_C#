<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Text.RegularExpressions;<br>using System.Collections;<br>using System.Collections.Specialized;<br><br>public class SensorGrid {<br>    public SensorGrid() {<br>       // Have some fun<br>    }<br>    public int[] largestRectangle(int width, int height, int[] x1, int[] y1) {<br>        int[] x = new int[x1.Length+2];<br>        x[0] = -1;<br>        x[1] = width;<br>        Array.Copy(x1, 0, x, 2, x1.Length);<br>        int[] y = new int[y1.Length + 2];<br>        y[0] = -1;<br>        y[1] = height;<br>        Array.Copy(y1, 0, y, 2, y1.Length);<br><br>        int[] best = new int[4];<br>        best[0] = Int32.MaxValue;<br>        best[1] = Int32.MaxValue;<br><br>        foreach(int x2 in x)<br>            foreach (int y2 in y)<br>                foreach(int x3 in x) <br>                    foreach(int y3 in y)<br>                        if (x3 &gt; x2 &amp;&amp; y3 &gt; y2)<br>                        {<br>                            bool ok = true;<br>                            for (int i = 0; i &lt; x.Length; i++)<br>                            {<br>                                if (x[i] &gt; x2 &amp;&amp; x[i] &lt; x3 &amp;&amp; y[i] &gt; y2 &amp;&amp; y[i] &lt; y3)<br>                                {<br>                                    ok = false;<br>                                    break;<br>                                }<br>                            }<br>                            if (!ok) continue;<br><br>                            int[] candidate = new int[] { x2+1, y2+1, x3 - x2-1, y3 - y2-1};<br>                            int area = candidate[2] * candidate[3];<br>                            if (area &gt; best[2] * best[3])<br>                            {<br>                                Array.Copy(candidate, best, candidate.Length);<br>                                continue;<br>                            }<br>                            else if (area &lt; best[2] * best[3]) continue;<br><br>                            if (best[1] &gt; candidate[1])<br>                            {<br>                                Array.Copy(candidate, best, candidate.Length);<br>                                continue;<br>                            }<br>                            else if (candidate[1] &gt; best[1]) continue;<br><br>                            if (candidate[0] &lt; best[0])<br>                            {<br>                                Array.Copy(candidate, best, candidate.Length);<br>                                continue;<br>                            }<br>                            else if (candidate[0] &gt; best[0]) continue;<br><br>                            if (candidate[2] &gt; best[2])<br>                            {<br>                                Array.Copy(candidate, best, candidate.Length);<br>                                continue;<br>                            }<br>                        }<br><br>        return best;<br>    }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>