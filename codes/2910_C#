<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Text.RegularExpressions;<br>using System.Collections;<br><br>public class TinSoldiers {<br>  long fact(long t)<br>  {<br>    long res = 1;<br>    for(long i = 2; i &lt;= t; i++)<br>      res *= i;<br>    return res;<br>  }<br><br>  int[] rk;<br>  int total= 0;<br><br>  long perms(int[] r)<br>  {<br>    long nt = 0;<br>    foreach(int y in r) nt += y;<br>    if(nt == 0) return 0;<br>    long res = fact(nt);<br>    foreach(int y in r) res /= fact(y);<br>    return res;<br>  }<br><br>  long countsym()<br>  {<br>    if(total % 2 == 0) // even<br>    {<br>      long res = 0;<br>      for(int i = 0; i &lt; rk.Length; i++)<br>      {<br>        int[] nrk = new int[rk.Length];<br>        Array.Copy(rk, nrk, rk.Length);<br>        if(nrk[i] &lt; 2) continue;<br>        nrk[i] -= 2;<br>        bool ok = true;<br>        for(int j = 0; j &lt; nrk.Length; j++)<br>          if(nrk[j]%2 != 0) ok = false; else nrk[j] /= 2;<br>        if(!ok) continue;<br>        res += perms(nrk);<br>      }<br>      return res;<br>    }<br>    else // odd<br>    {<br>      long res = 0;<br>      for(int i = 0; i &lt; rk.Length; i++)<br>      {<br>        int[] nrk = new int[rk.Length];<br>        Array.Copy(rk, nrk, rk.Length);<br>        nrk[i]--;<br>        bool ok = true;<br>        for(int j = 0; j &lt; nrk.Length; j++)<br>          if(nrk[j]%2 != 0) ok = false; else nrk[j] /= 2;<br>        if(!ok) continue;<br>        res += perms(nrk);<br>      }<br>      return res;<br>    }<br>    return 0;<br>  }<br><br><br>    public int lineUps(int[] rankCounts) {<br>    rk = rankCounts;<br>    foreach(int a in rk) total += a;<br><br>    long res2 = countsym();<br>        long res = ((perms(rk) - res2) / 2) + res2;<br>        return (int) res;<br>    }<br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>