<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Text.RegularExpressions;<br>using System.Collections;<br><br>public class MatchMaking {<br><br>  class Person : System.IComparable<br>  {<br>    public string name;<br>    public ArrayList matches = new ArrayList();<br>    public string ans;<br><br>    public int num(string ans_)<br>    {<br>      int m = 0;<br>      for(int i = 0; i &lt; ans.Length; i++)<br>        if(ans[i] == ans_[i]) m++;<br>      return m;<br>    }<br><br>    public int CompareTo(object obj)<br>    {<br>      return string.CompareOrdinal(name, ((Person)obj).name);<br>    }<br><br>  }<br><br><br><br>    public string makeMatch(string[] namesWomen, string[] answersWomen, string[] namesMen, <br>    string[] answersMen, string queryWoman) <br>  {<br>    Person[] women = new Person[namesWomen.Length];<br>    Person[] men = new Person[namesWomen.Length];<br><br>    Person qw = null;<br>    for(int i = 0; i &lt; namesWomen.Length; i++)<br>    {<br>      women[i] = new Person();<br>      women[i].name = namesWomen[i];<br>      women[i].ans = answersWomen[i];<br><br>      men[i] = new Person();<br>      men[i].name = namesMen[i];<br>      men[i].ans = answersMen[i];<br><br>      if(women[i].name == queryWoman) qw = women[i];<br>    }<br><br>    ArrayList wsa = new ArrayList(women);<br>    wsa.Sort();<br>    ArrayList msa = new ArrayList(men);<br>    msa.Sort();<br><br>    foreach(Person p in wsa)<br>    {<br>      int max = -1;<br>      foreach(Person m in msa)<br>      {<br>        int mm = p.num(m.ans);<br>        if(mm &gt; max)<br>        {<br>          p.matches.Clear();<br>          p.matches.Add(m);<br>          max = mm;<br>        }<br>        if(mm == max)<br>        {<br>          p.matches.Add(m);<br>        }<br>      }<br><br>      p.matches.Sort();<br>      msa.Remove(p.matches[0]);<br>    }<br><br>        return ((Person)qw.matches[0]).name;;<br>    }<br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>