<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;string&gt;<br>#include &lt;sstream&gt;<br> <br>using namespace std;<br> <br>#define REP(i,n) for(int i=0;i&lt;(n);++i)<br>#define EACH(i,x) REP(i,(x).size())<br>#define FOR(i,a,b) for(int i=(a);i&lt;(b);++i)<br> <br>typedef long long int lint;<br>typedef unsigned long long int ull;<br>typedef pair&lt;int,int&gt; pi;<br>typedef vector&lt;pi&gt; vp;<br>typedef vector&lt;int&gt; vi;<br> <br>class UnLinker<br>{<br>  public:<br> <br>    bool matches(char *haystack, char *prefix)<br>    {<br>      while(*haystack &amp;&amp; *prefix &amp;&amp; *haystack == *prefix)<br>      {<br>        ++haystack; ++prefix;<br>      }<br>      if(!*prefix) return true;<br>      return false;<br>    }<br> <br>    int isSuffix(char *string)<br>    {<br>      char proper[5][10] = { ".com", ".org", ".edu", ".info", ".tv" };<br>      REP(i, 5)<br>        if(matches(string, proper[i]))<br>          return strlen(proper[i]);<br>      return 0;<br>    }<br> <br>    bool validchar(char ch)<br>    {<br>      if('A' &lt;= ch &amp;&amp; ch &lt;= 'Z') return true;<br>      if('a' &lt;= ch &amp;&amp; ch &lt;= 'z') return true;<br>      if('0' &lt;= ch &amp;&amp; ch &lt;= '9') return true;<br>      if(ch == '.') return true;<br>      return false;<br>    }<br> <br>    int maxLength(char *string)<br>    {<br>      char *org = string;<br>      int res = 0;<br>      if(matches(string, "http://")) <br>        string += 7;<br>      else if(matches(string, "http://www."))<br>        string += 11;<br>      else if(matches(string, "www."))<br>        string += 4;<br>      else<br>        return 0;<br> <br>      if(!validchar(*string)) return 0;<br>      ++string;<br>      <br>      while(validchar(*string))<br>      {<br>        int k = isSuffix(string);<br>        if(k &gt; 0)<br>          res = string - org + k; <br>        ++string;<br>      }<br>      return res;<br>    }<br>    <br>    string clean(string text)<br>    {<br>      char raw[1024];<br>      int outlen = 0;<br>      char output[1024];<br>      strcpy(raw, text.c_str());<br>      int i = 0, omits = 0;<br>      while(raw[i])<br>      {<br>        int maxlen = maxLength(raw+i);<br>        // not a part of weblink<br>        if(maxlen == 0)<br>        {<br>          outlen += sprintf(output+outlen, "%c", raw[i]);<br>          ++i;<br>        }<br>        else<br>        {<br>          ++omits;<br>          outlen += sprintf(output+outlen, "OMIT%d", omits);<br>          i += maxlen;<br>        }<br>      }<br>      return output;<br>    }<br> <br>};<br></td>