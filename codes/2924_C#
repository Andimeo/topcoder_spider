<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class MovingAverages<br>{<br>  private int hs(string t) {<br>  string[] ss=t.Split(':');<br>  return Int32.Parse(ss[0])*3600 + Int32.Parse(ss[1])*60 + Int32.Parse(ss[2]);<br>  }<br>  public int[] calculate(string[] times, int n)<br>  {<br>    ArrayList arr = new ArrayList();<br>    for(int i=0;i&lt;times.Length-n+1;i++) {<br>    int sum=0;<br>    for(int k=i;k&lt;i+n;k++)<br>    sum+=hs(times[k]);<br>    arr.Add((int)sum/n);<br>    }<br>    int[] arr2 = new int[arr.Count];<br>    arr.CopyTo(arr2,0);<br>    return arr2;<br>  }<br>  <br>  [STAThread]<br>  public static void Main(string[] args)<br>  {<br>    int[] answer;<br>    bool errors = false;<br>    string answerString, desiredAnswerString;<br>    <br>    answer = new MovingAverages().calculate(new string[]{"01:19:10", "01:17:40", "01:19:44", "01:17:23", "01:17:07"}, 3);<br>    Console.WriteLine("Your answer:");<br>    answerString = "{ ";<br>    if (answer.Length &gt; 0)<br>    {<br>      answerString += answer[0];<br>      for (int i=1; i&lt;answer.Length; i++)<br>        answerString += ",  " + answer[i];<br>      answerString += " }";<br>    }<br>    else<br>      answerString += "}";<br>    Console.WriteLine("\t" + answerString);<br>    desiredAnswerString = "{ 4731,  4695,  4684 }";<br>    Console.WriteLine("Desired answer:\n\t" + desiredAnswerString);<br>    if (answerString != desiredAnswerString)<br>    {<br>      errors = true;<br>      Console.WriteLine("DOESN'T MATCH!!!!");<br>    }<br>    else<br>      Console.WriteLine("Match :-)");<br>    Console.WriteLine();<br>    answer = new MovingAverages().calculate(new string[]{"01:19:10", "01:17:40", "01:19:44", "01:17:23", "01:17:07"}, 1);<br>    Console.WriteLine("Your answer:");<br>    answerString = "{ ";<br>    if (answer.Length &gt; 0)<br>    {<br>      answerString += answer[0];<br>      for (int i=1; i&lt;answer.Length; i++)<br>        answerString += ",  " + answer[i];<br>      answerString += " }";<br>    }<br>    else<br>      answerString += "}";<br>    Console.WriteLine("\t" + answerString);<br>    desiredAnswerString = "{ 4750,  4660,  4784,  4643,  4627 }";<br>    Console.WriteLine("Desired answer:\n\t" + desiredAnswerString);<br>    if (answerString != desiredAnswerString)<br>    {<br>      errors = true;<br>      Console.WriteLine("DOESN'T MATCH!!!!");<br>    }<br>    else<br>      Console.WriteLine("Match :-)");<br>    Console.WriteLine();<br>    answer = new MovingAverages().calculate(new string[]{"01:19:10", "01:17:40", "01:19:44", "01:17:23", "01:17:07"}, 5);<br>    Console.WriteLine("Your answer:");<br>    answerString = "{ ";<br>    if (answer.Length &gt; 0)<br>    {<br>      answerString += answer[0];<br>      for (int i=1; i&lt;answer.Length; i++)<br>        answerString += ",  " + answer[i];<br>      answerString += " }";<br>    }<br>    else<br>      answerString += "}";<br>    Console.WriteLine("\t" + answerString);<br>    desiredAnswerString = "{ 4692 }";<br>    Console.WriteLine("Desired answer:\n\t" + desiredAnswerString);<br>    if (answerString != desiredAnswerString)<br>    {<br>      errors = true;<br>      Console.WriteLine("DOESN'T MATCH!!!!");<br>    }<br>    else<br>      Console.WriteLine("Match :-)");<br>    Console.WriteLine();<br>    <br>    if (errors)<br>      Console.WriteLine("Some of the test cases had errors :-(");<br>    else<br>      Console.WriteLine("You're a stud (at least on the test data)! :-D ");<br>  }<br>}<br> <br>//Powered by [KawigiEdit]<br></td>