<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class TopographicalImage {<br>  String[] tdata;<br>  boolean[][] visited;<br>  int[] ret;<br>  int n,temp;<br>  boolean ok (int x, int y,int a,int b) {<br>    return x&gt;=0 &amp;&amp; x&lt;n &amp;&amp; y&gt;=0 &amp;&amp; y&lt;tdata[0].length() &amp;&amp; !visited[x][y] &amp;&amp; tdata[a].charAt(b)&gt;=tdata[x].charAt(y);<br>  }<br>  void visit(int x, int y) {<br>    char c = tdata[x].charAt(y);<br>    int i,j;<br>    temp++;<br>    visited[x][y] = true;<br>    if (ok(x-1,y,x,y)) visit(x-1,y);<br>    if (ok(x-1,y-1,x,y)) visit(x-1,y-1);<br>    if (ok(x+1,y,x,y)) visit(x+1,y);<br>    if (ok(x-1,y+1,x,y)) visit(x-1,y+1);<br>    if (ok(x+1,y+1,x,y)) visit(x+1,y+1);<br>    if (ok(x,y-1,x,y)) visit(x,y-1);<br>    if (ok(x,y+1,x,y)) visit(x,y+1);<br>    if (ok(x+1,y-1,x,y)) visit(x+1,y-1);<br>  }<br>  public int[] calcPeakAreas(String[] topoData) {<br>    int i,j,ind=0;<br>    n = topoData.length;<br>    tdata = topoData;<br>    visited = new boolean[n][topoData[0].length()];<br>    ret = new int[3000];<br>    while (true) {<br>      int highest = -1,x=-1,y=-1;<br>      for (i=0;i&lt;n;i++) {<br>        for (j=0;j&lt;topoData[i].length();j++) {<br>          if (!visited[i][j] &amp;&amp; topoData[i].charAt(j)&gt;highest) { highest = topoData[i].charAt(j); x = i; y = j; }<br>        }<br>      }<br>      if (x==-1) break;<br>      temp = 0;<br>      visit(x,y);<br>      ret[ind++] = temp;<br>    }<br>    int[] resret = new int[ind];<br>    for (i=0;i&lt;ind;i++) resret[i] = ret[i];<br>    return resret;<br>  }<br>  <br>/* ***********************TEMPLATE CODE BEGINS HERE *************************/<br>  class Pair implements Comparable {<br>    int x,y;<br>    Pair(int a, int b) { x = a; y = b; }<br>    public int compareTo(Object o) {Pair a = (Pair) o; int temp = x-a.x; if<br>(temp!=0) return temp; return y-a.y; }<br>  }<br>  Pair mp(int x, int y) { return new Pair(x,y); }<br>  int abs(int a) { return Math.abs(a); }<br>  int max(int a, int b) { return Math.max(a, b); }<br>  int min(int a, int b) { return Math.min(a, b); }<br>  int accum(int[] a) { int tot = 0; for(int i=0;i&lt;a.length;i++) tot+=a[i]; return<br>tot; }<br>  void swap(int[] a, int i, int j) { int t = a[i]; a[i] = a[j]; a[j] = t; }<br>  long abs(long a) { return Math.abs(a); }<br>  long max(long a, long b) { return Math.max(a, b); }<br>  long min(long a, long b) { return Math.min(a, b); }<br>  long accum(long[] a) { long tot = 0; for(int i=0;i&lt; a.length;i++) tot+=a[i];<br>return tot; }<br>  double abs(double a) { return Math.abs(a); }<br>  double max(double a, double b) { return Math.max(a, b); }<br>  double min(double a, double b) { return Math.min(a, b); }<br>  double accum(double[] a) { double tot=0; for(int i=0;i&lt;a.length;i++) tot+=a[i];<br>return tot; }<br>boolean isalpha(char c) {<br>return ((c&lt;='Z' &amp;&amp; c&gt;='A') || (c&lt;='z' &amp;&amp; c&gt;='a'));<br>}<br>String toupper(String a) {<br>char[] x = a.toCharArray();<br>for (int i=0;i&lt;x.length;i++) if (x[i]&gt;='a' &amp;&amp; isalpha(x[i])) x[i] -= 'a'-'A';<br>return new String(x);<br>}<br>String tolower(String a) {<br>char[] x = a.toCharArray();<br>for (int i=0;i&lt;x.length;i++) if (x[i]&lt;='Z' &amp;&amp; isalpha(x[i])) x[i] += 'a'-'A';<br>return new String(x);<br>}<br>int[] nextperm(int[] vals) {<br>  int i =  vals.length-1;<br>  while (true) {<br>    int ii =  i;<br>    i--;<br>    if (vals[i] &lt; vals[ii]) {<br>      int j = vals.length;<br>      while (vals[i] &gt;= vals[--j]);<br>        int temp = vals[i];  //Swap<br>        vals[i] = vals[j]; <br>        vals[j] = temp;<br>      int begin = ii, end = vals.length-1;<br>      while (end&gt;begin) {<br>          int stemp = vals[end];  //Swap<br>          vals[end] = vals[begin]; <br>          vals[begin] = stemp;<br>        end--; begin++;<br>      }  <br>      return vals;<br>    } else if (vals[i] == vals[0]) {<br>      int begin = 0, end = vals.length-1;<br>      while (end&gt;begin) {<br>          int stemp = vals[end];  //Swap<br>          vals[end] = vals[begin]; <br>          vals[begin] = stemp;<br>        end--; begin++;<br>      }  <br>      return vals;<br>    }<br>  }<br>}<br> <br>/* ***********************TEMPLATE CODE ENDS HERE ****************************/<br> <br>}<br> <br>// Powered by PopsEdit<br></td>