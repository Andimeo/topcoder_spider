<td class="problemText" colspan="8" valign="middle" align="left">
            /*/*///*/*/ Powered by radedit!            /*/*/*/*/*/ ;<br>/*/*//*/*/  import java . util .           /*/*/*/*/*/ ;<br>/*/*//*/*/  import java . lang . reflect . /*/*/*/*/*/ ;<br>public class QueenInterference {<br>   boolean ddd = false ;<br>  long a = 1 ;<br>  int nv(int v) {<br>    int r = (int)(1 + a % v) ;<br>    a = 16807L * a % 2147483647 ;<br>    return r ;<br>  }<br>  int[] pos ;<br>  int n ;<br>  boolean reach[] ;<br>  int re() {<br>    int r = 0 ;<br>    for (int i=0; i&lt;n; i++) {<br>      reach[i] = false ;<br>      for (int j=0; j&lt;n; j++) if (i != j) {<br>  if (pos[i] == pos[j] || Math.abs(pos[i]-pos[j]) == Math.abs(i-j)) {<br>    reach[i] = true ;<br>    r++ ;<br>    break ;<br>  }<br>      }<br>    }<br>    return r ;<br>  }<br>  public int numSteps(int nn) {<br>    int i, j, k ;<br>    n = nn ;<br>    pos = new int[n] ;<br>    reach = new boolean[n] ;<br>    for (i=0; i&lt;n; i++) {<br>      pos[i] = nv(n) - 1 ;<br>      System.out.print(" " + (1+pos[i])) ;<br>    }<br>    System.out.println() ;<br>    int r = 0 ;<br>    int[] val = new int[n] ;<br>    while (true) {<br>      int t = re() ;<br>      if (t == 0) {<br>  return r ;<br>      }<br>      r++ ;<br>      k = nv(t) ;<br>      for (j=0; j&lt;n; j++) {<br>  if (reach[j]) {<br>    k-- ;<br>    if (k == 0) {<br>      break ;<br>    }<br>  }<br>      }<br>      int at = j ;<br>      int mm = n * 2 ;<br>      int cnt = 0 ;<br>      for (k=0; k&lt;n; k++) {<br>  val[k] = 0 ;<br>  for (i=0; i&lt;n; i++) if (i != at) {<br>    if (k == pos[i] || Math.abs(pos[i]-k) == Math.abs(i-at)) {<br>      val[k]++ ;<br>    }<br>  }<br>  //  System.out.println("Got a val of " + val[k]) ;<br>  if (mm == val[k]) {<br>    cnt++ ;<br>  } else if (mm &gt; val[k]) {<br>    mm = val[k] ;<br>    cnt = 1 ;<br>  }<br>      }<br>      int w = 1 ;<br>      //      System.out.println("Got a count of " + cnt) ;<br>      if (cnt &gt; 1) {<br>  w = nv(cnt) ;<br>      }<br>      for (i=0; i&lt;n; i++) {<br>  if (val[i] == mm) {<br>    w-- ;<br>    if (w == 0) {<br>      break ;<br>    }<br>  }<br>      }<br>      //      System.out.println("Move " + (at+1) + " to " + (i+1)) ;<br>      pos[at] = i ;<br>    }<br>  }<br> <br>  static void pp(Object o) { System.out.println(o) ; }<br>}<br></td>