<td class="problemText" colspan="8" valign="middle" align="left">
            /*/*///*/*/ Powered by radedit!            /*/*/*/*/*/ ;<br>/*/*//*/*/  import java . util .           /*/*/*/*/*/ ;<br>public class IPConverter {<br>   boolean ddd = false ;<br>  boolean okay(String s) {<br>    if (s.length() &gt; 3) {<br>      return false ;<br>    }<br>    if (s.length() &lt; 1) {<br>      return false ;<br>    }<br>    if (s.charAt(0) == '0' &amp;&amp; s.length() &gt; 1) {<br>      return false ;<br>    }<br>    int i = new Integer(s).intValue() ;<br>    if (i &gt; 255) {<br>      return false ;<br>    }<br>    return true ;<br>  }<br>  public String[] possibleAddresses(String ambiguousIP) {<br>    int i, j, k ;<br>    int n = ambiguousIP.length() ;<br>    List r = new ArrayList() ;<br>    String s = ambiguousIP ;<br>    for (i=1; i+1&lt;n; i++) if (okay(s.substring(0, i))) {<br>      for (j=i+1; j+1&lt;n; j++) if (okay(s.substring(i, j))) {<br>  for (k=j+1; k&lt;n; k++) if (okay(s.substring(j, k)) &amp;&amp; okay(s.substring(k))) {<br>    r.add(s.substring(0, i) + "." +<br>    s.substring(i, j) + "." +<br>    s.substring(j, k) + "." +<br>    s.substring(k)) ;<br>  }<br>      }<br>    }<br>    String[] rr = (String[])r.toArray(new String[0]) ;<br>    Arrays.sort(rr) ;<br>    return rr ;<br>  }<br> <br>  static void pp(Object o) { System.out.println(o) ; }<br>}<br></td>