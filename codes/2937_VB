<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System.Math<br>Imports System<br>Imports System.Collections<br>Imports System.Text<br> <br>Public Class IPConverter<br>    Public Function possibleAddresses(ByVal ambiguousIP As String) As String()<br>        Dim al As ArrayList = FillNext(ambiguousIP, 4)<br>        Dim s() As String = al.ToArray(GetType(String))<br>        Array.Sort(s)<br>        Return s<br>    End Function<br> <br>    Private Function FillNext(ByVal ip As String, ByVal len As Integer) As ArrayList<br>        Dim al As New ArrayList<br>        Dim mn As Integer = 1<br>        If len = 1 Then<br>            If IsValid(ip, ip.Length) Then<br>                al.Add(ip)<br>            End If<br>        Else<br>            Dim a As Integer<br>            For a = mn To ip.Length<br>                If IsValid(ip, a) Then<br>                    Dim tmp As ArrayList = FillNext(ip.Substring(a), len - 1)<br>                    Dim b As Integer<br>                    Dim s As String = ip.Substring(0, a) &amp; "."<br>                    For b = 0 To tmp.Count - 1<br>                        al.Add(s &amp; tmp(b))<br>                    Next<br>                End If<br>            Next<br>        End If<br>        Return al<br>    End Function<br> <br>    Private Function IsValid(ByVal ip As String, ByVal len As Integer) As Boolean<br>        Dim v As String = ip.Substring(0, len)<br>        If v.Length = 0 Then Return False<br>        If v.Length &gt; 1 AndAlso v.Chars(0) = "0"c Then Return False<br>        If v.Length &gt; 3 Then Return False<br>        Dim i As Integer = v<br>        Return i &gt;= 0 AndAlso i &lt;= 255<br>    End Function<br>End Class<br></td>