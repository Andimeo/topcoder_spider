<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class StarAdventure {<br>  public int mostStars(String[] level) {<br>    int n = level.length;<br>    int m = level[0].length();<br>    int[][][] v = new int[level.length][level.length][level.length];<br>    for(int i = 1; i&lt;=m+n-2; i++) {<br>      int[][][] x = new int[level.length][level.length][level.length];<br>      int min = Math.max(0, i-(m-1));<br>      int max = Math.min(n-1, i);<br>      for(int a = min; a&lt;=max; a++) {<br>        int sa = level[a].charAt(i-a)-'0';<br>        for(int b = min; b&lt;=max; b++) {<br>          int sb = sa;<br>          if(b!=a) {<br>            sb+=level[b].charAt(i-b)-'0';<br>          }<br>          for(int c = min; c&lt;=max; c++) {<br>            int sc = sb;<br>            if(c!=a &amp;&amp; c!=b) {<br>              sc+=level[c].charAt(i-c)-'0';<br>            }<br>            int best = -1; <br>            if(a&gt;0) {<br>              if(b&gt;0) {<br>                if(c&gt;0) {<br>                  if(v[a-1][b-1][c-1]&gt;best) {<br>                    best = v[a-1][b-1][c-1];<br>                  }<br>                }<br>                if(v[a-1][b-1][c]&gt;best) {<br>                  best = v[a-1][b-1][c];<br>                }<br>              }<br>              if(c&gt;0) {<br>                if(v[a-1][b][c-1]&gt;best) {<br>                  best = v[a-1][b][c-1];<br>                }<br>              }<br>              if(v[a-1][b][c]&gt;best) {<br>                best = v[a-1][b][c];<br>              }<br>            }<br>            if(b&gt;0) {<br>              if(c&gt;0) {<br>                if(v[a][b-1][c-1]&gt;best) {<br>                  best = v[a][b-1][c-1];<br>                }<br>              }<br>              if(v[a][b-1][c]&gt;best) {<br>                best = v[a][b-1][c];<br>              }<br>            }<br>            if(c&gt;0) {<br>              if(v[a][b][c-1]&gt;best) {<br>                best = v[a][b][c-1];<br>              }<br>            }<br>            if(v[a][b][c]&gt;best) {<br>              best = v[a][b][c];<br>            }<br>            x[a][b][c] = best+sc;<br>          }<br>        }<br>      }<br>      v = x;<br>    }<br>    return v[n-1][n-1][n-1];<br>  }<br> <br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>