<td class="problemText" colspan="8" valign="middle" align="left">
            /*   Liviu Ciortea, Bucuresti, Romania   */<br><br>#line 4 "NinePatch.cpp"<br><br>#include&lt;cstdio&gt;<br>#include&lt;iostream&gt;<br>#include&lt;vector&gt;<br>#include&lt;string&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;set&gt;<br>#include&lt;sstream&gt;<br>#include&lt;numeric&gt;<br>using namespace std;<br>#define fori(x,y) for ( i=x;i&lt;=y;i++ )<br>#define forj(x,y) for ( j=x;j&lt;=y;j++ )<br>#define fork(x,y) for ( k=x;k&lt;=y;k++ )<br>#define sz(a) a.size()<br>#define bg(a) a.begin()<br>#define end(a) a.end()<br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;double&gt; vd;<br>typedef vector&lt;string&gt; vs;<br>typedef set&lt;int&gt; si;<br>typedef set&lt;double&gt; sd;<br>typedef vector&lt;vector&lt;int&gt; &gt; vvi;<br>typedef unsigned long long ulint;<br>typedef long long lint;<br>typedef vi::iterator viIT;<br>typedef si::iterator siIT;<br>typedef vd::iterator vdIT;<br>typedef sd::iterator sdIT;<br>typedef vector&lt;set&lt;int&gt; &gt; vsi;<br>#define forsi(a) for ( siIT i=bg(a); i!=end(a);++i )<br>#define pb push_back<br><br>template &lt;class T&gt; T MIN(const T &amp;x, const T &amp;y) {return x&lt;y? x:y;}<br>template &lt;class T&gt; T MAX(const T &amp;x, const T &amp;y) {return x&gt;y? x:y;}<br>template &lt;class T&gt; T ABS(const T &amp;x) {return x&gt;0? x:-x;}<br>lint cmmdc(lint a, lint b) { return b ? cmmdc(b, a % b) : a; }<br>lint cmmmc(lint a, lint b) { return a / cmmdc(a, b) * b; }<br>lint combinari(int n, int k) { k = min(k, n-k); return k ? combinari(n-1, k-1)*n/k : 1; }<br>lint str2lint(string&amp; s) { lint t; sscanf(s.c_str(),"%lld",&amp;t); return t; }<br>int str2int(string&amp; s) { int t; sscanf(s.c_str(),"%ld",&amp;t); return t; }<br>double str2double(string&amp; s) { double t; sscanf(s.c_str(),"%lf",&amp;t); return t; }<br>template&lt;class T&gt; string num2str(T n) { ostringstream s; s&lt;&lt;n; return s.str(); }<br>vi RemoveDuplicates(vi a) {sort(bg(a),end(a)); a.erase(unique(bg(a),end(a)),end(a)); return a;}<br>vi RotateLeft(vi a, int x) { rotate(bg(a),bg(a)+x,end(a)); return a; }<br>int MaxFromHeap(vi a) { pop_heap(bg(a),end(a)); return *(end(a)-1); }<br>vi InsertInHeap(vi a, int el) { a.pb(el); push_heap(bg(a),end(a)); return a; }<br>template&lt;class T&gt; lint Sum(T&amp;a) { return accumulate(bg(a),end(a),0); }<br>vi DescendingSort (vi a) { sort(bg(a),end(a),greater&lt;int&gt;() ); return a; }<br>si Union(si a, si b) { si un; set_union(bg(a),end(a),bg(b),end(b),inserter(un,bg(un)));  return un; }<br>si Intersection(si a, si b) { si inter; set_intersection(bg(a),end(a),bg(b),end(b),inserter(inter,bg(inter))); return inter; }<br>si Difference(si a, si b) { si di; set_difference(bg(a),end(a),bg(b),end(b),inserter(di,bg(di))); return di; }<br><br>vs split( const string&amp; s, const string&amp; delim =" " ) {<br>    vs res; string t;<br>    for ( int i = 0 ; i != sz(s) ; i++ ) {<br>        if ( delim.find( s[i] ) != string::npos ) {<br>            if ( !t.empty() ) {<br>                res.pb( t ); t = ""; }<br>        } else {  t += s[i]; }<br>    }<br>    if ( !t.empty() ) {<br>        res.pb(t);<br>    }<br>    return res;<br>}<br><br>vi splitInt( const string&amp; s, const string&amp; delim =" " ) {<br>    vs tok = split( s, delim );<br>    vi res;<br>    for ( int i = 0 ; i != sz(tok); i++ )<br>        res.pb( atoi( tok[i].c_str() ) );<br>    return res;<br>}<br><br>    class NinePatch<br>        { <br>        public: <br>        int numBlocks(vi l, vi w) <br>            { <br>     int tot= 0;<br>    for ( int i=0; i&lt;sz(l); i++ )<br>      tot+= (l[i]/2) * (w[i]/2);<br> <br>    return tot/9; <br>            } <br><br> <br>        };<br></td>