<td class="problemText" colspan="8" valign="middle" align="left">
            using System; using System.Collections; using System.Text; using System.Text.RegularExpressions;<br>public class Unblur { public string[] original(string[] bl) {<br>int X = bl[0].Length, Y = bl.Length;<br>int[,] v = new int[X,Y];<br>for (int x=1; x&lt;X-1; x++) for (int y=1; y&lt;Y-1; y++)<br> {<br> int a = INT(bl[y-1][x-1]);<br> for (int p=Math.Max(0, x-2); p&lt;=x; p++)<br>  for (int q = Math.Max(0, y-2); q&lt;=y; q++)<br>   a -= v[p,q];<br> v[x,y] = a;<br> }<br> <br>String[] res = new String[Y];<br>for (int y=0; y&lt;Y; y++)<br> {<br> StringBuilder sb = new StringBuilder();<br> for (int x=0; x&lt;X; x++) sb.Append((v[x,y]==0) ? '.' : '#');<br> res[y] = sb.ToString();<br> WSL(res[y]);<br> }<br>return res;<br>}<br> <br> <br>bool Test(int x, int y) { return (x &amp; (1&lt;&lt;y)) != 0; }<br> <br>ArrayList AR { get { return new ArrayList(); }}<br>Hashtable MAP { get { return new Hashtable(); }}<br> <br>int[] IA(ArrayList ar) { return (int[]) ar.ToArray(typeof(int)); }<br>String[] SA(ArrayList ar) { return (String[]) ar.ToArray(typeof(string)); }<br> <br>int INT(Object o) { return Convert.ToInt32(o.ToString()); }<br>long LONG(Object o) { return Convert.ToInt64(o.ToString()); }<br>double DOUBLE(Object o) { return Convert.ToDouble(o.ToString()); }<br> <br>bool NextPerm(int[] a)<br>{<br>int N = a.Length;<br>for (int i=N-2; i&gt;=0; i--) if (a[i] &lt; a[i+1])<br> {<br> Array.Reverse(a, i+1, N-i-1);<br> for (int j=i+1; ; j++) if (a[i] &lt; a[j])<br>  { int t=a[i]; a[i] = a[j]; a[j] = t; return true; }<br> }<br>return false;<br>}<br> <br>void WL() { Console.WriteLine(""); }<br>void WS(params Object[] x) { foreach (Object o in x) Console.Write("{0} ", o); }<br>void WSL(params Object[] x) { WS(x); WL(); }<br>void WS(Array a, int X) { for (int i=0; i&lt;X; i++) WS(a.GetValue(i)); WL(); }<br>void WS(Array a, int X, int Y) { for (int y=0; y&lt;Y; y++) { for (int x=0; x&lt;X; x++) WS(a.GetValue(x,y)); WL(); }}<br>}<br></td>