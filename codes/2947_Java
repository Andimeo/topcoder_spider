<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.lang.*;<br>import java.awt.*;<br> <br>public class LoadBalancing<br>{<br>  private boolean isPrime(int number)<br>  {<br>    if (number &lt; 2) return false;<br>    if (number == 2) return true;<br>    if (number % 2 == 0) return false;<br>    for (int i = 3; i * i &lt;= number; i += 2)<br>      if (number % i == 0) return false;<br>    return true;<br>  }<br>  private int gcd(int a, int b)<br>  {<br>    if (b == 0)  return a;<br>    return gcd(b, a % b);<br>  }<br>  private void p(int a) { System.out.println(a); }<br>  private void p(char ch) { System.out.println(ch); }<br>  private void p(String str) { System.out.println(str); }<br>  private void p(int[] a)<br>  {<br>    String temp = new String("");<br>    for (int i = 0; i &lt; a.length; i++) temp += a[i] + " ";<br>    System.out.println(temp);<br>  }<br>  private void p(int[][] a) { for (int i = 0; i &lt; a[i].length; i++) p(a[i]); }<br>  public int minTime(int[] chunkSizes)<br>  {<br>    int arr[] = new int[210000];<br>    Arrays.fill(arr,0);<br>    arr[0] = 1;<br>    int max = 0;<br>    for (int i = 0; i &lt; chunkSizes.length; i++) chunkSizes[i] /= 1024;<br>    for (int i = 0; i &lt; chunkSizes.length; i++)<br>    {<br>      for (int j = max; j &gt;= 0; j--)<br>      {<br>        if (arr[j] == 1) arr[j + chunkSizes[i]] = 1;<br>        if (j + chunkSizes[i] &gt; max) max = j + chunkSizes[i];<br>      }<br>    }<br>    int i;<br>    for (i = (max + 1) / 2; arr[i]==0; i++);<br>    return (i * 1024);<br>  }<br> <br>  <br>}<br> <br>// Powered by PopsEdit<br>// Powered by CodeProcessor<br></td>