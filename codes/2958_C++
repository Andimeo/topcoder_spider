<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;cstdio&gt;<br>using namespace std;<br> <br>#define V(x) vector&lt;x &gt;<br>#define vs V(string)<br>#define vi V(int)<br>#define vd V(double)<br> <br>#define fr(x,y,z) for((x)=(y);(x)&lt;(z);(x)++)<br>#define fo(x,y) fr(x,0,y)<br>#define fir(n) fo(i,n)<br>#define fjr(n) fo(j,n)<br>#define fkr(n) fo(k,n)<br>#define fi fir(n)<br>#define fj fjr(n)<br> <br>#define pb push_back<br>#define sz size()<br>#define cs c_str()<br> <br>#define df double<br>#include &lt;cmath&gt;<br>#define eps 1e-10<br> <br>struct foo { df tim; int fast,slow; foo(df a, int i, int j) { tim=a,fast=i,slow=j; } };<br>vs nam;<br>bool cmp(foo x, foo y) { if(fabs(x.tim-y.tim)&gt;eps) return x.tim&lt;y.tim; return nam[x.slow]&lt;nam[y.slow]; }<br>class BikeRace { public: vs eliminated(int track, vs name, vi start, vi speed) {<br>nam=name;<br>int n=name.sz;<br>int i,j,k;<br>V(foo) f;<br>vd st,sp;<br>fi st.pb(df(start[i])),sp.pb(df(speed[i]));<br>fi fj { <br>if(st[i]&lt;st[j] &amp;&amp; st[i]+track/sp[i]&lt;=st[j]+eps) { f.pb(foo(st[i]+track/sp[i],i,j)); continue; }<br>if(st[j]&lt;st[i] &amp;&amp; st[j]+track/sp[j]&lt;=st[i]+eps) { f.pb(foo(st[j]+track/sp[j],j,i)); continue; }<br>if(sp[i]&gt;sp[j]) {<br>if(st[i]&gt;st[j]) {<br>//df t=(st[i]*sp[i]-st[j]*sp[j])/(sp[i]-sp[j]);<br>df t=(st[i]-st[j])*sp[j]/(sp[i]-sp[j])+st[i];<br>f.pb(foo(t,i,j));<br>} else {<br>df d=df(track)-(st[j]-st[i])*sp[i];<br>df t=d/(sp[i]-sp[j])+st[j];<br>f.pb(foo(t,i,j));<br>}<br>}<br>}<br> <br>sort(f.begin(),f.end(),cmp);<br> <br>fir(f.sz) { printf("%f %s %s\n",f[i].tim,name[f[i].fast].cs,name[f[i].slow].cs); }<br>vs ret;<br>vi ok(n,1);<br>fir(f.sz) if(ok[f[i].fast] &amp;&amp; ok[f[i].slow]) { ret.pb(name[f[i].slow]); ok[f[i].slow]=0; }<br> <br>return ret;<br>}};<br></td>