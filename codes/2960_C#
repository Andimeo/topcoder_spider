<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Text;<br> <br> <br>public class Diving {<br> <br>  public double DELTA = 0.000001;<br> <br>  public double calc (double[] scores, double difficulty) {<br>    double min = double.MaxValue;<br>    double max = double.MinValue;<br>    double sum = 0.0;<br>    for (int i=0; i&lt;scores.Length;i++) {<br>      if (scores[i] &lt; min)<br>        min = scores[i];<br>      if (scores[i] &gt; max)<br>        max = scores[i];<br>      sum += scores[i];<br>    }<br>    sum = sum - min - max;<br>    return sum * difficulty;<br> <br>  }<br> <br>  public string needed(string difficulty, string need, string ratings) {<br>    double dif_num = double.Parse(difficulty);<br>    double need_num = double.Parse(need);<br> <br>    string[] splits = ratings.Split(' ');<br> <br>    double[] scores = new double[4];<br>    int index=0;<br>    for (int j=0; j&lt;splits.Length; j++) {<br>      if (splits[j][0]=='?')<br>        continue;<br>      scores[index] = double.Parse(splits[j]);<br>      index++;<br>    }<br> <br>    int i;<br>    for (i=100;i&gt;=0;i-=5) {<br>      double[] fullscores = new double[5];<br>      for (int k=0;k&lt;4;k++)<br>        fullscores[k] = scores[k];<br>      fullscores[4] = ((double)i)/10.0;<br>      double score = calc(fullscores, dif_num);<br>      if (score &lt; need_num-DELTA)<br>        break;<br>    }<br>    if (i==100)<br>      return "-1.0";<br>    i+=5;<br>    int whole = i/10;<br>    int part = i % 10;<br>    return whole.ToString()+"."+part.ToString();<br>  }<br>}<br></td>