<td class="problemText" colspan="8" valign="middle" align="left">
            public class NumberChanger<br>  {<br>    int[] perm = new int[10];<br>    int[] cperm = new int[10];<br>    int minDist;<br>    string s1, s2;<br> <br>    int abs( char a, char b)<br>    {<br>      if (a&gt;b) return a-b;<br>      return b-a;<br>    }<br> <br>    void genPerm(int ll)<br>    {<br>      int i,j,k,l,s,ii;<br>      if (ll &gt;= s1.Length)<br>      {<br>        s = 0;<br>        for(i=0;i&lt;s1.Length;i++)<br>          s += abs(s1[perm[i]], s2[i]);<br> <br>        if (s &gt;= minDist) return;<br> <br>        for(ii=0;ii&lt;s1.Length;ii++)<br>          cperm[ii] = perm[ii];<br> <br>        for(ii=0;ii&lt;s1.Length;ii++)<br>          if (cperm[ii] != ii )<br>          {<br>            l = 0;<br>            j = ii;<br>            i = ii;<br>            while (cperm[i] != j)<br>            {<br>              k = cperm[i];<br>              cperm[i] = i;<br>              i = k;<br>              l++;<br> <br>            }<br>            cperm[i] = i;<br>            s += l;<br>            if (s&gt;= minDist) return;<br>          }<br>        if (s &lt; minDist) minDist = s;<br>        return;<br>      }<br> <br>      for(i=0;i&lt;s1.Length;i++)<br>      {<br>        for(j=0;j&lt;ll;j++)<br>          if (perm[j]==i) break;<br>        if (j &gt;= ll)<br>        {<br>          perm[ll] = i;<br>          genPerm(ll+1);<br>        }<br>      }<br>    }<br>    public int transform(string start, string finish)<br>    {<br>      minDist = 10 + 10*start.Length;<br>      s1 = start;<br>      s2 = finish;<br>      genPerm(0);<br>      return minDist;<br>    }<br>  }<br></td>