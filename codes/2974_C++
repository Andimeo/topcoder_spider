<td class="problemText" colspan="8" valign="middle" align="left">
            using namespace std;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;ctype.h&gt;<br> <br>const int MAXN = 50;<br> <br>int n;<br>int gene_prob_init[MAXN];<br>double gene_probs[MAXN];<br>vector&lt;int&gt; dep;<br>string p1a_, p1b_, p2a_, p2b_;<br> <br>int is_rec( string s, int i )<br>{<br>    return islower( s[i] ) ? 1 : 0;<br>}<br> <br>double compute_gene_prob( int i )<br>{<br>    if (gene_prob_init[i])<br>  return gene_probs[i];<br>    double neg_prob = ((is_rec( p1a_, i ) + is_rec( p1b_, i )) / 2.0) * ((is_rec( p2a_, i ) + is_rec( p2b_, i )) / 2.0);<br>    double result = 1 - neg_prob;<br>    if (dep[i] != -1)<br>  result *= compute_gene_prob( dep[i] );<br>    gene_prob_init[i] = 1;<br>    gene_probs[i] = result;<br>    return result;<br>}<br> <br>class GeneticCrossover {<br>public:<br>    double cross(string p1a, string p1b, string p2a, string p2b, vector &lt;int&gt; dom, vector &lt;int&gt; rec, vector &lt;int&gt; dependencies) {<br>  n = p1a.length();<br>  p1a_ = p1a;<br>  p1b_ = p1b;<br>  p2a_ = p2a;<br>  p2b_ = p2b;<br>  dep = dependencies;<br>  for (int i = 0; i &lt; n; i++)<br>      gene_prob_init[i] = 0;<br>  for (int i = 0; i &lt; n; i++)<br>      (void)compute_gene_prob( i );<br>  double result = 0;<br>  for (int i = 0; i &lt; n; i++)<br>      result += dom[i] * compute_gene_prob( i ) + rec[i] * (1 - compute_gene_prob( i ));<br>  return result;<br>    }<br>};<br> <br> <br>// Powered by FileEdit<br></td>