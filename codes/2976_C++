<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;stdlib.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;string&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;numeric&gt;<br>#include &lt;algorithm&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;typedef vector&lt;VI&gt; VVI;<br>typedef vector&lt;string&gt; VS;typedef vector&lt;VS&gt; VVS;<br>#define mp make_pair<br>#define ft first<br>#define sd second<br>#define pb push_back<br>#define zall(b) b.begin(),b.end()<br>#define forn(i,n) for(int i=0;i&lt;n;i++)<br>#define forv(i,v) forn(i,v.size())<br><br><br>int d[1&lt;&lt;20];<br>VI w[26];<br>int n;<br><br>int solve(int M){<br>  int &amp;r=d[M];<br>  if (r&gt;=0) return r;<br>  if ((M&amp;(M-1))==0) return r=0;<br><br>  r=999999;<br>  forn(i,26){<br>    int cur=0;<br>    forv(j,w[i]){<br>      int X=M&amp;w[i][j];<br>      if (X==M) cur=999999;<br>      else if (X) cur=max(cur,1+solve(X));<br>    }<br>    r=min(r,cur);<br>  }<br>  return r;<br>}<br><br>struct Answer {<br>  int chooseOne(vector &lt;string&gt; words) {<br>    n=words.size();<br>    forn(k,26){<br>      map&lt;string,int&gt; mm;<br>      forv(i,words){<br>        string s="";<br>        forv(j,words[i]) if (words[i][j]==char('A'+k)) s+=words[i][j];<br>        else s+="*";<br>        mm[s]+=1&lt;&lt;i;<br>      }<br><br>      w[k].clear();<br>      for(map&lt;string,int&gt;::iterator it=mm.begin();it!=mm.end();++it)<br>        w[k].pb(it-&gt;second);<br><br>    }<br><br>    memset(d,-1,sizeof(d));<br>    return solve((1&lt;&lt;n)-1);<br>  }<br><br><br><br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>