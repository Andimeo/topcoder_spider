<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import static java.lang.Math.*;<br>import static java.util.Arrays.*;<br>public class Answer {<br>  boolean[][][] dif;<br>  String[] ss;<br>  public int chooseOne(String[] words) {<br>    ss = words;<br>    dif = new boolean[26][words.length][words.length];<br>    for(int i = 0; i &lt; words.length; i++){<br>      for(int j = 0; j &lt; words.length; j++){<br>        for(int k = 'A'; k &lt;= 'Z'; k++){<br>          for(int n = 0; n &lt; words[i].length(); n++){<br>            if((words[i].charAt(n) == k) != (words[j].charAt(n) == k)) dif[k-'A'][i][j] = true;<br>          }<br>        }<br>      }<br>    }<br>    memo = new int[1&lt;&lt;words.length];<br>    return doit((1&lt;&lt;words.length)-1, 0);<br>  }<br>  int[] memo;<br>  int doit(int msk, int lets){<br>    if(Integer.bitCount(msk)==1) return 0;<br>    if(memo[msk] != 0) return memo[msk];<br>    int ret = Integer.MAX_VALUE/2;<br>    outer:<br>    for(int i = 0; i &lt; 26; i++){<br>      if(((1&lt;&lt;i)&amp;lets)!=0) continue;<br>      boolean[] done = new boolean[ss.length];<br>      int tmp = 0;<br>      for(int j = 0; j &lt; ss.length; j++){<br>        if(((1&lt;&lt;j)&amp;msk)==0) continue;<br>        if(done[j])continue;<br>        int cur = 1&lt;&lt;j;<br>        for(int k = j+1; k &lt; ss.length; k++){<br>          if(((1&lt;&lt;k)&amp;msk)==0)continue;<br>          if(done[k]) continue;<br>          if(dif[i][j][k])continue;<br>          cur |= 1&lt;&lt;k;<br>          done[k] = true;<br>        }<br>        if(cur == msk){<br>          lets |= 1&lt;&lt;i;<br>          continue outer;<br>        }<br>//        System.out.println(Integer.toString(cur, 2));<br>        tmp = max(tmp, 1+doit(cur, lets|(1&lt;&lt;i)));<br>      }<br>      ret = min(ret, tmp);<br>    }<br>    memo[msk] = ret;<br>    return ret;<br>  }<br> <br>}<br> <br>// Powered by PopsEdit<br>// Powered by CodeProcessor<br></td>