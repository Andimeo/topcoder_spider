<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Collections;<br><br>public class ResultsTable {<br><br>  static ArrayList names;<br><br>  int name(string s)<br>  {<br>    if (!names.Contains(s))<br>      names.Add(s);<br><br>    return (names.IndexOf(s));<br>  }<br><br><br><br>  static public string order;<br>  static public int[] tsort;<br>  static int n,m;<br><br><br>  static public int [,] tcnt, tscore;<br><br>  public class comp : IComparer<br>  {<br>    public int Compare(object aa, object bb)<br>    {<br>      int a = (int)aa;<br>      int b = (int)bb;<br>    <br>      for(int i = 0; i&lt;tsort.Length; i++)<br>      {<br>        int index = Math.Abs(tsort[i])-1;<br>        int dir;<br>        if (tsort[i]&lt;0)<br>          dir = -1;<br>        else <br>          dir =1;<br><br>        if (index &gt; 0)<br>        {<br>          if (order[index-1] == 'H')<br>            dir = dir * -1;<br>        }<br><br>        int comp;<br><br>        if (index == 0)<br>          comp = dir * string.CompareOrdinal((string)names[a], (string)names[b]);<br>        else <br>        {<br>          index--;<br>          if (tcnt[a, index] == 0 &amp;&amp; tcnt[b, index] == 0)<br>            comp = 0; <br>          else if (tcnt[a, index] == 0)<br>            comp = tsort[i]&lt;0? -1:1; else<br>            if (tcnt[b, index] == 0)<br>            comp = tsort[i]&lt;0? 1:-1; else<br>            comp = dir * tscore[a, index].CompareTo(tscore[b,index]);<br>        }<br><br>        if (comp != 0) return comp;<br>      }<br><br>      return 0;<br>      <br>    }<br>  }<br><br>  public string[] generateTable(string[] results, int[] sort, string ord) {<br><br>    names = new ArrayList();<br>    order = ord;<br>    n = order.Length;<br>    tsort = sort;<br><br>    foreach(string s in results)<br>    {<br>      string[] x = s.Split(' ');<br>      name(x[0]);<br>    }<br>    m = names.Count;<br><br>    tcnt = new int[m, n];<br>    tscore = new int[m, n];<br><br>    foreach(string s in results)<br>    {<br>      string[] x = s.Split(' ');<br>      int i = name(x[0]);<br>      int metric = int.Parse(x[1])-1;<br>      int cnt = int.Parse(x[2]);<br>      int score = int.Parse(x[3]);<br><br>      if (cnt &gt;= tcnt[i,metric])<br>      {<br>        tscore[i,metric] = score;<br>        tcnt[i,metric] = cnt+1;<br>      }<br>    }<br><br>    int [] v = new int[m];<br><br>    for(int i = 0; i&lt;m; i++)<br>      v[i] = i;<br><br>    Array.Sort(v, new comp());<br><br>    string[] res =new string[m];<br><br>    for(int k =0; k&lt;m; k++)<br>    {<br>      int i = v[k];<br>      string s = (string)names[i];<br><br>      for(int j = 0; j&lt;n; j++)<br>      {<br>        if (tcnt[i,j]==0)<br>          s+= " -";<br>        else s += string.Format(" {0}", tscore[i,j]); <br>      }<br><br>      res[k] = s;<br><br>    }<br>    return res;<br>  }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester for c# [12-oct-2003]<br>// Powered by CodeProcessor<br></td>