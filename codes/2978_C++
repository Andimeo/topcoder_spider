<td class="problemText" colspan="8" valign="middle" align="left">
            /*<br> * Hey, stop reading this code right this instant!<br> * You don't know what it could do to your fragile mind!<br> */<br> <br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;climits&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;ctime&gt;<br>#include &lt;functional&gt;<br>#include &lt;regex.h&gt;<br>#include &lt;queue&gt;<br>//#include &lt;brains&gt;  /* commented out to avoid compile error -- brains not found */<br> <br>using namespace std;<br> <br>#define debug(x) cout &lt;&lt; #x &lt;&lt; " = " &lt;&lt; x &lt;&lt; endl<br>#define si size()<br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;string&gt; vs;<br>typedef vector&lt;bool&gt; vb;<br>typedef vector&lt;vi&gt; vvi;<br>typedef vector&lt;vb&gt; vvb;<br>typedef vector&lt;char&gt; vc;<br>typedef long long ii;<br>#define b2e(A) (A).begin(), (A).end()<br>#define rev(A) std::reverse(b2e(A))<br>#define s(A) std::sort(b2e(A))<br>#define ss(A) std::stable_sort(b2e(A))<br>#define un(A) std::unique(b2e(A))<br>#define pb(x) push_back((x));<br> <br>string itos (int i) {stringstream s; s &lt;&lt; i; return s.str();}<br>string lltos (long long i) {stringstream s; s &lt;&lt; i; return s.str();}<br>int ipow(int a, int b) {return (int) (std::pow((double) (a), (double) (b)));}<br>template &lt;class T&gt;<br>ostream&amp; operator &lt;&lt; (ostream&amp; os, vector&lt;T&gt; temp) {<br>  os &lt;&lt; "{"; for (int i = 0; i &lt; temp.si; i++) os &lt;&lt; (i?", ":"") &lt;&lt; temp[i]; os &lt;&lt; "}";<br>  return os;<br>}<br>template&lt;class S,class T&gt;<br>ostream&amp; operator &lt;&lt; (ostream &amp;os ,const pair&lt;S,T&gt; &amp;a) {<br>  os &lt;&lt; "(" &lt;&lt; a.first &lt;&lt; ", " &lt;&lt; a.second &lt;&lt; ")";<br>  return os;<br>}<br>ii gcd(ii a, ii b) {if (a&lt;0&amp;&amp;b&lt;0) return gcd(-a,-b); if (a==0) return b; if (b==0) return a; if (a &gt; b) return gcd(b, a); if (!(b % a)) return a; return gcd(a, b % a);}<br>//int dx[] = {1,0,-1,0}, dy[] = {0,1,0,-1};<br>//int dx[] = {1,1,1,0,0,-1,-1,-1}, dy[] = {1,0,-1,1,-1,1,0,-1};<br> <br>/*<br>public class antimatter extends Idiot {<br>  String[] codeSolution(String[] problemStatement) {<br>    //re-code this method!<br>    //it always returns quickly, but is often incorrect (about 33% of the time)<br>    return null;<br>  }<br>}<br>*/<br> <br> //----------------------------<br> int N;<br> string desired;<br>struct comp<br>{<br>  string name;<br>  vi scores;<br>  vi counts;<br>};<br>vi sort_by;<br> <br>  bool operator &lt; (const comp &amp;a, const comp &amp;b) {<br>    for (int i = 0; i &lt; sort_by.size(); i++) {<br>      if (sort_by[i] == -1) {<br>        if (a.name != b.name) return a.name &gt; b.name;<br>      } else if (sort_by[i] == 1) {<br>        if (a.name != b.name) return a.name &lt; b.name;        <br>      } else if (sort_by[i] &lt; 0) {<br>        //worst to best<br>        int X = abs(sort_by[i]);<br>        if (a.scores[X-2] != b.scores[X-2]) {<br>          if (desired[X-2] == 'H') return a.scores[X-2] &lt; b.scores[X-2];<br>          else return a.scores[X-2] &gt; b.scores[X-2];<br>        }<br>      } else {<br>        int X = abs(sort_by[i]);<br>        if (a.scores[X-2] != b.scores[X-2]) {<br>          if (desired[X-2] == 'H') return a.scores[X-2] &gt; b.scores[X-2];<br>          else return a.scores[X-2] &lt; b.scores[X-2];<br>        }<br>      }<br>    }<br>    return 0;<br>  }<br>class ResultsTable {<br>  public:<br>  vector &lt;string&gt; generateTable(vector &lt;string&gt; results, vector &lt;int&gt; sort, string order) {<br>    N = sort.si - 1;<br>    sort_by = sort; desired = order;<br>    map&lt;string, comp&gt; X;<br>    for (int i = 0; i &lt; results.si; i++) {<br>      stringstream S(results[i]);<br>      string name; int metric, count, score;<br>      S &gt;&gt; name &gt;&gt; metric &gt;&gt; count &gt;&gt; score;<br>      metric--;<br>      if (X[name].name != name) {<br>        X[name].name = name;<br>        X[name].counts = vi(N,0);<br>        X[name].scores = vi(N,0);<br>        X[name].counts[metric] = count;<br>        X[name].scores[metric] = score;<br>      } else {<br>        if (X[name].counts[metric] &lt; count) {<br>          X[name].counts[metric] = count;<br>          X[name].scores[metric] = score;<br>        }<br>      }<br>    }<br>    vector&lt;comp&gt; CC;<br>    for (map&lt;string,comp&gt;::iterator i = X.begin(); i != X.end(); ++i) CC.push_back(i-&gt;second);<br>    for (int i = 0; i &lt; CC.si; i++) {<br>      for (int j = 0; j &lt; N; j++) {<br>        if (CC[i].counts[j] == 0) {<br>          if (desired[j] == 'H') {<br>            CC[i].scores[j] = -1000000000;<br>          } else {<br>            CC[i].scores[j] = 1000000000;            <br>          }<br>        }<br>      }<br>    }<br>    s(CC);<br>    vs ret;<br>    for (int i = 0; i &lt; CC.size(); i++) {<br>      stringstream SS;<br>      SS &lt;&lt; CC[i].name;<br>      for (int j = 0; j &lt; N; j++) {<br>        if (abs(CC[i].scores[j]) &lt;= 1000000)<br>        SS &lt;&lt; " " &lt;&lt; CC[i].scores[j];<br>        else SS &lt;&lt; " -";<br>      }<br>      ret.push_back(SS.str());<br>    }<br>    return ret;<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>