<td class="problemText" colspan="8" valign="middle" align="left">
            #line 86 "FuelConsumption.cpp"<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include&lt;iostream&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;climits&gt;<br>#include&lt;cmath&gt;<br>#include&lt;sstream&gt;<br>#include&lt;queue&gt;<br>#include&lt;stack&gt;<br>#include&lt;set&gt;<br>#include&lt;map&gt;<br>using namespace std;<br>#define ffor(i,n1,n2) for(int i = (n1);i &lt;= (n2);i++)<br>#define ull unsigned long long<br>#define ll long long<br>#define vs vector&lt;string&gt;<br>#define vi vector&lt;int&gt;<br>#define vd vector&lt;double&gt;<br>#define vll vector&lt;ll&gt;<br>#define vull vector&lt;ull&gt;<br> <br>#define fi1(a,b) for(int i1 = (a);i1 &lt;= (b);i1++)<br>#define fi2(a,b) for(int i2 = (a);i2 &lt;= (b);i2++)<br>#define fi3(a,b) for(int i3 = (a);i3 &lt;= (b);i3++)<br>#define fi4(a,b) for(int i4 = (a);i4 &lt;= (b);i4++)<br>#define fi5(a,b) for(int i5 = (a);i5 &lt;= (b);i5++)<br>#define fi6(a,b) for(int i6 = (a);i6 &lt;= (b);i6++)<br>#define fi7(a,b) for(int i7 = (a);i7 &lt;= (b);i7++)<br> <br>#define debug(x) cout &lt;&lt; #x &lt;&lt; ":" &lt;&lt; x &lt;&lt; endl;<br> <br>struct comp<br>{<br>   bool operator()(int a,int b)<br>   {<br>      return a &gt; b;<br>   }<br>} ;<br>comp cmp;<br> <br>template&lt;class t&gt; void vprint(vector&lt;t&gt; v)<br>{<br>   ffor(i1,0,v.size() - 1)<br>      cout &lt;&lt; v[i1] &lt;&lt; " ";<br>  cout &lt;&lt; "\n";<br>}<br> <br>template&lt;class T&gt; void aprint(T A,int n,int m)<br>{<br>   ffor(i1,0,n-1)<br>   {<br>      ffor(i2,0,m - 1)<br>         cout &lt;&lt; A[i1][i2] &lt;&lt; " ";<br>      cout &lt;&lt; "\n";<br>   }<br>}<br> <br>int dx[4] = {0,1,0,-1};<br>int dy[4] = {1,0,-1,0};<br>typedef pair&lt;int,int&gt; pii;<br>#define pb push_back<br>class FuelConsumption <br>{<br>public:<br>  double maximalDistance(vector &lt;int&gt; velocities, vector &lt;int&gt; consumptions, int fuel)<br>  {<br>    double max = 0.0;<br>    int n = velocities.size();<br>    fi1(0,n - 1)<br>        max &gt;?= (double)(fuel)/consumptions[i1] * velocities[i1];    <br>    return max;<br>  }<br> <br> <br> <br> <br> <br>   <br> <br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>