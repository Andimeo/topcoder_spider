<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br> <br> <br>public class grafixGlobs<br>{<br>  [STAThread]<br>  static void Main(string[] args)<br>  {<br>    grafixGlobs ggTest = new grafixGlobs();<br> <br>  {<br>    Console.Write("Answer:");<br>    string[] commands = {"make polygon", "make circle", "make polygon", "merge 0 1", "merge 2 0", "split 2"};<br>    int[] result = ggTest.execute(commands, 0);;<br>    foreach(int i in result)<br>    {<br>      Console.Write(i.ToString());<br>    }<br>    Console.WriteLine();<br>  }<br> <br>  {<br>    Console.Write("Answer:");<br>    string[] commands = {"make circle", "make circle", "make arc", "merge 2 1", "delete 0",<br>                "split 2", "delete 0", "make polygon"};<br>    int[] result = ggTest.execute(commands, 0);;<br>    foreach(int i in result)<br>    {<br>      Console.Write(i.ToString());<br>    }<br>    Console.WriteLine();<br>  }<br> <br>  {<br>    Console.Write("Answer:");<br>    string[] commands = {"make circle", "make circle", "make arc", "merge 2 1", "delete 0",<br>                "split 2", "delete 0", "make polygon"};<br>    int[] result = ggTest.execute(commands, 2);;<br>    foreach(int i in result)<br>    {<br>      Console.Write(i.ToString());<br>    }<br>    Console.WriteLine();<br>  }<br> <br>  {<br>    Console.Write("Answer:");<br>    string[] commands = {"make arc"};<br>    int[] result = ggTest.execute(commands, 999);;<br>    foreach(int i in result)<br>    {<br>      Console.Write(i.ToString());<br>    }<br>    Console.WriteLine();<br>  }<br> <br>  {<br>    Console.Write("Answer:");<br>    string[] commands = {"make polygon", "make polygon", "make arc", "make circle",<br>                "make circle", "delete 3", "make polygon", "make arc",<br>                "make arc", "merge 1 3", "merge 1 4", "merge 2 1", "make arc",<br>                "make arc", "make circle", "make circle", "merge 6 5",<br>                "split 6", "merge 2 1"};<br>    int[] result = ggTest.execute(commands, 2);;<br>    foreach(int i in result)<br>    {<br>      Console.Write(i.ToString());<br>    }<br>    Console.WriteLine();<br>  }<br> <br>  }<br> <br>  private class Glob<br>  {<br>    public int arcs;<br>    public int circles;<br>    public int polygons;<br>  }<br> <br>  public int[] execute(string[] commands, int sel)<br>  {<br>    Glob[] drawing = new Glob[1000];<br> <br>    //Generate drawing<br>    foreach(string command in commands)<br>    {<br>      string[] tokens = command.Split(' ');<br> <br>      switch(tokens[0])<br>      {<br>        case "make":<br>          Glob g = new Glob();<br>          switch(tokens[1])<br>          {<br>            case "arc":<br>              g.arcs = 1;<br>              break;<br>            case "circle":<br>              g.circles = 1;<br>              break;<br>            case "polygon":<br>              g.polygons = 1;<br>              break;<br>          }<br>          drawing[GetFirstAvailableSlot(drawing)] = g;<br>          break;<br> <br>        case "delete":<br>          drawing[int.Parse(tokens[1])] = null;<br>          break;<br> <br>        case "merge":<br>          Glob g1 = drawing[int.Parse(tokens[1])];<br>          Glob g2 = drawing[int.Parse(tokens[2])];<br>          g1.arcs += g2.arcs;<br>          g1.circles += g2.circles;<br>          g1.polygons += g2.polygons;<br>          drawing[int.Parse(tokens[2])] = null;<br>          break;<br> <br>        case "split":<br>          Glob gSplit = drawing[int.Parse(tokens[1])];<br>          drawing[int.Parse(tokens[1])] = null;<br> <br>          for(int i = 0; i &lt; gSplit.arcs; i++)<br>          {<br>            Glob gNew = new Glob();<br>            gNew.arcs = 1;<br>            drawing[GetFirstAvailableSlot(drawing)] = gNew;<br>          }<br>          for(int i = 0; i &lt; gSplit.circles; i++)<br>          {<br>            Glob gNew = new Glob();<br>            gNew.circles = 1;<br>            drawing[GetFirstAvailableSlot(drawing)] = gNew;<br>          }<br>          for(int i = 0; i &lt; gSplit.polygons; i++)<br>          {<br>            Glob gNew = new Glob();<br>            gNew.polygons = 1;<br>            drawing[GetFirstAvailableSlot(drawing)] = gNew;<br>          }<br>          break;<br>      }<br>    }<br> <br>    //Get result<br>    if(drawing[sel] == null)<br>    {<br>      return new int[0];<br>    }<br>    else<br>    {<br>      int[] results = new int[3];<br>      results[0] = drawing[sel].arcs;<br>      results[1] = drawing[sel].circles;<br>      results[2] = drawing[sel].polygons;<br> <br>      return results;<br>    }<br>  }<br> <br>  private int GetFirstAvailableSlot(Glob[] drawing)<br>  {<br>    for(int i = 0; i &lt; drawing.Length; i++)<br>    {<br>      if(drawing[i] == null)<br>      {<br>        return i;<br>      }<br>    }<br> <br>    return -1;//AAAAARRRRRGGGGHHH!!!<br>  }<br>}<br></td>