<td class="problemText" colspan="8" valign="middle" align="left">
            Imports System.Collections<br> <br>Public Class grafixGlobs<br>    Dim ret() As ArrayList<br>    Dim MAXLEN As Integer<br>    Public Function execute(ByVal commands As String(), ByVal sel As Integer) As Integer()<br>        Dim i, j, k As Integer<br>        MAXLEN = 3 * (commands.Length - 1)<br>        ReDim ret(MAXLEN)<br> <br>        Dim cmds() As String<br>        Dim t1, t2, t3, t4 As Integer<br>        Dim tarr As ArrayList<br>        Dim ta2, ta3, ta4 As ArrayList<br>        Dim tType As String<br>        For i = 0 To commands.Length - 1<br>            cmds = commands(i).Split<br>            Select Case cmds(0).ToUpper<br>                Case "MAKE"<br>                    t1 = getlowest()<br>                    tarr = New ArrayList<br>                    tarr.Add(cmds(1))<br>                    ret(t1) = tarr<br>                Case "DELETE"<br>                    ret(cmds(1)) = Nothing<br>                Case "MERGE"<br>                    t2 = CInt(cmds(1))<br>                    t3 = CInt(cmds(2))<br>                    If ret(t2) Is Nothing Then<br>                        ret(t2) = New ArrayList<br>                    End If<br>                    If Not ret(t3) Is Nothing Then<br>                        For j = 0 To ret(t3).Count - 1<br>                            ret(t2).Add(CStr(ret(t3).Item(j)))<br>                        Next<br>                    End If<br>                    ret(t3) = Nothing<br>                Case "SPLIT"<br>                    t1 = cmds(1)<br>                    tarr = ret(t1)<br>                    ret(t1) = Nothing<br> <br>                    For j = 0 To tarr.Count - 1<br>                        tType = CStr(tarr.Item(j))<br>                        If tType.ToUpper = "ARC" Then<br>                            t2 = getlowest()<br>                            ret(t2) = New ArrayList<br>                            ret(t2).Add("ARC")<br>                        End If<br>                    Next<br>                    For j = 0 To tarr.Count - 1<br>                        tType = CStr(tarr.Item(j))<br>                        If tType.ToUpper = "CIRCLE" Then<br>                            t2 = getlowest()<br>                            ret(t2) = New ArrayList<br>                            ret(t2).Add("CIRCLE")<br>                        End If<br>                    Next<br>                    For j = 0 To tarr.Count - 1<br>                        tType = CStr(tarr.Item(j))<br>                        If tType.ToUpper = "POLYGON" Then<br>                            t2 = getlowest()<br>                            ret(t2) = New ArrayList<br>                            ret(t2).Add("POLYGON")<br>                        End If<br>                    Next<br>            End Select<br>        Next<br> <br> <br>        Dim re As New ArrayList<br>        If sel &gt; MAXLEN Then<br>            Return CType(re.ToArray(GetType(System.Int32)), Integer())<br>        End If<br> <br>        If ret(sel) Is Nothing Then<br>            Return CType(re.ToArray(GetType(System.Int32)), Integer())<br>        End If<br> <br> <br> <br> <br>        tarr = ret(sel)<br>        Dim rrr(2) As Integer<br> <br>        For i = 0 To tarr.Count - 1<br>            tType = CStr(tarr.Item(i))<br>            Select Case tType.ToUpper<br>                Case "ARC"<br>                    rrr(0) += 1<br>                Case "CIRCLE"<br>                    rrr(1) += 1<br>                Case "POLYGON"<br>                    rrr(2) += 1<br>            End Select<br>        Next<br>        Return rrr<br> <br>    End Function<br> <br>    Function getlowest() As Integer<br>        Dim i As Integer<br>        For i = 0 To MAXLEN<br>            If ret(i) Is Nothing Then<br>                Return i<br>            End If<br>        Next<br>        Return i<br>    End Function<br> <br>End Class<br></td>