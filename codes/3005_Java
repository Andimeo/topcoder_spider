<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class LargestCircle<br>{<br> <br>  <br>  private boolean doesNotIntersectAny(char[][] grid, int cr, int cc, int radius, int nr, int nc)<br>  {<br>    int[] inout = {0, 0, 0, 0};<br>    int radiusSq = radius*radius;<br>    int cornerR, cornerC;<br>    <br>    for (int i = 0; i &lt; nr; i++)<br>    {<br>      for (int j = 0; j &lt; nc; j++)<br>      {<br>        if (grid[i][j] == '.') continue;<br>        cornerR = i; cornerC = j;<br>        inout[0] = radiusSq - ((cornerR-cr)*(cornerR-cr)+(cornerC-cc)*(cornerC-cc));      <br>        cornerR = i; cornerC = j+1;<br>        inout[1] = radiusSq - ((cornerR-cr)*(cornerR-cr)+(cornerC-cc)*(cornerC-cc));  <br>        cornerR = i+1; cornerC = j+1;<br>        inout[2] = radiusSq - ((cornerR-cr)*(cornerR-cr)+(cornerC-cc)*(cornerC-cc));  <br>        cornerR = i+1; cornerC = j;<br>        inout[3] = radiusSq - ((cornerR-cr)*(cornerR-cr)+(cornerC-cc)*(cornerC-cc));<br>        if (!((inout[0] &lt;= 0 &amp;&amp; inout[1] &lt;= 0 &amp;&amp; inout[2] &lt;= 0 &amp;&amp; inout[3] &lt;= 0) ||<br>              (inout[0] &gt;= 0 &amp;&amp; inout[1] &gt;= 0 &amp;&amp; inout[2] &gt;= 0 &amp;&amp; inout[3] &gt;= 0)))<br>          return false;<br>      }<br>    }<br>    return true;<br>  }<br>  public int radius(String[] gridStr)<br>  {<br>    int nr = gridStr.length;<br>    int nc = gridStr[0].length();<br>    char[][] grid = new char[nr][nc];<br>    for (int i = 0; i &lt; nr; i++)<br>    {<br>      gridStr[i].getChars(0, nc, grid[i], 0);<br>    }<br>    int maxr = 0;<br>    for (int i = 0; i &lt;= nr; i++)<br>    {<br>      for (int j = 0; j &lt;= nc; j++)<br>      {<br>        int radius = maxr+1;<br>        while (i&gt;=radius &amp;&amp; (nr-i)&gt;=radius &amp;&amp; j&gt;=radius &amp;&amp; (nc-j)&gt;=radius)<br>        {<br>          if (doesNotIntersectAny(grid, i, j, radius, nr, nc))<br>          {<br>            maxr = radius;<br>            //System.out.println(""+i+" "+j+" "+radius+" "+nr+" "+nc);<br>          }<br>          radius++;<br>        }        <br>      }<br>    }<br>    return maxr;<br>  }<br>  <br>  public static void main(String[] args)<br>  {<br>    long time;<br>    int answer;<br>    boolean errors = false;<br>    int desiredAnswer;<br>    <br>    time = System.currentTimeMillis();<br>    answer = new LargestCircle().radius(new String[]{ "####",  "#..#",  "#..#",  "####" });<br>    System.out.println("Time: " + (System.currentTimeMillis()-time)/1000.0 + " seconds");<br>    desiredAnswer = 1;<br>    System.out.println("Your answer:");<br>    System.out.println("\t" + answer);<br>    System.out.println("Desired answer:");<br>    System.out.println("\t" + desiredAnswer);<br>    if (answer != desiredAnswer)<br>    {<br>      errors = true;<br>      System.out.println("DOESN'T MATCH!!!!");<br>    }<br>    else<br>      System.out.println("Match :-)");<br>    System.out.println();<br>    time = System.currentTimeMillis();<br>    answer = new LargestCircle().radius(new String[]{ "############",  "###......###",  "##.######.##",  "#.########.#",  "#.##..####.#",  "#.##..####.#",  "#.########.#",  "#.########.#",  "#.########.#",  "##.######.##",  "###......###",  "############" });<br>    System.out.println("Time: " + (System.currentTimeMillis()-time)/1000.0 + " seconds");<br>    desiredAnswer = 5;<br>    System.out.println("Your answer:");<br>    System.out.println("\t" + answer);<br>    System.out.println("Desired answer:");<br>    System.out.println("\t" + desiredAnswer);<br>    if (answer != desiredAnswer)<br>    {<br>      errors = true;<br>      System.out.println("DOESN'T MATCH!!!!");<br>    }<br>    else<br>      System.out.println("Match :-)");<br>    System.out.println();<br>    time = System.currentTimeMillis();<br>    answer = new LargestCircle().radius(new String[]{ ".........." });<br>    System.out.println("Time: " + (System.currentTimeMillis()-time)/1000.0 + " seconds");<br>    desiredAnswer = 0;<br>    System.out.println("Your answer:");<br>    System.out.println("\t" + answer);<br>    System.out.println("Desired answer:");<br>    System.out.println("\t" + desiredAnswer);<br>    if (answer != desiredAnswer)<br>    {<br>      errors = true;<br>      System.out.println("DOESN'T MATCH!!!!");<br>    }<br>    else<br>      System.out.println("Match :-)");<br>    System.out.println();<br>    time = System.currentTimeMillis();<br>    answer = new LargestCircle().radius(new String[]{ "#######",  "#######",  "#######",  "#######",  "#######" });<br>    System.out.println("Time: " + (System.currentTimeMillis()-time)/1000.0 + " seconds");<br>    desiredAnswer = 0;<br>    System.out.println("Your answer:");<br>    System.out.println("\t" + answer);<br>    System.out.println("Desired answer:");<br>    System.out.println("\t" + desiredAnswer);<br>    if (answer != desiredAnswer)<br>    {<br>      errors = true;<br>      System.out.println("DOESN'T MATCH!!!!");<br>    }<br>    else<br>      System.out.println("Match :-)");<br>    System.out.println();<br>    time = System.currentTimeMillis();<br>    answer = new LargestCircle().radius(new String[]{ "#####.......",  "#####.......",  "#####.......",  "............",  "............",  "............",  "............",  "............",  "............",  "............" });<br>    System.out.println("Time: " + (System.currentTimeMillis()-time)/1000.0 + " seconds");<br>    desiredAnswer = 4;<br>    System.out.println("Your answer:");<br>    System.out.println("\t" + answer);<br>    System.out.println("Desired answer:");<br>    System.out.println("\t" + desiredAnswer);<br>    if (answer != desiredAnswer)<br>    {<br>      errors = true;<br>      System.out.println("DOESN'T MATCH!!!!");<br>    }<br>    else<br>      System.out.println("Match :-)");<br>    System.out.println();<br>    time = System.currentTimeMillis();<br>    answer = new LargestCircle().radius(new String[]{ "#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.",  "...#...#...#...#...#...#...#...#...#...#...#...#..",  "#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.",  ".#...#...#...#...#...#...#...#...#...#...#...#...#",  "#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.",  "...#...#...#...#...#...#...#...#...#...#...#...#..",  "#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.",  ".#...#...#...#...#...#...#...#...#...#...#...#...#",  "#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.",  "...#...#...#...#...#...#...#...#...#...#...#...#.#",  "#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#." });<br>    System.out.println("Time: " + (System.currentTimeMillis()-time)/1000.0 + " seconds");<br>    desiredAnswer = 0;<br>    System.out.println("Your answer:");<br>    System.out.println("\t" + answer);<br>    System.out.println("Desired answer:");<br>    System.out.println("\t" + desiredAnswer);<br>    if (answer != desiredAnswer)<br>    {<br>      errors = true;<br>      System.out.println("DOESN'T MATCH!!!!");<br>    }<br>    else<br>      System.out.println("Match :-)");<br>    System.out.println();<br>    time = System.currentTimeMillis();<br>    answer = new LargestCircle().radius(new String[]{ ".........................#........................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  "..................................................",  ".................................................." });<br>    System.out.println("Time: " + (System.currentTimeMillis()-time)/1000.0 + " seconds");<br>    desiredAnswer = 24;<br>    System.out.println("Your answer:");<br>    System.out.println("\t" + answer);<br>    System.out.println("Desired answer:");<br>    System.out.println("\t" + desiredAnswer);<br>    if (answer != desiredAnswer)<br>    {<br>      errors = true;<br>      System.out.println("DOESN'T MATCH!!!!");<br>    }<br>    else<br>      System.out.println("Match :-)");<br>    System.out.println();<br>    <br>    if (errors)<br>      System.out.println("Some of the test cases had errors :-(");<br>    else<br>      System.out.println("You're a stud (at least on the test data)! :-D ");<br>  }<br>}<br> <br>//Powered by [KawigiEdit]<br></td>