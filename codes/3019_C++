<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;  typedef vector&lt;vector&lt;int&gt; &gt; VVI;<br>typedef vector&lt;string&gt; VS;  typedef vector&lt;vector&lt;string&gt; &gt; VVS;<br>typedef signed long long i64;  typedef unsigned long long u64;<br><br>vector&lt;string&gt; tokenize(string s, string ch) {<br>  vector&lt;string&gt; ret;<br>  for( int p = 0, p2; p &lt; s.size(); p = p2+1 ) {<br>    p2 = s.find_first_of(ch, p);<br>    if( p2 == -1 ) p2 = s.size();<br>    if( p2-p &gt; 0 ) ret.push_back( s.substr(p, p2-p) );<br>  }<br>  return ret;<br>}<br><br>class bloggoHyphenate {<br>public:<br>vector &lt;string&gt; correct(vector &lt;string&gt; a, vector &lt;string&gt; b) {<br>  int i, j, k, x, y, z, n;<br>  vector &lt;string&gt; ret;<br><br>  VS v(a.size());<br>  for( i = 0; i &lt; a.size(); i++ ) {<br>    for( j = 0; j &lt; a[i].size(); j++ ) if( a[i][j] != ' ' )<br>      v[i] += a[i][j];<br>  }<br>  for( i = 0; i &lt; b.size(); i++ ) {<br>    string s;<br>    for( j = 0; j &lt; b[i].size(); j++ ) if( b[i][j] != '-' )<br>      s += b[i][j];<br>    j = find(v.begin(), v.end(), s) - v.begin();<br>    VS t = tokenize(a[j], " ");<br>    if( t.size() == 1 ) {ret.push_back(v[j]); continue;}<br>    y = b[i].find('-');<br>    x = 0;<br>    z = 1000;<br>    for( k = 0; k &lt; t.size()-1; k++ ) {<br>      x += t[k].size();<br>      if( abs(x-y) &lt; abs(z-y) ) z = x;<br>    }<br>    if( z == y ) {ret.push_back("correct"); continue;}<br>    ret.push_back(s.substr(0, z) + '-' + s.substr(z));<br>  }<br>  return ret;<br>}<br>};<br><br><br>// Powered by FileEdit<br></td>