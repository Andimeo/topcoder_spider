<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System<br>Imports System.Collections<br> <br>Public Class bloggoHyphenate<br>    Public Function correct(ByVal dictionary As String(), ByVal candidates As String()) As String()<br>        Dim words(dictionary.Length - 1), thisCand, res(candidates.Length - 1) As String<br>        Dim i, j, k, hyphenPos, hyphensSeen, min, minpos As Integer<br> <br>        For i = 0 To dictionary.Length - 1<br>            words(i) = dictionary(i).Replace(" ", "")<br>        Next i<br> <br>        For i = 0 To candidates.Length - 1<br>            hyphenPos = candidates(i).IndexOf("-") - 1<br> <br>            thisCand = candidates(i).Replace("-", "")<br>            For j = 0 To words.Length - 1<br>                If words(j) = thisCand Then Exit For<br>            Next j<br> <br>            hyphensSeen = 0<br>            min = -1<br>            For k = 0 To words(j).Length - 2<br>                If dictionary(j).Chars(k + hyphensSeen + 1) = " " Then<br>                    hyphensSeen += 1<br>                    If min = -1 OrElse Math.Abs(k - hyphenPos) &lt; min Then<br>                        min = Math.Abs(k - hyphenPos)<br>                        minpos = k<br>                    End If<br>                End If<br>            Next k<br> <br>            If min = 0 Then<br>                res(i) = "correct"<br>            ElseIf min = -1 Then<br>                res(i) = words(j)<br>            Else<br>                res(i) = Left(words(j), minpos + 1) &amp; "-" &amp; Mid(words(j), minpos + 2)<br>            End If<br>        Next i<br> <br>        Return res<br>    End Function<br>End Class<br> <br>Module MainModule<br>    Sub Main()<br>        Dim Errors As Boolean = False<br>        Dim Answer, DesiredAnswer As String()<br>        Dim Obj As bloggoHyphenate<br>        Dim Same As Boolean<br>        Dim i As Integer<br>        Obj = New bloggoHyphenate()<br>        Answer = Obj.correct(New String() {"syl la ble", "dic tion a ry", "mole"}, New String() {"mo-le", "syl-lable"})<br>        DesiredAnswer = New String() {"mole", "correct"}<br>        Console.WriteLine("Your Answer:")<br>        Console.Write("{ ")<br>        If (Answer.Length &gt; 0) Then<br>            Console.Write("""" &amp; Answer(0) &amp; """")<br>            For i = 1 To Answer.Length - 1<br>                Console.Write("  , """ &amp; Answer(i) &amp; """")<br>            Next<br>            Console.WriteLine(" }")<br>        Else<br>            Console.WriteLine("}")<br>        End If<br>        Console.WriteLine("Desired Answer:")<br>        Console.Write("{ ")<br>        Same = (Answer.Length = DesiredAnswer.Length)<br>        If (Answer.Length &gt; 0) Then<br>            Console.Write("""" &amp; DesiredAnswer(0) &amp; """")<br>            If Answer(0) &lt;&gt; DesiredAnswer(0) Then<br>                Same = False<br>            End If<br>            For i = 1 To DesiredAnswer.Length - 1<br>                Console.Write("  , """ &amp; DesiredAnswer(i) &amp; """")<br>                If Answer(i) &lt;&gt; DesiredAnswer(i) Then<br>                    Same = False<br>                End If<br>            Next<br>            Console.WriteLine(" }")<br>        Else<br>            Console.WriteLine("}")<br>        End If<br>        If Same Then<br>            Console.WriteLine("Match :-)")<br>        Else<br>            Console.WriteLine("DOESN'T MATCH!!!!")<br>            Errors = True<br>        End If<br>        Console.WriteLine()<br>        Obj = New bloggoHyphenate()<br>        Answer = Obj.correct(New String() {"syl la ble", "dic tion a ry", "mole"}, New String() {"dictio-nary", "syll-able"})<br>        DesiredAnswer = New String() {"diction-ary", "syl-lable"}<br>        Console.WriteLine("Your Answer:")<br>        Console.Write("{ ")<br>        If (Answer.Length &gt; 0) Then<br>            Console.Write("""" &amp; Answer(0) &amp; """")<br>            For i = 1 To Answer.Length - 1<br>                Console.Write("  , """ &amp; Answer(i) &amp; """")<br>            Next<br>            Console.WriteLine(" }")<br>        Else<br>            Console.WriteLine("}")<br>        End If<br>        Console.WriteLine("Desired Answer:")<br>        Console.Write("{ ")<br>        Same = (Answer.Length = DesiredAnswer.Length)<br>        If (Answer.Length &gt; 0) Then<br>            Console.Write("""" &amp; DesiredAnswer(0) &amp; """")<br>            If Answer(0) &lt;&gt; DesiredAnswer(0) Then<br>                Same = False<br>            End If<br>            For i = 1 To DesiredAnswer.Length - 1<br>                Console.Write("  , """ &amp; DesiredAnswer(i) &amp; """")<br>                If Answer(i) &lt;&gt; DesiredAnswer(i) Then<br>                    Same = False<br>                End If<br>            Next<br>            Console.WriteLine(" }")<br>        Else<br>            Console.WriteLine("}")<br>        End If<br>        If Same Then<br>            Console.WriteLine("Match :-)")<br>        Else<br>            Console.WriteLine("DOESN'T MATCH!!!!")<br>            Errors = True<br>        End If<br>        Console.WriteLine()<br>        Obj = New bloggoHyphenate()<br>        Answer = Obj.correct(New String() {"syl la ble", "dic tion a ry", "mole"}, New String() {"dictionary-", "-syllable"})<br>        DesiredAnswer = New String() {"dictiona-ry", "syl-lable"}<br>        Console.WriteLine("Your Answer:")<br>        Console.Write("{ ")<br>        If (Answer.Length &gt; 0) Then<br>            Console.Write("""" &amp; Answer(0) &amp; """")<br>            For i = 1 To Answer.Length - 1<br>                Console.Write("  , """ &amp; Answer(i) &amp; """")<br>            Next<br>            Console.WriteLine(" }")<br>        Else<br>            Console.WriteLine("}")<br>        End If<br>        Console.WriteLine("Desired Answer:")<br>        Console.Write("{ ")<br>        Same = (Answer.Length = DesiredAnswer.Length)<br>        If (Answer.Length &gt; 0) Then<br>            Console.Write("""" &amp; DesiredAnswer(0) &amp; """")<br>            If Answer(0) &lt;&gt; DesiredAnswer(0) Then<br>                Same = False<br>            End If<br>            For i = 1 To DesiredAnswer.Length - 1<br>                Console.Write("  , """ &amp; DesiredAnswer(i) &amp; """")<br>                If Answer(i) &lt;&gt; DesiredAnswer(i) Then<br>                    Same = False<br>                End If<br>            Next<br>            Console.WriteLine(" }")<br>        Else<br>            Console.WriteLine("}")<br>        End If<br>        If Same Then<br>            Console.WriteLine("Match :-)")<br>        Else<br>            Console.WriteLine("DOESN'T MATCH!!!!")<br>            Errors = True<br>        End If<br>        Console.WriteLine()<br>        Obj = New bloggoHyphenate()<br>        Answer = Obj.correct(New String() {"zsx kd ds jply rf", "auca wb ill", "kvqm kpd p kqi xpbk j", "cqf ccr ewq", "srl vu m u d b", "h qae qzge", "jdn qqjf y", "zpa hbr", "d uft ctsm qjg", "l hgcp ik twuy bsi nlmu iyx", "cjjz jn td zg", "h bd q hi", "obsr kci hjdm h yar zsq q xyr hxb", "izq iibd yuh tgx nkq", "cjgd wfns", "ohc bn duc", "pydv a geki s bo avdi wd", "zygp gqt p", "xq pqqb ufoe", "cvm yamq moqj vl zoig w", "ahz b lf ixjv d", "qpg ven d", "m cbxz yf tv djf", "kti wacd uvgb kmr ew r", "ng tfb unw ndl", "qruv ctw a", "d hk v pcxh zoxy", "etbo wabk", "x hxiu n", "wp qq u dvpi tclh ac l", "f am brs lk uss uyb pg", "dtfx h ict if koe jhj", "nl shp yeji b rw vrg", "bz qfnc u", "t ceoy eb ss myoe zaaj z jey", "j d uju mb irvu", "anmo emjs syam ta bfiy kk", "gl ej egla tha jbug", "zk u sz raij d", "kw lbya atdb pd", "no id hqum u wny qcy", "phv nv l f oq m", "b xup tnq fziw yth sn", "pvc hnr oky lzj", "ew wtwt gyty s uu pfe kif my", "t cw fsau", "esk gqtd o yh jbx wed fl z", "vvr hqw wo gxwm", "lei akz nzz bumb", "bc hlmw"}, New String() {"-duftctsmqjg", "-leiakznzzbumb", "-xhxiun", "-zpahbr", "ahzbl-fixjvd", "anmo-emjssyamtabfiykk", "aucawb-ill", "bchlmw-", "bxuptnqfziwyth-sn", "bzq-fncu", "c-vmyamqmoqjvlzoigw", "cjg-dwfns", "cjjzjn-tdzg", "cqfccre-wq", "dhkvpcxhzox-y", "dtfx-hictifkoejhj", "eskgqtdoyhjbx-wedflz", "etbowab-k", "ewwtwtgytysuupfe-kifmy", "fambrslkuss-uybpg", "glejegl-athajbug", "hbdqhi-", "hq-aeqzge", "izqiibd-yuhtgxnkq", "jd-nqqjfy", "jdujumb-irvu", "ktiwacduvgbkmr-ewr", "kv-qmkpdpkqixpbkj", "kwlbya-atdbpd", "lhgcpiktwuybsi-nlmuiyx", "mcbx-zyftvdjf", "ngtf-bunwndl", "nlshpyejibrwvrg-", "no-idhqumuwnyqcy", "o-hcbnduc", "obsr-kcihjdmhyarzsqqxyrhxb", "ph-vnvlfoqm", "pvchnrok-ylzj", "pydvageki-sboavdiwd", "qpgv-end", "qruvctw-a", "srlvumu-db", "tceoyebssmyo-ezaajzjey", "tcwfsau-", "vvrhqwwo-gxwm", "wpqqudvpit-clhacl", "xqpq-qbufoe", "zku-szraijd", "zsxkddsjp-lyrf", "zygpgqt-p"})<br>        DesiredAnswer = New String() {"d-uftctsmqjg", "lei-akznzzbumb", "x-hxiun", "zpa-hbr", "ahzb-lfixjvd", "correct", "correct", "bc-hlmw", "correct", "bz-qfncu", "cvm-yamqmoqjvlzoigw", "cjgd-wfns", "correct", "cqfccr-ewq", "dhkvpcxh-zoxy", "correct", "correct", "etbo-wabk", "correct", "correct", "glejegla-thajbug", "hbdq-hi", "h-qaeqzge", "correct", "jdn-qqjfy", "correct", "correct", "kvqm-kpdpkqixpbkj", "correct", "correct", "mcbxz-yftvdjf", "ngtfb-unwndl", "nlshpyejibrw-vrg", "correct", "ohc-bnduc", "correct", "phv-nvlfoqm", "pvchnroky-lzj", "correct", "qpg-vend", "correct", "correct", "tceoyebssmyoe-zaajzjey", "tcw-fsau", "correct", "wpqqudvpi-tclhacl", "xq-pqqbufoe", "correct", "zsxkdds-jplyrf", "correct"}<br>        Console.WriteLine("Your Answer:")<br>        Console.Write("{ ")<br>        If (Answer.Length &gt; 0) Then<br>            Console.Write("""" &amp; Answer(0) &amp; """")<br>            For i = 1 To Answer.Length - 1<br>                Console.Write("  , """ &amp; Answer(i) &amp; """")<br>            Next<br>            Console.WriteLine(" }")<br>        Else<br>            Console.WriteLine("}")<br>        End If<br>        Console.WriteLine("Desired Answer:")<br>        Console.Write("{ ")<br>        Same = (Answer.Length = DesiredAnswer.Length)<br>        If (Answer.Length &gt; 0) Then<br>            Console.Write("""" &amp; DesiredAnswer(0) &amp; """")<br>            If Answer(0) &lt;&gt; DesiredAnswer(0) Then<br>                Same = False<br>            End If<br>            For i = 1 To DesiredAnswer.Length - 1<br>                Console.Write("  , """ &amp; DesiredAnswer(i) &amp; """")<br>                If Answer(i) &lt;&gt; DesiredAnswer(i) Then<br>                    Same = False<br>                End If<br>            Next<br>            Console.WriteLine(" }")<br>        Else<br>            Console.WriteLine("}")<br>        End If<br>        If Same Then<br>            Console.WriteLine("Match :-)")<br>        Else<br>            Console.WriteLine("DOESN'T MATCH!!!!")<br>            Errors = True<br>        End If<br>        Console.WriteLine()<br> <br>        If Errors Then<br>            Console.WriteLine("Some of the test cases had errors :-(")<br>        Else<br>            Console.WriteLine("You're a stud (at least on the test data)! :-D ")<br>        End If<br>    End Sub<br>End Module<br> <br>'Powered by [KawigiEdit]<br></td>