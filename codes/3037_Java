<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class Thesaurus {<br>  public String[] edit(String[] entry) {<br>    int n = entry.length;<br>    int nn = n;<br>    TreeSet[] t = new TreeSet[n];<br>    for (int i = 0; i &lt; n; i++) {<br>      t[i] = new TreeSet();<br>      StringTokenizer st = new StringTokenizer(entry[i]);<br>      while (st.hasMoreTokens()) t[i].add(st.nextToken());<br>    }<br>    boolean f;<br>    do {<br>      f = false;<br>      for (int  i = 0; i &lt; n; i++)<br>        for (int j = i + 1; j &lt; n; j++)<br>          if (t[i] != null &amp;&amp; t[j] != null) {<br>            TreeSet u = (TreeSet) t[i].clone();<br>            u.retainAll(t[j]);<br>            if (u.size() &gt;= 2) {<br>              t[i].addAll(t[j]);<br>              t[j] = null;<br>              f = true;<br>              nn--;<br>            }<br>          }<br>    } while (f);<br>    String[] r = new String[nn];<br>    int k = 0;<br>    for (int i = 0; i &lt; n; i++)<br>      if (t[i] != null) {<br>        r[k] = "";<br>        for (Iterator j = t[i].iterator(); j.hasNext(); )<br>          r[k] += " " + j.next();<br>        if (r[k].length() &gt; 0) r[k] = r[k].substring(1);<br>        k++;<br>      }<br>    Arrays.sort(r);<br>    return r;<br>  }<br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>