<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI; typedef vector&lt;VI&gt; VVI;<br>typedef vector&lt;string&gt; VS; typedef vector&lt;VS&gt; VVS;<br>typedef long long i64; typedef unsigned long long u64;<br><br>VI nl, nr;<br><br>class DamagedTree {<br>public:<br>string decode(vector &lt;string&gt; tree, vector &lt;string&gt; encodedMessage) {<br>  int i, j, k, x, y, z, n;<br>  string ret = "###";<br>  string m;<br>  for( i = 0; i &lt; encodedMessage.size(); i++ ) m += encodedMessage[i];<br><br>  for( n = 0; n &lt; (1&lt;&lt;15); n++ ) {<br>    VS t = tree;<br>    string cur;<br>    x = 0;<br>    for( i = 0; i &lt; t.size(); i++ )<br>    for( j = 0; j &lt; t[i].size(); j++ ) if( t[i][j] == '?' ) {<br>      if( n&amp;(1&lt;&lt;x) ) t[i][j] = '1'; else t[i][j] = '0';<br>      x++;<br>    }<br>    nl.clear(); nr.clear();<br>    nl.push_back(-1);<br>    nr.push_back(-1);<br>    for( i = 0; i &lt; t.size(); i++ ) {<br>      x = 0;<br>      for( j = 2; j &lt; t[i].size(); j++ ) {<br>        if( nl[x] == -1 &amp;&amp; nr[x] != -1 ) goto fail;<br>        if( nl[x] == -1 ) {<br>          nl[x] = nl.size(); nr[x] = nl.size()+1;<br>          nl.push_back(-1);<br>          nl.push_back(-1);<br>          nr.push_back(-1);<br>          nr.push_back(-1);<br>        }<br>        if( t[i][j] == '0' ) x = nl[x]; else x = nr[x];<br>      }<br>      if( nl[x] == -1 &amp;&amp; nr[x] != -1 ) goto fail;<br>      if( nl[x] == -1 ) nr[x] = t[i][0]; else goto fail;<br>    }<br>    x = 0;<br>    for( i = 0; i &lt; m.size(); i++ ) {<br>      if( m[i] == '0' ) x = nl[x]; else x = nr[x];<br>      if( nl[x] == -1 ) {<br>        cur += nr[x];<br>        x = 0;<br>      }<br>    }<br>    if( x ) goto fail;<br>    if( ret != "###" &amp;&amp; ret != cur ) return ""; else ret = cur;<br>fail:  ;<br>  }<br>  if( ret == "###" ) return "";<br>  return ret;<br>}<br>};<br><br><br>// Powered by FileEdit<br></td>