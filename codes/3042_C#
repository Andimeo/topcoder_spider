<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>public class Crossroads {<br>  public int[] getOut(int[] angles) {<br>    ArrayList temp = new ArrayList(angles);<br>    ArrayList temp2 = new ArrayList();<br>    for( int k = 0; k &lt; angles.Length; k++)<br>      temp2.Add(k);<br>    int max = 0;<br>    int place = 0;<br>    int c = temp.Count;<br>    for(int j = 0; j &lt; c; j++)<br>    {<br>      max = 0;<br>      for(int i = 0; i &lt; temp.Count-1; i++)<br>      {<br>        int val = ((int)temp[i] - 90) - ((int)temp[i+1] - 90);<br>        if(val &lt; 0)<br>          val = val * (-1);<br>        else<br>          continue;<br>        if(val &gt; max)<br>        {<br>          max = val;<br>          place = i;<br>        }<br>      }<br>      if(max == 0)<br>        break;<br>      else<br>      {<br>        int v = (int)temp[place] - 90;<br>        int vv = (int)temp[place+1] - 90;<br>        if(v &lt; 0)<br>          v = v* (-1);<br>        if(vv &lt; 0)<br>          vv = vv* (-1);<br>        if(v &gt; vv)<br>        {<br>          temp.RemoveAt(place);<br>          temp2.RemoveAt(place);<br>        }<br>        else //(vv &gt; v)<br>        {<br>          temp.RemoveAt(place+1);<br>          temp2.RemoveAt(place+1);<br>        }<br>          //else<br>        //  temp.RemoveAt(place+1);<br>      }<br>    }<br>    int[] t = new int[temp.Count];<br>    temp2.CopyTo(t);<br>    return t;<br>  }<br>}<br><br><br>// Powered by FileEdit<br></td>