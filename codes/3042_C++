<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;utility&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br> <br>#define REP(i, n) for (int i = 0; i &lt; (n); i++)<br>#define FOR(i, a, b) for (int i = (a); i &lt; (b); i++)<br>#define SWAP(tmp, a, b) tmp = a; a= b; b=tmp;<br>#define SQR(a) (a)*(a)<br>#define PI acos(0.0)*2<br>#define INF 1000000000<br> <br>#ifdef _WIN32<br>typedef __int64 int64;<br>#else<br>typedef long long int64;<br>#endif<br> <br>using namespace std;<br> <br> <br>struct tourTree<br>{<br>  tourTree* left, *right;<br>  string name;<br>};<br> <br>class Crossroads<br>{  <br>public:  <br>  vector &lt;int&gt; getOut(vector &lt;int&gt; angles)  <br>  {  <br>    int n = angles.size();<br>    bool* pass = new bool[n];<br>    memset(pass, true, n);<br>    REP(i, n-1)<br>      FOR(j, i+1, n)<br>      if (angles[i] &lt; angles[j])<br>      {<br>        if (abs(angles[i] - 90) &lt; abs(angles[j] - 90))<br>          pass[j] = false;<br>        else<br>          if (abs(angles[i] - 90) &gt; abs(angles[j] - 90))<br>            pass[i] = false;<br>          else //equal case -&gt; i goes first<br>            pass[j] = false;<br>      }<br>    vector&lt;int&gt; res;<br>    REP(i, n)<br>      if (pass[i]) res.push_back(i);<br>    delete[] pass;<br>    return res;        <br>  }<br>  <br>};<br> <br> <br>/*<br>int main(void)<br>{<br>}<br>*/<br></td>