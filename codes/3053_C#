<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br><br>public class GetSubsequence {<br>  Hashtable h = new Hashtable();<br>  string s;<br>  int n;<br><br>  long[,] numSubs;<br><br>  public string getAt(string s, string pos) {<br>    this.s = s;<br>    n = s.Length;<br><br>    numSubs = new long[n + 1, n + 1];<br>    for (int j = 0; j &lt;= n; ++j)<br>      for (int i = 0; i &lt;= n; ++i)<br>      {<br>        if (j == 0)<br>          numSubs[i, j] = 1;<br>        else<br>        {<br>          for (char ch = 'A'; ch &lt;= 'Z'; ++ch)<br>          {<br>            int k = i;<br><br>            for (k = i; k &lt; n; ++k)<br>              if (s[k] == ch)<br>                break;<br><br>            if (k &gt;= n)<br>              continue;<br><br>            numSubs[i, j] += numSubs[k + 1, j - 1];<br>          }<br><br>          for (char ch = 'a'; ch &lt;= 'z'; ++ch)<br>          {<br>            int k = i;<br><br>            for (k = i; k &lt; n; ++k)<br>              if (s[k] == ch)<br>                break;<br><br>            if (k &gt;= n)<br>              continue;<br><br>            numSubs[i, j] += numSubs[k + 1, j - 1];<br>          }<br>        }<br>      }<br><br>    long p = long.Parse(pos);<br>    long am = 0;<br>    for (int i = 1; i &lt;= s.Length; ++i)<br>      am += numSubs[0, i];<br>    p %= am;<br><br>    int len = 0;<br>    for (int i = 1; i &lt;= s.Length; ++i) <br>    {<br>      long cur = numSubs[0, i];<br>      if (p &lt; cur)<br>      {<br>        len = i;<br>        break;<br>      }<br>      p -= cur;<br>    }<br><br>    string ret = "";<br>    int at = 0;<br><br>    for (int i = 0; i &lt; len; ++i)<br>    {<br>      char ch;<br><br>      for (ch = 'A'; ch &lt;= 'Z'; ++ch) {<br>        int k;<br><br>        for (k = at; k &lt; n; ++k)<br>          if (s[k] == ch)<br>            break;<br><br>        if (k &gt;= n)<br>          continue;<br><br>        long cur = numSubs[k + 1, len - i - 1];<br>        if (p &lt; cur) <br>        {<br>          at = k + 1;<br>          break;<br>        }<br>        p -= cur;<br>      }<br><br>      if (ch &gt; 'Z')<br>      {<br>        for (ch = 'a'; ch &lt;= 'z'; ++ch) <br>        {<br>          int k;<br><br>          for (k = at; k &lt; n; ++k)<br>            if (s[k] == ch)<br>              break;<br><br>          if (k &gt;= n)<br>            continue;<br><br>          long cur = numSubs[k + 1, len - i - 1];<br>          if (p &lt; cur) <br>          {<br>            at = k + 1;<br>            break;<br>          }<br>          p -= cur;<br>        }<br>      }<br><br>      ret += ch;<br>    }<br>    <br>    return ret;<br>  }<br>  <br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>