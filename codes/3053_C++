<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;vector&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;math.h&gt;<br><br>typedef long long int64;<br>typedef unsigned long long uint64;<br>using namespace std;<br><br><br>class GetSubsequence<br>{ <br>public: <br>    string getAt(string s, string pos) ;<br>    <br> <br>}; <br><br>long long A[64][64][256], B[64][64];<br>int N;<br>string GetSubsequence::getAt(string s, string pos) <br>{ <br>  int i, j, c, k;<br>  char ch;<br>  long long poz = 0, tot = 0;<br>  string rez, tmp;<br>  memset(A, 0, sizeof(A));<br>  memset(B, 0, sizeof(B));<br>  N = s.length();<br>  for (i = 0; i &lt; N/2; i++)<br>    ch = s[i], s[i] = s[N-1-i], s[N-1-i] = ch;<br>  for (i = 1; i &lt;= N; i++)<br>    B[i][0] = 1;<br>  A[1][1][s[0]] = 1;<br>  B[1][1] = 1;<br>  for (i = 2; i &lt;= N; i++)<br>    for (j = 1; j &lt;= i; j++)<br>      for (c = 32; c &lt; 128; c++)<br>      {<br>        if (s[i-1] != c)<br>          A[i][j][c] = A[i-1][j][c];<br>        else<br>          A[i][j][c] = B[i-1][j-1];<br>        B[i][j] += A[i][j][c];<br>      }<br>  for (j = 1; j &lt;= N; j++)<br>    tot += B[N][j];<br>  for (i = 0; i &lt; pos.length(); i++)<br>    poz = (poz * 10 + (pos[i] - '0')) % tot;<br>  for (j = 1; ; j++)<br>  {<br>    if (poz &lt; B[N][j]) break;<br>    poz -= B[N][j];<br>  }<br>  rez = "";<br>  for (i = N; j &gt; 0; j--)<br>  {<br>    for (c = 32; c &lt; 128; c++)<br>      if (A[i][j][c])<br>      {<br>        if (poz &lt; A[i][j][c]) break;<br>        poz -= A[i][j][c];<br>      }<br>    while (s[i-1] != c) i--;<br>    i--;<br>    <br>    rez = rez + ((char) c);<br>  }<br>  return rez;<br>} <br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>