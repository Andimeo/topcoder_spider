<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;list&gt;<br>#include &lt;regex.h&gt; <br>using namespace std;<br><br>#define FOR(i,a,b) for(int i=(a);i&lt;int(b);++i)<br>#define REP(i,n) FOR(i,0,n)<br>template&lt;class T, class U&gt; T cast (U x) { T y; ostringstream a; a&lt;&lt;x; istringstream b(a.str()); b&gt;&gt;y; return y; }<br>template&lt;class T&gt; vector&lt;T&gt; split(string s, string x) { vector&lt;T&gt; r; REP(i,s.size()) { string c; while(i&lt;(int)s.size()&amp;&amp;x.find(s[i])==string::npos) c+=s[i++]; if(c.size()) r.push_back(cast&lt;T&gt;(c)); } return r; }<br><br>typedef long long ll;<br><br>class FractionSplit {<br>public:<br>    vector &lt;string&gt; getSum(ll n, ll d) {<br>      vector&lt;string&gt; ret;<br>      while(n!=0) {<br>        for(int i=2;;++i) if(d&lt;=n*i) {<br>          ret.push_back("1/"+cast&lt;string&gt;(i));<br>          ll a=n*i-d,b=d*i;<br>          n=a,d=b;<br>          break;<br>        }<br>      }<br>      return ret;<br>    }<br><br>};<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>