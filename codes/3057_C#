<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Collections;<br><br>public class Reconstruct {<br><br>  int[,] d;<br>  int[,] r;<br>  int n;<br><br>  public bool Go(int j)<br>  {<br>    if (j == n) return true;<br>    for (int x = -35; x &lt; 35; x++)<br>      for (int y = -35; y &lt; 35; y++)<br>        for (int z = -35; z &lt; 35; z++)<br>          if (x*x + y*y + z*z == d[0,j])<br>          {<br>            if (j == 1)<br>            {<br>              if (x &lt; 0 || y &lt; 0 || z &lt; 0 || x &gt; y || y &gt; z || x &gt; z) continue;<br>            }<br>            bool ok = true;<br>            for (int i = 1; i &lt; j; i++)<br>              if ((r[i,0]-x)*(r[i,0]-x)+(r[i,1]-y)*(r[i,1]-y)+(r[i,2]-z)*(r[i,2]-z) != d[i,j])<br>              { ok = false; break; }<br>            if (ok)<br>            {<br>              r[j,0] = x;<br>              r[j,1] = y;<br>              r[j,2] = z;<br>              if (Go(j+1)) return true;<br>            }<br>          }<br>    return false;<br>  }<br><br>    public string[] findPoints(string[] dists) {<br>        string[] res;<br><br>    n = dists.Length;<br><br>    d = new int[n,n];<br>    r = new int[n,3];<br><br>    for (int j = 0; j &lt; n; j++)<br>    {<br>      string[] p = dists[j].Split(new char[] {' '});<br>      for (int i = 0; i &lt; n; i++)<br>        d[j,i] = Convert.ToInt32(p[i]);<br>    }<br><br>    if (Go(1))<br>    {<br>      res = new string[n];<br>      for (int i = 0; i &lt; n; i++)<br>        res[i] = r[i,0].ToString() + " " + r[i,1].ToString() + " " + r[i,2].ToString();<br>      return res;<br>    } else<br>      return new string[] {};<br><br>    }<br><br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>