<td class="problemText" colspan="8" valign="middle" align="left">
            /*<br> * ALL HOPE ABANDON, YE WHO ENTER HERE<br> */<br> <br> <br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iterator&gt;<br>#include &lt;iostream&gt;<br>#include &lt;math.h&gt;<br>#include &lt;stdio.h&gt;<br> <br>using namespace std;<br> <br>#define fi(a, b) for(int i=((int)(a)); i &lt; ((int)(b)); i++)<br>#define fj(a, b) for(int j=((int)(a)); j &lt; ((int)(b)); j++)<br>#define fk(a, b) for(int k=((int)(a)); k &lt; ((int)(b)); k++)<br>#define fl(a, b) for(int l=((int)(a)); l &lt; ((int)(b)); l++)<br>#define fdi(a, b) for(int i=((int)(a)); i &gt; ((int)(b)); i--)<br>#define fdj(a, b) for(int j=((int)(a)); j &gt; ((int)(b)); j--)<br>#define fdk(a, b) for(int k=((int)(a)); k &gt; ((int)(b)); k--)<br>#define fdl(a, b) for(int l=((int)(a)); l &gt; ((int)(b)); l--)<br>#define ri(b) for(int i=0; i &lt; ((int)(b)); i++)<br>#define rj(b) for(int j=0; j &lt; ((int)(b)); j++)<br>#define rk(b) for(int k=0; k &lt; ((int)(b)); k++)<br>#define rl(b) for(int l=0; l &lt; ((int)(b)); l++)<br> <br>#define itadj for(int adx=-1; adx&lt;=1; adx++) for(int ady=-1; ady&lt;=1; ady++)<br>#define chkadj(i, j, n, m) ((i)&gt;=0&amp;&amp;(j)&gt;=0&amp;&amp;(i)&lt;n&amp;&amp;(j)&lt;m)<br>#define fe(v,it) for(__typeof(v.begin()) it=v.begin(); it != v.end(); it++)<br> <br>#define ll  long long<br>#define i64 long long<br>#define lint long long<br>#define i32 int<br>typedef string str;<br>typedef double dbl;<br> <br>#define bz(a) memset(a,0,sizeof(a))<br>#define sq(x) ((x)*(x))<br> <br>#define vi  vector&lt; int &gt;<br>#define vvi vector&lt; vector&lt; int &gt; &gt;<br>#define vs  vector&lt; string &gt;<br>#define vvs vector&lt; vector&lt; string &gt; &gt;<br>#define vd  vector&lt; dbl &gt;<br>#define vvd vector&lt; vector&lt; dbl &gt; &gt;<br>#define vl  vector&lt; ll &gt;<br> <br>#define MAX(a,b) ((a)&gt;(b)?(a):(b))<br>#define MIN(a,b) ((a)&gt;(b)?(b):(a))<br>#define ABS(a)   MAX((a),-(a))<br> <br>#define vp(v,a)  (v).push_back(a)<br>#define vpob(v) (v).pop_back()<br>#define vpof(v) (v).pop_front()<br> <br>#define va(v) (v).begin(), (v).end()<br>#define vf(v,a) find(va(v),(a))<br>#define ve(v,a) (vf(v,a)!=(v).end())<br>#define vins(v,a) do { if (!ve(v,a)) vpb(v, a); } while(0)<br>#define vind(v,a) (ve(v,a)?(vf(v,a)-v.begin()):-1)<br>#define vdel(v,a) v.erase(remove(va(v),a),v.end())<br> <br>#define sz size()<br> <br>#define mp(x, y) make_pair(x, y)<br>#define mt(x, y, z) mp(mp(x,y),z)<br> <br>#define pfst(p) (p).first<br>#define pscd(p) (p).second<br> <br>#define tfst(t) (t).first.first<br>#define tscd(t) (t).first.second<br>#define tthd(t) (t).second<br> <br>typedef pair&lt;int, int&gt; pii;<br>typedef pair&lt;str, str&gt; pss;<br> <br>typedef pair&lt; pii, int &gt; tii;<br> <br>#define dbg_vint(v) do { copy(va(v),ostream_iterator&lt;int&gt;(cout,"\t")); cout &lt;&lt; endl; } while(0)<br>#define dbg_vstr(v) do { copy(va(v),ostream_iterator&lt;str&gt;(cout,"\n")); cout &lt;&lt; endl; } while(0)<br>#define dbg_vdbl(v) do { copy(va(v),ostream_iterator&lt;dbl&gt;(cout,"\t")); cout &lt;&lt; endl; } while(0)<br> <br>#define pq priority_queue<br> <br>class Reconstruct {<br>public:<br>  vector &lt;string&gt; Reconstruct::findPoints(vector &lt;string&gt;);<br>};<br> <br>vector&lt; vi &gt; ret;<br>vector&lt; vi &gt; cur;<br> <br>int n;<br>int d[21][21];<br> <br>void doit(int i)<br>{<br>  if (i==n)<br>  {<br>    if (ret.sz==0) { ret=cur; }<br>    else if (cur&lt;ret) { ret=cur; }<br>    return;<br>  }<br>  <br>  for(int x=(i==1?0:-31);x&lt;32;x++) if ((x*x)&lt;=d[0][i])<br>  for(int y=(i==1?0:-31);y&lt;32;y++) if ((x*x+y*y)&lt;=d[0][i])<br>  for(int z=(i==1?0:-31);z&lt;32;z++) if (x*x+y*y+z*z==d[0][i])<br>  {<br>    if ((i==1)&amp;&amp;(x&gt;y||y&gt;z||x&gt;z)) continue;<br>  <br>    bool f=true;<br>    fk(1,i)<br>    {<br>      dbl dd=sq(x-cur[k][0])+sq(y-cur[k][1])+sq(z-cur[k][2]);<br>    <br>      if (dd!=d[k][i]) { f=false; break; }<br>    }<br>    if (!f) continue;<br>    <br>    vi r(3,0);<br>    r[0]=x;<br>    r[1]=y;<br>    r[2]=z;<br>    <br>    vp(cur,r);<br>    doit(i+1);<br>    cur.pop_back();<br>  }<br>  <br>  return;<br>}<br> <br> <br>vector &lt;string&gt; Reconstruct::findPoints(vector &lt;string&gt; dists) {<br>  ret = vvi(0);<br>  cur = vvi(0);<br>  <br>  bz(d);<br>  n=dists.sz;<br>  <br>  ri(n)<br>  {<br>    istringstream st(dists[i]);<br>    rj(n) st&gt;&gt;d[i][j];<br>  }<br>  <br>  vp(cur,vi(3,0));<br>  <br>  doit(1);<br>  <br>  vs r;<br>  <br>  ri(ret.sz)<br>  {<br>    ostringstream st;<br>    st &lt;&lt; ret[i][0] &lt;&lt; " " &lt;&lt; ret[i][1] &lt;&lt; " " &lt;&lt; ret[i][2];<br>    vp(r,st.str());<br>  }<br>  <br>  return r;<br>}<br> <br>#if 1<br>double test0() {<br>  string t0[] = {"0 1","1 0"};<br>  vector &lt;string&gt; p0(t0, t0+sizeof(t0)/sizeof(string));<br>  Reconstruct * obj = new Reconstruct();<br>  clock_t start = clock();<br>  vector &lt;string&gt; my_answer = obj-&gt;findPoints(p0);<br>  clock_t end = clock();<br>  delete obj;<br>  cout &lt;&lt;"Time: " &lt;&lt;(double)(end-start)/CLOCKS_PER_SEC &lt;&lt;" seconds" &lt;&lt;endl;<br>  string t1[] = { "0 0 0",  "0 0 1" };<br>  vector &lt;string&gt; p1(t1, t1+sizeof(t1)/sizeof(string));<br>  cout &lt;&lt;"Desired answer: " &lt;&lt;endl;<br>  cout &lt;&lt;"\t{ ";<br>  if (p1.size() &gt; 0) {<br>    cout &lt;&lt;"\""&lt;&lt;p1[0]&lt;&lt;"\"";<br>    for (int i=1; i&lt;p1.size(); i++)<br>      cout &lt;&lt;", \"" &lt;&lt;p1[i]&lt;&lt;"\"";<br>    cout &lt;&lt;" }" &lt;&lt;endl;<br>  }<br>  else<br>    cout &lt;&lt;"}" &lt;&lt;endl;<br>  cout &lt;&lt;endl &lt;&lt;"Your answer: " &lt;&lt;endl;<br>  cout &lt;&lt;"\t{ ";<br>  if (my_answer.size() &gt; 0) {<br>    cout &lt;&lt;"\""&lt;&lt;my_answer[0]&lt;&lt;"\"";<br>    for (int i=1; i&lt;my_answer.size(); i++)<br>      cout &lt;&lt;", \"" &lt;&lt;my_answer[i]&lt;&lt;"\"";<br>    cout &lt;&lt;" }" &lt;&lt;endl;<br>  }<br>  else<br>    cout &lt;&lt;"}" &lt;&lt;endl;<br>  if (my_answer != p1) {<br>    cout &lt;&lt;"DOESN'T MATCH!!!!" &lt;&lt;endl &lt;&lt;endl;<br>    return -1;<br>  }<br>  else {<br>    cout &lt;&lt;"Match :-)" &lt;&lt;endl &lt;&lt;endl;<br>    return (double)(end-start)/CLOCKS_PER_SEC;  //I want to eventually turn this into a time of some kind.<br>  }<br>}<br>double test1() {<br>  string t0[] = {"0 2 2","2 0 2","2 2 0"};<br>  vector &lt;string&gt; p0(t0, t0+sizeof(t0)/sizeof(string));<br>  Reconstruct * obj = new Reconstruct();<br>  clock_t start = clock();<br>  vector &lt;string&gt; my_answer = obj-&gt;findPoints(p0);<br>  clock_t end = clock();<br>  delete obj;<br>  cout &lt;&lt;"Time: " &lt;&lt;(double)(end-start)/CLOCKS_PER_SEC &lt;&lt;" seconds" &lt;&lt;endl;<br>  string t1[] = { "0 0 0",  "0 1 1",  "-1 0 1" };<br>  vector &lt;string&gt; p1(t1, t1+sizeof(t1)/sizeof(string));<br>  cout &lt;&lt;"Desired answer: " &lt;&lt;endl;<br>  cout &lt;&lt;"\t{ ";<br>  if (p1.size() &gt; 0) {<br>    cout &lt;&lt;"\""&lt;&lt;p1[0]&lt;&lt;"\"";<br>    for (int i=1; i&lt;p1.size(); i++)<br>      cout &lt;&lt;", \"" &lt;&lt;p1[i]&lt;&lt;"\"";<br>    cout &lt;&lt;" }" &lt;&lt;endl;<br>  }<br>  else<br>    cout &lt;&lt;"}" &lt;&lt;endl;<br>  cout &lt;&lt;endl &lt;&lt;"Your answer: " &lt;&lt;endl;<br>  cout &lt;&lt;"\t{ ";<br>  if (my_answer.size() &gt; 0) {<br>    cout &lt;&lt;"\""&lt;&lt;my_answer[0]&lt;&lt;"\"";<br>    for (int i=1; i&lt;my_answer.size(); i++)<br>      cout &lt;&lt;", \"" &lt;&lt;my_answer[i]&lt;&lt;"\"";<br>    cout &lt;&lt;" }" &lt;&lt;endl;<br>  }<br>  else<br>    cout &lt;&lt;"}" &lt;&lt;endl;<br>  if (my_answer != p1) {<br>    cout &lt;&lt;"DOESN'T MATCH!!!!" &lt;&lt;endl &lt;&lt;endl;<br>    return -1;<br>  }<br>  else {<br>    cout &lt;&lt;"Match :-)" &lt;&lt;endl &lt;&lt;endl;<br>    return (double)(end-start)/CLOCKS_PER_SEC;  //I want to eventually turn this into a time of some kind.<br>  }<br>}<br>double test2() {<br>  string t0[] = {"0 33 25","33 0 84","25 84 0"};<br>  vector &lt;string&gt; p0(t0, t0+sizeof(t0)/sizeof(string));<br>  Reconstruct * obj = new Reconstruct();<br>  clock_t start = clock();<br>  vector &lt;string&gt; my_answer = obj-&gt;findPoints(p0);<br>  clock_t end = clock();<br>  delete obj;<br>  cout &lt;&lt;"Time: " &lt;&lt;(double)(end-start)/CLOCKS_PER_SEC &lt;&lt;" seconds" &lt;&lt;endl;<br>  string t1[] = { "0 0 0",  "1 4 4",  "3 -4 0" };<br>  vector &lt;string&gt; p1(t1, t1+sizeof(t1)/sizeof(string));<br>  cout &lt;&lt;"Desired answer: " &lt;&lt;endl;<br>  cout &lt;&lt;"\t{ ";<br>  if (p1.size() &gt; 0) {<br>    cout &lt;&lt;"\""&lt;&lt;p1[0]&lt;&lt;"\"";<br>    for (int i=1; i&lt;p1.size(); i++)<br>      cout &lt;&lt;", \"" &lt;&lt;p1[i]&lt;&lt;"\"";<br>    cout &lt;&lt;" }" &lt;&lt;endl;<br>  }<br>  else<br>    cout &lt;&lt;"}" &lt;&lt;endl;<br>  cout &lt;&lt;endl &lt;&lt;"Your answer: " &lt;&lt;endl;<br>  cout &lt;&lt;"\t{ ";<br>  if (my_answer.size() &gt; 0) {<br>    cout &lt;&lt;"\""&lt;&lt;my_answer[0]&lt;&lt;"\"";<br>    for (int i=1; i&lt;my_answer.size(); i++)<br>      cout &lt;&lt;", \"" &lt;&lt;my_answer[i]&lt;&lt;"\"";<br>    cout &lt;&lt;" }" &lt;&lt;endl;<br>  }<br>  else<br>    cout &lt;&lt;"}" &lt;&lt;endl;<br>  if (my_answer != p1) {<br>    cout &lt;&lt;"DOESN'T MATCH!!!!" &lt;&lt;endl &lt;&lt;endl;<br>    return -1;<br>  }<br>  else {<br>    cout &lt;&lt;"Match :-)" &lt;&lt;endl &lt;&lt;endl;<br>    return (double)(end-start)/CLOCKS_PER_SEC;  //I want to eventually turn this into a time of some kind.<br>  }<br>}<br>double test3() {<br>  string t0[] = {"0 15","15 0"};<br>  vector &lt;string&gt; p0(t0, t0+sizeof(t0)/sizeof(string));<br>  Reconstruct * obj = new Reconstruct();<br>  clock_t start = clock();<br>  vector &lt;string&gt; my_answer = obj-&gt;findPoints(p0);<br>  clock_t end = clock();<br>  delete obj;<br>  cout &lt;&lt;"Time: " &lt;&lt;(double)(end-start)/CLOCKS_PER_SEC &lt;&lt;" seconds" &lt;&lt;endl;<br>  string t1[] = { };<br>  vector &lt;string&gt; p1(t1, t1+sizeof(t1)/sizeof(string));<br>  cout &lt;&lt;"Desired answer: " &lt;&lt;endl;<br>  cout &lt;&lt;"\t{ ";<br>  if (p1.size() &gt; 0) {<br>    cout &lt;&lt;"\""&lt;&lt;p1[0]&lt;&lt;"\"";<br>    for (int i=1; i&lt;p1.size(); i++)<br>      cout &lt;&lt;", \"" &lt;&lt;p1[i]&lt;&lt;"\"";<br>    cout &lt;&lt;" }" &lt;&lt;endl;<br>  }<br>  else<br>    cout &lt;&lt;"}" &lt;&lt;endl;<br>  cout &lt;&lt;endl &lt;&lt;"Your answer: " &lt;&lt;endl;<br>  cout &lt;&lt;"\t{ ";<br>  if (my_answer.size() &gt; 0) {<br>    cout &lt;&lt;"\""&lt;&lt;my_answer[0]&lt;&lt;"\"";<br>    for (int i=1; i&lt;my_answer.size(); i++)<br>      cout &lt;&lt;", \"" &lt;&lt;my_answer[i]&lt;&lt;"\"";<br>    cout &lt;&lt;" }" &lt;&lt;endl;<br>  }<br>  else<br>    cout &lt;&lt;"}" &lt;&lt;endl;<br>  if (my_answer != p1) {<br>    cout &lt;&lt;"DOESN'T MATCH!!!!" &lt;&lt;endl &lt;&lt;endl;<br>    return -1;<br>  }<br>  else {<br>    cout &lt;&lt;"Match :-)" &lt;&lt;endl &lt;&lt;endl;<br>    return (double)(end-start)/CLOCKS_PER_SEC;  //I want to eventually turn this into a time of some kind.<br>  }<br>}<br> <br>#endif<br>//Powered by [KawigiEdit]<br></td>