<td class="problemText" colspan="8" valign="middle" align="left">
            using namespace std;<br> <br>#include &lt;stdlib.h&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;ctype.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;string&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br> <br>#define PB push_back<br>#define SZ size()<br>#define REP(var, hi) for (int var=0; var&lt;(hi); var++)<br>#define REPD(var, hi) for (int var=((hi)-1); var&gt;=0; var--)<br>#define FOR(var, lo, hi) for (int var=(lo); var&lt;(hi); var++)<br>#define FORD(var, lo, hi) for (int var=((hi)-1); var&gt;=(lo); var--)<br> <br>typedef vector &lt;int&gt; VI;<br>typedef vector &lt;double&gt; VD;<br>typedef vector &lt;string&gt; VS;<br> <br>/* ############################ THE REAL CODE ############################ */<br> <br>int N,M;<br>VS w;<br>VD cache;<br> <br>double go (int pos) {<br> <br>  if (cache[pos] != -1) return cache[pos];<br>  int npos=0;<br>  REP(i,N) if (pos &amp; (1&lt;&lt;i)) npos++;<br>  if (npos==1) REP(i,N) if (pos &amp; (1&lt;&lt;i)) return cache[pos] = 1;<br>  <br>  double best = 0;<br>  <br>  FOR(l,'a','z'+1) {<br>    double tmp = 0;    <br>    REP(good,N) {<br>      if (!(pos &amp; (1&lt;&lt;good))) continue;<br>      int inword=0;<br>      REP(i,M) if (w[good][i] == l) inword=1;<br>      int newpos=0;<br>      REP(i,N) {<br>        if (!(pos &amp; (1&lt;&lt;i))) continue;<br>        int ok=1;<br>        REP(j,M) if (w[good][j]!=w[i][j] &amp;&amp; (w[good][j]==l || w[i][j]==l)) ok=0;<br>        if (ok) newpos |= 1&lt;&lt;i;<br>      }<br>      if (newpos == pos) continue;<br>      if (inword) tmp+=go(newpos) / npos; else tmp+=(1-go(newpos))/npos;<br>    }<br>    best &gt;?= tmp;    <br>  }  <br>  return cache[pos]=best;<br>}<br> <br>class Hangman42 {<br>  public:<br>  double probability(vector &lt;string&gt; _w) {<br>    w=_w;<br>    N=w.SZ;<br>    M=w[0].SZ;<br>    cache=VD(1&lt;&lt;N, -1);<br>    return go((1&lt;&lt;N)-1);<br>  }<br>};<br> <br> <br>// Powered by PopsEdit<br></td>