<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>public class Hangman42 {<br>  public double probability(String[] _words) {<br>    words = _words;<br>    Arrays.fill(memo,-1);<br>    msks = new long[26][words.length];<br>    for(int i = 0; i &lt; msks.length; i++){<br>      for(int j = 0; j &lt; words.length; j++){<br>        for(int k = 0; k &lt; words[j].length(); k++){<br>          if(words[j].charAt(k) == 'a'+i) msks[i][j] |= (1l&lt;&lt;k);<br>        }<br>      }<br>    }<br>    return doit(0);<br>  }<br>  long[][] msks;<br>  String[] words;<br>  double[] memo = new double[1&lt;&lt;10];<br>  double doit(int msk){<br>    if(cardinality(msk)==words.length-1) return 1;<br>    if(memo[msk] != -1) return memo[msk];<br>    double ret = 0;<br>    for(int i = 0; i &lt; 26; i++){<br>      double prob = 0;<br>      int cnt = 0;<br>      for(int j = 0; j &lt; words.length; j++){<br>        if(((1&lt;&lt;j)&amp;msk)!=0) continue;<br>        cnt++;<br>        int nm = msk;<br>        for(int k = 0; k &lt; words.length; k++){<br>          if(((1&lt;&lt;j)&amp;msk)!=0) continue;<br>          if(msks[i][j] == msks[i][k]) continue;<br>          nm |= (1&lt;&lt;k);<br>        }<br>        if(nm==msk) continue;<br>        if(msks[i][j] == 0) prob += 1-doit(nm);<br>        else prob += doit(nm);<br>      }<br>      prob /= cnt;<br>      ret = Math.max(ret, prob);<br>    }<br>    memo[msk] = ret;<br>    return ret;<br>  }<br>  <br>  public int cardinality(int msk){<br>    return msk==0?0:(msk&amp;1)+cardinality(msk&gt;&gt;1);<br>  }<br> <br>}<br> <br>// Powered by PopsEdit<br>// Powered by CodeProcessor<br></td>