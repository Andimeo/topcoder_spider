<td class="problemText" colspan="8" valign="middle" align="left">
            Public Class HiddenNumbers<br>        Public Function findAll(ByVal text As String()) As String()<br>            Dim s As String = "a"<br>            Dim i, j As Integer<br>            For i = 0 To text.GetUpperBound(0)<br>                s &amp;= text(i)<br>            Next<br>            s &amp;= "a"<br>            Dim bInNum As Boolean = False<br>            Dim a As New System.Collections.ArrayList<br> <br>            For i = 0 To s.Length - 1<br>                If s.Substring(i, 1) &gt;= "0" And s.Substring(i, 1) &lt;= "9" Then<br>                    If Not bInNum Then<br>                        bInNum = True<br>                        j = i<br>                    End If<br>                Else<br>                    If bInNum Then<br>                        bInNum = False<br>                        a.Add(s.Substring(j, i - j))<br>                    End If<br>                End If<br>            Next<br> <br>            a.Sort(New HComparer)<br>            Dim aRet((a.Count + 1) \ 2 - 1) As String<br> <br>            For i = 1 To (a.Count + 1) \ 2<br>                aRet(i - 1) = a(a.Count \ 2 + i - 1)<br>            Next<br> <br>            Return aRet<br> <br>        End Function<br> <br>        Private Class HComparer<br>            Implements System.Collections.IComparer<br> <br>            Public Function Compare(ByVal x As Object, ByVal y As Object) As Integer Implements System.Collections.IComparer.Compare<br>                If CLng(x) &gt; CLng(y) Then Return 1<br>                If CLng(x) &lt; CLng(y) Then Return -1<br>                If x.ToString.Length &gt; y.ToString.Length Then Return 1<br>                If x.ToString.Length &lt; y.ToString.Length Then Return -1<br>                If x.ToString.Length = y.ToString.Length Then Return 0<br>            End Function<br>        End Class<br> <br>    End Class<br></td>