<td class="problemText" colspan="8" valign="middle" align="left">
            using namespace std;<br> <br>#include &lt;stdlib.h&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;ctype.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;string&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br> <br>#define PB push_back<br>#define SZ size()<br>#define REP(var, hi) for (int var=0; var&lt;(hi); var++)<br>#define REPD(var, hi) for (int var=((hi)-1); var&gt;=0; var--)<br>#define FOR(var, lo, hi) for (int var=(lo); var&lt;(hi); var++)<br>#define FORD(var, lo, hi) for (int var=((hi)-1); var&gt;=(lo); var--)<br> <br>typedef vector &lt;int&gt; VI;<br>typedef vector &lt;VI&gt; VVI;<br>typedef vector &lt;string&gt; VS;<br> <br>/* ############################ THE REAL CODE ############################ */<br> <br>class BusinessPlan {<br>  public:<br>  int howLong(vector &lt;int&gt; exp, vector &lt;int&gt; rev, vector &lt;int&gt; tim, int C, int D) {<br>    int TIME=2000000;<br>    VI best(TIME,0);<br>    best[0]=C;<br>    REP(t,TIME) {<br>      if (best[t]&gt;=D) return t;<br>      REP(i,exp.SZ) if (best[t]&gt;=exp[i] &amp;&amp; t+tim[i]&lt;TIME) <br>        best[t+tim[i]] &gt;?= best[t]-exp[i] + rev[i];<br>    }<br>    return -1;      <br>  }<br>};<br> <br> <br>// Powered by PopsEdit<br></td>