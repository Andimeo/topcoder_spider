<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;  typedef vector&lt;vector&lt;int&gt; &gt; VVI;<br>typedef vector&lt;string&gt; VS;  typedef vector&lt;vector&lt;string&gt; &gt; VVS;<br>typedef signed long long i64;  typedef unsigned long long u64;<br><br>int d[50][50];<br><br>class ComboBoxKeystrokes {<br>public:<br>int minimumKeystrokes(vector &lt;string&gt; a) {<br>  int i, j, k, x, y, z, n;<br>  int ret;<br><br>  for( i = 0; i &lt; a.size(); i++ ) a[i] = string(1, tolower(a[i][0]));<br>  memset(d, 60, sizeof(d));<br>  for( i = 0; i &lt; a.size(); i++ ) {<br>    d[i][i] = 0;<br>    for( x = 'a'; x &lt;= 'z'; x++ ) {<br>      for( j = (i+1)%a.size(); j != i; j = (j+1)%a.size() )<br>        if( a[j][0] == x ) break;<br>      d[i][j] &lt;?= 1;<br>    }<br>  }<br>  for( k = 0; k &lt; a.size(); k++ )<br>  for( i = 0; i &lt; a.size(); i++ )<br>  for( j = 0; j &lt; a.size(); j++ )<br>    d[i][j] &lt;?= d[i][k] + d[k][j];<br>  ret = 0;<br>  for( i = 0; i &lt; a.size(); i++ )<br>  for( j = 0; j &lt; a.size(); j++ )<br>    ret &gt;?= d[i][j];<br>  return ret;<br>}<br>};<br><br><br>// Powered by FileEdit<br></td>