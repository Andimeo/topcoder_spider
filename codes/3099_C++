<td class="problemText" colspan="8" valign="middle" align="left">
            using namespace std;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;ctype.h&gt;<br>#include &lt;stdlib.h&gt;<br>//#include &lt;istringstream&gt;<br><br>const int MAXE = 20;<br>const int MAXN = 16;<br>const int INF = 1000000;<br><br>struct edge<br>{<br>    int src, dst;<br>    int cost, len;<br>};<br>int ne;<br>edge e[MAXE];<br>int nn;<br>int thresh;<br><br>class Spanning {<br>    public:<br>    int cost(vector &lt;string&gt; g, int nodes, int threshold) {<br>  ne = g.size();<br>  nn = nodes;<br>  int bc = INF, tc;<br>  for (int i = 0; i &lt; ne; i++)<br>      sscanf( g[i].c_str(), "%d %d %d %d", &amp;e[i].src, &amp;e[i].dst, &amp;e[i].len, &amp;e[i].cost );<br>  for (int x = 0; x &lt; (1 &lt;&lt; ne); x++) {<br>      int mat[MAXN][MAXN];<br>      for (int i = 0; i &lt; nn; i++)<br>    for (int j = 0; j &lt; nn; j++)<br>        mat[i][j] = INF;<br>      for (int i = 0; i &lt; nn; i++)<br>    mat[i][i] = 0;<br>      for (int i = 0; i &lt; ne; i++)<br>    if (x &amp; (1 &lt;&lt; i))<br>        mat[e[i].src][e[i].dst] = mat[e[i].dst][e[i].src] = e[i].len;<br>      for (int k = 0; k &lt; nn; k++)<br>    for (int i = 0; i &lt; nn; i++)<br>        for (int j = 0; j &lt; nn; j++)<br>      mat[i][j] &lt;?= mat[i][k] + mat[k][j];<br>#if 0<br>      for (int i = 0; i &lt; nn; i++) {<br>    for (int j = 0; j &lt; nn; j++)<br>        printf( "%d ", mat[i][j] );<br>    printf( "\n" );<br>      }<br>#endif<br>      for (int i = 0; i &lt; nn; i++)<br>    for (int j = 0; j &lt; nn; j++)<br>        if (mat[i][j] &gt; threshold)<br>      goto bad;<br>      tc = 0;<br>      for (int i = 0; i &lt; ne; i++)<br>    if (x &amp; (1 &lt;&lt; i))<br>        tc += e[i].cost;<br>      bc &lt;?= tc;<br>      bad:;<br>  }<br>  return bc;<br>    }<br>};<br><br><br><br>// Powered by FileEdit<br></td>