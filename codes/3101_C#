<td class="problemText" colspan="8" valign="middle" align="left">
            using System; using System.Collections; using System.Text; using System.Text.RegularExpressions;<br>public class LakeDepth { public int depth(string[] P) {<br>int X=P[0].Length, Y=P.Length;<br> <br>int best=0;<br>int[,] a = new int[X,Y];<br>int[,] b = new int[X,Y];<br>for (int i=1; i&lt;X-1; i++) for (int j=1; j&lt;Y-1; j++) a[i,j] = 999;<br>for (int i=0; i&lt;X; i++) for (int j=0; j&lt;Y; j++) b[i,j] = (int)P[j][i];<br> <br>for (int t=0; t&lt;2500; t++)<br> for (int i=0; i&lt;X; i++) for (int j=0; j&lt;Y; j++)<br>  {<br>  int z = a[i,j];<br>  if (i&gt;0) z = Math.Min(z, Math.Max(a[i-1,j],b[i-1,j]));<br>  if (i&lt;X-1) z = Math.Min(z, Math.Max(a[i+1,j],b[i+1,j]));<br>  if (j&gt;0) z = Math.Min(z, Math.Max(a[i,j-1],b[i,j-1]));<br>  if (j&lt;Y-1) z = Math.Min(z, Math.Max(a[i,j+1],b[i,j+1]));<br>  a[i,j] = z;<br>  }<br> <br>for (int i=0; i&lt;X; i++) for (int j=0; j&lt;Y; j++)<br> best = Math.Max(best, a[i,j]-b[i,j]);<br> <br>//WS(a,X,Y);<br>//WL();<br>//WS(b,X,Y);<br> <br>return best;<br>}<br> <br> <br>bool Test(int x, int y) { return (x&amp;(1&lt;&lt;y))!=0; }<br> <br>ArrayList AR { get { return new ArrayList(); }}<br>Hashtable MAP { get { return new Hashtable(); }}<br> <br>int[] IA(ArrayList ar) { return (int[]) ar.ToArray(typeof(int)); }<br>string[] SA(ArrayList ar) { return (string[]) ar.ToArray(typeof(String)); }<br> <br>int INT(Object o) { return Convert.ToInt32(o.ToString()); }<br>long LONG(Object o) { return Convert.ToInt64(o.ToString()); }<br>double DOUBLE(Object o) { return Convert.ToDouble(o.ToString()); }<br> <br>bool NextPerm(int[] a)<br>{<br>int N=a.Length;<br>for (int i=N-2; i&gt;=0; i--) if (a[i]&lt;a[i+1])<br> {<br> Array.Reverse(a, i+1, N-i-1);<br> for (int j=i+1; ; j++) if (a[i] &lt; a[j])<br>  { int t=a[i]; a[i]=a[j]; a[j]=t; return true; }<br> }<br> <br>return false;<br>}<br> <br>void WL() { Console.WriteLine(""); }<br>void WS(params Object[] a) { foreach (Object x in a) Console.Write("{0} ", x); }<br>void WSL(params Object[] a) { WS(a); WL(); }<br>void WS(Array a, int X) { for (int x=0; x&lt;X; x++) WS(a.GetValue(x)); WL(); }<br>void WS(Array a, int X, int Y) { for (int y=0; y&lt;Y; y++) { for (int x=0; x&lt;X; x++) WS(a.GetValue(x,y)); WL(); }}<br> <br>}<br></td>