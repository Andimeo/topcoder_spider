<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI; typedef vector&lt;VI&gt; VVI;<br>typedef vector&lt;string&gt; VS; typedef vector&lt;VS&gt; VVS;<br>typedef long long i64; typedef unsigned long long u64;<br><br>VS p;<br>int n;<br>int maxd;<br>int h[51][51];<br>int u[51][51];<br><br>void doit(int x, int y) {<br>  if( x &lt; 0 || y &lt; 0 || x &gt;= p[0].size() || y &gt;= p.size() ) {<br>    maxd = 1000000;<br>    return;<br>  }<br>  if( u[y][x] || !h[y][x] ) return;<br>  u[y][x] = 1;<br>  maxd &gt;?= n-p[y][x]+1;<br>  doit(x+1, y);<br>  doit(x-1, y);<br>  doit(x, y-1);<br>  doit(x, y+1);<br>}<br><br>class LakeDepth {<br>public:<br>int depth(vector &lt;string&gt; plot) {<br>  p = plot;<br>  int i, j, k, x, y, z;<br>  int ret = 0;<br><br>  for( n = 32; n &lt;= 126; n++ ) {<br>    for( y = 0; y &lt; plot.size(); y++ )<br>    for( x = 0; x &lt; plot[y].size(); x++ )<br>      h[y][x] = (plot[y][x] &lt;= n);<br>    memset(u, 0, sizeof(u));<br>    for( y = 0; y &lt; plot.size(); y++ )<br>    for( x = 0; x &lt; plot[y].size(); x++ ) if( !u[y][x] &amp;&amp; h[y][x] ) {<br>      maxd = 0;<br>      doit(x, y);<br>      if( maxd &lt; 1000000 ) ret &gt;?= maxd;<br>    }<br>  }<br>  return ret;<br>}<br>};<br><br><br>// Powered by FileEdit<br></td>