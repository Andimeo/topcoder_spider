<td class="problemText" colspan="8" valign="middle" align="left">
            /*<br> * ALL HOPE ABANDON, YE WHO ENTER HERE<br> */<br> <br> <br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iterator&gt;<br>#include &lt;iostream&gt;<br>#include &lt;math.h&gt;<br>#include &lt;stdio.h&gt;<br> <br>using namespace std;<br> <br>#define fi(a, b) for(int i=((int)(a)); i &lt; ((int)(b)); i++)<br>#define fj(a, b) for(int j=((int)(a)); j &lt; ((int)(b)); j++)<br>#define fk(a, b) for(int k=((int)(a)); k &lt; ((int)(b)); k++)<br>#define fl(a, b) for(int l=((int)(a)); l &lt; ((int)(b)); l++)<br>#define fdi(a, b) for(int i=((int)(a)); i &gt; ((int)(b)); i--)<br>#define fdj(a, b) for(int j=((int)(a)); j &gt; ((int)(b)); j--)<br>#define fdk(a, b) for(int k=((int)(a)); k &gt; ((int)(b)); k--)<br>#define fdl(a, b) for(int l=((int)(a)); l &gt; ((int)(b)); l--)<br>#define ri(b) for(int i=0; i &lt; ((int)(b)); i++)<br>#define rj(b) for(int j=0; j &lt; ((int)(b)); j++)<br>#define rk(b) for(int k=0; k &lt; ((int)(b)); k++)<br>#define rl(b) for(int l=0; l &lt; ((int)(b)); l++)<br> <br>#define itadj for(int adx=-1; adx&lt;=1; adx++) for(int ady=-1; ady&lt;=1; ady++)<br>#define chkadj(i, j, n, m) ((i)&gt;=0&amp;&amp;(j)&gt;=0&amp;&amp;(i)&lt;n&amp;&amp;(j)&lt;m)<br>#define fe(v,it) for(__typeof(v.begin()) it=v.begin(); it != v.end(); it++)<br> <br>#define ll  long long<br>#define i64 long long<br>#define lint long long<br>#define i32 int<br>typedef string str;<br>typedef double dbl;<br> <br>#define bz(a) memset(a,0,sizeof(a))<br>#define sq(x) ((x)*(x))<br> <br>#define vi  vector&lt; int &gt;<br>#define vvi vector&lt; vector&lt; int &gt; &gt;<br>#define vs  vector&lt; string &gt;<br>#define vvs vector&lt; vector&lt; string &gt; &gt;<br>#define vd  vector&lt; dbl &gt;<br>#define vvd vector&lt; vector&lt; dbl &gt; &gt;<br>#define vl  vector&lt; ll &gt;<br> <br>#define MAX(a,b) ((a)&gt;(b)?(a):(b))<br>#define MIN(a,b) ((a)&gt;(b)?(b):(a))<br>#define ABS(a)   MAX((a),-(a))<br> <br>#define vp(v,a)  (v).push_back(a)<br>#define vpob(v) (v).pop_back()<br>#define vpof(v) (v).pop_front()<br> <br>#define va(v) (v).begin(), (v).end()<br>#define vf(v,a) find(va(v),(a))<br>#define ve(v,a) (vf(v,a)!=(v).end())<br>#define vins(v,a) do { if (!ve(v,a)) vpb(v, a); } while(0)<br>#define vind(v,a) (ve(v,a)?(vf(v,a)-v.begin()):-1)<br>#define vdel(v,a) v.erase(remove(va(v),a),v.end())<br> <br>#define sz size()<br> <br>#define mp(x, y) make_pair(x, y)<br>#define mt(x, y, z) mp(mp(x,y),z)<br> <br>#define pfst(p) (p).first<br>#define pscd(p) (p).second<br> <br>#define tfst(t) (t).first.first<br>#define tscd(t) (t).first.second<br>#define tthd(t) (t).second<br> <br>typedef pair&lt;int, int&gt; pii;<br>typedef pair&lt;str, str&gt; pss;<br> <br>typedef pair&lt; pii, int &gt; tii;<br> <br>#define dbg_vint(v) do { copy(va(v),ostream_iterator&lt;int&gt;(cout,"\t")); cout &lt;&lt; endl; } while(0)<br>#define dbg_vstr(v) do { copy(va(v),ostream_iterator&lt;str&gt;(cout,"\n")); cout &lt;&lt; endl; } while(0)<br>#define dbg_vdbl(v) do { copy(va(v),ostream_iterator&lt;dbl&gt;(cout,"\t")); cout &lt;&lt; endl; } while(0)<br> <br>#define pq priority_queue<br> <br>class FolderSize {<br>public:<br>  vector &lt;int&gt; FolderSize::calculateWaste(vector &lt;string&gt;, int, int);<br>};<br> <br>vector &lt;int&gt; FolderSize::calculateWaste(vector &lt;string&gt; files, int folderCount, int clusterSize) {<br>  vi ret(folderCount,0);<br>  <br>  ri(files.sz)<br>  {<br>    istringstream st(files[i]);<br>    int f,s;<br>    st&gt;&gt;f&gt;&gt;s;<br>    <br>    int w;<br>    w=s-(s/clusterSize)*clusterSize;<br>    if (w!=0) w=clusterSize-w;<br>    <br>    ret[f]+=w;<br>  }  <br>  <br>  return ret;<br>}<br> <br>#if 1<br>double test0() {<br>  string t0[] = {"0 55", "0 47", "1 86"};<br>  vector &lt;string&gt; p0(t0, t0+sizeof(t0)/sizeof(string));<br>  int p1 = 3;<br>  int p2 = 50;<br>  FolderSize * obj = new FolderSize();<br>  clock_t start = clock();<br>  vector &lt;int&gt; my_answer = obj-&gt;calculateWaste(p0, p1, p2);<br>  clock_t end = clock();<br>  delete obj;<br>  cout &lt;&lt;"Time: " &lt;&lt;(double)(end-start)/CLOCKS_PER_SEC &lt;&lt;" seconds" &lt;&lt;endl;<br>  int t3[] = { 48,  14,  0 };<br>  vector &lt;int&gt; p3(t3, t3+sizeof(t3)/sizeof(int));<br>  cout &lt;&lt;"Desired answer: " &lt;&lt;endl;<br>  cout &lt;&lt;"\t{ ";<br>  if (p3.size() &gt; 0) {<br>    cout &lt;&lt;p3[0];<br>    for (int i=1; i&lt;p3.size(); i++)<br>      cout &lt;&lt;", " &lt;&lt;p3[i];<br>    cout &lt;&lt;" }" &lt;&lt;endl;<br>  }<br>  else<br>    cout &lt;&lt;"}" &lt;&lt;endl;<br>  cout &lt;&lt;endl &lt;&lt;"Your answer: " &lt;&lt;endl;<br>  cout &lt;&lt;"\t{ ";<br>  if (my_answer.size() &gt; 0) {<br>    cout &lt;&lt;my_answer[0];<br>    for (int i=1; i&lt;my_answer.size(); i++)<br>      cout &lt;&lt;", " &lt;&lt;my_answer[i];<br>    cout &lt;&lt;" }" &lt;&lt;endl;<br>  }<br>  else<br>    cout &lt;&lt;"}" &lt;&lt;endl;<br>  if (my_answer != p3) {<br>    cout &lt;&lt;"DOESN'T MATCH!!!!" &lt;&lt;endl &lt;&lt;endl;<br>    return -1;<br>  }<br>  else {<br>    cout &lt;&lt;"Match :-)" &lt;&lt;endl &lt;&lt;endl;<br>    return (double)(end-start)/CLOCKS_PER_SEC;  //I want to eventually turn this into a time of some kind.<br>  }<br>}<br>double test1() {<br>  string t0[] = {"0 123", "2 456", "4 789", "6 012", "8 345"};<br>  vector &lt;string&gt; p0(t0, t0+sizeof(t0)/sizeof(string));<br>  int p1 = 10;<br>  int p2 = 98;<br>  FolderSize * obj = new FolderSize();<br>  clock_t start = clock();<br>  vector &lt;int&gt; my_answer = obj-&gt;calculateWaste(p0, p1, p2);<br>  clock_t end = clock();<br>  delete obj;<br>  cout &lt;&lt;"Time: " &lt;&lt;(double)(end-start)/CLOCKS_PER_SEC &lt;&lt;" seconds" &lt;&lt;endl;<br>  int t3[] = { 73,  0,  34,  0,  93,  0,  86,  0,  47,  0 };<br>  vector &lt;int&gt; p3(t3, t3+sizeof(t3)/sizeof(int));<br>  cout &lt;&lt;"Desired answer: " &lt;&lt;endl;<br>  cout &lt;&lt;"\t{ ";<br>  if (p3.size() &gt; 0) {<br>    cout &lt;&lt;p3[0];<br>    for (int i=1; i&lt;p3.size(); i++)<br>      cout &lt;&lt;", " &lt;&lt;p3[i];<br>    cout &lt;&lt;" }" &lt;&lt;endl;<br>  }<br>  else<br>    cout &lt;&lt;"}" &lt;&lt;endl;<br>  cout &lt;&lt;endl &lt;&lt;"Your answer: " &lt;&lt;endl;<br>  cout &lt;&lt;"\t{ ";<br>  if (my_answer.size() &gt; 0) {<br>    cout &lt;&lt;my_answer[0];<br>    for (int i=1; i&lt;my_answer.size(); i++)<br>      cout &lt;&lt;", " &lt;&lt;my_answer[i];<br>    cout &lt;&lt;" }" &lt;&lt;endl;<br>  }<br>  else<br>    cout &lt;&lt;"}" &lt;&lt;endl;<br>  if (my_answer != p3) {<br>    cout &lt;&lt;"DOESN'T MATCH!!!!" &lt;&lt;endl &lt;&lt;endl;<br>    return -1;<br>  }<br>  else {<br>    cout &lt;&lt;"Match :-)" &lt;&lt;endl &lt;&lt;endl;<br>    return (double)(end-start)/CLOCKS_PER_SEC;  //I want to eventually turn this into a time of some kind.<br>  }<br>}<br>double test2() {<br>  string t0[] = {};<br>  vector &lt;string&gt; p0(t0, t0+sizeof(t0)/sizeof(string));<br>  int p1 = 5;<br>  int p2 = 100;<br>  FolderSize * obj = new FolderSize();<br>  clock_t start = clock();<br>  vector &lt;int&gt; my_answer = obj-&gt;calculateWaste(p0, p1, p2);<br>  clock_t end = clock();<br>  delete obj;<br>  cout &lt;&lt;"Time: " &lt;&lt;(double)(end-start)/CLOCKS_PER_SEC &lt;&lt;" seconds" &lt;&lt;endl;<br>  int t3[] = { 0,  0,  0,  0,  0 };<br>  vector &lt;int&gt; p3(t3, t3+sizeof(t3)/sizeof(int));<br>  cout &lt;&lt;"Desired answer: " &lt;&lt;endl;<br>  cout &lt;&lt;"\t{ ";<br>  if (p3.size() &gt; 0) {<br>    cout &lt;&lt;p3[0];<br>    for (int i=1; i&lt;p3.size(); i++)<br>      cout &lt;&lt;", " &lt;&lt;p3[i];<br>    cout &lt;&lt;" }" &lt;&lt;endl;<br>  }<br>  else<br>    cout &lt;&lt;"}" &lt;&lt;endl;<br>  cout &lt;&lt;endl &lt;&lt;"Your answer: " &lt;&lt;endl;<br>  cout &lt;&lt;"\t{ ";<br>  if (my_answer.size() &gt; 0) {<br>    cout &lt;&lt;my_answer[0];<br>    for (int i=1; i&lt;my_answer.size(); i++)<br>      cout &lt;&lt;", " &lt;&lt;my_answer[i];<br>    cout &lt;&lt;" }" &lt;&lt;endl;<br>  }<br>  else<br>    cout &lt;&lt;"}" &lt;&lt;endl;<br>  if (my_answer != p3) {<br>    cout &lt;&lt;"DOESN'T MATCH!!!!" &lt;&lt;endl &lt;&lt;endl;<br>    return -1;<br>  }<br>  else {<br>    cout &lt;&lt;"Match :-)" &lt;&lt;endl &lt;&lt;endl;<br>    return (double)(end-start)/CLOCKS_PER_SEC;  //I want to eventually turn this into a time of some kind.<br>  }<br>}<br>double test3() {<br>  string t0[] = {"0 93842", "1 493784", "2 43212", "3 99327", "4 456209",<br>"5 947243", "6 59348", "7 58237", "8 5834", "9 492384",<br>"0 58342", "3 538432", "6 1432", "9 453983", "2 4321",<br>"4 583729", "6 6974", "8 9864", "4 43211", "8 38437"};<br>  vector &lt;string&gt; p0(t0, t0+sizeof(t0)/sizeof(string));<br>  int p1 = 10;<br>  int p2 = 22485;<br>  FolderSize * obj = new FolderSize();<br>  clock_t start = clock();<br>  vector &lt;int&gt; my_answer = obj-&gt;calculateWaste(p0, p1, p2);<br>  clock_t end = clock();<br>  delete obj;<br>  cout &lt;&lt;"Time: " &lt;&lt;(double)(end-start)/CLOCKS_PER_SEC &lt;&lt;" seconds" &lt;&lt;endl;<br>  int t3[] = { 27696,  886,  19922,  14306,  18616,  19612,  44671,  9218,  35805,  20488 };<br>  vector &lt;int&gt; p3(t3, t3+sizeof(t3)/sizeof(int));<br>  cout &lt;&lt;"Desired answer: " &lt;&lt;endl;<br>  cout &lt;&lt;"\t{ ";<br>  if (p3.size() &gt; 0) {<br>    cout &lt;&lt;p3[0];<br>    for (int i=1; i&lt;p3.size(); i++)<br>      cout &lt;&lt;", " &lt;&lt;p3[i];<br>    cout &lt;&lt;" }" &lt;&lt;endl;<br>  }<br>  else<br>    cout &lt;&lt;"}" &lt;&lt;endl;<br>  cout &lt;&lt;endl &lt;&lt;"Your answer: " &lt;&lt;endl;<br>  cout &lt;&lt;"\t{ ";<br>  if (my_answer.size() &gt; 0) {<br>    cout &lt;&lt;my_answer[0];<br>    for (int i=1; i&lt;my_answer.size(); i++)<br>      cout &lt;&lt;", " &lt;&lt;my_answer[i];<br>    cout &lt;&lt;" }" &lt;&lt;endl;<br>  }<br>  else<br>    cout &lt;&lt;"}" &lt;&lt;endl;<br>  if (my_answer != p3) {<br>    cout &lt;&lt;"DOESN'T MATCH!!!!" &lt;&lt;endl &lt;&lt;endl;<br>    return -1;<br>  }<br>  else {<br>    cout &lt;&lt;"Match :-)" &lt;&lt;endl &lt;&lt;endl;<br>    return (double)(end-start)/CLOCKS_PER_SEC;  //I want to eventually turn this into a time of some kind.<br>  }<br>}<br> <br>#endif<br>//Powered by [KawigiEdit]<br></td>