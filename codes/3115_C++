<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;  typedef vector&lt;vector&lt;int&gt; &gt; VVI;<br>typedef vector&lt;string&gt; VS;  typedef vector&lt;vector&lt;string&gt; &gt; VVS;<br>typedef signed long long i64;  typedef unsigned long long u64;<br><br>vector&lt;string&gt; tokenize(string s, string ch) {<br>  vector&lt;string&gt; ret;<br>  for( int p = 0, p2; p &lt; s.size(); p = p2+1 ) {<br>    p2 = s.find_first_of(ch, p);<br>    if( p2 == -1 ) p2 = s.size();<br>    if( p2-p &gt; 0 ) ret.push_back( s.substr(p, p2-p) );<br>  }<br>  return ret;<br>}<br><br>vector&lt;int&gt; tokint(string s, string ch) {<br>  vector&lt;int&gt; ret;<br>  vector&lt;string&gt; p = tokenize(s, ch);<br>  for( int i = 0; i &lt; p.size(); i++ )<br>    ret.push_back( atoi(p[i].c_str()) );<br>  return ret;<br>}<br><br>vector&lt;vector&lt;int&gt; &gt; tokmat(vector&lt;string&gt; s, string ch) {<br>  vector&lt;vector&lt;int&gt; &gt; ret;<br>  for( int i = 0; i &lt; s.size(); i++ )<br>    ret.push_back( tokint(s[i], ch) );<br>  return ret;<br>}<br><br>int pref[15][30];<br><br>class OrderFood {<br>public:<br>int selectEntrees(vector &lt;int&gt; a, vector &lt;string&gt; b) {<br>  int i, j, k, x, y, z, n;<br><br>  VVI t = tokmat(b, " ");<br>  for( i = 0; i &lt; t.size(); i++ )<br>  for( j = 0; j &lt; t[i].size(); j++ )<br>    pref[i][t[i][j]] = 1;<br>  n = a.size()/2;<br>  map&lt;VI, int&gt; m;<br>  for( i = 0; i &lt; (1&lt;&lt;n); i++ ) {<br>    VI v(t.size());<br>    for( j = 0; j &lt; n; j++ ) if( i&amp;(1&lt;&lt;j) )<br>    for( k = 0; k &lt; t.size(); k++ )<br>      v[k] += pref[k][j];<br>    for( j = 0; j &lt; t.size(); j++ ) if( v[j] &gt; 2 ) break;<br>    if( j &lt; t.size() ) continue;<br>    x = 0;<br>    for( j = 0; j &lt; n; j++ ) if( i&amp;(1&lt;&lt;j) )<br>      x += a[j];<br>    if( m.count(v) )<br>      m[v] &lt;?= x;<br>    else<br>      m[v] = x;<br>  }<br>  int n2 = a.size()-n;<br>  int ret = 1000000000;<br>  for( i = 0; i &lt; (1&lt;&lt;n2); i++ ) {<br>    VI v(t.size(), 2);<br>    for( j = 0; j &lt; n2; j++ ) if( i&amp;(1&lt;&lt;j) )<br>    for( k = 0; k &lt; t.size(); k++ )<br>      v[k] -= pref[k][j+n];<br>    for( j = 0; j &lt; t.size(); j++ ) if( v[j] &lt; 0 ) break;<br>    if( j &lt; t.size() ) continue;<br>    x = 0;<br>    for( j = 0; j &lt; n2; j++ ) if( i&amp;(1&lt;&lt;j) )<br>      x += a[j+n];<br>    if( !m.count(v) ) continue;<br>    ret &lt;?= x + m[v];<br>  }<br>  if( ret == 1000000000 ) return -1;<br>  return ret;<br>}<br>};<br></td>