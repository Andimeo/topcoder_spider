<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cmath&gt;<br><br>using namespace std;<br><br><br>int memo[32768][16];<br>  <br>class TurntableService {<br>  public:<br>  <br>  int entree[15],n;<br>  <br>  int go(int done, int pos)<br>  {<br>    if (done==(1&lt;&lt;n)-1) return 0;<br>    <br>    int &amp;best=memo[done][pos];<br>    if (best&gt;=0) return best;<br>    best=999999999;<br>    <br>    for(int rot=0;rot&lt;n;rot++) {<br>      int rtime=0;<br>      if (rot&gt;0) rtime=1+(rot&lt;?(n-rot));<br>      int npos=(pos+rot)%n;<br>      <br>      int d=done;<br>      for(int i=0;i&lt;n;i++) {<br>        int dish=(npos+i)%n;<br>        if ((1&lt;&lt;dish)&amp;entree[i])<br>          d|=(1&lt;&lt;i);<br>      }<br>      if (d!=done) {<br>        int t=go(d,(pos+rot)%n)+rtime+15;<br>        if (t&lt;best) best=t;<br>      }        <br>    }<br>    <br>    return best;<br>  }<br>  <br>  int calculateTime(vector &lt;string&gt; favorites) {<br>    n=favorites.size();<br>    for(int i=0;i&lt;n;i++) {<br>      int m=0,j;<br>      istringstream ss(favorites[i]);      <br>      while (ss &gt;&gt; j) m |= (1&lt;&lt;j);<br>      entree[i]=m;<br>    }<br>    memset(memo,-1,sizeof(memo));<br>    return go(0,0);<br>  }<br>};<br><br><br>// Powered by FileEdit<br></td>