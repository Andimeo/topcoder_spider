<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class TurntableService {<br>  public int calculateTime(String[] favorites) {<br>    int n = favorites.length;<br>    boolean[][] likes = new boolean[n][n];<br>    for (int i=0; i &lt; n; ++i) {<br>      String[] tokens = favorites[i].split(" +");<br>      for (int j=0; j &lt; tokens.length; ++j) {<br>        likes[i][Integer.parseInt(tokens[j])] = true;<br>      }<br>    }<br>    int[][] best = new int[1&lt;&lt;n][n];<br>    for (int mask=1; mask &lt; best.length; ++mask) {<br>      for (int p=0; p &lt; n; ++p) {<br>        best[mask][p] = INF;<br>        int mask2 = mask;<br>        // serve everybody with a favorite in front of him<br>        for (int i=0; i &lt; n; ++i) {<br>          int dish = (i+p)%n;<br>          if ((mask &amp; (1&lt;&lt;i)) != 0 &amp;&amp; likes[i][dish]) {<br>            mask2 -= 1&lt;&lt;i;<br>          }<br>        }<br>        if (mask2 != mask) {<br>          for (int pp=0; pp &lt; n; ++pp) {<br>            if (p == pp) continue;<br>            int dist = Math.abs(p-pp);<br>            dist = Math.min(dist,n-dist);<br>            int t = (mask2 == 0 ? 0 : dist+1);<br>            best[mask][p] = Math.min(best[mask][p],15+t+best[mask2][pp]);<br>          }<br>        }<br>      }<br>    }<br>    int r = best[(1&lt;&lt;n)-1][0];<br>    for (int p=1; p &lt; n; ++p) {<br>      int dist = Math.min(p,n-p);<br>      r = Math.min(r,dist+1+best[(1&lt;&lt;n)-1][p]);<br>    }<br>    return r;<br>  }<br>  <br>  static final int INF = 1000000;<br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>