<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;set&gt;<br>#include &lt;iostream&gt;<br>#include &lt;map&gt;<br> <br>#define i64 long long<br> <br>using namespace std;<br> <br>vector&lt; string &gt; tokenize( string in, string kar ) {<br>  string::iterator cp = in.begin();<br>  vector&lt; string &gt; oot;<br>  while( cp != in.end() ) {<br>    while( cp != in.end() &amp;&amp; count( kar.begin(), kar.end(), *cp ) )<br>      cp++;<br>    if( cp != in.end() )<br>      oot.push_back( string( cp, find_first_of( cp, in.end(), kar.begin(), kar.end() ) ) );<br>    cp = find_first_of( cp, in.end(), kar.begin(), kar.end() );<br>  };<br>  return oot;<br>};<br> <br>int mths[] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };<br> <br>vector&lt; pair&lt; int, pair&lt; int, int &gt; &gt; &gt; vd;<br> <br>i64 dist( i64 a, i64 b ) {<br>  return a * a + b * b; };<br> <br>class Birds {<br>public:<br>  int isMigratory( vector&lt; string &gt; baz ) {<br>    map&lt; int, pair&lt; int, int &gt; &gt; detz;<br>    int i;<br>    for( i = 0; i &lt; baz.size(); i++ ) {<br>      vector&lt; string &gt; toki = tokenize( baz[ i ], "," );<br>      int mth = atoi( toki[ 2 ].c_str() );<br>      int d = 0;<br>      mth--;<br>      while( mth ) {<br>        d += mths[ mth - 1 ];<br>        mth--;<br>      };<br>      d += atoi( toki[ 3 ].c_str() );<br>      d--;<br>      detz[ d ] = make_pair( atoi( toki[ 0 ].c_str() ), atoi( toki[ 1 ].c_str() ) );<br>    }<br> <br>    detz[ 365 ] = make_pair( 0, 0 );<br> <br>    vd = vector&lt; pair&lt; int, pair&lt; int, int &gt; &gt; &gt;( detz.begin(), detz.end() );<br> <br>    int j;<br>    int k;<br>    int l;<br>    for( i = 0; i &lt; vd.size(); i++ ) {<br>      for( j = i + 1; j &lt; vd.size(); j++ ) {<br>        if( vd[ j ].first - vd[ i ].first &lt; 90 )<br>          continue;<br>        for( k = j; k &lt; vd.size(); k++ ) {<br>          for( l = k + 1; l &lt; vd.size(); l++ ) {<br>            if( vd[ l ].first - vd[ k ].first &lt; 90 )<br>              continue;<br>                        <br>            int i1;<br>            int i2;<br>            bool iv = true;<br>            for( i1 = i; i1 &lt; j &amp;&amp; iv; i1++ ) {<br>              for( i2 = k; i2 &lt; l &amp;&amp; iv; i2++ ) {<br>                if( dist( vd[ i1 ].second.first - vd[ i2 ].second.first,<br>                  vd[ i1 ].second.second - vd[ i2 ].second.second ) &lt; 1000000 )<br>                  iv = false;<br>              }<br>            }<br>            if( iv )<br>              return 1;<br>          <br>          }<br>        }<br>      }<br>    }<br> <br>    return 0;<br> <br>  }<br>};<br></td>