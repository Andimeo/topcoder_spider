<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br><br>class Brok implements Comparable {<br><br>  long t,n=1;<br><br>  Brok(long teller,long nevner) {t=teller; n=nevner;}<br><br>  public String toString() {<br>    return t+"/"+n;<br>  }<br>  public int compareTo(Object o) {<br>    Brok b = (Brok)o;<br>    long diff = t*b.n-b.t*n;<br>    if (diff &lt; 0) return -1;<br>    if (diff &gt; 0) return  1;<br>    return 0;<br>  }<br>}<br><br>public class NthFraction {<br><br>  int gcd(int a, int b) {int c;while (a!=0) {c = a;a = b%a;b = c;}return b;}<br><br>  ArrayList al = new ArrayList();<br><br><br>    public String getFraction(int N, int bound) {<br>        --N;<br>    for (int b=1; b&lt;=bound; ++b) {<br>      for (int a=1; a&lt;=b; ++a) {<br>        int d = gcd(a,b);<br>        if (d&gt;1) continue;<br>        al.add(new Brok(a,b));<br>      }<br>    }<br>    int sett = al.size();<br>    Brok[] arr = new Brok[sett];<br>    al.toArray(arr);<br>    Arrays.sort(arr);<br>    int hele = N/sett;<br>    int mod = N%sett;<br>    Brok bas = arr[mod];<br>    bas.t += hele*bas.n;<br>    return bas.toString();<br>  }<br><br>  static java.io.PrintStream ut;<br>  void print(int[] v) {for (int i=0; i&lt;v.length; ++i) ut.print(v[i]+" "); ut.println();}<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>