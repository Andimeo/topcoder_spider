<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;iostream&gt;<br>using namespace std;<br> <br>class YahtzeeRoll {<br>  public:<br>  double score (vector &lt;int&gt; dice) {<br>    int n[7] = {0, 0, 0, 0, 0, 0, 0};<br>    for (int i = 0; i &lt; 5; i++)<br>      n[dice[i]]++;<br>    for (int i = 1; i &lt;= 6; i++)<br>      if (n[i] == 5) return 50;<br>    if ((!n[1] &amp;&amp; n[2] &amp;&amp; n[3] &amp;&amp; n[4] &amp;&amp; n[5] &amp;&amp; n[6]) || (n[1] &amp;&amp; n[2] &amp;&amp; n[3] &amp;&amp; n[4] &amp;&amp; n[5] &amp;&amp; !n[6])) return 40;<br>    if ((n[1] &amp;&amp; n[2] &amp;&amp; n[3] &amp;&amp; n[4]) || (n[2] &amp;&amp; n[3] &amp;&amp; n[4] &amp;&amp; n[5]) || (n[3] &amp;&amp; n[4] &amp;&amp; n[5] &amp;&amp; n[6])) return 30;<br>    <br>    for (int i = 1; i &lt;= 6; i++)<br>      if (n[i] == 3)<br>        for (int j = 1; j &lt;= 6; j++)<br>          if (n[j] == 2)<br>            return 25;<br>    return 0;  <br>  }<br>  <br>  double bestChoice(vector &lt;int&gt; dice) {<br>    //cout &lt;&lt; score (dice);<br>    double max = 0, temp = 0;<br>    <br>    for (int reroll = 0; reroll &lt; 32; reroll++) {<br>      temp = 0;<br>      vector &lt;int&gt; d (dice);<br>      for (int roll = 0; roll &lt; 7776; roll++) {<br>        int ii = 1, cont = 0;<br>        for (int i = 0; i &lt; 5 ; i++) {<br>          d[i] = roll / ii % 6 + 1;<br>          //cout &lt;&lt; d[i] &lt;&lt; " ";<br>          ii *= 6;<br>        }<br>        cont = 0;<br>        for (int i = 0; i &lt; 5; i++)<br>          if (!(reroll &amp; (1 &lt;&lt; i)) &amp;&amp; d[i] != dice[i]) {<br>            //cout &lt;&lt; " *" &lt;&lt; endl;<br>            cont = 1;<br>          }<br>        if (cont) continue;<br>  //      for (int i = 0; i &lt; 5; i++)<br>  //        cout &lt;&lt; d[i] &lt;&lt; " ";<br>  //      cout &lt;&lt; score (d) &lt;&lt; endl;<br>        temp += score (d);<br>      }<br>  //    double dv = 1;<br>      for (int i = 0; i &lt; 5; i++)<br>        if (reroll &amp; (1 &lt;&lt; i)) {<br>          temp /= 6;<br>  //        dv *= 6;<br>  //        cout &lt;&lt; "#";<br>      }<br> <br>      if (temp &gt; max) max = temp;<br>    }<br>    return max;<br>  }<br>};<br> <br> <br>// Powered by PopsEdit<br></td>