<td class="problemText" colspan="8" valign="middle" align="left">
            // Warning: less successful challenges against me than against tomek.<br>// I'm now automatically removing unused stuff.<br><br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>typedef long double ld;<br><br>#define LS &lt;<br>#define Size(x) (int(x.size()))<br>#define LET(k,val) typeof(val) k = (val)<br>// execute "act", and return "val" as an expression result<br>#define CLC(act,val) (*({act; static typeof(val) CLCR; CLCR = (val); &amp;CLCR;}))<br><br>// All macros with parameters "k,a,b" run the "k" variable in range [a,b)<br>#define FOR(k,a,b) for(typeof(a) k=(a); k LS (b); ++k)<br><br>// Standard mathematical quantifiers, plus tools to implement them<br>// find the first k in [a,b) that satisfies cond, or b if none<br>#define FIRST(k,a,b,cond) CLC(LET(k, a); for(; k LS (b); ++k) if(cond) break, k)<br>#define FOLD0(k,a,b,init,act) CLC(LET(k, a); LET(R##k, init); for(; k LS (b); ++k) {act;}, R##k)<br>#define SUMTO(k,a,b,init,x)  FOLD0(k,a,b,init,R##k += (x))<br>#define SUM(k,a,b,x) SUMTO(k,a,b,(typeof(x)) (0), x)<br><br>#line 3 "KingOfTheCourt.cc"<br><br>ld chance[6000][8];<br><br>int newx[6000][8];<br><br>ld curchance[6000];<br><br>int N;<br><br>int encode(int* tab) {<br>  int fac[8] = {1, 1, 2, 6, 24, 120, 720, 5040};<br>  int tab2[7];<br>  FOR(k ,0, N) tab2[k] = tab[k];<br><br>  int sum = 0;<br><br>  for(int t=N-1; t&gt;=0; t--) {<br>    int c = FIRST(k, 0, N, tab2[k] == t);<br>    sum += c * fac[t];<br>    tab2[c] = tab2[t];<br>    }<br>  return sum;<br>  }<br><br>vector&lt;int&gt; ab;<br><br>ld chanceWin(int p0, int p1) {<br>  p0 = ab[p0];<br>  p1 = ab[p1];<br>  ld px = p0 / (p0 + p1 + 0.0);<br>  return px * px;<br>  }<br><br>class KingOfTheCourt {<br>  public:<br>  double chancesOfWinning(vector &lt;int&gt; ability) {<br>    // !FDI<br>    ab = ability;<br><br>    N = Size(ability);<br><br>    int players[7] = {0,1,2,3,4,5,6};<br>    <br>    int nperm = 0;<br>    int fcode = encode(players);<br><br>    do {<br>//    printf("P.\n"); fflush(stdout);<br>      int cod = encode(players);<br><br>      ld chanceLeft = 1;<br>      FOR(t, 1, N) {<br>        ld pc = chanceWin(players[t], players[0]);<br>        chance[cod][t] = chanceLeft * pc;<br>        chanceLeft *= (1-pc);<br>        int players2[7];<br>        FOR(u, 0, N-t) players2[u] = players[u+t];<br>        FOR(u, 0, t) players2[u + (N-t)] = players[u+1];<br>        players2[N-1] = players[0];<br>        newx[cod][t] = encode(players2);<br>        }<br>      chance[cod][0] = players[0] == 0 ? chanceLeft : 0;<br>//    printf("cl = %Lf\n", chance[cod][0]);<br>//    printf("1: %d -&gt; %Lf %d\n", cod, chance[cod][1], newx[cod][1]);<br>      nperm++;<br>      }<br>    while(next_permutation(players, players+N));<br><br>    FOR(q, 0, nperm) curchance[q] = 0;<br><br>    FOR(it, 0, 2000)<br>    FOR(q, 0, nperm) curchance[q] =<br>      chance[q][0] +<br>      SUM(t, 1, N,<br>        chance[q][t] * curchance[newx[q][t]]<br>        );<br>    <br>    return curchance[fcode];<br>    }<br>  };<br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>