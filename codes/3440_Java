<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class KingOfTheCourt {<br>  int[] fact = new int[8];<br>  boolean[] used = new boolean[8];<br>  int[] p = new int[8];<br><br>  double[][] coeff = new double[5040][7];<br>  int[][] ind = new int[5040][7];<br>  double[] free = new double[5040];<br><br>  double[] abl = new double[7];<br><br>  int n=0;<br>  int pnum=-1;<br><br>  public void rec(int pos) {<br>    if (pos == n) {<br>      pnum++;<br>      double pr = 1;<br>      for (int i=1; i &lt; n; i++) {<br>        coeff[pnum][i-1] = pr * (abl[p[i]] / (abl[p[i]] + abl[p[0]])) * (abl[p[i]] / (abl[p[i]] + abl[p[0]]));<br>        ind[pnum][i-1] = 0;<br>        <br>        int[] tp = new int[8];<br>        int tpos=0;<br>        for (int j=i; j&lt;n; j++) {<br>          tp[tpos++] = p[j];<br>        }<br>        for (int j=1; j&lt;i; j++) {<br>          tp[tpos++] = p[j];<br>        }<br>        tp[tpos++] = p[0];<br><br>        for (int j=0; j &lt; n; j++) {<br>          for (int k=j+1; k &lt; n; k++) {<br>            if (tp[j] &gt; tp[k]) {<br>              ind[pnum][i-1] += fact[n-j-1];<br>            }<br>          }<br>        }<br>        pr = pr * (1 - (abl[p[i]] / (abl[p[i]] + abl[p[0]])) * (abl[p[i]] / (abl[p[i]] + abl[p[0]])));<br>      }<br>      if (p[0] == 0) {<br>        free[pnum] = pr;<br>      } else {<br>        free[pnum] = 0;<br>      }<br>      return;<br>    }<br>    for (int i=0; i &lt; n; i++) {<br>      if (!used[i]) {<br>        used[i] = true;<br>        p[pos] = i;<br>        rec(pos+1);<br>        used[i] = false;<br>      }<br>    }<br>  }<br><br>    public double chancesOfWinning(int[] ability) {<br>  fact[0] = 1;<br>  fact[1] = 1;<br>  for (int i=2; i &lt; 8; i++) {<br>    fact[i] = fact[i-1] * i;<br>  }<br>  <br>  n = ability.length;<br>  for (int i=0; i &lt; n; i++) {<br>    abl[i] = ability[i];<br>  }<br>  Arrays.fill(used, false);<br>  rec(0);<br>  double[] res = new double[5040];<br>  double[] newres = new double[5040];<br>  Arrays.fill(res, 0);<br>  for (int it=0; it &lt; 100; it++) {<br>    Arrays.fill(newres, 0);<br>    for (int i=0; i &lt; fact[n]; i++) {<br>      for (int j=0; j+1&lt;n; j++) {<br>        newres[i] += res[ind[i][j]] * coeff[i][j];<br>      }<br>      newres[i] += free[i];<br>    }<br>    for (int i=0; i &lt; fact[n]; i++) {<br>      res[i] = newres[i];<br>    }<br>  }<br>  return res[0];<br>    }<br><br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>