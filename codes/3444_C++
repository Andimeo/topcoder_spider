<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;  typedef vector&lt;vector&lt;int&gt; &gt; VVI;<br>typedef vector&lt;string&gt; VS;  typedef vector&lt;vector&lt;string&gt; &gt; VVS;<br>typedef signed long long i64;  typedef unsigned long long u64;<br><br>int seen[50][50];<br><br>class WalkingHome {<br>public:<br>int fewestCrossings(vector &lt;string&gt; a) {<br>  int i, j, k, x, y, z, n;<br><br>  vector&lt;pair&lt;int, int&gt; &gt; q;<br>  for( y = 0; y &lt; a.size(); y++ )<br>  for( x = 0; x &lt; a[0].size(); x++ )<br>    if( a[y][x] == 'S' ) q.push_back(make_pair(x, y));<br>  n = 0;<br>  while( !q.empty() ) {<br>    vector&lt;pair&lt;int, int&gt; &gt; q2;<br>    while( !q.empty() ) {<br>      x = q.back().first; y = q.back().second; q.pop_back();<br>      if( seen[y][x] ) continue;<br>      seen[y][x] = 1;<br>cout &lt;&lt; x &lt;&lt; ' ' &lt;&lt; y &lt;&lt; ' ' &lt;&lt; n &lt;&lt; endl;<br>      if( a[y][x] == 'H' ) return n;<br>      for( z = x+1; z &lt; a[0].size() &amp;&amp; a[y][z] == '|'; z++ );<br>      if( z &lt; a[0].size() &amp;&amp; (a[y][z] == '.' || a[y][z] == 'S' || a[y][z] == 'H') ) {<br>        if( z == x+1 ) q.push_back(make_pair(z, y));<br>        else q2.push_back(make_pair(z, y));<br>      }<br>      for( z = x-1; z &gt;= 0 &amp;&amp; a[y][z] == '|'; z-- );<br>      if( z &gt;= 0 &amp;&amp; (a[y][z] == '.' || a[y][z] == 'S' || a[y][z] == 'H') ) {<br>        if( z == x-1 ) q.push_back(make_pair(z, y));<br>        else q2.push_back(make_pair(z, y));<br>      }<br>      for( z = y+1; z &lt; a.size() &amp;&amp; a[z][x] == '-'; z++ );<br>      if( z &lt; a.size() &amp;&amp; (a[z][x] == '.' || a[z][x] == 'S' || a[z][x] == 'H') ) {<br>        if( z == y+1 ) q.push_back(make_pair(x, z));<br>        else q2.push_back(make_pair(x, z));<br>      }<br>      for( z = y-1; z &gt;= 0 &amp;&amp; a[z][x] == '-'; z-- );<br>      if( z &gt;= 0 &amp;&amp; (a[z][x] == '.' || a[z][x] == 'S' || a[z][x] == 'H') ) {<br>        if( z == y-1 ) q.push_back(make_pair(x, z));<br>        else q2.push_back(make_pair(x, z));<br>      }<br>    }<br>    q = q2;<br>    n++;<br>  }<br>  return -1;<br>}<br>};<br><br><br>// Powered by FileEdit<br></td>