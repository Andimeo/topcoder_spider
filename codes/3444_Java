<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class WalkingHome {<br>  int oo = 100100100;<br>  int m, n;  <br>  char[][] b;<br>  int[][] d;<br>  boolean[][] chua;<br>  int sx, sy, hx, hy;<br>  int[] dx = {-1,0,1,0};<br>  int[] dy = {0,1,0,-1};  <br>  char[] hh = {'-','|','-','|'};<br>  <br>  boolean in(int x, int y) {<br>    return (0&lt;=x&amp;&amp;x&lt;m&amp;&amp;0&lt;=y&amp;&amp;y&lt;n);<br>  }<br>  <br>  boolean ok(int i, int j) {<br>    return (b[i][j]=='.')||(b[i][j]=='H')||(b[i][j]=='S');<br>  }<br>  <br>  public int fewestCrossings(String[] map) {<br>    m = map.length;<br>    n = map[0].length();<br>    b = new char[m][n];<br>    for (int i=0; i&lt;m; i++)<br>    for (int j=0; j&lt;n; j++) {<br>      b[i][j] = map[i].charAt(j);<br>      if (b[i][j]=='S') { sx = i; sy = j; }<br>      if (b[i][j]=='H') { hx = i; hy = j; }<br>    }<br>    <br>    d = new int[m][n];<br>    chua = new boolean[m][n];<br>    <br>    for (int i=0; i&lt;m; i++)<br>    for (int j=0; j&lt;n; j++) d[i][j] = oo;<br>    <br>    for (int i=0; i&lt;m; i++) <br>    for (int j=0; j&lt;n; j++) chua[i][j] = true;<br>    <br>    d[sx][sy] = 0;<br>    chua[sx][sy] = false;<br>    int lastx = sx, lasty = sy;<br>    <br>    while (1==1) {<br>      for (int h=0; h&lt;4; h++) {<br>        int x = lastx + dx[h], y = lasty + dy[h];<br>        int ts = 0;<br>        while (in(x,y)&amp;&amp;b[x][y]==hh[h]) {<br>          x = x + dx[h]; <br>          y = y + dy[h];<br>          ts = 1;<br>        }<br>        if (!in(x,y)) continue;<br>        if (ok(x,y)&amp;&amp;chua[x][y]&amp;&amp;d[x][y]&gt;d[lastx][lasty]+ts) d[x][y] = d[lastx][lasty] + ts;                <br>      }<br>      <br>      int min = oo;<br>      for (int i=0; i&lt;m; i++)<br>      for (int j=0; j&lt;n; j++)<br>      if (chua[i][j]&amp;&amp;d[i][j]&lt;min) {<br>        min = d[i][j];<br>        lastx = i;<br>        lasty = j;<br>      }<br>      if (min == oo) return -1;<br>//      System.out.println(lastx+" "+lasty+" "+min);<br>      if (lastx==hx&amp;&amp;lasty==hy) return min;<br>      chua[lastx][lasty] = false;<br>    }<br>    return -1;<br>  }<br>  <br>}<br> <br>// Powered by PopsEdit<br>// Powered by CodeProcessor<br></td>