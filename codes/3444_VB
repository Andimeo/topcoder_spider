<td class="problemText" colspan="8" valign="middle" align="left">
            Public Class WalkingHome<br>        Dim a(,) As Integer<br>        Dim m(,) As Char<br>        Public Function fewestCrossings(ByVal map As String()) As Integer<br>            ReDim a(map.GetUpperBound(0) + 2, map(0).Length + 1)<br>            ReDim m(map.GetUpperBound(0) + 2, map(0).Length + 1)<br>            Dim i, j, k As Integer<br>            Dim iEnd, jEnd As Integer<br> <br>            For i = 1 To m.GetUpperBound(0) - 1<br>                For j = 1 To m.GetUpperBound(1) - 1<br>                    m(i, j) = map(i - 1).Substring(j - 1, 1)<br>                    If m(i, j) = "*" Then m(i, j) = "F"<br>                Next<br>            Next<br> <br>            For i = 0 To a.GetUpperBound(0)<br>                m(i, 0) = "F"<br>                m(i, a.GetUpperBound(1)) = "F"<br>            Next<br> <br>            For j = 0 To a.GetUpperBound(1)<br>                m(0, j) = "F"<br>                m(a.GetUpperBound(0), j) = "F"<br>            Next<br> <br>            For i = 0 To a.GetUpperBound(0)<br>                For j = 0 To a.GetUpperBound(1)<br>                    If m(i, j) &lt;&gt; "S" Then<br>                        a(i, j) = 10000<br>                    Else<br>                        a(i, j) = 0<br>                    End If<br>                    If m(i, j) = "H" Then<br>                        iEnd = i<br>                        jEnd = j<br>                        m(i, j) = "."<br>                    End If<br>                Next<br>            Next<br> <br>            Dim iTurn As Integer = 0<br>            Dim bFound As Boolean = False<br>            Dim bProgress As Boolean = True<br> <br>            Do While Not bFound And iTurn &lt; 2500<br>                bProgress = True<br>                Do While bProgress<br>                    bProgress = False<br>                    For i = 0 To m.GetUpperBound(0)<br>                        For j = 0 To m.GetUpperBound(1)<br>                            If a(i, j) = iTurn Then<br>                                If m(i + 1, j) = "." And a(i + 1, j) &gt; iTurn Then<br>                                    a(i + 1, j) = iTurn<br>                                    bProgress = True<br>                                End If<br> <br>                                If m(i - 1, j) = "." And a(i - 1, j) &gt; iTurn Then<br>                                    a(i - 1, j) = iTurn<br>                                    bProgress = True<br>                                End If<br> <br>                                If m(i, j + 1) = "." And a(i, j + 1) &gt; iTurn Then<br>                                    a(i, j + 1) = iTurn<br>                                    bProgress = True<br>                                End If<br> <br>                                If m(i, j - 1) = "." And a(i, j - 1) &gt; iTurn Then<br>                                    a(i, j - 1) = iTurn<br>                                    bProgress = True<br>                                End If<br> <br>                                If m(i + 1, j) = "-" Then CrossDown(i + 1, j, iTurn)<br>                                If m(i - 1, j) = "-" Then CrossUp(i - 1, j, iTurn)<br>                                If m(i, j + 1) = "|" Then CrossRight(i, j + 1, iTurn)<br>                                If m(i, j - 1) = "|" Then CrossLeft(i, j - 1, iTurn)<br>                            End If<br>                        Next<br>                    Next<br>                Loop<br>                If a(iEnd, jEnd) &lt; 10000 Then Return a(iEnd, jEnd)<br>                iTurn += 1<br>            Loop<br> <br>            Return -1<br> <br>        End Function<br> <br>        Private Function CrossDown(ByVal i As Integer, ByVal j As Integer, ByVal iTurn As Integer)<br>            Do While m(i, j) = "-"<br>                i += 1<br>            Loop<br> <br>            If m(i, j) = "." Then<br>                If a(i, j) &gt; iTurn + 1 Then a(i, j) = iTurn + 1<br>            End If<br>        End Function<br> <br>        Private Function CrossUp(ByVal i As Integer, ByVal j As Integer, ByVal iTurn As Integer)<br>            Do While m(i, j) = "-"<br>                i -= 1<br>            Loop<br> <br>            If m(i, j) = "." Then<br>                If a(i, j) &gt; iTurn + 1 Then a(i, j) = iTurn + 1<br>            End If<br>        End Function<br> <br>        Private Function CrossRight(ByVal i As Integer, ByVal j As Integer, ByVal iTurn As Integer)<br>            Do While m(i, j) = "|"<br>                j += 1<br>            Loop<br> <br>            If m(i, j) = "." Then<br>                If a(i, j) &gt; iTurn + 1 Then a(i, j) = iTurn + 1<br>            End If<br>        End Function<br> <br>        Private Function CrossLeft(ByVal i As Integer, ByVal j As Integer, ByVal iTurn As Integer)<br>            Do While m(i, j) = "|"<br>                j -= 1<br>            Loop<br> <br>            If m(i, j) = "." Then<br>                If a(i, j) &gt; iTurn + 1 Then a(i, j) = iTurn + 1<br>            End If<br>        End Function<br>    End Class<br></td>