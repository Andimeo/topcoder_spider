<td class="problemText" colspan="8" valign="middle" align="left">
            /*<br>*/<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;iostream&gt;<br>#include &lt;list&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;sstream&gt;<br>using namespace std;<br><br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br>typedef VI::iterator VII;<br>typedef VS::iterator VSI;<br>typedef string::iterator SI;<br><br>template&lt;typename T&gt; void sort(T t) { sort(t.begin(), t.end()); }<br>template&lt;typename T, typename C&gt; void sort(T t, C c = less&lt;T&gt;()) { sort(t.begin(), t.end(), c); }<br><br>#ifdef MSVC<br>typedef __int64 LL;<br>#else<br>typedef long long LL;<br>#endif<br><br>class PointLifeGame<br>{<br>    typedef pair&lt;size_t, size_t&gt; P;<br>    typedef vector&lt;P&gt; VP;<br><br>    struct PS<br>    {<br>        bool operator()(const P&amp; a, const P&amp; b)<br>        {<br>            if(a.second != b.second)<br>            {<br>                return a.second &gt; b.second;<br>            }<br><br>            return a.first &gt; b.first;<br>        }<br>        <br>    };<br><br>    P mid(const P&amp; a, const P&amp; b)<br>    {<br>        P m;<br>        m.first = a.first + b.first;<br>        m.second = a.second + b.second;<br>        return m;<br>    }<br>    <br>    VP round(const VP&amp; vp)<br>    {<br>        VP r;<br>        for(size_t i = 0; i &lt; vp.size(); ++i)<br>        {<br>            for(size_t j = i+1; j &lt; vp.size(); ++j)<br>            {<br>                r.push_back(mid(vp[i], vp[j]));<br>            }<br>        }<br><br>        sort(r.begin(), r.end(), PS());<br>        <br>        VP rt;<br>        unique_copy(r.begin(), r.end(), back_inserter(rt));<br><br>        if(rt.size() &gt; 10)<br>        {<br>            VP rtt(rt.begin(), rt.begin() + 10);<br>            return rtt;<br>        }<br><br>        return rt;<br>    }<br>    <br>  public:<br>    string<br>    simulate(vector &lt;int&gt; xs, vector &lt;int&gt; ys, int rnds)<br>    {<br>        VP vp;<br><br>        for(size_t i = 0; i &lt; xs.size(); ++i)<br>        {<br>            vp.push_back(make_pair(xs[i], ys[i]));<br>        }<br>        <br>        <br>        for(int r = 0; r &lt; rnds; ++r)<br>        {<br>            vp = round(vp);<br>            //cout &lt;&lt; "round done" &lt;&lt; endl;<br>        }<br><br>        char buffer[50];<br>        {<br>            <br>            double p = pow(2.0, rnds);<br>            double x = vp[0].first / p;<br>            double y = vp[0].second / p;<br>            x = floor(x * 10000) / 10000;<br>            y = floor(y * 10000) / 10000;<br>            //cout &lt;&lt; x &lt;&lt; " " &lt;&lt; y &lt;&lt; endl;<br>            sprintf(buffer, "%09.04f %09.04f", x, y);<br>        }<br><br>        string s = buffer;<br>        return s;<br>    }<br><br>    <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>