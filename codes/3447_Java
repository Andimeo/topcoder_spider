<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class PointLifeGame<br>{<br>  class TPoint extends Object implements Comparable{<br>    double x,y;<br>    TPoint(double x, double y){<br>      this.x = x;<br>      this.y = y;<br>    }<br>    public int compareTo(Object o){<br>      //implement<br>      TPoint tp = (TPoint)o;<br>      if(y&gt;tp.y) return -1;<br>      if(y&lt;tp.y) return 1;<br>      if(x&gt;tp.x) return -1;<br>      if(x&lt;tp.x) return 1;<br>      return 0;<br>    }<br>    public String toString(){<br>      String xx = "" + x;<br>      String yy = "" + y;<br>      while(xx.indexOf('.')&lt;4)<br>        xx = "0"+xx;<br>      while(yy.indexOf('.')&lt;4)<br>        yy = "0"+yy;<br>      while(xx.length()&lt;9)<br>        xx+="0";<br>      while(yy.length()&lt;9)<br>        yy+="0";  <br>      return xx.substring(0,9) + " " +yy.substring(0,9);<br>    }<br>    public boolean equals(Object o){<br>      TPoint tp = (TPoint) o;<br>      if(Math.abs(tp.x-x)&lt;=1.0E-4 &amp;&amp; Math.abs(tp.y-y)&lt;=1.0E-4)<br>        return true;<br>      return false;<br>    }<br>    public int hashCode(){<br>      return 0;<br>    }<br>  }<br>      <br>  public String simulate(int[] xs, int[] ys, int rnds)<br>  {<br>    ArrayList al;// = new ArrayList();<br>    HashSet hs = new HashSet();<br>    for(int i=0; i&lt;xs.length; i++){<br>      TPoint tp = new TPoint((double)xs[i],(double)ys[i]);<br>      hs.add(tp);<br>    }<br>    for(int i=0; i&lt;rnds; i++){<br>      //al = new ArrayList(hs);<br>      HashSet hs2 = new HashSet();<br>      <br>      TPoint[] t = (TPoint[])(new ArrayList(hs)).toArray(new TPoint[]{});<br>      Arrays.sort(t);<br>      int max = rnds-i+1;<br>      for(int j=0; j&lt;max &amp;&amp; j&lt;t.length; j++){<br>        <br>        for(int k=j+1; k&lt;max &amp;&amp; k&lt;t.length; k++){<br>          //add midpoints to hs2<br>          //double x =<br>          TPoint p1 = t[j];//(TPoint)al.get(j);<br>          TPoint p2 = t[k];//(TPoint)al.get(k);<br>          double x = Math.abs((p1.x+p2.x)/2.0);<br>          double y = Math.abs((p1.y+p2.y)/2.0);<br>          hs2.add(new TPoint(x,y));<br>        }<br>      }<br>      hs = hs2;<br>    }<br>    TPoint[] t = (TPoint[])(new ArrayList(hs)).toArray(new TPoint[]{});<br>    Arrays.sort(t);<br>    return t[0].toString();<br>  }<br> <br>  <br> <br>}<br>//Powered by [KawigiEdit]<br></td>