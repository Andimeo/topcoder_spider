<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;stdio.h&gt;<br><br>using namespace std;<br><br>class MinePut{<br>  public:<br>  <br>  long q[30][30],qp;<br>  long c[100];<br>  long sp;<br>  long stp[100];<br>  long st[100][30];<br>  long best;<br>  <br>  void dfs (long cur, long tot) {<br>    if (sp - cur + tot &lt;= best)<br>      return;<br>    if (cur == sp) {<br>      best = tot;<br>      return;<br>      }<br>    <br>    long i,j;<br>    <br>    j = 1;<br>    for (i=0;i&lt;stp[cur];i++) {<br>      c[st[cur][i]] --;<br>      if (c[st[cur][i]] &lt; 0)<br>        j = 0;<br>      }<br>    if (j)<br>      dfs(cur+1, tot+1);<br>    for (i=0;i&lt;stp[cur];i++)<br>      c[st[cur][i]] ++;<br>    dfs(cur+1, tot);<br>    }<br>  <br>  int getMines(vector &lt;string&gt; b) {<br>    long i,j,k,l;<br>    <br>    qp = 0;<br>    for (i=0;i&lt;b.size();i++)<br>      for (j=0;j&lt;b[i].size();j++)<br>        if (b[i][j] &gt;= '0' &amp;&amp; b[i][j] &lt;= '9') {<br>          q[i][j] = qp;<br>          c[qp] = b[i][j] - '0';<br>          qp ++;<br>          }<br>    sp = 0;<br>    for (i=0;i&lt;b.size();i++)<br>      for (j=0;j&lt;b[i].size();j++)<br>        if (b[i][j] == '.') {<br>          stp[sp] = 0;<br>          for (k=i-1;k&lt;=i+1;k++)<br>            for (l=j-1;l&lt;=j+1;l++)<br>              if (k &gt;= 0 &amp;&amp; k &lt; b.size() &amp;&amp; l &gt;= 0 &amp;&amp; l &lt; b[0].size() &amp;&amp; (i != k || j != l) &amp;&amp; b[k][l] != '.')<br>                st[sp][stp[sp]++] = q[k][l];<br>          sp ++;<br>          }<br>//    printf("%ld\n",sp);<br>    best = 0;<br>    dfs(0,0);<br>    return best;<br>    }<br>  };<br></td>