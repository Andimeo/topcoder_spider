<td class="problemText" colspan="8" valign="middle" align="left">
            public class MinePut<br>{<br>  public int getMines(String[] A)<br>  {<br>    int cR = A.length;<br>    int cC = A[0].length();<br>    int N = cR * cC;<br><br>    int res = 0;<br>    for ( int mask = 0; mask &lt; (1 &lt;&lt; N); ++mask )<br>    {<br>      if ( Integer.bitCount(mask) &lt;= res )<br>        continue;<br><br>      int B[][] = new int[cR][cC];<br>      int i = 0;<br>      for ( i = 0; i &lt; N; ++i )<br>        if ( (mask &amp; (1 &lt;&lt; i)) &gt; 0 )<br>        {<br>          int r = i / cC;<br>          int c = i % cC;<br>          if ( A[r].charAt(c) != '.' )<br>            break;<br><br>          for ( int dr = -1; dr &lt;= 1; ++dr )<br>            for ( int dc = -1; dc &lt;= 1; ++dc )<br>              if ( dr != 0 || dc != 0 )<br>              {<br>                int r1 = r + dr;<br>                int c1 = c + dc;<br>                if ( r1 &lt; 0 || r1 &gt;= cR || c1 &lt; 0 || c1 &gt;= cC )<br>                  continue;<br>                ++B[r1][c1];<br>              }<br>        }<br>      if ( i &lt; N )<br>        continue;<br><br>      boolean f = true;<br>      for ( int r = 0; r &lt; cR; ++r )<br>        for ( int c = 0; c &lt; cC; ++c )<br>          if ( A[r].charAt(c) != '.' &amp;&amp; B[r][c] &gt; A[r].charAt(c) - '0' )<br>          {<br>            f = false;<br>          }<br>      if ( f )<br>        res = Integer.bitCount(mask);<br>    }<br>    return res;<br>  }<br><br>}<br></td>