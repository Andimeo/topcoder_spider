<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br><br>using namespace std;<br><br>#define sz(X) ((signed)(X).size())<br>#define IN(_L,_V , _H) (((_L)&lt;=(_V)) &amp;&amp; ((_V)&lt;=(_H)))<br>#define junik(X) {sort( (X).begin(), (X).end() ); (X).erase( unique( (X).begin(), (X).end() ), (X).end() ); }<br>template&lt;class T&gt; vector&lt;T&gt; tokenize_to(const string &amp;str) { vector&lt;T&gt; r; T x; istringstream is(str); while (is &gt;&gt; x) r.push_back(x); return r; }<br><br>class BlackAndRed {<br>   public:<br><br>   int isprobaj(string x) {<br>      int sum=0;<br>      int i, n=sz(x);<br>      for (i=0;i&lt;n;i++) {<br>         if (x[i]=='B') sum++; else sum--;<br>         if (sum&lt;0) return 0;<br>      }<br>      return 1;<br>   }<br><br><br>   int cut(string deck) {<br>      int i;<br>      string newdeck;<br><br>      for (i=0;i&lt;sz(deck);i++) {<br>         newdeck=deck.substr(i)+deck.substr(i, sz(deck)-i+1);<br>         if (isprobaj(newdeck)) return i;<br>      }<br><br>      return sz(deck)-1;<br><br><br><br>   }<br><br><br><br><br><br><br><br><br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>