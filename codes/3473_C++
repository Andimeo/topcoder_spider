<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt; // sorting, searching<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;utility&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br>#define REP(i,n) for(int _n=n, i=0;i&lt;_n;++i)<br>template&lt;class T&gt; inline int size(const T&amp;c) { return c.size(); }<br> <br>int sx,sy;<br>bool mine[64][64];<br>bool vis[64][64];<br> <br>int dxs[] = {1,0,-1,0};<br>int dys[] = {0,1,0,-1};<br> <br>inline bool inbounds(int x,int y) {<br>  return x&gt;=0 &amp;&amp; x&lt;sx &amp;&amp; y&gt;=0 &amp;&amp; y&lt;sy;<br>}<br> <br>bool cango(int x,int y,int dx,int dy) {<br>  while(inbounds(x,y)) {<br>    if(mine[x][y]) return false;<br>    x+=dx; y+=dy;<br>  }<br>  return true;<br>}<br> <br>void dfs(int x,int y) {<br>  if(!inbounds(x,y)) return;<br>  if(vis[x][y]) return;<br>  vis[x][y]=true;<br>  REP(i,4) {<br>    int dx = dxs[i];<br>    int dy = dys[i];<br>    if(cango(x,y,dx,dy)) dfs(x+dx,y+dy);<br>  }<br>}<br> <br>struct LandMines {<br> <br>  // MAIN<br>  int numClear(vector &lt;string&gt; layout) {<br>    sy = size(layout);<br>    sx = size(layout[0]);<br>    REP(x,sx) REP(y,sy) mine[x][y] = layout[y][x]=='M';<br>    REP(x,sx) REP(y,sy) vis[x][y]=false;<br>    dfs(0,0);<br>    int res=0;<br>    REP(x,sx) REP(y,sy) res += vis[x][y];<br>    return res;<br>  }<br> <br>};<br> <br>// Powered by FileEdit<br> <br>// Powered by TomekAI<br>// Powered by TZTester 1.01 [25-Feb-2003]<br> <br>// Powered by CodeProcessor<br></td>