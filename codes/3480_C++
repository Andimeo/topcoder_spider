<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;algorithm&gt;<br>using namespace std;<br> <br>#define V vector<br>#define vi V&lt;int&gt;<br>#define vd V&lt;double&gt;<br> <br>#define fr(x,y,z) for((x)=(y);(x)&lt;(z);(x)++)<br>#define fo(x,y) fr(x,0,y)<br>#define fir(n) fo(i,n)<br>#define fjr(n) fo(j,n)<br>#define fkr(n) fo(k,n)<br>#define fi fir(n)<br>#define fj fjr(n)<br>#define fk fkr(n)<br> <br>#define sz size()<br>#define df double<br> <br>#include &lt;cmath&gt;<br> <br>df pr(df ea, df eb) { return 1.0/(1.0+pow(10.0,(eb-ea)/400.0)); }<br> <br>int b4[20][20];<br> <br>df best[1300000];<br>df score[20][20];<br> <br>int q[1300000],qh,qt;<br>int n;<br> <br>int bc(int b) { int ret=0; while(b) ret++,b&amp;=(b-1); return ret; }<br> <br>void update(int b, df s) {<br>if(best[b]&lt;0) { q[qt++]=b; }<br>best[b]&gt;?=s;<br>}<br> <br>void vis(int b) {<br>int j,k;<br>if(b==(1&lt;&lt;n)-1) return;<br>int bcb=bc(b);<br> <br>fk if(!(b&amp;(1&lt;&lt;k))) {<br>fj if(b4[j][k] &amp;&amp; (!(b&amp;(1&lt;&lt;j)))) break;<br>if(j&lt;n) continue;<br>update(b|(1&lt;&lt;k),best[b]+score[k][bcb]);<br>}<br>}<br> <br>class ChessMatch { public: df bestExpectedScore(vi f, vi g, int lim) {<br>n=f.sz;<br>int i,j,k;<br> <br>fi fj if(f[i]-lim&gt;f[j]) b4[i][j]=1;<br>fi { fj printf("%d ",b4[i][j]); puts(""); }<br>fi fj score[i][j]=pr((df)f[i],(df)g[j]);<br> <br>fir(1&lt;&lt;n) best[i]=-1;<br>best[0]=0.0;<br>qh=0,qt=1,q[0]=0;<br> <br>while(qh&lt;qt) { vis(q[qh]); qh++; }<br> <br>return best[(1&lt;&lt;n)-1];<br> <br>}};<br></td>