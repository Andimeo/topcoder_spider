<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class ChessMatch {<br>  double[] best;<br>  public double bestExpectedScore(int[] teamA, int[] teamB, int lim) {<br>    int n = teamA.length;<br>    best = new double[1&lt;&lt;n];<br>    Arrays.fill(best,-1);<br>    best[0] = 0;<br>    int j,i,nr,lb,aux;<br>    Arrays.sort(teamA);<br>    for (i=0;i&lt;n/2;i++) {<br>      aux = teamA[i];teamA[i] = teamA[n-1-i];teamA[n-1-i] = aux;<br>    }<br>    double[][] score = new double[n][n];<br>    for (i=0;i&lt;n;i++) {<br>      for (j=0;j&lt;n;j++) {<br>        score[i][j] = 1.0/ (1 + Math.pow(10,(teamB[i] - teamA[j])/400.0));<br>      }<br>    }<br>    <br>    for (i =1;i&lt;1&lt;&lt;n;i++) {<br>      nr = 0;<br>      lb = -1;<br>      for (j=0;j&lt;n;j++) {<br>        if ((i&amp;(1&lt;&lt;j))!=0) {<br>          nr++;<br>          lb = j;<br>        }<br>        <br>      }<br>      for (j=0;j&lt;n;j++) {<br>        if ((i&amp;(1&lt;&lt;j))!=0) {<br>          if (teamA[j]-lim&gt;teamA[lb]) continue;<br>          if (best[i] &lt;0||best[i]&lt;best[i-(1&lt;&lt;j)]+ score[nr-1][j]) {<br>            best[i] = best[i-(1&lt;&lt;j)]+score[nr-1][j];<br>          }<br>        }<br>      }<br>    }<br>    <br>    return best[(1&lt;&lt;n)-1];<br>  }<br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>