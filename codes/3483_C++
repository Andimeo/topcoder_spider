<td class="problemText" colspan="8" valign="middle" align="left">
            // another fine solution by misof<br>#include &lt;algorithm&gt;<br> <br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br> <br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cassert&gt;<br>using namespace std;<br> <br>#define REP(i,n) for(int i=0;i&lt;(n);++i)<br>#define FOR(i,a,b) for(int i=(a);i&lt;=(b);++i)<br> <br>/////////////////// CODE WRITTEN DURING THE COMPETITION FOLLOWS ////////////////////////////////<br> <br>#define EPS 1e-9<br> <br>void aadjust(double &amp;d) {<br>  if (d&lt;32) d=32;<br>  if (d&gt;95) d=95;<br>}<br> <br>class AutoAdjust {<br>public:<br>  vector &lt;string&gt; adjust(vector &lt;string&gt; image) {<br>    vector &lt;string&gt; res;<br> <br>    int smallest = 1000;<br>    int largest = -1;<br>    <br>    int R = image.size();<br>    int C = image[0].size();<br> <br>    REP(r,R) REP(c,C) smallest &lt;?= int(image[r][c]);<br>    REP(r,R) REP(c,C) largest &gt;?= int(image[r][c]);<br> <br>    FOR(contr,100,20000) {<br>      int bestb = -1000;<br>      FOR(bright,-100,100) {<br>        double sm = smallest;<br>        double lg = largest;<br>        sm += bright;<br>        lg += bright;<br>        aadjust(sm); aadjust(lg); <br>        sm -= 63.5; sm *= contr; sm /= 100.0; sm += 63.5; sm = round(sm);<br>        lg -= 63.5; lg *= contr; lg /= 100.0; lg += 63.5; lg = round(lg);<br>        aadjust(sm); aadjust(lg); <br>        if (fabs(sm-32)&lt;EPS) if (fabs(lg-95)&lt;EPS) {<br>          if (abs(bright)&lt;abs(bestb)) bestb=bright;<br>        }<br>      }<br>      if (bestb != -1000) {<br>        res = image;<br>        REP(r,R) REP(c,C) {<br>          double val = image[r][c];<br>          val += bestb;<br>          aadjust(val);<br>          val -= 63.5; val *= contr; val /= 100.0; val += 63.5; val = round(val);<br>          aadjust(val);<br>          int z = int(val+EPS);<br>          char ch = char(z);<br>          res[r][c]=ch;<br>        }<br>        return res;<br>      }<br>    }<br>        <br>  }<br> <br>// }}} keep<br>};<br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>