<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;cstdio&gt;<br>using namespace std;<br> <br>#define V(x) vector&lt;x &gt;<br>#define vs V(string)<br>#define vi V(int)<br>#define vd V(double)<br> <br>#define fr(x,y,z) for((x)=(y);(x)&lt;(z);(x)++)<br>#define fo(x,y) fr(x,0,y)<br>#define fir(n) fo(i,n)<br>#define fjr(n) fo(j,n)<br>#define fkr(n) fo(k,n)<br>#define fi fir(n)<br>#define fj fjr(n)<br> <br>#define pb push_back<br>#define sz size()<br>#define cs c_str()<br> <br> <br> <br> <br>vi f;<br>int nc,nf;<br>int best;<br> <br>int g[51][51];<br>int gmin[51][51];<br>//int prev[51][51];<br> <br>#define B 999999999<br>int c[51][51];<br> <br>void go(void) {<br>int i,j,k,b=1,min=1;<br> <br>fir(nf) {<br>c[i][i]=0;<br>for(j=i+1;j&lt;=nf;j++) c[i][j]=c[i][j-1]+f[j-1];<br>}<br> <br>while(1) {<br>fir(nc+1) fjr(nf+1) g[i][j]=gmin[i][j]=B;<br>g[0][0]=0;<br>//gmin[0][0]=B;<br> <br>fir(nc) fjr(nf) for(k=j+1;k&lt;=nf;k++) {<br>if(c[j][k]&gt;=min &amp;&amp; g[i+1][k]&gt;(g[i][j] &gt;? c[j][k])) {<br>//printf("upd %d %d %d\n",i,j,k);<br> <br>g[i+1][k]=(g[i][j] &gt;? c[j][k]);<br>gmin[i+1][k]=gmin[i][j] &lt;? c[j][k];<br>}<br>}<br> <br>//fir(nc+1) { fjr(nf+1) printf("%9d/%9d ",g[i][j],gmin[i][j]); puts(""); }<br> <br>if(g[nc][nf]==B) break;<br>//printf("sol %d %d\n",g[nc][nf],gmin[nc][nf]);<br>best &lt;?= (g[nc][nf]-gmin[nc][nf]);<br>min=gmin[nc][nf]+1;<br>}<br> <br>}<br> <br>class Necklaces { public: int inequity(int nn, vi ff) {<br>f=ff;<br>nc=nn;<br>nf=f.sz;<br>int i,j,k;<br>best=B;<br>for(i=0;i&lt;nf;i++) {<br>go();<br>k=f[0];<br>for(j=0;j&lt;nf-1;j++) f[j]=f[j+1];<br>f[nf-1]=k;<br>}<br>return best;<br>}};<br></td>