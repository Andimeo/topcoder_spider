<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class Necklaces {<br>    public int inequity(int n, int[] gems) {<br>        int m = gems.length;<br>        int best = Integer.MAX_VALUE;<br>        for (int d = 0; d &lt; m; d++) {<br>            int[] g = new int[m];<br>            for (int i = 0; i &lt; m; i++) {<br>                g[i] = gems[(i + d) % m];<br>            }<br> <br>            int[] gs = new int[m + 1];<br>            gs[0] = 0;<br>            for (int i = 1; i &lt;= m; i++) {<br>                gs[i] = gs[i - 1] + g[i - 1];<br>            }<br> <br>            for (int i = 0; i &lt; m; i++) {<br>                int maxx = gs[i + 1];<br> <br>                int[][] a = new int[m + 1][n + 1];<br>                a[0][0] = Integer.MAX_VALUE;<br>                for (int j = 1; j &lt;= m; j++) {<br>                    for (int l = 1; l &lt;= n; l++) {<br>                        for (int p = j - 1; p &gt;= l - 1; p--) {<br>                            int t = gs[j] - gs[p];<br>                            if (t &gt; maxx) {<br>                                break;<br>                            }<br> <br>                            if (a[p][l - 1] != 0) {<br>                                int minn = Math.min(a[p][l - 1], t + 1);<br>                                if (a[j][l] == 0 || minn &gt; a[j][l]) {<br>                                    a[j][l] = minn;<br>                                }<br>                            }<br>                        }<br>                    }<br>                }<br>                if (a[m][n] != 0 &amp;&amp; maxx - a[m][n] + 1 &lt; best) {<br>                    best = maxx - a[m][n] + 1;<br>                }<br>            }<br> <br>        }<br> <br>        return best;<br>    }<br> <br> <br> <br>}<br> <br> <br>// Powered by PopsEdit<br>// Powered by CodeProcessor<br></td>