<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br><br>public class BagsOfGold <br>{<br>  public int netGain(int[] bags) <br>  {<br>    for(int i=0;i&lt;50;i++) for(int j=0;j&lt;50;j++) meLut[i,j] = 999999999;<br>    for(int i=0;i&lt;50;i++) for(int j=0;j&lt;50;j++) themLut[i,j] = 999999999;<br>    return getGoldMe(0,bags.Length - 1, bags);<br>  }<br>  int[,] meLut = new int[50,50];<br>  int[,] themLut = new int[50,50];<br>  public int getGoldMe(int left, int right, int[] bags)<br>  {<br>    if(left == right)<br>    {<br>      return bags[left];<br>    }<br>    if(meLut[left, right] != 999999999) return meLut[left, right];<br>    int res = Math.Max(getGoldHim(left+1,right,bags) + bags[left], getGoldHim(left, right-1, bags) + bags[right]);<br>    meLut[left, right] = res;<br>    return res;<br>  }<br>  public int getGoldHim(int left, int right, int[] bags)<br>  {<br>    if(left == right)<br>    {<br>      return -bags[left];<br>    }<br>    if(themLut[left, right] != 999999999) return themLut[left, right];<br>    int res = Math.Min(getGoldMe(left+1,right,bags) - bags[left], getGoldMe(left, right-1, bags) - bags[right]);<br>    themLut[left, right] = res;<br>    return res;<br>  }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>