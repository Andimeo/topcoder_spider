<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br> <br>#define si size()<br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;string&gt; vs;<br>typedef long long ii;<br>#define rev(A) reverse((A).begin(), (A).end())<br>#define s(A) sort((A).begin(), (A).end())<br> <br>//----------------------------<br> <br>class Predicting {<br>  public:<br>  double avgError(vector &lt;double&gt; a) {<br>    double best = 1e15;<br>    int numpred = a.si - 5;<br>    for (int i = -10; i &lt;= 10; i++) {<br>      for (int j = -10; j &lt;= 10; j++) {<br>        for (int k = -10; k &lt;= 10; k++) {<br>          for (int m = -10; m &lt;= 10; m++) {<br>            int n = 10 - (i+j+k+m);<br>            if (n &lt; -10 || n &gt; 10) continue;<br>            double total = 0;<br>            for (int at = 5; at &lt; a.si; at++) {<br>              double pred = (a[at-5]*i + a[at-4]*j + a[at-3]*k + a[at-2]*m + a[at-1]*n) / 10.0;<br>              total += fabs(pred - a[at]);<br>            }<br>            best &lt;?= total;<br>          }<br>        }<br>      }<br>    }<br>    return best / numpred;<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>