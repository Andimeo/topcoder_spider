<td class="problemText" colspan="8" valign="middle" align="left">
            // Includes<br>#include &lt;algorithm&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;string&gt;<br>#include &lt;sstream&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br> <br>typedef long long ll;<br>typedef long double ld;<br>vector&lt;string&gt; split(string x) {istringstream i(x); vector&lt;string&gt; r; string y; while (i &gt;&gt; y) r.push_back(y); return r;}<br> <br>// Real code<br>map&lt;string,ll&gt; varValue;<br>class TimeAnalysis  {<br>  public:<br>  <br>  ld eval(const string &amp;s) {<br>    int i;<br>    <br>    for (i = 0; i &lt; s.size(); i++)<br>    if (s[i] == '+') {<br>      ld x1 = eval(s.substr(0,i));<br>      ld x2 = eval(s.substr(i+1));<br>      return x1 + x2;<br>    }<br>    <br>    for (i = 0; i &lt; s.size(); i++)<br>    if (s[i] == '*') {<br>      ld x1 = eval(s.substr(0,i));<br>      ld x2 = eval(s.substr(i+1));<br>      return x1 * x2;<br>    }<br>    <br>    for (i = 0; i &lt; s.size(); i++)<br>    if (s[i] == '^') {<br>      ld x1 = eval(s.substr(0,i));<br>      ld x2 = eval(s.substr(i+1));<br>      return pow(x1,x2);<br>    }<br>    <br>    if (s.size() &gt;= 3 &amp;&amp; s[0] == 'l' &amp;&amp; s[1] == 'g' &amp;&amp; s[2] == '(') {<br>      ld val = eval(s.substr(3, s.size() - 4));<br>      return log(val) / log(ld(2));<br>    }<br>    <br>    if (s[0] &gt;= '0' &amp;&amp; s[0] &lt;= '9') {<br>      return atoi(s.c_str());<br>    }<br>    <br>    return varValue[s];<br>  }<br>  <br>  string time(vector &lt;string&gt; variables, string equation) {<br>    int i;<br>    for (i = 0; i &lt; variables.size(); i++) {<br>      vector&lt;string&gt; x = split(variables[i]);<br>      varValue[x[0]] = atoi(x[1].c_str());<br>    }<br>    <br>    ld value = eval(equation);<br>    cout &lt;&lt; value &lt;&lt; " operations" &lt;&lt; endl;<br>    int numUnits = 8;<br>    string unitName[] = {"nanoseconds", "microseconds", "milliseconds", "seconds", "minutes", "hours", "days", "years"};<br>    ld unitDiv[] = {0, 1e3, 1e3, 1e3, 60, 60, 24, 365, 1};<br>    <br>    for (int i = 1; ; i++) {<br>      ld newValue = value / unitDiv[i];<br>      if (i == numUnits || newValue &lt; 1) {<br>        ll realValue = ll(value);<br>        ostringstream out;<br>        out &lt;&lt; realValue &lt;&lt; " " &lt;&lt; unitName[i-1];<br>        return out.str();<br>      }<br>      value = newValue;<br>    }<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>