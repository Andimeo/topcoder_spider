<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;algorithm&gt;<br>using namespace std;<br> <br>#define ll long long<br>#define V vector<br>#define vs V&lt;string&gt;<br>#define vi V&lt;int&gt;<br>#define vd V&lt;double&gt;<br> <br>#define fr(x,y,z) for((x)=(y);(x)&lt;(z);(x)++)<br>#define fo(x,y) fr(x,0,y)<br>#define fir(n) fo(i,n)<br>#define fjr(n) fo(j,n)<br>#define fkr(n) fo(k,n)<br>#define flr(n) fo(l,n)<br>#define fi fir(n)<br>#define fj fjr(n)<br>#define fk fkr(n)<br>#define fl flr(n)<br> <br>#define pb push_back<br>#define sz size()<br>#define cs c_str()<br>#define ins(x) insert(x)<br>#define df double<br>#define srt(f) sort(f.begin(),f.end())<br> <br>vs tk(string t,char *d)<br>{<br>  vs ret;<br>  char *buf,*s;<br>  buf=(char *) malloc(t.sz+1);<br>  strcpy(buf,t.cs);<br>  for(s=strtok(buf,d);s;s=strtok(0,d)) ret.push_back(s);<br>  free(buf);<br>  return ret;<br>}<br> <br> <br>vs g;<br>df best[2000];<br>int next[2000];<br> <br> <br>class Justify { public: vs justify(vs f, int w) {<br>int n=f.sz;<br>int i,j,k;<br> <br>fi { vs t=tk(f[i]," "); fjr(t.sz) g.pb(t[j]); }<br>n=g.sz;<br>fi best[i]=w+1;<br> <br>for(i=n-1;i&gt;=0;i--) {<br>int clen=0;<br>for(j=i;j&lt;n;j++) {<br>if(clen) clen++;<br>clen+=g[j].sz;<br>if(clen&gt;w) continue;<br>if(j+1==n) { best[i]=1; next[i]=n; }<br>else {<br>if(j==i) continue;<br>df newbest=best[j+1] &gt;? (1.0+((df) w-clen)/((df) j-i));<br>if(newbest&lt;best[i]) { best[i]=newbest; next[i]=j+1; }<br>}<br>}<br>}<br>vs ret;<br>for(i=0;i&lt;n;i=next[i]) {<br>string s;<br>for(j=i;j&lt;next[i];j++) { if(j&gt;i) s+=" "; s+=g[j]; }<br>ret.pb(s);<br>}<br>printf("%f\n",best[0]);<br>return ret;<br>}};<br></td>