<td class="problemText" colspan="8" valign="middle" align="left">
            // Warning: less successful challenges against me than against tomek.<br>// I'm now automatically removing unused stuff.<br><br>#include &lt;algorithm&gt;<br>using namespace std;<br><br>typedef long double ld;<br><br>#define LS &lt;<br>#define LET(k,val) typeof(val) k = (val)<br>// execute "act", and return "val" as an expression result<br>#define CLC(act,val) (*({act; static typeof(val) CLCR; CLCR = (val); &amp;CLCR;}))<br><br>// All macros with parameters "k,a,b" run the "k" variable in range [a,b)<br>#define FOR(k,a,b) for(typeof(a) k=(a); k LS (b); ++k)<br><br>// Standard mathematical quantifiers, plus tools to implement them<br>#define FOLD0(k,a,b,init,act) CLC(LET(k, a); LET(R##k, init); for(; k LS (b); ++k) {act;}, R##k)<br>#define SUMTO(k,a,b,init,x)  FOLD0(k,a,b,init,R##k += (x))<br>#define SUM(k,a,b,x) SUMTO(k,a,b,(typeof(x)) (0), x)<br><br>#line 3 "ChessKnight.cc"<br><br>ld chance[8][8];<br>ld nchance[8][8];<br><br>int kx[8] = {2,2,1,1,-1,-1,-2,-2};<br>int ky[8] = {1,-1,2,-2,2,-2,1,-1};<br><br>class ChessKnight {<br>  public:<br>  double probability(int x, int y, int n) {<br>    // !FDI<br>    x--; y--;<br>    FOR(a,0,8) FOR(b,0,8) chance[a][b] = 0;<br>    chance[x][y] = 1;<br>    FOR(j,0,n) {<br>      FOR(a,0,8) FOR(b,0,8) nchance[a][b] = 0;<br>      FOR(a,0,8) FOR(b,0,8) FOR(d,0,8) {<br>        if(a+kx[d] &gt;= 0 &amp;&amp; a+kx[d] &lt; 8 &amp;&amp;<br>           b+ky[d] &gt;= 0 &amp;&amp; b+ky[d] &lt; 8) <br>        nchance[a+kx[d]][b+ky[d]] += chance[a][b];<br>        }<br>      FOR(a,0,8) FOR(b,0,8) chance[a][b] = nchance[a][b] / 8;<br>      }<br>    return SUM(a,0,8,SUM(b,0,8,chance[a][b]));<br>    }<br>  };<br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>