<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class QuadrilateralSearch {<br>  static class Point {<br>    double x,y;<br>  }<br>  <br>  public double findLargest(int d, int n, int c, int g) {<br>    int[] idx = new int[c];<br>    int p=0;<br>    for (int i=0; i &lt; c; ++i) {<br>      idx[i] = p;<br>      p = (p+g)%n;<br>    }<br>    Arrays.sort(idx);<br>    Point[] points = new Point[c];<br>    double alpha = 2.0*Math.PI/n;<br>    for (int i=0; i &lt; c; ++i) {<br>      points[i] = new Point();<br>      points[i].x = Math.cos(idx[i]*alpha)*d/2.0;<br>      points[i].y = Math.sin(idx[i]*alpha)*d/2.0;<br>    }<br>    double result = 0.0;<br>    for (int i=0; i &lt; idx.length; ++i) {<br>      for (int j=i+2; j &lt; idx.length; ++j) {<br>        double a_left = 0.0;<br>        for (int k=i+1; k &lt; j; ++k) {<br>          a_left = Math.max(a_left,area(points[i],points[k],points[j]));<br>        }<br>        double a_right = 0.0;<br>        for (int k=j+1; k &lt; idx.length; ++k) {<br>          a_right = Math.max(a_right,area(points[i],points[j],points[k]));<br>        }<br>        for (int k=0; k &lt; i; ++k) {<br>          a_right = Math.max(a_right,area(points[i],points[j],points[k]));<br>        }<br>        result = Math.max(result,a_left+a_right);<br>      }<br>    }<br>    return result/2.0;<br>  }<br>  <br>  private double area(Point a,Point b,Point c) {<br>    return (a.x*b.y-b.x*a.y + b.x*c.y-c.x*b.y + c.x*a.y-a.x*c.y);<br>  }<br>  <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>