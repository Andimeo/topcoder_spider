<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br> <br>public class DeadCode<br>{<br>  private int n;<br>  private bool[,] a;<br>  private bool[] fin;<br>  private bool[] from0;<br>  private bool[] toend;<br> <br>  private void godeep(int v) {<br>    from0[v] = true;<br>    for (int i = 0; i &lt; n; i++)<br>      if (a[v, i] &amp; !from0[i])<br>        godeep(i);<br>  }<br>  <br>  private void goinv(int v) {<br>    toend[v] = true;<br>    for (int i = 0; i &lt; n; i++)<br>      if (a[i, v] &amp; !toend[i])<br>        goinv(i);<br>  }<br> <br>  public int deadCount(string[] code) <br>  {<br>    n = code.Length;<br>    a = new bool[n, n];<br>    fin = new bool[n];<br>    from0 = new bool[n];<br>    toend = new bool[n];<br>    <br> <br>    for (int i = 0; i &lt; n; i++)<br>      for (int j = 0; j &lt; n; j++)<br>        a[i, j] = false;<br>        <br>    for (int i = 0; i &lt; n; i++) {<br>      if (code[i] == "RETURN")<br>        fin[i] = true;<br>      else {<br>        fin[i] = false;<br>        int v1 = int.Parse(code[i].Split()[1]);<br>        int v2 = int.Parse(code[i].Split()[3]);<br>        a[i, v1] = true;<br>        a[i, v2] = true;<br>      }<br>      <br>      from0[i] = false;<br>      toend[i] = false;<br>    }<br>    <br>    godeep(0);<br>    for (int i = 0; i &lt; n; i++)<br>      if (fin[i])<br>        goinv(i);<br>    <br>    int res = n;<br>    for (int i = 0; i &lt; n; i++) {<br>      if (from0[i] &amp; toend[i]) {<br>        res--;<br>      }<br>    }<br>    <br>    return res;<br>  }<br> <br>}<br></td>