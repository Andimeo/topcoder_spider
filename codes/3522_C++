<td class="problemText" colspan="8" valign="middle" align="left">
            // Warning: Challenging may cause loss of 25 points.<br>// I'm now automatically removing unused stuff.<br><br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>typedef long long ll;<br><br>#define LS &lt;<br>#define Size(x) (int(x.size()))<br><br>// All macros with parameters "k,a,b" run the "k" variable in range [a,b)<br>#define FOR(k,a,b) for(typeof(a) k=(a); k LS (b); ++k)<br><br>#line 3 "HanoiDistance.cc"<br><br>int peg[70];<br><br>ll p2(int b) {return (ll(1)) &lt;&lt; b;}<br><br>ll moveAll(int f, int n, int dest) {<br>  if(n==f) return 0;<br>  if(peg[f] == dest) return moveAll(f+1, n, dest);<br>  else return moveAll(f+1, n, 3-dest-peg[f]) + p2(n-f-1);<br>  }<br><br>class HanoiDistance {<br>  public:<br>  long long distance(int n, vector &lt;int&gt; pegA, vector &lt;int&gt; pegB, vector &lt;int&gt; pegC) {<br>    // !FDI<br>    FOR(k,0,Size(pegA)) peg[n-pegA[k]] = 0;<br>    FOR(k,0,Size(pegB)) peg[n-pegB[k]] = 1;<br>    FOR(k,0,Size(pegC)) peg[n-pegC[k]] = 2;<br>    int from = 0;<br>    int to   = 2;<br>    for(int dc=0; dc&lt;n; dc++) {<br>      if(peg[dc] != from &amp;&amp; peg[dc] != to) {<br>        return (moveAll(dc+1, n, from) &lt;? moveAll(dc+1, n, to))<br>          + p2(n-dc-1);<br>        // move dc to 'to'  \ .<br>        // move all to 'to' / 1 &lt;&lt; (n-dc)<br>        }<br>      else {<br>        if(peg[dc] == from) to = 3-from-to;<br>        else if(peg[dc] == to) from = 3-from-to;<br>        }<br>      }<br>    return 0;<br>    }<br>  };<br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>