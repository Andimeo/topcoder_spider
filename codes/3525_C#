<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br><br>public class ContractWork {<br>  int[,] cost;<br>  int[,,] memo = new int[60,60,5];<br>  int numTasks, noComp;<br><br>  int go(int done, int lastCont, int times)<br>  {<br>    int best=int.MaxValue;<br>    if (done==numTasks) return 0;<br>    if (memo[done,lastCont,times] &gt;= 0)<br>      return memo[done,lastCont,times];<br>    for (int i = 0; i &lt; noComp; i++)<br>    {<br>      if (i==lastCont &amp;&amp; times==2) continue;<br>      int sum=cost[i,done]+go(done+1,i,(i==lastCont)?(times+1):1);<br>      if (sum&lt;best)<br>        best=sum;<br>    }<br>    memo[done,lastCont,times]=best;<br>    return best;<br>  }<br><br>  public int minimumCost(string[] costs, int numTasks) {<br>    cost = new int[costs.Length,numTasks];<br>    noComp = costs.Length;<br>    this.numTasks = numTasks;<br>    for (int i = 0; i &lt; 60; i++)<br>      for (int j = 0; j &lt; 60; j++)<br>        for (int k = 0; k &lt; 5; k++)<br>          memo[i,j,k] = -1;<br><br>    for (int i = 0; i &lt; costs.Length; i++)<br>    {<br>      string[] v = costs[i].Split(' ');<br>      for (int j = 0; j &lt; numTasks; j++)<br>      {<br>        cost[i,j] = int.Parse(v[j]);<br>      }<br>    }<br>    <br>    return go(0,0,0);<br>  }<br><br>}<br><br><br>// Powered by FileEdit<br></td>