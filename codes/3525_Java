<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class ContractWork {<br>    public int minimumCost(String[] costs, int numTasks) {<br>        int n = numTasks;<br>        int m = costs.length;<br>        int[][] a = new int[m][n];<br>        for (int i = 0; i &lt; m; i++) {<br>            StringTokenizer st = new StringTokenizer(costs[i]);<br>            for (int j = 0; j &lt; n; j++) {<br>                a[i][j] = Integer.parseInt(st.nextToken());<br>            }<br>        }<br> <br>        int[][][] b = new int[n][m][m];<br>        boolean[][][] c = new boolean[n][m][m];<br>        for (int i = 0; i &lt; m; i++) {<br>            for (int j = 0; j &lt; m; j++) {<br>                b[1][i][j] = a[i][0] + a[j][1];<br>                c[1][i][j] = true;<br>            }<br>        }<br> <br>        for (int i = 2; i &lt; n; i++) {<br>            for (int j = 0; j &lt; m; j++) {<br>                for (int k = 0; k &lt; m; k++) {<br>                    for (int l = 0; l &lt; m; l++) {<br>                        if (l != j || k != j) {<br>                            if (!c[i][l][j] || b[i - 1][k][l] + a[j][i] &lt; b[i][l][j]) {<br>                                b[i][l][j] = b[i - 1][k][l] + a[j][i];<br>                                c[i][l][j] = true;<br>                            }<br>                        }<br>                    }<br>                }<br>            }<br>        }<br> <br>        int best = Integer.MAX_VALUE;<br>        for (int i = 0; i &lt; m; i++) {<br>            for (int j = 0; j &lt; m; j++) {<br>                if (b[n - 1][i][j] &lt; best) {<br>                    best = b[n - 1][i][j];<br>                }<br>            }<br>        }<br>        return best;<br>    }<br> <br>}<br> <br> <br>// Powered by PopsEdit<br>// Powered by CodeProcessor<br></td>