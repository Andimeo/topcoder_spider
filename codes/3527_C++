<td class="problemText" colspan="8" valign="middle" align="left">
            # include &lt;string&gt;<br># include &lt;vector&gt;<br># include &lt;algorithm&gt;<br># include &lt;cstdlib&gt;<br># include &lt;cmath&gt;<br># include &lt;cstdio&gt;<br># include &lt;iostream&gt;<br># include &lt;cstring&gt;<br># include &lt;sstream&gt;<br># include &lt;set&gt;<br># include &lt;queue&gt;<br># include &lt;map&gt;<br># include &lt;deque&gt;<br># include &lt;numeric&gt;<br># include &lt;utility&gt;<br># include &lt;functional&gt;<br><br>using namespace std ;<br><br>map &lt; char , bool &gt; isvowel ;<br><br>bool test ( const string &amp; str )<br>{<br>  for ( int i = 1 ; i &lt; str . length ( ) ; ++ i )<br>  {<br>    if ( i != 1 &amp;&amp; ! isvowel [ str [ i ] ] &amp;&amp; ! isvowel [ str [ i - 1 ] ] &amp;&amp; ! isvowel [ str [ i - 2 ] ] )<br>      return false ;<br>    if ( isvowel [ str [ i ] ] &amp;&amp; isvowel [ str [ i - 1 ] ] &amp;&amp; tolower ( str [ i ] ) != tolower ( str [ i - 1 ] ) )<br>      return false ;<br>  }<br>  return true ;<br>}<br><br>class Pronunciation<br>{<br>public :<br>  string canPronounce ( vector &lt;string&gt; words )<br>  {<br>    isvowel [ 'a' ] = true ;<br>    isvowel [ 'e' ] = true ;<br>    isvowel [ 'i' ] = true ;<br>    isvowel [ 'o' ] = true ;<br>    isvowel [ 'u' ] = true ;<br>    isvowel [ 'A' ] = true ;<br>    isvowel [ 'E' ] = true ;<br>    isvowel [ 'I' ] = true ;<br>    isvowel [ 'O' ] = true ;<br>    isvowel [ 'U' ] = true ;<br>    string res = "" ;<br>    for ( int i = 0 ; i &lt; words . size ( ) ; ++ i )<br>      if ( ! test ( words [ i ] ) )<br>      {<br>        res = words [ i ] ;<br>        break ;<br>      }<br>    return res ;<br>  }<br>  <br> <br>} ;<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>