<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;functional&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;iostream&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;stack&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br>struct edge{<br>  string f,t;<br>  double rate;<br>};<br>struct node{<br>  string wtf;<br>  double amt;<br>};<br>class MoneyExchange {<br>  public:<br>  double bestRate(vector &lt;string&gt; rates, string type1, string type2) {<br>    if (type1==type2)<br>      return 1;<br>    edge a[50];<br>    node ans;<br>    double best=-1;<br>    ans.wtf = type1;<br>    ans.amt = 1;<br>    queue&lt;node&gt; q;<br>    int asdf;<br>    for (int i = 0; i &lt; rates.size(); ++i){<br>      istringstream iss(rates[i]);<br>      iss &gt;&gt; a[i].f &gt;&gt; asdf &gt;&gt; a[i].t &gt;&gt; a[i].rate;<br>      a[i].rate/=asdf;<br>    }<br>    q.push(ans);<br>    node temp,temp2;<br>    int cnt = 0;<br>    while (!q.empty()){<br>      if (++cnt&gt;10000) break;<br>      temp2 = q.front();<br>      q.pop();<br>      for (int i = 0; i &lt; rates.size(); ++i){<br>        temp = temp2;<br>        if (a[i].f==temp.wtf){<br>          temp.wtf = a[i].t;<br>          temp.amt *= a[i].rate;<br>          if (temp.wtf==type2 &amp;&amp; temp.amt&gt;best)<br>            best = temp.amt;            <br>          q.push(temp);<br>        }<br>      }      <br>    }<br>    return best;<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>