<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br>public class RuleEngine {<br>    <br>  static public void o(String s) {<br>    System.out.println(s);<br>  }<br> <br>  static public void main(String[] args) {<br> <br>  }<br> <br>  public String countSets(String[] ruleSet1, String[] ruleSet2) {<br>    int[][] var = new int[26][21];<br>    String[] rule;<br>    boolean []havV = new boolean[26];<br>    for (int i=0; i&lt;=2; i++)<br>    {<br>      if (i==0)<br>        rule = ruleSet1;<br>      else<br>        rule = ruleSet2;<br> <br>      for (int a=0; a&lt;rule.length; a++)<br>      {<br>        for (int n=-10; n&lt;=10; n++)<br>        {<br>          if (!ok(rule[a], n))<br>          {<br>            var[getVar(rule[a])][n+10] = 1;<br>          }<br>          havV[getVar(rule[a])] = true;<br>        }<br>      }<br>    }<br> <br>    BigInteger big = new BigInteger("1");<br>    for (int let=0;let&lt;26; let++)<br>    {<br>      if (!havV[let])<br>        continue;<br>      int c=0;<br>      for (int n=0; n&lt;21; n++)<br>      {<br>        if (var[let][n] == 0)<br>          c++;<br>      }<br>      big = big.multiply(new BigInteger(c+""));<br>    }<br> <br>    return big.toString();<br>  }<br> <br>  int getVar(String r)<br>  {<br>    return r.charAt(0) - 'A';<br>  }<br> <br>  boolean ok(String r, int n)<br>  {<br>    r = r.substring(1);<br>    String op = r.substring(0,2);<br>    if (op.equals("=="))<br>    {<br>      return n == (Integer.parseInt(r.substring(2)));<br>    }<br>    else if (op.equals("&lt;="))<br>      {<br>      return n &lt;= (Integer.parseInt(r.substring(2)));<br>    }<br>    else if (op.equals("&gt;="))<br>      {<br>      return n &gt;= (Integer.parseInt(r.substring(2)));<br>    }<br>    else if (op.equals("!="))<br>      {<br>      return n != (Integer.parseInt(r.substring(2)));<br>    }<br>    <br>    op = r.substring(0,1);<br>    if (op.equals("&lt;"))<br>      return n &lt; (Integer.parseInt(r.substring(1)));<br>    if (op.equals("&gt;"))<br>      return n &gt; (Integer.parseInt(r.substring(1)));<br>    <br>    StringTokenizer st = new StringTokenizer(r.substring(1), ",");<br>    return ((n &gt;= Integer.parseInt(st.nextToken()) ) &amp;&amp; (n&lt;= Integer.parseInt(st.nextToken())));<br>  }<br>}<br> <br>// Powered by PopsEdit<br></td>