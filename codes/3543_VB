<td class="problemText" colspan="8" valign="middle" align="left">
            Public Class ATaleOfThreeCities<br>        Public Function connect(ByVal ax As Integer(), ByVal ay As Integer(), ByVal bx As Integer(), ByVal by As Integer(), ByVal cx As Integer(), ByVal cy As Integer()) As Double<br>            Dim i, j, k As Integer<br>            Dim dABMin, dACMin, dBCMin As Double<br>            dABMin = Double.MaxValue<br>            dACMin = Double.MaxValue<br>            dBCMin = Double.MaxValue<br>            Dim dDist As Double<br>            For i = 0 To ax.GetUpperBound(0)<br>                For j = 0 To bx.GetUpperBound(0)<br>                    dDist = System.Math.Sqrt((ax(i) - bx(j)) ^ 2 + (ay(i) - by(j)) ^ 2)<br>                    If dDist &lt; dABMin Then dABMin = dDist<br>                Next<br> <br>                For j = 0 To cx.GetUpperBound(0)<br>                    dDist = System.Math.Sqrt((ax(i) - cx(j)) ^ 2 + (ay(i) - cy(j)) ^ 2)<br>                    If dDist &lt; dACMin Then dACMin = dDist<br>                Next<br>            Next<br> <br>            For i = 0 To cx.GetUpperBound(0)<br>                For j = 0 To bx.GetUpperBound(0)<br>                    dDist = System.Math.Sqrt((cx(i) - bx(j)) ^ 2 + (cy(i) - by(j)) ^ 2)<br>                    If dDist &lt; dBCMin Then dBCMin = dDist<br>                Next<br>            Next<br> <br>            Dim dMax As Double = dABMin<br>            If dACMin &gt; dMax Then dMax = dACMin<br>            If dBCMin &gt; dMax Then dMax = dBCMin<br> <br>            Return dABMin + dACMin + dBCMin - dMax<br> <br> <br>        End Function<br>    End Class<br></td>