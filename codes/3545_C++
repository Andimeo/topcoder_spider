<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br> <br>using namespace std;<br> <br>class BitStrings {<br>public:<br>  vector &lt;string&gt; *l;<br> <br>  int max(int a, int b) {<br>    return ((a &gt; b) ? a : b);<br>  }<br> <br>  int maxStrings(int i, int numZeroes, int numOnes) {<br>    vector&lt;string&gt; &amp;list = *l;<br>    if (i == list.size()-1) {<br>    for (unsigned int x = 0; x &lt; list[i].size(); ++x) {<br>      if (list[i][x] == '1') --numOnes;<br>      if (list[i][x] == '0') --numZeroes;<br>    }<br>    if ((numOnes | numZeroes) &gt;= 0) return 1; else return 0;<br>    }<br>    const int a = maxStrings(i+1, numZeroes, numOnes);<br>    for (unsigned int x = 0; x &lt; list[i].size(); ++x) {<br>      if (list[i][x] == '1') --numOnes;<br>      if (list[i][x] == '0') --numZeroes;<br>    }<br>    if ((numOnes | numZeroes) &lt; 0) return a;<br>    const int b = 1+ maxStrings(i+1, numZeroes, numOnes);<br>    return max(a, b);<br>  }<br> <br>  int maxStrings(vector &lt;string&gt; list, int numZeroes, int numOnes) {<br>    l = &amp;list;<br>    return maxStrings(0, numZeroes, numOnes);<br>  }<br> <br>};<br></td>