<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class CommentNest {<br>  int[,] best;<br><br>  void got(int a, int b, int c)<br>  {<br>    if (c &gt; best[a, b])<br>      best[a, b] = c;<br>  }<br><br>  public int whatsLeft(string[] lines) {<br>    string data = "";<br><br>    for (int i = 0; i &lt; lines.Length; ++i)<br>      data += lines[i] + "a";<br><br>    int n = data.Length;<br><br>    best = new int[n + 10, n + 10];<br><br>    for (int i = n - 1; i &gt;= 0; --i)<br>    {<br>      best[i, 0] = 0;<br><br>      if (i &lt; n - 1)<br>      {<br>        char c1 = data[i];<br>        char c2 = data[i + 1];<br><br>        switch (c1)<br>        {<br>          case '/':<br>            switch (c2)<br>            {<br>              case '*':<br>                if (i == n - 2 || data[i + 2] != '/')<br>                {<br>                  for (int j = 1; j &lt; n; ++j)<br>                    if (best[i + 2, j] &gt; 0)<br>                      got(i, j - 1, best[i + 2, j] + 2);<br>                }<br>                else<br>                {<br>                  for (int j = 1; j &lt; n; ++j)<br>                    if (best[i + 2, j] &gt; 0)<br>                      got(i, j - 1, best[i + 2, j] + 2);<br>                  for (int j = 0; j &lt; n - 1; ++j)<br>                    if (best[i + 3, j] &gt; 0 || j == 0)<br>                      got(i, j + 1, best[i + 3, j] + 3);<br>                }<br>                break;<br><br>              default:<br>                for (int j = 1; j &lt; n; ++j)<br>                  if (best[i + 1, j] &gt; 0)<br>                    got(i, j, best[i + 1, j] + 1);<br>                break;<br>            }<br>            break;<br><br>          case '*':<br>            switch (c2)<br>            {<br>              case '/':<br>                if (i == n - 2 || data[i + 2] != '*') <br>                {<br>                  for (int j = 0; j &lt; n - 1; ++j)<br>                    if (best[i + 2, j] &gt; 0 || j == 0)<br>                      got(i, j + 1, best[i + 2, j] + 2);<br>                } <br>                else<br>                {<br>                  for (int j = 0; j &lt; n - 1; ++j)<br>                    if (best[i + 2, j] &gt; 0 || j == 0)<br>                      got(i, j + 1, best[i + 2, j] + 2);<br>                  for (int j = 2; j &lt; n; ++j)<br>                    if (best[i + 3, j] &gt; 0)<br>                      got(i, j - 1, best[i + 3, j] + 3);<br>                }<br>                break;<br><br>              default:<br>                for (int j = 1; j &lt; n; ++j)<br>                  if (best[i + 1, j] &gt; 0)<br>                    got(i, j, best[i + 1, j] + 1);<br>                break;<br>            }<br>            break;<br><br>          default:<br>            for (int j = 1; j &lt; n; ++j)<br>              if (best[i + 1, j] &gt; 0)<br>                got(i, j, best[i + 1, j] + 1);<br>            break;<br>        }<br>      }<br>    }<br><br>    int res = 0;<br>    int cur = 0;<br><br>    while (cur &lt; n)<br>    {<br>      if (best[cur, 0] &gt; 0)<br>      {<br>        cur += best[cur, 0];<br>      }<br>      else<br>      {<br>        ++cur;<br>        ++res;<br>      }<br>    }<br><br>    return res;<br>  }<br><br>  <br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>