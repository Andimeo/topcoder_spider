<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br><br>#define forn(i,n) for (int i=0;i&lt;(n);++i)<br>#define forv(i,v) forn(i, size(v))<br>template&lt;typename T&gt; inline int size(const T &amp;t) {return t.size();}<br><br>string S;<br>int data[1050][510];<br>int calc(int start, int depth)<br>{<br>  int &amp;ans=data[start][depth];<br>  if (ans&gt;=0) return ans;<br>  if (size(S)-start &lt; 2*depth) return ans=1;<br>  if (depth==0) return ans=0;<br><br>  ans=0;<br>  for (int i=start;i&lt;size(S);i++)<br>    if (S[i]=='/' &amp;&amp; i+1&lt;size(S) &amp;&amp; S[i+1]=='*')<br>    {<br>      int t=calc(i+2,depth+1);<br>      if (t != 1)<br>        ans &gt;?= t+i+2-start;<br>      if (i+2&lt;size(S) &amp;&amp; S[i+2]=='/')<br>      {<br>        int t=calc(i+3,depth-1);<br>        if (t != 1)<br>          ans &gt;?= t + i + 3 - start;<br>      }<br>      break;<br>    } else<br>    if (S[i]=='*' &amp;&amp; i+1&lt;size(S) &amp;&amp; S[i+1]=='/')<br>    {<br>      int t=calc(i+2, depth-1);<br>      if (t!=1)<br>        ans &gt;?= t+i+2-start;<br>      if (i+2&lt;size(S) &amp;&amp; S[i+2]=='*')<br>      {<br>        int t=calc(i+3,depth+1);<br>        if (t!=1)<br>          ans &gt;?= t+i+3-start;<br>      }<br>      break;<br>    }<br>  if (ans==0) return ans=1;<br>  return ans;<br>}<br><br>struct CommentNest {<br>int whatsLeft(vector &lt;string&gt; lines)<br>{<br>  int ans=0;<br>  forv(i, lines)<br>    S+=lines[i]+"\n";<br>  memset(data,-1,sizeof(data));<br>  forv(i, S)<br>    if (S[i]=='/' &amp;&amp; i+1 &lt; size(S) &amp;&amp; S[i+1]=='*')<br>    {<br>      int t=calc(i+2,1);<br>      if (t != 1)<br>      {<br>        ans+=t+2;<br>        i+=t+2 - 1;<br>      }<br>    }<br>  return size(S)-ans;<br>}};<br><br><br><br>// Powered by FileEdit<br></td>