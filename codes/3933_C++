<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;climits&gt;<br>#include &lt;queue&gt;<br>#include &lt;cctype&gt;<br>using namespace std;<br> <br>typedef vector&lt;int&gt; VI;<br>typedef pair&lt;int,int&gt; PII;<br>typedef long long LL;<br>typedef vector&lt;string&gt; VS;<br> <br>struct qelem {<br>  int cost,ind;<br>}qe,nq;<br> <br>bool operator&lt;(const qelem &amp;a, const qelem &amp;b) {<br>  return a.cost&gt;b.cost;  <br>}<br> <br>int bits[1000];<br>#define SET(x) (bits[(x)&gt;&gt;3] |= (1&lt;&lt;((x)&amp;7)))<br>#define UNSET(x) (bits[(x)&gt;&gt;3] &amp;= (~(1&lt;&lt;((x)&amp;7))))<br>#define ISSET(x) (bits[(x)&gt;&gt;3] &amp; (1&lt;&lt;((x)&amp;7)))<br> <br>VI generate_primes(int upto) {<br>  VI res(1,2);<br>  memset(bits,0,(upto+7)/8);<br>  for (int i=3; i&lt;=upto; i += 2) {<br>    if (ISSET(i)) continue;<br>    res.push_back(i);<br>    for (int j=i*i; j&lt;=upto; j += i+i) SET(j);<br>  }<br>  return res;<br>}<br> <br>void print(VI &amp;v) {<br>  cout &lt;&lt; "{";<br>    for (int i=0; i&lt;v.size(); i++) {<br>      if (i) cout &lt;&lt; ",";<br>      cout &lt;&lt; v[i];<br>    }<br>  cout &lt;&lt; "}" &lt;&lt; endl;<br>}<br> <br>VI generate_VI(int n, int lo, int hi) {<br>  VI res(n);<br>  for (int i=0; i&lt;n; i++) res[i] = (rand()%(hi-lo+1))+lo;<br>  return res;<br>}<br> <br>int dp[2][70];<br> <br>class Switching {<br>  public:<br>  int minSwitch(vector &lt;string&gt; ticks) {<br>    int n = ticks.size();<br>    VI ti[70];<br>    for (int i=0; i&lt;n; i++) {<br>      istringstream istr(ticks[i]);<br>      int v;<br>      while(istr &gt;&gt; v) ti[i].push_back(v);<br>      reverse(ti[i].begin(),ti[i].end());<br>    }<br>    n++;<br>    int act = 0;<br>    for (int i=0; i&lt;n; i++) dp[act][i] = INT_MAX;<br>    dp[act][n-1] = 0;<br>    for (int t=1; t&lt;=20000; t++) {<br>      int cnt = 0;<br>      VI ind;<br>      for (int j=0; j&lt;n; j++) {<br>        while (!ti[j].empty() &amp;&amp; ti[j].back() == t) {<br>          if (ind.empty() || ind.back()!=j) {<br>            ind.push_back(j);<br>            cnt++;<br>          }<br>          ti[j].pop_back();<br>        }<br>      }<br>      if (!cnt) continue;<br>    //  cout &lt;&lt; "here" &lt;&lt; endl;<br>      int next = !act;<br>      int allbest = INT_MAX;<br>      for (int i=0; i&lt;n; i++) {<br>        dp[next][i] = INT_MAX;<br>        if (dp[act][i]&lt;allbest) allbest = dp[act][i];<br>      }<br>//      cout &lt;&lt; "t = " &lt;&lt; t &lt;&lt; " " &lt;&lt; allbest &lt;&lt; endl;<br>      int tbest = INT_MAX,tbest2 = INT_MAX,i1,i2;<br>      for (VI::iterator it=ind.begin(); it!=ind.end(); it++) {<br>        if (dp[act][*it]&lt;tbest) {<br>          if (tbest&lt;tbest2) {<br>            tbest2 = tbest;<br>            i2 = i1;<br>          }<br>          tbest = dp[act][*it];<br>          i1 = *it;<br>        }<br>        else if (dp[act][*it]&lt;tbest2) {<br>          tbest2 = dp[act][*it];<br>          i2 = *it;<br>        }<br>      }<br>      for (VI::iterator it=ind.begin(); it!=ind.end(); it++) {<br>        dp[next][*it] = allbest+cnt;<br>        if (tbest!=INT_MAX &amp;&amp; tbest+cnt-1&lt;dp[next][*it] &amp;&amp; (cnt == 1 || i1!=*it)) dp[next][*it] = tbest+cnt-1;<br>        else if (tbest2!=INT_MAX &amp;&amp; tbest2+cnt-1&lt;dp[next][*it] &amp;&amp; (cnt == 1 || i2!=*it)) dp[next][*it] = tbest2+cnt-1;<br>      }<br>      act = next;<br>    }<br>    int sol = INT_MAX;<br>    for (int i=0; i&lt;n-1; i++) if (dp[act][i]&lt;sol) sol = dp[act][i];<br>    return sol-1;<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>