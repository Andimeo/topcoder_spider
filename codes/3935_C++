<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br> <br>using namespace std;<br> <br>int best[26][26][26][26];<br>bool bad[26][26][26][26];<br> <br> <br>vector &lt;string&gt; parse(string s, string c)<br>{<br>  int len = c.length(), p = -len, np;<br>  vector &lt;string&gt; ans;<br>  <br>  do<br>    {<br>      np = s.find(c, p+len);<br>      ans.push_back(s.substr(p+len, np - p - len));<br>      p = np;<br>    }<br>  while (p != string::npos);<br> <br>  return ans;<br>}<br> <br>class SmartWordToy {<br>  public:<br>  int minPresses(string s, string f, vector &lt;string&gt; forbid) {<br>    <br>    for (int i = 0; i &lt; 26; i++)<br>      for (int j = 0; j &lt; 26; j++)<br>        for (int k = 0; k &lt; 26; k++)<br>    for (int l = 0; l &lt; 26; l++)<br>      best[i][j][k][l] = 1000000;<br>    best[s[0]-'a'][s[1]-'a'][s[2]-'a'][s[3]-'a'] = 0;<br>    queue &lt; vector&lt;int&gt; &gt; q;<br>    vector &lt;int&gt; vi(4);<br>    for (int i = 0; i &lt; 4; i++)<br>      vi[i] = s[i]-'a';<br>    q.push(vi);<br>    for (int i = 0; i &lt; forbid.size(); i++)<br>      {<br>        vector &lt;string&gt; vs = parse(forbid[i], " ");<br>        for (int a = 0; a &lt; vs[0].size(); a++)<br>    for (int b = 0; b &lt; vs[1].size(); b++)<br>      for (int c = 0; c &lt; vs[2].size(); c++)<br>        for (int d = 0; d &lt; vs[3].size(); d++)<br>          bad[vs[0][a]-'a']<br>      [vs[1][b]-'a']<br>      [vs[2][c]-'a']<br>      [vs[3][d]-'a'] = true;<br>      }<br>    while (!q.empty())<br>      {<br>        vi = q.front(); q.pop();<br>        int cur = best[vi[0]][vi[1]][vi[2]][vi[3]];<br>        for (int i = 0; i &lt; 4; i++)<br>    {<br>      vi[i] = (vi[i] + 1) % 26;<br>      if (!bad[vi[0]][vi[1]][vi[2]][vi[3]] &amp;&amp;<br>          best[vi[0]][vi[1]][vi[2]][vi[3]] == 1000000)<br>        {<br>          best[vi[0]][vi[1]][vi[2]][vi[3]] = cur+1;<br>          q.push(vi);<br>        }<br>      vi[i] = (vi[i] + 24) % 26;<br>      if (!bad[vi[0]][vi[1]][vi[2]][vi[3]] &amp;&amp;<br>          best[vi[0]][vi[1]][vi[2]][vi[3]] == 1000000)<br>        {<br>          best[vi[0]][vi[1]][vi[2]][vi[3]] = cur+1;<br>          q.push(vi);<br>        }<br>      vi[i] = (vi[i] + 1) % 26;<br>    }<br>      }<br>    int ans = best[f[0]-'a'][f[1]-'a'][f[2]-'a'][f[3]-'a'];<br>    return ans &lt; 1000000 ? ans : -1;<br> <br>  }<br>};<br> <br> <br>// Powered by FileEdit<br></td>