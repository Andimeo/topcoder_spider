<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System<br>Imports System.Collections<br> <br>Public Class SmartWordToy<br>    Dim t(25, 25, 25, 25) As Integer<br>    Dim d() As Integer = {-1, 1}<br>    Private Function strToIdxes(ByVal s As String) As Integer()<br>        Dim ret(3) As Integer<br> <br>        ret(0) = Asc(s.Chars(0)) - Asc("a")<br>        ret(1) = Asc(s.Chars(1)) - Asc("a")<br>        ret(2) = Asc(s.Chars(2)) - Asc("a")<br>        ret(3) = Asc(s.Chars(3)) - Asc("a")<br>        Return ret<br>    End Function<br>    Private Sub addForbid(ByVal f() As String)<br>        Dim i, j, k, m, idx() As Integer<br> <br>        For i = 0 To f(0).Length - 1<br>            For j = 0 To f(1).Length - 1<br>                For k = 0 To f(2).Length - 1<br>                    For m = 0 To f(3).Length - 1<br>                        idx = strToIdxes(f(0).Chars(i) &amp; f(1).Chars(j) &amp; f(2).Chars(k) &amp; f(3).Chars(m))<br>                        t(idx(0), idx(1), idx(2), idx(3)) = -1<br>                    Next<br>                Next<br>            Next<br>        Next<br>    End Sub<br>    Private Sub shortestPath(ByVal start() As Integer, ByVal finish() As Integer)<br>        Dim q As New Queue()<br>        Dim i, j, e(3), a, b, s(3) As Integer<br> <br>        t(start(0), start(1), start(2), start(3)) = 0<br> <br>        q.Enqueue(start)<br>        While q.Count &gt; 0<br>            s = q.Dequeue<br>            If s(0) = finish(0) AndAlso s(1) = finish(1) AndAlso s(2) = finish(2) AndAlso s(3) = finish(3) Then Exit While<br>            a = t(s(0), s(1), s(2), s(3))<br>            For i = 0 To 3<br>                For j = 0 To 1<br>                    Array.Copy(s, e, 4)<br>                    e(i) += d(j)<br>                    If e(i) &gt; 25 Then e(i) = 0<br>                    If e(i) &lt; 0 Then e(i) = 25<br>                    b = t(e(0), e(1), e(2), e(3))<br>                    If b &lt;&gt; -1 AndAlso a + 1 &lt; b Then<br>                        t(e(0), e(1), e(2), e(3)) = a + 1<br>                        q.Enqueue(New Integer() {e(0), e(1), e(2), e(3)})<br>                    End If<br>                Next<br>            Next<br>        End While<br>    End Sub<br>    Public Function minPresses(ByVal start As String, ByVal finish As String, ByVal forbid As String()) As Integer<br>        Dim i, j, k, m, idx(), a As Integer<br> <br>        For i = 0 To 25<br>            For j = 0 To 25<br>                For k = 0 To 25<br>                    For m = 0 To 25<br>                        t(i, j, k, m) = Integer.MaxValue<br>                    Next<br>                Next<br>            Next<br>        Next<br>        For i = 0 To forbid.Length - 1<br>            addForbid(forbid(i).Split(" "))<br>        Next<br> <br>        shortestPath(strToIdxes(start), strToIdxes(finish))<br>        idx = strToIdxes(finish)<br>        a = t(idx(0), idx(1), idx(2), idx(3))<br>        If a = Integer.MaxValue Then a = -1<br>        Return a<br>    End Function<br>End Class<br></td>