<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class AutoMarket<br>{<br>  struct s<br>  {<br>    public int c,f,ft;<br>  };<br> <br>  public int maxSet(int[] cost, int[] features, int[] fixTimes)<br>  {<br>    int len = (int)(cost.Length);<br>    int []length = new int[len];<br> <br>    int maxlen;<br>    s []d = new s[len];<br>    s aux;<br>    int i,j;<br> <br> <br>    for (i = 0 ;i&lt;len;i++)<br>    {<br>      d[i].c = cost[i];<br>      d[i].f = features[i];<br>      d[i].ft = fixTimes[i];<br>      length[i]=1;<br>    }<br> <br>    for (i=0;i&lt;len;i++)<br>      for (j=i+1;j&lt;len;j++)<br>      {<br>        if (d[j].c &gt; d[i].c)<br>        {<br>          aux = d[i];<br>          d[i] = d[j];<br>          d[j] = aux;<br>        }<br>      }<br> <br>    for (i = 0 ;i&lt;len-1;i++)<br>    {<br>      for (j = i+1 ; j&lt;len;j++)<br>      {<br>        if (d[j].c &lt; d[i].c &amp;&amp; d[j].f &gt; d[i].f &amp;&amp; d[j].ft &lt; d[i].ft)<br>        {<br>          if (length[i] + 1 &gt; length[j])<br>          {<br>            length[j] = length[i] + 1;<br>          }<br>        }<br>      }<br>    }<br>    maxlen = 0;<br>    for (i=0;i&lt;len;i++)<br>    {<br>      if (length[i]&gt;maxlen)<br>        maxlen = length[i];<br>    }<br>    return maxlen;<br> <br>  }<br>  <br> <br>}<br> <br>//Powered by [KawigiEdit]<br></td>