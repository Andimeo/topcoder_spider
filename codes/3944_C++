<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;sstream&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br> <br>using namespace std;<br> <br>#define FOR(i,n) for(int i=0; i&lt;(n); i++)<br> <br>struct CakeDivision {<br>double ratio(double length, double width, int pieces) {<br>  if (width &gt; length) swap(width, length);<br>  if (pieces == 1) return length / width;<br>  double res = 1000;<br>  tryagain:<br>  for(int i = 1; i &lt; pieces; i++) {<br>    double l1 = i * length / pieces, l2 = length - l1;  <br>    res &lt;?= (ratio(l1, width, i) &gt;? ratio(l2, width, pieces - i));<br>  }<br>  if (length &gt; width) { swap(length, width); goto tryagain; }<br>  return res;<br>}<br>};<br> <br>// Powered by PopsEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>