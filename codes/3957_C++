<td class="problemText" colspan="8" valign="middle" align="left">
            #line 2 "Indivisible.cpp"<br>#include &lt;algorithm&gt;<br><br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br><br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cctype&gt;<br><br>using namespace std;<br><br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt; vector&lt;int&gt; &gt; VVI;<br>typedef vector&lt;string&gt; VS;<br>typedef vector&lt; vector&lt;string&gt; &gt; VVS;<br><br>typedef long long LL;<br>typedef pair&lt;int,int&gt; PII;<br>typedef pair&lt;int,PII&gt; TRI;<br>typedef map&lt;string,int&gt; MSI;<br><br>#define REP(i,n) for (int i=0; i&lt;(n); ++i)<br>#define FOR(i,l,u) for (int i=(l); i&lt;=(u); ++i)<br>#define FORD(i,u,l) for (int i=(u); i&gt;=(l); --i)<br>#define FOREACH(it,c) for (typeof((c).begin()) it = (c).begin() ; it != (c).end() ; ++it )<br>#define CLEAR(ar) memset((ar),0,sizeof(ar));<br><br>VS split(const string &amp;co, const string &amp;delim = " ") {<br>  VS res;<br>  string t="";<br>  REP(i,co.size()) {<br>    if (delim.find(co[i]) != string::npos) {<br>      if (!t.empty()) res.push_back(t);<br>      t = "";<br>    } else {<br>      t += co[i];<br>    }<br>  }<br>  if (!t.empty()) res.push_back(t);<br>  return res;<br>}<br><br>int primes[1000];<br>int pc;<br><br>int isprime(int x) {<br>  FOR(d,2,x-1) if (!(x%d)) return 0;<br>  return 1;<br>}<br><br>class Indivisible {<br>  public:<br>  vector &lt;int&gt; largestSubset(int n) {<br>    VI res;<br>    if (n==1) { res.push_back(1); return res; }<br>    pc = 0;<br>/*<br>    VI mam(n+1,1);<br>    int treba = (n+1)/2;<br>    <br>    set&lt;int&gt; SOL;<br>    REP(i,pc) if (primes[i] &gt; (n/2)) {<br>      SOL.insert( primes[i] );<br>      mam[ primes[i] ] = 0;<br>    }<br>*/<br><br>    set&lt;int&gt; SOL;<br>    FOR(i,1,n) if (i%2) SOL.insert(i);<br>    while (1) {<br>      int ok = 1;<br>      int x,y;<br>      FOREACH(it,SOL) {<br>        set&lt;int&gt;::iterator jt=it;<br>        ++jt;<br>        for(;jt != SOL.end(); ++jt) {<br>          x=*it; y=*jt;<br>          if (!(y%x)) { ok=0; break; }<br>        }<br>        if (!ok) break;<br>      }<br>      if (ok) break;<br>      SOL.erase(x);<br>      SOL.insert(2*x);<br>    }<br><br>    VI V( SOL.begin(), SOL.end() );<br>    return V;<br>    <br>  }<br>};<br><br><br>// Powered by FileEdit<br></td>