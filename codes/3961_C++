<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br> <br>using namespace std;<br> <br>class RunLengthPlus {<br>  <br>  map&lt;string, string&gt; B;<br>  <br>  string best (string s)<br>  {<br>    if (s.size()&lt;=1) return s;<br>    if (B.count(s)!=0) return B[s];<br>    string sol=s;<br>    int n=s.size();<br>    for (int i=1; i&lt;n; i++)<br>    {<br>      string left=best(s.substr(0, i));<br>      string right=best(s.substr(i));<br>      string nsol=left+right;<br>      if (nsol.size()&lt;sol.size() || (nsol.size()==sol.size() &amp;&amp; nsol&lt;sol)) sol=nsol;<br>    }<br>    for (int i=1; i*2&lt;=n; i++)<br>    {<br>      if (n%i!=0) continue ;<br>      string first=s.substr(0, i);<br>      int good=1;<br>      for (int j=0; j&lt;n/i; j++) if (first!=s.substr(j*i, i)) good=0;<br>      if (good)<br>      {<br>        ostringstream out;<br>        out &lt;&lt; n/i;<br>        if (i&gt;1) out &lt;&lt; "(";<br>        out &lt;&lt; best(first);<br>        if (i&gt;1) out &lt;&lt; ")";<br>        string nsol=out.str();<br>        if (nsol.size()&lt;sol.size() || (nsol.size()==sol.size() &amp;&amp; nsol&lt;sol)) sol=nsol;      <br>      }<br>    }<br>    return B[s]=sol;<br>  }<br>  <br>  public:<br>  string compress(string s) {<br>    return best(s);<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>