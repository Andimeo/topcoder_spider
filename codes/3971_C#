<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Text.RegularExpressions;<br>using System.Collections;<br><br>public class StockHistory {<br>  char[] sep = {<br>    ' '<br>  };<br>  public int maximumEarnings(int initialInvestment, int monthlyContribution, string[] stockPrices) {<br>    int n = stockPrices.Length;<br>    int m = stockPrices[0].Split( sep ).Length;<br>    int[][] sp = new int[n][];<br>    double[] prof = new double[n];<br>    int[] best = new int[n];<br>    for ( int i = 0; i &lt; n; i++ ) {<br>      sp[i] = new int[m];<br>      string[] ss = stockPrices[i].Split( sep );<br>      for ( int j = 0; j &lt; m; j++ ) {<br>        sp[i][j] = int.Parse( ss[j] );<br>      }<br>      best[i] = -1;<br>    }<br><br>    prof[n-1] = 0;<br>    for ( int i = n - 2; i &gt;= 0; i-- ) {<br>      prof[i] = prof[i+1];<br>      int id = -1;<br>      for ( int j = 0; j &lt; m; j++ ) {<br>        double p = ( (double)sp[n - 1][j] - sp[i][j] ) / sp[i][j];<br>        if ( p &gt; prof[i] ) {<br>          prof[i] = p;<br>          id = j;<br>        }<br>      }<br>    }<br>    double r = prof[0]*initialInvestment;<br>    for ( int i = 1; i &lt; n; i++ ) {<br>      r += prof[i] * monthlyContribution;<br>    }<br><br>    return (int)Math.Round( r );<br>    }<br><br><br><br><br><br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>