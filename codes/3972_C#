<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br> <br>public class WordFind<br>{<br>  string[] grid;<br>  public string[] findWords(string[] grid, string[] wordList)<br>  {<br>    this.grid = grid;<br>    string[] res = new string[wordList.Length];<br>    for (int i = 0; i &lt; wordList.Length; ++i){<br>      res[i] = "";<br>      for (int j = 0; j &lt; grid.Length; ++j){<br>        for (int k = 0; k &lt; grid[0].Length; ++k){<br>          if (wordAt(wordList[i], j, k)){<br>            res[i] = j + " " + k;<br>            j = grid.Length;<br>            k = grid[0].Length;<br>          }<br>        }<br>      }<br>    }<br>    return res;<br>  }<br>  <br>  bool wordAt(string s, int r, int c){<br>    if (grid[r].Substring(c).StartsWith(s)) return true;<br>    bool b1 = true, b2 = true;<br>    for (int i = 0; i &lt; s.Length; ++i){<br>      if (r + i &gt;= grid.Length){<br>        return false;<br>      }<br>      if (c + i &gt;= grid[0].Length) b2 = false;<br>      if (b1 &amp;&amp; grid[r+i][c] != s[i]) b1 = false;<br>      if (b2 &amp;&amp; grid[r+i][c+i] != s[i]) b2 = false;<br>      if (!b1 &amp;&amp; !b2) return false;<br>    }<br>    return true;<br>  }<br>}<br>//Powered by [KawigiEdit]<br></td>