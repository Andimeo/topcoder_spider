<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;  typedef vector&lt;vector&lt;int&gt; &gt; VVI;<br>typedef vector&lt;string&gt; VS;  typedef vector&lt;vector&lt;string&gt; &gt; VVS;<br>typedef signed long long i64;  typedef unsigned long long u64;<br><br>char buf[1000];<br>char g[200][200];<br><br>class WordFind {<br>public:<br>vector &lt;string&gt; findWords(vector &lt;string&gt; a, vector &lt;string&gt; b) {<br>  int i, j, k, x, y, z, n;<br>  vector &lt;string&gt; ret(b.size());<br><br>  for( i = 0; i &lt; a.size(); i++ )<br>  for( j = 0; j &lt; a[i].size(); j++ )<br>    g[i][j] = a[i][j];<br>  for( i = 0; i &lt; b.size(); i++ ) {<br>    for( y = 0; y &lt; a.size(); y++ )<br>    for( x = 0; x &lt; a[y].size(); x++ ) {<br>      if( ret[i].size() ) continue;<br>      z = 0;<br>      for( j = 0; j &lt; b[i].size(); j++ )<br>        if( g[y][x+j] != b[i][j] ) break;<br>      if( j == b[i].size() ) z = 1;<br>      for( j = 0; j &lt; b[i].size(); j++ )<br>        if( g[y+j][x+j] != b[i][j] ) break;<br>      if( j == b[i].size() ) z = 1;<br>      for( j = 0; j &lt; b[i].size(); j++ )<br>        if( g[y+j][x] != b[i][j] ) break;<br>      if( j == b[i].size() ) z = 1;<br>      if( z ) {<br>        sprintf(buf, "%d %d", y, x);<br>        ret[i] = buf;<br>      }<br>    }<br>  }<br>  return ret;<br>}<br>};<br><br><br>// Powered by FileEdit<br></td>