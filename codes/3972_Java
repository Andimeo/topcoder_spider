<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class WordFind {<br>    public String[] findWords(String[] grid, String[] wordList) {<br>        String[] res = new String[wordList.length];<br>  for (int i=0; i &lt; wordList.length; i++) {<br>    res[i] = "";<br>    for (int x=grid.length-1; x&gt;=0; x--) {<br>      for (int y=grid[x].length()-1; y &gt;= 0; y--) {<br>        boolean find = true;<br>        for (int k=0; k &lt; wordList[i].length(); k++) {<br>          if ((x+k &gt;= grid.length) || (grid[x+k].charAt(y) != wordList[i].charAt(k))) {<br>            find = false;<br>            break;<br>          }<br>        }<br>        if (find) {<br>          res[i] = x + " " + y;<br>        }<br>        find = true;<br>        for (int k=0; k &lt; wordList[i].length(); k++) {<br>          if ((y+k &gt;= grid[0].length()) || (grid[x].charAt(y+k) != wordList[i].charAt(k))) {<br>            find = false;<br>            break;<br>          }<br>        }<br>        if (find) {<br>          res[i] = x + " " + y;<br>        }<br>        find = true;<br>        for (int k=0; k &lt; wordList[i].length(); k++) {<br>          if ((x+k &gt;= grid.length) || (y+k &gt;= grid[0].length()) || (grid[x+k].charAt(y+k) != wordList[i].charAt(k))) {<br>            find = false;<br>            break;<br>          }<br>        }<br>        if (find) {<br>          res[i] = x + " " + y;<br>        }<br>      }<br>    }<br>  }<br>        return res;<br>    }<br><br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>