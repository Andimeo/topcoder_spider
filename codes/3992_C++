<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include&lt;iostream&gt;<br>#include&lt;cstdio&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;sstream&gt;<br>#include&lt;utility&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br> <br>#define REP(i,n) for(int i = 0, _n=n; i&lt;_n; ++i) <br>#define FOR(i,a,b) for(int i=(a), _b = (b); i&lt;=_b; ++i)<br>#define FORD(i,a,b) for(int i=(a), _b = (b); i&gt;=_b; --i)<br> <br>bool between(int z1, int z2, int z3) {<br>  if ((z2&lt;=z1)&amp;&amp;(z1&lt;=z3)) return true;<br>  if ((z3&lt;=z1)&amp;&amp;(z1&lt;=z2)) return true;<br>  return false;<br>}<br> <br>double pol(int xp, int x1, int y1, int x2, int y2) {<br>  if (x1&gt;x2) { swap(x1,x2); swap(y1,y2); }<br>  double value;<br>  if (x1!=x2) {<br>    value = ((double)y1 + ((double)(y2-y1)/(double)(x2-x1))*(double)(xp-x1));<br>  } else {<br>    value = y1;<br>  }<br>  return value;<br>}<br> <br>pair&lt;double,double&gt; count(int Xp, vector&lt;int&gt; &amp; X, vector&lt;int&gt; &amp; Y) {<br>  X.push_back(X[0]);<br>  Y.push_back(Y[0]);<br>  vector&lt;double&gt; tt;<br>  REP(i,X.size()-1) {<br>    if (between(Xp,X[i],X[i+1])) {<br>      tt.push_back(pol(Xp,X[i],Y[i],X[i+1],Y[i+1]));<br>    }<br>  }<br>  pair&lt;double,double&gt; aa;<br>  if (tt.size()==0) {<br>    aa.first = -1;<br>  } else {<br>    aa.first = tt[0]; aa.second = tt[0];<br>    REP(i,tt.size()) {<br>      aa.first = min(aa.first,tt[i]);<br>      aa.second = max(aa.second,tt[i]);<br>    }<br>  }<br>  return aa;<br>}<br> <br>class CheckerPolygon {<br>  public:<br>  vector &lt;int&gt; countSquares(vector &lt;int&gt; X, vector &lt;int&gt; Y) {<br>    vector&lt;pair&lt;double,double&gt; &gt; tab;<br>    FOR(rzad,0,10000) {<br>      pair&lt;double,double&gt; result = count(rzad,X,Y);<br>      tab.push_back(result);<br>    }<br>    //FOR(i,2,4) cout &lt;&lt; i &lt;&lt; " " &lt;&lt; tab[i].first &lt;&lt; " " &lt;&lt; tab[i].second &lt;&lt; endl;<br>    int suma = 0;<br>    int suma1 = 0;<br>    int suma2 = 0;<br>    FOR(rzad,0,9999) {<br>      if ((tab[rzad].first&lt;0)||(tab[rzad+1].first&lt;0)) {<br>      } else {<br>        double z1 = max(tab[rzad].first,tab[rzad+1].first);<br>        double z2 = min(tab[rzad].second,tab[rzad+1].second);<br>        //cout &lt;&lt; z1 &lt;&lt; " " &lt;&lt; z2 &lt;&lt; endl;<br>        int w2 = (int) z2;<br>        int w1 = (int) z1;<br>        <br>        if (abs((double)w1-z1)&gt;0.0000001) {<br>          w1++;<br>        }<br>        //cout &lt;&lt; w1 &lt;&lt; " " &lt;&lt; w2 &lt;&lt; endl;<br>        if (w2&gt;=w1) {<br>          int k1 = 0; <br>          int k2 = 0;<br>          if (w1%2==0) {<br>            k1=(w2-w1)/2+(w2-w1)%2;<br>            k2=(w2-w1)/2;<br>          } else {<br>            k2=(w2-w1)/2+(w2-w1)%2;<br>            k1=(w2-w1)/2;<br>          }<br>          if (rzad%2==0) {<br>            suma1+=k1;<br>            suma2+=k2;<br>            <br>          } else {<br>            suma1+=k2;<br>            suma2+=k1;<br>          }<br>          <br>          suma+=(w2-w1);<br>          //cout &lt;&lt; suma &lt;&lt; endl;<br>        }<br>      }<br>    }<br>    vector&lt;int&gt; temp;<br>    temp.push_back(suma1);<br>    temp.push_back(suma2);<br> <br>    return temp;<br>    <br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>