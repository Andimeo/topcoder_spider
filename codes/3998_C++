<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;  typedef vector&lt;vector&lt;int&gt; &gt; VVI;<br>typedef vector&lt;string&gt; VS;  typedef vector&lt;vector&lt;string&gt; &gt; VVS;<br>typedef signed long long i64;  typedef unsigned long long u64;<br><br>int col[10];<br>int rook[8][10];<br>VI a;<br>int poss[15][100];<br>char buf[1000];<br><br>void doit(int r, int nr, int v) {<br>  if( r &lt; 0 ) {<br>    poss[nr][v] = 1;<br>    return;<br>  }<br>  int ns = 0;<br>  for( int i = a[r]-1; i &gt;= 0; i-- ) if( !col[i] ) {<br>    col[i] = 1;<br>    rook[r][i] = 1;<br>    doit(r-1, nr+1, v+ns);<br>    col[i] = 0;<br>    rook[r][i] = 0;<br>    ns++;<br>  }<br>  doit(r-1, nr, v+ns);<br>}<br><br>class WeirdRooks {<br>public:<br>string describe(vector &lt;int&gt; A) {<br>  a = A;<br>  int i, j, k, x, y, z, n;<br>  string ret;<br>  doit(a.size()-1, 0, 0);<br>  for( i = 0; i &lt; 15; i++ )<br>  for( j = 0; j &lt; 100; j++ ) if( poss[i][j] ) {<br>    if( ret.size() ) ret += ' ';<br>    sprintf(buf, "%d,%d", i, j);<br>    ret += buf;<br>  }<br>  return ret;<br>}<br>};<br><br><br>// Powered by FileEdit<br></td>