<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;stdio.h&gt;<br>#include &lt;map&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;string.h&gt;<br>#include &lt;ctype.h&gt;<br>#include &lt;stdlib.h&gt;<br><br>using namespace std;<br><br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br><br>VS split(string str, string splt)<br>{<br>  string tempstr = "";<br>  VS res;<br><br>  for(int i = 0;i&lt;=str.size();i++)<br>    {<br>      if(i == str.size() || splt.find(str[i]) != string::npos)<br>  {<br>    if(tempstr != "")<br>      res.push_back(tempstr);<br>    tempstr = "";<br>  }<br>      else<br>  tempstr += str[i];<br>    }<br>  return res;<br>}<br><br>string itos(int a)<br>{<br>  char str[100];<br>  sprintf(str, "%d", a);<br>  return str;<br>}<br><br>int stoi(string s)<br>{<br>  int t;<br>  sscanf(s.c_str(), "%d", &amp;t);<br>  return t;<br>}<br><br>long long poss[39][39][39];<br><br>int N;<br><br>string b1, b2;<br>int l1, l2;<br><br>int next1[39][3];<br>int next2[39][3];<br><br>long long go(int n, int bi1, int bi2)<br>{<br><br>  if(n == N)<br>    return 1;<br>  if(poss[n][bi1][bi2] == -1)<br>    {<br>      poss[n][bi1][bi2] = 0;<br>      for(int i = 0;i&lt;3;i++)<br>    <br>  {<br>    <br>    if(next1[bi1][i] != l1 &amp;&amp; next2[bi2][i] != l2)<br>      poss[n][bi1][bi2] += go(n+1, next1[bi1][i], next2[bi2][i]);<br>  }<br>    }<br>  return poss[n][bi1][bi2];<br>}<br><br>class BadSubstrings {<br>  public:<br>  long long howMany(int N_, string bad1, string bad2) {<br><br>    N = N_;<br>    memset(poss, -1, sizeof(poss));<br><br>    for(int i = 0;i&lt;bad1.size();i++)<br>      {<br>        next1[i][bad1[i]-'A'] = i+1;<br><br>        for(int j = 0;j&lt;3;j++)<br>    if(j != bad1[i]-'A')<br>      {<br>        next1[i][j] = 0;<br>        for(int k=0;k&lt;i;k++)<br>          if(bad1[k]-'A' == j &amp;&amp; bad1.substr(0,k) == bad1.substr(i-k,k))<br>      next1[i][j] = k+1;<br>      }<br>      }<br><br>    for(int i = 0;i&lt;bad2.size();i++)<br>      {<br>        next2[i][bad2[i]-'A'] = i+1;<br><br>        for(int j = 0;j&lt;3;j++)<br>    if(j != bad2[i]-'A')<br>      {<br>        next2[i][j] = 0;<br>        for(int k=0;k&lt;i;k++)<br>          if(bad2[k]-'A' == j &amp;&amp; bad2.substr(0,k) == bad2.substr(i-k,k))<br>      next2[i][j] = k+1;<br>      }<br>      }    <br><br>    <br>    b1 = bad1;l1 = b1.size();<br>    b2 = bad2;l2 = b2.size();<br><br>    return go(0,0,0);<br>  }<br>};<br><br><br>// Powered by FileEdit<br></td>