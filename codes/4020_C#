<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br> <br>  public class AcademicJournal<br>  {<br>    struct Journal<br>    {<br>      public string name;<br>      public int num_papers;<br>      public int num_refs;<br>    }<br>    class Cmp:IComparer<br>    {<br>      public int Compare(object x, object y)<br>      {<br>        Journal jx = (Journal) x;<br>        Journal jy = (Journal) y;<br>        if (jx.num_refs*jy.num_papers&gt;jy.num_refs*jx.num_papers)<br>          return -1;<br>        else if (jx.num_refs*jy.num_papers&lt;jy.num_refs*jx.num_papers)<br>          return 1;<br>        else if (jx.num_papers&gt;jy.num_papers)<br>          return -1;<br>        else if (jx.num_papers&lt;jy.num_papers)<br>          return 1;<br>        else <br>          return (jx.name.CompareTo(jy.name));<br>      }<br>    }<br>    public string[] rankByImpact(string[] papers)<br>    {<br>      System.Collections.Hashtable h=new Hashtable();<br>      string[] jname=new string[papers.Length];<br>      for (int i=0; i&lt;papers.Length; ++i)<br>      {<br>        string paper=papers[i];<br>        string[] parts=paper.Split('.');<br>        Journal j;<br>        if (h.Contains(parts[0])) <br>        {<br>          j=(Journal) h[parts[0]];<br>        } else<br>        {<br>          j=new Journal();<br>          j.name=parts[0];<br>          j.num_papers=0;<br>          j.num_refs=0;<br>        }<br>        ++j.num_papers;<br>        h[parts[0]]=j;<br>        jname[i]=parts[0];<br>      }<br>      for (int i=0; i&lt;papers.Length; ++i)<br>      {<br>        string paper=papers[i];<br>        string[] parts=paper.Split('.');<br>        Journal j=(Journal) h[parts[0]];<br>        string[] refs=parts[1].Split(' ');<br>        int[] was=new int[papers.Length];<br>        for (int k=0; k&lt;papers.Length; ++k)<br>          was[k]=0;<br>        for (int k=0; k&lt;refs.Length; ++k)<br>          if (refs[k].Length&gt;0)<br>          {<br>            int id=int.Parse(refs[k]);<br>            if (was[id]&gt;0)<br>              continue;<br>            was[id]=1;<br>            Journal jj=(Journal) h[jname[id]];<br>            if (jj.name!=j.name)<br>            {<br>              ++jj.num_refs;<br>              h[jname[id]]=jj;<br>            }<br>          }<br>      }<br>      Journal[] jour=new Journal[h.Count];<br>      h.Values.CopyTo(jour,0);<br>      Array.Sort(jour,new Cmp());<br>      string[] res=new string[jour.Length];<br>      for (int i=0; i&lt;jour.Length; ++i)<br>        res[i]=jour[i].name;<br>      return res;<br>    }<br>  }<br></td>