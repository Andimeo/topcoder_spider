<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class AcademicJournal {<br>  public String[] rankByImpact(String[] papers) {<br>    String[] res;<br>    Map map = new HashMap();<br>    Set set = new HashSet();<br>    <br>    for (int i = 0; i &lt; papers.length; i++) {<br>      String name = papers[i].substring(0, papers[i].indexOf('.'));<br>      if (!map.containsKey(name)) {<br>        Journal j = new Journal(name);<br>        map.put(name, j);<br>      }<br>    }<br>    <br>    for (int i = 0; i &lt; papers.length; i++) {<br>      StringTokenizer tokenizer = new StringTokenizer(papers[i].substring(papers[i].indexOf('.') + 1).trim());<br>      while (tokenizer.hasMoreTokens()) {<br>        String s = tokenizer.nextToken();<br>        int index = Integer.parseInt(s);<br>        String key = i + "," + index;<br>        if (!set.contains(key) &amp;&amp; !getName(papers[i]).equals(getName(papers[index]))) {<br>          set.add(key);<br>          String name = papers[index].substring(0, papers[index].indexOf('.'));<br>          Journal jour = (Journal) map.get(name);<br>          <br>          Integer iii = (Integer) jour.cites.get(new Integer(index));<br>          if (iii == null) {<br>            jour.cites.put(new Integer(index), new Integer(1));<br>          } else {<br>            jour.cites.put(new Integer(index), new Integer(iii.intValue() + 1));<br>          }<br>        }<br>      }<br>    }<br>    <br>    Journal[] o = (Journal[]) map.values().toArray(new Journal[0]);<br>    Arrays.sort(o);<br>    res = new String[o.length];<br>    <br>    for (int i = 0; i &lt; o.length; i++) {<br>      System.out.println(o[i].name + "," + o[i].getImpact() + "," + o[i].cites.keySet().size());<br>      res[i] = o[i].name;<br>    }<br>      <br>    return res;<br>  }<br>  <br>  private String getName(String s) {<br>    return s.substring(0, s.indexOf('.'));<br>  }<br>  <br>  private class Journal implements Comparable {<br>    private String name;<br>    private Map cites = new HashMap(); <br>    <br>    private Journal(String n) {<br>      name = n;<br>    }<br>    <br>    public int compareTo(Object o) {<br>      Journal j = (Journal) o;<br>      <br>      int res = -1;<br>      <br>      if (getImpact() &gt; j.getImpact()) {<br>        res = 1;<br>      } else if (getImpact() &lt; j.getImpact()) {<br>        res = -1;<br>      } else if (cites.keySet().size() &gt; j.cites.keySet().size()) {<br>        res = 1;<br>      } else if (cites.keySet().size() &lt; j.cites.keySet().size()) {<br>        res = -1;<br>      } else {<br>        res = - (name.compareTo(j.name));<br>      }<br>      <br>      return -res;<br>      <br>    }<br>    <br>    private double getImpact() {<br>      int cnt = 0;<br>      int sum = 0;<br>      Iterator it = cites.keySet().iterator();<br>      while (it.hasNext()) {<br>        Object key = it.next();<br>        cnt++;<br>        sum += ((Integer) cites.get(key)).intValue();<br>      }<br>      <br>      if (cnt == 0) {<br>        cnt = 1;<br>      }<br>      <br>      return (double) sum / (double) cnt;<br>    }<br>    <br>  }<br>  <br>}<br> <br>// Powered by PopsEdit<br></td>