<td class="problemText" colspan="8" valign="middle" align="left">
            public class RemoteRover {<br>    double <br>  split[] = new double[70],<br>  gain[] = new double[70];<br>    <br>    int width[];<br>    int speed[];<br>    double budget;<br>    int N;<br> <br>    double value(int i) {<br>  return Math.sqrt(width[i] * width[i] + split[i] * split[i]) / speed[i];<br>    }<br>    double gain(int i) {<br>  return split[i] / ( Math.sqrt(split[i]*split[i] + width[i] * width[i]) * speed[i] );<br>    }<br>public double optimalTravel(int[] _width, int[] _speed, int _offset) {<br>    speed = _speed; width = _width; <br>    N = width.length;<br>    for(int i=N;i--&gt;0;) split[i] = 1.0 * _offset / N;<br>    double amount = 0.5;<br>    double score = 1e9;<br>    while(true) {<br>  double min=1e9, max=-1e9;<br>  int mip=0,map=0;<br>  for(int i=N;i--&gt;0;) {<br>      double g = gain[i] = gain(i);<br>      if(g&lt;min) { min=g; mip=i; }<br>      if(g&gt;max) { max=g; map=i; }<br>  }<br>  double bit = amount * split[map];<br>  split[mip] += bit;<br>  split[map] -= bit;<br> <br>  double V = 0;<br>  for(int i=N;i--&gt;0;) {<br>      V += value(i);<br>  }<br>  double gain = score - V;<br>  score = V;<br>  if(gain &lt; 1e-12) {<br>      amount *= 0.8;<br>      if(amount &lt; 1e-12) break;<br>  }<br>    }<br>    return score;<br>}}<br></td>