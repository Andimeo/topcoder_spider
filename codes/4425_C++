<td class="problemText" colspan="8" valign="middle" align="left">
            #line 5 "PatternCutting.cpp"<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br><br>using namespace std;<br><br>#define REP(i,n) for(int i=0;i&lt;(n);++i)<br>#define FOR(i,a,b) for(int i=(a);i&lt;=(b);++i)<br>#define FORD(i,b,a) for(int i=(b);i&gt;=(a);--i)<br>#define VAR(i,c) __typeof(c) i(c)<br>#define FOREACH(i,c) for(VAR(i,(c).begin());i!=(c).end();++i)<br><br>template &lt;class T&gt; inline int size(const T &amp;v) {return v.size();}<br><br>const int INF = 1000000000;<br><br>////////////////////////////////<br><br>int tab[6][6];<br><br>int pat[4][6][6];<br><br>int pxs[4], pys[4], xs, ys, capa;<br><br>int best;<br><br>void dzialaj(int x, int y, int ile, int left)<br>{<br>  best &gt;?= ile;<br>  if (x==xs) { x = 0; ++y; }<br>  if (y==ys) return;<br>  if (ile+left/capa&lt;=best)<br>  {<br>    return;<br>  }<br>  REP(d, 4)<br>  if (x+pxs[d]&lt;=xs &amp;&amp; y+pys[d]&lt;=ys)<br>  {<br>    REP(x2, pxs[d])<br>    REP(y2, pys[d])<br>    if (pat[d][x2][y2] &amp;&amp; tab[x+x2][y+y2])<br>      goto zle;<br>    REP(x2, pxs[d])<br>    REP(y2, pys[d])<br>    if (pat[d][x2][y2])<br>      tab[x+x2][y+y2] = 1;<br><br>    dzialaj(x, y, ile+1, left-capa);<br>    <br>    REP(x2, pxs[d])<br>    REP(y2, pys[d])<br>    if (pat[d][x2][y2])<br>      tab[x+x2][y+y2] = 0;<br>    <br>    zle:;<br>  }<br>  <br>  dzialaj(x+1, y, ile, left-!tab[x][y]);<br>}<br><br>class PatternCutting<br>{ <br>public: <br>  int getMax(int xs2, int ys2, vector &lt;string&gt; pattern) <br>  { <br>    pxs[0]=pxs[1]=pys[2]=pys[3] = size(pattern);<br>    pys[0]=pys[1]=pxs[2]=pxs[3] = size(pattern[0]);<br>    capa = 0;<br>    REP(x, pxs[0])<br>    REP(y, pys[0])<br>    {<br>      pat[0][x][y] = pattern[x][y]=='X';<br>      if (pat[0][x][y]) ++capa;<br>      pat[1][pxs[0]-1-x][pys[0]-1-y] = pat[0][x][y];<br>      pat[2][y][pxs[0]-1-x] = pat[0][x][y];<br>      pat[3][pys[0]-1-y][x] = pat[0][x][y];<br>    }<br>    <br>    <br>    xs = xs2;<br>    ys = ys2;<br>    best = 0;<br>    if (pxs[0]==1 &amp;&amp; pys[0]==1) return xs*ys;<br>    if (pxs[0]==2 &amp;&amp; pys[0]==1) return xs*ys/2;<br>    if (pxs[0]==1 &amp;&amp; pys[0]==2) return xs*ys/2;<br>    REP(x, xs) REP(y, ys) tab[x][y] = 0;<br>    dzialaj(0, 0, 0, xs*ys);<br>    return best;<br>  } <br>  <br> <br>}; <br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>