<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System<br>Imports System.Collections<br> <br>Public Class StepperMotor<br>    Private Function fixit(ByVal x As Integer, ByVal n As Integer) As Long<br>        Dim y As Long<br>        y = x<br>        If y &lt; 0 Then y = y + (-y \ n + 1) * n<br>        y = y Mod n<br>        Return y<br>    End Function<br>    Public Function rotateToNearest(ByVal n As Integer, ByVal current As Integer, ByVal target As Integer()) As Integer<br>        Dim i, bestPos, bestNeg As Integer<br>        Dim x, y As Long<br> <br>        bestPos = Integer.MaxValue<br>        bestNeg = Integer.MaxValue<br>        x = fixit(current, n)<br>        For i = 0 To target.Length - 1<br>            y = fixit(target(i), n)<br>            If y - x &gt;= 0 Then<br>                bestPos = Math.Min(bestPos, y - x)<br>            Else<br>                bestPos = Math.Min(bestPos, n + (y - x))<br>            End If<br>            If x - y &gt;= 0 Then<br>                bestNeg = Math.Min(bestNeg, x - y)<br>            Else<br>                bestNeg = Math.Min(bestNeg, n + (x - y))<br>            End If<br>        Next<br> <br>        If bestPos &lt;= bestNeg Then<br>            Return bestPos<br>        Else<br>            Return -bestNeg<br>        End If<br>    End Function<br>End Class<br></td>