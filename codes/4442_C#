<td class="problemText" colspan="8" valign="middle" align="left">
            public class SetMetric<br>  {<br>    public SetMetric()<br>    {<br>    }<br> <br>    public int nearness(int[] target, int[] candidate)<br>    {<br>      int i, j, k;<br>      int nt = target.Length;<br>      for(i = 0; i &lt; nt-1; i++)<br>        for(j = i+1; j &lt; nt; j++)<br>          if (target[i] &gt; target[j])<br>          {<br>            k = target[i];<br>            target[i] = target[j];<br>            target[j] = k;<br>          }<br>      int nc = candidate.Length;<br>      for(i = 0; i &lt; nc-1; i++)<br>        for(j = i+1; j &lt; nc; j++)<br>          if (candidate[i] &gt; candidate[j])<br>          {<br>            k = candidate[i];<br>            candidate[i] = candidate[j];<br>            candidate[j] = k;<br>          }<br>      int[,] mas = new int[nt,nc];<br>      for(i = 0; i &lt; nt; i++)<br>        for(j = 0; j &lt; nc; j++)<br>        {<br>          int min = 0;<br>          if (i &gt; 0)<br>          {<br>            min = 10000000;<br>            for(k = 0; k &lt; j; k++)<br>              if (min &gt; mas[i-1,k])<br>                min = mas[i-1,k];<br>          }<br>          mas[i, j] = min + System.Math.Abs(target[i] - candidate[j]);<br>        }<br>      int f = mas[nt-1,0];<br>      for(j = 1; j &lt; nc; j++)<br>        if (f &gt; mas[nt-1, j])<br>          f = mas[nt-1, j];<br>      return f;<br>    }<br>  }<br></td>