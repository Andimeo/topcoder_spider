<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;functional&gt;<br>#include &lt;iostream&gt;<br>#include &lt;map&gt;<br>#include &lt;stack&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br> <br>using namespace std;<br> <br>typedef vector&lt;bool&gt; VB; typedef vector&lt;double&gt; VD;<br>typedef vector&lt;int&gt; VI; typedef vector&lt;string&gt; VS;<br> <br>class SetMetric<br>{<br>public:<br> <br>int nearness(VI targ, VI cand)<br>{<br>  sort(targ.begin(),targ.end());<br>  sort(cand.begin(),cand.end());<br>  int i,n=targ.size();<br>  VB used;<br>  int dif,ret=1000000000;<br>  <br>  for(i=0;i&lt;n;i++) used.push_back(true);<br>  for(i=n;i&lt;cand.size();i++) used.push_back(false);<br>  VB ex=used;<br>  <br>  do<br>  {<br>    VI tmp;<br>    for(i=0;i&lt;cand.size();i++) if(used[i]) tmp.push_back(cand[i]);<br>    dif=0;<br>    for(i=0;i&lt;tmp.size();i++) dif+=abs(tmp[i]-targ[i]);<br>    ret&lt;?=dif;<br>    next_permutation(used.begin(),used.end());<br>  }while(used!=ex);<br>  <br>  return ret;<br>}<br> <br>};<br></td>