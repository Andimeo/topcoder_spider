<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;string&gt;<br>#include &lt;utility&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;math.h&gt;<br><br>using namespace std;<br><br>typedef vector&lt;string&gt; VS;<br><br>#define REP(var, n) for (int var = 0; var &lt; (n); ++var)<br><br>enum AddPatt { NOTPATT = 1, PATT = 3, BOTH = 2 };<br>// splits s into substrings with chars from patt or not from patt and returns<br>//  those as indicated by add.<br>VS split(const string&amp; s, const string&amp; patt = " ", AddPatt add = NOTPATT) {<br>  VS res;<br>  if (s.length() == 0)<br>    return res;<br>  bool inpatt = patt.find(s[0]) != patt.npos;<br>  size_t st = 0;<br>  for (size_t i = 1; i &lt; s.length(); ++i)<br>    if ((patt.find(s[i]) != patt.npos) != inpatt) {<br>      if ((inpatt &amp;&amp; add &gt;= 2) || (!inpatt &amp;&amp; add &lt;= 2))<br>        res.push_back(s.substr(st, i-st));<br>      inpatt = !inpatt;<br>      st = i;<br>    }<br>    if ((inpatt &amp;&amp; add &gt;= 2) || (!inpatt &amp;&amp; add &lt;= 2))<br>      res.push_back(s.substr(st));<br>    return res;<br>}<br><br>class TravellingByTrain<br>{ <br>public: <br>  string earliestArrival(vector &lt;string&gt; tt) { <br>    int t = 9*60 + 1440;<br>    REP(i, tt.size()) {<br>      VS r = split(tt[i].c_str());<br>      int dt = t%1440;<br>      int bt = 10000;<br>      REP(j, r.size()) {<br>        int dh,dm,ah,am;<br>        sscanf(r[j].c_str(), "%d:%d-%d:%d", &amp;dh, &amp;dm, &amp;ah, &amp;am);<br>        int d = dh*60+dm;<br>        int a = ah*60+am;<br>        if (a &lt;= d) a+=1440;<br>        int wt = d - dt;<br>        if (wt &lt; 0) wt += 1440;<br>        bt = min(bt, wt+a-d);<br>      }<br>      t += bt;<br>    }<br>    char buf[100];<br>    sprintf(buf, "%02d:%02d, day %d", t%1440/60, t%60, t/1440);<br>    return buf;<br>  } <br>  <br> <br>}; <br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>