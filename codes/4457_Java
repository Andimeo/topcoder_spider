<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class MailArchiving {<br>  int INF = 10000;<br>  ArrayList al;<br>  int n;<br>  int [] data;<br>  int [][] dp;<br>  <br>  int getIdx(String s) {<br>    int idx = al.indexOf(s);<br>    if (idx &lt; 0) {<br>      al.add(s);<br>      return al.indexOf(s);<br>    }<br>    return idx;<br>  }<br>  <br>  int go(int left, int right) {<br>    if (left &gt; right) return 0;<br>    if (left == right) return 1;<br>    if (dp[left][right] &lt; INF) return dp[left][right];<br>    <br>    int cost = 1 + go(left+1, right);<br>    <br>    for (int i = left+1; i &lt;= right; i++) {<br>      if (data[i] == data[left]) {<br>        int c = go(left+1, i-1) + go(i, right);<br>        cost = Math.min(cost, c);<br>      }<br>    }<br>    return dp[left][right] = cost;<br>  }<br>  <br>    public int minSelections(String[] dest) {<br>      n = dest.length;<br>      al = new ArrayList();<br>      data = new int[n];<br>      for (int i = 0; i &lt; n; i++) data[i] = getIdx(dest[i]);<br>      <br>      dp = new int[n][n];<br>      for (int i = 0; i &lt; n; i++) Arrays.fill(dp[i], INF);<br>      return go(0, n-1);<br>    }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>