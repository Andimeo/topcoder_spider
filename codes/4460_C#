<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Text.RegularExpressions;<br>using System.Collections;<br><br>public class ComputerExpert {<br>  Hashtable cf;<br>  Hashtable nf;<br><br>  bool try_rule(string r)<br>  {<br>    string lhs = r.Substring(0, r.IndexOf(" -&gt; "));<br>    string rhs = r.Substring(r.IndexOf(" -&gt; ")+4, r.Length - r.IndexOf(" -&gt; ") - 4);<br>    string[] ands = lhs.Split(',');<br><br>    for (int i=0; i &lt; ands.Length; i++)<br>    {<br>      string[] ors = ands[i].Split('/');<br>      bool good = false;<br><br>      for (int j=0; j &lt; ors.Length; j++)<br>        if (cf.ContainsKey(ors[j]))<br>        {<br>          good = true;<br>          break;<br>        }<br><br>      if (!good) return false;<br>    }<br><br>    if (!cf.ContainsKey(rhs))<br>    {<br>      nf.Add(rhs, 1);<br>      cf.Add(rhs, 1);<br>      return true;<br>    }<br><br>    return false;<br>  }<br><br>    public string[] operate(string[] facts, string[] rules) <br>  {<br>    cf = new Hashtable();<br>    nf = new Hashtable();<br>    for (int i=0; i &lt; facts.Length; i++)<br>      if (!cf.ContainsKey(facts[i]))<br>        cf.Add(facts[i], 1);<br><br>    bool[] f = new bool[rules.Length];<br>    bool added = false;<br><br>    do<br>    {<br>      added = false;<br><br>      for (int i=0; i &lt; rules.Length; i++)<br>        if (f[i] == false)<br>        {<br>          f[i] = try_rule(rules[i]);<br>          added |= f[i];<br>        }<br>    } while (added);<br><br>    string[] res = new string[nf.Count];<br>    nf.Keys.CopyTo(res, 0);<br><br>    Array.Sort(res);<br>    return res;<br>    }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>