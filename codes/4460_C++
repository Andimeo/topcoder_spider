<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br> <br>using namespace std;<br>typedef vector&lt;string&gt; VS;<br> <br>vector&lt;string&gt; split( const string&amp; s, const string&amp; delim =" " ) { vector&lt;string&gt; res; string t; for ( unsigned int i = 0 ; i != s.size() ; i++ ) { if ( delim.find( s[i] ) != string::npos ) { if ( !t.empty() ) { res.push_back( t ); t = ""; } } else { t += s[i]; } } if ( !t.empty() ) { res.push_back(t); } return res; }<br>template&lt;class A,class B&gt; inline bool zawieraV(const A&amp;a, const B&amp;b) {  return find(a.begin(),a.end(),b)!=a.end();}<br> <br> <br>class ComputerExpert<br>{<br>public:<br>  vector &lt;string&gt; operate(vector &lt;string&gt; facts, vector &lt;string&gt; rules)<br>  {<br>    VS f = facts;<br>    VS wyn;<br>    vector&lt;pair&lt;string,string&gt; &gt; r;<br> <br>    int len = rules.size();<br>    int i,j,k;<br> <br>    for (i=0;i&lt;len;i++)<br>    {<br>      VS temp = split(rules.at(i)," -&gt; ");<br>      r.push_back(make_pair(temp.at(0),temp.at(1)));<br>    }<br>    bool zmiana = false;<br> <br>    do<br>    {<br>      zmiana = false;<br>      for (i=0;i&lt;len;i++)<br>      {<br>        if (zawieraV(f,r.at(i).second))<br>          continue;<br>        VS andd= split(r.at(i).first,",");<br>        bool ok = true;<br>        for (int ad = 0;ad&lt;andd.size()&amp;&amp;ok;ad++)<br>        {<br>          VS orr = split(andd.at(ad),"/");<br>          bool jest = false;<br>          for (j=0;j&lt;orr.size()&amp;&amp;!jest;j++)<br>            if (zawieraV(f,orr.at(j)))<br>              jest = true;<br>          if (!jest)<br>            ok = false;          <br>        }<br>        if (ok)<br>        {<br>          f.push_back(r.at(i).second);<br>          wyn.push_back(r.at(i).second);<br>          zmiana = true;<br>        }<br>      }<br>    } while (zmiana);<br> <br>    sort(wyn.begin(),wyn.end());<br>    return wyn;<br>  }<br>  <br>};<br></td>