<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;iostream&gt;<br>#include &lt;string&gt;<br> <br>using namespace std;<br> <br>class MirrorPath {<br>public: vector&lt;string&gt; path(vector&lt;string&gt;);<br>};<br> <br>vector&lt;string&gt; MirrorPath::path(vector&lt;string&gt; map)<br>{<br>vector&lt;string&gt; r(map.size());<br> <br>int cx = -1;<br>int cy = -1;<br>int dx = 0;<br>int dy = 0;<br> <br> <br>for (int i=0; i&lt;map.size(); i++) r[i] = map[i];<br> <br>if (map[0].find('.')) {<br>  cx = 0;<br>  cy = map[0].find('.');<br>  dx = 1;<br>  dy = 0;<br>}<br> <br>if (map[map.size()-1].find('.')) {<br>  cx = map.size()-1;<br>  cy = map[map.size()-1].find('.');<br>  dx = -1;<br>  dy = 0;<br>}<br> <br>for (int i=1; i&lt;map.size()-1; i++) {<br> if (map[i][0] == '.') { cx = i; cy = 0; dx = 0; dy = 1;}<br> if (map[i][map[0].length()-1] == '.') { cx = i; cy = map[0].length() - 1; dx = 0; dy = -1; }<br>}<br> <br> <br> <br> <br>while (cx &gt;= 0 &amp;&amp; cy &gt;= 0 &amp;&amp; cx &lt; map.size() &amp;&amp; cy &lt; map[0].length())<br>{<br> <br>//cout&lt;&lt;cx&lt;&lt;" "&lt;&lt;cy&lt;&lt;endl;<br> <br>if (r[cx][cy] == '.') {<br> if (dx == 0) { r[cx][cy] = '-'; cy += dy; } <br> else if (dy == 0) { r[cx][cy] = '|'; cx += dx; }<br>}<br>else if (r[cx][cy] == '|' || r[cx][cy] == '-') {<br> r[cx][cy] = '+';<br> cy += dy; cx += dx;<br>}<br>else if (r[cx][cy] == '`') {<br> if (dx == 0) { dx = dy; dy = 0; }<br> else if (dy == 0) { dy = dx; dx = 0; }<br> cy += dy; cx += dx; <br>}<br>else if (r[cx][cy] == '/') {<br> if (dx == 0) { dx = -1 * dy; dy = 0; }<br> else if (dy == 0) { dy = -1 * dx; dx = 0; }<br> cy += dy; cx += dx; <br>}<br> <br> <br>}<br> <br> <br> <br>return r;<br>}<br></td>