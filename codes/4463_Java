<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class BoxUnion {<br>  int[] lx;<br>  int[] ly;<br>  int[] rx;<br>  int[] ry;<br><br>  public int area(int num) {<br>    return (rx[num]-lx[num]) * (ry[num]-ly[num]);<br>  }<br><br>  public int area2(int num1, int num2) {<br>    int _lx = Math.max(lx[num1], lx[num2]);<br>    int _rx = Math.min(rx[num1], rx[num2]);<br>    int _ly = Math.max(ly[num1], ly[num2]);<br>    int _ry = Math.min(ry[num1], ry[num2]);<br>    if (_lx&gt;_rx) {<br>      return 0;<br>    }<br>    if (_ly&gt;_ry) {<br>      return 0;<br>    }<br>    return (_rx-_lx)*(_ry-_ly);<br>  }<br><br>  public int area3(int num1, int num2, int num3) {<br>    int _lx = Math.max(Math.max(lx[num1], lx[num2]), lx[num3]);<br>    int _rx = Math.min(Math.min(rx[num1], rx[num2]), rx[num3]);<br>    int _ly = Math.max(Math.max(ly[num1], ly[num2]), ly[num3]);<br>    int _ry = Math.min(Math.min(ry[num1], ry[num2]), ry[num3]);<br>    if (_lx&gt;_rx) {<br>      return 0;<br>    }<br>    if (_ly&gt;_ry) {<br>      return 0;<br>    }<br>    return (_rx-_lx)*(_ry-_ly);<br>  }<br><br><br>    public int area(String[] rectangles) {<br>  int n = rectangles.length;<br>  lx = new int[n];<br>  ly = new int[n];<br>  rx = new int[n];<br>  ry = new int[n];<br>  for (int i=0; i &lt; n; i++) {<br>    StringTokenizer st = new StringTokenizer(rectangles[i], " ");<br>    lx[i] = Integer.parseInt(st.nextToken());<br>    ly[i] = Integer.parseInt(st.nextToken());<br>    rx[i] = Integer.parseInt(st.nextToken());<br>    ry[i] = Integer.parseInt(st.nextToken());<br>  }<br>  if (n == 1) {<br>    return area(0);<br>  } else<br>  if (n == 2) {<br>    return area(0)+area(1)-area2(0,1);<br>  } else {<br>    return area(0)+area(1)+area(2)-area2(0,1)-area2(0,2)-area2(1,2)+area3(0,1,2);<br>  }<br>    }<br><br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>