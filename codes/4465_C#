<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Collections;<br><br>public class ConnectFour <br>{<br><br>  string[] b;<br>  int[] s = new int[8];<br>  char[] c = new char[2] {'X','O'};<br>  int[] w;<br>  int res = 5;<br>  int cnt;<br>  int n;<br>  int lm;<br>  int[] dx = new int[8] {0,1,1,1,0,-1,-1,-1};<br>  int[] dy = new int[8] {1,1,0,-1,-1,-1,0,1};<br><br>  bool won(int p, int[] t)<br>  {<br>    for (int z = 0; z &lt; 8; z++)<br>      for (int k = 0; k &lt; 4; k++)<br>      {<br>        bool ok = true;<br>        for (int l = 0; l &lt; 4; l++)<br>        {<br>          int nx = lm + dx[z]*(l-k);<br>          int ny = t[lm]-1 + dy[z]*(l-k);<br>          if (!(nx &gt;= 0 &amp;&amp; nx &lt; 7 &amp;&amp; ny &gt;= 0 &amp;&amp; ny &lt; t[nx] &amp;&amp; b[nx][ny] == c[p])) { ok = false; break; }<br><br>        }<br>        if (ok) return true;<br>      }<br>    return false;<br><br>  }<br><br>  void Go(int p, int[] t, int l)<br>  {<br>    if (w[l] &gt; 0) return;<br>    w[l] = 1;<br><br>    if (n == cnt)<br>    {<br>      cnt = cnt;<br>    }<br><br>    if (l &gt; 0 &amp;&amp; won(1-p,t))<br>    {<br>      if (n == cnt)<br>        res = 2+1-p;<br>      return;<br>    }<br>    if (l == (s[7]-1)) { res = 4; return; }<br>    if (n == cnt) { res = p; return; }<br><br>    for (int i = 0; i &lt; 7; i++)<br>      if (t[i] &lt; 6 &amp;&amp; b[i][t[i]] == c[p])<br>      {<br>        t[i]++;<br>        cnt++;<br>        lm = i;<br>        Go(1-p, t, l+s[i]);<br>        t[i]--;<br>        cnt--;<br>      }<br>    <br><br>  }<br><br>    public string judge(string[] board) {<br>    <br>    w = new int[1000000];<br>    b = new string[7];<br>    n = 7*6;<br>    for (int i = 0; i &lt; 7; i++)<br>      for (int j = 0; j &lt; 6; j++)<br>      {<br>        b[i] += board[5-j][i];<br>        if (board[j][i] == '.') n--;<br>      }<br>    s[0] = 1;<br>    for (int i = 1; i &lt; 8; i++) s[i] = s[i-1]*7;<br>    Go(0, new int[8], 0);<br><br>    string[] ot = new string[6] {"first player moves","second player moves","first player wins","second player wins","draw game","invalid"};<br><br>        return ot[res];<br>    }<br><br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>