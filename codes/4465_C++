<td class="problemText" colspan="8" valign="middle" align="left">
            // another fine solution by misof<br>#include &lt;algorithm&gt;<br> <br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br> <br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cassert&gt;<br>using namespace std;<br> <br>#define REP(i,n) for(int i=0;i&lt;(n);++i)<br>#define FOR(i,a,b) for(int i=(a);i&lt;=(b);++i)<br>typedef vector&lt;int&gt; VI;<br> <br>/////////////////// CODE WRITTEN DURING THE COMPETITION FOLLOWS ////////////////////////////////<br> <br>int memo[2000000];<br>char B[6][7];<br> <br>int dr[] = { -1, -1, -1, 0, 0, 1, 1, 1 };<br>int dc[] = { -1, 0, 1, -1, 1, -1, 0, 1 };<br> <br>int ok(int r, int c) { return r&gt;=0 &amp;&amp; r&lt;=5 &amp;&amp; c&gt;=0 &amp;&amp; c&lt;=6; }<br>int won(char ch) {<br>  int res = 0;<br>  <br>  REP(r,6) REP(c,7) if (B[r][c]==ch) REP(d,8) {<br>    if (ok(r+3*dr[d],c+3*dc[d])) {<br>      int oka = 1;<br>      REP(s,4) if (B[r + s*dr[d] ][c + s*dc[d] ]!=ch) oka = 0;<br>      res |= oka;<br>    }<br>  }<br>  return res;<br>}<br> <br>int encode(int a, int b, int c, int d, int e, int f, int g, int i) {<br>  int res = 0;<br>  res = res*7 + a;<br>  res = res*7 + b;<br>  res = res*7 + c;<br>  res = res*7 + d;<br>  res = res*7 + e;<br>  res = res*7 + f;<br>  res = res*7 + g;<br>  res = res*2 + i;<br>  return res;<br>}<br> <br>int verify(int a, int b, int c, int d, int e, int f, int g, int moves) {<br>  int R = encode(a,b,c,d,e,f,g,moves);<br>  int &amp;res = memo[R];<br>  if (res != -1) return res;<br>  res = 0;<br> <br>  int H[7];<br>  H[0]=a; H[1]=b; H[2]=c; H[3]=d; H[4]=e; H[5]=f; H[6]=g;<br>  <br>  int empty = 1;<br>  REP(c,7) if (H[c]) empty = 0;<br>  if (empty) return res=1;<br> <br>  char remove = (moves==0)?'O':'X';<br>  REP(c,7) if (H[c]) if (B[ 6-H[c] ][c]==remove) {<br>    H[c]--;<br>    res |= verify(H[0],H[1],H[2],H[3],H[4],H[5],H[6],1-moves);<br>    H[c]++;<br>  }<br>  return res;<br>}<br> <br>class ConnectFour {<br>public:<br>  string judge(vector &lt;string&gt; board) {<br>    REP(i,2000000) memo[i]=-1;<br>    <br>    FOR(r,1,5) REP(c,7) if (board[r][c] == '.') if (board[r-1][c] != '.') <br>      return "invalid";<br>    REP(r,6) REP(c,7) B[r][c] = board[r][c];<br> <br>    VI hlbka(7,0);<br>    REP(c,7) {<br>      while (1) {<br>        if (hlbka[c]==6) break;<br>        if (board[ 5-hlbka[c] ][c] == '.') break; else hlbka[c]++;<br>      }<br>    }<br> <br>    int empty = 1;<br>    REP(c,7) if (hlbka[c]) empty = 0;<br>    if (empty) return "first player moves";<br> <br>    int countx = 0, counto = 0;<br>    REP(r,6) REP(c,7) if (B[r][c]=='X') countx++;<br>    REP(r,6) REP(c,7) if (B[r][c]=='O') counto++;<br>    if (countx != counto  &amp;&amp;  countx != counto+1) return "invalid";<br>    <br>    int tomove;<br>    if (countx == counto) tomove=0; else tomove=1;<br>    int whowon = 0;<br>    whowon += won('X');<br>    whowon += 2*won('O');<br>    if (whowon == 3) return "invalid";<br>    if (tomove==0 &amp;&amp; whowon==1) return "invalid";<br>    if (tomove==1 &amp;&amp; whowon==2) return "invalid";<br>    <br>    string res;<br>    char remove = (tomove==0)?'O':'X';<br>    int dobra = 0;<br> <br>    REP(c,7) if (hlbka[c]) if (B[ 6-hlbka[c] ][c]==remove) {<br>      B[ 6-hlbka[c] ][c]='.';<br>      if (!won(remove)) {<br>        hlbka[c]--;<br>        dobra |= verify(hlbka[0],hlbka[1],hlbka[2],hlbka[3],hlbka[4],hlbka[5],hlbka[6],1-tomove);<br>        hlbka[c]++;<br>      }<br>      B[ 6-hlbka[c] ][c]=remove;<br>    }<br> <br>    if (!dobra) return "invalid";<br>    if (whowon == 1) return "first player wins";<br>    if (whowon == 2) return "second player wins";<br> <br>    int endgame = 1;<br>    REP(c,7) endgame &amp;= (hlbka[c]==6);<br>    if (endgame) return "draw game";<br>    <br>    if (tomove == 0) return "first player moves";<br>    if (tomove == 1) return "second player moves"; <br>    <br>    return "congrats, +50 points";<br>  }<br> <br> <br>};<br>// Unused code automatically removed, but the UCR still sucks<br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>