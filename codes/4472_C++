<td class="problemText" colspan="8" valign="middle" align="left">
            // another fine solution by misof<br>#include &lt;algorithm&gt;<br> <br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br> <br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cassert&gt;<br>using namespace std;<br> <br>#define REP(i,n) for(typeof(n) i=0;i&lt;(n);++i)<br> <br>/////////////////// CODE WRITTEN DURING THE COMPETITION FOLLOWS ////////////////////////////////<br> <br>class CalcButton {<br>public:<br>  string getDigits(vector &lt;string&gt; sequence) {<br>    string S;<br>    REP(i,sequence.size()) S += sequence[i];<br>    <br>    int best = -1;<br>    string res("000");<br>    REP(i,10) REP(j,10) REP(k,10) {<br>      char s1 = char(i+'0');<br>      char s2 = char(j+'0');<br>      char s3 = char(k+'0');<br>      int pocet = 0;<br>      int kde=0;<br>      while (kde+2 &lt; S.size()) {<br>        if (S[kde]==s1 &amp;&amp; S[kde+1]==s2 &amp;&amp; S[kde+2]==s3) { pocet++; kde+=3; } else kde++;<br>      }<br>      if (pocet&gt;best) { best=pocet; res=s1; res+=s2; res+=s3; }<br>    }<br>    <br>    return res;<br>  }<br> <br> <br>};<br>// Unused code automatically removed, but the UCR still sucks<br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>