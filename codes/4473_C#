<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br><br>public class PluCodeGenerator <br>{<br>  int digits;<br>  int[,,,,] lut = new int[15, 10, 10, 2, 2];<br>  int go(int at,int last1, int last2, int ok, int started)<br>  {<br>    int ogs = started;<br>    if(at == 0) return ok;<br>    if(lut[at,last1,last2,ok,started] != -1) return lut[at,last1,last2,ok,started];<br>    int total = 0;<br>    for(int i=0;i&lt;10;i++)<br>    {<br>      if(last1 == last2 &amp;&amp; last1 == i &amp;&amp; started != 0)<br>      {<br>          <br>      }<br>      else<br>      {<br>        if(i &gt; 0)<br>        {<br>          started = 1;<br>        }<br>        if(ok == 1)<br>        {<br>          total += go(at-1, last2, i, 1, started);<br>        }<br>        else<br>        {<br>          if(i &lt; number[digits - at] - '0')<br>          {<br>            total += go(at-1, last2, i, 1, started);<br>          }<br>          else if(i == number[digits - at] - '0')<br>          {<br>            total += go(at-1, last2, i, 0, started);<br>          }<br>        }<br>      }<br>    }<br>    lut[at,last1,last2,ok,ogs] = total;<br>    return total;<br>  }<br>  string number;<br>  public int countInvalidCodes(int N) <br>  {<br>    for(int i=0;i&lt;15; i++) for(int j=0;j&lt;10;j++) for(int k=0;k&lt;10;k++) for(int l=0;l&lt;2;l++) for(int m=0;m&lt;2;m++) lut[i,j,k,l,m] = -1;<br>    if(N &lt; 111) return 0;<br>    number = N.ToString();<br><br>    digits = N.ToString().Length;<br><br>    int sum = 0;<br>    for(int first = 0;first &lt; 10;first++)<br>    {<br>      if(first &lt;= number[0] - '0')<br>      {<br>        for(int second = 0; second &lt; 10; second++)<br>        {<br>           if(first &lt; number[0] - '0' || first == number[0] - '0' &amp;&amp; second &lt;= number[1] - '0')<br>           {<br>            int ok = 1;<br>             int start = first &gt; 0 || second &gt; 0 ? 1 : 0;<br>            if(first == number[0] - '0' &amp;&amp; second == number[1] - '0') ok = 0;<br>            sum += go(digits-2, first, second, ok, start);<br>          }<br>        }<br>      }<br>    }<br>    return N - sum;<br>  }<br><br>  <br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>