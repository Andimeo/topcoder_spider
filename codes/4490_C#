<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>public class GuessCard {<br>  void Flip(int[] a, int[] b ,int width, int height)<br>  {<br>    int k = 0;<br>    for (int i = 0; i &lt; width; ++i)<br>      for (int j = 0; j &lt; height; ++j)<br>        b[k++] = a[j * width + i];<br>  }<br><br>  public int whichRow(int width, int height, int[] columns) {<br>    int[][] arrangement = new int[2][];<br>    bool[] can = new bool[width*height];<br>    arrangement[0] = new int[width*height];<br>    arrangement[1] = new int[width*height];<br>    int cur = 0, prev = 1;<br>    for (int i = 0; i &lt; width*height; ++i) <br>    {<br>      arrangement[0][i] = i;<br>      can[i] = true;<br>    }<br>    for (int i = 0; i &lt; columns.Length; ++i)<br>    {<br>      if (i &gt; 0) <br>      {<br>        Flip(arrangement[cur], arrangement[prev], width, height);<br>        int t = cur;<br>        cur = prev;<br>        prev = t;<br>      }<br>      int col = columns[i];<br>      for (int ii = 0; ii &lt; width; ++ii)<br>        if (ii != col) {<br>          for (int j = 0; j &lt; height; ++j)<br>            can[arrangement[cur][j * width + ii]] = false;<br>        }<br>    }<br>    int numcan = 0;<br>    int lastcan = 0;<br>    for (int i = 0; i &lt; width * height; ++i)<br>      if (can[i])<br>      {<br>        ++numcan;<br>        lastcan=i;<br>      }<br>    if (numcan == 1)<br>    {<br>      for (int j = 0; j &lt; width*height; ++j)<br>        if (arrangement[cur][j] == lastcan)<br>          return j / width;<br>      return -1;<br>    }<br>    else<br>      return -1;<br>  }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>