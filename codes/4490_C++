<td class="problemText" colspan="8" valign="middle" align="left">
            using namespace std;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;ctype.h&gt;<br>#include &lt;stack&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>typedef long long I64;<br>typedef pair&lt;int,int&gt; PII;<br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br>typedef vector&lt;double&gt; VD;<br>typedef vector&lt;PII&gt; VPII;<br>#define FOR(i,n) for(int i=0;i&lt;(n);i++)<br>#define VAR(a,b) __typeof(b) a=b<br>#define FORIT(it,c) for(VAR(it,(c).begin());it!=(c).end();it++)<br>#define ALL(x) (x).begin(),(x).end()<br> <br>struct GuessCardImpl {<br>    int width;<br>    int height;<br>    vector &lt;int&gt; columns;<br>    GuessCardImpl(int _width,int _height,vector &lt;int&gt; _columns) {<br>        width = _width;<br>        height = _height;<br>        columns = _columns;<br>    }<br> <br>    int whichRow() {<br>        vector&lt;vector&lt;int&gt; &gt; grid(height,VI(width));<br>        int at = 0;<br>        FOR(y,height)<br>            FOR(x,width)<br>                grid[y][x] = at++;<br> <br>        FOR(c,columns.size()) {<br>            int pick = columns[c];<br>            FOR(y,height)<br>                FOR(x,width)<br>                    if(x!=pick) grid[y][x]=-1;<br> <br>            if(c==columns.size()-1) break;<br> <br>            VI vals;<br>            FOR(x,width)<br>                FOR(y,height)<br>                    vals.push_back(grid[y][x]);<br> <br>            at=0;<br>            FOR(y,height)<br>                FOR(x,width)<br>                    grid[y][x] = vals[at++];<br>        }<br>        int ret = 0;<br>        int count = 0;<br>        FOR(y,height)<br>            FOR(x,width)<br>                if(grid[y][x] != -1) {<br>                    ret = y;<br>                    count++;<br>                }<br>        return count==1 ? ret : -1;<br>    };<br>};<br> <br> <br>struct GuessCard {<br>    int whichRow(int width,int height,vector &lt;int&gt; columns) {<br>        GuessCardImpl impl(width,height,columns);<br>        return impl.whichRow();<br>    }<br> <br>};<br> <br> <br> <br> <br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>