<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class GuessCard<br>{<br>  public int whichRow(int width, int height, int[] columns)<br>  {<br>    int[][] state=new int[width][height];<br>    int count=0;<br>    for (int row=0; row&lt;height; row++)<br>      for (int col=0; col&lt;width; col++)<br>        state[col][row]=count++;<br>    <br>    BitSet posibs=new BitSet();<br>    for (int a=0; a&lt;width*height; a++)<br>      posibs.set(a, true);<br>    <br>    for (int r=0; r&lt;columns.length; r++) {<br>      int c=columns[r];<br>      BitSet np=new BitSet();<br>      for (int a=0; a&lt;height; a++)<br>        np.set(state[c][a], true);<br>      <br>      posibs.and(np);<br>      <br>      if (r&lt;(columns.length-1)) {<br>        int[] tmp=new int[width*height];<br>        int pos=0;<br>        for (int a=0; a&lt;width; a++)<br>          for (int b=0; b&lt;height; b++)<br>            tmp[pos++]=state[a][b];<br>        <br>        pos=0;<br>        for (int a=0; a&lt;height; a++)<br>          for (int b=0; b&lt;width; b++)<br>            state[b][a]=tmp[pos++];<br>      }<br>    }<br>    <br>    int found=-1;<br>    for (int a=0; a&lt;width*height; a++) {<br>      if (!posibs.get(a))<br>        continue;<br>      <br>      if (found&gt;=0)<br>        return -1;<br>      <br>      outer:<br>      for (int c=0; c&lt;width; c++)<br>        for (int r=0; r&lt;height; r++)<br>          if (state[c][r]==a) {<br>            found=r;<br>            break outer;<br>          }<br>    }<br>    <br>    return found;<br>  }<br>}<br></td>