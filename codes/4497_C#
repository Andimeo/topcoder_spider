<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br> <br>  public class BlackWhitePlane<br>  {<br>    public class Circle : IComparable<br>    {<br>      public int X, Y, R;<br>      public bool Odd = true;<br> <br>      public Circle(int x, int y, int r) {<br>        X = x;<br>        Y = y;<br>        R = r;<br>      }<br> <br>      public double Dist(Circle c) {<br>        return Math.Sqrt((X-c.X)*(X-c.X) + (Y-c.Y)*(Y-c.Y));<br>      }<br>      #region IComparable Members<br> <br>      public int CompareTo(object obj)<br>      {<br>        return ((Circle)obj).R - R;<br>      }<br> <br>      #endregion<br>    }<br>    <br>    public double area(string[] circles) {<br>      Circle[] list = new Circle[circles.Length];<br> <br>      double sq = 0;<br> <br>      for(int i=0; i&lt;circles.Length; i++) {<br>        string[] ss = circles[i].Split(" ".ToCharArray());<br>        list[i] = new Circle(int.Parse(ss[0]), int.Parse(ss[1]), int.Parse(ss[2]));<br>      }<br> <br>      Array.Sort(list);<br> <br>      for(int i=0; i&lt;list.Length; i++) {<br>        Circle a = list[i];<br>        for(int j=i+1; j&lt;list.Length; j++) <br>        {<br>          Circle b = list[j];<br>          if(a.Dist(b) &lt; a.R) {<br>            b.Odd = !b.Odd;<br>          }<br>        }<br>      }<br> <br>      for(int i=0; i&lt;list.Length; i++) <br>      {<br>        Circle a = list[i];<br>        double tmp = (a.R*a.R) * Math.PI;<br>        if(a.Odd) {<br>          sq += tmp;<br>        } else {<br>          sq -= tmp;<br>        }<br>      }<br> <br>      return sq;<br>    }<br> <br>  }<br></td>