<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class Bingo<br>{<br>  public string winner(string[] card, string[] calls)<br>  {<br>    ArrayList[] rows = new ArrayList[5];<br>    ArrayList[] cols = new ArrayList[5];<br>    ArrayList diag1 = new ArrayList();<br>    ArrayList diag2 = new ArrayList();<br>    for (int i = 0; i &lt; 5; i++){ rows[i] = new ArrayList(); cols[i] = new ArrayList(); }<br>    string[][] crd = new string[6][];<br>    for (int i = 0; i &lt; 6; i++)<br>      crd[i] = card[i].Trim().Replace("  ", " ").Split();<br>    ArrayList winners = new ArrayList();<br>    int z = 0;<br>    foreach (string s in calls)<br>    {<br>      string nm = s.Substring(1);<br>      if (s.Equals("BINGO")) return "YOU LOSE";<br>      int idx = Array.IndexOf(crd[0], ""+s[0]);<br>      if (crd[idx+1][idx].Equals(nm)) diag1.Add(z);<br>      if (crd[5-idx][idx].Equals(nm)) diag2.Add(z);<br>      bool ci = false;<br>      for (int i = 1; i &lt; 6; i++)<br>      {<br>        if (crd[i][idx].Equals(nm)){ ci = true; rows[i-1].Add(z); }<br>        if (rows[i-1].Count == (i==3?4:5)) winners.Add(rows[i-1]);<br>      }<br>      if (ci) cols[idx].Add(z);<br>      if (diag1.Count == 4) winners.Add(diag1);<br>      if (diag2.Count == 4) winners.Add(diag2);<br>      if (cols[idx].Count == (idx==2?4:5)) winners.Add(cols[idx]);<br>      z++;<br>      if (winners.Count &gt; 0) break;<br>    }<br>    ArrayList best = (ArrayList)winners[0];<br>    for (int i = 1; i &lt; winners.Count; i++)<br>      best = compare(best, (ArrayList)winners[i]);<br>    return format(best, calls);<br>  }<br>  <br>  string format(ArrayList l, string[] cs)<br>  {<br>    string res = "";<br>    foreach (int i in l)<br>      res += "," + cs[i];<br>    return res.Substring(1);<br>  }<br>  <br>  ArrayList compare(ArrayList l1, ArrayList l2)<br>  {<br>    for (int i = 0; i &lt; l1.Count; i++)<br>    {<br>      if (l1[i].Equals(l2[i])) continue;<br>      return ((int)l1[i] &lt; (int)l2[i]) ? l1 : l2;<br>    }<br>    return l1;<br>  }<br>  <br>}<br> <br>//Powered by [KawigiEdit]<br></td>