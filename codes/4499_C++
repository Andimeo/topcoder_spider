<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cctype&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;utility&gt;<br>#include &lt;numeric&gt;<br> <br>using namespace std;<br> <br>int sx[] = {0, 1, 2, 3, 4, 0, 0, 0, 0, 0, 0, 4};<br>int sy[] = {0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 0, 0};<br>int dx[] = {0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, -1};<br>int dy[] = {1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1};<br> <br>class Bingo {<br>  public:<br>  string winner(vector &lt;string&gt; card, vector &lt;string&gt; calls) {<br> <br>    calls.pop_back();<br>    vector &lt;int&gt; ans;<br>    ans.push_back(100);<br>    int best = 100;<br>    for (int i = 0; i &lt; 12; i++)<br>      {<br>        vector &lt;int&gt; tmp;<br>        int ctr = 0;<br>        for (int k = 0; k &lt; 5; k++)<br>    {<br>      int x = sx[i] + k*dx[i], y = sy[i] + k*dy[i];<br>      string key;<br>      key += card[0][3*y+2];<br>      if (card[x+1][3*y+1] != ' ')<br>        key += card[x+1][3*y+1];<br>      key += card[x+1][3*y+2];<br>      for (int j = 0; j &lt; calls.size(); j++)<br>        if (calls[j] == key)<br>          {<br>      tmp.push_back(j);<br>      ctr++;<br>          }<br>      if (x == 2 &amp;&amp; y == 2) ctr++;<br>    }<br>        if (ctr == 5)<br>    {<br>      sort(tmp.begin(), tmp.end());<br>      int last = tmp.back();<br>      if (last &lt; best || last == best &amp;&amp; tmp &lt; ans)<br>        {<br>          best = last;<br>          ans = tmp;<br>        }<br>    }<br>      }<br>    if (best == 100)<br>      return "YOU LOSE";<br>    string ret;<br>    for (int i = 0; i &lt; ans.size(); i++)<br>      {<br>        ret += calls[ans[i]];<br>        if (i+1 != ans.size())<br>    ret += ",";<br>      }<br>    return ret;<br>    <br>  }<br>};<br> <br> <br>// Powered by FileEdit<br></td>