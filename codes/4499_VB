<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System<br>Imports System.Collections<br>Imports System.Math<br> <br>Public Class Bingo<br>    Public Function winner(ByVal card As String(), ByVal calls As String()) As String<br>        Dim i, j, k, l As Integer<br> <br>        Dim aCard(4, 4) As Integer<br> <br>        Dim aSearch(11, 4, 1) As Integer<br> <br>        For i = 0 To 4<br>            For j = 0 To 4<br>                aSearch(i, j, 0) = i<br>                aSearch(i, j, 1) = j<br>                aSearch(i + 5, j, 0) = j<br>                aSearch(i + 5, j, 1) = i<br>            Next<br>        Next<br> <br>        For j = 0 To 4<br>            aSearch(10, j, 0) = j<br>            aSearch(10, j, 1) = j<br>            aSearch(11, j, 0) = j<br>            aSearch(11, j, 1) = 4 - j<br>        Next<br> <br> <br> <br>        For i = 0 To 4<br>            card(i + 1) = card(i + 1).Trim<br>            card(i + 1) = card(i + 1).Replace("  ", " ")<br>            For j = 0 To 4<br>                If i &lt;&gt; 2 Or j &lt;&gt; 2 Then<br>                    aCard(i, j) = CInt(card(i + 1).Split(" "c)(j))<br>                End If<br>            Next<br>        Next<br> <br>        Dim iMinCall As Integer<br>        Dim iWin As Integer<br>        Dim bAll As Boolean<br>        Dim iLow As Integer<br>        Dim iLowest As Integer<br> <br>        Dim aCalled(4, 4) As Integer<br>        For i = 0 To 4<br>            For j = 0 To 4<br>                aCalled(i, j) = -1<br>            Next<br>        Next<br>        aCalled(2, 2) = 999<br> <br>        For i = 0 To calls.GetUpperBound(0)<br>            If calls(i) = "BINGO" Then Return "YOU LOSE"<br>            Select Case calls(i).Substring(0, 1)<br>                Case "B"<br>                    j = 0<br>                Case "I"<br>                    j = 1<br>                Case "N"<br>                    j = 2<br>                Case "G"<br>                    j = 3<br>                Case "O"<br>                    j = 4<br>            End Select<br>            For k = 0 To 4<br>                If aCard(k, j) = CInt(calls(i).Substring(1)) Then<br>                    aCalled(k, j) = i<br>                End If<br>            Next<br> <br>            iLowest = 999<br>            For j = 0 To 11<br>                bAll = True<br>                iLow = 999<br>                For k = 0 To 4<br>                    l = aCalled(aSearch(j, k, 0), aSearch(j, k, 1))<br>                    If l = -1 Then bAll = False<br>                    iLow = Min(iLow, l)<br>                Next<br>                If bAll Then<br>                    If iLow &lt; iLowest Then<br>                        iWin = j<br>                        iLowest = iLow<br>                    End If<br>                End If<br>            Next<br> <br>            If iLowest &lt; 999 Then<br>                Dim aRet(4) As Integer<br>                j = iWin<br>                For k = 0 To 4<br>                    aRet(k) = aCalled(aSearch(j, k, 0), aSearch(j, k, 1))<br>                Next<br>                System.Array.Sort(aRet)<br>                Dim sRet As String = ""<br>                For k = 0 To 3<br>                    sRet &amp;= calls(aRet(k)) &amp; ","<br>                Next<br>                If aRet(4) &lt; 999 Then sRet &amp;= calls(aRet(4)) &amp; ","<br>                Return sRet.Substring(0, sRet.Length - 1)<br>            End If<br>        Next<br> <br>    End Function<br>End Class<br></td>