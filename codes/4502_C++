<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;algorithm&gt;<br>using namespace std;<br>#ifdef WIN32<br>typedef __int64 int64;<br>#else<br>typedef long long int64;<br>#endif<br>#define size (1100000)<br>int64 dyn[size];<br>class CardCosts {<br>  public:<br>  int64 mincost(int n, int k) {<br>    int i;<br>    int64 cur1,cur2;<br>    int64 min;<br>    int64 mincur1,mincur2;<br>    if (k==1)<br>    {<br>      return n;<br>    }<br>    for (i=0;i&lt;size;i++)<br>      dyn[i]=0;<br>    for (i=1,cur1=1,cur2=0;i&lt;=n;i++)<br>    {<br>      min=cur1*cur1+k*dyn[cur2];<br>      mincur1=cur1;mincur2=cur2;<br>      cur1--;cur2++;<br>      if ((cur2&lt;i) &amp;&amp; (cur1&gt;0))<br>        if (min&gt;cur1*cur1+k*dyn[cur2])<br>        {<br>          min=cur1*cur1+k*dyn[cur2];<br>          mincur1=cur1;mincur2=cur2;<br>        }<br>      dyn[i]=min;<br>      cur1=mincur1;cur2=mincur2;<br>      cur1++;<br>    }<br>    return dyn[n];<br>  }<br>  <br> <br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>