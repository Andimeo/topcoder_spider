<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * CardCosts<br> *<br> * @author Andrew Stankevich<br> */<br>public class CardCosts {<br>    public long mincost(int n, int k) {<br>        if (n == 0) {<br>            return 0;<br>        }<br> <br>        if (k == 1) {<br>            return n;<br>        }<br> <br> <br>        long t = 1;<br>        int s = 0;<br>        while (t &lt;= 2 * n) {<br>            t *= k;<br>            s++;<br>        }<br> <br>        long[] entry = new long[s];<br>        entry[0] = 1;<br>        for (int i = 1; i &lt; s; i++) {<br>            entry[i] = entry[i - 1] * k;<br>        }<br> <br>        long[] cost = new long[s];<br>        long[] count = new long[s];<br> <br>        for (int i = 0; i &lt; s; i++) {<br>            cost[i] = entry[i];<br>        }<br> <br>        long r = 0;<br>        for (int i = 0; i &lt; n; i++) {<br>            long min = cost[0];<br>            int p = 0;<br>            for (int j = 1; j &lt; s; j++) {<br>                long z = cost[j];<br>                if (z &lt; min) {<br>                    p = j;<br>                    min = z;<br>                }<br>            }<br>            count[p]++;<br>            r += min;<br>            cost[p] = ((count[p] + 1) * (count[p] + 1) - count[p] * count[p]) * entry[p];<br>        }<br> <br>        return r;<br>    }<br>}<br></td>