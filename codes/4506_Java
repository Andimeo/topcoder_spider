<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class SequenceSync {<br>    public int getLength(String[] transitions) {<br>  int qbeg = 0;<br>  int qend = 0;<br>  int[] state = new int[1&lt;&lt;21];<br>  int[] l = new int[1&lt;&lt;21];<br>  Arrays.fill(l, -1);<br>  int n = transitions.length;<br>  int[][] move = new int[n][4];<br>  for (int i=0; i &lt; n; i++) {<br>    StringTokenizer st = new StringTokenizer(transitions[i], " ");<br>    for (int j=0; j &lt; 4; j++) {<br>      move[i][j] = Integer.parseInt(st.nextToken());<br>    }<br>  }<br><br>  state[qbeg++] = (1 &lt;&lt; n) - 1;<br>  l[(1 &lt;&lt; n) - 1] = 0;<br><br>  while (qend &lt; qbeg) {<br>    int curst = state[qend++];<br>    if ((curst &amp; (curst - 1)) == 0) {<br>      return l[curst];<br>    }<br>    for (int j=0; j &lt; 4; j++) {<br>      int nextst = 0;<br>      for (int i=0; i &lt; n; i++) {<br>        if ((curst &amp; (1 &lt;&lt; i)) &gt; 0) {<br>          nextst |= 1 &lt;&lt; move[i][j];<br>        }<br>      }<br>      if (l[nextst] == -1) {<br>        l[nextst] = l[curst] + 1;<br>        state[qbeg++] = nextst;<br>      }<br>    }<br>  }<br><br>  return -1;<br>    }<br><br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>