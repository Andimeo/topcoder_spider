<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;vector&gt;<br>#include&lt;string&gt;<br>using namespace std;<br> <br>#define vs vector&lt;string&gt;<br>vs all;<br>int l,l1;<br> <br>const int dx[8]={-1,0,0,1,1,1,-1,-1};<br>const int dy[8]={0,1,-1,0,1,-1,1,-1};<br> <br>bool valid(int row,int col)<br>{<br>  return 0&lt;=row&amp;&amp;row&lt;l&amp;&amp;0&lt;=col&amp;&amp;col&lt;l1;<br>}<br> <br>bool visited[100][100];<br>int sz=0;<br> <br>void dfs(int row,int col)<br>{<br>  visited[row][col]=true;<br>  sz++;<br>  for(int i=0;i&lt;8;i++)<br>  {<br>    int nrow=row+dx[i],ncol=col+dy[i];<br>    if(!visited[nrow][ncol]&amp;&amp;valid(nrow,ncol)&amp;&amp;all[nrow][ncol]=='1')<br>      dfs(nrow,ncol);<br>  }<br>}<br> <br>struct SysFailure<br>{<br>  int critical(int n,vs state)<br>  {<br>    all=state;<br>    l=all.size(),l1=all[0].size();<br>    int i,j;<br>    memset(visited,0,sizeof(visited));<br>    sz=0;<br>    int max=0;<br>    for(i=0;i&lt;l;i++)<br>      for(j=0;j&lt;l1;j++)<br>      {<br>        //printf("%d %d\n",i,j);<br>        sz=0;<br>        if(all[i][j]=='1') dfs(i,j);<br>        if(sz&gt;max)<br>          max=sz;<br>      }<br>//    printf("%d\n",max);<br>    if(max&lt;n)<br>      return -1;<br>    int ret=0;<br>    for(i=0;i&lt;l;i++)<br>      for(j=0;j&lt;l1;j++)<br>      {<br>        if(all[i][j]=='1')<br>        {<br>          int max=0;<br>          all[i][j]='0';<br>          memset(visited,0,sizeof(visited));<br>          for(int ii=0;ii&lt;l;ii++)<br>            for(int jj=0;jj&lt;l1;jj++)<br>            {<br>              sz=0;<br>              if(all[ii][jj]=='1') dfs(ii,jj);<br>              if(sz&gt;max)<br>                max=sz;<br>            }<br>          all[i][j]='1';<br>          if(max&lt;n)<br>            ret++;<br>        }<br>      }<br>    return ret;<br>  }<br>};<br></td>