<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class OneFight {<br>  int[] life;<br>  int[] damage;<br>  bool[] used;<br>  int sumDamage;<br>  int yourDamage;<br>  int cur;<br>  int res;<br><br>  void rec(int id)<br>  {<br>    if (id &gt;= life.Length)<br>    {<br>      if (cur &lt; res)<br>        res = cur;<br>      return;<br>    }<br><br>    for (int i = 0; i &lt; life.Length; ++i)<br>      if (!used[i])<br>      {<br>        int time = (life[i] + yourDamage - 1) / yourDamage;<br>        cur += time * sumDamage;<br>        used[i] = true;<br>        sumDamage -= damage[i];<br>        rec(id + 1);<br>        sumDamage += damage[i];<br>        used[i] = false;<br>        cur -= time * sumDamage;<br>      }<br>  }<br><br>  public int monsterKilling(int[] life, int[] damage, int yourDamage) {<br>    this.life = life;<br>    this.damage = damage;<br>    this.yourDamage = yourDamage;<br><br>    sumDamage = 0;<br>    foreach (int oneDamage in damage)<br>      sumDamage += oneDamage;<br><br>    res = int.MaxValue - 1;<br><br>    used = new bool[life.Length];<br>    cur = 0;<br><br>    rec(0);<br><br>    return res + 1;<br>  }<br>  <br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>