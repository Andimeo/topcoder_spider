<td class="problemText" colspan="8" valign="middle" align="left">
            // Thank you for the most beautiful present i've had: this laptop!<br>// Thanks TopCoder for giving us this competition.<br><br>import java.util.*;<br><br>class TheTime {<br>  final int MIN = 60, HOUR = 3600, DAY = 86400;<br><br>  int hour, min, sec;<br><br>  public TheTime(String s) {<br>    String[] sa = s.split("[ :,.]+");<br>    this.hour = Integer.parseInt(sa[0]);<br>    this.min = Integer.parseInt(sa[1]);<br>    this.sec = 0;<br>      if (sa[2].equals("am"))<br>        hour = hour == 12 ? 0 : hour;<br>      else<br>        hour = hour &lt; 12 ? hour + 12 : hour;<br>  }<br><br>  public int toSecond() {<br>    return hour * HOUR + min * MIN + sec;<br>  }<br><br>  public int distanceTo(TheTime newTime) {<br>    int s1 = this.toSecond(), s2 = newTime.toSecond();<br>    return s1 &lt;= s2 ? s2 - s1 : DAY - s1 + s2;<br>  }<br>  <br>  String toString2Digits(int u) {<br>    return (u &lt; 10 ? "0" : "") + u;<br>  }<br><br>  public String toString() { //HH:MM AM/PM<br>    String ret = "";<br>    int h = hour;<br>    if (h &gt;= 12) {<br>      ret = "pm";<br>      h -= 12;<br>    } else<br>      ret = "am";<br>    if (h % 12 == 0)<br>      h = 12 - h;<br>    return toString2Digits(h) + ":" + toString2Digits(min) + "," + ret;<br>  }<br>}<br><br>public class TimeCard {<br>  public String leave(String[] time) {<br>    int n = time.length;<br>    TheTime[] t = new TheTime[n+1];<br>    for (int i = 0; i &lt; n; i++) {<br>      t[i] = new TheTime (time[i]);<br>    }<br>    <br>    int ok = 0;<br>    for (int i = 0; i &lt; n/2; i++) {<br>      int u = t[i*2] . distanceTo (t[i*2+1]);<br>      ok += u;<br>    }<br>    if (ok&lt;20*60*60) return "BELOW 40";<br>    if (ok&gt;40*60*60) return "ABOVE 40";<br>    t[n] = new TheTime("00:00,am");<br>    ok = 40*60*60 -ok;<br>    for (int i = 0; i &lt; 24; i++) {<br>      for (int j = 0; j &lt; 60; j++) {<br>        t[n] . hour = i;<br>        t[n] . min = j;<br>        if (t[n-1].distanceTo(t[n]) == ok)     return t[n].toString();<br>       }<br>    }<br>    return "Minny";<br>  }<br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>