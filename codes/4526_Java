<td class="problemText" colspan="8" valign="middle" align="left">
            public class PrisonCells {<br> <br>    int max = 0;<br> <br>    public int scatter(int m, int n, int nr) {<br>        boolean[] prison = new boolean[m * n];<br>        sol(prison, 0, nr, m, n);<br>        return max;<br>    }<br> <br>    private void sol(boolean[] prison, int pos, int nr, int m, int n) {<br>        if (nr==0)<br>            max = Math.max(min_distance(prison, m, n), max);<br>        else<br>            for (int i = pos; i &lt; m * n; i++)<br>                if (!prison[i]) {<br>                    prison[i] = true;<br>                    sol(prison, i + 1, nr-1, m, n);<br>                    prison[i] = false;<br>                }<br> <br>    }<br> <br>    private int min_distance(boolean[] prison, int m, int n) {<br>        int min = Integer.MAX_VALUE;<br>        for (int i = 0; i &lt; m * n; i++)<br>            if (prison[i]) {<br>                for (int x = 0; x &lt; m * n; x++)<br>                    if ((x != i)) {<br>                        if (prison[x]) {<br>                            min = Math.min(Math.abs(x / m - i / m)<br>                                    + Math.abs(x % m - i % m), min);<br> <br>                        }<br>                    }<br> <br>            }<br> <br>        return min;<br> <br>    }<br> <br>}<br></td>