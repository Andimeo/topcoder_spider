<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cctype&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br>#include &lt;utility&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>using namespace std;<br><br>#define VAR(i,a) typeof(a) i=(a)<br>#define FOR(i,a,b) for(int i=(a),_b=(b);i&lt;=_b;++i)<br>#define FORD(i,a,b) for(int i=(a),_b=(b);i&gt;=_b;--i)<br>#define FORI(i,a) for(VAR(i,(a).begin());i!=(a).end();++i)<br>const double EPS=1e-9;<br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br>typedef long long I64; typedef unsigned long long U64;<br><br>const int MAXN=100000+10;<br><br>struct Node {<br>  string s;<br>  int u;<br>};<br><br>int n,m;<br>bool flag[MAXN];<br>Node q[MAXN];<br>int p1,p2;<br><br>class OddDigitable {<br>public:<br>  //Parms: int N, int M<br>  string findMultiple(int _n,int _m)<br>  {<br>    n=_n,m=_m;<br>    memset(flag,0,sizeof(flag));<br><br>    p1=p2=0;<br>    q[0].s="",q[0].u=0;<br>    while(p1&lt;=p2) {<br>      for(int i=1;i&lt;=9;i+=2) {<br>        int u=(q[p1].u*10+i)%n;<br>        if(flag[u]) continue;<br>        p2++;<br>        q[p2].s=q[p1].s+char(i+'0');<br>        q[p2].u=u;<br>        if(u==m) return q[p2].s;<br>        flag[u]=1;<br>      }<br>      p1++;<br>    }<br><br>    return "-1";<br>  }<br>  <br><br>};<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>