<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class OddDigitable {<br>    public String findMultiple(int N, int M) {<br>        int[] best = new int[N];<br>        Arrays.fill(best, -1);<br>        int[] ttt = new int[N];<br>        Arrays.fill(ttt, -1);<br>        <br>        <br>        int[] oddNumbers = new int[] {1, 3, 5, 7, 9};<br>        List a = new ArrayList();<br>        a.add(new Integer(0));<br>        int head = 0, tail = 0, i, x, j;<br>        while (head &lt; a.size() &amp;&amp; best[M] &lt; 0) {<br>            for (i = head; i &lt;= tail; i++) {<br>                x = ((Integer)a.get(i)).intValue();<br>                for (j = 0; j &lt; oddNumbers.length; j++) {<br>                    if (best[(x * 10 + oddNumbers[j]) % N] &lt; 0) {<br>                        best[(x * 10 + oddNumbers[j]) % N] = oddNumbers[j];<br>                        if (i != 0) ttt[(x * 10 + oddNumbers[j]) % N] = x;<br>                        a.add(new Integer((x * 10 + oddNumbers[j]) % N));<br>                    }<br>                }<br>            }<br>            head = tail + 1;<br>            tail = a.size() - 1;<br>        }<br>        if (best[M] &lt; 0) return "-1";<br>        else {<br>            String sol = "" + best[M];<br>            while (ttt[M] &gt;= 0) {<br>                M = ttt[M];<br>                sol = best[M] + sol;<br>            }<br>            return sol;<br>        }<br>    }<br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>