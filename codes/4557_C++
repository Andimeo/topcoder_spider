<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cctype&gt;<br>#include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br><br>using namespace std;<br><br>string strlower( string s ) { for ( string::iterator si=s.begin(); si!=s.end(); ++si ) *si = tolower(*si); return s; }<br>vector&lt;string&gt; split( const string &amp;str, const string &amp;delimeters = " " ) { vector&lt;string&gt; ret; string::size_type pos, end; pos = str.find_first_not_of( delimeters ); while ( pos != string::npos ) { end = str.find_first_of( delimeters, pos+1 ); if ( end == string::npos ) end = str.length(); ret.push_back( str.substr( pos, end-pos ) ); pos = str.find_first_not_of( delimeters, end ); } return ret; }<br><br>class SortBooks {<br>public:<br>   bool istitle( string s )<br>   {<br>      vector&lt;string&gt; tok = split( strlower( s ) );<br>      return<br>         tok.size() &gt; 3 ||<br>         find( tok.begin(), tok.end(), "the" ) != tok.end() ||<br>         find( tok.begin(), tok.end(), "and" ) != tok.end() ||<br>         find( tok.begin(), tok.end(), "of" ) != tok.end();<br>   }<br>   <br>   vector &lt;int&gt; checkManually( vector &lt;string&gt; field1, vector &lt;string&gt; field2 ) { // caret here<br>      vector&lt;int&gt; ret;<br>      for ( int i=0; i&lt;(int)field1.size(); ++i )<br>         if ( istitle( field1[i] ) == istitle( field2[i] ) )<br>            ret.push_back( i );<br>      return ret;<br>   }<br><br>   <br> <br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by moj 3.0 beta 7 [modified TZTester]<br>// Powered by CodeProcessor<br></td>