<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br> <br> <br>using namespace std;<br> <br>int d[100][10][10];<br>int turn[10]={0,1,1,1,2,2,2,1,1,1};<br> <br>class BikeLock<br>{<br>public:<br>int minTurns(string current, string desired)<br>{<br>  int i,j,k,l,n,o,p,tmp,best;<br>  int a[100];<br>  int b[100];<br>  n=current.length();<br>  for (i=0;i&lt;n;i++)<br>    a[i]=current[i]-48;<br>  for (i=0;i&lt;n;i++)<br>    b[i]=desired[i]-48;<br>  for (i=0;i&lt;100;i++)<br>    for (j=0;j&lt;10;j++)<br>      for (k=0;k&lt;10;k++)<br>        d[i][j][k]=2000000000;<br>  d[0][0][0]=0;<br>  for (i=0;i&lt;n;i++)<br>    for (j=0;j&lt;10;j++)<br>      for (k=0;k&lt;10;k++)<br>        if (d[i][j][k]!=2000000000)<br>        {<br>          for (o=0;o&lt;10;o++)<br>            for (p=0;p&lt;10;p++)<br>            {<br>              l=(a[i]+j+o+p)%10;<br>              l=turn[abs(l-b[i])];<br>              tmp=d[i][j][k]+l+turn[o]+turn[p];<br>              if (tmp&lt;d[i+1][(k+o+p)%10][p])<br>                d[i+1][(k+o+p)%10][p]=tmp;<br>            }<br>        }<br>  best=2000000000;<br>  for (i=0;i&lt;10;i++)<br>    for (j=0;j&lt;10;j++)<br>      if (d[n][i][j]&lt;best)<br>        best=d[n][i][j];<br>  return best;<br>}<br>};<br></td>