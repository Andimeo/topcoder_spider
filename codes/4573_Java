<td class="problemText" colspan="8" valign="middle" align="left">
            // Powered by radeclipse!<br>import java.util.* ;<br>public class DominoesGame {<br>  String[] t = null ;<br>  int[] e1 = null ;<br>  int[] e2 = null ;<br>  int[] ss = null ;<br>  int n = 0 ;<br>  int best = 0 ;<br>  int highscore(int used, int lft, int rt, int slft, int srt, int score) {<br>    int msum = slft + srt ;<br>    if ((used &amp; (used - 1)) == 0 &amp;&amp; lft == rt)<br>      msum /= 2 ;<br>    if (msum % 5 == 0)<br>      score += msum ;<br>    if (score &gt; best)<br>      best = score ;<br>    for (int i=0; i&lt;n; i++) {<br>      if ((used &amp; (1 &lt;&lt; i)) == 0 &amp;&amp; e1[i] == lft)<br>  highscore(used | (1 &lt;&lt; i), e2[i], rt, e2[i]+ss[i], srt, score) ;<br>      if ((used &amp; (1 &lt;&lt; i)) == 0 &amp;&amp; e1[i] == rt)<br>  highscore(used | (1 &lt;&lt; i), lft, e2[i], slft, e2[i]+ss[i], score) ;<br>      if ((used &amp; (1 &lt;&lt; i)) == 0 &amp;&amp; e2[i] == lft)<br>  highscore(used | (1 &lt;&lt; i), e1[i], rt, e1[i]+ss[i], srt, score) ;<br>      if ((used &amp; (1 &lt;&lt; i)) == 0 &amp;&amp; e2[i] == rt)<br>  highscore(used | (1 &lt;&lt; i), lft, e1[i], slft, e1[i]+ss[i], score) ;<br>    }<br>    return best ;<br>  }<br>  public int largestTotal(String[] tiles) {<br>    t = tiles ;<br>    n = tiles.length ;<br>    e1 = new int[n] ;<br>    e2 = new int[n] ;<br>    ss = new int[n] ;<br>    for (int i=0; i&lt;n; i++) {<br>      String[] f = tiles[i].split(":") ;<br>      e1[i] = Integer.parseInt(f[0]) ;<br>      e2[i] = Integer.parseInt(f[1]) ;<br>      if (e1[i] == e2[i])<br>  ss[i] = e1[i] ;<br>    }<br>    for (int i=0; i&lt;n; i++)<br>      highscore(1&lt;&lt;i, e1[i], e2[i], e1[i] + ss[i], e2[i] + ss[i], 0) ;<br>    return best ;<br>  }<br>}<br></td>