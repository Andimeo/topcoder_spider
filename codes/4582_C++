<td class="problemText" colspan="8" valign="middle" align="left">
            // You will never see how this line looked after 4 challenges failed!<br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>typedef vector&lt;int&gt; vi;<br><br>#define LS &lt;<br>#define Size(x) (int(x.size()))<br><br>// All macros with parameters "k,a,b" run the "k" variable in range [a,b)<br>#define FOR(k,a,b) for(typeof(a) k=(a); k LS (b); ++k)<br><br>#define INF 1000000000<br><br>// parse a space-delimited string into a vi<br>vi parsevi(string s) {<br>  s = s + " ";<br>  int q = 0;<br>  vi res;<br>  FOR(l,0, Size(s)) {<br>    if(s[l] == ' ') { res.push_back(q); q = 0;}<br>    else { q = q * 10 + s[l] - '0'; }<br>    }<br>  return res;<br>  }<br><br>#line 3 "TwoKings.cc"<br><br>int dx[8] = {1,1,1,0,0,-1,-1,-1};<br>int dy[8] = {1,0,-1,-1,1,-1,0,1};<br><br>#define P(a,b) make_pair(a,b)<br><br>int queen(int qx, int qy, int ax, int ay, int bx, int by, int mm);<br>int king(int qx, int qy, int ax, int ay, int bx, int by, int mm) {<br>  if(qx &lt; 0 || qx &gt; 99) return 9;<br>  if(qy &lt; 0 || qy &gt; 99) return 9;<br>  if(P(qx,qy) == P(ax,ay)) return mm;<br>  if(P(qx,qy) == P(bx,by)) return mm;<br>  mm++;<br>  int val = 0;<br>  FOR(di,0,8) {<br>    int nax = ax + dx[di];<br>    int nay = ay + dy[di];<br>    val &gt;?= queen(qx,qy, nax,nay, bx,by, mm);<br><br>    int nbx = bx + dx[di];<br>    int nby = by + dy[di];<br>    val &gt;?= queen(qx,qy, nbx,nby, ax,ay, mm);<br>    }<br>  <br>  return val;<br>  }<br><br>int queen(int qx, int qy, int ax, int ay, int bx, int by, int mm) {<br>  if(ax &lt; 0 || ax &gt; 99) return 0;<br>  if(ay &lt; 0 || ay &gt; 99) return 0;<br>  if(bx &lt; 0 || bx &gt; 99) return 0;<br>  if(by &lt; 0 || by &gt; 99) return 0;<br>  if(P(qx,qy) == P(ax,ay)) return mm;<br>  if(P(qx,qy) == P(bx,by)) return mm;<br>  if(mm == 3) {<br>    if(qx == ax || qy == ay || qx+qy == ax+ay || qx-qy == ax-ay) return 3;<br>    if(qx == bx || qy == by || qx+qy == bx+by || qx-qy == bx-by) return 3;<br>    return 4;<br>    }<br>  int val = INF;<br>  FOR(dd,1,100) FOR(di,0,8) {<br>    int nqx = qx + dx[di] * dd;<br>    int nqy = qy + dy[di] * dd;<br>    val &lt;?= king(nqx,nqy, ax,ay, bx,by, mm);<br>    }<br>  <br>  return val;<br>  }<br><br>class TwoKings {<br>  public:<br>  int captureKing(string q, string king1, string king2) {<br>    // !FDI<br>    vi pq  = parsevi(q);<br>    vi pk1 = parsevi(king1);<br>    vi pk2 = parsevi(king2);<br>    <br>    return queen(pq[0],pq[1],pk1[0],pk1[1],pk2[0],pk2[1], 1);<br>    }<br>  };<br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>