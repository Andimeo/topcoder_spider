<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class TwoKings {<br>  <br>  final static int oo = 100100100;<br>  DataLib DL = new DataLib();<br>  int result, qx, qy, x1, y1, x2, y2, n = 100;<br> <br>  boolean capture(int qx, int qy, int x, int y) {<br>    return (x==qx||y==qy||(qx-x==qy-y)||(qx+qy==x+y));<br>  }<br> <br>  boolean oneMove(int qx, int qy, int x1, int y1, int x2, int y2) {<br>    return capture(qx,qy,x1,y1)||capture(qx,qy,x2,y2);<br>  }<br> <br>  int[] dx = {-1,-1,-1,0,1,1,1,0};<br>  int[] dy = {-1,0,1,1,1,0,-1,-1};<br>  <br>  boolean two(int x1, int y1, int x2, int y2) {<br>    if (x2&gt;0&amp;&amp;y2&gt;0&amp;&amp;x2&lt;n-1&amp;&amp;y2&lt;n-1) return false;<br>    if (x2==0&amp;&amp;y2==0) return capture(x1,y1,1,0)||capture(x1,y1,0,1)||capture(x1,y1,1,1);<br>    if (x2==0&amp;&amp;y2==n-1) return capture(x1,y1,0,n-2)||capture(x1,y1,1,n-1)||capture(x1,y1,1,n-2);<br>    if (x2==n-1&amp;&amp;y2==0) return capture(x1,y1,n-2,0)||capture(x1,y1,n-1,1)||capture(x1,y1,n-2,1);<br>    if (x2==n-1&amp;&amp;y2==n-1) return capture(x1,y1,n-1,n-2)||capture(x1,y1,n-2,n-1)||capture(x1,y1,n-2,n-2);<br>    if (x2==0) return capture(x1,y1,1,y2);<br>    if (y2==0) return capture(x1,y1,x2,1);<br>    if (x2==n-1) return capture(x1,y1,n-2,y2);<br>    if (y2==n-1) return capture(x1,y1,x2,n-2);<br>    return false;<br>  }<br>  <br>  boolean twoMove(int qx, int qy, int x1, int y1, int x2, int y2) {<br>    for (int i=0; i&lt;n; i++)<br>    for (int j=0; j&lt;n; j++)<br>    if (capture(qx,qy,i,j)&amp;&amp;capture(i,j,x1,y1)&amp;&amp;capture(i,j,x2,y2)) return true;<br>    if (two(qx,qy,x1,y1)||two(qx,qy,x2,y2)) return true;<br>    return false;<br>  }<br>  <br>  boolean in(int x, int y) {<br>    return (x&gt;=0&amp;&amp;y&gt;=0&amp;&amp;x&lt;n&amp;&amp;y&lt;n);<br>  }<br>  <br>  boolean threeMove() {<br>    for (int h1=0; h1&lt;8; h1++)<br>    for (int len=1; len&lt;=100; len++) {<br>      int qux = qx+len*dx[h1], quy = qy+len*dy[h1], xx1, yy1, xx2, yy2;<br>      if (!in(qux,quy)) continue;<br>      boolean ok = true;<br>      for (int h2=0; h2&lt;8; h2++) {<br>        xx1 = x1; xx2 = x2;<br>        yy1 = y1; yy2 = y2;<br>        xx1 = x1 + dx[h2]; yy1 = y1 + dy[h2];<br>        if (in(xx1,yy1)) {<br>          if (!twoMove(qux,quy,xx1,yy1,xx2,yy2)) { ok = false; break; }<br>        }<br>        xx1 = x1; xx2 = x2;<br>        yy1 = y1; yy2 = y2;<br>        xx2 = x2 + dx[h2]; yy2 = y2 + dy[h2];<br>        if (in(xx2,yy2)) {<br>          if (!twoMove(qux,quy,xx1,yy1,xx2,yy2)) { ok = false; break; }<br>        }<br>      }<br>      if (ok) return true;<br>    }<br>    return false;<br>  }<br>  <br>  void solvePro() {<br>    if (oneMove(qx,qy,x1,y1,x2,y2)) { result = 1; return; }<br>    if (twoMove(qx,qy,x1,y1,x2,y2)) { result = 2; return; }<br>    if (threeMove()) result = 3; else result = 4;<br>  }<br> <br>  public int captureKing(String queen, String king1, String king2) {<br>    int[] tmp = DL.tokenInt(queen); <br>    qx = tmp[0]; qy = tmp[1];<br>    tmp = DL.tokenInt(king1); <br>    x1 = tmp[0]; y1 = tmp[1];<br>    tmp = DL.tokenInt(king2); <br>    x2 = tmp[0]; y2 = tmp[1];<br>    solvePro();<br>    return result;<br>  }<br> <br>  void pp(String s) {<br>    System.out.println(s);<br>  }<br> <br>  void pp(int s) {<br>    System.out.println(s);<br>  }<br> <br>  <br>}<br> <br>class DataLib {<br> <br>  String[] tokenString(String s, String delim) {<br>    StringTokenizer st = new StringTokenizer(s, delim);<br>    int size = st.countTokens();<br>    String[] r = new String[size];<br>    for (int i=0; i&lt;size; i++) r[i] = st.nextToken();<br>    return r;<br>  }<br>  <br>  String[] tokenString(String s) {<br>    return tokenString(s," ");<br>  }<br>  <br>  int[] tokenInt(String s, String delim) {<br>    StringTokenizer st = new StringTokenizer(s, delim);<br>    int size = st.countTokens();<br>    int[] a = new int[size];<br>    for (int i=0; i&lt;size; i++) a[i] = Integer.parseInt(st.nextToken());<br>    return a;<br>  }<br>  <br>  int[] tokenInt(String s) {<br>    return tokenInt(s," ");<br>  }<br>  <br>}<br> <br> <br>// Powered by PopsEdit<br>// Powered by CodeProcessor<br></td>