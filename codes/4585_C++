<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;math.h&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;limits.h&gt;<br>#include &lt;memory.h&gt;<br> <br>using namespace std;     <br> <br>#define fu(i,a,b)    for ( i = (a); i &lt;= (b); i++)<br>#define rep(i,a)    for ( i = 0; i &lt; (a); i++)<br>#define All(a)       (a).begin(),(a).end()<br>#define Abs(a)      ( ((a)&lt;0)? -(a): (a) )<br>#define mem(a,i)    memset( (a), i, sizeof(a) )<br>#define pb              push_back<br> <br>typedef vector &lt;int&gt; VI;<br>typedef vector &lt;string&gt; VS;<br> <br>#define LL long long<br> <br>const int offx[] = {-1,-1,-1,0,1,1,1,0};<br>const int offy[] = {-1,0,1,1,1,0,-1,-1};<br> <br>const LL M1 = 1000000;<br>const LL M  = M1*M1*10;<br> <br> <br>VS a;<br>LL c[4][4][60];<br> <br>LL res;<br> <br>class BoggleScore<br>{<br>  void process(string s)<br>  {<br>    int len = s.length();<br>    int k,i,j;<br>    int t,x,y;<br>    <br>    mem(c,0);<br>    rep(i,4) rep(j,4) if (a[i][j]==s[0]) c[i][j][0]=1;<br>    <br>    fu(k,1,len-1)<br>    {<br>      rep(i,4) rep(j,4) if (a[i][j]==s[k]) rep(t,8)<br>      {<br>        x = i+offx[t]; y = j+offy[t];<br>        if (x&gt;=0 &amp;&amp; y&gt;=0 &amp;&amp; x&lt;4 &amp;&amp; y&lt;4 &amp;&amp; a[x][y]==s[k-1]) c[i][j][k] = (c[i][j][k]+c[x][y][k-1]) % M;<br>      }<br>    }<br>    <br>    LL tmp = 0;<br>    rep(i,4) rep(j,4) tmp = (tmp + c[i][j][len-1]) % M;<br>    tmp = (tmp*(len*len)) % M;<br>    <br>    res = (res + tmp) % M;<br>  }<br>  <br>  public:<br>  long long bestScore(vector &lt;string&gt; grid, vector &lt;string&gt; words)<br>  {<br>    int i;<br>    a = grid;<br>    <br>    res = 0;<br>    rep(i,words.size())<br>      process(words[i]);<br>    return res;<br>  }<br>};<br></td>