<td class="problemText" colspan="8" valign="middle" align="left">
            public class BoggleScore {<br><br>    public long bestScore(String[] grid, String[] words) {<br>        char g[][] = new char[4][4];<br>        for (int i = 0; i &lt; 4; i++) {<br>            g[i] = grid[i].toCharArray();<br>        }<br>        long res = 0;<br><br>        for (String w : words) {<br>            long a[][] = new long[4][4];<br>            for (int i = 0; i &lt; 4; i++) {<br>                for (int j = 0; j &lt; 4; j++) {<br>                    if (g[i][j] == w.charAt(0)) {<br>                        a[i][j] = 1;<br>                    }<br>                }<br>            }<br>            for (int t = 1; t &lt; w.length(); t++) {<br>                long b[][] = new long[4][4];<br>                for (int i = 0; i &lt; 4; i++) {<br>                    for (int j = 0; j &lt; 4; j++) {<br>                        for (int di = -1; di &lt;= 1; di++) {<br>                            for (int dj = -1; dj &lt;= 1; dj++) {<br>                                if (di == 0 &amp;&amp; dj == 0) continue;<br>                                int ni = i + di;<br>                                int nj = j + dj;<br>                                if (ni &lt; 0 || ni &gt; 3 || nj &lt; 0 || nj &gt; 3) continue;<br>                                if (w.charAt(t) == g[ni][nj]) {<br>                                    b[ni][nj] = sum(b[ni][nj], a[i][j]);<br>                                }<br>                            }<br>                        }<br>                    }<br>                }<br>                for (int i = 0; i &lt; 4; i++) {<br>                    for (int j = 0; j &lt; 4; j++) {<br>                        a[i][j] = b[i][j];<br>                    }<br>                }<br>            }<br>            long cnt = 0;<br>            for (int i = 0; i &lt; 4; i++) {<br>                for (int j = 0; j &lt; 4; j++) {<br>                    cnt = sum(cnt, a[i][j]);<br>                }<br>            }<br><br>            res = sum(res, mul(cnt, w.length() * w.length()));<br>        }<br>        return res;<br>    }<br><br>    private long mul(long y, int x) {<br>        long r = y * x;<br>        return r &gt; MOD ? r % MOD : r;<br>    }<br><br>    static final long MOD = 10000000000000l;<br><br>    private long sum(long y, long x) {<br>        long r = y + x;<br>        return r &gt; MOD ? r % MOD : r;<br>    }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>