<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br><br>public class ChipArea<br>{<br>  private class Pair<br>  {<br>    public double x,y;<br>    public Pair(double xx,double yy) { x=xx; y=yy; }<br>  }<br>  <br>  public Pair[] p;<br>  <br>  private class xCmp implements Comparator&lt;Pair&gt;<br>  {<br>    public int compare(Pair p,Pair q)<br>    {<br>      if(eq(p.x,q.x)) return 0;<br>      if(p.x&lt;q.x) return -1;<br>      return 1;<br>    }<br>  }<br>  <br>  private class yCmp implements Comparator&lt;Pair&gt;<br>  {<br>    public int compare(Pair p,Pair q)<br>    {<br>      if(eq(p.y,q.y)) return 0;<br>      if(p.y&lt;q.y) return -1;<br>      return 1;<br>    }<br>  }<br>  <br>  public double tol=1e-13;<br>  public boolean eq(double x,double y) { return Math.abs(x-y)&lt;tol; }<br>  <br>  public int pn;<br>  public double maxArea(int skip, int n)<br>  {<br>    getxy(skip,n);<br>    pn=p.length;<br>    <br>    double ret=0;<br>    <br>    Arrays.sort(p,new xCmp());<br>    int i,j,k,a,b;<br>    /*<br>    for(i=0;i&lt;pn;i++)<br>    {<br>      prln("P["+i+"] = ("+p[i].x+","+p[i].y+")");<br>    }<br>    */<br>    <br>    double left,right,up,down;<br>    for(i=0;i&lt;pn;i++)<br>    {<br>      left=p[i].x;<br>      up=1; down=0;<br>      for(j=i+1;j&lt;pn;j++)<br>      {<br>        right=p[j].x;<br>        ret=Math.max(ret,(right-left)*(up-down));<br>        <br>        //up=Math.min(up,p[j].y);<br>        //down=Math.max(down,p[j].y);<br>        <br>        if(p[j].y&gt;=p[i].y || eq(p[i].y,p[j].y))<br>        {<br>          up=Math.min(up,p[j].y);<br>        }<br>        if(p[j].y&lt;=p[i].y || eq(p[i].y,p[j].y))<br>        {<br>           down=Math.max(down,p[j].y);<br>        }<br>        <br>        if(ret&gt;(1-left)*(up-down)) break;<br>      }<br>    }<br>    <br>    Arrays.sort(p,new yCmp());<br>    <br>    for(i=0;i&lt;pn;i++)<br>    {<br>      down=p[i].y;<br>      left=0; right=1;<br>      for(j=i+1;j&lt;pn;j++)<br>      {<br>        up=p[j].y;<br>        ret=Math.max(ret,(right-left)*(up-down));<br>        <br>        if(p[j].x&lt;p[i].x || eq(p[i].x,p[j].x))<br>        {<br>          left=Math.max(left,p[j].x);<br>        }<br>        if(p[j].x&gt;p[i].x ||  eq(p[i].x,p[j].x))<br>        {<br>          right=Math.min(right,p[j].x);<br>        }<br>        <br>        if(ret&gt;(right-left)*(up-down)) break;<br>      }<br>    }    <br>    <br>    return ret;<br>  }<br>  <br>  public void getxy(int skip,int n)<br>  {<br>    p=new Pair[n+4];<br>    int R=1;<br>    double x,y;<br>    for(int j = 0; j &lt; skip; j++) R = 111 * R % 323537;<br>    <br>    int pt;<br>    for(pt = 0; pt &lt; n; pt++){<br>      R = 111*R%323537; x = R/323537.0;<br>      R = 111*R%323537; y = R/323537.0;<br>      p[pt]=new Pair(x,y);<br>      }<br>      p[pt]=new Pair(0,0.5); pt++;<br>      p[pt]=new Pair(0.5,0); pt++;<br>      p[pt]=new Pair(0.5,1); pt++;<br>      p[pt]=new Pair(1,0.5); pt++;<br>  }  <br>  <br>  public void prln(Object o) { System.out.println(o); }<br>}<br></td>