<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;vector&gt;<br>#include&lt;deque&gt;<br>#include&lt;list&gt;<br>#include&lt;set&gt;<br>#include&lt;map&gt;<br>#include&lt;numeric&gt;<br>#include&lt;iostream&gt;<br>#include&lt;sstream&gt;<br>using namespace std;<br> <br>#define sz(X) ((int)(X).size())<br>#define pb push_back<br>#define mp make_pair<br>#define all(X) (X).begin(),(X).end()<br>#define REP(I,N) for(I=0;I&lt;(N);++I)<br> <br>int n,dx[8]={1,2,2,1,-1,-2,-2,-1},dy[8]={2,1,-1,-2,-2,-1,1,2};<br>vector&lt;int&gt; a;<br>#define A(X,Y) a[(X)*n+(Y)]<br> <br>inline bool good(int x,int y){<br>  if(x&lt;0 || y&lt;0 || x&gt;=n || y&gt;=n) return false;<br>  return true;<br>}<br>void mark(int x,int y){<br>  int i;<br>  REP(i,n) A(x,i)=true;<br>  REP(i,n) A(i,y)=true;<br>  REP(i,8) if(good(x+dx[i],y+dy[i])) A(x+dx[i],y+dy[i])=true;<br>}<br>int rec(){<br>  int i,j,best=1;<br>  vector&lt;int&gt; b(a);<br>  REP(i,n) REP(j,n) if(A(i,j)==false){<br>    mark(i,j);<br>    best=min(best,rec());<br>    if(best==-1) break;<br>    a=b;<br>  }<br>  return -best;<br>}<br>class GameEnding {<br>  public:<br>  string result(int N, vector &lt;string&gt; moves) {<br>    int i,ans,x,y;<br>    n=N;<br>    a.resize(n*n);<br>    REP(i,sz(moves)){<br>      x=moves[i][0]-'a';<br>      y=moves[i][1]-'1';<br>      if(A(x,y)) return "Invalid input";<br>      mark(x,y);<br>    }<br>    ans=rec();<br>    if(sz(moves)%2==1) ans=-ans;<br>    if(ans==1) return "First player wins";<br>    else return "Second player wins";<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>