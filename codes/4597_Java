<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br>public class GameEnding {<br>  String INV = "Invalid input";<br>  String FIRST = "First player wins";<br>  String SECOND = "Second player wins";<br>  int [] dx = new int[] { -2, -1, 1, 2, 2, 1, -1, -2 };<br>  int [] dy = new int[] { -1, -2, -2, -1, 1, 2, 2, 1 };<br>  boolean check(char [][] map, int r, int c) {<br>    for (int d = 0; d &lt; 8; d++) {<br>      int rr = r + dy[d];<br>      int cc = c + dx[d];<br>      if (rr &lt; 1 || rr &gt;= map.length || cc &lt; 1 || cc &gt;= map.length) continue;<br>      if (map[rr][cc] != '.') return false;<br>    }<br>    return true;<br>  }<br>  <br>  int go(char [][] map, int [] rows, int [] cols) {<br>    for (int i = 1; i &lt; map.length; i++) {<br>      if (rows[i] != 0) continue;<br>      for (int j = 1; j &lt; map.length; j++) {<br>        if (cols[j] != 0) continue;<br>        if (!check(map, i, j)) continue;<br>        <br>        rows[i] = j; cols[j] = i;<br>        map[i][j] = '*';<br>        int ret = go(map, rows, cols);<br>        rows[i] = cols[j] = 0;<br>        map[i][j] = '.';<br>        <br>        if (ret &lt; 0) return 1;<br>      }<br>    }<br>    return -1;<br>  }<br>  <br>    public String result(int n, String[] moves) {<br>      int turn = 0;<br>      int [] rows = new int[n+1];<br>      int [] cols = new int[n+1];<br>      char [][] map = new char[n+1][n+1];<br>      for (int i = 0; i &lt; map.length; i++) Arrays.fill(map[i], '.');<br>      <br>      for (int i = 0; i &lt; moves.length; i++) {<br>        String s = moves[i];<br>        int r = s.charAt(0) - 'a' + 1;<br>        int c = s.charAt(1) - '1' + 1;<br>        <br>        if (rows[r] != 0) return INV;<br>        if (cols[c] != 0) return INV;<br>        if (!check(map, r, c)) return INV;<br>        rows[r] = c; cols[c] = r;<br>        map[r][c] = '*';<br>        <br>        turn = 1 - turn;<br>      }<br>      <br>      int ret = go(map, rows, cols);<br>      if (ret == 1) {<br>        if (turn == 0) return FIRST; else return SECOND;<br>      }<br>      else {<br>        if (turn == 0) return SECOND; else return FIRST;<br>      }<br>    }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>