<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br><br>public class ClockManagement {<br>  int[] _percA, _percB, _reboundA, _reboundB;<br>  double[,,] memo = new double[301,811,2];<br>  bool[,,] flag = new bool[301,811,2];<br>  int DIFADJ=405;<br><br>  double go(int time, int dif, int toMove)<br>  {<br>    if (dif &gt; time*2) return 1.0;<br>    if (-dif &gt; time*2) return 0.0;<br>    if (flag[time,dif+DIFADJ,toMove])<br>      return memo[time,dif+DIFADJ,toMove];<br><br>    int[] perc, rebound;<br>    if (time&lt;=1)<br>      return (dif &gt; 0) ? 1.0 : 0.0;<br>    int score;<br>      <br>    if (toMove == 0)<br>    {<br>      perc = _percA;<br>      rebound = _reboundA;<br>      score=2;<br>    }<br>    else<br>    {<br>      perc = _percB;<br>      rebound = _reboundB;<br>      score=-2;<br>    }<br>    <br>    double best=0;<br>    for (int i = 0; i &lt; perc.Length; i++)<br>    {<br>      if (time-i-2 &lt; 0) break;<br>      double v1 = go(time-i-2,dif+score,1-toMove) * perc[i] / 100.0;<br>      double v2 = go(time-i-2,dif,toMove) * (100-perc[i]) / 100.0 * rebound[i] / 100.0;<br>      double v3 = go(time-i-2,dif,1-toMove) * (100-perc[i]) / 100.0 * (100-rebound[i]) / 100.0;<br>      double vsum=v1+v2+v3;<br>      if (i==0)<br>        best = vsum;<br>      else<br>      {<br>        if (toMove == 0 &amp;&amp; vsum &gt; best) best = vsum;<br>        if (toMove == 1 &amp;&amp; vsum &lt; best) best = vsum;<br>      }<br>    }<br>    flag[time,dif+DIFADJ,toMove] = true;<br>    memo[time,dif+DIFADJ,toMove] = best;<br>    return best;<br>  }<br><br>  public double winProbability(int[] percentageA, int[] percentageB, int[] reboundA, int[] reboundB, int time, int scoreA, int scoreB) {<br>    for (int i = 0; i &lt; 301; i++)<br>      for (int j = 0; j &lt; 611; j++)<br>        for (int k = 0; k &lt; 2; k++)<br>          flag[i,j,k] = false;<br><br>    _percA = percentageA;<br>    _percB = percentageB;<br>    _reboundA = reboundA;<br>    _reboundB = reboundB;<br>    return go(time,scoreA-scoreB,0);<br>  }<br>}<br><br><br>// Powered by FileEdit<br></td>