<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class ClockManagement {<br>  double[] pa, pb, ra, rb;<br>  int n;<br>  double[][] a, b;<br>  double playa(int t, int s) {<br>    if (t &lt; 2) return s &gt; 0 ? 1 : 0;<br>    if (!Double.isNaN(a[t][s + 300])) return a[t][s + 300];<br>    int m = Math.min(n, t - 1);<br>    double x = 0;<br>    for (int i = 0; i &lt; m; i++) {<br>      int t2 = t - 2 - i;<br>      x = Math.max(x, pa[i] * playb(t2, s + 2) +<br>                   (1 - pa[i]) * (ra[i] * playa(t2, s) +<br>                                  (1 - ra[i]) * playb(t2, s)));<br>    }<br>    return a[t][s + 300] = x;<br>  }<br>  double playb(int t, int s) {<br>    if (t &lt; 2) return s &gt; 0 ? 1 : 0;<br>    if (!Double.isNaN(b[t][s + 300])) return b[t][s + 300];<br>    int m = Math.min(n, t - 1);<br>    double x = 1;<br>    for (int i = 0; i &lt; m; i++) {<br>      int t2 = t - 2 - i;<br>      x = Math.min(x, pb[i] * playa(t2, s - 2) +<br>                   (1 - pb[i]) * (rb[i] * playb(t2, s) +<br>                                  (1 - rb[i]) * playa(t2, s)));<br>    }<br>    return b[t][s + 300] = x;<br>  }<br>  public double winProbability(int[] percentageA, int[] percentageB, int[] reboundA, int[] reboundB, int time, int scoreA, int scoreB) {<br>    n = percentageA.length;<br>    pa = new double[n];<br>    pb = new double[n];<br>    ra = new double[n];<br>    rb = new double[n];<br>    for (int i = 0; i &lt; n; i++) {<br>      pa[i] = percentageA[i] / 100.0;<br>      pb[i] = percentageB[i] / 100.0;<br>      ra[i] = reboundA[i] / 100.0;<br>      rb[i] = reboundB[i] / 100.0;<br>    }<br>    a = new double[time + 1][600];<br>    b = new double[time + 1][600];<br>    for (int i = 0; i &lt;= time; i++) Arrays.fill(a[i], Double.NaN);<br>    for (int i = 0; i &lt;= time; i++) Arrays.fill(b[i], Double.NaN);<br>    return playa(time, scoreA - scoreB);<br>  }<br>}<br></td>