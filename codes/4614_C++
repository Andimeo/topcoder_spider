<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;iostream&gt;<br> <br>using namespace std;<br> <br>vector&lt;int&gt; itokens(string s, string sep = " \n\r\t") {<br>  vector&lt;int&gt; res;<br>  int start, end = 0;<br>  while ((start = s.find_first_not_of(sep, end)) != string::npos) {<br>    end = s.find_first_of(sep, start);<br>    res.push_back(atoi(s.substr(start, end-start).c_str()));<br>  }<br>  return res;<br>}<br> <br>class ChatExit {<br>public:<br>vector &lt;int&gt; leaveOrder(vector &lt;string&gt; numSeen) {<br>  vector&lt;vector&lt;int&gt; &gt; ns(numSeen.size());<br>  for (int i = 0; i &lt; numSeen.size(); i++)<br>    ns[i] = itokens(numSeen[i]);<br>    <br>  for (int i = 0; i &lt; ns.size(); i++) {<br>    for (int j = 0; j &lt; ns.size(); j++)<br>      ns[i][i] &gt;?= ns[j][i];<br>    ns[i].push_back(i);<br>  }<br>      <br>  sort(ns.begin(), ns.end());<br>  <br>  vector&lt;int&gt; order, e;<br>  <br>  for (int i = 0; i &lt; ns.size(); i++) {<br>    int j;<br>    for (j = i+1; j &lt; ns.size(); j++) {<br>      int k;<br>      for (k = 0; k &lt; ns.size(); k++)<br>        if (ns[j][k] &lt; ns[i][k]) break;<br>      if (k &lt; ns.size()) break;<br>    }<br>    if (j &lt; ns.size()) return e;<br>    order.push_back(ns[i][ns.size()]);<br>  }<br>        <br>  return order;<br>}<br>};<br> <br> <br>//Powered by [KawigiEdit]<br></td>