<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class ChatExit {<br>  <br>  int num;<br>  int isLess(int[] a, int[] b)<br>  {<br>    boolean equal = true;<br>    for (int i = 0; i &lt; num; i++)<br>    {<br>      if (b[i] &lt; a[i]) return 0;<br>      if (b[i] &gt; a[i]) equal = false;<br>    }<br>    if (equal) return 2;<br>    return 1;<br>  }<br>  <br>  void copy(int[] dest, int[] source)<br>  {<br>    for (int i = 0; i &lt; num; i++) dest[i] = source[i];<br>  }<br>  <br>  public int[] leaveOrder(String[] numSeen) {<br>    num = numSeen.length;<br>    int[][] seen = new int[50][50];<br>    int[] max = new int[50];<br>    for (int i = 0; i &lt; num; i++)<br>    {<br>      StringTokenizer st = new StringTokenizer(numSeen[i]);<br>      for (int j = 0; j &lt; num; j++)<br>      {<br>        seen[i][j] = Integer.parseInt(st.nextToken());<br>        if (seen[i][j] &gt; max[j]) max[j] = seen[i][j];<br>      }<br>    }<br>    <br>    for (int i = 0; i &lt; num; i++) seen[i][i] = max[i];<br>    <br>    boolean[] taken = new boolean[num];<br>    int[] order = new int[num];<br>    int[] min = new int[num];<br>    int[] best = new int[num];<br>    <br>    min[0] = -1;<br>    int bestIndex;<br>    <br>    for (int rec = 0; rec &lt; num; rec++)<br>    {<br>      bestIndex = -1;<br>      for (int i = 0; i &lt; num; i++) best[i] = 1000;<br>      <br>      for (int i = 0; i &lt; num; i++)<br>      {<br>        if (taken[i]) continue;<br>        if (isLess(min, seen[i]) != 0 &amp;&amp; (isLess(seen[i], best) == 1))<br>        {<br>          copy(best, seen[i]);<br>          bestIndex = i;<br>        }<br>      }<br>      System.out.println(bestIndex);<br>      if (bestIndex == -1) return new int[0];<br>      copy(min, seen[bestIndex]);<br>      taken[bestIndex] = true;<br>      order[rec] = bestIndex;<br>    }<br>    return order;<br>  }<br>}<br> <br>// Powered by PopsEdit<br></td>