<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Text;<br> <br>public class TableSeating<br>{<br>  int n,m;<br>  int [] p;<br> <br>  double []memo;<br>  bool [] used;<br> <br>  double expected(int x)<br>  {<br>    if (x == (1&lt;&lt;n)-1) return 0;<br>    if (used[x]) return memo[x];<br> <br>    double exp = 0;<br> <br>    for(int i = 1; i&lt;=m; i++)<br>    {<br>      double pp = p[i-1];<br>      int count = 0;<br>  <br> <br>      for(int j = 0; j&lt;n; j++)<br>      {<br>        int y = x;<br>        bool valid = true;<br> <br>        if (j+i &gt; n) continue;<br>        for(int k = j; k&lt;n &amp;&amp; k&lt;j+i; k++)<br>        {<br>          int z = 1&lt;&lt;k;<br> <br>          if ((x&amp;z) != 0) <br>          {<br>            valid = false;<br>            break;<br>          }<br>          y |= z;<br>        }<br> <br>        if (valid)<br>          count ++;<br>      }<br> <br> <br>      for(int j = 0; j&lt;n; j++)<br>      {<br>        int y = x;<br>        bool valid = true;<br> <br>        if (j+i &gt; n) continue;<br> <br>        for(int k = j; k&lt;n &amp;&amp; k&lt;j+i; k++)<br>        {<br>          int z = 1&lt;&lt;k;<br> <br>          if ((x&amp;z) != 0) <br>          {<br>            valid = false;<br>            break;<br>          }<br>          y |= z;<br>        }<br> <br>        if (valid)<br>        {<br>          double e = i+expected(y);<br>          exp += pp/count/100.0 * e;<br>        }<br>      }<br>    }<br> <br>    memo[x] = exp;<br>    used[x] = true;<br>    return exp;<br> <br> <br>  }<br> <br> <br>  public double getExpected(int numTables, int[] probs)<br>  {<br>    n = numTables;<br>    p = probs;<br>    m = probs.Length;<br> <br>    memo = new double [ 1&lt;&lt; n];<br>    used = new bool [ 1&lt;&lt;n];<br> <br>    return expected(0);<br>  }<br>}<br></td>