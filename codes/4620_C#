<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class PieSharing {<br>  public int share(int[] pieces) {<br>    int n = pieces.Length;<br>    int infinity = int.MaxValue / 3;<br><br>    int res = 0;<br><br>    for (int split = 0; split &lt; n; ++split)<br>    {<br>      int[] a = new int[n - 1];<br>      int j = (split + 2) % n;<br><br>      for (int i = 0; i &lt; n - 3; ++i)<br>      {<br>        a[i] = pieces[j];<br>        ++j;<br>        if (j &gt;= n)<br>          j = 0;<br>      }<br><br>      int[,] best = new int[n + 2, n];<br>      for (int i = 0; i &lt; n + 2; ++i)<br>        for (int k = 0; k &lt; n; ++k)<br>          if (k == 0)<br>            best[i, k] = 0;<br>          else<br>            best[i, k] = -infinity;<br><br>      for (int i = 0; i &lt; n - 3; ++i)<br>      {<br>        for (int k = 0; k &lt; n; ++k)<br>        {<br>          if (k == 0)<br>            best[i + 2, k] = 0;<br>          else<br>          {<br>            best[i + 2, k] = Math.Max(best[i + 2, k], Math.Max(best[i + 1, k], best[i, k - 1] + a[i]));<br>          }<br>        }<br>      }<br><br>      int cur = best[n - 2, n / 3 - 1] + pieces[split];<br><br>      if (cur &gt; res)<br>        res = cur;<br>    }<br><br>    return res;<br>  }<br>  <br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>