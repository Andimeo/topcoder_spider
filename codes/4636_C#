<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class DriveOrder<br>{<br> <br>    int select(int c1,int c2,int c3,int mj)<br>  {<br>     int []a = new int[3];<br>     int nn = (int)'#';<br>     if (c1 != (int)'#') a[0] = c1;<br>     if (c2 != (int)'#') a[1] = c2;<br>     if (c3 != (int)'#') a[2] = c3;<br>     if (mj != -1 &amp;&amp; a[mj] != 0) return mj;<br>     if (c1 != nn &amp;&amp; c2 != nn &amp;&amp; c3 != nn) // all have<br>     {<br>        int min = 10000;<br>      if (c1 &lt; min) min = c1;<br>      if (c2 &lt; min) min = c2;<br>      if (c3 &lt; min) min = c3;<br>      for (int i = 0;i&lt;3;i++) if (a[i] == min) return i;<br>     }<br>     else<br>     {<br>      for (int i = 0;i&lt;3;i++)<br>       if (a[i] &gt; 0 &amp;&amp; a[(i+1)%3]==0) //right<br>       {<br>          return i;<br>       }<br>     }<br>     return -1;<br>  }<br>  <br>  public void pp(string s)<br>{<br>   //Console.WriteLine(s);<br>}<br> <br>  public string determineOrder(string[] c, int major)<br>  {<br>      string ans = "";<br>    char c0,c1,c2;<br>       c0 = c1 = c2 = '#';<br>      if (c[0].Length&gt;0) { c0 = c[0][0]; c[0]=c[0].Substring(1); }<br>      if (c[1].Length&gt;0) { c1 = c[1][0]; c[1]=c[1].Substring(1); }<br>      if (c[2].Length&gt;0) { c2 = c[2][0]; c[2]=c[2].Substring(1); }<br> <br>      <br>       pp(""+c0+c1+c2);<br>    for(;;)<br>    {<br>      if (c1== '#' &amp;&amp; c2 =='#' &amp;&amp; c0=='#') break;<br> <br>      int next = select((int)c0,(int)c1,(int)c2,major);<br>      pp(next + "");<br>      if (next == 0) { ans += c0;<br>           c0 = '#';<br>            if (c[0].Length&gt;0) { c0 = c[0][0]; c[0]=c[0].Substring(1); }<br>      }<br>      else if (next == 1) <br>      {<br>        ans+=c1;<br>      c1 = '#';<br>      if (c[1].Length&gt;0) { c1 = c[1][0]; c[1]=c[1].Substring(1); }<br>      }<br>      else if (next == 2) <br>      {<br>        ans+=c2;<br>      c2 = '#';<br>       if (c[2].Length&gt;0) { c2 = c[2][0]; c[2]=c[2].Substring(1); }<br>        }<br>    }<br>    <br>    return ans;<br>  }<br>}<br>//Powered by [KawigiEditNonTest] modified by pivanof!<br></td>