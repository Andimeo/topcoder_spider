<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;cstdio&gt;<br>using namespace std;<br> <br>#define V(x) vector&lt;x &gt;<br>#define vi vector&lt;int&gt;<br>#define vd vector&lt;double&gt;<br>#define vs vector&lt;string&gt;<br> <br>#define fr(i,a,b) for((i)=(a);(i)&lt;(b);(i)++)<br>#define fo(i,n) fr(i,0,n)<br>#define fir(n) fo(i,n)<br>#define fjr(n) fo(j,n)<br>#define fkr(n) fo(k,n)<br>#define flr(n) fo(l,n)<br>#define fi fir(n)<br>#define fj fjr(n)<br>#define fk fkr(n)<br>#define fl flr(n)<br> <br> <br>#define ll long long<br>#define df double<br>#define pb(x) push_back(x)<br>#define cs c_str()<br>#define sz size()<br> <br> <br>#define B 210<br>int row[B],col[B];<br> <br>int loc[B];<br> <br>int u[B];<br> <br>int ok(int r1,int n) {<br>int cr=r1,cc=B-1;<br> <br>for(;cc&gt;=0;cc--) if(col[cc] &amp;&amp; !u[cc]) {<br>while(cr&lt;B &amp;&amp; !row[cr]) cr++;<br>if(cr==B) return 0;<br>if(cc&gt;n-(cr+1)) return 0;<br>//printf("%d -&gt; %d\n",cc,cr);<br>cr++;<br>}<br>return 1;<br>}<br> <br> <br>int rec(int r, int n) {<br>if(r==B) return 1;<br>if(!row[r]) return rec(r+1,n);<br> <br>if(!ok(r,n)) return 0;<br>int i;<br>fir(B) if(col[i] &amp;&amp; !u[i]) { loc[r]=i; u[i]=1; if(rec(r+1,n)) return 1; u[i]=0; }<br>return 0;<br>}<br> <br> <br> <br> <br> <br>class TriangleRooks { public: vs getBoard(vi uu, vi vv) {<br>vi f;<br>int i,j,k;<br>fir(uu.sz) f.pb(uu[i]);<br>fir(vv.sz) f.pb(vv[i]);<br>int n=f.sz/2;<br>vs ret;<br> <br>fir(2*n+1) printf("%d ",f[i]); puts("");<br> <br>if(f[0]!=0 || f[2*n]!=0) return ret;<br>col[0]=f[1]-f[0];<br>row[n-1]=f[1]-f[2];<br> <br>for(i=2;i&lt;2*n;i++) {<br>if(i%2==0) {<br>int c=i/2; col[c]=f[i+1]-f[i];<br>} else {<br>int r=n-(i+1)/2; row[r]=f[i]-f[i+1];<br>}<br>}<br> <br>printf("row "); fi printf("%d ",row[i]);puts("");<br>printf("col "); fi printf("%d ",col[i]);puts("");<br> <br>fi if(col[i]&lt;0 || col[i]&gt;1 || row[i]&lt;0 || row[i]&gt;1) return ret;<br> <br>j=k=0; fi j+=col[i]; fi k+=row[i]; if(j!=k) return ret;<br> <br>if(!rec(0,n)) return ret;<br> <br>for(i=0;i&lt;n;i++) {<br>string s;<br>for(j=0;j&lt;n-i;j++) s+=".";<br> <br>if(row[i]) s[loc[i]]='R';<br>ret.pb(s);<br>}<br> <br>return ret;<br>}};<br></td>