<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public final class TokenGrid {<br> <br>  public int getUnknown(String[] setup, String[] finish) {<br>    int N = setup.length;<br>    int s[][] = new int[N][N];<br>    int f[][] = new int[N][N];<br>    int m[][] = new int[N][N];<br>    int ui = 0, uj = 0;<br>    for(int i = 0; i &lt; N; i++) {<br>      StringTokenizer st = new StringTokenizer(setup[i], " ");<br>      for(int j = 0; j &lt; N; j++) {<br>        String t = st.nextToken();<br>        if((s[i][j] = t.equals("X") ? Integer.MIN_VALUE : t.equals("_") ? -2 : Integer.parseInt(t)) == -2) {<br>          ui = i;<br>          uj = j;<br>        }<br>      }<br>    }<br>    s[ui][uj] = 0;<br>    for(int i = 0; i &lt; N; i++) {<br>      StringTokenizer st = new StringTokenizer(finish[i], " ");<br>      for(int j = 0; j &lt; N; j++) {<br>        String t = st.nextToken();<br>        if((f[i][j] = t.equals("X") ? Integer.MIN_VALUE : Integer.parseInt(t)) &gt;=<br>           (m[i][j] =<br>           (i &gt; 0 &amp;&amp; i &lt; N - 1 ? 2 : 1) + <br>           (j &gt; 0 &amp;&amp; j &lt; N - 1 ? 2 : 1))<br>        )<br>          return -1;<br>      }<br>    }<br>    boolean done;<br>    int L = N - 1;<br>    int dt = (int)System.currentTimeMillis() + 1600;<br>    for(int C = 0;; C++) {<br>      do {<br>        done = true;<br>        for(int i = 0; i &lt; N; i++)<br>          for(int j = 0; j &lt; N; j++) {<br>            int t;<br>            if(s[i][j] &gt;= (t = m[i][j])) {<br>              s[i][j] -= t;<br>              if(i &gt; 0)<br>                s[i-1][j]++;<br>              if(i &lt; L)<br>                s[i+1][j]++;<br>              if(j &gt; 0)<br>                s[i][j-1]++;<br>              if(j &lt; L)<br>                s[i][j+1]++;<br>              done = false;<br>            }<br>          }<br>      } while(!done);<br>      done = true;<br>  _F:<br>      for(int i = 0; i &lt; N; i++)<br>        for(int j = 0; j &lt; N; j++) {<br>          int t;<br>          if((t = s[i][j]) &gt;= 0)<br>            if(t != f[i][j]) {<br>              done = false;<br>              break _F;<br>            }<br>        }<br>      if(done)<br>        return C;<br>      if((C &amp; 1) == 1 &amp;&amp; (int)System.currentTimeMillis() &gt;= dt)<br>        break;<br>      s[ui][uj]++;<br>    }<br>    return -1;<br>  }<br> <br>}<br></td>