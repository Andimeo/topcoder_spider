<td class="problemText" colspan="8" valign="middle" align="left">
            Public Class TokenGrid<br>        Public Function getUnknown(ByVal setup As String(), ByVal finish As String()) As Integer<br>            Dim i, j, k, l As Long<br>            Dim iX, iY As Integer<br>            Dim iMax As Integer = setup.GetUpperBound(0)<br>            Dim aHash As New System.Collections.Hashtable<br> <br>            Dim aFunction(iMax, iMax) As Integer<br>            Dim aVal(iMax, iMax) As Integer<br>            Dim aFinish(iMax, iMax) As Integer<br>            Dim aCost(iMax, iMax) As Integer<br> <br>            For i = 0 To iMax<br>                For j = 0 To iMax<br>                    If setup(i).Split(" ")(j) = "X" Then<br>                        aFunction(i, j) = 1<br>                    ElseIf setup(i).Split(" ")(j) = "_" Then<br>                        aFunction(i, j) = 2<br>                        iX = i<br>                        iY = j<br>                    Else<br>                        aFunction(i, j) = 0<br>                        aVal(i, j) = CInt(setup(i).Split(" ")(j))<br>                    End If<br>                    If aFunction(i, j) &lt;&gt; 1 Then<br>                        aFinish(i, j) = CInt(finish(i).Split(" ")(j))<br>                    End If<br>                Next<br>            Next<br> <br>            Dim iTarget As Integer<br> <br>            For i = 0 To iMax<br>                For j = 0 To iMax<br>                    iTarget = 4<br>                    If i = 0 Then iTarget -= 1<br>                    If i = iMax Then iTarget -= 1<br>                    If j = 0 Then iTarget -= 1<br>                    If j = iMax Then iTarget -= 1<br>                    If aFunction(i, j) &lt;&gt; 1 And aFinish(i, j) &gt;= iTarget Then Return -1<br>                    aCost(i, j) = iTarget<br>                Next<br>            Next<br> <br>            Dim iRet As Integer = 0<br>            Dim iTimes As Integer<br>            Dim sHash As String<br> <br>            Dim bTry As Boolean = True<br>            Dim bGood As Boolean<br>            Do While bTry<br>                bTry = False<br>                For i = 0 To iMax<br>                    For j = 0 To iMax<br>                        If aVal(i, j) &gt;= aCost(i, j) And aFunction(i, j) &lt;&gt; 1 Then<br>                            bTry = True<br>                            iTimes = aVal(i, j) \ aCost(i, j)<br>                            aVal(i, j) -= aCost(i, j) * iTimes<br>                            If i &gt; 0 Then aVal(i - 1, j) += iTimes<br>                            If j &gt; 0 Then aVal(i, j - 1) += iTimes<br>                            If i &lt; iMax Then aVal(i + 1, j) += iTimes<br>                            If j &lt; iMax Then aVal(i, j + 1) += iTimes<br>                        End If<br>                    Next<br>                Next<br> <br>                bGood = True<br> <br>                For i = 0 To iMax<br>                    For j = 0 To iMax<br>                        If aFunction(i, j) &lt;&gt; 1 Then<br>                            If aVal(i, j) &lt;&gt; aFinish(i, j) Then bGood = False<br>                        End If<br>                    Next<br>                Next<br> <br>                If bGood Then Return iRet<br> <br>                If Not bTry Then<br>                    sHash = ""<br>                    For i = 0 To iMax<br>                        For j = 0 To iMax<br>                            If aFunction(i, j) = 1 Then<br>                                sHash &amp;= "X"<br>                            Else<br>                                sHash &amp;= CStr(aVal(i, j))<br>                            End If<br>                        Next<br>                    Next<br> <br>                    If aHash.ContainsKey(sHash) Then Return -1<br>                    aHash.Add(sHash, Nothing)<br> <br>                    aVal(iX, iY) += 1<br>                    iRet += 1<br>                    bTry = True<br>                End If<br>            Loop<br> <br>        End Function<br>    End Class<br></td>