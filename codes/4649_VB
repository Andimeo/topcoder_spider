<td class="problemText" colspan="8" valign="middle" align="left">
            imports Microsoft.VisualBasic<br>public class TheTournament<br>Dim names(150) As String<br>Dim N As Integer<br>Dim played(150) As Integer<br>Dim won(150) As Integer<br> <br>Public Function findLeader(matches As String()) As String<br>Dim s() As String<br> <br>Dim i As Integer<br>Dim j As Integer<br>Dim p As Integer<br>Dim g1 As Integer<br>Dim g2 As Integer<br>Dim z As Double<br> <br>Dim best_n As Integer<br>Dim best_ratio As Double<br> <br> <br>    N = -1<br>    For p = 0 To UBound(matches)<br>        s = Split(matches(p), " ")<br>        g1 = znajdz(s(0))<br>        g2 = znajdz(s(2))<br>        <br>        played(g1) = played(g1) + 1<br>        won(g1) = won(g1) + 1<br>        played(g2) = played(g2) + 1<br>    Next p<br>    <br>    best_n = -1<br>    best_ratio = 0<br>    <br>    For p = 0 To N<br>        z = won(p) / played(p)<br>        If (best_n = -1) Then<br>            best_n = p<br>            best_ratio = z<br>        ElseIf (z &gt; best_ratio) Or ((z = best_ratio) And (names(p) &lt; names(best_n))) Then<br>            best_n = p<br>            best_ratio = z<br>        End If<br>    Next p<br>    <br>    findLeader = names(best_n)<br>End Function<br> <br> <br>Public Function znajdz(imie As String) As Integer<br>Dim k As Integer<br> <br>    k = 0<br>    Do While k &lt;= N<br>        If names(k) = imie Then Exit Do<br>        k = k + 1<br>    Loop<br>    If k &gt; N Then<br>        N = N + 1<br>        names(N) = imie<br>        played(N) = 0<br>        won(N) = 0<br>        <br>        znajdz = N<br>    Else<br>        znajdz = k<br>    End If<br>        <br>End Function<br>end class<br></td>