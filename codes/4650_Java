<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class SecurityBunker<br>{<br>  public double chooseBomb(String[] field)<br>  {<br>    int m=0, n=0;<br>    for(int i=0;i&lt;field.length;i++)<br>    {<br>      for(int j=0;j&lt;field[i].length();j++)<br>      {<br>        if(field[i].charAt(j)=='?')<br>          m++;<br>        else if(field[i].charAt(j)=='*')<br>          n++;<br>      }<br>    }<br>    int[] tx = new int[m]; int[] ty = new int[m];<br>    int[] bx = new int[n]; int[] by = new int[n];<br>    int k=0, l=0;<br>    for(int i=0;i&lt;field.length;i++)<br>    {<br>      for(int j=0;j&lt;field[i].length();j++)<br>      {<br>        if(field[i].charAt(j)=='?')<br>        {<br>          tx[k]=i;ty[k]=j;<br>          k++;<br>        }<br>        else if(field[i].charAt(j)=='*')<br>        {<br>          bx[l]=i;by[l]=j;<br>          l++;<br>        }<br>      }<br>    }<br>    double eps = 1e-12;<br>    double lb = 1.0, ub = 150.0;<br>    while(lb+eps&lt;ub)<br>    {<br>      double d = (lb+ub)/2.0;<br>      boolean success= true;<br>      for(k=0;k&lt;n;k++)<br>      {<br>        boolean[] exploded = new boolean[n];<br>        boolean[] exploding = new boolean[n];<br>        boolean[] target = new boolean[m];<br>        exploding[k] = true;<br>        while(true)<br>        {<br>          boolean changed = false;<br>          for(int i=0;i&lt;n;i++)<br>          {<br>            if(exploded[i])<br>              continue;<br>            if(exploding[i])<br>            {<br>              for(int j=0;j&lt;n;j++)<br>                if(dist(bx[i],by[i], bx[j], by[j])&lt;=d)<br>                {<br>                  if(!exploded[j])<br>                    exploding[j]=true;<br>                }<br>              for(int j=0;j&lt;m;j++)<br>              {<br>                if(dist(bx[i],by[i], tx[j], ty[j])&lt;=d)<br>                {<br>                  target[j] = true;<br>                }<br>              }<br>              changed = true;<br>              exploding[i] = false;<br>              exploded[i] = true;<br>            }<br>          }<br>          if(!changed)<br>            break;<br>        }<br>        for(int j=0;j&lt;m;j++)<br>          success &amp;= target[j];<br>        if(!success)<br>        {<br>          lb=d; break;<br>        }<br>      }<br>      if(success)<br>        ub = d;<br>    }<br>    return lb;<br>  }<br>  public double dist(int a, int b, int c, int d)<br>  {<br>    return Math.sqrt((a-c)*(a-c) + (b-d)*(b-d));<br>  }<br>}<br></td>