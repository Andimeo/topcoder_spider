<td class="problemText" colspan="8" valign="middle" align="left">
            using System; using System.Collections; using System.Text; using System.Text.RegularExpressions;<br>public class Pitches<br>   {<br>   double[] stats;<br>   public double strikeOut(double[] stats_, int B, int S)<br>      {<br>      stats = stats_;<br>      for (int i=0; i &lt; 4; i++) for (int j=0; j &lt; 3; j++) memo[i,j] = -1;<br>      return G(B, S);<br>      }<br>   double[,] memo = new double[4,3];<br>   double G(int B, int S)<br>      {<br>      if (B &gt;= 4) return 0;<br>      if (S &gt;= 3) return 1;<br>      if (memo[B,S] &gt;= 0) return memo[B,S];<br>      double a = stats[0]*G(B+1,S) + stats[1]*G(B,S+1);<br>      double b = stats[2]*G(B+1,S) + stats[3]*G(B,S+1);<br>      double c = stats[4]*G(B+1,S) + stats[5]*G(B,S+1);<br>      double d = stats[6]*G(B+1,S) + stats[7]*G(B,S+1);<br>      memo[B,S] = F(a,b,c,d);<br>      return memo[B,S];<br>      }<br>   double F(double a,double b,double c,double d)<br>      {<br>      {} {}<br>      double disc = a-b-c+d;<br>      double B,P;<br>      if (a&lt;=b &amp;&amp; c&lt;=d)<br>         return Math.Max(a,c);<br>      else if (a&gt;=b &amp;&amp; c&gt;=d)<br>         return Math.Max(b,d);<br>      else if (a&gt;=c &amp;&amp; b&gt;=d)<br>         return Math.Min(a,b);<br>      else if (a&lt;=c &amp;&amp; b&lt;=d)<br>         return Math.Min(c,d);<br>      else if (disc == 0)<br>         {<br>         B=0.5; P=0.5;  <br>         }<br>      else <br>         {<br>         B = (d-b) / disc;<br>         P = (b-c) / disc;<br>         }<br>      B = Math.Min(Math.Max(B,0),1);<br>      P = Math.Min(Math.Max(P,0),1);<br>      return P*B*a + P*(1-B)*b + (1-P)*B*c + (1-P)*(1-B)*d;<br>      }<br><br><br>} // TopC#der<br><br><br>// Powered by FileEdit<br></td>