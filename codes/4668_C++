<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cassert&gt;<br>#include &lt;cmath&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;numeric&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br> <br>using namespace std;<br> <br>typedef vector&lt;string&gt; vs;<br> <br>#define For(i,a,b) for(int i=(a); i&lt;=(b); i++)<br>#define Rep(i,n) for(int i=0; i&lt;(n); i++)<br>#define Size(x) (int(x.size()))<br>#define Fil(a) memset(&amp;a,0,sizeof(a))<br> <br>struct AlphabetCount<br>{<br>  int count(vs grid,int len)<br>  {<br>    int n=Size(grid);<br>    int m=Size(grid[0]);<br>    int a[n][m];<br>    Fil(a);<br>    Rep(i,n) Rep(j,m) if(grid[i][j]=='A') a[i][j]=1;<br>    For(k,1,len-1)<br>    {<br>      char ch='A'+k;<br>      Rep(i,n) Rep(j,m) if(grid[i][j]==ch)<br>      {<br>        a[i][j]=0;<br>        For(ni,i-1,i+1) if(0&lt;=ni &amp;&amp; ni&lt;n)<br>          For(nj,j-1,j+1) if(0&lt;=nj &amp;&amp; nj&lt;m)<br>            if(grid[ni][nj]==ch-1)<br>            {<br>              a[i][j]+=a[ni][nj];<br>              a[i][j]&lt;?=1000000000;<br>            }<br>      }<br>    }<br>    int res=0;<br>    Rep(i,n) Rep(j,m) if(grid[i][j]=='A'+len-1)<br>    {<br>      res+=a[i][j];<br>      res&lt;?=1000000000;<br>    }<br>    return res;<br>  }  <br>};<br></td>