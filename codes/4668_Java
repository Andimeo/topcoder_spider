<td class="problemText" colspan="8" valign="middle" align="left">
            public class AlphabetCount {<br>  int[] drow = {-1, 1, 0, 0,-1,-1, 1, 1};<br>  int[] dcol = { 0, 0,-1, 1,-1, 1,-1, 1};<br>  <br>  boolean inside(String[] grid, int row, int col) {<br>    return (row &gt;= 0) &amp;&amp; (col &gt;= 0) &amp;&amp; (row &lt; grid.length) &amp;&amp; (col &lt; grid[row].length());<br>  }<br>  <br>  public int count(String[] grid, int length) {<br>    long ans = 0;<br>    long[][] ways = new long[grid.length][grid[0].length()];<br>    <br>    for (int i = 0; i &lt; grid.length; i++)<br>    for (int j = 0; j &lt; grid[i].length(); j++) {<br>      if (grid[i].charAt(j) == 'A') {<br>        ways[i][j] = 1;<br>      }<br>    }<br>    <br>    for (int k = 0; k &lt; length; k++) {<br>      ans = 0;<br>      for (int i = 0; i &lt; grid.length; i++)<br>      for (int j = 0; j &lt; grid[i].length(); j++) {<br>        if (grid[i].charAt(j) == 'A'+k) {<br>          for (int n = 0; n &lt; 8; n++) {<br>            int ii = i + drow[n];<br>            int jj = j + dcol[n];<br>            if (inside(grid, ii, jj)) {<br>              if (grid[ii].charAt(jj) == 'A'+k+1) {<br>                ways[ii][jj] += ways[i][j];<br>              }<br>            }<br>          }<br>          <br>          ans += ways[i][j];<br>        }<br>      }<br>    }<br>    <br>    if (ans &gt; 1000000000) return 1000000000;<br>    return (int) ans;<br>  }<br>}<br></td>