<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class ABCPath<br>{<br>  int [,]l;<br>  int c = 0,r = 0;<br>  string []g;<br> <br> <br>  public int length(string[] grid)<br>  {<br>    int i,j;<br>    r = grid.Length;<br>    c = grid[0].Length;<br>    g = grid;<br>    l = new int[r,c];<br>    l.Initialize();<br>    <br>    for (i=0;i&lt;grid.Length;i++)<br>    {<br>      for (j=0;j&lt;grid[i].Length;j++)<br>      {<br>        if (grid[i][j]=='A')<br>        {<br>          l[i,j] = 1;<br>          solve (i,j,1);<br>        }<br>      }<br>    }<br> <br>    int max = 0;<br>    for (i=0;i&lt;grid.Length;i++)<br>    {<br>      for (j=0;j&lt;grid[i].Length;j++)<br>      {<br>        if (l[i,j]&gt;max)<br>          max = l[i,j];<br>      }<br>    }<br>    return max;<br>  }<br>  <br> <br>  void solve(int i,int j, int v)<br>  {<br>    int di,dj;<br>    for (di = -1;di&lt;=1;di++)<br>    {<br>      if (i+di&gt;=0 &amp;&amp; i+di&lt;r)<br>      {<br>        for (dj = -1;dj&lt;=1;dj++)<br>        {<br>          if (j+dj&gt;=0 &amp;&amp; j+dj&lt;c &amp;&amp; (i+di!= 0 || j+dj != 0) &amp;&amp; g[i+di][j+dj]-'A'==v  &amp;&amp;l[i+di,j+dj] &lt; v+1)<br>          {<br>            l[i+di,j+dj] = v+1;<br>            solve (i+di,j+dj,v+1);<br>          }<br> <br>        }<br>      }<br> <br>    }<br> <br>  }<br>}<br></td>