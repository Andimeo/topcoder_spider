<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class ValetParking {<br>  <br>  final static int oo = 100100100;<br>  final static double eps = 1e-9;<br>  int m, n;<br>  int result;<br> <br>  int dx[] = {-1,0,1,0};<br>  int dy[] = {0,1,0,-1};<br>    <br>  boolean in(int x, int y) {<br>    return (0&lt;=x&amp;&amp;x&lt;100&amp;&amp;0&lt;=y&amp;&amp;y&lt;100);  <br>  }<br>  <br>  boolean inside(int x, int y, int x1, int y1, int x2, int y2) {<br>    int xmin, ymin, xmax, ymax;<br>    xmin = Math.min(x1, x2);<br>    xmax = Math.max(x1, x2);<br>    ymin = Math.min(y1, y2);<br>    ymax = Math.max(y1, y2);<br>    return xmin&lt;=x&amp;&amp;x&lt;=xmax&amp;&amp;ymin&lt;=y&amp;&amp;y&lt;=ymax;<br>  }<br>  <br>  int kc(int x, int y, int u, int v) {<br>    return Math.abs(x-u)+Math.abs(y-v);<br>  }<br>  <br>  int sl(int cx, int cy, int ex, int ey, int h) {<br>    int lx, ly;<br>    lx = cx+dx[h];<br>    ly = cy+dy[h];<br>    if (kc(lx,ly,ex,ey)==0) return 0;<br>    <br>    if (lx==cx&amp;&amp;ex==cx) {<br>      if (ly&lt;cy&amp;&amp;cy&lt;ey) return 2+ey-ly;<br>      if (ey&lt;cy&amp;&amp;cy&lt;ly) return 2+ly-ey;<br>    }<br>    <br>    if (ly==cy&amp;&amp;ey==cy) {<br>      if (lx&lt;cx&amp;&amp;cx&lt;ex) return 2+ex-lx;<br>      if (ex&lt;cx&amp;&amp;cx&lt;lx) return 2+lx-ex;<br>    }<br>    <br>    int r = oo;<br>    for (int k=0; k&lt;4; k++) {<br>      int x, y;<br>      x = lx+dx[k]; y = ly+dy[k];<br>      if (in(x,y)&amp;&amp;!inside(cx,cy,ex,ey,x,y)) r = Math.min(r, kc(ex,ey,x,y));<br>    }<br>    return r+1;<br>  }<br> <br>  public int minMoves(int ex, int ey, int cx, int cy) {<br>    if (cx==0&amp;&amp;cy==0) return 0;<br>    n = 100;<br>    int[][][] d = new int[n][n][4];<br>    for (int i=0; i&lt;n; i++) for (int j=0; j&lt;n; j++) Arrays.fill(d[i][j], oo);    <br>    for (int h=0; h&lt;4; h++) d[cx][cy][h] = sl(cx,cy,ex,ey,h);<br>    boolean stop;<br>    do {<br>      stop = true;<br>      for (int i=0; i&lt;n; i++)<br>      for (int j=0; j&lt;n; j++)<br>      for (int h=0; h&lt;4; h++) <br>      if (d[i][j][h]!=oo) {<br>        int x, y;<br>        x = i+dx[h]; y = j+dy[h];<br>        if (!in(x,y)) continue;<br>        for (int k=0; k&lt;4; k++) {<br>          int ts = sl(x,y,i,j,k);<br>          if (d[x][y][k]&gt;d[i][j][h]+1+ts) {<br>            d[x][y][k] = d[i][j][h]+1+ts;<br>            stop = false;<br>          }<br>        }<br>      }<br>    } while (!stop);<br>    <br>    result = oo;<br>    for (int h=0; h&lt;4; h++) result = Math.min(result, d[0][0][h]);<br>    return result;<br>  }<br> <br>  int s2i(String s) {<br>    return Integer.parseInt(s);<br>  }<br> <br>  void pp(String s) {<br>    System.out.println(s);<br>  }<br> <br>  void pp(int s) {<br>    System.out.println(s);<br>  }<br> <br>  void pp(long s) {<br>    System.out.println(s);<br>  }<br> <br>  void pp(double s) {<br>    System.out.println(s);<br>  }<br>}<br> <br> <br>// Powered by PopsEdit<br>// Powered by CodeProcessor<br></td>