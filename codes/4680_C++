<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#define REP(i,n) for(int i=0;i&lt;n;++i)<br>#define sz size()<br>#define pb push_back<br>#define V(t) vector&lt; t &gt;<br>using namespace std;<br> <br>class VideoEncode {<br>public:<br>  double bitrate(string, int);<br>};<br> <br>double VideoEncode::bitrate(string length, int desiredSize) {<br>  int h,m,s;<br>  sscanf(length.c_str(),"%d:%d:%d",&amp;h,&amp;m,&amp;s);<br>  s+=h*60*60+m*60;<br>  double ret = desiredSize;<br>  ret/=s;<br>  return ret * (1&lt;&lt;20) * 8 / 1000;<br>}<br></td>