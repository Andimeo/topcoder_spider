<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class GraphLabel {<br>  private static int[] v;<br>  private static int n;<br>  private static boolean[][] g;<br>  private static int max() {<br>    int max = -1;<br>    int temp;<br>    for (int i = 0; i &lt; n; ++i) {<br>      for (int j = 0; j &lt; n; ++j) {<br>        if (g[i][j]) {<br>          temp = Math.abs(v[i] - v[j]);<br>          if (temp &gt; max) {<br>            max = temp;<br>          }<br>        }<br>      }<br>    }<br>    return max;<br>  }<br>  <br>  private static boolean[] b;<br>  private static int min = 10000;<br>  private static int temp;<br>  <br>  private static void myTry(int i) {<br>    if (i == n) {<br>      temp = max();<br>      if (temp &lt; min) {<br>        min = temp;<br>      }<br>    } else {<br>      for (int j = 0; j &lt; n; ++j) {<br>        if (b[j]) {<br>          b[j] = false;<br>          v[i] = j + 1;<br>          myTry(i + 1);<br>          b[j] = true;<br>        }<br>      }<br>    }  <br>  }<br>  <br>  public int adjacentDifference(String[] graph) {<br>    n = graph.length;<br>    g = new boolean[n][n];<br>    for (int i = 0; i &lt; n; ++i) {<br>      for (int j = 0; j &lt; n; ++j) {<br>        g[i][j] = (graph[i].charAt(j) == '1');<br>      }<br>    }<br>    v = new int[n];<br>    b = new boolean[n];<br>    Arrays.fill(b, true);<br>    <br>    myTry(0);<br>    <br>    return min;<br>  }<br>}<br> <br> <br>// Powered by FileEdit<br></td>