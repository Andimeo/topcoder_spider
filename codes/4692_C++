<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;ctime&gt;<br>#include &lt;map&gt;<br>using namespace std;<br> <br>int xA, yA, xB, yB;<br> <br>bool same[51][51][51][51][2];<br> <br>class ImageRepeat { public:<br> <br>int largestSize(vector &lt;string&gt; imageA, vector &lt;string&gt; imageB){<br>  xA = imageA.size(), yA = imageA[0].size();<br>  xB = imageB.size(), yB = imageB[0].size();<br>  int maxsz = min( min(xA, yA), min(xB, yB));<br>  int ret = 0;<br>  for(int sz = 0; sz &lt; maxsz; sz++){<br>    int at = sz % 2;<br>    for(int iA = 0; iA + sz &lt; xA; iA++){ for(int jA = 0; jA + sz &lt; yA; jA++){<br>    for(int iB = 0; iB + sz &lt; xB; iB++){ for(int jB = 0; jB + sz &lt; yB; jB++){<br>      if(imageA[iA][jA] != imageB[iB][jB]) continue;<br>      if(sz == 0) same[iA][iB][jA][jB][at] = true;<br>      else same[iA][iB][jA][jB][at] = (same[iA+1][iB+1][jA][jB][1-at] &amp;&amp; same[iA][iB][jA+1][jB+1][1-at]) &amp;&amp; (imageA[iA+sz][jA+sz] == imageB[iB+sz][jB+sz]);<br>      if(same[iA][iB][jA][jB][at]) ret = sz + 1;<br>    }}<br>    }}<br>    if(ret != sz + 1) return ret;<br>  }<br>  return ret;<br>}<br> <br> <br>};<br> <br> <br>//Powered by [KawigiEdit] + aussie<br></td>