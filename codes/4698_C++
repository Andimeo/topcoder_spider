<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;climits&gt;<br>#include &lt;iostream&gt;<br>#include &lt;vector&gt;<br><br>using namespace std;<br><br><br><br>class MagicCube {<br>public:<br>   int magic_score( vector&lt;int&gt; cube )<br>   {<br>      int maxi = INT_MIN, mini = INT_MAX;<br><br>      for ( int i=0; i&lt;3; ++i ) <br>         for ( int j=0; j&lt;3; ++j ) {<br>            int x1 = 0, x2 = 0, x3 = 0;<br>            for ( int k=0; k&lt;3; ++k ) {<br>               x1 += cube[ i*9 + j*3 + k ];<br>               x2 += cube[ j*9 + k*3 + i ];<br>               x3 += cube[ k*9 + i*3 + j ];<br>            }<br>            maxi = max( maxi, x1 ); maxi = max( maxi, x2 ); maxi = max( maxi, x3 );<br>            mini = min( mini, x1 ); mini = min( mini, x2 ); mini = min( mini, x3 );<br>         }<br>      <br>      return maxi - mini;<br>   }<br>   <br>   <br>   int getScore( vector &lt;int&gt; nums ) { // caret here<br>      int ret = magic_score( nums );<br>      for ( int i=0; i&lt;(int)nums.size(); ++i )<br>         for ( int j=i+1; j&lt;(int)nums.size(); ++j ) {<br>            swap( nums[i], nums[j] );<br>            ret = min( ret, magic_score( nums ) );<br>            swap( nums[i], nums[j] );<br>         }<br>      return ret;<br>   }<br>   <br>   <br> <br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by moj 2.0 [modified TZTester]<br>// Powered by CodeProcessor<br></td>