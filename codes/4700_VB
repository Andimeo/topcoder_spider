<td class="problemText" colspan="8" valign="middle" align="left">
            Public Class EncodingTrees<br>        Public Function getCode(ByVal N As Integer, ByVal index As Integer) As String<br>            Return getCode2(N, index, 0)<br> <br>        End Function<br>        Public Function getCode2(ByVal N As Integer, ByVal index As Integer, ByVal iOffset As Integer) As String<br>            Dim i, j, k, l As Long<br> <br>            Dim aNumber(19) As Integer<br> <br>            aNumber(1) = 1<br>            aNumber(0) = 1<br> <br>            For i = 2 To 19<br>                For j = 1 To i<br>                    aNumber(i) += aNumber(j - 1) * aNumber(i - j)<br>                Next<br>            Next<br> <br>            If index &gt; aNumber(N) Then Return ""<br> <br>            Dim iNumTrees As Integer<br> <br>            For i = 1 To N<br>                iNumTrees = aNumber(i - 1) * aNumber(N - i)<br>                If index &lt;= iNumTrees Then<br>                    j = aNumber(i - 1)<br>                    k = aNumber(N - i)<br>                    l = index Mod k<br>                    If l = 0 Then l = k<br>                    Return Microsoft.VisualBasic.Chr(96 + i + iOffset) &amp; getCode2(i - 1, ((index - 1) \ k) + 1, iOffset) &amp; getCode2(N - i, l, i + iOffset)<br>                End If<br>                index -= iNumTrees<br>            Next<br> <br>        End Function<br>    End Class<br></td>