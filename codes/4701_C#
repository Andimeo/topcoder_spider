<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>public class ChutesAndLadders {<br>  const int MAX_MOVES = 10000;<br>  const int SIZE = 100;<br><br>  public double[] winningChance(int[] startLadder, int[] endLadder, int[] players) {<br>    double[,] p = new double[MAX_MOVES + 1, SIZE];<br>    double[,] psum = new double[MAX_MOVES + 1, SIZE];<br>    p[0, SIZE - 1] = 1;<br><br>    double[] jump = new double[13];<br>    for (int i = 1; i &lt;= 6; ++i)<br>      for (int j = 1; j &lt;= 6; ++j)<br>        ++jump[i + j];<br><br>    int[] ladderTo = new int[SIZE];<br>    for (int i = 0; i &lt; SIZE; ++i)<br>      ladderTo[i] = i;<br>    for (int i = 0; i &lt; startLadder.Length; ++i)<br>      ladderTo[startLadder[i]] = endLadder[i];<br><br>    for (int i = 1; i &lt;= MAX_MOVES; ++i)<br>    {<br>      for (int j = 0; j &lt; SIZE - 1; ++j)<br>      {<br>        double cp = 0;<br><br>        for (int k = 0; k &lt;= 12; ++k)<br>        {<br>          int dest = j + k;<br><br>          if (dest &gt;= SIZE)<br>          {<br>            dest = SIZE - 1;<br>          }<br><br>          dest = ladderTo[dest];<br>          cp += p[i - 1, dest] * jump[k];<br>        }<br><br>        p[i, j] = cp / 36;<br>      }<br>    }<br><br>    for (int j = 0; j &lt; SIZE; ++j)<br>      psum[0, j] = p[0, j];<br><br>    for (int i = 1; i &lt;= MAX_MOVES; ++i)<br>      for (int j = 0; j &lt; SIZE; ++j)<br>        psum[i, j] = p[i, j] + psum[i - 1, j];<br><br>    double[] res = new double[players.Length];<br><br>    for (int who = 0; who &lt; players.Length; ++who)<br>    {<br>      for (int k = 0; k &lt;= MAX_MOVES; ++k)<br>      {<br>        double cp = p[k, players[who]];<br><br>        for (int other = 0; other &lt; players.Length; ++other)<br>          if (other &lt; who)<br>          {<br>            cp *= (1 - psum[k, players[other]]);<br>          } <br>          else if (other &gt; who)<br>          {<br>            cp *= k &gt; 0 ? (1 - psum[k - 1, players[other]]) : 1;<br>          }<br><br>        res[who] += cp;<br>      }<br>    }<br><br>    return res;<br>  }<br>  <br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>