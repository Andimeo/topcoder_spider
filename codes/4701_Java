<td class="problemText" colspan="8" valign="middle" align="left">
            public class ChutesAndLadders{<br>  double[] pd;<br>  double[][] bo;<br>  double[] win;<br> <br>  public double[] winningChance(int[] st, int[] ed, int[] p){<br>    pd=new double[13];<br>    int n=p.length;<br>    for(int i=1;i&lt;=6;i++)<br>    for(int j=1;j&lt;=6;j++) pd[i+j]+=(double)1/36;<br>    bo=new double[n][100];<br>    for(int i=0;i&lt;n;i++) bo[i][p[i]]=1;<br>        <br>    int[] pmap=new int[111];<br>    for(int i=0;i&lt;111;i++) pmap[i]=i;<br>    for(int i=0;i&lt;st.length;i++) pmap[st[i]]=ed[i];<br>    win=new double[n];<br>    double left=1;<br>    while(left&gt;1e-14){<br>      double[][] nbo=new double[n][111];<br>      for(int i=0;i&lt;n;i++){<br>        for(int j=0;j&lt;99;j++)<br>          for(int k=j+2;k&lt;=j+12;k++) <br>            nbo[i][pmap[k]]+=bo[i][j]*pd[k-j];<br>        double w=0;<br>        for(int j=99;j&lt;111;j++) {w+=nbo[i][j];nbo[i][j]=0;};<br>        if (Math.abs(w-1)&gt;1e-14) {<br>          double adj=(1-w);<br>          for(int j=0;j&lt;99;j++) nbo[i][j]/=adj;<br>        };<br>        win[i]+=w*left;<br>        left*=1-w;<br>      }<br>      bo=nbo;<br>    }<br>    return win;<br>  }  <br>}<br></td>