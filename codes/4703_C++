<td class="problemText" colspan="8" valign="middle" align="left">
            // I think it is good to submit wrong solutions sometimes to give others challenging opportunities.<br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>using namespace std;<br><br>#define LS &lt;<br>#define Size(x) (int(x.size()))<br>#define LET(k,val) typeof(val) k = (val)<br>// execute "act", and return "val" as an expression result<br>#define CLC(act,val) (*({act; static typeof(val) CLCR; CLCR = (val); &amp;CLCR;}))<br><br>// All macros with parameters "k,a,b" run the "k" variable in range [a,b)<br><br>// Standard mathematical quantifiers, plus tools to implement them<br>// find the first k in [a,b) that satisfies cond, or b if none<br>#define FIRST(k,a,b,cond) CLC(LET(k, a); for(; k LS (b); ++k) if(cond) break, k)<br>#define EXISTS(k,a,b,cond) (FIRST(k,a,b,cond) LS (b))<br>#define FORALL(k,a,b,cond) (!EXISTS(k,a,b,!(cond)))<br>// note: the range has to be non-empty here<br>#define FOLD1(k,a,b,init,act) CLC(LET(k, a); LET(R##k, init); for(++k; k LS (b); ++k) act, R##k)<br>#define MIN(k,a,b,x) FOLD1(k,a,b,x, R##k &lt;?= (x))<br><br>#line 3 "CompressionText.cc"<br><br>int comp(string &amp;original, int a, int b) {<br>  int score = Size(original);<br>  int pend = 0;<br>  for(int k=0; k&lt;Size(original); k++) {<br>    if(k == Size(original)-2) continue;<br>    if(k == Size(original)-1) continue;<br>    if(pend) {pend--; continue;}<br>    if(FORALL(t,0,3,original[k+t] == original[a+t])) {score--; pend=2;}<br>    else <br>    if(FORALL(t,0,3,original[k+t] == original[b+t])) {score--; pend=2;}<br>    }<br>  return score;<br>  }<br><br>class CompressionText {<br>  public:<br>  int shortestLength(string original) {<br>    // !FDI<br>    return MIN(k,0,Size(original)-2, MIN(l,0,Size(original)-2,<br>      comp(original,k,l)));<br>    }<br>  };<br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>