<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.io.*;<br>import java.text.*;<br>import java.math.*;<br>import static java.lang.Math.*;<br>import static java.util.Arrays.*;<br>public class CompressionText {<br>  String s, t;<br>  String o;<br>  public int shortestLength(String original) {<br>    o = original;<br>    if(original.length() == 3) return 2;<br>    if(original.length() == 4) return 3;<br>    if(original.length() == 5) return 4;<br>    <br>    int ret = original.length();<br>    memo = new int[original.length()];<br>    for(int i = 0; i &lt; original.length()-5; i++){<br>      s = original.substring(i,i+3);<br>      for(int j = i+3; j &lt; original.length()-2; j++){<br>        t = original.substring(j,j+3);<br>        fill(memo,-1);<br>        ret = min(ret, doit(0));<br>      }<br>    }<br>    return ret;<br>  }<br>  int[] memo;<br>  int doit(int at){<br>    if(at == memo.length) return 0;<br>    if(memo[at] != -1) return memo[at];<br>    int ret = 1+doit(at+1);<br>    String sub = o.substring(at);<br>    if(sub.startsWith(s) || sub.startsWith(t)) ret = min(ret, 2+doit(at+3));<br>    memo[at] = ret;<br>    return ret;<br>  }<br> <br>}<br> <br>// Powered by PopsEdit<br>// Powered by CodeProcessor<br></td>