<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;numeric&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>using namespace std;<br>#define REP(i, n) for (int (i) = 0; i &lt; (n); (i)++)<br>#define REPF(i, f, n) for (int (i) = (f); i &lt; (n); (i)++)<br>#define REPV(i, v) for (unsigned int (i) = 0; (i) &lt; v.size(); (i)++)<br>#define ALL(v) (v).begin(), (v).end()<br>#define all(v) (v).begin(), (v).end()<br>typedef pair&lt;int,int&gt; pi; typedef vector&lt;int&gt; vi; typedef vector&lt;string&gt; vs;<br><br>class ClassScores {<br>public:<br>    vector &lt;int&gt; findMode(vector &lt;int&gt; s) {<br>        vector &lt;int&gt; res;<br>    vi v(101, 0);<br>    REPV(i, s)<br>      v[s[i]]++;<br><br>    int mx = *max_element(all(v));<br><br>    REPV(i, v)<br>      if (v[i]==mx)<br>        res.push_back(i);<br>        return res;<br>    }<br><br>};<br><br><br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>