<td class="problemText" colspan="8" valign="middle" align="left">
            using System; using System.Collections; using System.Text; using System.Text.RegularExpressions;<br>public class GridGame<br>   {<br>   public int winningMoves(string[] grid)<br>      {<br>      int mask=0;<br>      for (int i=0; i &lt; 4; i++) for (int j=0; j &lt; 4; j++) if (grid[j][i] == 'X')<br>         mask |= 1&lt;&lt;(i*4+j);<br>      return Win(mask);<br>      }<br>   int[] memo = new int[65536];<br>   int Win(int mask)<br>      {<br>      if (memo[mask] &gt; 0)<br>         return memo[mask]-1;<br>      int ct=0;<br>      for (int i=0; i &lt; 16; i++)<br>         if (Legal(i, mask))<br>            if (Win(mask | (1&lt;&lt;i)) == 0)<br>               ct++;<br>      memo[mask] = ct+1;<br>      return ct;<br>      }<br>   bool Legal(int i, int mask)<br>      {<br>      int x=i/4, y=i%4;<br>      if (F(x,y,mask) || F(x-1,y,mask) || F(x+1,y,mask) || F(x,y+1,mask) || F(x,y-1,mask))<br>         return false;<br>      return true;<br>      }<br>   bool F(int x, int y, int mask)<br>      {<br>      if (x&lt;0 || y&lt;0 || x&gt;3 || y&gt;3) return false;<br>      return TEST(mask, x*4+y);<br>      } <br><br><br>// Library begins here<br><br>static bool TEST  (int   x, int pos) { return (x&amp;(1&lt;&lt;pos))!=0; }<br><br>} // TopC#der<br><br><br>// Powered by FileEdit<br></td>