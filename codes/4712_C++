<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class GridGame {<br>public:<br>  int winningMoves(vector &lt;string&gt;);<br>};<br>#define REP(i,n) for(int i=0;i&lt;n;++i)<br> <br>int key(int a,int b) { return (1&lt;&lt;(a*4+b)); }<br>map&lt;int,int&gt; m;<br> <br>int go(int code) {<br>  if(m.count(code)) return m[code];<br>  int &amp;res=  m[code];<br>  REP(i,4) REP(j,4) REP(a,4) REP(b,4) <br>  if( code &amp; key(i,j) &amp;&amp; code &amp; key(a,b) ) <br>  if( abs(i-a)==1 &amp;&amp; !abs(j-b) || abs(i-a)==0 &amp;&amp; abs(j-b)==1) return res=1;<br>  REP(a,4) REP(b,4) if(! (code &amp; key(a,b))) if(!go(code | key(a,b))) return res=1;<br>  return res=0;<br>}<br>int GridGame::winningMoves(vector &lt;string&gt; grid) {<br>  int code=0,count=0;<br>  REP(a,4) REP(b,4) if(grid[a][b]=='X') code |= key(a,b);<br>  REP(a,4) REP(b,4) if(!(code &amp; key(a,b))) {<br>    if(!go(code | key(a,b))) ++count;<br>  }<br>  return count;<br>}<br></td>