<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cassert&gt;<br>#include &lt;numeric&gt;<br>#include &lt;algorithm&gt;<br> <br>using namespace std;<br> <br>typedef vector&lt;string&gt; vs;<br> <br>#define For(i,a,b) for(int i=(a); i&lt;=(b); i++)<br>#define Rep(i,n) for(int i=0; i&lt;(n); i++)<br>#define Size(x) (int(x.size()))<br>#define Fil(a) memset(&amp;a,0,sizeof(a))<br> <br>struct SuperString<br>{<br>  string goodnessSubstring(vs superstring)<br>  {<br>    string st,res;<br>    Rep(i,Size(superstring)) st+=superstring[i];<br>    res="";<br>    int best=0;<br>    Rep(i,Size(st))<br>    {<br>      int mx=0,pos=i-1;<br>      int cnt[26];<br>      Fil(cnt);<br>      int cur=0;<br>      For(j,i,Size(st)-1)<br>      {<br>        int k=st[j]-'A';<br>        ++cnt[k];<br>        if(cnt[k]==1) ++cur;<br>        else if(cnt[k]==2) --cur;<br>        if(cur&gt;mx)<br>        {<br>          mx=cur;<br>          pos=j;<br>        }<br>      }<br>      if(mx&lt;best) continue;<br>      string ss=st.substr(i,pos-i+1);<br>      if(mx&gt;best || mx==best &amp;&amp; ss&lt;res)<br>      {<br>        best=mx;<br>        res=ss;<br>      }<br>    }<br>    return res;<br>  }<br>};<br></td>