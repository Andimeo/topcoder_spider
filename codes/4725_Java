<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.regex.*;<br>import java.util.*;<br>public class Fuses {<br>  void reverse(int[] a, int f, int l) {<br>    while(l&gt;f) { int tmp = a[l]; a[l] = a[f]; a[f] = tmp; l--; f++; } }<br>  boolean next_permutation(int[] a) {<br>    if(a.length &lt; 2) return false; int i=a.length - 1;<br>    while(true) { i--; if(a[i] &lt; a[i+1]) { int j=a.length-1;<br>        while(!(a[i] &lt; a[j]))j--;int tmp=a[i];a[i]=a[j];a[j]=tmp;<br>        reverse(a, i+1, a.length-1); return true; }<br>      if(i==0) { reverse(a, 0, a.length-1); return false; } } }<br> <br>  public int minFuses(int[] amps) <br>  {<br>  int out= 100;<br>  Arrays.sort(amps);<br>  do<br>    {<br>    int tot=0;<br>    int used=0;<br>    for(int i=0;i&lt;amps.length;i++)<br>      {<br>      if(amps[i]+tot &gt; 20)<br>        {<br>        used++;<br>        tot=amps[i];<br>        }<br>      else<br>        tot+=amps[i];<br>      }<br>    if(tot &gt; 0)<br>      used++;<br> <br>    if(used &lt; out)<br>      out=used;<br>    }<br>  while(next_permutation(amps));<br> <br>  return out;<br>  }<br> <br>  //int dx[]={0,-1,0,1},dy[]={1,0,-1,0};<br>  //int dx[]={0,1,1,1,0,-1,-1,-1},dy[]={1, 1,0,-1,-1,-1,0,1};<br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>