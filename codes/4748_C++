<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;cstdio&gt;<br> <br>using namespace std;<br> <br>#define V(x) vector&lt;x&gt;<br>#define vi V(int)<br>#define vs V(string)<br>#define vd V(double)<br>#define fr(i,a,b) for((i)=(a);(i)&lt;(b);(i)++)<br>#define fo(i,n) fr(i,0,n)<br>#define fir(n) fo(i,n)<br>#define fjr(n) fo(j,n)<br>#define fkr(n) fo(k,n)<br>#define flr(n) fo(l,n)<br>#define fi fir(n)<br>#define fj fjr(n)<br>#define fk fkr(n)<br>#define fl flr(n)<br> <br>#define pb(x) push_back(x)<br>#define cs c_str()<br>#define sz size()<br>#define df double<br>#define ll long long<br> <br>int f[60][60];<br>int n,m;<br> <br>int cov[60][60];<br>int tag[60][60];<br>int sol[60][60];<br>int found;<br>int solh,soltop;<br> <br>int ok(int a, int b) { return a&gt;=0 &amp;&amp; a&lt;n &amp;&amp; b&gt;=0 &amp;&amp; b&lt;m; }<br>class AreaSplit { public: vs halfPattern(vs ff) {<br>int i,j,k,w,x,y;<br>n=ff.sz; m=ff[0].sz;<br>fi fjr(m) f[i][j]=ff[i][j]=='#';<br> <br>int left=m+1,right=-1;<br> <br>fi fjr(m) if(f[i][j]) { left&lt;?=j; right&gt;?=j; }<br> <br>for(w=1;w&lt;=m;w++) {<br>  x=right-(left+w-1);<br>  for(y=-50;y&lt;=50;y++) if(x || y&gt;0) {<br>    int top=50,bot=-1;<br>    fi fjr(m) cov[i][j]=tag[i][j]=0;<br>  <br>    for(j=0;j&lt;w;j++) {<br>      for(i=0;i&lt;n;i++) {<br>        if(f[i][left+j] &amp;&amp; !cov[i][left+j]) {<br>          if(!ok(i+y,left+j+x) || !f[i+y][left+j+x]) goto fail;<br>          tag[i][j]=1;<br>          cov[i][left+j]=1;<br>          cov[i+y][left+j+x]=1;<br>        }<br>      }<br>    }<br>    fi fjr(m) if(f[i][j] &amp;&amp; !cov[i][j]) goto fail;<br>    fi fjr(w) if(tag[i][j]) { top&lt;?=i; bot&gt;?=i; }<br>    <br>    if(!found || bot-top+1 &lt; solh) {<br>      solh=bot-top+1; soltop=top;<br>      found=1;<br>      fi fjr(m) sol[i][j]=tag[i][j];<br>    }<br>    fail:;<br>  }<br>  if(found) break;<br>}<br>if(!found) return vs(0);<br> <br>vs ret;<br>fir(solh) { string r; fjr(w) r+=sol[i+soltop][j]?string("#"):string("."); ret.pb(r); }<br>return ret;<br> <br>}};<br></td>