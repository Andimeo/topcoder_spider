<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class AreaSplit {<br>  public String[] halfPattern(String[] board) {<br>    int m = board.length;<br>    int n = board[0].length();<br>    String[] resultage = null;<br>    int rx = 100, ry = 100;<br>    <br>    for (int dx=0; dx&lt;m; dx++)<br>    for (int dy=-n+1; dy&lt;n; dy++) {<br>      if (dx==0 &amp;&amp; dy==0) continue;<br>      char[][] result = new char[m][n];<br>      for (int i=0; i&lt;m; i++) result[i] = board[i].toCharArray();<br>      for (int i=0; i&lt;m; i++)<br>      for (int j=0; j&lt;n; j++) {<br>        int i2 = i+dx;<br>        int j2 = j+dy;<br>        if (i2 &gt;= 0 &amp;&amp; j2 &gt;= 0 &amp;&amp; i2 &lt; m &amp;&amp; j2 &lt; n) {<br>          if (result[i][j]=='#' &amp;&amp; result[i2][j2]=='#') {<br>            result[i][j]='1';<br>            result[i2][j2]='2';<br>          }<br>        }<br>      }<br>      boolean bad = false;<br>      for (int i=0; i&lt;m&amp;&amp;!bad; i++)<br>      for (int j=0; j&lt;n&amp;&amp; !bad; j++) {<br>        if (result[i][j]=='#' ) bad = true;<br>      }<br>      if (bad) continue;<br>      int mx=m, Mx=-1, my=n, My=-1;<br>      for (int i=0; i&lt;m; i++)<br>      for (int j=0; j&lt;n; j++) {<br>        if (result[i][j]=='1' ) <br>        {<br>          mx = Math.min(mx, i);<br>          my = Math.min(my, j);<br>          Mx = Math.max(Mx, i);<br>          My = Math.max(My, j);<br>        }<br>      }<br>      char[][] res = new char[Mx-mx+1][My-my+1];<br>      for (int i=mx; i&lt;=Mx; i++)<br>      for (int j=my; j&lt;=My; j++)<br>      if (result[i][j]=='1') res[i-mx][j-my] = '#';<br>      else res[i-mx][j-my] = '.';<br>      String[] foo = new String[Mx-mx+1];<br>      for (int i=0; i&lt;Mx-mx+1; i++) foo[i] = new String(res[i]);<br>      //System.out.println(Arrays.deepToString(foo));<br>      if (resultage == null ||<br>      (My-my &lt; ry) ||<br>      (Mx-mx &lt; rx &amp;&amp; My-my == ry) ||<br>      (Mx-mx == rx &amp;&amp; My-my == ry &amp;&amp; Arrays.deepToString(foo).compareTo(Arrays.deepToString(resultage)) &lt;0)) {<br>        resultage = foo;<br>        rx = Mx-mx;<br>        ry = My-my;<br>      }<br>    }<br>    if (resultage == null)  return new String[0];<br>    return resultage;<br>  }<br>}<br> <br>// Powered by PopsEdit<br></td>