<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class PackingShapes {<br>    private double EPS = 1e-9;<br> <br>    public String[] tryToFit(int width, int height, String[] shapes) {<br>        String[] res = new String[shapes.length];<br>        for (int i = 0; i &lt; shapes.length; i++) {<br>            Scanner sc = new Scanner(shapes[i]);<br>            String shape = sc.next();<br>            if (shape.equals("RECTANGLE")) {<br>                int a = Math.max(width, height);<br>                int b = Math.min(width, height);<br>                int x = sc.nextInt();<br>                int y = sc.nextInt();<br>                if (x &lt; y) {<br>                    int t = x; x = y; y = t;<br>                }<br>                if (x &lt;= a &amp;&amp; y &lt;= b) {<br>                    res[i] = "YES";<br>                    continue;<br>                }<br>                int dc = a * a + b * b;<br>                int dr = x * x + y * y;<br>                if (dr &gt; dc) {<br>                    res[i] = "NO";<br>                    continue;<br>                }<br>                if (dr &lt;= b * b) {<br>                    res[i] = "YES";<br>                    continue;<br>                }<br>                double beta = Math.atan2(y, x);<br>                double alpha = Math.asin(b * 1.0 / Math.sqrt(dr));<br>                if (beta &gt; alpha + EPS) {<br>                    res[i] = "NO";<br>                    continue;<br>                }<br>                double l = x * Math.cos(alpha - beta) + y * Math.sin(alpha - beta);<br>                if (l &gt; a + EPS) {<br>                    res[i] = "NO";<br>                } else {<br>                    res[i] = "YES";<br>                }<br>            } else {<br>                int r = sc.nextInt();<br>                if (2 * r &gt; Math.min(width, height)) {<br>                    res[i] = "NO";<br>                } else {<br>                    res[i] = "YES";<br>                }<br>            }<br>        }<br>        return res;<br>    }<br> <br> <br>}<br> <br> <br>// Powered by PopsEdit<br> <br>// Powered by CodeProcessor<br></td>