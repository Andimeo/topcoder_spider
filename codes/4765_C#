<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br><br>public class SlowDigitalClock {<br>  int[] upside;<br><br>  private bool match(int h1, int m1, int h2, int m2)<br>  {<br>    if (upside[h2/10] != m1%10) return false;<br>    if (upside[h2%10] != m1/10) return false;<br>    if (upside[m2/10] != h1%10) return false;<br>    if (upside[m2%10] != h1/10) return false;<br>    return true;<br>  }<br><br>  public string firstCorrectTime(string currentTime, string clockTime, int secsPerMinute) {<br>    upside = new int[] { 0, 1, 2, -1, -2, 5, 9, -1, 8, 6};<br>    int h1 = int.Parse(currentTime.Substring(0,2));<br>    int m1 = int.Parse(currentTime.Substring(3));<br>    int h2 = int.Parse(clockTime.Substring(0,2));<br>    int m2 = int.Parse(clockTime.Substring(3));<br>    int days = 0;<br>    <br>    int s1 = 0, s2 = 0;<br>    while (days &lt; 2000)<br>    {<br>      if (match(h1,m1,h2,m2))<br>      {<br>        Console.WriteLine(days);<br>        return string.Format("{0:D2}:{1:D2}",h1,m1);<br>      }<br>      int n1 = 60-s1, n2 = secsPerMinute-s2;<br>      int n=Math.Min(n1,n2);<br>      m1 = m1+(s1+n)/60;<br>      m2 = m2+(s2+n)/secsPerMinute;<br>      days += (h1+m1/60)/24;<br>      h1 = (h1+m1/60)%24;<br>      m1 %= 60;<br>      h2 = (h2+m2/60)%24;<br>      m2 %= 60;<br>      s1 = (s1+n)%60;<br>      s2 = (s2+n)%secsPerMinute;<br>    }<br>    return "";<br>  }<br>}<br><br><br>// Powered by FileEdit<br></td>