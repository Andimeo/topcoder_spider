<td class="problemText" colspan="8" valign="middle" align="left">
            /* A solution by 1711st Very Imaginative Programmer :-) */<br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>using namespace std;<br><br>#define REP(var, hi) for (var = 0; var &lt; (hi); var++)<br>#define GETMIN(X, Y) ((X) &lt; (Y) ? (X) : (Y))<br>typedef vector &lt;int&gt; VI;<br>typedef vector &lt;string&gt; VS;<br><br>vector &lt;string&gt; split(const string&amp; s, const string&amp; delim = " ") { vector&lt;string&gt; res; string t; for ( unsigned int i = 0 ; i != s.size() ; i++ ) { if ( delim.find( s[i] ) != string::npos ) { if ( !t.empty() ) { res.push_back( t ); t = ""; } } else { t += s[i]; } } if ( !t.empty() ) { res.push_back(t); } return res; }<br>vector &lt;int&gt; splitInt(const string&amp; s, const string&amp; delim = " ") { vector &lt;string&gt; tok = split(s, delim); vector &lt;int&gt; res; for (unsigned int i = 0; i != tok.size(); i++) res.push_back( atoi( tok[i].c_str() ) ); return res; }<br><br>int val(int v)<br>{<br>  if (v == 6)<br>    return 9;<br>  if (v == 9)<br>    return 6;<br>  if (v == 3 || v == 4 || v == 7)<br>    return -1;<br>  return v;<br>}<br><br>/*______________________________________*/<br><br>int h, m, s, h1, m1, s1;<br>int uph, upm;<br><br>class SlowDigitalClock<br>{<br>public:<br>    /*______________________________________*/<br>  bool doit()<br>  {<br>    if (val(m1 % 10) == -1 ||<br>      val(m1 / 10) == -1 ||<br>      val(h1 % 10) == -1 ||<br>      val(h1 / 10) == -1 )<br>      return false;<br>    uph = val(m1 % 10) * 10 + val(m1 / 10);<br>    upm = val(h1 % 10) * 10 + val(h1 / 10);  <br>    return true;<br>  }<br>    /*______________________________________*/<br>    string firstCorrectTime(string currentTime, string clockTime, int secsPerMinute)<br>    {<br>    int i, k;<br><br>    VI tmp = splitInt(currentTime, ":");<br>    h = tmp[0];<br>    m = tmp[1];<br>    s = 0;<br><br>    VI tmp2 = splitInt(clockTime, ":");<br>    h1 = tmp2[0];<br>    m1 = tmp2[1];<br>    s1 = 0;<br><br>    string res = "??:??";<br><br>    REP(i, 6000000)<br>    {  <br>      if (doit())<br>      {        <br>        if (uph == h &amp;&amp; upm == m)<br>        {          <br>          res[0] = (h / 10) + '0';          res[1] = (h % 10) + '0';<br>          res[3] = (m / 10) + '0';          res[4] = (m % 10) + '0';<br>          return res;<br>        }<br>      }<br><br>      k = GETMIN(secsPerMinute - s1, 60 - s);<br><br>      s += k;<br>      m += (s / 60);        s = s % 60;<br>      h = (h + (m / 60)) % 24;  m = m % 60;<br>    <br>      s1 += k;<br>      m1 += s1 / secsPerMinute;<br>      s1 = s1 % secsPerMinute;<br>      h1 = (h1 + (m1 / 60)) % 24;<br>      m1 = m1 % 60;<br>    }  <br>    return "";<br>    }<br>    /*______________________________________*/<br>    <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>