<td class="problemText" colspan="8" valign="middle" align="left">
            Public Class SlowDigitalClock<br>        Public Function firstCorrectTime(ByVal currentTime As String, ByVal clockTime As String, ByVal secsPerMinute As Integer) As String<br>            Dim i, j, k, l As Long<br> <br>            Dim iRealHours, iRealMin, iRealSecs, iClockHours, iClockMin, iClockSecs As Integer<br> <br>            iRealHours = CInt(currentTime.Split(":")(0))<br>            iRealMin = CInt(currentTime.Split(":")(1))<br>            iClockHours = CInt(clockTime.Split(":")(0))<br>            iClockMin = CInt(clockTime.Split(":")(1))<br> <br>            Dim dt As System.DateTime = System.DateTime.Now<br>            Dim s1 As String, s2 As String<br>            Dim i1, i2 As Integer<br> <br>            Do While System.DateTime.Now.Subtract(dt).TotalMilliseconds &lt; 1900<br>                'i1 = iClockTime(iRealHours, iRealMin)<br>                'i2 = iConvertClockTime(iClockHours, iClockMin)<br> <br>                'If i1 = i2 Then Stop<br> <br>                If iClockTime(iRealHours, iRealMin) = iConvertClockTime(iClockHours, iClockMin) Then<br>                    'MsgBox(i1)<br>                    Return System.String.Format("{0:00}:{1:00}", iRealHours, iRealMin)<br>                End If<br> <br>                If secsPerMinute - iClockSecs &lt; 60 - iRealSecs Then<br>                    iRealSecs += secsPerMinute - iClockSecs<br>                    iClockMin += 1<br>                    iClockSecs = 0<br>                Else<br>                    iClockSecs += 60 - iRealSecs<br>                    iRealSecs = 0<br>                    iRealMin += 1<br>                End If<br> <br>                Do While iClockSecs &gt;= secsPerMinute<br>                    iClockSecs -= secsPerMinute<br>                    iClockMin += 1<br>                Loop<br> <br>                Do While iClockMin &gt;= 60<br>                    iClockMin -= 60<br>                    iClockHours += 1<br>                Loop<br> <br>                Do While iClockHours &gt;= 24<br>                    iClockHours -= 24<br>                Loop<br> <br>                Do While iRealSecs &gt;= 60<br>                    iRealSecs -= 60<br>                    iRealMin += 1<br>                Loop<br> <br>                Do While iRealMin &gt;= 60<br>                    iRealMin -= 60<br>                    iRealHours += 1<br>                Loop<br> <br>                Do While iRealHours &gt;= 24<br>                    iRealHours -= 24<br>                Loop<br>            Loop<br> <br>            Return ""<br> <br> <br>        End Function<br> <br>        Private Function iClockTime(ByRef iRealHours As Integer, ByRef iRealMin As Integer) As Integer<br>            Return iRealHours * 100 + iRealMin<br>        End Function<br> <br>        Private Function iConvertClockTime(ByRef iClockHours As Integer, ByRef iClockMins As Integer) As Integer<br>            Dim aClock(3) As Integer<br>            Dim i As Integer<br> <br>            aClock(0) = iClockMins Mod 10<br>            aClock(1) = iClockMins \ 10<br>            aClock(2) = iClockHours Mod 10<br>            aClock(3) = iClockHours \ 10<br> <br>            Dim aClockTurn(3) As Integer<br> <br>            For i = 0 To 3<br>                If aClock(i) = 1 Or aClock(i) = 2 Or aClock(i) = 5 Or aClock(i) = 8 Or aClock(i) = 0 Then aClockTurn(i) = aClock(i)<br>                If aClock(i) = 6 Then aClockTurn(i) = 9<br>                If aClock(i) = 9 Then aClockTurn(i) = 6<br>                If aClock(i) = 3 Or aClock(i) = 4 Or aClock(i) = 7 Then Return -1<br>            Next<br> <br>            Return aClock(0) * 1000 + aClock(1) * 100 + aClock(2) * 10 + aClock(3)<br> <br> <br>        End Function<br>    End Class<br></td>