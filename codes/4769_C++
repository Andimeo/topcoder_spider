<td class="problemText" colspan="8" valign="middle" align="left">
            // I think it is good to submit wrong solutions sometimes to give others challenging opportunities.<br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>typedef long double ld;<br>typedef vector&lt;int&gt; vi;<br><br>#define LS &lt;<br>#define Size(x) (int(x.size()))<br><br>// All macros with parameters "k,a,b" run the "k" variable in range [a,b)<br>#define FOR(k,a,b) for(typeof(a) k=(a); k LS (b); ++k)<br><br>#line 3 "Springs.cc"<br><br>vi pos, kks, maxx;<br><br>ld p0, p1;<br><br>ld torque, grav;<br><br>void calculate(ld x, ld y) {<br>  torque = 0;<br>  grav = 0;<br>  torque += (p1+p0)/2 * (p1-p0);<br>  grav   += (p1 - p0);<br>  FOR(k,0,Size(pos)) {<br>    ld xx = y + x * pos[k];<br>//  printf("At %d: %Lf\n", k, xx);<br>    ld force;<br>    if(xx &gt; maxx[k])<br>      force = 1e40;<br>    else<br>      force = kks[k] * xx + 1 / ((maxx[k] - xx) * (maxx[k] - xx));<br>    grav -= force;<br>    torque -= force * pos[k];<br>    }<br>  }<br>  <br>class Springs {<br>  public:<br>  vector &lt;double&gt; compression(vector &lt;int&gt; positions, vector &lt;int&gt; ks, vector &lt;int&gt; maxs) {<br>  <br>    pos = positions; kks = ks; maxx = maxs;<br>    // !FDI<br>    // y = y at <br>    int N = Size(positions);<br>    <br>    p0 = positions[0], p1 = positions[N-1];<br>    <br>    // y: -1000 up to +1000<br>    // x: -1000 up to +1000<br>    <br>    ld minx = -1000, maxx = +1000;<br>    <br>    ld miny, maxy;<br>    <br>    while(maxx-minx &gt; 1e-15) {<br>    miny = -1000, maxy = +1000;<br>      <br>      ld x = (minx + maxx) / 2;<br>      while(maxy - miny &gt; 1e-15) {<br>        ld y = (miny + maxy) / 2;<br>        calculate(x, y);<br>//      printf("At %Lf,%Lf: %Lf, %Lf\n", x,y, grav, torque);<br>        if(grav &gt; 0) {miny = y;} else {maxy = y;}<br>        }<br>      if(torque &lt; 0) {maxx = x;} else {minx = x;}<br>      }<br>    calculate(.10714, .6/.7);<br>    <br>    <br>    vector&lt;double&gt; res;<br>    FOR(k,0,Size(pos)) res.push_back(miny + minx * pos[k]);<br>    return res;<br>    }<br>  };<br><br><br>//     calculate(.10714, .6/.7);<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>