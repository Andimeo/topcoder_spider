<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cctype&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;utility&gt;<br>#include &lt;numeric&gt;<br>#include &lt;complex&gt;<br> <br>using namespace std;<br> <br>int gcd(int a, int b)<br>{<br>  if (a &lt; 0) a = -a;<br>  if (b &lt; 0) b = -b;<br>  int tmp;<br>  while (a != 0)<br>    {<br>      tmp = a;<br>      a = b % a;<br>      b = tmp;<br>    }<br>  return b;<br>}<br> <br>int best[201][201];<br> <br>int check(int a, int b)<br>{<br>  if (a &lt;= 0 || b &lt;= 0) return 0;<br>  int ans = 0;<br>  int half[201][201];<br>  for (int i = 0; i &lt;= a; i++)<br>    for (int j = 0; j &lt;= a; j++)<br>      {<br>  half[i][j] = 0;<br>  for (int k = 0; k &lt;= b; k++)<br>    half[i][j] &gt;?= best[a-i][k] + best[b-k][j];<br>      }<br>  for (int i = 0; i &lt;= a; i++)<br>    for (int j = 0; j &lt;= a; j++)<br>      ans &gt;?= half[i][j] + half[j][i];<br>  return ans;<br>}<br> <br>class ConvexHull {<br>  public:<br>  int intHull(int m, int n) {<br> <br>    for (int i = 0; i &lt;= 50; i++)<br>      for (int j = 1; j &lt;= 50; j++)<br>        if (gcd(i, j) == 1)<br>    {<br>      int nbest[201][201];<br>      for (int x = 0; x &lt; 201; x++)<br>        for (int y = 0; y &lt; 201; y++)<br>          nbest[x][y] = best[x][y];<br>      for (int k = 1; k*i &lt;= 200 &amp;&amp; k*j &lt;= 200; k++)<br>        {<br>          int dx = k*i, dy = k*j;<br>          for (int x = 200-dx; x &gt;= 0; x--)<br>      for (int y = 200-dy; y &gt;= 0; y--)<br>        nbest[x+dx][y+dy] &gt;?= best[x][y] + 1;<br>        }<br>      for (int x = 0; x &lt; 201; x++)<br>        for (int y = 0; y &lt; 201; y++)<br>          best[x][y] = nbest[x][y];<br>    }<br>    for (int j = 1; j &lt;= 200; j++)<br>      best[0][j] = 1;<br> <br>    //cout &lt;&lt; best[3][2] &lt;&lt; endl;<br>    //cout &lt;&lt; best[0][0] &lt;&lt; endl;<br>    <br>    int ans = 0;<br>    for (int a = m-5; a &lt;= m; a++)<br>      for (int b = n-5; b &lt;= n; b++)<br>        ans &gt;?= check(a, b);<br> <br>    return ans;<br>    <br>  }<br>};<br> <br> <br>// Powered by FileEdit<br></td>