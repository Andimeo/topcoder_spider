<td class="problemText" colspan="8" valign="middle" align="left">
            public class YahtzeeBestScore<br>  {<br>    int score(int[] hand, int type)<br>    {<br>      int sum = 0;<br>      for (int i = 1; i &lt; 7; i++)<br>        sum += hand[i] * i;<br> <br>      if (type == 0)<br>      {<br>        for (int i = 1; i &lt; 7; i++)<br>          if (hand[i] &gt;= 3)<br>            return sum;<br>      }<br>      else if (type == 1)<br>      {<br>        for (int i = 1; i &lt; 7; i++)<br>          if (hand[i] &gt;= 4)<br>            return sum;<br>      }<br>      else if (type == 2)<br>      {<br>        int[] sums = new int[7];<br>        for (int i = 0; i &lt; 7; i++)<br>          sums[i] = 0;<br> <br>        for (int i = 1; i &lt; 7; i++)<br>          sums[hand[i]]++;<br> <br>        if (sums[2] == 1 &amp;&amp; sums[3] == 1)<br>          return 25;<br>        if (sums[5] == 1)<br>          return 25;<br>      }<br>      else if (type == 3)<br>      {<br>        int last = 0, i;<br>        for (i = 1; i &lt; 7; i++)<br>          if (hand[i] == 0)<br>          {<br>            if (i - last - 1 &gt;= 4)<br>              return 30;<br>            last = i;<br>          }<br>        if (i - last - 1 &gt;= 4)<br>          return 30;<br>      }<br>      else if (type == 4)<br>      {<br>        int last = 0, i;<br>        for (i = 1; i &lt; 7; i++)<br>          if (hand[i] == 0)<br>          {<br>            if (i - last - 1 &gt;= 5)<br>              return 40;<br>            last = i;<br>          }<br>        if (i - last - 1 &gt;= 5)<br>          return 40;<br>      }<br>      else if (type == 5)<br>      {<br>        for (int i = 1; i &lt; 7; i++)<br>          if (hand[i] &gt;= 5)<br>            return 50;<br>      }<br>      else if (type == 6)<br>      {<br>        return sum;<br>      }<br>      return 0;<br>    }<br> <br>    bool[] busy = new bool[7];<br>    int[] perm = new int[7];<br>    int[][] handsmy = new int[7][];<br>    int bestsum = 0;<br> <br>    public void doit( int i )<br>    {<br>      if ( i == 7 )<br>      {<br>        // check sum.<br>        int sum = 0;<br>        for (int j = 0; j &lt; 7; j++)<br>          sum += score(handsmy[j], perm[j]);<br> <br>        if (sum &gt; bestsum)<br>          bestsum = sum;<br>      }<br>      else<br>        for ( int j = 0; j &lt; 7; j++ )<br>          if (!busy[j])<br>          {<br>            busy[j] = true;<br>            perm[j] = i;<br>            doit(i + 1);<br>            busy[j] = false;<br>          }<br>    }<br> <br> <br>    public int bestLowerScore(string[] hands)<br>    {<br>      for (int i = 0; i &lt; 7; i++)<br>      {<br>        handsmy[i] = new int[7];<br>        for (int j = 0; j &lt; 7; j++)<br>          handsmy[i][j] = 0;<br> <br>        for (int j = 0; j &lt; 5; j++)<br>          handsmy[i][System.Convert.ToInt32(hands[i][j]) - System.Convert.ToInt32('0')]++;<br>      }<br> <br>      for ( int i =0 ; i &lt; 7; i++ )<br>        busy[i] = false;<br> <br>      doit( 0 );<br> <br>      return bestsum;<br>    }<br>  }<br></td>