<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstring&gt;<br>#include &lt;functional&gt;<br>#include &lt;iostream.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;string&gt;<br>#include &lt;string.h&gt;<br>#include &lt;time.h&gt;<br>#include &lt;vector&gt;<br> <br> <br>#ifdef WIN32<br>  #define LL _int64<br>  #define SIC(s1, s2) stricmp(s1, s2)<br>#else<br>  #define LL long long<br>  #define SIC(s1, s2) strcasecmp(s1, s2)<br>#endif<br> <br>using namespace std;<br> <br> <br>class SandwichBar<br>{<br>  public:<br>  int whichOrder(vector &lt;string&gt; available, vector &lt;string&gt; orders)<br>  {<br>    char t[250];<br>    int r = -1;<br>    int i, j;<br>    char *pt;<br>    string s;<br> <br>    for (i = 0; i &lt; orders.size(); i++)<br>    {<br>      strcpy(t, orders[i].c_str());<br>      pt = strtok(t, " ");<br>      while (pt)<br>      {<br>        for (j = 0; j &lt; available.size(); j++)<br>        {<br>          s = pt;<br>          if (s == available[j])<br>            break;<br>        }<br>        if (j &gt;= available.size())<br>          break;<br>        pt = strtok(NULL, " ");<br>      }<br> <br>      if (pt == NULL)<br>        return i;<br>    }<br> <br>    return r;<br>  }<br>};<br></td>