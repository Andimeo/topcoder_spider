<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class BedroomFloor {<br>  public long numberOfSticks(int x1, int y1, int x2, int y2) {<br>        long[] am = getAm(x1, y1, x2, y2);<br>        long res = am[5];<br>        res += am[4];<br>        am[1] = Math.Max(0, am[1] - am[4]);<br>        long by = Math.Min(am[3], am[2]);<br>        res += by;<br>        am[3] -= by;<br>        am[2] -= by;<br>        res += am[3];<br>        am[1] = Math.Max(0, am[1] - 2 * am[3]);<br>        long cnt = am[2] / 2;<br>        res += cnt;<br>        am[2] -= 2 * cnt;<br>        am[1] = Math.Max(0, am[1] - cnt);<br>        if (am[2] &gt; 0)<br>        {<br>            res += am[2];<br>            am[1] = Math.Max(0, am[1] - 3 * am[2]);<br>        }<br>        res += (am[1] + 4) / 5;<br>        return res;<br>  }<br><br>    private long[] getAm(int x1, int y1, int x2, int y2)<br>    {<br>        if (x1 &gt;= 10)<br>        {<br>            int cnt = x1 / 10;<br>            return getAm(x1 - cnt * 10, y1, x2 - cnt * 10, y2);<br>        }<br>        if (y1 &gt;= 10)<br>        {<br>            int cnt = y1 / 10;<br>            return getAm(x1, y1 - cnt * 10, x2, y2 - cnt * 10);<br>        }<br>        int t1 = (x1 + 9) / 10;<br>        int t2 = x2 / 10;<br>        long[] res = new long[6];<br>        if (t2 &gt; t1 + 1)<br>        {<br>            int cnt = t2 - t1;<br>            long[] r1 = getAm(x1, y1, x2 - cnt * 10, y2);<br>            long[] r2 = getAm(0, y1, 10, y2);<br>            for (int i = 0; i &lt; 6; ++i)<br>                res[i] = r1[i] + r2[i] * cnt;<br>        }<br>        else<br>        {<br>            t1 = (y1 + 9) / 10;<br>            t2 = y2 / 10;<br>            if (t2 &gt; t1 + 1)<br>            {<br>                int cnt = t2 - t1;<br>                long[] r1 = getAm(x1, y1, x2, y2 - cnt * 10);<br>                long[] r2 = getAm(x1, 0, x2, 10);<br>                for (int i = 0; i &lt; 6; ++i)<br>                    res[i] = r1[i] + r2[i] * cnt;<br>            }<br>            else<br>            {<br>                int cnt = Math.Max(x2 / 10, y2 / 10) + 2;<br>                int[,] map = new int[cnt * 10, cnt * 10];<br>                int k = 0;<br>                for (int i = 0; i &lt; cnt * 2; ++i)<br>                    for (int j = 0; j &lt; cnt * 2; ++j)<br>                    {<br>                        for (int ii = 0; ii &lt; 5; ++ii)<br>                            for (int jj = 0; jj &lt; 5; ++jj)<br>                                map[i * 5 + ii, j * 5 + jj] = k + (((i + j) &amp; 1) == 0 ? jj : ii);<br>                        k += 5;<br>                    }<br>                int[] am = new int[k];<br>                for (int i = x1; i &lt; x2; ++i)<br>                    for (int j = y1; j &lt; y2; ++j)<br>                        ++am[map[i, j]];<br>                for (int i = 0; i &lt; k; ++i)<br>                    ++res[am[i]];<br>            }<br>        }<br>        return res;<br>    }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>