<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;stack&gt;<br>#include &lt;list&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iterator&gt;<br>#include &lt;cmath&gt;<br>#include &lt;numeric&gt;<br>using namespace std;<br><br>typedef long long LL;<br><br>const int K = 6;<br>LL potrzeba[K];<br><br>void dolicz(int x1,int x2,int h, int ile_razy, int poziom_y){<br>  if (h == 0) return;<br>  while (x1 &lt; x2){<br>    int o_ile = min(x2-x1,5-x1%5);<br>    if (x1 / 5 % 2 == poziom_y % 2){<br>      //poziome<br>      potrzeba[o_ile] += h * (LL)ile_razy;<br>    } else {<br>      //pionowe<br>      potrzeba[h] += o_ile * (LL)ile_razy;<br>    }<br>    x1 += o_ile;<br>  }<br>}<br><br>class BedroomFloor {<br>  public:<br>  long long numberOfSticks(int x1, int y1, int x2, int y2) {<br>    if (y1/5 == y2/5) dolicz(x1,x2,y2-y1, 1, y1/5);<br>    else{<br>      if (y1 % 5){<br>        dolicz(x1,x2,5 - (y1%5), 1, y1/5);<br>        y1 += 5-(y1%5);<br>      }<br>      if (y2 % 5){<br>        dolicz(x1,x2,y2%5, 1, y2/5);<br>        y2 -= y2%5;<br>      }<br><br>      int paski = (y2-y1) / 5;<br>      dolicz(x1,x2,5,(paski+1)/2,y1/5);<br>      dolicz(x1,x2,5,paski/2,y1/5+1);<br>    }<br><br>    LL res = potrzeba[5] + potrzeba[4] + potrzeba[3];<br>    potrzeba[1] = max(0LL, potrzeba[1] - potrzeba[4]);<br>    LL mam_dwojki = potrzeba[3];<br>    LL zabieram = min(mam_dwojki, potrzeba[2]);<br>    mam_dwojki -= zabieram;<br>    potrzeba[2] -= zabieram;<br><br>    LL mam_jedynki = 2 * mam_dwojki;<br><br>    if (potrzeba[2]){<br>      LL dwa_razy = potrzeba[2] / 2;<br>      res += dwa_razy;<br><br>      mam_jedynki += dwa_razy;<br>      potrzeba[2] -= 2 * dwa_razy;<br><br>      if (potrzeba[2]) res++, mam_jedynki += 3;<br>    }<br><br>    potrzeba[1] = max(0LL, potrzeba[1] - mam_jedynki);<br>    res += (potrzeba[1] + 4) / 5;<br><br>    return res;<br>  }<br>};<br><br><br>// Powered by FileEdit<br></td>