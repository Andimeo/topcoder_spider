<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>using namespace std;<br> <br>struct BinaryBoard {<br>  vector&lt;string&gt; result;<br>  vector&lt;string&gt; o;<br> <br>  void recurse(int i, int j) {<br>    result[i][j] = '0';<br>    for(int a = 0; a != 11; ++a)<br>      for(int b = a + 1; b != 12; ++b) {<br>  <br>      int n1 = 0, n2 = 0;<br>      for(int k = 0; k != 6; ++k) {<br>        n1 &lt;&lt;= 1;<br>        n2 &lt;&lt;= 1;<br>        if(o[a][0] == 'H') n1 |= (result[o[a][1] - '1'][k] == '1');<br>        else n1 |= (result[k][o[a][1] - '1'] == '1');<br>        if(o[b][0] == 'H') n2 |= (result[o[b][1] - '1'][k] != '0');<br>        else n2 |= (result[k][o[b][1] - '1'] != '0');<br>      }<br>      if(n1 &gt;= n2) goto noway;<br>    }<br>    if(i != 5) recurse(i + 1, j);<br>    else if(j != 5) recurse(0, j + 1);<br>    else throw 0;<br> <br>    noway:;<br>    result[i][j] = '1';<br>    for(int a = 0; a != 11; ++a)<br>      for(int b = a + 1; b != 12; ++b) {<br>  <br>      int n1 = 0, n2 = 0;<br>      for(int k = 0; k != 6; ++k) {<br>        n1 &lt;&lt;= 1;<br>        n2 &lt;&lt;= 1;<br>        if(o[a][0] == 'H') n1 |= (result[o[a][1] - '1'][k] == '1');<br>        else n1 |= (result[k][o[a][1] - '1'] == '1');<br>        if(o[b][0] == 'H') n2 |= (result[o[b][1] - '1'][k] != '0');<br>        else n2 |= (result[k][o[b][1] - '1'] != '0');<br>      }<br>      if(n1 &gt;= n2) goto noway2;<br>    }<br>    if(i != 5) recurse(i + 1, j);<br>    else if(j != 5) recurse(0, j + 1);<br>    else throw 0;<br> <br>    noway2:;<br>    result[i][j] = '.';<br>  }<br> <br>  vector&lt;string&gt; board(vector&lt;string&gt; order) {<br>    o.swap(order);<br>    result = vector&lt;string&gt;(6, string("......"));<br>    try {<br>      recurse(0, 0);<br>    }<br>    catch(int) {<br>    }<br>    return result;<br>  }<br>};<br></td>