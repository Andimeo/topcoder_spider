<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br> <br>using namespace std;<br> <br>int distshore(int shorex, int x, int y)<br>{<br>    return (shorex - x)*(shorex - x);<br>}<br> <br>int dist(int x1, int y1, int x2, int y2)<br>{<br>    return (x1-x2)*(x1-x2) + (y1-y2)*(y1-y2);<br>}<br> <br>int min(int a, int b)<br>{<br>    return a &lt; b ? a : b;<br>}<br> <br>int max(int a, int b)<br>{<br>    return a &gt; b ? a : b;<br>}<br> <br>class SwimmersDelight<br>{<br>public:<br>    int longestJump(const vector&lt;int&gt;&amp;x ,const vector&lt;int&gt;&amp; y)<br>    {<br>//s-&gt;0-&gt;1-&gt;s<br>        int d1 = max(distshore(0, x[0], y[0]), max(dist(x[0], y[0], x[1], y[1]), distshore(10, x[1], y[1])));<br>//s-&gt;1-&gt;0-&gt;s<br>        int d2 = max(distshore(0, x[1], y[1]), max(dist(x[1], y[1], x[0], y[0]), distshore(10, x[0], y[0])));<br>//s-&gt;0-&gt;s<br>        int d3 = max(distshore(0, x[0], y[0]), distshore(10, x[0], y[0]));<br>//s-&gt;1-&gt;s<br>        int d4 = max(distshore(0, x[1], y[1]), distshore(10, x[1], y[1]));<br> <br>        int res = min(d1, min(d2, min(d3, d4)));<br> <br>        return int(sqrt(double(res)) + 0.5);<br>    }<br>};<br></td>