<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.io.*;<br> <br>public class ThirstyGroup {<br>  PrintStream ut;<br>  int n;<br>  int[] caps;<br>  <br>  long drink(long T, int c) {<br>    long fill = (T-1)/(c+1)+1;<br>    return fill*c;<br>  }<br>  <br>  long tot(long T) {<br>    long t = 0;<br>    for (int c: caps) {<br>      t += drink(T,c);<br>    }<br>    return t;<br>  }<br>  long avail;<br> <br>  public int bestGlass(int availableWater, int[] capacities) {<br>    ut = System.out;<br>    long a = 0; long b = 200000000000l;<br>    caps = capacities;<br>    avail = availableWater;<br>    n = capacities.length;<br>    while (a&lt;b) {<br>      long c = (a+b)/2;<br>      long d = tot(c);<br>      if (d &lt; avail) {<br>        a = c+1;<br>      } else {<br>        b = c;<br>      }<br>    }<br>    long max = -1;<br>    int ind = 0;<br>    long[] A = new long[n];<br>    long T = a-1;<br>    if (T&gt;=0)<br>      for (int i = 0; i&lt;capacities.length; ++i) {<br>        int c = caps[i];<br>        long d = drink(T,c);<br>        A[i] += d;<br>        avail -= d;<br>      }<br>    ++T;<br>    print(T);<br>    print(A);<br>    for (int i=0; i&lt;n; ++i) {<br>      int c = caps[i];<br>      if ((((T-1)%(c+1))==0) || T==0) {<br>        long d = Math.min(avail,c);<br>        avail -= d;<br>        A[i] += d;<br>      }<br>    }<br>    print(A);<br>    for (int i=0; i&lt;n; ++i) {<br>      if (A[i]&gt;max) {<br>        max = A[i];<br>        ind = i;<br>      }<br>    }<br>    return ind;<br>  }<br> <br>  void print(Object... a) {<br>    for (Object o : a) { ut.print(o+" "); }<br>    ut.println();<br>  }<br>  void print(long... a) {<br>    for (long o : a) { ut.print(o+" "); }<br>    ut.println();<br>  }<br>}<br> <br>// Powered by PopsEdit<br></td>