<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>using namespace std;<br> <br>#define sz size()<br>#define ln length()<br>#define pb(a)push_back(a)<br>#define all(a)a.begin(),a.end()<br>#define NP(a)next_permutation(A(a))<br>#define F3(i,a,b)for(i=a;i&lt;b;++i)<br>#define F2(a,b)F3(i,a,b)<br>#define FV(v)F2(0,v.sz)<br>#define F(a)F2(0,a)<br> <br>class RegimentArming<br>{<br>  public:<br>  int chooseGuns(vector &lt;int&gt; counts, vector &lt;int&gt; powers, int N)<br>  {<br>    int i, w, j, cur, best=0;<br> <br>    for (i = 0; i &lt; counts.sz; ++i)<br>    {<br>      if (counts[i] &gt;= N)<br>        cur = N * powers[i];<br>      else<br>      {<br>        cur = counts[i] * powers[i];<br>        w = N - counts[i];<br>        j = i+1;<br> <br>        while (j &lt; counts.sz &amp;&amp; w)<br>        {<br>          if (counts[j] &gt;= w)<br>          {<br>            cur += w * powers[j];<br>            break;<br>          }<br>          else<br>          {<br>            cur += counts[j] * powers[j];<br>            w -= counts[j];<br>            j++;<br>          }<br>        }<br>      }<br> <br>      best &gt;?= cur;<br>    }<br> <br>    for (i = counts.sz-1; i&gt;=0; --i)<br>    {<br>      if (counts[i] &gt;= N)<br>        cur = N * powers[i];<br>      else<br>      {<br>        cur = counts[i] * powers[i];<br>        w = N - counts[i];<br>        j = i-1;<br> <br>        while (j&gt;=0 &amp;&amp; w)<br>        {<br>          if (counts[j] &gt;= w)<br>          {<br>            cur += w * powers[j];<br>            break;<br>          }<br>          else<br>          {<br>            cur += counts[j] * powers[j];<br>            w -= counts[j];<br>            j--;<br>          }<br>        }<br>      }<br> <br>      best &gt;?= cur;<br>    }<br> <br>    return best;<br>  }<br>};<br></td>