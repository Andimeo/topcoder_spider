<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br><br>using namespace std;<br><br><br>typedef long long llint;<br><br>int n, m;<br>string s;<br><br>llint memo[1&lt;&lt;15][50];<br><br>class DivisiblePermutations { <br>   public: <br><br>   llint rec( int r, int mask, int k ) {<br>      if( k == n ) return r == 0;<br>      <br>      llint &amp; ret = memo[mask][r];<br>      if( ret &gt;= 0 ) return ret;<br><br>      ret = 0;<br>      <br>      for( int i = 0; i &lt; n; ++i ) {<br>         if( (mask &gt;&gt; i)&amp;1 ) continue;<br>         if( i &gt; 0 &amp;&amp; s[i] == s[i-1] &amp;&amp; ((mask &gt;&gt; (i-1))&amp;1)==0 ) continue;<br>         ret += rec( (r*10 + s[i]-'0')%m, mask | (1&lt;&lt;i), k+1 );<br>      }<br><br>      return ret;<br>   }<br><br>   llint count(string N, int M) { <br>      s = N;<br>      n = s.size();<br>      m = M;<br>      sort( s.begin(), s.end() ); <br>      <br>      memset( memo, -1, sizeof memo );<br>      return rec( 0, 0, 0 );<br>   } <br><br><br><br><br><br>   <br><br>}; <br><br><br><br>// Powered by FileEdit<br>// Powered by moj 3.0 beta 7 [modified TZTester]<br>// Powered by CodeProcessor<br></td>