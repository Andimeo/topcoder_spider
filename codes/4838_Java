<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class DivisiblePermutations {<br> <br>  int n, n2, m;<br>  char[] digits;<br>  long[][] dp;<br> <br>  public long count(String N, int M) {<br>    digits = N.toCharArray();<br>    Arrays.sort(digits);<br>    n = digits.length;<br>    m = M;<br>    n2 = 1 &lt;&lt; n;<br> <br>    dp = new long[n2][m];<br>    dp[0][0] = 1;<br>    for (int mask = 0; mask &lt; n2; ++mask)<br>      for (int mod = 0; mod &lt; m; ++mod) {<br>        int last = -1;<br>        for (int i = 0; i &lt; n; ++i) {<br>          if ((mask &amp; (1&lt;&lt;i)) != 0) continue;<br>          int cur = digits[i] - '0';<br>          if (cur == last) continue;<br>          dp[mask ^ (1&lt;&lt;i)][(mod*10+cur) % m] += dp[mask][mod];<br>          last = cur;<br>        }<br>      }<br> <br>    return dp[n2 - 1][0];<br>  }<br>}<br></td>