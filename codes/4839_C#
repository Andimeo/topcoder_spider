<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class RingImposition {<br>  static int size;<br><br>  class Matrix<br>  {<br>    public int[,] a;<br><br>    public Matrix()<br>    {<br>      a = new int[size, size];<br>    }<br><br>    public static Matrix Multiply(Matrix a, Matrix b)<br>    {<br>      Matrix c = new Matrix();<br><br>      for (int i = 0; i &lt; size; ++i)<br>        for (int j = 0; j &lt; size; ++j)<br>          for (int k = 0; k &lt; size; ++k)<br>            c.a[i, j] = (c.a[i, j] + a.a[i, k] * b.a[k, j]) % 100;<br><br>      return c;<br>    }<br><br>    public static Matrix Unity()<br>    {<br>      Matrix a = new Matrix();<br><br>      for (int i = 0; i &lt; size; ++i)<br>        a.a[i, i] = 1;<br>      return a;<br>    }<br><br>    public Matrix power(int n)<br>    {<br>      Matrix r = Unity();<br>      Matrix a = this;<br><br>      while (n &gt; 0)<br>      {<br>        if (n % 2 != 0)<br>          r = Multiply(r, a);<br><br>        n /= 2;<br>        a = Multiply(a, a);<br>      }<br><br>      return r;<br>    }<br>  }<br><br>  public int[] predict(int[] seq, int N) {<br>    size = seq.Length;<br>    Matrix m = new Matrix();<br>    for (int i = 0; i &lt; size; ++i)<br>    {<br>      m.a[i, i] = 1;<br>      m.a[i, (i + 1) % size] = 1;<br>    }<br>    m = m.power(N);<br>    int[] res = new int[size];<br>    for (int i = 0; i &lt; size; ++i)<br>      for (int j = 0; j &lt; size; ++j)<br>        res[i] = (res[i] + m.a[i, j] * seq[j]) % 100;<br><br>    return res;<br>  }<br>  <br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>