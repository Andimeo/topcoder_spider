<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cassert&gt;<br>#include &lt;numeric&gt;<br>#include &lt;algorithm&gt;<br> <br>using namespace std;<br> <br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;vi&gt; vvi;<br> <br>#define For(i,a,b) for(int i=(a); i&lt;=(b); i++)<br>#define Rep(i,n) for(int i=0; i&lt;(n); i++)<br>#define Size(x) (int(x.size()))<br>#define Ford(i,a,b) for(int i=(a); i&gt;=(b); i--)<br>#define Repd(i,n) for(int i=(n)-1; i&gt;=0; i--)<br> <br>vvi mult(vvi a,vvi b)<br>{<br>  int n=Size(a);<br>  int k=Size(a[0]);<br>  int m=Size(b);<br>  vvi res(n,vi(m,0));<br>  Rep(i,n) Rep(j,m)<br>  {<br>    res[i][j]=0;<br>    Rep(t,k) res[i][j]=(res[i][j]+a[i][t]*b[t][j])%100;<br>  }<br>  return res;<br>}<br> <br>struct RingImposition<br>{<br>  vi predict(vi seq,int n)<br>  {<br>    int k=Size(seq);<br>    vvi a(k,vi(k,0)),b(k,vi(k,0));<br>    Rep(i,k) a[i][i]=1;<br>    Rep(i,k)<br>    {<br>      b[i][i]=1;<br>      b[i][(i+1)%k]=1;<br>    }<br>    while(n&gt;0)<br>    {<br>      if(n&amp;1) a=mult(a,b);<br>      n&gt;&gt;=1;<br>      b=mult(b,b);<br>    }<br>    vi res(k,0);<br>    Rep(i,k)<br>    {<br>      res[i]=0;<br>      Rep(j,k) res[i]=(res[i]+a[i][j]*seq[j])%100;<br>    }<br>    return res;<br>  }<br>};<br></td>