<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class Smooshing<br>{<br>  public int savings(String[] program)<br>  {<br>    String all = "";<br>    for (int i =0; i&lt;program.length; i++)<br>      all += program[i] + "\n";<br>    int len = all.length();<br>    String[] ids = all.split("[^a-zA-Z]+");<br>    ArrayList&lt;Thing&gt; counts = new ArrayList&lt;Thing&gt;();<br>    for (int i=0; i&lt;ids.length; i++)<br>      if (ids[i].length() &gt; 0 &amp;&amp; ids[i].charAt(0) &gt;= 'A' &amp;&amp; ids[i].charAt(0) &lt;= 'Z')<br>      {<br>        boolean found = false;<br>        for (int j=0; j&lt;counts.size() &amp;&amp; !found; j++)<br>          if (counts.get(j).s.equals(ids[i]))<br>          {<br>            found = true;<br>            counts.get(j).count ++;<br>          }<br>        if (!found)<br>          counts.add(new Thing(ids[i]));<br>      }<br>    Collections.sort(counts);<br>    Set&lt;String&gt; usedIDs = new HashSet&lt;String&gt;();<br>    int savings = 0;<br>    for (int i=0; i&lt;counts.size(); i++)<br>    {<br>      String oldid = counts.get(i).s;<br>      String newid = oldid.substring(0, 1);<br>      while (usedIDs.contains(newid))<br>        newid += oldid.charAt(newid.length()%oldid.length());<br>      usedIDs.add(newid);<br>      counts.get(i).sub = newid;<br>      savings += (oldid.length()-newid.length())*counts.get(i).count;<br>    }<br>    return savings;<br>  }<br>  <br>  class Thing implements Comparable&lt;Thing&gt;<br>  {<br>    int count;<br>    String s;<br>    String sub;<br>    <br>    Thing(String s)<br>    {<br>      this.s = s;<br>      count = 1;<br>    }<br>    <br>    public int compareTo(Thing other)<br>    {<br>      return other.count - count;<br>    }<br>  }<br>  <br>  <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>