<td class="problemText" colspan="8" valign="middle" align="left">
            imports System<br>imports Microsoft.VisualBasic<br>imports System.Collections<br>imports System.Text<br> <br> <br>Public Class Smooshing<br> <br>    Dim original As New ArrayList<br>    Dim count As New ArrayList<br>    Dim place As New ArrayList<br> <br>    Public Function savings(ByVal program() As String) As Integer<br>        Dim sAll As String<br>        Dim i As Integer<br>        sAll = ""<br>        For i = 0 To program.Length - 1<br>            sAll = sAll &amp; program(i) &amp; "~"<br>        Next<br>        sAll = sAll &amp; "~"<br>        FindIDS(sAll)<br> <br>        Dim i1 As Integer, i2 As Integer<br>        For i1 = 0 To original.Count - 2<br>            For i2 = i1 To original.Count - 1<br>                If count(i1) &lt; count(i2) Then<br>                    doswap(i1, i2)<br>                ElseIf count(i1) = count(i2) Then<br>                    If place(i1) &gt; place(i2) Then<br>                        doswap(i1, i2)<br>                    End If<br>                End If<br>            Next<br>        Next<br> <br>        Dim sTry As String, iLen As Integer, sMany As String<br>        Dim bBad As Boolean<br>        Dim iShaved As Integer<br>        Dim iTotal As Integer<br> <br>        For i1 = 0 To original.Count - 1<br>            sMany = original(i1)<br>            While Len(sMany) &lt; 5000<br>                sMany = sMany &amp; sMany<br>            End While<br> <br>            For iLen = 1 To 5000<br>                sTry = Left(sMany, iLen)<br>                bBad = False<br>                For i2 = 0 To i1 - 1<br>                    If original(i2) = sTry Then<br>                        bBad = True<br>                    End If<br>                Next<br>                If Not bBad Then<br>                    iShaved = Len(original(i1)) - Len(sTry)<br>                    iTotal = iTotal + iShaved * count(i1)<br>                    original(i1) = sTry<br>                    Exit For<br>                End If<br>            Next<br>        Next<br> <br>        Return iTotal<br> <br>    End Function<br> <br>    Private Sub DoSwap(ByVal i1 As Integer, ByVal i2 As Integer)<br>        Dim ss As String, ns As Integer<br> <br>        ss = original(i1)<br>        original(i1) = original(i2)<br>        original(i2) = ss<br> <br>        ns = place(i1)<br>        place(i1) = place(i2)<br>        place(i2) = ns<br> <br>        ns = count(i1)<br>        count(i1) = count(i2)<br>        count(i2) = ns<br> <br>    End Sub<br> <br>    Private Sub FindIDS(ByVal s As String)<br>        Dim i As Integer<br>        Dim c As String<br>        Dim sb As String<br>        Dim ii As Integer<br>        Dim iPlace As Integer<br> <br>        iPlace = 0<br>        sb = ""<br>        For i = 0 To s.Length - 1<br>            c = s.Chars(i)<br>            If UCase(c) &gt;= "A" And UCase(c) &lt;= "Z" Then<br>                sb = sb &amp; c<br>            ElseIf Len(sb) &gt; 0 Then<br>                If Left(sb, 1) = UCase(Left(sb, 1)) Then<br>                    ii = original.IndexOf(sb)<br>                    If ii = -1 Then<br>                        iPlace = iPlace + 1<br>                        original.Add(sb)<br>                        count.Add(1)<br>                        place.Add(iPlace)<br>                    Else<br>                        count(ii) = count(ii) + 1<br>                    End If<br>                End If<br>                sb = ""<br>            End If<br>        Next<br> <br> <br>    End Sub<br> <br>End Class<br></td>