<td class="problemText" colspan="8" valign="middle" align="left">
            imports System<br>imports Microsoft.VisualBasic<br>imports System.Collections<br>imports System.Text<br> <br> <br>Public Class JumpyNum<br> <br>    Dim po10(11) As Long<br> <br> <br>    Public Function howMany(ByVal low As Integer, ByVal high As Integer) As Integer<br>        Dim memo(10) As Integer<br>        memo(0) = 21514<br>        memo(1) = 18857<br>        memo(2) = 19184<br>        memo(3) = 19142<br>        memo(4) = 19146<br>        memo(5) = 19146<br>        memo(6) = 19142<br>        memo(7) = 19184<br>        memo(8) = 18857<br>        memo(9) = 21514<br> <br>        Dim iNext As Integer<br>        Dim iPrev As Integer<br>        iNext = low - (low Mod 100000) + 100000<br>        iPrev = high - (high Mod 100000)<br> <br>        Dim i As Integer<br>        Dim iRet As Integer<br> <br>        For i = 0 To 11<br>            po10(i) = 10 ^ i<br>        Next<br> <br>        If iNext &gt;= iPrev - 1 Then<br>            For i = low To high<br>                If isJumpy(i) Then iRet = iRet + 1<br>            Next<br>            Return iRet<br>        End If<br>        iRet = 0<br> <br>        For i = low To iNext<br>            If isJumpy(i) Then iRet = iRet + 1<br>        Next<br>        For i = iPrev To high<br>            If isJumpy(i) Then iRet = iRet + 1<br>        Next<br> <br>        Dim di As Integer<br>        For i = iNext To iPrev - 1 Step 100000<br>            di = i \ 100000<br>            If isJumpy(di) Then<br>                iRet = iRet + memo(di Mod 10)<br>            End If<br>        Next<br> <br>        Return iRet<br>    End Function<br> <br>    Private Function isJumpy(ByVal i As Long) As Boolean<br>        Dim iD As Long<br>        Dim iDig As Long<br>        Dim bReal As Boolean<br>        Dim iL As Long<br>        iL = 0<br> <br>        For iDig = 11 To 0 Step -1<br>            iD = i \ po10(iDig)<br>            i = i - iD * po10(iDig)<br>            If bReal Then<br>                If Not (iD &gt; iL + 1 Or iD &lt; iL - 1) Then Return False<br>            ElseIf iD &lt;&gt; 0 Then<br>                bReal = True<br>            End If<br>            iL = iD<br>        Next<br> <br>        Return True<br>    End Function<br> <br>End Class<br></td>