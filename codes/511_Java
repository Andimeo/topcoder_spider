<td class="problemText" colspan="8" valign="middle" align="left">
            // Signature: String[] calculate(String[] A, String[] B, String[] C, String equation)<br>import java.util.*;<br>public class MatArith {<br>    long[][] add( long[][] a, long[][] b ) {<br>        if (a.length != b.length) return null;<br>        if (a[0].length != b[0].length) return null;<br>        long[][] res = new long[a.length][a[0].length];<br>        for (int i=0;i&lt;a.length;i++)<br>            for (int j=0;j&lt;a[0].length;j++)<br>                res[i][j] = a[i][j] + b[i][j];<br>        return check(res);<br>    }<br><br>    long[][] mult( long[][] a, long[][] b ) {<br>        if (a[0].length != b.length) return null;<br>        int m = a[0].length;<br>        long[][] res = new long[a.length][b[0].length];<br>        for (int i=0;i&lt;a.length;i++)<br>            for (int j=0;j&lt;b[0].length;j++) {<br>                for (int k=0;k&lt;m;k++)<br>                    res[i][j] += a[i][k] * b[k][j];<br>            }<br><br>        return check(res);<br>    }<br>    long[][] cvt( String[] s ) {<br>        int rows = s.length;<br>        int cols = new StringTokenizer(s[0], " ").countTokens();<br>        long[][] res = new long[rows][cols];<br>        for (int i=0;i&lt;rows;i++) {<br>            StringTokenizer st = new StringTokenizer(s[i], " ");<br>            for (int j=0;j&lt;cols;j++) {<br>                res[i][j] = Integer.parseInt( st.nextToken() );<br>            }<br>        }<br>        return res;<br>    }<br>    long[][] check( long[][] x) {<br>        for (int i=0;i&lt;x.length;i++)<br>            for (int j=0;j&lt;x[0].length;j++) {<br>                if (x[i][j] &gt; Integer.MAX_VALUE || x[i][j] &lt; Integer.MIN_VALUE) return null;<br>            }<br>        return x;<br>    }<br><br>    long[][][] ands = new long[1000][][];<br>    int nands=0;<br>    char[] ops = new char[100];<br>    int nops=0;<br>    boolean reduce() {<br>        if (nands &lt; 2) System.out.println("TOO FEW ANDS");<br>        long[][] res;<br>        if (ops[--nops] == '+')<br>            res = add(ands[nands-2], ands[nands-1]);<br>        else<br>            res = mult(ands[nands-2], ands[nands-1]);<br>        nands -= 2;<br>        if (res == null)<br>            return false;<br>        ands[nands++] = res;<br>        return true;<br>    }<br>    public String[] calculate(String[] A, String[] B, String[] C, String equation) {<br>        long[][] a,b,c;<br>        a = cvt(A); b = cvt(B); c=cvt(C);<br>        for (int i=0;i&lt;equation.length();i++) {<br>            char t = equation.charAt(i);<br>            if (t=='A')<br>                ands[nands++] = a;<br>            else if (t=='B')<br>                ands[nands++] = b;<br>            else if (t=='C')<br>                ands[nands++] = c;<br>            else {<br>                while (nops &gt; 0 &amp;&amp; (ops[nops-1] == '*' || t=='+'))<br>                    if (!reduce()) return new String[0];<br>                ops[nops++] = t;<br>            }<br>        }<br>        while (nops &gt; 0)<br>            if (!reduce()) return new String[0];<br>        if (nands != 1) System.out.println("ERROR!");<br>        long[][] res = ands[0];<br>        String[] sr = new String[res.length];<br>        for (int i=0;i&lt;res.length;i++) {<br>            String row = "";<br>            for (int j=0;j&lt;res[0].length;j++) {<br>                if (row.length() &gt; 0) row += " ";<br>                row += res[i][j];<br>            }<br>            sr[i] = row;<br>        }<br>        return sr;<br>    }<br>    public static void main(String[] args) {<br>        /*<br>        MatArith temp = new MatArith();<br>        System.out.println(temp.calculate(String[] A, String[] B, String[] C, String equation));<br>        */<br>    }<br>    //BEGIN HELPERS<br>    static String str( String[] x ) { StringBuffer r= new StringBuffer(')'); for (int i=0;i&lt;x.length;i++) r.append(x[i]).append(' '); return r.append(')').toString(); }<br>    //END HELPERS<br>}<br></td>