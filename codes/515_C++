<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br> <br>#define REP(i,n) for(int i=0;i&lt;(n);++i)<br>#define FOR(i,a,b) for(int i=(a);i&lt;=(b);++i)<br>#define FORD(i,a,b) for(int i=(a);i&gt;=(b);--i)<br>#define FOREACH(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();++i)<br>typedef long long LL;<br>const int INF = 1000000000;<br>typedef vector&lt;int&gt; VI;<br>template&lt;class T&gt; inline int size(const T&amp;c) { return c.size(); }<br> <br>char buf1[1000];<br> <br>string i2s(int x) {<br>  sprintf(buf1,"%d",x);<br>  return buf1;<br>}<br> <br>const int MAX = 53;<br> <br>int sx,sy;<br>char board[MAX+2][MAX+2];<br>bool vis[MAX+2][MAX+2];<br>int kolej[128];<br>int score;<br> <br>int cGroup(int x,int y,char c) {<br>  if(vis[x][y] || board[x][y]!=c) return 0;<br>  vis[x][y]=true;<br>  int v=1;<br>  v+=cGroup(x+1,y,c);<br>  v+=cGroup(x-1,y,c);<br>  v+=cGroup(x,y+1,c);<br>  v+=cGroup(x,y-1,c);<br>  return v;<br>}<br> <br>void delGroup(int x,int y,char c) {<br>  if(board[x][y]!=c) return;<br>  board[x][y]=' ';<br>  delGroup(x+1,y,c);<br>  delGroup(x-1,y,c);<br>  delGroup(x,y-1,c);<br>  delGroup(x,y+1,c);<br>}<br> <br>void move() {<br>  FOR(x,1,sx) {<br>    int p=sy;<br>    FORD(y,sy,1) {<br>      char c=board[x][y];<br>      if(c!=' ') { board[x][y]=' '; board[x][p--]=c;}<br>    }<br>  }<br>  int q=1;<br>  FOR(x,1,sx) {<br>    if(board[x][sy]!=' ') {<br>      if(q!=x) {<br>        FOR(y,1,sy) { board[q][y]=board[x][y]; board[x][y]=' '; }<br>      }<br>      ++q;<br>    }<br>  }<br>}<br> <br>bool rounda() {<br>  FOR(y,1,sy) FOR(x,1,sx) vis[x][y]=false;<br>  int bx=-1,by=-1;<br>  int bk=INF, bg=INF;<br>  FOR(y,1,sy) FOR(x,1,sx) if(board[x][y]!=' ' &amp;&amp; !vis[x][y]) {<br>    char c=board[x][y];<br>    int k=kolej[c];<br>    int g=cGroup(x,y,c);<br>    if(g&gt;1 &amp;&amp; (k&lt;bk || k==bk &amp;&amp; g&lt;bg)) { bx=x; by=y; bk=k; bg=g; }<br>  }<br>  if(bx==-1) return false;<br>  score += bg*(bg-1)/2;<br>  delGroup(bx,by,board[bx][by]);<br>  move();<br>  return true;<br>}<br> <br>struct SameGame {<br>  // MAIN<br>  int getScore(vector &lt;string&gt; bbb, string order) {<br>    REP(i,MAX) REP(j,MAX) board[i][j]=' ';<br>    REP(i,size(order)) kolej[order[i]]=i;<br>    sy = size(bbb); sx = size(bbb[0]);<br>    FOR(y,1,sy) FOR(x,1,sx) board[x][y] = bbb[y-1][x-1];<br>    score=0;<br>    while(rounda()) ;<br>    if(board[1][sy]==' ') score*=4;<br>    return score;<br>  }<br>  <br> <br> <br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>