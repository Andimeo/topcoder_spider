<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;queue&gt;<br>#include &lt;math.h&gt;<br>#include &lt;iostream&gt;<br>using namespace std;<br> <br>vector&lt;int&gt; parse(string s) {<br>  string d = " ;,";<br>  vector&lt;int&gt; ret;<br>  char buf[20000];<br>  strcpy(buf, s.c_str());<br>  char* p = strtok(buf, d.c_str());<br>  while (p) {<br>    ret.push_back(atoi(p));<br>    p = strtok(0, d.c_str());<br>  }<br>  return ret;<br>}<br> <br>int m[64][64];<br> <br>class TopPilot {<br>  public:<br>  int addFlights(vector&lt;string&gt; w) {<br>    int ret = 0;<br>    memset(m, 0x10, sizeof(m));<br>    int i, j, k;<br>    for (i = 0; i &lt; w.size(); i++) {<br>      vector&lt;int&gt; v = parse(w[i]);<br>      for (k = 0; k &lt; v.size(); k++) {<br>        m[i][v[k]] = 0;  <br>        //ret--;<br>      }<br>    }<br>    for (k = 0; k &lt; 51; k++) {<br>    for (i = 0; i &lt; 51; i++) {<br>    for (j = 0; j &lt; 51; j++) {<br>      if (m[i][k] + m[k][j] &gt;= m[i][j]) continue;<br>      m[i][j] = m[i][k] + m[k][j];<br>    }<br>    }<br>  }<br>  <br>    for (i = 0; i &lt; 51; i++) {<br>      for (j = 0; j &lt; 51; j++) {<br>        if (i == j) continue;<br>        if (m[i][j] == 0) ret++;<br>      }<br>    }<br>    <br>    return ret;<br>    <br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>