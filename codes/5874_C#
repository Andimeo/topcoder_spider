<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br><br>public class SwapSorter {<br>  Hashtable all = new Hashtable();<br>  public int maximizeSwaps(int[] arrayData) {<br>    int[] tmp = new int[arrayData.Length];<br>    arrayData.CopyTo(tmp, 0);<br>    Array.Sort(tmp);<br>    int id = 0;<br><br>    for (int i = 0; i &lt; tmp.Length; ++i)<br>    {<br>      if (i &gt; 0 &amp;&amp; tmp[i] &gt; tmp[i - 1])<br>        ++id;<br>      all[tmp[i]] = id;<br>    }<br><br>    for (int i = 0; i &lt; arrayData.Length; ++i)<br>      arrayData[i] = (int) all[arrayData[i]];<br><br>    return doIt(arrayData);<br>  }<br><br>  private int doIt (int[] data)<br>  {<br>    int[] tmp = new int[data.Length];<br>    data.CopyTo(tmp, 0);<br>    Array.Sort(tmp);<br>    int[] am = new int[50];<br>    bool[,] conn = new bool[50, 50];<br>    for (int i = 0; i &lt; 50; ++i)<br>      conn[i, i] = true;<br>    for (int i = 0; i &lt; data.Length; ++i)<br>      if (data[i] != tmp[i]) <br>      {<br>        ++am[data[i]];<br>        conn[data[i], tmp[i]] = true;<br>        conn[tmp[i], data[i]] = true;<br>      }<br><br>    for (int k = 0; k &lt; 50; ++k)<br>      for (int i = 0; i &lt; 50; ++i)<br>        for (int j = 0; j &lt; 50; ++j)<br>          if (conn[i, k] &amp;&amp; conn[k, j])<br>            conn[i, j] = true;<br><br>    bool[] mark = new bool[50];<br>    int res = 0;<br>    for (int i = 0; i &lt; 50; ++i)<br>    {<br>      if (!mark[i] &amp;&amp; am[i] &gt; 0)<br>      {<br>        int sum = 0;<br>        int cnt = 0;<br>        for (int j = 0; j &lt; 50; ++j)<br>          if (conn[i, j])<br>          {<br>            mark[j] = true;<br>            sum += am[j];<br>            ++cnt;<br>          }<br><br>        if (cnt == 2)<br>          res += sum / 2;<br>        else<br>          res += sum - 1;<br>      }<br>    }<br>    return res;<br>  }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>