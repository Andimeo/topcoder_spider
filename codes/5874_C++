<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;string&gt;<br>#include &lt;cmath&gt;<br>#include &lt;vector&gt;<br>#include &lt;complex&gt;<br>#include &lt;valarray&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br> <br>using namespace std;<br> <br>class SwapSorter<br>{<br>public:<br>    int n,A[51],list[51],finish[51];<br>    void solve()<br>    {<br>        for (int i=1;i&lt;=n;i++)<br>        {<br>            int u=rand()%n+1;<br>            int v=rand()%n+1;<br>            swap(list[u],list[v]);<br>        }    <br>    }    <br>    int maximizeSwaps(vector &lt;int&gt; Data)<br>    {<br>        srand(1028);<br>        n=Data.size();<br>        for (int i=1;i&lt;=n;i++)<br>            finish[i]=Data[i-1];<br>        for (int i=1;i&lt;=n;i++)<br>            for (int j=i+1;j&lt;=n;j++)<br>                if (finish[j]&lt;finish[i])<br>                    swap(finish[i],finish[j]);<br>        int result=0;<br>        for (int i=1;i&lt;=n;i++)<br>            list[i]=i;<br>        for (int Time=0;Time&lt;20;Time++)<br>        {<br>            for (int i=1;i&lt;=n;i++)<br>                A[i]=Data[i-1];<br>            int total=0;<br>            while(1)<br>            {<br>                solve();<br>                bool find=false;<br>                for (int i=1;i&lt;=n;i++)<br>                    for (int j=i+1;j&lt;=n;j++)<br>                        if (A[list[i]]!=finish[list[i]] &amp;&amp; A[list[j]]!=finish[list[j]])<br>                        {<br>                            int t=int(A[list[i]]==finish[list[j]])+int(A[list[j]]==finish[list[i]]);<br>                            if (t==1)<br>                            {<br>                                swap(A[list[i]],A[list[j]]);<br>                                total++;<br>                                find=true;<br>                            }<br>                        }    <br>                if (!find)<br>                    break;<br>            }    <br>            int left=0;<br>            for (int i=1;i&lt;=n;i++)<br>                if (A[i]!=finish[i])<br>                    left++;<br>            total+=left/2;<br>            if (total&gt;result)<br>                result=total;<br>        }    <br>        return result;<br>    }    <br>};<br></td>