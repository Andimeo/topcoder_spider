<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;ext/hash_map&gt;<br>#include &lt;set&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;complex&gt;<br>#include &lt;numeric&gt;<br>#include &lt;ctype.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;deque&gt;<br>using namespace std;<br>using namespace __gnu_cxx;<br>typedef long long ll;<br>typedef unsigned long long ull;<br>typedef long double ld;<br> <br>int xs, ys;<br>int dx[256], dy[256];<br> <br>bool simulate(int x, int y, int xx, int yy, const string &amp;s1, const string &amp;s2){<br>  if(x == xx &amp;&amp; y == yy) return true;<br>  for(int i = 0; i &lt; s1.size(); i++){<br>    int nx = x + dx[s1[i]]; nx &lt;?= (xs - 1); nx &gt;?= 0;<br>    int ny = y + dy[s1[i]]; ny &lt;?= (ys - 1); ny &gt;?= 0;<br>    int nxx = xx + dx[s2[i]]; nxx &lt;?= (xs - 1); nxx &gt;?= 0;<br>    int nyy = yy + dy[s2[i]]; nyy &lt;?= (ys - 1); nyy &gt;?= 0;<br>    if(nxx == x &amp;&amp; nyy == y &amp;&amp; nx == xx &amp;&amp; ny == yy) return true; // exchanged positions<br>    if(nx == nxx &amp;&amp; ny == nyy) return true; // new positions are the same<br>    x = nx, y = ny, xx = nxx, yy = nyy;<br>  }<br>  <br>  return false;<br>}<br> <br>class RobotCollision {<br>  public:<br>  double probability(int xSize, int ySize, string commandsRobbie, string commandsSpeedy) {<br>    dx['U'] = -1;<br>    dx['D'] = 1;<br>    dy['L'] = -1;<br>    dy['R'] = 1;<br>    xs = xSize, ys = ySize;<br>    int cnt = 0;<br>    for(int i = 0; i &lt; xSize; i++)<br>      for(int j = 0; j &lt; ySize; j++)<br>        for(int ii = 0; ii &lt; xSize; ii++)<br>          for(int jj = 0; jj &lt; ySize; jj++)<br>            if(abs(i - ii) + abs(j - jj) &lt; 22)<br>            if(simulate(i, j, ii, jj, commandsRobbie, commandsSpeedy)) cnt++;<br>            <br>    return (ld)cnt/(xSize*ySize*xSize*ySize);<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>