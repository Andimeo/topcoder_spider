<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>public class ManhattanDistance {<br>  struct Point <br>  {<br>    public int row;<br>    public int col;<br>    public int x;<br>    public int y;<br>  }<br><br>  public double minDistance(int distance, int width, string start, string target) {<br>    Point[] v = new Point[26* 50 * 2 * 2 + 2];<br>    v[0].row = start[0] - 'A';<br>    v[0].col = int.Parse(start.Substring(1)) - 1;<br>    v[0].x = v[0].row * distance * 2;<br>    v[0].y = v[0].col * distance * 2;<br>    v[1].row = target[0] - 'A';<br>    v[1].col = int.Parse(target.Substring(1)) - 1;<br>    v[1].x = v[1].row * distance * 2;<br>    v[1].y = v[1].col * distance * 2;<br>    int num = 2;<br>    for (int i = 0; i &lt; 26; ++i) <br>    {<br>      for (int j = 0; j &lt; 50; ++j) <br>      {<br>        for (int k = 0; k &lt; 2; ++k) <br>        {<br>          for (int m = 0; m &lt; 2; ++m) <br>          {<br>            v[num].row = i;<br>            v[num].col = j;<br>            v[num].x = i * distance * 2 - width + 2 * k * width;<br>            v[num].y = j * distance * 2 - width + 2 * m * width;<br>            ++num;<br>          }<br>        }<br>      }<br>    }<br><br>    double[] l = new double[v.Length];<br>    for (int i = 0; i &lt; l.Length; ++i)<br>      l[i] = double.MaxValue;<br>    l[0] = 0;<br>    bool[] mark = new bool[v.Length];<br>    while (!mark[1]) <br>    {<br>      double cur = double.MaxValue;<br>      int ci = -1;<br>      for (int i = 0; i &lt; l.Length; ++i)<br>        if (!mark[i] &amp;&amp; l[i] &lt; cur) <br>        {<br>          cur = l[i];<br>          ci = i;<br>        }<br>      mark[ci] = true;<br>      for (int i = 0; i &lt; l.Length; ++i)<br>        if (!mark[i])<br>          if (v[i].row == v[ci].row || v[i].col == v[ci].col) <br>          {<br>            double dx = v[i].x - v[ci].x;<br>            double dy = v[i].y - v[ci].y;<br>            double dist = Math.Sqrt(dx * dx + dy * dy);<br>            if (l[ci] + dist &lt; l[i])<br>              l[i] = l[ci] + dist;<br>          }<br>    }<br><br>    return l[1] / 2;<br>  }<br><br>  <br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>