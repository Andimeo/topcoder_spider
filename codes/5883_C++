<td class="problemText" colspan="8" valign="middle" align="left">
            // I think it is good to submit wrong solutions sometimes to give others challenging opportunities.<br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;math.h&gt;<br>using namespace std;<br><br>typedef long double ld;<br><br>#define LS &lt;<br><br>// All macros with parameters "k,a,b" run the "k" variable in range [a,b)<br>#define FOR(k,a,b) for(typeof(a) k=(a); k LS (b); ++k)<br><br>#line 3 "ManhattanDistance.cc"<br><br>ld hypat(ld x, ld y) {<br>  return hypot(x,y); // x+y;<br>  }<br><br>class ManhattanDistance {<br>  public:<br>  double minDistance(int distance, int width, string start, string target) {<br>    // !FDI<br>    int x0, y0, x1, y1; char c0, c1;<br>    x0 = 0; x1 = 0;<br>    sscanf(start .c_str(), "%c%d", &amp;c0, &amp;y0); x0 = c0;<br>    sscanf(target.c_str(), "%c%d", &amp;c1, &amp;y1); x1 = c1;<br>    x1 -= x0; y1 -= y0;<br>    if(x1 &lt; 0) x1 = -x1;<br>    if(y1 &lt; 0) y1 = -y1;<br>    if(y1 &gt; x1) swap(x1, y1);<br>    if(y1 == 0) return distance * x1;<br>    long double fr[80][80];<br>    distance *= 2;<br>    FOR(y,0,y1) FOR(x,0,x1) {<br>      if(x == 0) fr[y][x] = hypat(width, distance * (y+1) - width);<br>      else {<br>        fr[y][x] = <br>          hypat(width, distance * x - width) + hypat(2*width, distance * (y+1) - width*2);<br>        FOR(py,0,y) FOR(px,0,x)<br>        fr[y][x] &lt;?=<br>          fr[py][px]<br>          + hypat(2*width, distance * (y-py) - 2*width)<br>          + hypat(2*width, distance * (x-px) - 2*width);<br>        }<br>      }<br>    printf("v = %Lf\n", fr[0][0]);<br>    ld best = 1000000000;<br>    FOR(x,0,x1) best &lt;?= <br>      fr[y1-1][x] + hypat((x1-x) * distance - width, width);<br>    return best/2;<br>    }<br>  };<br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>