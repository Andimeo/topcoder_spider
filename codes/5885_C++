<td class="problemText" colspan="8" valign="middle" align="left">
            #line 5 "VectorPolygon.cpp"<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cmath&gt;<br>#include &lt;sstream&gt;<br>#include &lt;set&gt;<br>#include &lt;stack&gt;<br>#include &lt;deque&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br> <br>#define ABS(a) ((a)&lt;0?-(a):a)<br> <br> <br>class VectorPolygon {<br>  public:<br> <br>  int get_size(int x1,int y1,int x2,int y2){<br>    return ABS(x1*y2-x2*y1);<br>  }<br>  <br>  struct cmp{<br>    bool operator()(const pair&lt;int,int&gt; a,const pair&lt;int,int&gt; b)const{<br>      return atan2((double)a.first,(double)a.second)&lt;atan2((double)b.first,(double)b.second);<br>    }<br>  };<br> <br>  <br>  <br>  double maxArea(vector &lt;int&gt; dx, vector &lt;int&gt; dy) {<br>    vector&lt;int&gt; perm;<br>    for(unsigned int i=0;i&lt;dx.size();i++){<br>      perm.push_back(i+1);<br>    }<br>    double max=0;<br>    for(int i=0;i&lt;45000;i++){<br>      for(unsigned int i=3;i&lt;=dx.size();i++){<br>        int x=0,y=0;<br>        for(unsigned int j=0;j&lt;i;j++){<br>          x+=dx[perm[j]-1];<br>          y+=dy[perm[j]-1];<br>        }<br>        if(x==0&amp;&amp;y==0){<br>          vector&lt;pair&lt;int,int&gt; &gt; f;<br>          for(unsigned int j=0;j&lt;i;j++){<br>            f.push_back(pair&lt;int,int&gt;(dx[perm[j]-1],dy[perm[j]-1]));<br>          }<br>          sort(f.begin(),f.end(),cmp());<br>          int size=0;<br>          x=f[0].first;y=f[0].second;<br>          for(unsigned int i=1;i&lt;f.size();i++){<br>            size+=get_size(x,y,f[i].first,f[i].second);<br>            x+=f[i].first;<br>            y+=f[i].second;<br>          }<br>          if(size&gt;max)max=size;<br>          <br>        }<br>      }<br>      next_permutation(perm.begin(),perm.end());<br>    }<br>    return ( max )/2;<br>        <br>  }<br>};<br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>