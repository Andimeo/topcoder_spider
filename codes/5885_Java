<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * @author  Nevo<br> * @version 1.0.19.11.2005.20:50:57<br> */<br>public class VectorPolygon {<br>    int[] dx, dy, x, y;<br>    int n;<br>    boolean q[];<br>    double res = 0;<br> <br>    public void dfs(int x0, int y0, int k) {<br>        if ((x0 == 0) &amp;&amp; (y0 == 0) &amp;&amp; (k != 0)) {<br>            double s = 0;<br>            for (int i = 0; i &lt; k-1; i++) {<br>                int j = i+1;<br>                s += x[i] * y[j] - x[j] * y[i];<br>            }<br>            s = Math.abs(s) / 2;<br>            if (res &lt; s) {<br>                res = s;<br>            }<br>        }<br>        if (k == n) return;<br>        for (int i = 0; i &lt; n; i++) {<br>            if (!q[i]) {<br>                q[i] = true;<br>                x[k] = x0 + dx[i];<br>                y[k] = y0 + dy[i];<br>                dfs(x[k], y[k], k+1);<br>                q[i] = false;<br>            }<br>        }<br>    }<br> <br>    public double maxArea(int[] dx, int[] dy) {<br>        this.dx =dx;<br>        this.dy = dy;<br>        n = dx.length;<br>        q = new boolean[n];<br>        x = new int[n];<br>        y = new int[n];<br>        for (int i = 0; i &lt; n; i++) {<br>            q[i] = false;<br>        }<br>        dfs(0, 0, 0);<br>        return res;<br>    }<br>}<br></td>