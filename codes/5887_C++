<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br><br>using namespace std;<br><br>#ifdef __GNUC__<br>#define int64 long long<br>#else /* MSVC, say */<br>#define int64 __int64<br>#endif<br><br>class DyckwordUniformer {<br>public:<br>    string uniform(string w) {<br>        int sum = 0;<br>    vector&lt;string&gt; s;<br>    int i;<br>    string cur = "";<br>    for (i=0; i &lt; w.size(); i++) {<br>      if (w[i] == 'X') sum++;<br>      if (w[i] == 'Y') sum--;<br>      cur += w[i];<br>      if (sum &lt; 0) return "";<br>      if (sum == 0) {<br>        s.push_back(cur);<br>        cur = "";<br>      }<br>    }<br>    if (sum != 0) return "";<br>    string res;<br>    if (s.size() != 1) {<br>      for (i=0; i &lt; s.size(); i++)<br>        s[i] = uniform(s[i]);<br>      sort(s.begin(), s.end());<br>      res = "";<br>      for (i=0; i &lt; s.size(); i++)<br>        res += s[i];<br>    } else {<br>      string tmp = "";<br>      for (i=1; i+1 &lt; w.size(); i++)<br>        tmp += w[i];<br>      res = 'X' + uniform(tmp) + 'Y';<br>    }<br>        return res;<br>    }<br><br>};<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>