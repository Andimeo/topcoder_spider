<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class ExtraBall {<br>  int howMany(int[] card, int[] balls, string[] patterns, int[] prizes)<br>  {<br>    int[] tmp = new int[balls.Length];<br>    balls.CopyTo(tmp, 0);<br>    Array.Sort(tmp);<br><br>    int res = 0;<br><br>    for (int i = 0; i &lt; patterns.Length; ++i)<br>    {<br>      string pattern = patterns[i];<br>      bool ok = true;<br>      for (int j = 0; j &lt; pattern.Length; ++j)<br>      {<br>        if (pattern[j] == 'X')<br>        {<br>          if (Array.BinarySearch(tmp, card[j]) &lt; 0)<br>          {<br>            ok = false;<br>            break;<br>          }<br>        }<br>      }<br>      if (ok)<br>        res += prizes[i];<br>    }<br><br>    return res;<br>  }<br><br>  public double expectedPayout(int[] card, int[] balls, string[] patterns, int[] prizes) {<br>    int[] tmp = new int[balls.Length];<br>    balls.CopyTo(tmp, 0);<br>    Array.Sort(tmp);<br><br>    int start = howMany(card, balls, patterns, prizes);<br>    int total = 0;<br>    double sum = 0;<br><br>    for (int i = 1; i &lt;= 75; ++i)<br>    {<br>      if (Array.BinarySearch(tmp, i) &lt; 0)<br>      {<br>        int[] newBalls = new int[balls.Length + 1];<br>        balls.CopyTo(newBalls, 0);<br>        newBalls[balls.Length] = i;<br>        int cur = howMany(card, newBalls, patterns, prizes);<br>        sum += (cur - start);<br>        ++total;<br>      }<br>    }<br><br>    return sum / total;<br>  }<br><br>  <br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>