<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class FallingCoconuts {<br>  public string[] harvest(int[] drops) {<br>    int[] h = new int[220];<br><br>    for (int i = 0; i &lt; drops.Length; ++i)<br>    {<br>      int at = drops[i] + 100;<br><br>      do<br>      {<br>        if (h[at] &lt;= h[at + 1] &amp;&amp; h[at] &lt;= h[at - 1])<br>          break;<br>        if (h[at] &gt; h[at + 1])<br>          ++at;<br>        else<br>          --at;<br>      } while (true);<br><br>      ++h[at];<br>    }<br><br>    int max = 0;<br>    int left = h.Length;<br>    int right = -1;<br>    for (int i = 0; i &lt; h.Length; ++i) <br>    {<br>      if (max &lt; h[i])<br>        max = h[i];<br>      if (h[i] &gt; 0)<br>      {<br>        if (i &lt; left)<br>          left = i;<br>        if (i &gt; right)<br>          right = i;<br>      }<br>    }<br><br>    string[] res = new string[max];<br><br>    for (int j = 0; j &lt; max; ++j)<br>    {<br>      string s = "";<br><br>      for (int k = left; k &lt;= right; ++k)<br>        if (h[k] &gt; j)<br>          s += 'O';<br>        else<br>          s += '-';<br><br>      res[j] = s;<br>    }<br><br>    return res;<br>  }<br>  <br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>