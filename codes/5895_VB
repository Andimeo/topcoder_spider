<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System<br>Imports System.Collections<br>Imports System.Math<br> <br>Public Class FallingCoconuts<br>    Public Function harvest(ByVal drops As Integer()) As String()<br>        Dim i, j, k, l As Long<br> <br>        Dim aPos(50, 150) As Boolean<br> <br>        For i = 0 To drops.GetUpperBound(0)<br>            k = drops(i) + 75<br>            j = 50<br>            Do<br>                If j = 0 Then Exit Do<br>                If aPos(j - 1, k) And aPos(j - 1, k - 1) And aPos(j - 1, k + 1) Then Exit Do<br>                If Not aPos(j - 1, k) Then<br>                    j -= 1<br>                ElseIf Not aPos(j - 1, k + 1) Then<br>                    j -= 1<br>                    k += 1<br>                ElseIf Not aPos(j - 1, k - 1) Then<br>                    j -= 1<br>                    k -= 1<br>                End If<br>            Loop<br>            aPos(j, k) = True<br>        Next<br> <br>        Dim aRet As New ArrayList<br>        Dim iLeft As Integer = 999<br>        Dim iRight As Integer = -1<br> <br>        For i = 0 To 150<br>            If aPos(0, i) And iLeft = 999 Then iLeft = i<br>            If aPos(0, i) Then iRight = i<br>        Next<br> <br>        Dim sRet As String<br>        Dim bFound As Boolean<br> <br>        For i = 0 To 50<br>            bFound = False<br>            sRet = ""<br> <br>            For j = iLeft To iRight<br>                If aPos(i, j) Then<br>                    sRet &amp;= "O"<br>                    bFound = True<br>                Else<br>                    sRet &amp;= "-"<br>                End If<br>            Next<br>            If bFound Then<br>                aRet.Add(sRet)<br>            Else<br>                Return aRet.ToArray(GetType(String))<br>            End If<br>        Next<br>    End Function<br>End Class<br></td>