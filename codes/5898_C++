<td class="problemText" colspan="8" valign="middle" align="left">
            #line 5 "MonomorphicTyper.cpp"<br><br>#include &lt;string&gt;<br>#include &lt;fstream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;vector&gt;<br>#include &lt;iostream&gt;<br>#include &lt;fstream&gt;<br>#include &lt;algorithm&gt;<br>using namespace std;<br><br>#define Max(a,b) ((a)&gt;(b)?(a):(b))<br>#define Min(a,b) ((a)&lt;(b)?(a):(b))<br><br>class MonomorphicTyper<br>{ <br>public: <br>  int n, m;<br>  vector&lt;string&gt; def; string s;<br>  string TYPE(string s)<br>  {<br>    int i,j;<br>    char ide[60];<br>    string cur;<br>    while (s.length()&gt;0&amp;&amp;s[0]!='(')<br>    {<br>      cur += s[0];<br>      s = s.substr(1);<br>    }<br>    vector&lt;string&gt; arg;<br>    if (s[0]=='(')<br>    {<br>      int k=0, last = 0;<br>      for (i=1; i&lt;s.length(); i++)<br>      {<br>        if (s[i]=='(') k++;<br>        else if (s[i]==')') k--;<br>        if (s[i]==','&amp;&amp;k==0||s[i]==')'&amp;&amp;k==-1)<br>        {<br>          arg.push_back(TYPE(s.substr(last+1,i-last-1)));<br>          last = i;<br>        }<br>      }<br>      for (i=0; i&lt;arg.size(); i++) if (arg[i]=="") return "";<br>      cur += '(';<br>      for (i=0; i&lt;arg.size(); i++)<br>      {<br>        cur += arg[i];<br>        if (i==arg.size()-1) cur += ')'; else cur += ',';<br>      }<br>    }<br>    for (i=0; i&lt;n; i++)<br>    {<br>      char s1[60]; strcpy(s1,def[i].c_str());<br>      int mid = strchr(s1,':') - s1;<br>      s1[mid] = 0;<br>      if (strcmp(s1,cur.c_str())==0)<br>        return s1+mid+1;<br>    }<br>    return "";<br>  }<br>  string infer(string _s, vector &lt;string&gt; _def) <br>  {<br>    int i,j,k; def = _def; s = _s;<br>    n = def.size();<br>    return TYPE(_s);<br>  }<br>  <br><br>}; <br><br><br><br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>