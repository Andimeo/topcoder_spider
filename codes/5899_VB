<td class="problemText" colspan="8" valign="middle" align="left">
            imports Microsoft.VisualBasic<br>imports System<br> <br>Public Class RectangleGroups<br>  Public Function maximalIndexed(Rectangles as string()) as string<br>    dim sResult as string = ""<br>    dim iResult as integer = 0<br>    dim Rectangle as string<br>    dim Data as string()<br>    dim Groups as new collection<br>    <br>    For each Rectangle in Rectangles <br>      Dim area as integer = 0<br>      Dim oldarea as integer = 0<br>      Data = Rectangle.Split(" ")<br>      area = int(Data(1)) * int(Data(2))<br>      try<br>        oldarea = Groups.Item(Data(0))<br>      catch<br>        oldarea = 0<br>      end try<br>      area += oldarea<br>      try<br>        Groups.Remove(Data(0))<br>      catch<br>      end try<br>      Groups.Add(area,Data(0))<br>    next Rectangle<br>    <br>    For each Rectangle in Rectangles <br>      Dim area as integer = 0<br>      Dim oldarea as integer = 0<br>      dim check as string = ""<br>      <br>      Data = Rectangle.Split(" ")<br>      check = Data(0)<br>      <br>      area = Groups.Item(Check)<br>      try<br>        oldarea = Groups(sResult)<br>      catch<br>        oldarea=0<br>      end try<br>      <br>      if oldarea &lt; area then<br>        sResult = Check<br>      end if<br>      <br>      if (oldarea = area) and  (sResult &gt; Check) then<br>        sResult = Check<br>      end if <br>    next Rectangle<br>    iresult = Groups(sResult)<br>    sResult += " " + iresult.tostring()<br>    <br>    return sResult<br>  End Function<br>End Class<br></td>