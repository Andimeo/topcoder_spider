<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System<br>Imports System.Collections<br>Imports System.Math<br> <br>Public Class CMajor<br>    Public Function getLongest(ByVal fragments As String()) As Integer<br>        Dim i, j, k, l As Integer<br>        Dim aPos() As Integer = {0, 2, 3, 5, 7, 8, 10}<br>        Dim bLegal(11) As Boolean<br>        For i = 0 To aPos.GetUpperBound(0)<br>            bLegal(aPos(i)) = True<br>        Next<br>        Dim aFrags(fragments.GetUpperBound(0), 6) As Integer<br>        Dim s() As String<br>        Dim bGood As Boolean<br> <br>        For i = 0 To fragments.GetUpperBound(0)<br>            s = fragments(i).Split(" "c)<br>            For j = 0 To 6<br>                k = aPos(j)<br>                bGood = True<br>                For l = 0 To s.GetUpperBound(0)<br>                    k += CInt(s(l))<br>                    k = k Mod 12<br>                    If k &lt; 0 Then k += 12<br>                    If Not bLegal(k) Then bGood = False<br>                Next<br>                If bGood Then<br>                    aFrags(i, j) = System.Array.IndexOf(aPos, k)<br>                Else<br>                    aFrags(i, j) = -1<br>                End If<br>            Next<br>        Next<br> <br>        Dim iMax As Integer = (1 &lt;&lt; fragments.GetUpperBound(0) + 1) - 1<br>        Dim aCan(iMax, 6) As Integer<br>        For i = 0 To 6<br>            aCan(0, i) = i<br>        Next<br>        Dim iOld As Integer<br> <br>        For i = 1 To iMax<br>            For k = 0 To 6<br>                aCan(i, k) = -1<br>            Next<br>            For j = 0 To fragments.GetUpperBound(0)<br>                If (i And 1 &lt;&lt; j) &gt; 0 Then<br>                    iOld = i - (1 &lt;&lt; j)<br>                    For k = 0 To 6<br>                        If aCan(iOld, k) &gt;= 0 Then<br>                            If aFrags(j, aCan(iOld, k)) &gt;= 0 Then<br>                                aCan(i, k) = aFrags(j, aCan(iOld, k))<br>                            End If<br>                        End If<br>                    Next<br>                End If<br>            Next<br>        Next<br> <br>        Dim iRet As Integer<br> <br>        For i = 1 To iMax<br>            bGood = False<br>            For j = 0 To 6<br>                If aCan(i, j) &gt;= 0 Then<br>                    bGood = True<br>                End If<br>            Next<br>            If bGood Then<br>                l = 0<br>                For k = 0 To fragments.GetUpperBound(0)<br>                    If (i And 1 &lt;&lt; k) &gt; 0 Then<br>                        l += 1<br>                    End If<br>                Next<br>                iRet = Max(iRet, l)<br>            End If<br>        Next<br>        Return iRet<br> <br>    End Function<br>End Class<br></td>