<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class BallGift {<br>  long[,,,,] prob;<br>  bool[,,,] got;<br><br>  public int bestPosition(int players, int green, int red, int black) {<br>    prob = new long[green + 1, red + 1, black + 1, players + 1, players];<br>    got = new bool[green + 1, red + 1, black + 1, players + 1];<br>    fill(green, red, black, players);<br>    long best = long.MinValue;<br>    int besti = -1;<br>    for (int i = 0; i &lt; players; ++i)<br>    {<br>      if (prob[green, red, black, players, i]&gt; best)<br>      {<br>        best = prob[green, red, black, players, i];<br>        besti = i;<br>      }<br>    }<br>    return besti;<br>  }<br><br>  private void fill(int green, int red, int black, int players)<br>  {<br>    if (got[green, red, black, players])<br>      return;<br>    got[green, red, black, players] = true;<br>    if (green == 0 &amp;&amp; red == 0 &amp;&amp; black == 0)<br>    {<br>      prob[green, red, black, players, 0] += 1;<br>      return;<br>    }<br><br>    if (green &gt; 0)<br>    {<br>      fill(green - 1, red, black, players);<br>      for (int i = 0; i &lt; players; ++i)<br>        prob[green, red, black, players, i] += prob[green - 1, red, black, players, (i + players - 1) % players];<br>    }<br>    if (red &gt; 0)<br>    {<br>      fill(green, red - 1, black, players);<br>      for (int i = 0; i &lt; players; ++i)<br>        prob[green, red, black, players, i] += prob[green, red - 1, black, players, players - 1 - i];<br>    }<br>    if (black &gt; 0)<br>    {<br>      fill(green, red, black - 1, players - 1);<br>      for (int i = 1; i &lt; players; ++i)<br>        prob[green, red, black, players, i] += prob[green, red, black - 1, players - 1, i - 1];<br>    }<br>  }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>