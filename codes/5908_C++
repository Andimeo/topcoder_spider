<td class="problemText" colspan="8" valign="middle" align="left">
            # include &lt;algorithm&gt;<br># include &lt;vector&gt;<br># include &lt;queue&gt;<br># include &lt;utility&gt;<br># include &lt;string&gt;<br># include &lt;map&gt;<br># include &lt;cstdio&gt;<br># include &lt;cstdlib&gt;<br># include &lt;cmath&gt;<br># include &lt;cctype&gt;<br># include &lt;cstring&gt;<br># include &lt;cassert&gt;<br># include &lt;list&gt;<br># include &lt;stack&gt;<br># include &lt;iterator&gt;<br># include &lt;deque&gt;<br># include &lt;functional&gt;<br># include &lt;bitset&gt;<br># include &lt;complex&gt;<br># include &lt;iostream&gt;<br># include &lt;fstream&gt;<br># include &lt;sstream&gt;<br># include &lt;ctime&gt;<br># include &lt;set&gt;<br><br>using namespace std ;<br><br>// Macroses<br># ifdef __GNUC__<br>typedef long long ll ;<br># else<br>typedef __int64 ll ;<br># define for if ( false ) ; else for<br># define min __min<br># define max __max<br># endif<br><br>// Constants<br>const int INF = 1000000000 ;<br>const long double EPS = 1e-8L ;<br>const long double PI = 3.1415926535897932384626433832795L ;<br><br>// Types<br>typedef vector &lt; int &gt; vi ;<br>typedef long double ld ;<br>typedef vector &lt; ld &gt; vd ;<br><br>// Data<br><br>// Answers<br><br>// Global<br>vd ans [ 16 ] [ 16 ] [ 16 ] ;<br><br>// Functions<br>void process ( int n , int g , int r , int b )<br>{<br>  if ( ans [ g ] [ r ] [ b ] . size ( ) )<br>    return ;<br>  ans [ g ] [ r ] [ b ] = vd ( n ) ;<br>  ld s = g + r + b ;<br>  if ( g )<br>  {<br>    process ( n , g - 1 , r , b ) ;<br>    for ( int i = 0 ; i &lt; n ; ++ i )<br>      ans [ g ] [ r ] [ b ] [ ( i + 1 ) % n ] += ans [ g - 1 ] [ r ] [ b ] [ i ] * g / s ;<br>  }<br>  if ( r )<br>  {<br>    process ( n , g , r - 1 , b ) ;<br>    for ( int i = 0 ; i &lt; n ; ++ i )<br>      ans [ g ] [ r ] [ b ] [ i ] += ans [ g ] [ r - 1 ] [ b ] [ n - 1 - i ] * r / s ;<br>  }<br>  if ( b )<br>  {<br>    process ( n - 1 , g , r , b - 1 ) ;<br>    for ( int i = 0 ; i &lt; n - 1 ; ++ i )<br>      ans [ g ] [ r ] [ b ] [ i + 1 ] += ans [ g ] [ r ] [ b - 1 ] [ i ] * b / s ;<br>  }<br>}<br><br>// Interface<br>class BallGift<br>{<br>public :<br>  int bestPosition ( int pl, int g, int r, int b )<br>  {<br>    int res ;<br>    ans [ 0 ] [ 0 ] [ 0 ] = vd ( pl - b ) ;<br>    ans [ 0 ] [ 0 ] [ 0 ] [ 0 ] = 1 ;<br>    process ( pl , g , r , b ) ;<br>    ld best = - 1 ;<br>    for ( int i = 0 ; i &lt; pl ; ++ i )<br>    {<br>      if ( ans [ g ] [ r ] [ b ] [ i ] &gt; best + EPS )<br>      {<br>        best = ans [ g ] [ r ] [ b ] [ i ] ;<br>        res = i ;<br>      }<br>    }<br>    return res ;<br>  }<br>  <br><br>} ;<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>