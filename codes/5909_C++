<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;list&gt;<br>#include &lt;regex.h&gt; <br>using namespace std;<br><br>// LIB CODE<br>#define VAR(a,b) __typeof(b) a=b<br>#define FORIT(it,v) for(VAR(it,(v).begin());it!=(v).end();++(it))<br>#define SZ(v) ((int)(v).size())<br>#define FOR(i,a,b) for(int i=(a);i&lt;int(b);++i)<br>#define REP(i,n) FOR(i,0,n)<br>// REAL CODE<br><br>int n,m[2];<br>string s;<br><br>int mem[2500][51][2];<br><br>int val(int pos,int ok) {<br>  return (s[pos]=='G')^(ok)?0:1;<br>}<br><br>int go(int pos,int row,int type) {<br>  if(pos&gt;=n) return 0;<br>  int &amp;ret=mem[pos][row][type];<br>  if(ret==-1) {<br>    ret=0;<br>    if(m[type]&gt;row) ret&gt;?=val(pos,type)+go(pos+1,row+1,type);<br>    ret&gt;?=val(pos,1-type)+go(pos+1,1,1-type);<br>  }<br>  return ret;<br>}<br><br><br>class Horoscope {<br>public:<br>  int maxGoodDays(vector &lt;string&gt; S, int R, int W) {<br>    s=""; FORIT(i,S) s+=*i; n=SZ(s),m[0]=W,m[1]=R;<br>    <br>    REP(i,2500) REP(j,51) REP(k,2) mem[i][j][k]=-1;<br>    <br>    return go(0,0,0);<br>    <br>  }<br>  <br>};<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>