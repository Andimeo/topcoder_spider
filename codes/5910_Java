<td class="problemText" colspan="8" valign="middle" align="left">
            public class GreedyGovernment {<br>  int n;<br>  int graph[][];<br>  int costs=0;<br>  int num=0;<br>  private boolean used[];<br>  public double maxAverageCost(String[] tolls, int tollHike)<br>  {<br>    n= tolls.length;<br>    graph=new int[n][n];<br>    used= new boolean[n];<br>    for(int i=0;i&lt;n;i++)<br>      for(int j=0;j&lt;n;j++)<br>      if(tolls[i].charAt(j)=='X')<br>        graph[i][j]=-1;<br>      else<br>        graph[i][j]=tolls[i].charAt(j)-'0';<br>      used[0]=true;<br>      rec(0,0);<br>      if(num==0)<br>        return 0;<br>      double max=0;<br>      for(int i=0;i&lt;n;i++)<br>        for(int j=0;j&lt;n;j++)<br>        {<br>          costs=0;<br>          num=0;<br>          if(graph[i][j]!=-1){<br>            graph[i][j] += tollHike;<br>            rec(0,0);<br>            if((1.*costs)/num&gt;max)<br>              max=(1.*costs)/num;<br>            graph[i][j] -= tollHike;<br>          }<br>        }<br>    <br>    return max;<br>  }<br>  void rec(int which,int cost)<br>  {<br>    if(which==n-1)<br>    {<br>      costs+=cost;<br>      num++;<br>      return;<br>    }<br>    for(int i=0;i&lt;n;i++)<br>      if(!used[i]&amp;&amp;graph[which][i]!=-1)<br>      {<br>        used[i]=true;<br>        rec(i,cost+graph[which][i]);<br>        used[i]=false;<br>      }      <br>  }<br>}<br></td>