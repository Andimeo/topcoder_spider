<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class FallingBall {<br>  struct Point : IComparable<br>  {<br>    public readonly int x;<br>    public readonly int y;<br><br>    public Point(int x, int y)<br>    {<br>      this.x = x;<br>      this.y = y;<br><br>    }<br><br>    public int CompareTo(object obj)<br>    {<br>      Point p = (Point) obj;<br>      return y.CompareTo(p.y);<br>    }<br>  }<br><br>  public int howMany(string[] cells, int n) {<br>    int[,] c = new int[n + 1, n + 1];<br>    c[0, 0] = 1;<br>    for (int i = 1; i &lt;= n; ++i)<br>    {<br>      c[i, 0] = 1;<br>      for (int j = 1; j &lt;= n; ++j)<br>        c[i, j] = c[i - 1, j - 1] + c[i - 1, j];<br>    }<br>    Point[] pts = new Point[cells.Length + 1];<br>    for (int i = 0; i &lt; cells.Length; ++i)<br>    {<br>      string[] p = cells[i].Split(' ');<br>      pts[i] = new Point(int.Parse(p[1]), int.Parse(p[0]));<br>    }<br>    pts[cells.Length] = new Point(0, 0);<br>    Array.Sort(pts);<br>    int res = 1;<br>    for (int i = 1; i &lt; pts.Length; ++i)<br>    {<br>      Point a = pts[i - 1];<br>      Point b = pts[i];<br>      int dy = b.y - a.y;<br>      int dx = b.x - a.x;<br>      if (dx &lt; 0 || dx &gt; dy)<br>        return 0;<br>      res *= c[dy, dx];<br>    }<br>    res *= (1 &lt;&lt; (n - 1 - pts[pts.Length - 1].y));<br>    return res;<br>  }<br><br>  <br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>