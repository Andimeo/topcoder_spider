<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br><br>class FallingBall {<br>  public:<br>  int howMany(vector &lt;string&gt; cells, int n) {<br>    int wanted[50];<br>    memset(wanted,-1,sizeof(wanted));<br>    for (int i=0; i&lt;(int)cells.size(); i++) {<br>      int r,c;<br>      sscanf(cells[i].c_str(),"%d %d",&amp;r,&amp;c);<br>      if (wanted[r] &gt;= 0 &amp;&amp; wanted[r] != c)<br>        return 0;<br>      wanted[r] = c;<br>    }<br>    int dp[50][50];<br>    dp[0][0] = 1;<br>    for (int i=1; i&lt;n; i++) {<br>      dp[i][0] = dp[i-1][0];<br>      dp[i][i] = dp[i-1][i-1];<br>      for (int j=1; j&lt;i; j++)<br>        dp[i][j] = dp[i-1][j-1]+dp[i-1][j];<br>      if (wanted[i] &gt;= 0)<br>        for (int j=0; j&lt;=i; j++)<br>          if (j != wanted[i])<br>            dp[i][j] = 0;<br>    }<br>    int s = 0;<br>    for (int i=0; i&lt;n; i++)<br>      s += dp[n-1][i];<br>    return s;<br>  }<br>};<br><br><br>// Powered by FileEdit<br></td>