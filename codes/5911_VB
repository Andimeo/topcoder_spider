<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System<br>Imports System.Collections<br>Imports System.Math<br> <br>Public Class FallingBall<br>    Public Function howMany(ByVal cells As String(), ByVal n As Integer) As Integer<br>        Dim i, j, k, l As Integer<br> <br>        Dim aPinned As New SortedList<br>        Dim s() As String<br> <br>        For i = 0 To cells.GetUpperBound(0)<br>            s = cells(i).Split(" "c)<br>            If aPinned.Contains(CInt(s(0))) Then<br>                If aPinned(CInt(s(0))) &lt;&gt; CInt(s(1)) Then Return 0<br>            Else<br>                aPinned.Add(CInt(s(0)), CInt(s(1)))<br>            End If<br>        Next<br> <br>        Dim iPaths = 1<br>        Dim aPaths(n - 1, n - 1) As Integer<br>        aPaths(0, 0) = 1<br>        For i = 1 To n - 1<br>            For j = 0 To i<br>                If j = 0 Then aPaths(i, j) = aPaths(i - 1, j)<br>                If j = i Then aPaths(i, j) = aPaths(i - 1, j - 1)<br>                If j &gt; 0 And j &lt; i Then aPaths(i, j) = aPaths(i - 1, j) + aPaths(i - 1, j - 1)<br>            Next<br>            If aPinned.Contains(i) Then<br>                For j = 0 To i<br>                    If j &lt;&gt; aPinned(i) Then aPaths(i, j) = 0<br>                Next<br>            End If<br>        Next<br> <br>        For i = 0 To n - 1<br>            k += aPaths(n - 1, i)<br>        Next<br>        Return k<br>    End Function<br>End Class<br></td>