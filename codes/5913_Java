<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class StringBeads {<br>  long[][][] memo;<br>  int n ;<br>  int[] data;<br>    public long numWays(int[] beads) {<br>        long res = 0;<br>        n = beads.length;<br>        data = beads;<br>        int m = (int)Math.pow(11, n);<br>        memo = new long[n + 1][n + 1][m];<br>        for(int i = 0; i &lt;= n; i++){<br>          for(int j = 0; j &lt;= n; j++){<br>            for(int k = 0; k &lt; m; k++){<br>              memo[i][j][k] = -1;<br>            }<br>            memo[i][j][0] = 1;<br>          }<br>        }<br>       int start = 0;<br>        for(int i = 0; i &lt; n; i++){<br>          start = 11 * start + beads[i];<br>        }<br>        res = dp(n, n, start);<br>        return res;<br>    }<br> <br>    long dp(int u, int v, int state){<br>      if(memo[u][v][state] != -1)<br>        return memo[u][v][state];<br>      long res = 0;<br>      int bit = 1;<br>      for(int i = 0; i &lt; n - 1; i++)<br>        bit *= 11;<br>      int tmp = state;<br>      for(int i = 0; i &lt; n; i++){<br>        int cur = tmp / bit;<br>        tmp = tmp % bit;<br>        if(cur &gt; 0 &amp;&amp; u != i &amp;&amp; v != i){<br>          res += dp(v, i, state - bit);<br>        }<br>        bit /= 11;<br>      }<br>      return memo[u][v][state] = res;<br>    }<br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>