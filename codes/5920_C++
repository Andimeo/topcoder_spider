<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>using namespace std;<br> <br>#define SZ(var) (int)var.size()<br>#define REP(var, hi) for (var = 0; var &lt; (hi); var++)<br>typedef vector &lt;int&gt; VI;<br><br>VI s;<br>VI l;<br>int leng;<br>int n;<br>int w[5];<br>int p[10];<br>int tt[500];<br>int c[5];<br>int ans, res;<br>int ww[5];<br><br>void update()<br>{<br>  if (res &gt; ans)<br>    return;<br>  int i;<br>  if (res == ans)<br>  {<br>    REP(i, SZ(l))<br>      if (ww[i]&lt;w[i])<br>        return;<br>  }<br>  REP(i, SZ(l))<br>    ww[i] = w[i];<br>  ans = res;<br>}<br><br>void checking()<br>{<br>  memset(p, -1, sizeof(p));<br>  int left = n;<br>  int i, j, u;<br>  memcpy(c, w, sizeof(c));<br>  res = 0;<br>  while (left&gt;0)<br>  {<br>    res++;<br>    REP(i, n)<br>      if (p[i]&gt;-1 &amp;&amp; p[i]&lt;leng)<br>      {<br>        REP(j, s[i])<br>        {<br>          if (i&gt;0 &amp;&amp; p[i]==p[i-1]-1)<br>            break;<br>          u = tt[ p[i] ];<br>          if (u &gt; -1)<br>          {<br>            if ( c[u]&lt;=5 ) // red<br>              break;<br>          }<br>          p[i]++;<br>          if (p[i]&gt;=leng)<br>          {<br>            p[i]=2*leng;<br>            left--;<br>            break;<br>          }<br>        }<br>      }<br>    REP(i, n)<br>      if (p[i]==-1)<br>      {<br>        if (i&gt;0&amp;&amp;p[i-1]==0)<br>          break;<br>        p[i] = 0;<br>        break;<br>      }<br>    REP(i, SZ(l))<br>    {<br>      c[i]--;<br>      if (c[i] == 0) c[i] = 10;<br>    }<br>  }<br>  update();<br>}<br><br>void recr(int v, int m)<br>{<br>  if (v == m)<br>  {<br>    checking();<br>    return;<br>  }<br>  int i;<br>  REP(i, 5)<br>  {<br>    w[v]=i+1;<br>    recr(v+1, m);<br>  }<br>}<br><br>class GreenWave<br>{<br>public:<br>vector &lt;int&gt; getFirstRed(int L, vector &lt;int&gt; speeds, vector &lt;int&gt; lights)<br>{<br>  s = speeds;<br>  l = lights;<br>  leng = L;<br>  n = SZ(s);<br>  memset(tt, -1, sizeof(tt));<br>  int i;<br>  REP(i, SZ(l))<br>    tt[ l[i] ] = i;<br>  ans = 2000000000;<br>  recr(0, SZ(l));<br>  VI a(0);<br>  REP(i, SZ(l))<br>    a.push_back( ww[i] );<br>  return a;<br>}<br>    <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>