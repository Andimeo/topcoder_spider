<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class UnitsMoving {<br> <br>    double[][] d;<br>    boolean[] u;<br>    int[] p;<br>    int n;<br>    double m;<br> <br>    boolean dfs(int i) {<br>        u[i] = true;<br> <br>        for (int j = 0; j &lt; n; j++) {<br>            if (d[i][j] &lt;= m) {<br>                if (p[j] == -1 || (!u[p[j]] &amp;&amp; dfs(p[j]))) {<br>                    p[j] = i;<br>                    return true;<br>                }<br>            }<br>        }<br>        return false;<br>    }<br> <br>    public double bestTime(String[] start, String[] finish) {<br>        n = start.length;<br>        int[] xs = new int[n];<br>        int[] ys = new int[n];<br>        int[] v = new int[n];<br>        int[] xt = new int[n];<br>        int[] yt = new int[n];<br> <br>        for (int i = 0; i &lt; n; i++) {<br>            Scanner sc = new Scanner(start[i]);<br>            xs[i] = sc.nextInt();<br>            ys[i] = sc.nextInt();<br>            v[i] = sc.nextInt();<br>        }<br>        for (int i = 0; i &lt; n; i++) {<br>            Scanner sc = new Scanner(finish[i]);<br>            xt[i] = sc.nextInt();<br>            yt[i] = sc.nextInt();<br>        }<br> <br>        d = new double[n][n];<br>        for (int i = 0; i &lt; n; i++) {<br>            for (int j = 0; j &lt; n; j++) {<br>                d[i][j] = Math.hypot(xt[j] - xs[i], yt[j] - ys[i]) / v[i];<br>            }<br>        }<br> <br>        u = new boolean[n];<br>        p = new int[n];<br> <br>        double l = 0;<br>        double r = 10000;<br>        m = (l + r) / 2;<br>        while (l != m &amp;&amp; r != m &amp;&amp; r &gt; 1e-13) {<br>            boolean ok = true;<br>            Arrays.fill(p, -1);<br>            for (int i = 0; i &lt; n; i++) {<br>                Arrays.fill(u, false);<br>                if (!dfs(i)) {<br>                    ok = false;<br>                    break;<br>                }<br>            }<br> <br>            if (ok) {<br>                r = m;<br>            } else {<br>                l = m;<br>            }<br>            m = (l + r) / 2;<br>        }<br> <br>        return m;<br>    }<br> <br>}<br> <br> <br>// Powered by PopsEdit<br> <br>// Powered by CodeProcessor<br></td>