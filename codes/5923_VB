<td class="problemText" colspan="8" valign="middle" align="left">
            imports System<br>imports Microsoft.VisualBasic<br>imports System.Collections<br>imports System.Text<br> <br> <br>Public Class BestTriangulation<br> <br>    Public Function maxArea(ByVal vertices() As String) As Double<br>        Dim i1 As Integer, i2 As Integer, i3 As Integer<br>        Dim vc As Integer<br>        Dim a As Double, b As Double, c As Double<br>        Dim x() As Integer, y() As Integer<br> <br> <br>        Dim i As Integer, sp() As String, u As Double, v As Double, area As Double, big As Double<br>        vc = vertices.Length<br>        ReDim x(vc - 1)<br>        ReDim y(vc - 1)<br>        For i = 0 To vc - 1<br>            sp = Split(vertices(i), " ")<br>            x(i) = sp(0)<br>            y(i) = sp(1)<br> <br>        Next<br> <br>        big = 0<br>        For i1 = 0 To vc - 1<br>            For i2 = i1 To vc - 1<br>                For i3 = 0 To vc - 1<br>                    If i1 &lt;&gt; i2 And i2 &lt;&gt; i3 And i3 &lt;&gt; i1 Then<br> <br>                        u = x(i1) - x(i2)<br>                        v = y(i1) - y(i2)<br>                        a = Math.Sqrt(u * u + v * v)<br>                        u = x(i1) - x(i3)<br>                        v = y(i1) - y(i3)<br>                        b = Math.Sqrt(u * u + v * v)<br>                        u = x(i2) - x(i3)<br>                        v = y(i2) - y(i3)<br>                        c = Math.Sqrt(u * u + v * v)<br> <br>                        area = (a + b + c) / 2 * ((a + b + c) / 2 - a) * ((a + b + c) / 2 - b) * ((a + b + c) / 2 - c)<br>                        area = Math.Sqrt(area)<br> <br>                        If area &gt; big Then big = area<br>                    End If<br>                Next<br>            Next<br>        Next<br> <br>        Return big<br>    End Function<br> <br>End Class<br></td>