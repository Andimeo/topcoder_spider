<td class="problemText" colspan="8" valign="middle" align="left">
            // I think it is good to submit wrong solutions sometimes to give others challenging opportunities.<br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>#define LS &lt;<br>#define Size(x) (int(x.size()))<br>#define LET(k,val) typeof(val) k = (val)<br>// execute "act", and return "val" as an expression result<br>#define CLC(act,val) (*({act; static typeof(val) CLCR; CLCR = (val); &amp;CLCR;}))<br><br>// All macros with parameters "k,a,b" run the "k" variable in range [a,b)<br>#define FOR(k,a,b) for(typeof(a) k=(a); k LS (b); ++k)<br><br>// Standard mathematical quantifiers, plus tools to implement them<br>// find the first k in [a,b) that satisfies cond, or b if none<br>#define FIRST(k,a,b,cond) CLC(LET(k, a); for(; k LS (b); ++k) if(cond) break, k)<br>#define EXISTS(k,a,b,cond) (FIRST(k,a,b,cond) LS (b))<br><br>#line 3 "OneMorePoint.cc"<br><br>class OneMorePoint {<br>  public:<br>  string interiorPoint(vector &lt;string&gt; rectangles) {<br>    // !FDI<br>    int x1[60], y1[60], x2[60], y2[60];<br>    int N = Size(rectangles);<br>    FOR(k,0,N) sscanf(rectangles[k].c_str(), "%d%d%d%d", x1+k,y1+k,x2+k,y2+k);<br>    <br>    int ex[20000];<br>    FOR(l,0,20000) ex[l] = 0;<br>    FOR(l,0,N) ex[x1[l]] = ex[x2[l]] = ex[y1[l]] = ex[y2[l]] = 1;<br>    FOR(l,1,20000) ex[l] += ex[l-1];<br>    <br>    FOR(l,0,N) {<br>      x1[l]=ex[x1[l]]; y1[l]=ex[y1[l]]; <br>      x2[l]=ex[x2[l]]; y2[l]=ex[y2[l]];<br>      }                       <br>    <br>//  FOR(p,0,10) printf("%3d", ex[p]); printf("\n");<br>    int where[300][300];<br>    FOR(a,0,300) FOR(b,0,300) where[a][b] = 0;<br>    FOR(l,0,N) {<br>//    printf("%d,%d,%d,%d\n", x1[l],y1[l],x2[l],y2[l]);<br>      FOR(x,x1[l],x2[l]) FOR(y,y1[l],y2[l])<br>        where[x][y] |= 1;<br>      FOR(x,x2[l],300) FOR(y,y1[l],y2[l])<br>        where[x][y] |= 2;<br>      FOR(x,0,x1[l]) FOR(y,y1[l],y2[l])<br>        where[x][y] |= 4;<br>      FOR(x,x1[l],x2[l]) FOR(y,0,y1[l])<br>        where[x][y] |= 8;<br>      FOR(x,x1[l],x2[l]) FOR(y,y2[l],300)<br>        where[x][y] |= 16;<br>      }<br>    return EXISTS(x,0,300,EXISTS(y,0,300, where[x][y] == 30)) ? "YES" : "NO";<br>    }<br>  };<br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>