<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System<br>Imports System.Collections<br>Imports System.Math<br> <br>Public Class OneMorePoint<br>    Public Function interiorPoint(ByVal rectangles As String()) As String<br>        Dim i, j, k, l As Long<br> <br>        Dim aRect(rectangles.GetUpperBound(0), 1, 1) As Integer<br>        ' Index, Start/End, X/Y<br> <br>        Dim aX As New SortedList<br>        Dim aY As New SortedList<br>        Dim s() As String<br> <br>        For i = 0 To rectangles.GetUpperBound(0)<br>            s = rectangles(i).Split(" ")<br>            aRect(i, 0, 0) = CInt(s(0))<br>            aRect(i, 0, 1) = CInt(s(1))<br>            aRect(i, 1, 0) = CInt(s(2))<br>            aRect(i, 1, 1) = CInt(s(3))<br>        Next<br> <br>        For i = 0 To aRect.GetUpperBound(0)<br>            If Not aX.Contains(aRect(i, 0, 0)) Then aX.Add(aRect(i, 0, 0), Nothing)<br>            If Not aX.Contains(aRect(i, 1, 0)) Then aX.Add(aRect(i, 1, 0), Nothing)<br>            If Not aY.Contains(aRect(i, 0, 1)) Then aY.Add(aRect(i, 0, 1), Nothing)<br>            If Not aY.Contains(aRect(i, 1, 1)) Then aY.Add(aRect(i, 1, 1), Nothing)<br>        Next<br> <br>        For i = 0 To aX.Count - 1<br>            aX(aX.GetKey(i)) = i<br>        Next<br> <br>        For i = 0 To aY.Count - 1<br>            aY(aY.GetKey(i)) = i<br>        Next<br> <br>        For i = 0 To aRect.GetUpperBound(0)<br>            aRect(i, 0, 0) = aX(aRect(i, 0, 0))<br>            aRect(i, 1, 0) = aX(aRect(i, 1, 0))<br>            aRect(i, 0, 1) = aY(aRect(i, 0, 1))<br>            aRect(i, 1, 1) = aY(aRect(i, 1, 1))<br>        Next<br> <br>        Dim bFacts(aX.Count - 2, aY.Count - 2, 4) As Boolean<br> <br>        For i = 0 To aRect.GetUpperBound(0)<br>            For j = aRect(i, 0, 0) To aRect(i, 1, 0) - 1<br>                For k = aRect(i, 0, 1) To aRect(i, 1, 1) - 1<br>                    bFacts(j, k, 0) = True<br>                Next<br>            Next<br> <br>            For j = aRect(i, 0, 0) To aRect(i, 1, 0) - 1<br>                For k = 0 To aRect(i, 0, 1) - 1<br>                    bFacts(j, k, 1) = True<br>                Next<br> <br>                For k = aRect(i, 1, 1) To aY.Count - 2<br>                    bFacts(j, k, 2) = True<br>                Next<br>            Next<br>            For k = aRect(i, 0, 1) To aRect(i, 1, 1) - 1<br>                For j = 0 To aRect(i, 0, 0) - 1<br>                    bFacts(j, k, 3) = True<br>                Next<br>                For j = aRect(i, 1, 0) To aX.Count - 2<br>                    bFacts(j, k, 4) = True<br>                Next<br>            Next<br>        Next<br> <br>        For j = 0 To aX.Count - 2<br>            For k = 0 To aY.Count - 2<br>                If Not bFacts(j, k, 0) And bFacts(j, k, 1) And bFacts(j, k, 2) And bFacts(j, k, 3) And bFacts(j, k, 4) Then Return "YES"<br>            Next<br>        Next<br> <br>        Return "NO"<br> <br>    End Function<br>End Class<br></td>