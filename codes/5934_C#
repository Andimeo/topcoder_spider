<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class ForceTest {<br>  const int INF = 1000000000;<br>  int[,,] best; <br>  int[,,] how; <br>  bool[,,] got;<br><br>  int go(int num, int choices, int extChoices)<br>  {<br>    if (num &lt; 0)<br>    {<br>      return INF;<br>    }<br>    if (choices &lt; 1)<br>      choices = 1;<br>    if (extChoices &lt; 1)<br>      extChoices = 1;<br><br>    if (!got[num, choices, extChoices])<br>    {<br>      int b = INF;<br>      int h = -1;<br>      if (extChoices == 1)<br>        b = 0;<br>      else {<br>        for (int k = 1; k &lt; extChoices; ++k)<br>        {<br>          int cur = 1 + Math.Max(go(num, choices - k, extChoices - k), go(num - 1, Math.Min(choices, k), Math.Max(choices, k)));<br>          if (cur &lt; b) <br>          {<br>            b = cur;<br>            h = k;<br>          }<br>        }<br>      }<br><br>      got[num, choices, extChoices] = true;<br>      best[num, choices, extChoices] = b;<br>      how[num, choices, extChoices] = h;<br>    }<br>    return best[num, choices, extChoices];<br>  }<br><br>  public int fewestTests(int maxForce, int testUnits) {<br>    best = new int[testUnits + 1, maxForce + 2, maxForce + 2];<br>    how = new int[testUnits + 1, maxForce + 2, maxForce + 2];<br>    got = new bool[testUnits + 1, maxForce + 2, maxForce + 2];<br><br>    return go(testUnits, maxForce + 1, maxForce + 1);<br>  }<br>  <br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>