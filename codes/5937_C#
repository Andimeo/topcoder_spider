<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>public class GroupingNumbers {<br>  int N;<br>  int[] num;<br>  double ans = 999999999.9;<br>  int[] group;<br>  int[] cou;<br>  <br>  private void check(int here) {<br>    if (here == num.Length) {      <br>      for (int j = 0; j &lt; N; j++) {<br>        if (cou[j] == 0) return ;<br>      }<br>      <br>      double high = ((double)group[0]) / cou[0], low = ((double)group[0]) / cou[0];<br>      for (int j = 1; j &lt; N; j++) {<br>        if ((((double)group[j]) / cou[j]) &gt; high) high = ((double)group[j]) / cou[j];<br>        if ((((double)group[j]) / cou[j]) &lt; low) low = ((double)group[j]) / cou[j];<br>      }<br>      if (Math.Abs(high - low) &lt; ans) {<br>        ans = Math.Abs(high - low);<br>      }<br>      <br>      return ;<br>    }<br>    for (int i = 0; i &lt; N; i++) {<br>      group[i] += num[here];<br>      cou[i]++;      <br>      check(here + 1);<br>      cou[i]--;<br>      group[i] -= num[here];<br>    }<br>  }<br>  <br>  private void put(int i, int j) {<br>    group[i] += num[j];<br>    cou[i]++;<br>  }<br>  <br>  private void pop(int i, int j) {<br>    group[i] -= num[j];<br>    cou[i]--;<br>  }<br>  <br>  public double minRange(int[] numbers, int n) {<br>    cou = new int[n];<br>    group = new int[n];    <br>    N = n;<br>    num = numbers;<br>    group[0] = num[0];<br>    cou[0] = 1;<br>    if (n &lt; 7) check(1);<br>    else {<br>      for (int i = 0; i &lt; N; i++) {<br>        put(i, 1);<br>        for (int j = 0; j &lt; N; j++) {<br>          put(j, 2);<br>          for (int k = 0; k &lt; N; k++) {<br>            put(k, 3);<br>            for (int l = 0; l &lt; N; l++) {<br>              put(l, 4);<br>              for (int m = 0; m &lt; N; m++) {<br>                put(m, 5);<br>                for (int nn = 0; nn &lt; N; nn++) {<br>                  put(nn, 6);<br>                  check(7);<br>                  pop(nn, 6);<br>                }<br>                pop(m, 5);<br>              }<br>              pop(l, 4);<br>            }<br>            pop(k, 3);<br>          }<br>          pop(j, 2);<br>        }<br>        pop(i, 1);<br>      }<br>    }<br>    <br>    return ans;<br>  }<br>}<br> <br>// Powered by PopsEdit<br></td>