<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;math.h&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;memory.h&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;queue&gt;<br> <br>using namespace std;<br> <br>#define vc vector<br>#define pb push_back<br>#define fr1(i,s,n) for (i=s;i&lt;n;i++)<br>#define fr(i,s,n) for (i=s;i&lt;=n;i++)<br>#define rt return<br>#define iss istringstream<br>#define oss ostringstream<br>#define isdigit(x) (x&gt;='0' &amp;&amp; x&lt;='9')<br>#define isup(x) (x&gt;='A' &amp;&amp; x&lt;='Z')<br>#define islow(x) (x&gt;='a' &amp;&amp; x&lt;='z')<br>#define iscase(x) (isup(x) || islow(x))<br>#define toup(x) x-'a'+'A'<br>#define tolow(x) x-'A'+'a'<br>#define abs(x) x&gt;0?x:-x<br>#define PQ priority_queue<br> <br>inline int bin(int x)<br>{<br>    return 1&lt;&lt;(x-1);<br>}<br> <br>class  GroupingNumbers{<br>    public:<br>        int n,m,a[15],id[15],s[15],num[15],tothave;<br>        double avr[15],best;<br>        void dfs(int dep)<br>        {<br>            int i;<br>            if (dep==n+1)<br>            {<br>                double max=-1e20,min=1e20;<br>                for (i=1;i&lt;=m;i++)<br>                if (num[i]==0) return;<br>                else<br>                {<br>                    if ((double)s[i]/num[i]&lt;min) min=(double)s[i]/num[i];<br>                    if ((double)s[i]/num[i]&gt;max) max=(double)s[i]/num[i];<br>                }<br>                if (max-min&lt;best) best=max-min;<br>            }else<br>            {<br>                if (m-tothave&gt;n-dep+1) return;<br>                for (i=1;i&lt;=m;i++)<br>                {<br>                    num[i]++;<br>                    if (num[i]==1) tothave++;<br>                    s[i]+=a[dep];<br>                    dfs(dep+1);<br>                    s[i]-=a[dep];<br>                    num[i]--;<br>                    if (num[i]==0) tothave--;<br>                }<br>            }<br>        }<br>        double minRange(vector &lt;int&gt; ss, int N)<br>        {<br>            int i;<br>            best=1e20;<br>            tothave=0;<br>            m=N;<br>            n=ss.size();<br>            for (i=1;i&lt;=n;i++) a[i]=ss[i-1];<br>            memset(num,0,sizeof(num));<br>            memset(s,0,sizeof(s));<br>            dfs(1);<br>            return best;<br>        }<br>};<br></td>