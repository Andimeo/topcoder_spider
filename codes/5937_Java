<td class="problemText" colspan="8" valign="middle" align="left">
            public class GroupingNumbers{<br>  int[][] groups;<br>  int[] groupcount;<br>  int[] numbers;<br>  int n;<br>  double minDiff = Double.MAX_VALUE;<br>  <br>  void doit(int c){<br>    <br>    if(c == numbers.length){<br>      for(int i=0; i&lt;n; i++)<br>        if(groupcount[i] == 0 ) return;<br>      <br>      <br>      double maxAvg = Double.MIN_VALUE;<br>      double minAvg = Double.MAX_VALUE;<br>      <br>      for(int i=0; i&lt;n; i++){<br>        int tot = 0;<br>        for(int a=0; a&lt;groupcount[i]; a++) tot += groups[i][a];<br>        double avg = tot / (double)groupcount[i];<br>        maxAvg = Math.max(maxAvg, avg);<br>        minAvg = Math.min(minAvg, avg);<br>      }<br>      <br>      double diff = maxAvg - minAvg;<br>      minDiff = Math.min(minDiff, diff);<br>      return;<br>    }<br>    <br>    for(int i=0; i&lt;n; i++){<br>      groups[i][groupcount[i]] = numbers[c];<br>      groupcount[i]++;<br>      <br>      int empty = 0;<br>      for(int a=0; a&lt;n; a++) if(groupcount[a] == 0) empty++;<br> <br>      if(empty &gt; numbers.length - (i+1)) ;<br>      else doit(c+1);<br> <br>      groupcount[i]--;<br>      groups[i][groupcount[i]] = 0;<br>    }<br>    return;<br>  }<br>  <br>  <br>  public double minRange(int[] numbers, int n){<br>    this.groups = new int[n][9];<br>    this.groupcount = new int[n];<br>    this.numbers = numbers;<br>    this.n = n;<br>    doit(0);    <br>    return minDiff;<br>  }<br>}<br></td>