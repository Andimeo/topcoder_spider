<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;set&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;map&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cctype&gt;<br>using namespace std;<br> <br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;string&gt; vs;<br>typedef long long ii;<br>#define si size()<br>#define s(x) sort((x).begin(), (x).end())<br> <br>int lc[1000];<br>class VolumeDiscount {<br>  public:<br>  int bestDeal(vector &lt;string&gt; priceList, int quantity) {<br>    vi amt; vi pr;<br>    for (int i = 0; i &lt; priceList.si; i++) {<br>      int a, p;<br>      sscanf(priceList[i].c_str(), "%d %d", &amp;a, &amp;p);<br>      amt.push_back(a);<br>      pr.push_back(p);<br>    }<br>    <br>    for (int i = 0; i &lt; 1000; i++) lc[i] = 1000000000;<br>    lc[0] = 0;<br>    for (int i = 0; i &lt; 400; i++) {<br>      for (int j = 0; j &lt; amt.si; j++)<br>      lc[i+amt[j]] &lt;?= lc[i] + pr[j];<br>    }<br>    int best = 1000000000;<br>    for (int i = quantity; i &lt; 400; i++) best &lt;?= lc[i];<br>    return best;<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>