<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class Equidistance {<br>  int[] in;<br>  <br>  public long minimumEffort(int[] initial) {<br>    in=initial;<br>    Arrays.sort(in);<br>    <br>    long min=1L;<br>    long max=200000000000L;<br>    while(max-min&gt;2){<br>      long p1=min+(max-min)/3;<br>      long p2=min+2*(max-min)/3;<br>      long r1=go(p1);<br>      long r2=go(p2);<br>      if(r1&lt;r2) max=p2;<br>      else min=p1;<br>    }<br>    return Math.min(go(max),Math.min(go(min),go((max+min)/2)));<br>    <br>  }<br>  <br>  public long go(long dist){<br>    long min=-200000000000L;<br>    long max=200000000000L;<br>    while(max-min&gt;2){<br>      long p1=min+(max-min)/3;<br>      long p2=min+2*(max-min)/3;<br>      long r1=go(p1,dist);<br>      long r2=go(p2,dist);<br>      if(r1&lt;r2) max=p2;<br>      else min=p1;<br>    }<br>    return Math.min(go(max,dist),Math.min(go(min,dist),go((max+min)/2,dist)));<br>    <br>    <br>  }<br>  public long go(long pos1,long dist){<br>    long ret=0;<br>    for(int i=0;i&lt;in.length;++i){<br>      ret+= Math.abs(in[i]-pos1);<br>      pos1 += dist;<br>    }<br>    return ret;<br>  }<br>}<br> <br>// Powered by PopsEdit<br></td>