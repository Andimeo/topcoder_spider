<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cassert&gt;<br>#include &lt;numeric&gt;<br>#include &lt;algorithm&gt;<br> <br>using namespace std;<br> <br>typedef vector&lt;int&gt; vi;<br> <br>#define For(i,a,b) for(int i=(a); i&lt;=(b); i++)<br>#define Rep(i,n) for(int i=0; i&lt;(n); i++)<br>#define Size(x) (int(x.size()))<br>#define Fil(a) memset(&amp;a,0,sizeof(a))<br>#define All(v) (v).begin(),(v).end()<br> <br>const int maxval=1200;<br>const int inf=1000000;<br>int dp[60][60][maxval+1];<br> <br>struct Distincter<br>{<br>  int disperse(vi seq,int k)<br>  {<br>    int n=Size(seq);<br>    sort(All(seq));<br>    Rep(i,Size(seq)) seq[i]+=55;<br>    Rep(i,60) Rep(j,60) For(t,0,maxval) dp[i][j][t]=inf;<br>    For(i,0,maxval) <br>    {<br>      dp[0][1][i]=abs(i-seq[0]);<br>      if(i&gt;0) dp[0][1][i]&lt;?=dp[0][1][i-1];<br>    }<br>    For(i,1,n-1) For(j,0,n) For(t,0,maxval)<br>    {<br>      dp[i][j][t]=inf;<br>      if(t&gt;0 &amp;&amp; j&gt;0) dp[i][j][t]&lt;?=abs(t-seq[i])+dp[i-1][j-1][t-1];<br>      dp[i][j][t]&lt;?=abs(t-seq[i])+dp[i-1][j][t];<br>      if(t&gt;0) dp[i][j][t]&lt;?=dp[i][j][t-1];<br>    }<br>    int res=inf;<br>    For(j,k,n) For(t,0,maxval) res&lt;?=dp[n-1][j][t];<br>    return res;<br>  }<br>};<br></td>