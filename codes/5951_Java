<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class Distincter {<br>    public int disperse(int[] sequence, int K) {<br>        int n = sequence.length;<br>        Arrays.sort(sequence);<br>        for (int i = 0; i &lt; n; i++) {<br>            sequence[i] += 999;<br>        }<br>        int[][][] a = new int[n][3000][K];<br>        for (int j = 0; j &lt; 3000; j++) {<br>            a[0][j][0] = Math.abs(sequence[0] - j);<br>            for (int k = 1; k &lt; K; k++) {<br>                a[0][j][k] = 1000000000;<br>            }<br>        }<br>        for (int i = 1; i &lt; n; i++) {<br>            for (int k = 0; k &lt; K; k++) {<br>                int bests = Integer.MAX_VALUE;<br>                for (int j = 0; j &lt; 3000; j++) {<br>                    int d = Math.abs(sequence[i] - j);<br>                    a[i][j][k] = Math.min(a[i - 1][j][k], bests) + d;<br>                    if (k &gt; 0) {<br>                        bests = Math.min(bests, a[i - 1][j][k - 1]);<br>                    } else {<br>                        bests = Math.min(bests, a[i - 1][j][k]);<br>                    }<br>                }<br>            }<br>        }<br> <br>        int best = Integer.MAX_VALUE;<br>        int bestj = -1;<br>        for (int j = 0; j &lt; 3000; j++) {<br>            if (a[n - 1][j][K - 1] &lt; best) {<br>                best = a[n - 1][j][K - 1];<br>                bestj = j;<br>            }<br>        }<br>        return best;<br>    }<br> <br> <br>}<br> <br> <br>// Powered by PopsEdit<br> <br>// Powered by CodeProcessor<br></td>