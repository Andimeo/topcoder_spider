<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class RobotTesting<br>{<br>  int[,] ans;<br>  int dx = 0, dy = 0;<br>  int maxdx = 0, maxdy = 0, mindx = 0, mindy = 0;<br>  int N, cs;<br>  string cmd;<br> <br>  public double go( int x, int y ) {<br>    if ( x &lt; 0 || y &lt; 0 || x &gt;= N || y &gt;= N ) return 0;<br>    if ( (double) ans[x,y] &gt; 0 ) return ans[x,y];<br>    <br>    ans[x,y] = 50000;<br>    int step = 0;<br>//    Console.WriteLine ( x + " " + y + " " + mindx + " " + mindy + " " + maxdx + " " + maxdy );<br>    if ( x + mindx &lt; 0 || y + mindy &lt; 0 || x + maxdx &gt;= N || y + maxdy &gt;= N ) {<br>      int nx = x, ny = y, i = 0;<br>      while ( nx &gt;= 0 &amp;&amp; nx &lt; N &amp;&amp; ny &gt;= 0 &amp;&amp; ny &lt; N ) {<br>        switch ( cmd[i] ) {<br>          case 'R': nx++; break;<br>          case 'L': nx--; break;<br>          case 'U': ny++; break;<br>          case 'D': ny--; break;<br>        };<br>        step++;<br>        i = ( i + 1 ) % cs;<br>        if ( step &gt;= 50000 ) break;<br>      }<br>      step = (int) Math.Min( step, 50000 );<br>    }<br>    else {<br>      step = (int) Math.Min( go( x + dx, y + dy ) + cs, 50000 );<br>    }<br>    <br>    return (double)( ans[x,y] = step );<br>  }<br> <br>  public double estimateCommands(int Na, string program)<br>  {<br>    cmd = program;<br>    cs = cmd.Length;<br>    N = Na;<br>    ans = new int[N,N];<br>    for ( int i = 0; i &lt; N; i++ ) for ( int j = 0; j &lt; N; j++ ) ans[i,j] = -1;<br>    <br>    for ( int i = 0; i &lt; program.Length; i++ ) {<br>      switch ( program[i] ) {<br>        case 'R': dx++; break;<br>        case 'L': dx--; break;<br>        case 'U': dy++; break;<br>        case 'D': dy--; break;<br>      };<br>      maxdx = Math.Max( maxdx, dx );<br>      maxdy = Math.Max( maxdy, dy );<br>      mindy = Math.Min( mindy, dy );<br>      mindx = Math.Min( mindx, dx );<br>    }<br> <br>    double sum = 0.0;<br>    for ( int i = 0; i &lt; N; i++ )<br>      for ( int j = 0; j &lt; N; j++ ) <br>        sum += go( i, j );<br>//        Console.WriteLine( i + " " + j + " " + go( i, j ) );<br>      <br>    return sum / (double)( N * N );<br>  }<br>  <br>}<br> <br>//Powered by [KawigiEdit]<br></td>