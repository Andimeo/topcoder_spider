<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;cstring&gt;<br>using namespace std;<br>#define S program<br>int l,n;<br>char s[128];<br>int mm[1024][1024];<br>int dfs(int x0,int y0)<br>{<br>  int i,x=x0,y=y0;<br>  if(mm[x][y]&gt;=0)return mm[x][y];<br>  for(i=0;i&lt;l;i++)<br>  {<br>    switch(s[i])<br>    {<br>    case 'U':y--;break;<br>    case 'D':y++;break;<br>    case 'L':x--;break;<br>    case 'R':x++;break;<br>    }<br>    if(x&lt;0||x&gt;=n||y&lt;0||y&gt;=n)return mm[x0][y0]=i+1;<br>  }<br>  if(x==x0&amp;&amp;y==y0)return mm[x0][y0]=50000;<br>  int d=l+dfs(x,y);<br>  if(d&gt;50000)d=50000;<br>  return mm[x0][y0]=d;<br>}<br>struct RobotTesting{<br>double estimateCommands(int N, string program)<br>{<br>  int i,j;<br>  double tot;<br>  l=S.length();strcpy(s,S.c_str());n=N;<br>  memset(mm,255,sizeof(mm));<br>  tot=0;<br>  for(i=0;i&lt;N;i++)<br>    for(j=0;j&lt;N;j++)<br>      tot+=dfs(i,j);<br>  return tot/N/N;<br>}<br>};<br></td>