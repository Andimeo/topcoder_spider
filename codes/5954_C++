<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;stack&gt;<br>#include &lt;list&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iterator&gt;<br>#include &lt;numeric&gt;<br>using namespace std;<br> <br>#define MP(a,b) make_pair(a,b)<br>#define ST first<br>#define ND second<br> <br>typedef vector &lt;int &gt; VI;<br>#define REP(i,n) for (int i=0; i&lt;n; ++i)<br>#define FOREACH(it,x) for(__typeof((x).begin()) it=(x.begin()); it!=(x).end(); ++it)<br>#define FOR(i,p,k) for (int i=p; i&lt;=k; ++i)<br>#define PB push_back<br>#define SIZE(x) (int)x.size()<br> <br>const int N=60,K=('z'-'a')+1;<br>string t[N][K];<br>vector&lt;pair&lt;string,int&gt; &gt; kraw[K];<br>int last[N];<br> <br>    class StickedWords<br>        { <br>        public: <br>        string constructLine(vector &lt;string&gt; dict, int len){ <br>              int n=SIZE(dict);<br>              REP(i,N) REP(j,K) t[i][j]="{";<br>              REP(i,n) last[i]=dict[i][SIZE(dict[i])-1]-'a';<br>              REP(i,n) t[SIZE(dict[i])][last[i]]=min(t[SIZE(dict[i])][last[i]],dict[i]);<br>              REP(i,n) kraw[dict[i][0]-'a'].PB(MP(dict[i].substr(1),last[i]));<br>              string res="";<br>              FOR(i,1,len+N){<br>                int nr=i%N;<br>                REP(j,K) if (t[nr][j]!="{"){<br>                  string s=t[nr][j];<br>                  if (i&gt;=len &amp;&amp; (res=="" || res&gt;s))  res=s;<br>                  FOREACH(it,kraw[j]) t[(nr+SIZE(it-&gt;ST))%N][it-&gt;ND]=min(t[(nr+SIZE(it-&gt;ST))%N][it-&gt;ND],s+it-&gt;ST);<br>                  t[nr][j]="{";<br>                }<br>              }<br>              return res;<br>            } <br>        <br> <br>         }; <br> <br>    <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>