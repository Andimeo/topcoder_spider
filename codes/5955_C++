<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>typedef long long __int64;<br> <br>const int maxsize=20000+5;<br> <br>int A[maxsize],f[maxsize];<br> <br>class LogCutter<br>{<br>public:<br>  int n,L,limit;<br>  bool check(int M,int &amp;fC)<br>  {<br>    int i;<br>    A[n+1]=L;<br>    for (i=1;i&lt;=n;i++)<br>      if (A[i+1]-A[i]&gt;M)<br>        return false;<br>    f[n+1]=0;<br>    int k=n+1;<br>    for (i=n;i&gt;0;i--)<br>    {<br>      for (;A[k]-A[i]&gt;M;k--);<br>      f[i]=f[k]+1;<br>    }<br>    for (i=1;i&lt;=n;i++)<br>      if (A[i]&lt;=M &amp;&amp; f[i]&lt;=limit)<br>      {<br>        fC=A[i];<br>        return true;<br>      }<br>    return false;<br>  }<br>  string bestCut(int _L, int _A, int _n, int C)<br>  {<br>    int i;<br>    n=_n;<br>    L=_L;<br>    limit=C;<br>    for (i=1;i&lt;=n;i++)<br>    {<br>      __int64 B=_A;<br>      B=B*i;<br>      B=B%(L-1)+1;<br>      A[i]=(int)(B);<br>    }<br>    sort(A+1,A+n+1);<br>    int size=n;<br>    n=0;<br>    for (i=1;i&lt;=size;i++)<br>      if (i==1 || A[i]!=A[i-1])<br>        A[++n]=A[i];<br>    int H=0,T=L+1;<br>    for (;H+1&lt;T;)<br>    {<br>      int M=(H+T)/2,fC;<br>      if (check(M,fC))<br>        T=M;<br>      else<br>        H=M;<br>    }<br>    int rT;<br>    check(T,rT);<br>    char s[100];<br>    sprintf(s,"%d %d",T,rT);<br>    return s;<br>  }<br>};<br></td>