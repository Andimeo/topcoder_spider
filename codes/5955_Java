<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class LogCutter {<br>    public String bestCut(int L, int A, int K, int C) {<br>        long [] x = new long[K + 1];<br>        x[0] = 0;<br>        for (int i = 1; i &lt;= K; i++) {<br>            x[i] = ((1L * A * i) % (L - 1)) + 1;<br>        }<br> <br>        Arrays.sort(x);<br> <br>        long l = 0;<br>        long r = L;<br>        while (l &lt; r - 1) {<br>            long m = (l + r) / 2;<br>            int t = 0;<br>            long  p = L;<br>            for (int i = K; i &gt; 0; i--) {<br>                if (p - x[i] &gt; m) {<br>                    t = C + 1;<br>                }<br>                if (p - x[i - 1] &gt; m) {<br>                    t++;<br>                    p = x[i];<br>                }<br>            }<br> <br>            if (p &gt; m) {<br>                t = C + 1;<br>            }<br> <br>            if (t &lt;= C) {<br>                r = m;<br>            } else {<br>                l = m;<br>            }<br>        }<br> <br>        int t = 0;<br>        long p = L;<br>        for (int i = K; i &gt; 0; i--) {<br>            if (p - x[i] &gt; r) {<br>                t = C + 1;<br>            }<br>            if (p - x[i - 1] &gt; r) {<br>                t++;<br>                p = x[i];<br>            }<br>        }<br> <br>        long f = p;<br>        if (t &lt; C) {<br>            f = x[1];<br>        }<br> <br>        String ans = r + " " + f;<br>        return ans;<br>    }<br> <br> <br>}<br> <br> <br>// Powered by PopsEdit<br> <br>// Powered by CodeProcessor<br></td>