<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class PairwiseSums {<br>    int[] res;<br>    int n;<br>    int countHyp(int[] hyp, int[] cntr, int level) {<br>        if(level==n) {<br>            for(int i =0; i&lt;n; i++) res[i] = hyp[i];<br>            return 1;<br>        }<br>        int min = 0;<br>        if(level&gt;0) {<br>            min=hyp[level-1];<br>        }<br>        int count = 0;<br>        for(int x = min; x&lt;=1000; x++) {<br>            int minv = 0;<br>            for(int i = 0; i&lt;cntr.length; i++) {<br>                if(cntr[i]&gt;0) {<br>                    minv = i;<br>                    break;<br>                }<br>            }<br>            if(level&gt;0 &amp;&amp; minv!=hyp[0]+x) continue;<br>            boolean ok = true;<br>            for(int i = 0; i&lt;level; i++) {<br>                int s = hyp[i]+x;<br>                cntr[s]--;<br>                if(cntr[s]&lt;0) ok = false;<br>            }<br>            if(ok) {<br>                hyp[level] = x;<br>                count += countHyp(hyp, cntr, level+1);<br>            }<br>            for(int i = 0; i&lt;level; i++) {<br>                int s = hyp[i]+x;<br>                cntr[s]++;<br>            }<br>        }<br>        return count;<br>    }<br>            <br>  public int[] reverse(String[] sums) {<br>        List num = new LinkedList();<br>        int[] cntr = new int[3001];<br>        for(int i = 0; i&lt;sums.length; i++) {<br>            String[] sp = sums[i].split(" ");<br>            for (int j = 0; j &lt; sp.length; j++) {<br>                num.add(new Integer(sp[j]));<br>                cntr[Integer.parseInt(sp[j])]++;<br>            }<br>        }<br>        <br>        Collections.sort(num);<br>        n = -1;<br>        for(int x = 0; x&lt;100; x++) {<br>            if(x*(x-1)/2==num.size()) n = x;<br>        }<br>        if(n&lt;0) return new int[]{};<br>        int[] hyp = new int[n];<br>        res = new int[n];<br>        int cnt = countHyp(hyp, cntr, 0);<br>    if(cnt==1) return res;<br>        return new int[]{};<br>  }<br> <br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>