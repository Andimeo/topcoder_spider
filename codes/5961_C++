<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cctype&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;utility&gt;<br>#include &lt;numeric&gt;<br>#include &lt;complex&gt;<br> <br>using namespace std;<br> <br>int fact[] = {1, 1, 2, 6};<br> <br>int gcd(int a, int b)<br>{<br>  int tmp;<br>  while (a != 0)<br>    {<br>      tmp = a;<br>      a = b % a;<br>      b = tmp;<br>    }<br>  return b;<br>}<br> <br>int phi(int m)<br>{<br>  int ans = 0;<br>  for (int i = 1; i &lt;= m; i++)<br>    if (gcd(i, m) == 1)<br>      ans++;<br>  return ans;<br>}<br> <br>int mfact(int a, int m)<br>{<br>  if (a &gt;= m) return 0;<br>  int ans = 1;<br>  for (int i = 1; i &lt;= a; i++)<br>    ans = ans * i % m;<br>  return ans;<br>}<br> <br>vector &lt;int&gt; go(vector &lt;int&gt; a, int m)<br>{<br>  vector &lt;int&gt; ans(2);<br>  if (m == 1) return ans;<br>  ans[0] = mfact(a[0], m);<br>  if (a.size() == 1)<br>    {<br>      if (a[0] &lt; 4) ans[1] = fact[a[0]];<br>      else ans[1] = -1;<br>      return ans;<br>    }<br>  vector &lt;int&gt; b(a.begin()+1, a.end());<br>  vector &lt;int&gt; rest = go(b, phi(m));<br>  int c = ans[0];<br>  ans[0] = 1;<br>  if (rest[1] &gt; 0)<br>    {<br>      for (int i = 0; i &lt; rest[1]; i++)<br>  {<br>    ans[0] = ans[0] * c;<br>    if (ans[0] &gt; 20)<br>      {<br>        ans[1] = -1;<br>        ans[0] %= m;<br>      }<br>  }<br>      if (ans[1] != -1) ans[1] = ans[0];<br>      ans[0] %= m;<br>      return ans;<br>    }<br>  <br>  ans[1] = -1;<br>  while (rest[0] &lt; 20) rest[0] += phi(m);<br>  for (int i = 0; i &lt; rest[0]; i++)<br>    ans[0] = ans[0] * c % m;<br>  return ans;<br>}<br> <br>class FactorialTower {<br>  public:<br>  int exprValue(vector &lt;int&gt; a, int m) {<br> <br>    vector &lt;int&gt; b;<br>    for (int i = 0; i &lt; a.size(); i++)<br>      {<br>        if (a[i] == 0 || a[i] == 1)<br>    break;<br>        else<br>    b.push_back(a[i]);<br>      }<br>    if (b.size() == 0) return 1 % m;<br>    return go(b, m)[0];<br>    <br>  }<br>};<br> <br> <br>// Powered by FileEdit<br></td>