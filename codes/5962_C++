<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cctype&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cassert&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstring&gt;<br>#include &lt;complex&gt;<br><br>using namespace std;<br><br>const int oo = 1000000000;<br>const double eps = 1e-9;<br>const double Pi = 2.0 * acos(0.0);<br><br>typedef complex&lt;double&gt;  tComp;<br>typedef vector&lt;int&gt;  VI;<br>typedef vector&lt;VI&gt;  VVI;<br>typedef pair&lt;int,int&gt;  PII;<br>typedef vector&lt;PII&gt;  VPII;<br>typedef vector&lt;VPII&gt;  VVPII;<br><br>class BrokenClock { public: int fewestClicks(string clockTime, string currentTime); };<br><br><br>int BrokenClock::fewestClicks(string clockTime, string currentTime)<br>{<br>  int h, m;<br>  int a, b;<br>  sscanf(clockTime.c_str(), "%d:%d", &amp;h, &amp;m);<br>  sscanf(currentTime.c_str(), "%d:%d", &amp;a, &amp;b);<br>  int res = a - h;<br>  if (res &lt; 0)<br>    res += 24;<br>  m = (res + m) % 60;<br>  int tmp = b - m;<br>  if (tmp &lt; 0)<br>    tmp += 60;<br>  return res + tmp;<br>}<br><br><br>// Powered by FileEdit<br></td>