<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class GalaxyTrip {<br>  static int n, k;<br>  static boolean[][] a;<br>  static boolean[] was;<br>  <br>  static void dfs(int i) {<br>    k++;<br>    was[i] = true;<br>    for (int j= 0; j &lt; n; j++)<br>      if (a[i][j] &amp; !was[j]) <br>        dfs(j);<br>  }<br> <br>  public static int[] possibleValues(String[] dep) {    <br>    n = dep.length;<br>    a = new boolean[n][n];<br>     was = new boolean[n];<br>    int i, j;<br>    StringTokenizer s;<br>    for (i = 0; i &lt; n; i++) {<br>      s = new StringTokenizer(dep[i]);<br>      while (s.hasMoreTokens()) {<br>        j = Integer.parseInt(s.nextToken());<br>        a[i][j] = true;<br>      }<br>    }<br> <br>    int[] x = new int[n];<br>    int cnt = 0;<br>    for (i = 0; i &lt; n; i++) <br>      if (!was[i]) {<br>        k = 0;<br>        dfs(i);<br>        x[cnt++] = k;<br>      }<br>    boolean[] f = new boolean[n+1];<br>    f[0] = true;    <br>    for (i = 0; i &lt; cnt; i++)    <br>      for (j = n; j &gt;= 0; j--)<br>        if (f[j])<br>          f[j+x[i]] = true;<br>    int[] ans;<br>    k = 0;<br>    for (j = 1; j &lt;= n; j++)<br>      if (f[j]) <br>         k++;<br>    ans = new int[k];<br>    k = 0;<br>    for (j = 1; j &lt;= n; j++)<br>      if (f[j])<br>        ans[k++] = j;<br>    return ans;        <br>    <br>  }<br>  <br>  <br>  public static void main(String[] args) {<br>    // TODO Auto-generated method stub<br> <br>    String[] s = {"1 2", "0", "0", ""};<br>    possibleValues(s);<br>  }<br> <br>}<br></td>