<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class IntegerGenerator {<br>  const string INVALID_INPUT = "INVALID INPUT";<br><br>  public string nextInteger(int[] allowed, string current) {<br>    if (current[0] == '0')<br>      return INVALID_INPUT;<br><br>    Array.Sort(allowed);<br><br>    int state = 1;<br>    string result = "";<br><br>    for (int i = current.Length - 1; i &gt;= 0; --i)<br>    {<br>      int index = Array.BinarySearch(allowed, current[i] - '0');<br>      if (index &lt; 0)<br>        return INVALID_INPUT;<br>      switch (state)<br>      {<br>        case 1:<br>          if (index == allowed.Length - 1)<br>            result = (char) ('0' + allowed[0]) + result;<br>          else<br>          {<br>            result = (char) ('0' + allowed[index + 1]) + result;<br>            state = 2;<br>          }<br>          break;<br><br>        case 2:<br>          result = current[i] + result;<br>          break;<br>      }<br>    }<br><br>    if (state == 1)<br>      if (allowed[0] == 0)<br>        result = (char) ('0' + allowed[1]) + result;<br>      else<br>        result = (char) ('0' + allowed[0]) + result;<br><br>    return result;<br>  }<br>  <br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>