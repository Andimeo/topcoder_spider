<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;string&gt;<br>using namespace std;<br> <br>  long f[151][151][151];<br> <br>struct FixedSizeSums {<br> <br>  void work1() {<br>    long i,j,k,sum,count,re;<br>    memset(f, 0, sizeof(f));<br>    for(i=0;i&lt;=150;i++)f[0][0][i]=1;<br>    for(sum=1;sum&lt;=150;sum++){<br>      for(count=1;count&lt;=150;count++){<br>        for(re=1; re&lt;=150; re++) {<br>          f[sum][count][re] += f[sum][count][re-1];<br>          if(sum-re&gt;=0&amp;&amp;count-1&gt;=0)f[sum][count][re] += f[sum-re][count-1][re];<br>        }<br>      }<br>    }<br>  }<br>  string kthElement(int sum, int count, int index) {<br>    work1();<br>    long i,j,k,fa=sum;<br>    char re[10000];<br>    memset(re, 0, sizeof(re));<br>    <br>    if(f[sum][count][sum]&lt;=index) return "";<br> <br>    sprintf(re+strlen(re),"%ld=", sum);<br> <br>    for(; count&gt;=1; count--){<br>      for(i=fa;i&gt;=2;i--){<br>        k = f[sum][count][i] - f[sum][count][i-1];<br>        if(index-k&lt;0)break;<br>        index-=k;<br>      }<br>      fa = i;<br>      sprintf(re+strlen(re),"%ld", fa);<br>      if(count&gt;1) sprintf(re+strlen(re),"+");<br>      sum -= fa;<br>    }<br>    return re;<br>  }<br>};<br></td>