<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br> <br> <br>public class BobTrouble {<br> <br>  <br>  String BOB = "BOB";<br> <br>  public int minSupers(String[] name, String[] bossName) {<br>    <br>    <br>    <br>    <br>    <br>    <br>    <br>    <br>    int min = 10000;<br>    for (int i = 0; i &lt; name.length; i++) {<br>      min = Math.min(min, comp(name, bossName, i));<br>    }<br>    return min &gt; 1000 ? -1 : min;<br>  }<br>  <br>  int comp(String[] name, String[] bossName, int b) {<br>    int[] supervisor = new int[name.length];<br>    for (int i = 0; i &lt; name.length; i++) {<br>      if (bossName[i].equals(BOB)) {<br>        if (!name[b].equals(BOB)) {<br>          return 10000;<br>        }<br>        supervisor[i] = b;<br>      } else if (bossName[i].equals("*")) {<br>        supervisor[i] = -1;<br>      } else {<br>        supervisor[i] = find(bossName[i], name);<br>      }<br>    }<br>    for (int i = 0; i &lt; name.length; i++) {<br>      if (cycle(supervisor, i)) {<br> <br>        return 10000;<br>      }<br>    }<br>    boolean[] isSuper = new boolean[name.length];<br>    for (int i = 0; i &lt; supervisor.length; i++) {<br>      if (supervisor[i] != -1) {<br>        isSuper[supervisor[i]] = true;<br>      }<br>    }<br>    int count = 0;<br>    for (int i = 0; i &lt; isSuper.length; i++) {<br>      if (isSuper[i]) {<br>        count++;<br>      }<br>    }<br>    return count;<br>  }<br>  <br>  boolean cycle(int[] supervisor, int s) {<br>    for (int i = 0; i &lt; 100; i++) {<br>      s = supervisor[s];<br>      if (s == -1) return false;<br>    }<br>    return true;<br>  }<br>  <br>  int find(String name, String[] names) {<br>    for (int i = 0; i &lt; names.length; i++) {<br>      if (names[i].equals(name)) {<br>        return i;<br>      }<br>    }<br>    return -1;<br>  }<br> <br> <br> <br>}<br> <br> <br> <br> <br> <br>// Powered by CodeProcessor<br></td>