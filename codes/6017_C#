<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class InfiniteSoup {<br>  public int[] countRays(string[] g, string[] words, int K) {<br>    int R = g.Length;<br>    int C = g[0].Length;<br>    int n = words.Length;<br>    int[,,] am = new int[R, C, n];<br>    int[][] l = new int[n][];<br>    for (int i = 0; i &lt; n; ++i)<br>      l[i] = getKMP(words[i]);<br>    for (int i = 0; i &lt; R; ++i)<br>      for (int j = 0; j &lt; C; ++j)<br>      {<br>        int r = 0;<br>        int c = 0;<br>        for (int k = 0; k &lt; n; ++k)<br>        {<br>          int at = 0;<br>          int num = 2 * plen(i, j, R, C) + words[k].Length;<br>          for (int m = 0; m &lt; num; ++m) <br>          {<br>            char ch = g[r][c];<br>            r = (r + i) % R;<br>            c = (c + j) % C;<br>            while (true)<br>            {<br>              if (words[k][at] == ch)<br>              {<br>                ++at;<br>                break;<br>              }<br>              if (at == 0)<br>              {<br>                break;<br>              }<br>              at = l[k][at];<br>            }<br>            if (at == words[k].Length)<br>            {<br>              ++am[i, j, k];<br>              break;<br>            }<br>          }<br>        }<br>      }<br><br>    int[] res = new int[n];<br>    for (int i = 0; i &lt;= K; ++i)<br>      for (int j = 0; j &lt;= K; ++j)<br>        if (i &gt; 0 || j &gt; 0)<br>          if (gcd(i, j) == 1)<br>          {<br>            for (int k = 0; k &lt; n; ++k)<br>              res[k] += am[i % R, j % C, k];<br>          }<br>    return res;<br>  }<br><br>  private int plen(int i, int j, int r, int c)<br>  {<br>    int nr = r / gcd(i, r);<br>    int nc = c / gcd(j, c);<br>    return nr * nc / gcd(nr, nc);<br>  }<br><br>  private int gcd(int a, int b)<br>  {<br>    while (a &gt; 0 &amp;&amp; b &gt; 0)<br>      if (a &gt; b) a %= b; else b %= a;<br>    return a + b;<br>  }<br><br>  private int[] getKMP(string s)<br>  {<br>    int[] res = new int[s.Length + 1];<br>    res[0] = 0;<br>    res[1] = 0;<br>    for (int i = 2; i &lt;= s.Length; ++i)<br>    {<br>      int j = res[i - 1];<br>      int ch = s[i - 1];<br>      while (true)<br>      {<br>        if (s[j] == ch)<br>        {<br>          res[i] = j + 1;<br>          break;<br>        }<br>        if (j == 0)<br>        {<br>          res[i] = 0;<br>          break;<br>        }<br>        j = res[j];<br>      }<br>    }<br>    return res;<br>  }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>