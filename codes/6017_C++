<td class="problemText" colspan="8" valign="middle" align="left">
            // I think it is good to submit wrong solutions sometimes to give others challenging opportunities.<br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>typedef long long ll;<br>typedef vector&lt;int&gt; vi;<br><br>#define LS &lt;<br>#define Size(x) (int(x.size()))<br><br>// All macros with parameters "k,a,b" run the "k" variable in range [a,b)<br>#define FOR(k,a,b) for(typeof(a) k=(a); k LS (b); ++k)<br><br>// Greatest Common Divisor<br>ll gcd(ll x, ll y) {return x ? gcd(y%x,x) : y;}<br><br>#line 3 "InfiniteSoup.cc"<br><br>class InfiniteSoup {<br>  public:<br>  vector &lt;int&gt; countRays(vector &lt;string&gt; g, vector &lt;string&gt; words, int k) {<br>    // !FDI<br>    int cnt[35][35];<br>    int X = Size(g[0]);<br>    int Y = Size(g);<br>    FOR(x,0,X) FOR(y,0,Y) cnt[y][x] = 0;<br>    FOR(x,0,k+1) FOR(y,0,k+1) if(x+y) if(gcd(x,y) == 1)<br>      cnt[y%Y][x%X] ++;<br>    vi res;<br>    FOR(w,0,Size(words)) {<br>      int score = 0;<br><br>      string wd = words[w]; int wc = Size(wd);<br><br>      int old[60];<br>      old[0] = 0;<br>      FOR(t,0,Size(wd)) FOR(q,0,t)<br>        if(wd.substr(0,q) == wd.substr(t-q,q)) old[t] = q;<br>      printf("%s: ", wd.c_str());<br>      FOR(t,0,Size(wd)) printf("%d ", old[t]); printf("\n");<br>      fflush(stdout);<br>      FOR(x,0,X) FOR(y,0,Y) if(cnt[y][x]) {<br>        int at = 0;<br>        int c = 0;<br>        int px = 0;<br>        int py = 0;<br>        while(1) {<br>          while(at &amp;&amp; g[py][px] != wd[at]) at = old[at];<br>          if(g[py][px] == wd[at]) at++;<br>          if(at == wc) {score += cnt[y][x]; break;}<br>          px += x; px %= X;<br>          py += y; py %= Y;<br>          if(c==0&amp;px==0&amp;py==0) c = 1;<br>          else if(c) {c++; if(c==wc+5) break;}<br>          }        <br>        }<br>      res.push_back(score);<br>      }<br>    return res;<br>    }<br>  };<br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>