<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cmath&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br> <br>template&lt;typename T&gt; inline int size(const T&amp; c) { return (int)c.size(); }<br> <br>typedef vector&lt;string&gt; vs;<br> <br>#define For(i, a, b) for (int i = (a); i &lt;= (b); ++i)<br>#define Ford(i, a, b) for (int i = (a); i &gt;= (b); --i)<br>#define Rep(i, n) for (int i = 0; i &lt; (n); ++i)<br>#define Repd(i, n) for (int i = (n)-1; i &gt;= 0; --i)<br> <br>int n, m;<br>bool canExit;<br>vs maze;<br>bool vis[64][64];<br> <br>void go(int i, int j) {<br>    if (i &lt; 0 || i &gt;= n || j &lt; 0 || j &gt;= m) {<br>        canExit = true;<br>        return;<br>    }<br>    if (maze[i][j] == '#') return;<br>    if (vis[i][j]) return;<br>    vis[i][j] = true;<br>    go(i-1, j);<br>    go(i+1, j);<br>    go(i, j-1);<br>    go(i, j+1);<br>}<br> <br>bool check(int si, int sj) {<br>    memset(vis, 0, sizeof(vis));<br>    canExit = false;<br>    go(si, sj);<br>    return !canExit;<br>}<br> <br>struct CageTheMonster {<br>    int capture(vs lab) {<br>        n = size(lab);<br>        m = size(lab[0]);<br>        int res = -1;<br>        Rep(i, n) Rep(j, m) if (lab[i][j] == '^') {<br>            Repd(mask, 1&lt;&lt;4) {<br>                int cnt = 0;<br>                int t = mask;<br>                while (t) {<br>                    ++cnt;<br>                    t &amp;= t-1;<br>                }<br>                if (res != -1 &amp;&amp; res &lt;= cnt) continue;<br>                maze = lab;<br>                if ((mask&amp;1) &amp;&amp; i&gt;0)<br>                    Rep(k, m) maze[i-1][k] = '#';<br>                if ((mask&amp;2) &amp;&amp; j&gt;0)<br>                    Rep(k, n) maze[k][j-1] = '#';<br>                if ((mask&amp;4) &amp;&amp; i+1&lt;n)<br>                    Rep(k, m) maze[i+1][k] = '#';<br>                if ((mask&amp;8) &amp;&amp; j+1&lt;m)<br>                    Rep(k, n) maze[k][j+1] = '#';<br>                if (check(i, j))<br>                    res = cnt;<br>            }<br>        }<br>        return res;<br>    }<br>};<br></td>