<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class FamilyTree {<br>  private HashMap&lt;String, Integer&gt; name2id;<br>  private boolean[][] parent;<br>  private boolean[][] desc;<br>  private boolean[][] diff;<br>  <br>  private int[] gender;<br>  private int[] color;<br>  ArrayList&lt;String&gt; names = new ArrayList&lt;String&gt;();<br>  <br>  private boolean colordfs(int i, int c) {    <br>    if (color[i] != 0) {<br>      return (color[i] == c);<br>    }    <br>    color[i] = c;<br>    for (int j = 0; j &lt; parent.length; j++) {<br>      if (diff[i][j]) {<br>        if (!colordfs(j, 3 - c)) {<br>          return false;<br>        }<br>      }<br>    }<br>    return true;<br>  }<br>  <br>  private boolean checkAndUpdate() {<br>    for (int i = 0; i &lt; parent.length; i++) {<br>      int count = 0;<br>      int tmp = -1;<br>      <br>      for (int j = 0; j &lt; parent.length; j++) {<br>        if (parent[i][j]) {          <br>          count++;<br>          if (tmp == -1) {<br>            tmp = j;<br>          }<br>          else {<br>            diff[tmp][j] = true;<br>            diff[j][tmp] = true;<br>          }<br>          <br>          if (desc[j][i] || (i == j)) {<br>            return false;<br>          }<br>        }<br>      }<br>      <br>      if (count &gt; 2) {<br>        return false;<br>      }<br>    }<br>    <br>    for (int i = 0; i &lt; parent.length; i++) {<br>      color[i] = 0;<br>    }    <br>    for (int i = 0; i &lt; parent.length; i++) {<br>      if (gender[i] != 0) {<br>        if (!colordfs(i, gender[i])) {<br>          return false;<br>        }<br>      }<br>    }    <br>    for (int i = 0; i &lt; parent.length; i++) {<br>      if (color[i] == 0) {<br>        if (!colordfs(i, 1)) {<br>          return false;<br>        }<br>      }<br>    }<br>    <br>    for (int i = 0; i &lt; parent.length; i++) {<br>      for (int j = 0; j &lt; parent.length; j++) {<br>        desc[i][j] = parent[i][j];<br>      }<br>    }<br>    <br>    for (int k = 0; k &lt; parent.length; k++) {<br>      for (int i = 0; i &lt; parent.length; i++) {<br>        for (int j = 0; j &lt; parent.length; j++) {<br>          desc[i][j] |= (desc[i][k] &amp;&amp; desc[k][j]);<br>        }<br>      }<br>    }<br>    <br>    return true;<br>  }<br>  <br>  public int firstBad(String[] data) {<br>    name2id = new HashMap&lt;String, Integer&gt;();        <br>    <br>    for (int i = 0; i &lt; data.length; i++) {<br>      Scanner scanner = new Scanner(data[i]);<br>      while (scanner.hasNext()) {<br>        String name = scanner.next();<br>        if (name.equals("m") || name.equals("f")) {<br>          continue;<br>        }<br>        if (name2id.containsKey(name)) {<br>          continue;<br>        }<br>        int id = name2id.size();<br>        name2id.put(name, id);<br>        names.add(name);<br>      }<br>    }<br>    <br>    parent = new boolean[name2id.size()][name2id.size()];<br>    desc = new boolean[name2id.size()][name2id.size()];<br>    diff = new boolean[name2id.size()][name2id.size()];<br>    gender = new int[name2id.size()];<br>    color = new int[name2id.size()];<br>    <br>    for (int i = 0; i &lt; data.length; i++) {<br>      Scanner scanner = new Scanner(data[i]);<br>      String first = scanner.next();<br>      String second = scanner.next();<br>      <br>      if (second.equals("m") || second.equals("f")) {<br>        boolean isMale = second.equals("m");<br>        int which = name2id.get(first);<br>        <br>        if (gender[which] != 0) {<br>          if (isMale != (gender[which] == 1)) {<br>            return i;<br>          }<br>        }<br>        gender[which] = isMale ? 1 : 2;          <br>      }<br>      else {        <br>        parent[name2id.get(first)][name2id.get(second)] = true;      <br>      }<br>      <br>      if (!checkAndUpdate()) {<br>        return i;<br>      }      <br>    }<br>    <br>    return -1;<br>  }<br>}<br></td>