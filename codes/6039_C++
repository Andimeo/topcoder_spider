<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br> <br>using namespace std;<br> <br>int d[16][16][16][16][16];<br>int tot[16][16][16][16][16][2];<br>int zhan[1000000][5];<br> <br>class Wizards<br>{<br>public:<br>int questions(int n, vector &lt;int&gt; h, vector &lt;int&gt; ho)<br>{<br>  int a[5];<br>  int i,j,best,top,bottom,tmp;<br>  while (h.size()&lt;5)<br>  {<br>    h.push_back(0);<br>    ho.push_back(0);<br>  }<br>  memset(d,0,sizeof(d));<br>  top=0;bottom=0;<br>  for (a[0]=0;a[0]&lt;=h[0];a[0]++)<br>  for (a[1]=0;a[1]&lt;=h[1];a[1]++)<br>  for (a[2]=0;a[2]&lt;=h[2];a[2]++)<br>  for (a[3]=0;a[3]&lt;=h[3];a[3]++)<br>  for (a[4]=0;a[4]&lt;=h[4];a[4]++)<br>    if (a[0]+a[1]+a[2]+a[3]+a[4]==n-1)<br>    {<br>      tot[a[0]][a[1]][a[2]][a[3]][a[4]][0]=0;<br>      tot[a[0]][a[1]][a[2]][a[3]][a[4]][1]=0;<br>      for (i=0;i&lt;5;i++)<br>        if (a[i]&lt;h[i])<br>        {<br>          tot[a[0]][a[1]][a[2]][a[3]][a[4]][0]++;<br>          tot[a[0]][a[1]][a[2]][a[3]][a[4]][1]|=(1&lt;&lt;i);<br>        }<br>      if (tot[a[0]][a[1]][a[2]][a[3]][a[4]][0]&lt;=1)<br>      {<br>        d[a[0]][a[1]][a[2]][a[3]][a[4]]=1;<br>        zhan[bottom][0]=a[0];<br>        zhan[bottom][1]=a[1];<br>        zhan[bottom][2]=a[2];<br>        zhan[bottom][3]=a[3];<br>        zhan[bottom][4]=a[4];<br>        bottom++;<br>      }<br>    }<br>  while (top&lt;bottom)<br>  {<br>    a[0]=zhan[top][0];<br>    a[1]=zhan[top][1];<br>    a[2]=zhan[top][2];<br>    a[3]=zhan[top][3];<br>    a[4]=zhan[top][4];<br>    tmp=d[a[0]][a[1]][a[2]][a[3]][a[4]];<br>    for (i=0;i&lt;5;i++)<br>      if (a[i]&gt;0)<br>        for (j=0;j&lt;5;j++)<br>          if ((j!=i)&amp;&amp;(a[j]&lt;h[j]))<br>          {<br>            a[i]--;<br>            a[j]++;<br>            if ((d[a[0]][a[1]][a[2]][a[3]][a[4]]==0)&amp;&amp;((tot[a[0]][a[1]][a[2]][a[3]][a[4]][1]&amp;(1&lt;&lt;i))!=0))<br>            {<br>              tot[a[0]][a[1]][a[2]][a[3]][a[4]][0]--;<br>              tot[a[0]][a[1]][a[2]][a[3]][a[4]][1]-=(1&lt;&lt;i);<br>              if (tot[a[0]][a[1]][a[2]][a[3]][a[4]][0]&lt;=1)<br>              {<br>                d[a[0]][a[1]][a[2]][a[3]][a[4]]=tmp+1;<br>                zhan[bottom][0]=a[0];<br>                zhan[bottom][1]=a[1];<br>                zhan[bottom][2]=a[2];<br>                zhan[bottom][3]=a[3];<br>                zhan[bottom][4]=a[4];<br>                bottom++;<br>              }<br>            }<br>            a[j]--;<br>            a[i]++;<br>          }<br>    top++;<br>  }<br>  best=2000000000;<br>  for (j=0;j&lt;5;j++)<br>  {<br>    for (i=0;i&lt;5;i++)<br>      a[i]=ho[i];<br>    a[j]--;<br>    if ((d[a[0]][a[1]][a[2]][a[3]][a[4]]&gt;0)&amp;&amp;(d[a[0]][a[1]][a[2]][a[3]][a[4]]&lt;best))<br>      best=d[a[0]][a[1]][a[2]][a[3]][a[4]];<br>  }<br>  if (best==2000000000) return -1;<br>  else return best;<br>}<br>};<br></td>