<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;list&gt;<br>#include &lt;cmath&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br> <br>using namespace std;<br> <br> <br>class CheapestTabComplete {<br>  bool startwith (string &amp; big, string &amp; small)<br>  {<br>    return big.size() &gt;= small.size() &amp;&amp; big.substr(0, small.size()) == small;<br>  }<br>  <br>  public:<br>  int getFewest(vector &lt;string&gt; n, string w) {<br>    sort (n.begin(), n.end());<br>    vector&lt;int&gt; mem (w.size() + 1, w.size() + 1);<br>    mem[0] = 0;<br>    for (int i = 0; i &lt;= w.size(); ++i)<br>    {<br>      string buf = w.substr(0, i);<br>      for (int j = 0; j &lt; i; ++j) mem[i] = min (mem[i], mem[j] + i - j);<br>      <br>      int keys = 0;<br>      for (int j = 0; j &lt; n.size(); j++)<br>      {<br>        if (!startwith(n[j], buf)) continue;<br>        ++keys;<br>        if (!startwith(w, n[j])) continue;<br>        mem[n[j].size()] = min (mem[n[j].size()], mem[i] + keys);<br>      }<br>    }<br>    <br>    return 1 + mem[w.size()];<br>  }<br>};<br> <br> <br>// Powered by PopsEdit<br></td>