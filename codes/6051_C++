<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;sstream&gt;<br>using namespace std;<br><br>class  VectorCostSequence<br>{<br>  public  :<br>  int getSmallest(int d)<br>  {<br>    if( d &lt;= 2 ) return d;<br><br>    long long  top = 1;<br>    long long  ret = d;<br>    <br>    long long  step;<br>    long long  cost;<br>    long long  v;<br><br>    while( 1 )<br>    {<br>      step = top + 1;<br>      cost = (top * 2 - 1) + top + 1;<br><br>      if( cost &gt; d ) break;<br>      if( ret &gt; step + d - cost )<br>        ret = step + d - cost;<br>      <br>      for(v = top; v &gt; 0; v /= 2)<br>      {<br>        long long  t = (d - cost) / ( v + 2 );<br>        cost += (v + 2) * t;<br>        step += 2 * t;<br>      }<br>      <br>      if( ret &gt; step + d - cost )<br>        ret = step + d - cost;<br><br>      top *= 2;<br>    }<br><br>    return  (int)ret;<br>  }<br>};<br></td>