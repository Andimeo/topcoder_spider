<td class="problemText" colspan="8" valign="middle" align="left">
            # include &lt;algorithm&gt;<br># include &lt;bitset&gt;<br># include &lt;cassert&gt;<br># include &lt;cctype&gt;<br># include &lt;cmath&gt;<br># include &lt;complex&gt;<br># include &lt;cstdio&gt;<br># include &lt;cstdlib&gt;<br># include &lt;cstring&gt;<br># include &lt;ctime&gt;<br># include &lt;deque&gt;<br># include &lt;functional&gt;<br># include &lt;iostream&gt;<br># include &lt;iterator&gt;<br># include &lt;list&gt;<br># include &lt;map&gt;<br># include &lt;numeric&gt;<br># include &lt;queue&gt;<br># include &lt;set&gt;<br># include &lt;sstream&gt;<br># include &lt;stack&gt;<br># include &lt;string&gt;<br># include &lt;valarray&gt;<br># include &lt;vector&gt;<br># include &lt;utility&gt;<br><br>using namespace std ;<br><br>// Types<br>typedef long double ld ;<br>typedef long long ll ;<br>typedef pair &lt; int , int &gt; pii ;<br>typedef vector &lt; int &gt; vi ;<br>typedef vector &lt; pii &gt; vp ;<br>typedef vector &lt; ld &gt; vd ;<br>typedef vector &lt; string &gt; vs ;<br>typedef vector &lt; bool &gt; vb ;<br>typedef queue &lt; pii &gt; qp ;<br>typedef map &lt; string , int &gt; msi ;<br><br>// Constants<br>const int INF = 1000000000 ;<br>const ld EPS = 1e-10L ;<br>const ld PI = 3.14159265358979L ;<br><br>class FirstToLast<br>{<br>// Global<br><br>// Functions<br>  ll gcd ( ll a , ll b )<br>  {<br>    if ( ! b )<br>      return a ;<br>    return gcd ( b , a % b ) ;<br>  }<br>public :<br>  int getSmallest ( ll p, ll q )<br>  {<br>    int res ;<br>    ll g = gcd ( p , q ) ;<br>    p /= g ;<br>    q /= g ;<br>    ll p10 = 1 ;<br>    if ( p == q )<br>      return 1 ;<br>    for ( int k = 1 ; k &lt; 10 ; ++ k )<br>    {<br>      p10 *= 10 ;<br>      ll x = p10 * p - q ;<br>      ll y = 10 * q - p ;<br>      if ( x &lt; 0 )<br>      {<br>        x = - x ;<br>        y = - y ;<br>      }<br>      if ( y &lt;= 0 )<br>        continue ;<br>      ll g = gcd ( x , y ) ;<br>      x /= g ;<br>      y /= g ;<br>      if ( y &lt; 10 &amp;&amp; x &lt; p10 &amp;&amp; p10 * y + x &lt; 2000000000 )<br>        return p10 * y + x ;<br>    }<br>    return - 1 ;<br>  }<br>  <br><br>} ;<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>