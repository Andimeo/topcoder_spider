<td class="problemText" colspan="8" valign="middle" align="left">
            // I think it is good to submit wrong solutions sometimes to give others challenging opportunities.<br><br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>#define LS &lt;<br>#define Size(x) (int(x.size()))<br>#define LET(k,val) typeof(val) k = (val)<br>// execute "act", and return "val" as an expression result<br>#define CLC(act,val) (*({act; static typeof(val) CLCR; CLCR = (val); &amp;CLCR;}))<br><br>// All macros with parameters "k,a,b" run the "k" variable in range [a,b)<br>#define FOR(k,a,b) for(typeof(a) k=(a); k LS (b); ++k)<br><br>// find the first k in [a,b) that satisfies cond, or b if none<br>#define FIRST(k,a,b,cond) CLC(LET(k, a); for(; k LS (b); ++k) if(cond) break, k)<br><br>#line 3 "FourBears.cc"<br><br>int dist[10][60][10][60];<br><br>#define DO(yy, xx) \<br>  { int ndist = field[yy][xx] == '.' ? 1 : 0; \<br>    if(ndist == 1 &amp;&amp; ((xx) == 0 || (xx) == X-1)) ndist = 60; \<br>    dist[y][x][yy][xx] &lt;?= ndist + dist[y][x][y2][x2]; }<br><br>#define obs(y, x) \<br>  (field[y][x] == '.' ? 1 : 0)<br><br>class FourBears {<br>  public:<br>  int clearPassages(vector &lt;string&gt; field) {<br>    // !FDI<br>    int Y = Size(field);<br>    int X = Size(field[0]);<br>//  printf(".\n"); fflush(stdout);<br>    FOR(y,0,Y) FOR(x,0,X) {<br>      FOR(y2,0,Y) FOR(x2,0,X) dist[y][x][y2][x2] = 80;<br>      dist[y][x][y][x] = 0;<br>      FOR(t,0,60) {<br>        FOR(y2,0,Y) FOR(x2,0,X) {<br>          if(y2 &gt; 0)   DO(y2-1, x2);<br>          if(y2 &lt; Y-1) DO(y2+1, x2);<br>          if(x2 &gt; 0)   DO(y2, x2-1);<br>          if(x2 &lt; X-1) DO(y2, x2+1);<br>          }<br>        }<br>      }<br>//  printf(".\n"); fflush(stdout);<br>    int besttime = 500;<br>    int bear0 = FIRST(y,0,Y, field[y][0] == 'B');<br>    int bear1 = FIRST(y,bear0+1,Y, field[y][0] == 'B');<br>    int bear2 = FIRST(y,0,Y, field[y][X-1] == 'B');<br>    int bear3 = FIRST(y,bear2+1,Y, field[y][X-1] == 'B');<br>    FOR(y1,0,Y) FOR(x1,0,X) FOR(y2,0,Y) FOR(x2,0,X) {<br>      besttime &lt;?=<br>        dist[bear0][0][y1][x1] + dist[bear1][0][y1][x1]<br>      + dist[bear2][X-1][y2][x2] + dist[bear3][X-1][y2][x2]<br>      + dist[y1][x1][y2][x2] - obs(y1,x1) - obs(y2,x2) - obs(y1,x1) * obs(y2,x2);<br>      besttime &lt;?=<br>        dist[bear0][0][y1][x1] + dist[bear1][0][y2][x2]<br>      + dist[bear2][X-1][y2][x2] + dist[bear3][X-1][y1][x1]<br>      + dist[y1][x1][y2][x2]  - obs(y1,x1) - obs(y2,x2) - obs(y1,x1) * obs(y2,x2);<br>      besttime &lt;?=<br>        dist[bear0][0][y2][x2] + dist[bear1][0][y1][x1]<br>      + dist[bear2][X-1][y2][x2] + dist[bear3][X-1][y1][x1]<br>      + dist[y1][x1][y2][x2] - obs(y1,x1) - obs(y2,x2) - obs(y1,x1) * obs(y2,x2);<br>/*    if(X == 3 &amp;&amp; Y == 3 &amp;&amp; field[1][2] == 'B') {<br>        printf("%d %d %d %d %d\n", <br>          dist[1][0][1][0], dist[2][0][1][0],<br>          dist[1][2][1][2], dist[2][2][1][2],<br>          dist[1][0][1][2]);<br>        fflush(stdout); return 15;<br>        }<br>*/    }<br>    return besttime;<br>    }<br>  };<br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>