<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iterator&gt;<br>#include &lt;math.h&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;sstream&gt;<br>#include &lt;list&gt;<br> <br>using namespace std;<br> <br>#define FOR(i,a,b) for (int _n(b), i(a); i &lt; _n; i++)<br>#define REP(i,n) FOR(i,0,n)<br> <br>#define VAR(a,b) __typeof(b) a=(b)<br>#define FOREACH(it,c) for(VAR(it,(c).begin());it!=(c).end();++it)<br> <br>#define FORD(i,a,b) for(int i=(a),_b=(b);i&gt;=_b;--i)<br> <br>#define ALL(c) (c).begin(), (c).end()<br>#define SORT(c) sort(ALL(c))<br>#define REVERSE(c) reverse(ALL(c))<br>#define UNIQUE(c) SORT(c),(c).resize(unique(ALL(c))-(c).begin())<br>#define INF 1000000000<br>#define X first<br>#define Y second<br>#define pb push_back<br>#define SZ(c) (c).size()<br> <br>typedef pair&lt;int, int&gt; PII;<br>typedef vector&lt;PII&gt; VPII;<br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;VI&gt; VVI;<br> <br>class PendingTasks {<br>     vector&lt;list&lt;int&gt; &gt; tree;<br>     VI bf;<br>     VI tsz;<br>     VI noex;<br>     int tm;<br>     int n;<br>     void CountMaxT(int v) {<br>    tsz[v]=1;<br>    bf[v]=1;<br>    noex[v]=0;<br>    FOREACH(e,tree[v]) {<br>         CountMaxT(*e);<br>         tsz[v]+=tsz[*e];<br>    }<br>    FOREACH(u,tree[v]) {<br>         int varC=0;<br>         FOREACH(i,tree[v])<br>        if(i==u)varC+=tsz[*i];<br>        else varC+=noex[*i];<br>         noex[v]=max(noex[v],varC);<br>    }<br>    FOREACH(u1,tree[v]) {<br>         FOREACH(u2,tree[v]) {<br>        int varC=1;<br>        FOREACH(i,tree[v]) {<br>       if(i==u1)varC+=tsz[*i];<br>       else if(i==u2)varC+=bf[*i];<br>       else varC+=noex[*i];<br>        }<br>        bf[v]=max(varC,bf[v]);<br>         }<br>    }<br>     }<br>public:<br>      int latestProcess(vector &lt;int&gt; supertasks) {<br>     tree.clear();<br>     n=SZ(supertasks);<br>     tree.resize(n);<br>     bf.resize(n);<br>     tsz.resize(n);<br>     noex.resize(n);<br>     REP(i,n-1) <br>    tree[supertasks[i]].pb(i);<br>     CountMaxT(n-1);<br>     return bf[n-1]-1;<br>      }<br>      <br> <br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>