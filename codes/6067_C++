<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;utility&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br>#define REP(i,n) for(int _n=n, i=0;i&lt;_n;++i)<br> <br>int removed;<br>double cache[128][128][2];<br> <br>double calc(int red, int blue, int lr) { // lr=1=me<br>  double &amp;res = cache[red][blue][lr];<br>  if(res &gt; -0.5) return res;<br>  if(red+blue==removed) { res= lr ? 0 : 1; return res; }<br>  res = 0;<br>  {<br>    double p = double(red) / (red+blue);<br>    double v = 0;<br>    if(blue&gt;0) v += (1-p) * (1-calc(red,blue-1,!lr));<br>    if(red&gt;0) v += p * (1-calc(red-1,blue,0));<br>    res = max(res,v);<br>  }<br>  if(red+blue&gt;=removed+2) {<br>    double p0 = double(blue)*(blue-1) / (red+blue) / (red+blue-1);<br>    double p1 = double(blue)*(2*red) / (red+blue) / (red+blue-1);<br>    double p2 = double(red)*(red-1) / (red+blue) / (red+blue-1);<br>    double v=0;<br>    if(p0&gt;0) v += p0*(1-calc(red,blue-2,!lr));<br>    if(p1&gt;0) v += p1*(1-calc(red-1,blue-1,0));<br>    if(p2&gt;0) v += p2*(1-calc(red-2,blue,0));<br>    res = max(res,v);<br>  }<br>  if(red+blue&gt;=removed+3) {<br>    double denom = double(red+blue) * (red+blue-1) * (red+blue-2);<br>    double p0 = double(blue)*(blue-1)*(blue-2) / denom;<br>    double p1 = double(blue)*(blue-1)*(3*red) / denom;<br>    double p2 = double(red)*(red-1)*(3*blue) / denom;<br>    double p3 = double(red)*(red-1)*(red-2) / denom;<br>    double v=0;<br>    if(p0&gt;0) v += p0*(1-calc(red,blue-3,!lr));<br>    if(p1&gt;0) v += p1*(1-calc(red-1,blue-2,0));<br>    if(p2&gt;0) v += p2*(1-calc(red-2,blue-1,0));<br>    if(p3&gt;0) v += p3*(1-calc(red-3,blue,0));<br>    res = max(res,v);<br>  }<br>  return res;<br>}<br> <br>struct LastMarble {<br>double winningChance(int red, int blue, int removed1) {<br>  removed = removed1;<br>  REP(i,128) REP(j,128) REP(k,2) cache[i][j][k]=-1;<br>  return calc(red,blue,0);<br>}<br> <br>};<br> <br>// Powered by FileEdit<br> <br>// Powered by TomekAI<br>// Powered by TZTester 1.01 [25-Feb-2003]<br> <br>// Powered by CodeProcessor<br></td>