<td class="problemText" colspan="8" valign="middle" align="left">
            // another fine solution by misof<br>// #includes {{{<br>#include &lt;algorithm&gt;<br>#include &lt;numeric&gt;<br> <br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br> <br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cassert&gt;<br> <br>#include &lt;cmath&gt;<br>#include &lt;complex&gt;<br>using namespace std;<br>// }}}<br> <br>/////////////////// PRE-WRITTEN CODE FOLLOWS, LOOK DOWN FOR THE SOLUTION ////////////////////////////////<br> <br>// pre-written code {{{<br>#define CLEAR(t) memset((t),0,sizeof(t))<br>#define FOR(i,a,b) for(int i=(int)(a);i&lt;=(int)(b);++i)<br>#define REP(i,n) for(int i=0;i&lt;(int)(n);++i)<br>#define SIZE(t) ((int)((t).size()))<br>// }}}<br> <br>/////////////////// CODE WRITTEN DURING THE COMPETITION FOLLOWS ////////////////////////////////<br> <br>double prob[24][24];<br>double konec[24][24][24];<br>double memo[24][33000];<br> <br>int units[64];<br>int type[64];<br>int neighbors[64];<br>int N;<br>int start, finish, mamstart;<br> <br>double solve(int u, int moje) {<br>  if (u&lt;=0) return 0.0;<br>  if ((moje &amp; finish) == finish) return 1.0;<br>  double &amp;res = memo[u][moje];<br>  if (res &gt;= 0) return res;<br> <br>  res = 0.0;<br>  int cango = 0;<br>  REP(i,N) if (moje &amp; (1&lt;&lt;i)) cango |= neighbors[i];<br>  cango &amp;= (~moje);<br>  REP(i,N) if (cango &amp; (1&lt;&lt;i)) {<br>    double toto = 0.0;<br>    // calculate the chance of winning this way<br>    FOR(ostane,1,u) toto += konec[ u ][ units[i] ][ ostane ] * solve(ostane,moje | (1&lt;&lt;i));<br>    res = max(res,toto);<br>  }<br>  return res;<br>}<br> <br>class CountryWar {<br>public:<br>  double defeatAll(vector &lt;string&gt; armies) {<br>    REP(i,24) REP(j,24) if (i+j) prob[i][j] = double(i*i) / double(i*i + i*j + j*j);<br>    REP(a,24) REP(b,24) FOR(c,1,a) {<br>      konec[a][b][c] = 0.0;<br>      if (b==0 &amp;&amp; a==c) { konec[a][b][c]=1.0; continue; }<br>      if (a==0 || b==0) continue;<br>      konec[a][b][c] = prob[a][b] * konec[a][b-1][c] + (1-prob[a][b]) * konec[a-1][b][c];<br>    }<br>    REP(i,24) REP(j,33000) memo[i][j]=-1.0;<br>    <br>    N = SIZE(armies);<br>    CLEAR(neighbors);<br>    <br>    start = finish = mamstart = 0;<br>    <br>    REP(i,N) {<br>      stringstream SS(armies[i]);<br>      char ch;<br>      SS &gt;&gt; ch &gt;&gt; units[i];<br>      if (ch == 'Y') { start |= (1&lt;&lt;i); mamstart += units[i]; }<br>      if (ch == 'E') finish |= (1&lt;&lt;i);<br>      int x;<br>      while (SS &gt;&gt; x) neighbors[i] |= (1&lt;&lt;x);<br>    }<br>    return solve(mamstart,start);<br>  }<br> <br> <br>};<br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>