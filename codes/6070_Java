<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class Knights {<br>  int[] x1, x2;<br>  int[] y1, y2;<br>  int[] p;<br>  boolean[] g;<br>  int m;<br>  int n;<br>  boolean[][] e;<br>  <br>  boolean add( int a ) {<br>    /*System.out.println( "add " + a );<br>    for ( int i = 0; i &lt; p.length; i ++ ) {<br>      System.out.println( "   " + p[i] );<br>    }*/<br>    if ( a == -1 ) { return true; }<br>    g[a] = true;<br>    for ( int i = 0; i &lt; m; i ++ ) {<br>      //System.out.println( "  " + i );<br>      if ( e[i][a] &amp;&amp; ( p[i] &lt; 0 || !g[p[i]] ) &amp;&amp; add( p[i] ) ) {<br>        p[i] = a;<br>        /*for ( int j = 0; j &lt; p.length; j ++ ) {<br>          System.out.println( "   " + p[j] );<br>        }*/<br>        return true;<br>      }<br>    }<br>    return false;<br>  }<br> <br>  public int makeFriendly( int dim, String[] pos ) {<br>    m = 0;<br>    n = 0;<br>    x1 = new int[dim * dim];<br>    y1 = new int[dim * dim];<br>    x2 = new int[dim * dim];<br>    y2 = new int[dim * dim];<br>    String[][] s = new String[pos.length][100];<br>    for ( int i = 0; i &lt; pos.length; i ++ ) {<br>      s[i] = pos[i].split( " " );<br>      for ( int j = 0; j &lt; s[i].length; j ++ ) {<br>        //System.out.println( s[i][j] + " " + s[i][j].length() + " " + s[i][j].substring( 1, s[i][j].length() ) );<br>        x1[m] = Integer.valueOf( s[i][j].substring( 1, s[i][j].length() ) ) - 1;<br>        y1[m] = s[i][j].charAt( 0 ) - 'A';<br>        if ( ( x1[m] + y1[m] ) % 2 == 0 ) {<br>          x2[n] = x1[m]; y2[n] = y1[m];<br>          n ++;<br>        } else {<br>          m ++;<br>        }<br>      }<br>    }<br>    //System.out.println( m + " " + n );<br>    e = new boolean[m][n];<br>    for ( int i = 0; i &lt; m; i ++ ) {<br>      for ( int j = 0; j &lt; n; j ++ ) {<br>        int dx = Math.abs( x1[i] - x2[j] );<br>        int dy = Math.abs( y1[i] - y2[j] );<br>        e[i][j] = ( dx + dy == 3 &amp;&amp; dx * dy == 2 );<br>        //System.out.println( x1[i] + " " + y1[i] + ' ' + x2[j] + ' ' + y2[j] + ' ' + e[i][j] );<br>      }<br>    }<br>    p = new int[m];<br>    Arrays.fill( p, -1 );<br>    g = new boolean[n];<br>    for ( int i = 0; i &lt; n; i ++ ) {<br>      Arrays.fill( g, false );<br>      add( i );<br>    }<br>    int ans = 0;<br>    for ( int i = 0; i &lt; m; i ++ ) {<br>      if ( p[i] != -1 ) { ans ++; }<br>    }<br>    return ans;<br>  }<br>}<br></td>