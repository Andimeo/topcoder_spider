<td class="problemText" colspan="8" valign="middle" align="left">
            #pragma warning (disable:4786)<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br>using namespace std;<br><br>#include &lt;math.h&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;stdlib.h&gt;<br>/*---------------------------------------------------------*/<br>const int INF = 123456789;<br>const double EPS = 1e-9;<br><br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br>typedef set&lt;string&gt; SS;<br>typedef map&lt;string, int&gt; MSI;<br><br>typedef double LD;<br>/*---------------------------------------------------------*/<br>#define IT(T,A,i) for ( T::iterator i = (A).begin(); i != (A).end(); ++i )<br>#define SI(A) ((int)(A).size())<br>#define CL(A,v) memset(A, v, sizeof(A))<br>#define FOR(i,a,b) for ( i = (a); i &lt;= (b); ++i )<br>#define IFOR(i,a,b) for ( i = (a); i &gt;= (b); --i )<br>#define F(i,N) for ( i = 0; i &lt; N; ++i )<br>#define IF(i,N) for ( i = N - 1; i &gt;= 0; --i )<br>#define ALL(A) A.begin(),A.end()<br>#define FIND(A,x) (A.find(x) != A.end())<br>#define BIT(mask,i) ((mask) &amp; (1 &lt;&lt; (i)))<br>/*---------------------------------------------------------*/<br>#ifdef _MSC_VER<br>  #define LL __int64<br>  #define Ld "%I64d"<br>#else<br>  #define LL long long<br>  #define Ld "%Ld"<br>#endif<br><br>LL min(LL a, LL b)<br>{<br>  if ( a &lt; b ) return a;<br>  return b;<br>}<br><br>LL max(LL a, LL b)<br>{<br>  if ( a &gt; b ) return a;<br>  return b;<br>}<br>/*---------------------------------------------------------*/<br>VS Split(const char *s, const char *sep)<br>{<br>  VS res;<br>  res.clear();<br><br>  char s2[1234];<br>  int l;<br>  for ( const char *s1 = s; *s1; )<br>  {<br>    while ( *s1 &amp;&amp; strchr(sep, *s1) ) ++s1;<br>    for ( l = 0; *s1 &amp;&amp; !strchr(sep, *s1); ++s1 ) s2[l++] = *s1;<br>    if ( !l ) break;<br>    s2[l] = 0;<br>    res.push_back(s2);<br>  }<br>  return res;<br>}<br>/*---------------------------------------------------------*/<br><br>/*---------------------------------------------------------*/<br>int N, P[1 &lt;&lt; 18][18];<br><br>class CrazySwitches<br>{ <br>  void Init()<br>  {<br>    MSI msi;SS ss;VI vi;VS vs=Split("0","");<br>    LL i=max(min(INF,0),N=0);CL(&amp;i,0);<br>    FIND(ss,"");FOR(i,0,0);IFOR(i,0,BIT(0,0));<br>    IT(VI,vi,it);F(i,SI(vi));IF(i,0);sort(ALL(vi));<br>  }<br>public: <br>  int minimumActions(vector &lt;int&gt; A) <br>  { <br>    Init();<br><br>    N = SI(A);<br>    CL(P, -1);<br>    P[1][0] = 0;<br><br>    VI B[123];<br><br>    int i, j, mask;<br>    F(i, N)<br>      if ( A[i] != i )<br>        B[A[i]].push_back(i);<br><br>    queue&lt;int&gt; Q;<br>    Q.push(1 * 20 + 0);<br>    P[1][0] = 0;<br>    while ( !Q.empty() )<br>    {<br>      mask = Q.front() / 20;<br>      i = Q.front() % 20;<br>      Q.pop();<br><br>      int mask1 = mask;<br>      F(j, N)<br>        if ( BIT(mask, j) )<br>        {<br>          mask1 = mask | (1 &lt;&lt; j);<br>          if ( P[mask1][j] == -1 )<br>          {<br>            P[mask1][j] = P[mask][i] + 1;<br>            Q.push(mask1 * 20 + j);<br>          }<br>        }<br>      F(j, SI(B[i]))<br>      {<br>        int b = B[i][j];<br>        mask1 = mask ^ (1 &lt;&lt; b);<br>        if ( P[mask1][i] == -1 )<br>        {<br>          P[mask1][i] = P[mask][i];<br>          Q.push(mask1 * 20 + i);<br>        }<br>      }<br>    }<br>    return P[1 &lt;&lt; (N - 1)][N - 1];<br>  }  <br>}; <br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>