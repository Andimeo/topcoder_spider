<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class CrazySwitches {<br>    public int minimumActions(int[] switches) {<br>        int n = switches.length;<br>        int[] mark = new int[n];<br>        for (int i = 0; i &lt; n; i++) {<br>            mark[switches[i]] |= (1 &lt;&lt; i);<br>        }<br> <br>        int[][] d = new int[1 &lt;&lt; n][n];<br>        int[] mq = new int[2 * (1 &lt;&lt; n) * n];<br>        int[] rq = new int[2 * (1 &lt;&lt; n) * n];<br>        int h = (1 &lt;&lt; n) * n;<br>        int t = (1 &lt;&lt; n) * n + 1;<br>        mq[h] = 1;<br>        rq[h] = 0;<br>        d[1][0] = 1;<br>        while (h &lt; t) {<br>            int m = mq[h];<br>            int r = rq[h];<br>            h++;<br> <br>            for (int i = 0; i &lt; n; i++) {<br>                if (i != r &amp;&amp; switches[i] == r) {<br>                    int nm = m ^ (1 &lt;&lt; i);<br>                    if (d[nm][r] == 0) {<br>                        d[nm][r] = d[m][r];<br>                        h--;<br>                        mq[h] = nm;<br>                        rq[h] = r;<br>                    }<br>                }<br>                if (i != r &amp;&amp; (m &amp; (1 &lt;&lt; i)) != 0) {<br>                    if (d[m][i] == 0) {<br>                        d[m][i] = d[m][r] + 1;<br>                        mq[t] = m;<br>                        rq[t] = i;<br>                        t++;<br>                    }<br>                }<br>            }<br> <br>        }<br> <br>        return d[1 &lt;&lt; (n - 1)][n - 1] - 1;<br>    }<br> <br> <br>}<br> <br> <br>// Powered by PopsEdit<br> <br>// Powered by CodeProcessor<br></td>