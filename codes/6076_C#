<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br><br>public class TakeBus <br>{<br>  int[] trip;<br>  int[] wait;<br>  int big;<br>  public double expectedTime(int[] tripTime, int[] waitTime) <br>  {<br>    big = 0;<br>    foreach(int i in waitTime) big = Math.Max(big, i);<br>    trip = tripTime;<br>    wait = waitTime;<br><br>    return getTime(0);<br>  }<br><br>  double getTime(int waited)<br>  {<br>    if(waited == big) return 999999999;<br>    double nextTime = getTime(waited + 1) + 1;<br><br>    ArrayList times = new ArrayList();<br>    ArrayList probs = new ArrayList();<br>    for(int i=0;i&lt;trip.Length;i++)<br>    {<br>      if(wait[i] &gt; waited)<br>      {<br>        double prob = 1.0 / (wait[i] - waited);<br>        double time = trip[i];<br>        if(time &lt; nextTime)<br>        {<br>          times.Add(time);<br>          probs.Add(prob);<br>        }<br>      }<br>    }<br>    double[] t = (double[])times.ToArray(typeof(double));<br>    double[] p = (double[])probs.ToArray(typeof(double));<br>    Array.Sort(t, p);<br><br>    double ttime = 0;<br>    double tprob = 1.0;<br>    for(int i=0;i&lt;t.Length;i++)<br>    {<br>      ttime += t[i] * tprob * p[i];<br>      tprob *= (1-p[i]);<br>    }<br>    ttime += tprob * nextTime;<br>    return ttime;<br><br>  }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>