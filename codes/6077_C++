<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;list&gt;<br>using namespace std;<br>#define forn(i,n) for(int i=0;i&lt;(int)(n);++i)<br>#define forsn(i,s,n) for(int i=s;i&lt;(int)(n);++i)<br>#define forall(i,c) for(typeof(c.begin()) i=c.begin();i!=c.end();++i)<br>typedef pair&lt;int,int&gt; pint;<br>int mcd(int a, int b) { return a==0?b:mcd(b%a,a); }<br><br>typedef long long tint;<br>tint MOD;<br>class m22 {<br>public:    tint a[2][2];<br>    m22(tint a00, tint a01, tint a10, tint a11) {<br>        a[0][0]=a00;a[0][1]=a01;a[1][0]=a10;a[1][1]=a11;<br>    }<br>    m22 operator*(const m22&amp; o) {<br>        m22 r(0,0,0,0);<br>        forn(k,2)forn(i,2)forn(j,2) r.a[i][j]+=a[i][k]*o.a[k][j],r.a[i][j]%=MOD;<br>        return r;<br>    }<br>};<br>m22 uno(1,0,0,1);<br>m22 fm(1,1,1,0);<br>m22 elev(const m22&amp; t, tint n) {<br>    if (n==0) return uno;<br>    m22 p=elev(t, n/2);<br>    return (n%2)?p*p*t:p*p;<br>}<br>tint ffibo(tint n) { // O(log n)<br>    return elev(fm, n).a[1][0];<br>}<br><br>class BigFibonacci {<br>public:<br>    int fibNumber(string index, int M) {<br>      MOD=M;<br>      tint in=0;<br>      forn(i,index.size()) in=in*10+index[i]-'0';<br>        int res=ffibo(in);<br>        return res;<br>    }<br><br>};<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>