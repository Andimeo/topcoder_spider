<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System.Collections<br>Imports System<br> <br>Public Class BigFibonacci<br>    Dim count As Integer<br>    Dim modu As Integer<br>    Dim prevF1 As New Hashtable()<br>    Dim prevF2 As New Hashtable()<br>    Public Function fibNumber(ByVal index As String, ByVal M As Integer) As Integer<br>        modu = M<br>        Dim ind As Int64<br>        ind = Int64.Parse(index)<br>        prevF1.Add(0, 0)<br>        prevF1.Add(1, 1)<br>        Dim i As Long, j As Long<br> <br>        fibNumber = GetF(ind)<br> <br>    End Function<br>    Function GetF(ByVal pf As Long) As Long<br>        If prevF1.ContainsKey(pf) Then<br>            GetF = prevF1(pf)<br> <br>            Exit Function<br>        End If<br>        If pf = 0 Or pf = 1 Then<br>            GetF = pf<br>            Exit Function<br>        End If<br>        'count = count + 1<br>        'If count &lt; 30 Then<br>        'Console.WriteLine("GetF: {0}", pf)<br>        'End If<br>        Dim t As Long<br>        Dim lf1 As Long, lf2 As Long<br>        Dim r As Long<br>        Dim even As Boolean<br>        even = (pf Mod 2 = 0)<br>        If Not even Then t = pf + 1 Else t = pf<br> <br>        lf1 = GetF(t / 2) Mod modu<br>        lf2 = GetF(t / 2 - 1) Mod modu<br> <br>        If even Then 'even<br>            r = 2 * lf2 + lf1<br>            r = r * lf1<br>            r = r Mod modu<br>        Else<br>            r = lf2 ^ 2 + lf1 ^ 2<br>            r = r Mod modu<br>        End If<br>        prevF1.Add(pf, r)<br>        GetF = r<br> <br> <br>    End Function<br>End Class<br></td>