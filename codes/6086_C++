<td class="problemText" colspan="8" valign="middle" align="left">
            #line 2 "StringReplacements.cpp"<br>// #includes<br>#include &lt;algorithm&gt;<br>#include &lt;numeric&gt;<br> <br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br> <br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cassert&gt;<br> <br>#include &lt;cmath&gt;<br>#include &lt;complex&gt;<br>using namespace std;<br><br>#define FOR(i,a,b) for(int i = (a); i &lt; (b); ++i)<br>#define REP(i,n) FOR(i,0,n)<br>#define FORE(it,x) for(typeof(x.begin()) it=x.begin();it!=x.end();++it)<br>#define pb push_back<br>#define all(x) (x).begin(),(x).end()<br>#define CLEAR(x,with) memset(x,with,sizeof(x))<br>#define sz size()<br><br>typedef pair&lt;int,int&gt; pi; typedef vector&lt;int&gt; vi; typedef vector&lt;string&gt; vs; <br>typedef long long ll;<br><br>ll pp[21];<br><br>const char* spawn[3] = { "acb", "baa", "bcb" };<br><br>vi cache[3][21];<br><br>vi memoized(char ch, int sec)<br>{<br>  vi&amp; ret = cache[ch-'a'][sec];<br>  if(ret.sz) return ret;<br>  ret = vi(3,0);<br>  if(sec == 0)<br>    ret[ch-'a']++;<br>  else<br>  {<br>     REP(i,3)<br>    {<br>      vi q = memoized(spawn[ch-'a'][i], sec-1);<br>      REP(j,3) ret[j] += q[j];<br>    }<br>  }<br>  return ret;<br>}<br><br>vi go(char ch, ll left, ll right, int sec)<br>{<br>  if(pp[sec] &lt;= left || right &lt; 0) return vi(3,0);<br>  if(sec == 0)<br>  {<br>    vi ret(3,0);<br>    ret[ch-'a']++;<br>    return ret;<br>  }<br>  if(left &lt;= 0 &amp;&amp; pp[sec]-1 &lt;= right) return memoized(ch, sec);<br>  vi ret(3, 0);<br>  const char* p = spawn[ch-'a'];<br>  ll size = pp[sec-1];<br>  REP(i,3)<br>  {<br>    vi q = go(p[i], left - size*i, right - size*i, sec-1);<br>    REP(j,3) ret[j] += q[j];<br>  }  <br>  return ret;<br>}<br><br>struct StringReplacements<br>{ <br>  vector &lt;int&gt; substringCounter(string letter, int left, int right, int nSeconds) <br>  { <br>    REP(i,3) REP(j,21) cache[i][j].clear();<br>    pp[0] = 1;<br>    FOR(i,1,21) pp[i] = pp[i-1]*3;<br>    return go(letter[0], left, right, nSeconds);    <br>  } <br><br>}; <br><br><br>// Powered by FileEdit<br></td>