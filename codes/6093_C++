<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;iostream&gt;<br>#include&lt;sstream&gt;<br>#include&lt;cstdlib&gt;<br>#include&lt;cmath&gt;<br>#include&lt;vector&gt;<br>#include&lt;string&gt;<br>#include&lt;algorithm&gt;<br>using namespace std;<br>typedef vector&lt;int&gt;VI;typedef vector&lt;VI&gt;VVI;<br>typedef vector&lt;string&gt;VS;<br>typedef pair&lt;int,int&gt;PII;<br>#define FOR(i,n) for((i)=0;(i)&lt;(n);(i)++)<br>#define BE(a) ((a).begin()),((a).end())<br>#define SI(a) ((a).size())<br>#define PB push_back<br>#define MP make_pair<br>#define FORIT(i,a) for((i)=(a).begin();(i)!=(a).end();(i)++)<br>#define CLR(a,v) memset((a),(v),sizeof(a))<br>template &lt;class Ty, class Tx&gt;<br>Ty cast(const Tx &amp;x) { Ty y; stringstream ss(""); ss&lt;&lt;x; ss.seekg(0); ss&gt;&gt;y; return y; }<br><br>PII getSpiralXYbyNum(long long K) {<br>    long long L, X, Y, S, i, j;<br>    PII ret;<br>    if (K == 0) return MP(0, 0);<br>    ret = MP(1, 0);<br>    S = 1;<br>    L = 3;<br>    while (K &gt;= S + 2 * (L + (L - 2))) {<br>        ret.first++;<br>        ret.second--;<br>        S += 2 * (L + (L - 2));<br>        L += 2;<br>    }<br>    if (K &lt;= S + L - 3) {<br>        ret.second += K - S;<br>        return ret;<br>    }<br>    ret.second += L - 2;<br>    S += L - 2;<br>    if (K &lt;= S + L - 2) {<br>       ret.first -= K - S;<br>       return ret;<br>    }<br>    ret.first -= L - 1;<br>    S += L - 1;<br>    if (K &lt;= S + L - 2) {<br>       ret.second -= K - S;<br>       return ret;<br>    }<br>    ret.second -= L - 1;<br>    S += L - 1;<br>    if (K &lt;= S + L - 1) {<br>        ret.first += K - S;<br>        return ret;<br>    }<br>    ret.second += L;<br>    S += L;<br>    return MP(-1, -1);<br>}<br><br>class SpiralNumbers {<br>public:<br>  string getPosition(int K) {<br>        PII ans;<br>        ans = getSpiralXYbyNum(K - 1);<br>        return "(" + cast&lt;string&gt;(ans.second) + "," + cast&lt;string&gt;(ans.first) + ")";<br>    }<br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.2 [15-Oct-2005 modified by Revenger]<br>// Powered by CodeProcessor<br></td>