<td class="problemText" colspan="8" valign="middle" align="left">
            // I think it is good to submit wrong solutions sometimes to give others challenging opportunities.<br><br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>typedef vector&lt;string&gt; vs;<br><br>#define Size(x) (int(x.size()))<br><br>#line 3 "Palindromist.cc"<br><br>string splittext(string s, vs words) {<br>  string splits[200];<br>  int N = Size(s);<br>  splits[N] = "";<br>  for(int k=N-1; k&gt;=0; k--) {<br>    splits[k] = "a";<br>    for(int t=0; t&lt;Size(words); t++)<br>      if(s.substr(k, Size(words[t])) == words[t]<br>      &amp;&amp; splits[k+Size(words[t])] != "a") {<br>      string z = " " + words[t] + splits[k+Size(words[t])];<br>      if(z &lt; splits[k]) splits[k] = z;<br>      }<br>//  printf("%s -&gt; %s\n", s.c_str()+k, splits[k].c_str());<br>    }<br>  return splits[0].substr(1);<br>  }<br><br>class Palindromist {<br>  public:<br>  string palindrome(string text, vector &lt;string&gt; words) {<br>    // !FDI<br>    string t;<br>    for(int k=Size(text)-1; k&gt;=0; k--) t += text[k];<br>    string z0 = splittext(text+t, words);<br>    string z1 = splittext(text+t.substr(1), words);<br>    if(z0 == "") return z1;<br>    if(z1 == "") return z0;<br>    if(z0&lt;z1) return z0;<br>    return z1;<br>    }<br>  };<br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>