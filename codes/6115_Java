<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class Palindromist {<br>    String create(String s, String[] w) {<br>        int n = s.length();<br>        int m = w.length;<br>        boolean[] can = new boolean[n + 1];<br>        String[] best = new String[n + 1];<br>        can[0] = true;<br>        best[0] = "";<br>        for (int i = 1; i &lt;= n; i++) {<br>            String sp = s.substring(0, i);<br>            for (int j = 0; j &lt; m; j++) {<br>                int k = i - w[j].length();<br>                if (k &lt; 0) {<br>                    continue;<br>                }<br> <br>                if (sp.endsWith(w[j]) &amp;&amp; can[k]) {<br>                    can[i] = true;<br>                    String t = best[k] + " " + w[j];<br>                    if (best[i] == null || t.compareTo(best[i]) &lt; 0) {<br>                        best[i] = t;<br>                    }<br>                }<br>            }<br>        }<br> <br>        if (best[n] == null) {<br>            return null;<br>        } else {<br>            return best[n].substring(1);<br>        }<br>    }<br> <br>    public String palindrome(String text, String[] words) {<br>        String t1 = text;<br>        for (int i = text.length() - 1; i &gt;= 0; i--) {<br>            t1 = t1 + text.charAt(i);<br>        }<br>        String s1 = create(t1, words);<br>        String t2 = text;<br>        for (int i = text.length() - 2; i &gt;= 0; i--) {<br>            t2 = t2 + text.charAt(i);<br>        }<br>        String s2 = create(t2, words);<br> <br>        if (s1 == null) {<br>            if (s2 == null) {<br>                return "";<br>            }<br>            return s2;<br>        } else {<br>            if (s2 == null) {<br>                return s1;<br>            }<br> <br>            if (s1.compareTo(s2) &lt; 0) {<br>                return s1;<br>            } else {<br>                return s2;<br>            }<br>        }<br>    }<br> <br> <br>}<br> <br> <br>// Powered by PopsEdit<br> <br>// Powered by CodeProcessor<br></td>