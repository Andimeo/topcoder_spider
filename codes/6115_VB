<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System<br>Imports System.Collections<br>Imports System.Math<br> <br>Public Class Palindromist<br>    Public Function palindrome(ByVal text As String, ByVal words As String()) As String<br>        Dim i, j, k, l As Integer<br>        Dim sBest As String = ""<br> <br>        For l = 0 To 1<br> <br>            Dim sTarget As String = text<br>            For i = text.Length - 2 + l To 0 Step -1<br>                sTarget &amp;= text.Substring(i, 1)<br>            Next<br> <br>            Dim aBest(sTarget.Length) As String<br>            System.Array.Clear(aBest, 0, aBest.Length)<br> <br>            aBest(0) = ""<br>            Dim bPoss(sTarget.Length) As Boolean<br>            System.Array.Clear(bPoss, 0, bPoss.Length)<br>            bPoss(0) = True<br>            Dim aPoss As New ArrayList<br>            For i = 1 To sTarget.Length<br>                aPoss.Clear()<br>                For j = 0 To words.GetUpperBound(0)<br>                    If words(j).Length &lt;= i Then<br>                        If sTarget.Substring(i - words(j).Length, words(j).Length) = words(j) Then<br>                            If bPoss(i - words(j).Length) Then<br>                                aPoss.Add(aBest(i - words(j).Length) &amp; " " &amp; words(j))<br>                            End If<br>                        End If<br>                    End If<br>                Next<br>                aPoss.Sort()<br>                If aPoss.Count &gt; 0 Then<br>                    bPoss(i) = True<br>                    aBest(i) = aPoss(0)<br>                End If<br>            Next<br> <br>            If bPoss(sTarget.Length) Then<br>                If sBest &lt;&gt; "" Then<br>                    If sBest &gt; aBest(sTarget.Length).Trim Then sBest = aBest(sTarget.Length).Trim<br>                Else<br>                    sBest = aBest(sTarget.Length).Trim<br>                End If<br>            End If<br>        Next<br>        Return sBest<br>    End Function<br>End Class<br></td>