<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;set&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;map&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cctype&gt;<br>using namespace std;<br> <br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;string&gt; vs;<br>typedef long long ii;<br>#define si size()<br>#define s(x) sort((x).begin(), (x).end())<br> <br>int win[100001];<br>class LastStone {<br>  public:<br>  int numWins(vector &lt;int&gt; turns, int m, int n) {<br>    win[0] = 0;<br>    for (int i = 1; i &lt;= 100000; i++)<br>    for (int j = 0; j &lt; turns.si; j++) {<br>      if (i - turns[j] &gt;= 0) { <br>        if (!win[i-turns[j]]) win[i] = 1;<br>      }<br>    }<br>    int ret = 0;<br>    for (int i = m; i &lt;= n; i++) ret += win[i];<br>    return ret;<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>