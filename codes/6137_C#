<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Text.RegularExpressions;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br><br>public class TheXGame {<br><br><br><br>    public int firstMove(string board) {<br>        int res;<br>        List&lt;int&gt; a = new List&lt;int&gt;();<br>        for (int i = 0; i &lt; board.Length; i++)<br>        {<br>            int count = 0;<br>            while (i &lt; board.Length &amp;&amp; board[i] == '-')<br>            {<br>                count++;<br>                i++;<br>            }<br>            if (count != 0)<br>            {<br>                a.Add(count);<br>            }<br>        }<br><br>        if (a.Count == 1 &amp;&amp; a[0] &lt;= 2) return -1;<br><br>        res = int.MaxValue;<br>        for (int i = 0; i &lt; a.Count; i++)<br>        {<br>            for (int k = 1; k &lt;= a[i]; k++)<br>            {<br>                for (int x = 0; x + k &lt;= a[i]; x++)<br>                {<br>                    int p = x ^(a[i]-k-x);<br>                    for (int j = 0; j &lt; a.Count; j++)<br>                    {<br>                        if (j == i) continue;<br>                        p ^= a[j];<br>                    }<br>                    if (p == 0) res = Math.Min(res, k);<br>                }<br>            }<br>        }<br>        if (res == int.MaxValue) return -1;<br>        return res;<br>    }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>