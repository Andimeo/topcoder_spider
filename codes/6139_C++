<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>using namespace std;<br><br>#define rep(i,n) for (int i=0; i&lt;n; i++)<br>#define forr(i,l,r) for (int i=l; i&lt;r; i++)<br>#define forv(i,v) rep(i,v.size())<br>#define all(v) v.begin(),v.end()<br>#define pb push_back<br>#define mp make_pair<br><br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;vi&gt; vvi;<br>typedef vector&lt;string&gt; vs;<br>typedef vector&lt;vs&gt; vvs;<br>typedef long long lint;<br><br>struct PackingParts {<br>  static int pack(vector &lt;int&gt; partSizes, vector &lt;int&gt; boxSizes)<br>  {<br>    int res = 0;<br>    int i, j;<br>    i = j = 0;<br>    while (i&lt;partSizes.size() &amp;&amp; j&lt;boxSizes.size()) {<br>      if (partSizes[i] &lt;= boxSizes[j]) {<br>        res++; i++; j++;<br>      } else<br>        j++;<br>    }<br>    return res;<br>  }<br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>