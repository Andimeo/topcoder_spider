<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class MonotoneSEMin {<br>    public double min(String[] bits) {<br>        String s = "";<br>        for (int i = 0; i &lt; bits.length; i++) {<br>            s += bits[i];<br>        }<br> <br>        int n = s.length();<br> <br>        int[] ocnt = new int[n + 1];<br>        ocnt[0] = 0;<br>        for (int i = 0; i &lt; n; i++) {<br>            if (s.charAt(i) == '1') {<br>                ocnt[i + 1] = ocnt[i] + 1;<br>            } else {<br>                ocnt[i + 1] = ocnt[i];<br>            }<br>        }<br> <br>        double[] sol = new double[n + 1];<br>        double[] ans = new double[n + 1];<br>        sol[0] = 0.0;<br> <br>        for (int i = 1; i &lt; n + 1; i++) {<br>            ans[i] = 1e10;<br>            for (int j = 1; j &lt;= i; j++) {<br>                int k = ocnt[i] - ocnt[i - j];<br>                int l = j - k;<br>                double opt = 1.0 * k / (k + l);<br>                if (opt &gt;= sol[i - j]) {<br>                    double d = ans[i - j] + k * (1 - opt) * (1 - opt) + l * opt * opt;<br>                    if (d &lt; ans[i]) {<br>                        ans[i] = d;<br>                        sol[i] = opt;<br>                    }<br>                }<br>            }<br>        }<br> <br>        return ans[n];<br>    }<br> <br>}<br> <br> <br>// Powered by PopsEdit<br> <br>// Powered by CodeProcessor<br></td>