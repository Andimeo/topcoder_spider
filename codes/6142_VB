<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System<br>Imports System.Collections<br>Imports System.Math<br> <br>Public Class MonotoneSEMin<br>    Public Function min(ByVal bits As String()) As Double<br>        Dim i, j, k, l As Integer<br>        Dim sBits As String = "0"<br>        For i = 0 To bits.GetUpperBound(0)<br>            sBits &amp;= bits(i)<br>        Next<br>        sBits &amp;= "1"<br>        Dim iCount As Integer<br> <br>        Dim dVal(sBits.Length - 1) As Double<br>        Dim dOpt(sBits.Length - 1) As Double<br>        Dim iEnd As Integer = sBits.Length - 2<br>        Dim dEps As Double = 0.0000000001<br> <br>        Dim dHigh As Double<br>        Dim d(1) As Integer<br>        Dim ddOpt As Double<br>        dVal(sBits.Length - 1) = 1<br> <br>        Do While iEnd &gt; 0<br>            Do While iEnd &gt; 0 And sBits.Substring(iEnd, 1) = "1"<br>                iEnd -= 1<br>                dVal(iEnd + 1) = dVal(iEnd + 2)<br>            Loop<br> <br>            dHigh = 0<br>            d(0) = 0<br>            d(1) = 0<br> <br>            For j = iEnd To 0 Step -1<br>                d(CInt(sBits.Substring(j, 1))) += 1<br>                ddOpt = d(1) / (d(0) + d(1))<br>                If ddOpt + dEps &gt;= dHigh Then<br>                    dHigh = ddOpt<br>                    k = j<br>                End If<br>                dOpt(j) = ddOpt<br>            Next<br> <br>            For i = k To iEnd<br>                dVal(i) = dOpt(k)<br>            Next<br>            iEnd = k - 1<br>        Loop<br> <br>        Dim dRet As Double<br>        For i = 0 To sBits.Length - 1<br>            If sBits.Substring(i, 1) = "0" Then<br>                dRet += dVal(i) * dVal(i)<br>            Else<br>                dRet += (1 - dVal(i)) * (1 - dVal(i))<br>            End If<br>        Next<br>        Return dRet<br> <br>    End Function<br>End Class<br></td>