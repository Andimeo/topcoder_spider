<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br><br>public class OrderDoesMatter {<br>  <br>  int[,] a = new int[1001, 1001];<br>  int[] din = new int[1001];<br>  int[] dout = new int[1001];<br>  bool[] used = new bool[1001];<br><br>  public int getOrder(int[] N, int[] M) <br>  {<br>    for(int i=0; i&lt;N.Length; i++)<br>    {<br>      a[N[i], M[i]]++;<br>      din[N[i]]++;<br>      dout[M[i]]++;<br>    }<br>    if(!check()) return -1;<br>    int x = 0, y = 0;<br>    for(int i=1; i&lt;=1000; i++)<br>    {<br>      if(Math.Abs(din[i]-dout[i]) &gt;= 2) return -1;<br>      if(din[i] == dout[i]+1) x++;<br>      if(din[i] == dout[i]-1) y++;<br>    }<br>    if(x == 1 &amp;&amp; y == 1)<br>    {<br>      x = -1; y = -1;<br>      for(int i=1; i&lt;=1000; i++)<br>      {<br>        if(din[i] == dout[i]+1) x = i;<br>        if(din[i] == dout[i]-1) y = i;<br>      }<br>      return x * y;<br>    }<br>    else if(x == 0 &amp;&amp; y == 0)<br>    {<br>      int res = -1;<br>      for(int i=1; i&lt;=1000; i++)<br>      {<br>        if(din[i] &gt; 0 &amp;&amp; din[i] == dout[i]) res = Math.Max(res, i*i);<br>      }<br>      return res;<br>    }<br>    else return -1;<br>    }<br><br>  void dfs(int k)<br>  {<br>    used[k] = true;<br>    for(int i=1; i&lt;=1000; i++)<br>    {<br>      if(a[k,i]&gt;0 || a[i,k] &gt; 0)<br>      {<br>        if(!used[i]) dfs(i);<br>      }<br>    }<br>  }<br><br>  bool check()<br>  {<br>    for(int i=1; i&lt;=1000; i++)<br>    {<br>      if(din[i] &gt; 0 || dout[i] &gt; 0) <br>      {<br>        dfs(i);<br>        break;<br>      }<br>    }<br>    for(int i=1; i&lt;=1000; i++)<br>    {<br>      if(din[i] &gt; 0 || dout[i] &gt; 0)<br>      {<br>        if(!used[i]) return false;<br>      }<br>    }<br>    return true;<br>  }<br><br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>