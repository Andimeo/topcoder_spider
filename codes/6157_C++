<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>const int maxm=1000;<br> <br>class OrderDoesMatter {<br>public:<br>  int n,deg[1010];<br>  bool appear[1010];<br>  int father[1010];<br>  int getfather(int v)<br>  {<br>    return (father[v]==0)?v:(father[v]=getfather(father[v]));<br>  }<br>  void merge(int u,int v)<br>  {<br>    u=getfather(u);<br>    v=getfather(v);<br>    if (u!=v)<br>      father[u]=v;<br>  }<br>  int getOrder(vector&lt;int&gt; A, vector&lt;int&gt; B)<br>  {<br>    n=A.size();<br>    memset(deg,0,sizeof(deg));<br>    memset(appear,false,sizeof(appear));<br>    memset(father,0,sizeof(father));<br>    int i,C1,C2;<br>    for (i=0;i&lt;n;i++)<br>    {<br>      deg[A[i]]++;<br>      deg[B[i]]--;<br>      appear[A[i]]=appear[B[i]]=true;<br>      merge(A[i],B[i]);<br>    }<br>    C1=C2=0;<br>    for (i=1;i&lt;=1000;i++)<br>    {<br>      if (appear[i] &amp;&amp; father[i]==0)<br>        C1++;<br>      if (deg[i]!=0)<br>        C2++;<br>      if (abs(deg[i])&gt;1)<br>        return -1;<br>    }<br>    if (C1&gt;1 || C2&gt;2)<br>      return -1;<br>    if (C2==0)<br>    {<br>      int result=0;<br>      for (i=1;i&lt;=1000;i++)<br>        if (appear[i] &amp;&amp; i&gt;result)<br>          result=i;<br>      return result*result;<br>    }<br>    else<br>    {<br>      int S=0,T=0;<br>      for (i=1;i&lt;=1000;i++)<br>      {<br>        if (deg[i]==1)<br>          S=i;<br>        if (deg[i]==-1)<br>          T=i;<br>      }<br>      return S*T;<br>    }<br>  }<br>};<br></td>