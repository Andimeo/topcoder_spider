<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class CountingCommonSubsequences {<br>  long[][][] F;<br>  String a, b, c;<br>  int[][] nextA, nextB, nextC;<br>  <br>  public long getCount(int x, int y, int z) {<br>    if (x &gt;= a.length() || y &gt;= b.length() || z &gt;= c.length())<br>      return 0;<br>    if (F[x][y][z] == -1) {<br>      F[x][y][z] = 0;<br>      for (int i=0; i &lt; 26; i++)<br>        if (nextA[x][i] != a.length() &amp;&amp;<br>          nextB[y][i] != b.length() &amp;&amp;<br>          nextC[z][i] != c.length())<br>          F[x][y][z] += 1 + getCount(nextA[x][i] + 1, nextB[y][i] + 1, nextC[z][i] + 1);<br>    }<br>    return F[x][y][z];<br>  }<br>  <br>    public long countCommonSubsequences(String a, String b, String c) {<br>      this.a = a;<br>      this.b = b;<br>      this.c = c;<br>      F = new long[a.length()][b.length()][c.length()];<br>      for (int i=0; i &lt; a.length(); i++)<br>        for (int j=0; j &lt; b.length(); j++)<br>          Arrays.fill(F[i][j], -1);<br>      nextA = new int[a.length()][26];<br>      nextB = new int[b.length()][26];<br>      nextC = new int[c.length()][26];<br>      for (int i=0; i &lt; a.length(); i++)<br>        for (int j=0; j &lt; 26; j++) {<br>          nextA[i][j] = i;<br>          while (nextA[i][j] &lt; a.length() &amp;&amp; a.charAt(nextA[i][j]) != ('a' + j))<br>            nextA[i][j]++;<br>        }<br>      for (int i=0; i &lt; b.length(); i++)<br>        for (int j=0; j &lt; 26; j++) {<br>          nextB[i][j] = i;<br>          while (nextB[i][j] &lt; b.length() &amp;&amp; b.charAt(nextB[i][j]) != ('a' + j))<br>            nextB[i][j]++;<br>        }<br>      for (int i=0; i &lt; c.length(); i++)<br>        for (int j=0; j &lt; 26; j++) {<br>          nextC[i][j] = i;<br>          while (nextC[i][j] &lt; c.length() &amp;&amp; c.charAt(nextC[i][j]) != ('a' + j))<br>            nextC[i][j]++;<br>        }<br>      return getCount(0, 0, 0);<br>    }<br><br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>