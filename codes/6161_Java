<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br><br>public class DominoesFinding {<br>    int[][] a;<br>    boolean[][] f;<br>    boolean[][] u;<br>    int[] c;<br><br>    int bt(int x, int y) {<br>        if (x == 8) {<br>            return 1;<br>        } <br>        if (y == 7) {<br>            return bt(x + 1, 0);<br>        }<br><br>        if (f[x][y]) {<br>            return bt(x, y + 1);<br>        }<br><br>        int r = 0;<br>        f[x][y] = true;<br>        if (y != 6 &amp;&amp; !f[x][y + 1] &amp;&amp; !u[a[x][y]][a[x][y + 1]]) {<br>            f[x][y + 1] = true;<br>            u[a[x][y]][a[x][y + 1]] = true;<br>            u[a[x][y + 1]][a[x][y]] = true;<br>            r += bt(x, y + 1);<br>            f[x][y + 1] = false;<br>            u[a[x][y]][a[x][y + 1]] = false;<br>            u[a[x][y + 1]][a[x][y]] = false;<br>        }<br>        if (x != 7 &amp;&amp; !f[x + 1][y] &amp;&amp; !u[a[x][y]][a[x + 1][y]]) {<br>            f[x + 1][y] = true;<br>            u[a[x][y]][a[x + 1][y]] = true;<br>            u[a[x + 1][y]][a[x][y]] = true;<br>            r += bt(x, y + 1);<br>            f[x + 1][y] = false;<br>            u[a[x + 1][y]][a[x][y]] = false;<br>            u[a[x][y]][a[x + 1][y]] = false;<br>        }<br>        f[x][y] = false;<br>        return r;<br>    }<br><br><br>    public int getPossibilities(String[] board) {<br>        a = new int[8][7];<br>        c = new int[7];<br>        for (int i = 0; i &lt; 8; i++) {<br>            for (int j = 0; j &lt; 7; j++) {<br>                a[i][j] = board[i].charAt(j) - '0';<br>                c[a[i][j]] ++;<br>            }<br>        }<br><br>        for (int i = 0; i &lt; 7; i++) {<br>            if (c[i] != 8) {<br>                return 0;<br>            }<br>        }<br><br>        f = new boolean[8][7];<br>        u = new boolean[7][7];<br><br>        return bt(0, 0);<br>    }<br>}<br></td>