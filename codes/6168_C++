<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br> <br>using namespace std;<br> <br>double d[2][16][130][130];<br>int num[16]={0,1,1,2,1,2,2,3,1,2,2,3,2,3,3,4};<br>int a1[4];<br>int now;<br>int ds1;<br>double ans;<br>//int a2[4][2];<br> <br>class DynamiteBoxes<br>{<br>public:<br>void fang(int x,int y,int z,double p)<br>{<br>  if ((y&gt;=ds1)||(z&gt;=ds1)) ans+=p;<br>  else d[1-now][x][y][z]+=p;<br>}<br> <br>double getProbability(int height, int ds)<br>{<br>  int i,j,k,l,o,p,n,k1,l1,q,tmp1,x,y,xx,yy;<br>  double tmp,tmpp;<br>  ds1=ds;<br>  n=height;<br>  memset(d[0],0,sizeof(d[0]));<br>  d[0][0][0][0]=1;<br>  now=0;<br>  ans=0;<br>  tmp=1.0/16;<br>  for (i=0;i&lt;n;i++)<br>  {<br>    memset(d[1-now],0,sizeof(d[1-now]));<br>    for (j=0;j&lt;16;j++)<br>    {<br>      for (p=0;p&lt;4;p++)<br>        if ((j&amp;(1&lt;&lt;p))!=0) a1[p]=1;<br>        else a1[p]=0;<br>      for (k=0;k&lt;ds;k++)<br>        for (l=0;l&lt;ds;l++)<br>          if (d[now][j][k][l]&gt;0)<br>          {<br>            tmpp=d[now][j][k][l]*tmp;<br>            if ((k==0)&amp;&amp;(l==0))<br>            {<br>              for (o=0;o&lt;16;o++)<br>              {<br>                if ((o==9)||(o==6)) fang(o,1,1,tmpp);<br>                else fang(o,num[o],0,tmpp);<br>              }<br>              continue;<br>            }<br>            if (l==0)<br>            {<br>              for (o=0;o&lt;16;o++)<br>              {<br>                if ((o==6)||(o==9))<br>                {<br>                  if (o==6)<br>                  {<br>                    x=1;y=2;<br>                  }<br>                  else<br>                  {<br>                    x=0;y=3;<br>                  }<br>                  if (a1[x]+a1[y]==0)<br>                  {<br>                    fang(o,1,1,tmpp);<br>                  }<br>                  else if (a1[x]+a1[y]==2)<br>                  {<br>                    fang(o,k+2,0,tmpp);<br>                  }<br>                  else<br>                  {<br>                    if (a1[x]==1)<br>                    {<br>                      fang(o,k+1,1,tmpp);<br>                    }<br>                    else <br>                    {<br>                      fang(o,1,k+1,tmpp);<br>                    }<br>                  }<br>                }<br>                else<br>                {<br>                  tmp1=num[o];<br>                  for (q=0;q&lt;4;q++)<br>                    if ((a1[q]==1)&amp;&amp;((o&amp;(1&lt;&lt;q))!=0))<br>                    {<br>                      tmp1+=k;break;<br>                    }<br>                  fang(o,tmp1,0,tmpp);<br>                }<br>              }<br>              continue;<br>            }<br>            if (j==6)<br>            {<br>              xx=1;yy=2;<br>            }<br>            else<br>            {<br>              xx=0;yy=3;<br>            }<br>            for (o=0;o&lt;16;o++)<br>            {<br>              if ((o==6)||(o==9))<br>              {<br>                if (o==6)<br>                {<br>                  x=1;y=2;<br>                }<br>                else<br>                {<br>                  x=0;y=3;<br>                }<br>                if (a1[x]+a1[y]==0)<br>                {<br>                  fang(o,1,1,tmpp);<br>                }<br>                else<br>                {<br>                  fang(o,k+1,l+1,tmpp);<br>                }<br>              }<br>              else<br>              {<br>                tmp1=num[o];<br>                if ((o&amp;(1&lt;&lt;xx))!=0) tmp1+=k;<br>                if ((o&amp;(1&lt;&lt;yy))!=0) tmp1+=l;<br>                fang(o,tmp1,0,tmpp);<br>              }<br>            }<br>          }<br>    }<br>    now=1-now;<br>  }<br>  return ans;<br>}<br>};<br></td>