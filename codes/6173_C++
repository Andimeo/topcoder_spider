<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br> <br>using namespace std;<br> <br>class IndicatorMotion<br>{<br>  char f(char c)<br>  {<br>    if (c=='\\') return '/';<br>    if (c=='/') return '\\';<br>    if (c=='|') return '-';<br>    if (c=='-') return '|';<br>  }<br>  char l(char c)<br>  {<br>    if (c=='|') return '\\';<br>    if (c=='\\') return '-';<br>    if (c=='-') return '/';<br>    if (c=='/') return '|';    <br>  }<br>  char r(char c)<br>  {<br>    if (c=='|') return '/';<br>    if (c=='/') return '-';<br>    if (c=='-') return '\\';<br>    if (c=='\\') return '|';    <br>  }<br>public:<br>  string getMotion(string program, char startState)<br>  {<br>    istringstream in(program);<br>    string tmp=""; char ch,lst; int hm,i,j,len;<br>    tmp += startState;<br>    lst = startState;<br>    len = program.length();<br>    len /= 3;<br>    for (j=0;j&lt;len;j++)<br>    {<br>       in &gt;&gt; ch;<br>       if (ch=='F')<br>       {<br>         in &gt;&gt; hm;<br>         for (i=0;i&lt;hm;i++)<br>         {<br>           tmp+=(lst=f(lst));<br>         }<br>       }<br>       else if (ch=='L')<br>       {<br>         in &gt;&gt; hm;<br>         for (i=0;i&lt;hm;i++)<br>         {<br>           tmp+=(lst=l(lst));<br>         }<br>       }<br>       else if (ch=='R')<br>       {<br>         in &gt;&gt; hm;<br>         for (i=0;i&lt;hm;i++)<br>         {<br>           tmp+=(lst=r(lst));<br>         }<br>       }<br>       else if (ch=='S')<br>       {<br>                 in &gt;&gt; hm;<br>         for (i=0;i&lt;hm;i++)<br>         {<br>           tmp+=lst;<br>         }<br>       }<br>       else break;<br>    }<br>    return tmp;<br>  }<br> <br>};<br></td>