<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br><br>using namespace std;<br><br>int Count[50];<br><br>struct LadderPermutation {<br>  vector &lt;int&gt; createLadder(int n, int m, int k) {<br>    vector &lt;int&gt; ret;<br>    int sum = 0;<br>    for (int i = 0; i &lt; m; i++) {<br>      Count[i] = 1;<br>    }<br>    Count[m - 1] = k;<br>    <br>    sum = (m - 1) + k;<br>    if (sum &gt; n || k * m &lt; n) return ret;<br>    <br>    printf("sum = %d\n", sum);<br>    while (true) {<br>      if (sum == n) break; else sum++;<br>      for (int i = m - 1; i &gt;= 0; i--) {<br>        if (Count[i] != k) {<br>          Count[i]++;<br>          break;<br>        }<br>      }<br>    }<br>    int mm = 0;<br>    for (int i = 0; i &lt; m; i++) {<br>      mm += Count[i];<br>      for (int j = 0; j &lt; Count[i]; j++) {<br>        ret.push_back(mm - j);<br>      }<br>    }<br>    return ret;<br>  }<br>};<br></td>