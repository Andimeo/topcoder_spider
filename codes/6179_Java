<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class MapFolder {<br>    int[][][][] a;<br> <br>    boolean[][] v;<br>    boolean[][] h;<br> <br>    static int INF = 1000000;<br> <br>    int ans(int x1, int y1, int x2, int y2) {<br>  <br>  if (x2 - x1 == 0 &amp;&amp; y2 - y1 == 0) {<br>      return 0;<br>  }<br>  <br>  if (a[x1][y1][x2][y2] &gt; 0) {<br>      return a[x1][y1][x2][y2] - 1;<br>  }<br> <br>  System.out.println((x2 - x1) + " " + (y2 - y1));<br> <br>  int r = INF;<br>  // vert<br>  for (int i = x1; i &lt; x2; i++) {<br>      boolean ok = true;<br>      for (int j = y1; j &lt;= y2; j++) {<br>    if (h[i][j] != h[i][y1]) {<br>        ok = false;<br>        break;<br>    }<br>      }<br>      if (!ok) continue;<br> <br>outer:<br>      for (int j = y1; j &lt;= y2; j++) {<br>    int k1 = i - 1;<br>    int k2 = i + 1;<br>    while (k1 &gt;= x1 &amp;&amp; k2 &lt; x2) {<br>        if (h[k1][j] == h[k2][j]) {<br>      ok = false;<br>      break outer;<br>        }<br>        k1--;<br>        k2++;<br>    }<br>      }<br>      if (!ok) continue;<br> <br>outer2:<br>      for (int j = y1; j &lt; y2; j++) {<br>    int k1 = i;<br>    int k2 = i + 1;<br>    while (k1 &gt;= x1 &amp;&amp; k2 &lt;= x2) {<br>        if (v[k1][j] == v[k2][j]) {<br>      ok = false;<br>      break outer2;<br>        }<br>        k1--;<br>        k2++;<br>    }<br>      }<br>      if (!ok) continue;<br> <br>      int t = INF;<br>      if (i - x1 + 1 &gt; x2 - i) {<br>    t = ans(x1, y1, i, y2) + 1;<br>      } else {<br>    t = ans(i + 1, y1, x2, y2) + 1;<br>      }<br>      r = Math.min(r, t);<br>  }<br> <br> <br>  // horiz<br>  for (int i = y1; i &lt; y2; i++) {<br>      boolean ok = true;<br>      for (int j = x1; j &lt;= x2; j++) {<br>    if (v[j][i] != v[x1][i]) {<br>        ok = false;<br>        break;<br>    }<br>      }<br>      if (!ok) continue;<br> <br>outer3:<br>      for (int j = x1; j &lt;= x2; j++) {<br>    int k1 = i - 1;<br>    int k2 = i + 1;<br>    while (k1 &gt;= y1 &amp;&amp; k2 &lt; y2) {<br>        if (v[j][k1] == v[j][k2]) {<br>      ok = false;<br>      break outer3;<br>        }<br>        k1--;<br>        k2++;<br>    }<br>      }<br>      if (!ok) continue;<br> <br>outer4:<br>      for (int j = x1; j &lt; x2; j++) {<br>    int k1 = i;<br>    int k2 = i + 1;<br>    while (k1 &gt;= y1 &amp;&amp; k2 &lt;= y2) {<br>        if (h[j][k1] == h[j][k2]) {<br>      ok = false;<br>      break outer4;<br>        }<br>        k1--;<br>        k2++;<br>    }<br>      }<br>      if (!ok) continue;<br> <br>      int t = INF;<br>      if (i - y1 + 1 &gt; y2 - i) {<br>    t = ans(x1, y1, x2, i) + 1;<br>      } else {<br>    t = ans(x1, i + 1, x2, y2) + 1;<br>      }<br>      r = Math.min(r, t);<br>  }<br>  <br>  a[x1][y1][x2][y2] = r + 1;<br>  return r;<br>    }<br> <br>    public int minFolds(String[] theMap) {<br>  int m = (theMap.length + 1) / 2;<br>  int n = theMap[0].length() + 1;<br> <br>  v = new boolean[m][n - 1];<br>  h = new boolean[m - 1][n];<br>  for (int i = 0; i &lt; m; i++) {<br>      int j = 2 * i;<br>      for (int k = 0; k &lt; theMap[j].length(); k++) {<br>    v[i][k] = theMap[j].charAt(k) == 'u';<br>      }<br>  }<br> <br>  for (int i = 0; i &lt; m - 1; i++) {<br>      int j = 2 * i + 1;<br>      for (int k = 0; k &lt; theMap[j].length(); k++) {<br>    h[i][k] = theMap[j].charAt(k) == 'u';<br>      }<br>  }<br> <br>  a = new int[m][n][m][n];<br>  int aa = ans(0, 0, m - 1, n - 1);<br>  if (aa &gt; 10000) {<br>      return -1;<br>  } else {<br>      return aa;<br>  }<br>    }<br>}<br> <br> <br> <br>// Powered by PopsEdit<br></td>