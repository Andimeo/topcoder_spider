<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>using namespace std;<br><br>#define pb push_back<br>#define size(a) (int) a.size()<br>#define tip(x) cout &lt;&lt; #x &lt;&lt; " = " &lt;&lt; x &lt;&lt; "\n"<br>#define ALL(x) (x).begin(), (x).end()<br>#define CLEAR(X) memset(X, 0, sizeof(X))<br>#define FOR(i, a, b) for(int i = (int)(a); i &lt; (int)(b); ++i)<br>#define REP(i, b) FOR(i, 0, b)<br>#define FORI(it, x) for (it = (x).begin(); it != (x).end(); ++it)<br><br>int dst[128000], Q[128000], l, r;<br><br>class DivisorInc { <br>  public: <br>  int countOperations(int N, int M) { <br>    int ret;<br>    REP(i, 128000) dst[i] = -1;<br>    l = r = 0;<br>    Q[r ++] = N; dst[N] = 0;<br><br>    for (; l &lt; r; l ++) {<br>      int x = Q[l];<br>      for (int i = 2; i * i &lt;= x; i ++)<br>        if (x % i == 0) {<br>          if (x + i &lt;= M &amp;&amp; dst[x + i] == -1)<br>            dst[x + i] = dst[x] + 1, Q[r ++] = x + i;<br>          if (x + x/i &lt;= M &amp;&amp; dst[x + x/i] == -1)<br>            dst[x + x/i] = dst[x] + 1, Q[r ++] = x + x/i;<br>        }<br>    }<br>    return ret = dst[M]; <br>  } <br><br>    <br> <br>}; <br><br>    <br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>