<td class="problemText" colspan="8" valign="middle" align="left">
            imports System<br>imports Microsoft.VisualBasic<br>imports System.Collections<br>imports System.Text<br> <br> <br>Public Class PolyMove<br> <br>    Public Function addedArea(ByVal x() As Integer, ByVal y() As Integer) As Double<br>        Dim i As Integer, i2 As Integer, i3 As Integer<br>        Dim c As Double<br>        Dim bl As Double<br>        Dim na As Double<br>        Dim cBest As Double<br>        Dim ga() As Double<br> <br>        ReDim ga(x.Length - 1)<br> <br>        cBest = 0<br> <br>        For i = 0 To x.Length - 1<br>            i2 = i + 1<br>            i3 = i + 2<br>            If i2 &gt; x.Length - 1 Then i2 = i2 - x.Length<br>            If i3 &gt; x.Length - 1 Then i3 = i3 - x.Length<br> <br>            c = GetArea(x, y, i, i2, i3)<br> <br>            Dim u As Double, v As Double, h As Double<br>            u = x(i3) - x(i)<br>            v = y(i3) - y(i)<br>            bl = Math.Sqrt(u * u + v * v)<br>            h = (c / bl) * 2<br>            na = bl * (h + 1) / 2<br> <br>            na = na - c<br>            ga(i) = na<br>        Next<br> <br>        Dim ba(55, 1, 1) As Double<br> <br>        ba(0, 0, 0) = 0<br>        ba(0, 1, 1) = ga(0)<br> <br>        For i = 1 To x.Length - 1<br>            If i = x.Length - 1 Then<br>                ba(i, 0, 0) = Math.Max(ba(i - 1, 0, 0), ba(i - 1, 1, 0))<br>                ba(i, 1, 0) = ba(i - 1, 0, 0) + ga(i)<br>                ba(i, 0, 1) = Math.Max(ba(i - 1, 0, 1), ba(i - 1, 1, 1))<br>                ba(i, 1, 1) = Math.Max(ba(i - 1, 0, 1), ba(i - 1, 1, 1))<br>            Else<br>                ba(i, 0, 0) = Math.Max(ba(i - 1, 0, 0), ba(i - 1, 1, 0))<br>                ba(i, 1, 0) = ba(i - 1, 0, 0) + ga(i)<br>                ba(i, 0, 1) = Math.Max(ba(i - 1, 0, 1), ba(i - 1, 1, 1))<br>                ba(i, 1, 1) = ba(i - 1, 0, 1) + ga(i)<br>            End If<br>        Next<br> <br>        cBest = 0<br>        If ba(x.Length - 1, 0, 0) &gt; cBest Then cBest = ba(x.Length - 1, 0, 0)<br>        If ba(x.Length - 1, 0, 1) &gt; cBest Then cBest = ba(x.Length - 1, 0, 1)<br>        If ba(x.Length - 1, 1, 0) &gt; cBest Then cBest = ba(x.Length - 1, 1, 0)<br>        If ba(x.Length - 1, 1, 1) &gt; cBest Then cBest = ba(x.Length - 1, 1, 1)<br> <br>        Return cBest<br> <br>    End Function<br> <br>    Public Function GetArea(ByVal x() As Integer, ByVal y() As Integer, ByVal i1 As Integer, ByVal i2 As Integer, ByVal i3 As Integer) As Double<br>        Dim u As Double, v As Double, a As Double, b As Double<br>        u = x(i2) - x(i1)<br>        v = y(i2) - y(i1)<br>        a = x(i3) - x(i1)<br>        b = y(i3) - y(i1)<br>        GetArea = Math.Abs(u * b - v * a) / 2<br>    End Function<br> <br>End Class<br></td>