<td class="problemText" colspan="8" valign="middle" align="left">
            //be the MAN !!!!<br>//challenge it !!!!<br><br>import java.util.*;<br><br>public class ColoredBricks {<br><br>    int[][] rot = new int[24][];<br><br>    public int minRepaints(String[] bricks) {<br>        int[] a = new int[6];<br>        for (int i = 0; i &lt; 6; i++) {<br>            a[i] = i;<br>        }<br>        int k = 0;<br>        for (int i = 0; i &lt; 6; i++) {<br>            for (int j = 0; j &lt; 4; j++) {<br>                rot[k++] = a.clone();<br>                swap(a, 0, 1, 2, 3);<br>            }<br>            if (i &lt; 4) {<br>                swap(a, 0, 5, 2, 4);<br>            }<br>            if (i == 3) {<br>                swap(a, 1, 5, 3, 4);<br>            }<br>            if (i == 4) {<br>                swap(a, 1, 4, 3, 5);<br>                swap(a, 1, 4, 3, 5);<br>            }<br>        }<br>        /*<br>        for (int i = 0; i &lt; k; i++) {<br>            for (int j = 0; j &lt; k; j++) if (i != j) {<br>                assert !Arrays.equals(rot[i], rot[j]);<br>            }<br>        }<br>        */<br>        int bricksN = bricks.length;<br>        int[][] br = new int[bricksN][6];<br>        for (int i = 0; i &lt; bricksN; i++) {<br>            for (int j = 0; j &lt; 6; j++) {<br>                br[i][j] = bricks[i].charAt(j) - '0';<br>            }<br>        }<br><br>        int minT = bricksN * 6;<br>        for (int n = 0; n &lt; 117649; n++) {<br>            int[] b = new int[6];<br>            int nn = n;<br>            for (int l = 0; l &lt; 6; l++) {<br>                b[l] = nn % 7;<br>                nn = nn / 7;<br>            }<br>            boolean first = true;<br>            for (int w = 1; w &lt; 24; w++) {<br>                for (int q = 0; q &lt; 6; q++) {<br>                    if (b[q] &lt; b[rot[w][q]]) break;<br>                    if (b[q] &gt; b[rot[w][q]]) first = false;<br>                }<br>            }<br>            if (!first) continue;<br>            int t = 0;<br>            for (int i = 0; i &lt; bricksN; i++) {<br>                int minO = 6;<br>                for (int j = 0; j &lt; 24; j++) {<br>                    int o = 0;<br>                    for (int l = 0; l &lt; 6; l++) {<br>                        if (br[i][rot[j][l]] != b[l]) o++;<br>                    }<br>                    if (o &lt; minO) minO = o;<br>                }<br>                t += minO;<br>            }<br>            if (t &lt; minT) minT = t;<br>        }<br><br>        return minT;<br>    }<br><br>    private void swap(int[] a, int q, int w, int e, int r) {<br>        int t = a[q];<br>        a[q] = a[w];<br>        a[w] = a[e];<br>        a[e] = a[r];<br>        a[r] = t;<br>    }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>