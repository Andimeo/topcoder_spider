<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class BishopOnTheBoard {<br>    public int countReachableCells(int xSize, int ySize, int x, int y, int k) {<br>  this.k = k;<br>  if (xSize &lt; ySize) {<br>      int tv = xSize; xSize = ySize; ySize = tv;<br>      tv = x; x = y; y = tv;<br>  }<br>  if (y &gt; ySize/2) {<br>      y = ySize-1-y;<br>  }<br>  if (x &gt; xSize/2) {<br>      x = xSize-1-x;<br>  }<br><br>  if (k == 1) {<br>      return<br>    1+<br>    Math.min(x, y) +<br>    Math.min(xSize-1-x, y) +<br>    Math.min(x, ySize-1-y) +<br>    Math.min(xSize-1-x, ySize-1-y);<br>  }<br>  long rv = ySize/2 + (ySize%2==1&amp;&amp;y%2==0?1:0);<br>  long rrv = rv +<br>      doit(xSize-1-x, ySize, y) +<br>      doit(x, ySize, y);<br>  return (int)rrv;<br>    }<br><br>    long k;<br>    long doit(long xLeft, long ySize, long y) {<br>  long cy = y;<br>  if (k%2 == 0) {<br>      cy = ySize-1-y;<br>  }<br>  long cx = (ySize-1)*(k-1);<br>  long rv = 0;<br>  for (long i=0; i&lt;ySize; i++) {<br>      long limx = Math.min(cx + Math.abs(cy-i), xLeft);<br>//       boolean baseok = (i-y)%2==1;<br>//       long dif = (limx+1)/2 + (limx%2 == 0 &amp;&amp; baseok ? 1 : 0);<br><br>      boolean baseok = Math.abs(i-y)%2==1;<br>      long dif = limx/2 + (limx%2 == 1 &amp;&amp; baseok ? 1 : 0);<br>//       System.out.println(xLeft + " " + ySize + " " + y + " " + i + " " + dif);<br>      rv += dif;<br>  }<br>  return rv;<br>    }<br>}<br><br><br><br>// Powered by FileEdit<br></td>