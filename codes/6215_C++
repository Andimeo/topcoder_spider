<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;utility&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br><br>using namespace std;<br><br>string a[21][1&lt;&lt;12];<br>string g[21][21];<br><br>class JoinedString{<br>public:<br><br>  int flag[20],n,len[20];<br>  vector&lt;string&gt; str;<br><br>  string dp(int current,int mask)<br>  {<br>    string &amp;ret=a[current][mask];<br>    if (ret!="") return ret;<br>    if (!mask) return "";<br>    int i;<br>    string temp;<br>    for(i=0;i&lt;n;i++) if (mask&amp;(1&lt;&lt;i)){<br>      temp=g[current][i]+dp(i,mask^(1&lt;&lt;i));<br>      if (ret=="" || (temp.size()&lt;ret.size() || (temp.size()==ret.size() &amp;&amp; temp&lt;ret))) ret=temp;<br>    }<br>    return ret;<br>  }<br><br>  string joinWords(vector &lt;string&gt; words){<br>    int i,j,k,t;<br>    n=words.size();<br>    memset(flag,0,sizeof(flag));<br>    for(i=0;i&lt;n;i++) len[i]=words[i].size();<br>    for(i=0;i&lt;n;i++){<br>      for(j=0;j&lt;n;j++) if (i!=j){<br>        if (words[i]==words[j] &amp;&amp; i&lt;j) continue;<br>        for(k=0;k+len[i]&lt;=len[j];k++){<br>          for(t=0;t&lt;len[i];t++){<br>            if (words[i][t]!=words[j][t+k]) break;<br>          }<br>          if (t==len[i]){<br>            flag[i]=1;<br>          }<br>        }<br>      }<br>    }<br>    str.clear();<br>    for(i=0;i&lt;n;i++) if (!flag[i]){<br>      str.push_back(words[i]);<br>    }<br>    n=str.size();<br>    for(i=0;i&lt;n;i++) len[i]=str[i].size();<br>    for(i=0;i&lt;n;i++){<br>      for(j=0;j&lt;n;j++) if (i!=j){<br>        for(k=len[j];k&gt;=0;k--){<br>          if (k&lt;=len[i]){<br>            for(t=0;t&lt;k;t++){<br>              if (str[i][len[i]-k+t]!=str[j][t]) break;<br>            }<br>            if (t==k){<br>              g[i][j]=str[j].substr(k,len[j]-k);<br>              break;<br>            }<br>          }<br>        }<br>      }<br>    }<br>    string temp;<br>    string best="";<br>    for(i=0;i&lt;n;i++){<br>      for(j=0;j&lt;(1&lt;&lt;n);j++){<br>        a[i][j]="";<br>      }<br>    }<br>    for(i=0;i&lt;n;i++){<br>      temp=str[i]+dp(i,((1&lt;&lt;n)-1)^(1&lt;&lt;i));<br>      if (best=="") best=temp;<br>      if (temp.size() &lt; best.size() || (temp.size() == best.size() &amp;&amp; temp&lt;best)) best=temp;<br>    }<br>    return best;<br>  }<br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>