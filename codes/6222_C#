<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br><br>public class EscapingJail <br>{<br>  public int getMaxDistance(string[] chain) <br>  {<br>    int[,] dist = new int[50, 50];<br>    int N = chain.Length;<br>    for(int i=0;i&lt;N;i++)<br>      for (int j = 0; j &lt; N; j++)<br>      {<br>        dist[i, j] = dista(chain[i][j]);<br>      }<br>    for(int i=0;i&lt;N;i++)<br>      for (int j = 0; j &lt; N; j++)<br>        for (int k = 0; k &lt; N; k++)<br>        {<br>          if (dist[j, i] != -1 &amp;&amp; dist[i, k] != -1) if (dist[j, k] == -1 || dist[j, k] &gt; dist[j, i] + dist[i, k]) dist[j, k] = dist[j, i] + dist[i, k];<br>        }<br>    int best = -1;<br>    for (int i = 0; i &lt; N; i++)<br>      for (int j = 0; j &lt; N; j++)<br>        if (dist[i, j] == -1) return -1; else best = Math.Max(best, dist[i, j]);<br>    return best;<br><br>  }<br>  int dista(char a)<br>  {<br>    if (char.IsDigit(a)) return a - '0';<br>    if (char.IsUpper(a)) return a - 'A' + 36;<br>    if (char.IsLower(a)) return a - 'a' + 10;<br>    return -1;<br>  }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>