<td class="problemText" colspan="8" valign="middle" align="left">
            #line 2 "EscapingJail.cc"<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;ctype.h&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;stdlib.h&gt;<br>using namespace std;<br> <br>const int INF = 1000000;<br> <br>int n;<br>int grid[50][50];<br> <br>int parse(char c)<br>{<br>    if (c == ' ')<br>  return INF;<br>    if (c &lt;= '9')<br>  return c - '0';<br>    else if (c &lt;= 'Z')<br>  return c - 'A' + 36;<br>    return c - 'a' + 10;<br>}<br> <br>class EscapingJail {<br>public:<br>    int getMaxDistance(vector &lt;string&gt; chain) {<br>  n = chain.size();<br>  for (int i = 0; i &lt; n; i++)<br>      for (int j = 0; j &lt; n; j++)<br>    grid[i][j] = parse(chain[i][j]);<br>  for (int k = 0; k &lt; n; k++)<br>      for (int i = 0; i &lt; n; i++)<br>    for (int j = 0; j &lt; n; j++)<br>        grid[i][j] &lt;?= grid[i][k] + grid[k][j];<br>  int m = 0;<br>  for (int i = 0; i &lt; n; i++)<br>      for (int j = 0; j &lt; n; j++)<br>    m &gt;?= grid[i][j];<br>  if (m == INF)<br>      return -1;<br>  return m;<br>    }<br>};<br> <br> <br> <br>// Powered by FileEdit<br></td>