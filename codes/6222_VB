<td class="problemText" colspan="8" valign="middle" align="left">
            imports System<br>imports Microsoft.VisualBasic<br>imports System.Collections<br>imports System.Text<br> <br> <br>Public Class EscapingJail<br> <br>    Dim maxDist(50, 50) As Integer<br>    Dim Dist(50, 50) As Integer<br> <br>    Public Function getMaxDistance(ByVal chain() As String) As Integer<br>        Dim y As Integer<br>        Dim x As Integer<br>        Dim d As Integer<br>        Dim p As Integer<br> <br>        p = chain.Length<br> <br>        Dim qx As New ArrayList<br>        Dim qy As New ArrayList<br>        Dim qd As New ArrayList<br> <br>        For y = 0 To chain.Length - 1<br>            For x = 0 To chain(0).Length - 1<br>                d = gd(chain(y).Chars(x))<br>                qx.Add(x)<br>                qy.Add(y)<br>                qd.Add(d)<br>                Dist(x, y) = d<br>            Next<br>        Next<br> <br>        For x = 0 To p - 1<br>            For y = 0 To p - 1<br>                maxDist(x, y) = 1000000<br>            Next<br>        Next<br> <br>        Dim iBond As Integer<br>        While qx.Count &gt; 0<br>            x = qx(0)<br>            y = qy(0)<br>            d = qd(0)<br> <br>            If d &lt; maxDist(x, y) And x &lt;&gt; y Then<br>                maxDist(x, y) = d<br>                maxDist(y, x) = d<br>                For iBond = 0 To p - 1<br>                    If iBond &lt;&gt; x And iBond &lt;&gt; y Then<br>                        d = maxDist(x, y) + maxDist(y, iBond)<br>                        If maxDist(iBond, x) &gt; d Then<br>                            maxDist(iBond, x) = d<br>                            qx.Add(x)<br>                            qy.Add(iBond)<br>                            qd.Add(d)<br>                        End If<br>                        d = maxDist(x, y) + maxDist(x, iBond)<br>                        If maxDist(iBond, y) &gt; d Then<br>                            maxDist(iBond, y) = d<br>                            qx.Add(y)<br>                            qy.Add(iBond)<br>                            qd.Add(d)<br>                        End If<br>                    End If<br>                Next<br>            End If<br> <br>            qx.RemoveAt(0)<br>            qy.RemoveAt(0)<br>            qd.RemoveAt(0)<br>        End While<br> <br> <br>        Dim iBest As Integer<br>        iBest = 0<br>        For x = 0 To p - 1<br>            For y = 0 To p - 1<br>                If x &lt;&gt; y Then<br>                    If maxDist(x, y) &gt; iBest Then<br>                        iBest = maxDist(x, y)<br>                    End If<br>                End If<br>            Next<br>        Next<br> <br>        If iBest &gt;= 1000000 Then Return -1<br>        Return iBest<br> <br> <br>    End Function<br> <br>    Private Function gd(ByVal sc As String) As Integer<br> <br>        If sc &gt;= "0" And sc &lt;= "9" Then Return Val(sc)<br>        If sc &gt;= "a" And sc &lt;= "z" Then Return Asc(sc) - Asc("a") + 10<br>        If sc &gt;= "A" And sc &lt;= "Z" Then Return Asc(sc) - Asc("A") + 36<br>        Return 1000000<br> <br>        ''0'-'9': Distances 0 to 9 feet, in order.<br>        ''a'-'z': Distances 10 to 35 feet, in order.<br>        ''A'-'Z': Distances 36 to 61 feet, in order.<br> <br>    End Function<br> <br>End Class<br></td>