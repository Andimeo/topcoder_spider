<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cmath&gt;<br>using namespace std;<br>typedef long long i64;<br> <br>struct ScoreRecomposition {<br>  int minError(string quest, int score) {<br>    int a[20], n = quest.size();<br>    for (int i = 0; i &lt; n; i++) a[i] = i+1;<br> <br>    int min_e = -1;<br> <br>    do {<br>      int s = 0;<br>      for (int i = 0; i &lt; n; i++)<br>        if (quest[i] == 'C') s += a[i];<br>      if (s != score) continue;<br> <br>      int e = 0;<br>      for (int i = 0; i &lt; n; i++)<br>        e &gt;?= abs((i+1) - a[i]);<br>      if (min_e &lt; 0 || e &lt; min_e) min_e = e;      <br>    } while (next_permutation(a, a+n));<br> <br>    return min_e;    <br>  }<br>};<br></td>