<td class="problemText" colspan="8" valign="middle" align="left">
            public class ScoreRecomposition {<br>public int minError(String questions, int score) {<br>int n = questions.length();<br>int[] perm = new int[n];<br>int min = 99999999;<br>for (int i = 0; i &lt; n; i++) perm[i] = i+1;<br>do {<br>int s = 0;<br>for (int i = 0; i &lt; n; i++) if (questions.charAt(i)=='C') s+=perm[i];<br>if (s==score) {<br>int max = 0;<br>for (int i = 0; i &lt; n; i++) {<br>int abs = perm[i]-(i+1);<br>if (abs&lt;0) abs=-abs;<br>if (abs&gt;max) max = abs;<br>}<br>if (max&lt;min) min = max;<br>}<br>} while(nextPermutation(perm));<br>if (min==99999999) return -1;<br>return min;<br>}<br>  //here a permutation is a reordering of<br>  //objects up to isomorphism<br>  public boolean nextPermutation(int[] arr) {<br>    int last = Integer.MIN_VALUE;<br>    int n = arr.length;<br>    int p = n-1;<br>    for (;p&gt;=0;p--) {<br>      if (arr[p]&lt;last) {<br>        for (int j = n-1; j &gt; p; j--) {<br>          if (arr[j]&gt;arr[p]) {<br>            swap(arr,p,j);<br>            reverse(arr,p+1,n);<br>            return true;<br>          }<br>        }<br>        return false;<br>      }<br>      last = arr[p];<br>    }<br>    for (int i = 0; i &lt; n; i++) arr[i]=i;<br>    return false;<br>  }<br>  public void swap(int[] arr, int ind1, int ind2) {<br>    int t = arr[ind1];<br>    arr[ind1] = arr[ind2];<br>    arr[ind2] = t;<br>  }<br>  public void reverse(int[] arr, int ind1, int ind2) {<br>    if (ind2&lt;=ind1) return;<br>    for (int i = 0; i &lt; (ind2-ind1)/2; i++) {<br>      swap(arr,ind1+i,ind2-1-(i));<br>    }<br>  }<br>}<br></td>