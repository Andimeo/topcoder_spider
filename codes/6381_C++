<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;stdio.h&gt;<br>#include&lt;ctype.h&gt;<br>#include&lt;string.h&gt;<br>#include&lt;math.h&gt;<br>#include&lt;stdlib.h&gt;<br>#include&lt;time.h&gt;<br>#include&lt;limits.h&gt;<br>#include&lt;iostream&gt;<br>#include&lt;vector&gt;<br>#include&lt;string&gt;<br>#include&lt;set&gt;<br>#include&lt;sstream&gt;<br>#include&lt;map&gt;<br>using namespace std;<br><br>//REAL CODE<br>class BlockCounter<br>{<br>public:<br>long long solve(string s,char &amp;start,char &amp;end)<br>{<br>  int i,j;<br>  long long ans,tmp;<br>  char s1,e1,s2,e2;<br>  if ((s=="A")||(s=="B"))<br>  {<br>    start=s[0];<br>    end=s[0];<br>    return 1;<br>  }<br>  if (s[0]=='(')<br>  {<br>    j=1;<br>    for (i=1;i&lt;s.length();i++)<br>    {<br>      if (j==0) break;<br>      if (s[i]=='(') j++;<br>      if (s[i]==')') j--;<br>    }<br>    if (i==s.length())<br>    {<br>      j=1;<br>      for (i=1;i&lt;s.length();i++)<br>      {<br>        if (s[i]=='(') j++;<br>        if (s[i]==')') j--;<br>        if ((s[i]==',')&amp;&amp;(j==1)) break;<br>      }<br>      tmp=atoi(s.substr(1,i-1).c_str());<br>      ans=solve(s.substr(i+1,s.length()-i-2),s1,e1);<br>      ans*=tmp;<br>      if (s1==e1) ans-=(tmp-1);<br>      start=s1;<br>      end=e1;<br>      return ans;<br>    }<br>    else<br>    {<br>      ans=solve(s.substr(0,i),s1,e1);<br>      ans+=solve(s.substr(i),s2,e2);<br>      if (s2==e1) ans--;<br>      start=s1;<br>      end=e2;<br>      return ans;<br>    }<br>    <br>  }<br>  else<br>  {<br>    ans=solve(s.substr(1),s1,e1);<br>    if (s1!=s[0]) ans++;<br>    start=s[0];<br>    end=e1;<br>    return ans;<br>  }<br>}<br><br>long long countBlocks(string word)<br>{<br>  char start,end;<br>  return solve(word,start,end);<br>}<br>};<br><br>//Powered By [KawigiEdit] 2.0!<br>//Coded by Ikki<br></td>