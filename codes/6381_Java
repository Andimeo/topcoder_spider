<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class BlockCounter <br>{<br>  int split(String word)<br>  {<br>     int L=word.length();<br>      int det=0;<br>     for (int i=0;i&lt;L-1;i++)<br>     {<br>       if (word.charAt(i)=='(')<br>         det++;<br>       if (word.charAt(i)==')')<br>         det--;<br>       if (det==0)<br>         return i;<br>     }<br>     return -1;<br>  }<br>  char getLeftMost(String word)<br>  {<br>    int L=word.length();<br>    if (word.charAt(0)=='A') return 'A';<br>    if (word.charAt(0)=='B') return 'B';<br>    int pos=split(word);<br>    if (pos!=-1)<br>      return getLeftMost(word.substring(0,pos+1));<br>    else<br>      return getLeftMost(word.substring(3,L-1));<br>  }<br>  char getRightMost(String word)<br>  {<br>    int L=word.length();<br>    if (word.charAt(L-1)=='A') return 'A';<br>    if (word.charAt(L-1)=='B') return 'B';<br>    int pos=split(word);<br>    if (pos!=-1)<br>      return getRightMost(word.substring(pos+1,L));<br>    else<br>      return getRightMost(word.substring(3,L-1));<br>  }<br>  public long countBlocks(String word) <br>  {<br>     int L=word.length();<br>     if (L==1) <br>       return 1;<br>     int pos=split(word);     <br>     if (pos!=-1)<br>     {<br>       long count=countBlocks(word.substring(0,pos+1))<br>             +countBlocks(word.substring(pos+1,L));<br>       if (getRightMost(word.substring(0,pos+1))==getLeftMost(word.substring(pos+1,L)))<br>         count--;<br>       return count;<br>     }<br>     int X=Integer.parseInt(word.substring(1,2));<br>     String B=word.substring(3,L-1);<br>     long count=countBlocks(B);<br>     count=count*X;<br>     if (getRightMost(B)==getLeftMost(B))<br>       count-=(X-1);<br>     return count;<br>  }<br>}<br> <br>// Powered by PopsEdit<br></td>