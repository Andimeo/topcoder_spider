<td class="problemText" colspan="8" valign="middle" align="left">
            import java.math.BigInteger;<br><br>public class SeatingPlan {<br>  public String expectedTrial(int m, int n, int k) {<br>    if (m &lt; n) {<br>      int t = m; m = n; n = t;<br>    }<br>    long[][][] a = new long[m][1 &lt;&lt; n][k + 1];<br>    boolean[] good = new boolean[1 &lt;&lt; n];<br>    int[] ones = new int[1 &lt;&lt; n];<br>    for (int ma = 0; ma &lt; (1 &lt;&lt; n); ma++) {<br>      int mm = ma;<br>      good[ma] = true;<br>      while (mm &gt; 0) {<br>        if ((mm &amp; 3) == 3) {<br>          good[ma] = false;<br>          break;<br>        }<br>        mm &gt;&gt;= 1;<br>      }<br>      if (ma &gt; 0)<br>        ones[ma] = ones[ma &amp; (ma - 1)] + 1;<br>      if (ones[ma] &lt;= k)<br>        a[0][ma][ones[ma]] = 1;<br>    }<br>    for (int x = 0; x &lt; m - 1; x++) {<br>      for (int b = 0; b &lt;= k; b++) {<br>        for (int m1 = 0; m1 &lt; (1 &lt;&lt; n); m1++) {<br>          if (!good[m1])<br>            continue;<br>          if (a[x][m1][b] == 0)<br>            continue;<br>          for (int m2 = 0; m2 &lt; (1 &lt;&lt; n); m2++) {<br>            if (!good[m2] || ((m1 &amp; m2) &gt; 0) || b + ones[m2] &gt; k)<br>              continue;<br>            a[x + 1][m2][b + ones[m2]] += a[x][m1][b];<br>          }<br>        }<br>      }<br>    }<br>    long ans = 0;<br>    for (int m1 = 0; m1 &lt; (1 &lt;&lt; n); m1++) {<br>      ans += a[m - 1][m1][k];<br>    }<br>    if (ans == 0)<br>      return "Impossible!";<br>    System.out.println("acceptable " + ans);<br>    int mn = m * n;<br>    long[][] cnk = new long[mn + 1][k + 1];<br>    for (int aa = 0; aa &lt;= mn; aa++) {<br>      cnk[aa][0] = 1;<br>      for (int b = 1; b &lt;= aa &amp;&amp; b &lt;= k; b++) {<br>        cnk[aa][b] = cnk[aa - 1][b - 1] + cnk[aa - 1][b];<br>      }<br>    }<br>    long tot = cnk[mn][k];<br>    System.out.println("total " + tot);<br>    BigInteger num = BigInteger.valueOf(ans);<br>    BigInteger den = BigInteger.valueOf(tot);<br>    BigInteger gcd = num.gcd(den);<br>    num = num.divide(gcd);<br>    den = den.divide(gcd);<br>    return den + "/" + num;<br>  }<br>  <br>  public static void main(String[] args) {<br>    String s = new SeatingPlan().expectedTrial(2, 3, 0);<br>    System.out.println(s);<br>  }<br><br>}<br></td>