<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class WebsiteRank {<br>  Map&lt;String, Integer&gt; idOf;<br>  int n;<br>  boolean[][] directLink, linkPath;<br>  Map&lt;Integer, Long&gt; memo;<br>  <br>  public long calcVotes(int id) {<br>    if (!memo.containsKey(id)) {<br>      long total = 1;<br>      for (int i = 0; i &lt; n; ++i) if (directLink[i][id] &amp;&amp; !linkPath[id][i]) total += calcVotes(i);<br>      memo.put(id, total);<br>    }<br>    return memo.get(id);<br>  }<br> <br>  public long countVotes(String[] votes, String website) {<br>    idOf = new HashMap&lt;String, Integer&gt;();<br>    n = 0;<br>    for (int i = 0; i &lt; votes.length; ++i) {<br>      StringTokenizer st = new StringTokenizer(votes[i]);<br>      while (st.hasMoreTokens()) {<br>        String w = st.nextToken();<br>        if (!idOf.containsKey(w)) {<br>          idOf.put(w, n);<br>          ++n;<br>        }<br>      }<br>    }<br>    directLink = new boolean[n][n];<br>    for (int x = 0; x &lt; votes.length; ++x) {<br>      StringTokenizer st = new StringTokenizer(votes[x]);<br>      int i = idOf.get(st.nextToken());<br>      while (st.hasMoreTokens()) {<br>        int j = idOf.get(st.nextToken());<br>        directLink[j][i] = true;<br>      }<br>    }<br>    linkPath = new boolean[n][n]; for (int i =  0; i &lt; n; ++i) for (int j = 0; j &lt; n; ++j) linkPath[i][j] = directLink[i][j];<br>    for (int k = 0; k &lt; n; ++k) for (int i = 0; i &lt; n; ++i) for (int j = 0; j &lt; n; ++j) if (linkPath[i][k] &amp;&amp; linkPath[k][j]) linkPath[i][j] = true;<br>    memo = new HashMap&lt;Integer, Long&gt;();<br>    return calcVotes(idOf.get(website));<br>  }<br>  <br>  <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>