<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class PowerCollector {<br>  const double INF = 5000000000000000000.0;<br>  <br>  long power(long a, int b)<br>  {<br>    if (b == 0)<br>      return 1;<br>    if (b % 2 == 0)<br>      return power(a * a, b / 2);<br>    return a * power(a, b - 1);<br>  }<br><br>  double dpower(double a, int b)<br>  {<br>    if (b == 0)<br>      return 1;<br>    if (b % 2 == 0)<br>      return dpower(a * a, b / 2);<br>    return a * dpower(a, b - 1);<br>  }<br>  <br>  long root(long x, int pow)<br>  {<br>    long r = Math.Max((long) Math.Exp(Math.Log(x) / pow) - 2, 0);<br>    while (power(r, pow) &lt;= x &amp;&amp; dpower(r, pow) &lt; INF)<br>      ++r;<br>    return r - 1;<br>  }<br>  <br>  public string countPowers(string N) {<br>    long n = long.Parse(N);<br><br>    long res = root(n, 2);<br>    for (int pow = 3; true; ++pow)<br>    {<br>      long mx = root(n, pow);<br>      if (mx &lt; 2)<br>        break;<br>      for (int i = 2; i &lt;= mx; ++i)<br>      {<br>        long z = power(i, pow);<br>        bool ok = true;<br>        for (int p = 2; p &lt; pow; ++p)<br>          if (power(root(z, p), p) == z)<br>            ok = false;<br>        if (ok)<br>          ++res;<br>      }<br>    }<br>    return res.ToString();<br>  }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>