<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.BigInteger;<br> <br>public class PowerCollector {<br>    long[] a;<br>    int m;<br>    long ans;<br> <br>    int lcm(int x, int y) {<br>        int a = x * y;<br>        while (y &gt; 0) {<br>            int t = y;<br>            y = x % y;<br>            x = t;<br>        }<br>        return a / x;<br>    }<br> <br>    void bt(boolean[] z, int s) {<br>        int y = 1;<br>        long p = -1;<br>        for (int k = 2; k &lt; m; k++) {<br>            if (z[k]) {<br>                y = lcm(y, k);<br>                if (y &gt;= m) {<br>                    return;<br>                }<br>                p = -p;<br>            }<br>        }<br>        if (s &lt; m) {<br>            bt(z, s + 1);<br>            z[s] = true;<br>            bt(z, s + 1);<br>            z[s] = false;<br>        } else {<br>            ans += a[y] * p;<br>        }<br>    }<br> <br>    public String countPowers(String N) {<br>        long n = Long.parseLong(N);<br>        BigInteger nb = new BigInteger(N);<br>        a = new long[100];<br>        m = 0;<br>        for (int k = 2; true; k++) {<br>            long l = 1;<br>            long r = n;<br>            while (l &lt; r - 1) {<br>                long v = (l + r) / 2;<br>                BigInteger q = BigInteger.valueOf(v).pow(k);<br>                if (q.compareTo(nb) == 1) {<br>                    r = v;<br>                } else {<br>                    l = v;<br>                }<br>            }<br>            a[k] = l - 1;<br>            if (a[k] == 0) {<br>                m = k;<br>                break;<br>            }<br>        }<br>//        for (int i = 2; i &lt; m; i++) {<br>//            System.out.println(i + " " + a[i]);<br>//        }<br> <br>        boolean[] z = new boolean[m];<br>        bt(z, 2);<br> <br>        return Long.toString(ans + 1);<br>    }<br> <br>}<br> <br> <br>// Powered by PopsEdit<br> <br>// Powered by CodeProcessor<br></td>