<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;list&gt;<br>using namespace std;<br>#define forn(i,n) for(int i=0;i&lt;(int)(n);++i)<br>#define forsn(i,s,n) for(int i=s;i&lt;(int)(n);++i)<br>#define forall(i,c) for(typeof(c.begin()) i=c.begin();i!=c.end();++i)<br><br>class UnfairDivision {<br>public:<br>    int albertsShare(vector &lt;int&gt; v) {<br>        int res=0;<br>        int s=0;<br>        forn(i,v.size()) s+=v[i];<br>        forsn(a,1,v.size()) {<br>          vector&lt;int&gt; m(3);<br>          forsn(b,1,v.size())if (b!=a) {<br>            vector&lt;int&gt; p(3);<br>            int ip=0;<br>            forn(i,v.size()) {<br>              if (i==a) ip++;<br>              if (i==b) ip++;<br>              p[ip]+=v[i];<br>            }<br>            sort(p.begin(), p.end(), greater&lt;int&gt;());<br>            swap(p[0],p[1]);<br>            m=max(m,p);<br>          }<br>          res&gt;?=m[2];<br>        }<br>        return res;<br>    }<br><br>};<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>