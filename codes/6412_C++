<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cmath&gt;<br><br>using namespace std;<br><br>double dp[51][2501][2];<br><br>class Conditional  { <br>public: <br><br>  double probability(int nDice, int maxSide, int v, int theSum) { <br>    int i, j, k;<br>    dp[0][0][1] = 0;<br>    dp[0][0][0] = 1;<br>    for (i = 1; i &lt;= nDice; i++) {<br>      for (j = i; j &lt;= i * maxSide; j++) dp[i][j][0] = dp[i][j][1] = 0.0;<br>      for (j = (i - 1); j &lt;= (i - 1) * maxSide; j++)<br>        for (k = 1; k &lt;= maxSide; k++) {<br>          if (k == v) {<br>            dp[i][j + k][1] += dp[i - 1][j][0];<br>            dp[i][j + k][1] += dp[i - 1][j][1];<br>          } else {<br>            dp[i][j + k][0] += dp[i - 1][j][0];<br>            dp[i][j + k][1] += dp[i - 1][j][1];<br>          }<br>        }<br>    }<br><br>    double tot = 0, sum = 0;<br>    for (j = nDice; j &lt;= nDice * maxSide; j++) {<br>      tot += dp[nDice][j][1];<br>      if (j &gt;= theSum) sum += dp[nDice][j][1];<br>    }<br><br>    return sum / tot;<br>  } <br><br>    <br> <br>}; <br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.2 [15-Oct-2005 modified by Revenger]<br>// Powered by CodeProcessor<br></td>