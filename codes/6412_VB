<td class="problemText" colspan="8" valign="middle" align="left">
            imports System<br>imports Microsoft.VisualBasic<br>imports System.Collections<br>imports System.Text<br> <br> <br>Public Class Conditional<br> <br>    Dim vv As Integer<br>    Dim ms As Integer<br>    Dim ts(50, 2500, 1) As Double<br> <br>    Public Function probability(ByVal nDice As Integer, ByVal maxSide As Integer, ByVal v As Integer, ByVal theSum As Integer) As Double<br>        ts(0, 0, 0) = 1<br> <br>        Dim i As Integer, r As Integer, prev As Integer, pmin As Integer, pmax As Integer, rp As Double<br> <br>        rp = 1 / maxSide<br> <br>        For i = 1 To nDice<br>            pmin = (i - 1) * 1<br>            pmax = (i - 1) * maxSide<br> <br>            For r = 1 To maxSide<br>                If r = v Then<br>                    For prev = pmin To pmax<br>                        ts(i, prev + r, 1) = ts(i, prev + r, 1) + ts(i - 1, prev, 0) * rp<br>                        ts(i, prev + r, 1) = ts(i, prev + r, 1) + ts(i - 1, prev, 1) * rp<br>                    Next<br>                Else<br>                    For prev = pmin To pmax<br>                        ts(i, prev + r, 0) = ts(i, prev + r, 0) + ts(i - 1, prev, 0) * rp<br>                        ts(i, prev + r, 1) = ts(i, prev + r, 1) + ts(i - 1, prev, 1) * rp<br>                    Next<br>                End If<br>            Next<br>        Next<br> <br>        Dim cTot As Double = 0<br>        Dim cMatch As Double = 0<br>        For i = 1 To 2500<br>            If i &gt;= theSum Then<br>                cMatch = cMatch + ts(nDice, i, 1)<br>            End If<br>            cTot = cTot + ts(nDice, i, 1)<br>        Next<br> <br>        Return cMatch / cTot<br> <br>    End Function<br> <br> <br>End Class<br></td>