<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;list&gt;<br>using namespace std;<br><br>// LIB CODE<br>#define ALL(v) (v).begin(),(v).end()<br>#define SORT(v) sort(ALL(v))<br>typedef vector&lt;int&gt; VI;<br>#define INFINT 1000000000<br>#define FOR(i,a,b) for(int i=(a);i&lt;int(b);++i)<br>#define SZ(v) ((int)(v).size())<br>#define FORSZ(i,a,v) FOR(i,a,SZ(v))<br>#define REPSZ(i,v) FORSZ(i,0,v)<br>// REAL CODE<br><br>class BifidSortMachine {<br>public:<br>  int countMoves(vector &lt;int&gt; a) {<br>    VI b=a; SORT(b);<br>    int ret=INFINT;<br>    REPSZ(i,b) FORSZ(j,i,b) {<br>      bool ok=true;<br>      int low=-10000;<br>      REPSZ(k,a) {<br>        if(a[k]&lt;b[i]||a[k]&gt;b[j]) continue;<br>        if(a[k]&lt;=low) ok=false;<br>        low=a[k];<br>      }<br>      if(ok) ret&lt;?=i+SZ(a)-j-1;<br>    }<br>    return ret;<br>    <br>  }<br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>