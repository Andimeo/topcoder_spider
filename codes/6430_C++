<td class="problemText" colspan="8" valign="middle" align="left">
            // another fine solution by misof<br>// #includes {{{<br>#include &lt;algorithm&gt;<br>#include &lt;numeric&gt;<br> <br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br> <br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cassert&gt;<br> <br>#include &lt;cmath&gt;<br>#include &lt;complex&gt;<br>using namespace std;<br>// }}}<br> <br>/////////////////// PRE-WRITTEN CODE FOLLOWS, LOOK DOWN FOR THE SOLUTION ////////////////////////////////<br> <br>// pre-written code {{{<br>#define FOR(i,a,b) for(int i=(int)(a);i&lt;=(int)(b);++i)<br>// }}}<br> <br>/////////////////// CODE WRITTEN DURING THE COMPETITION FOLLOWS ////////////////////////////////<br> <br>int digitsum(int x) {<br>  int res=0;<br>  while (x) { res += x%10; x/=10; }<br>  return res;<br>}<br> <br>class SumThemAll {<br>public:<br>  long long getSum(long long lowerBound, long long upperBound) {<br>    long long res = 0;<br>    if (upperBound - lowerBound &lt; 100) { <br>      FOR(x,lowerBound,upperBound) res += digitsum(x);  <br>      return res;<br>    }<br>    while (lowerBound%10) { res += digitsum(lowerBound); lowerBound++; }<br>    while (upperBound%10 != 9) { res += digitsum(upperBound); upperBound--; }<br>    lowerBound /= 10;<br>    upperBound /= 10;<br>    long long tmp = 45LL * (upperBound - lowerBound + 1);<br>    res += tmp;<br>    res += 10 * getSum(lowerBound, upperBound);<br>    return res;<br>  }<br> <br> <br>};<br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>