<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br><br>public class MonthlyPayment {<br>    public long minimalPayment(string totalSMS, string pack1, string pay1, string pack2, string pay2) {<br><br>        long iSMS = long.Parse(totalSMS);<br>        long iPack1 = long.Parse(pack1);<br>        long iPay1 = long.Parse(pay1);<br>        long iPack2 = long.Parse(pack2);<br>        long iPay2 = long.Parse(pay2);<br><br>        long iMax1 = iSMS / iPack1 + 1;<br>        long iMin1 = 0;<br>        while (iMax1-100000  &gt; iMin1) {<br>            long iMed2 = (iMax1 * 2 + iMin1) / 3;<br>            long iMed1 = (iMax1  + iMin1*2) / 3;<br>            long iCost1 = iMinCost(iSMS - iPack1 * iMed1, iPack2, iPay2) + iPay1 * iMed1;<br>            long iCost2 = iMinCost(iSMS - iPack1 * iMed2, iPack2, iPay2) + iPay1 * iMed2;<br>            if (iCost1 &lt; iCost2) {<br>                iMax1 = iMed2;<br>            } else {<br>                iMin1 = iMed1;<br>            }<br>        }<br>        long iBest = long.MaxValue;<br>        for (long i = iMin1; i &lt;= iMax1; i++) {<br>            iBest = Math.Min(iBest, iMinCost(iSMS - iPack1 * i, iPack2, iPay2) + iPay1 * i);<br>        }<br>        return iBest;<br>    }<br><br>    private long iMinCost(long iNeed, long pack2, long pay2) {<br>        if (iNeed &lt; 0) return 0;<br>        if ((pack2 * 10) &lt;= pay2) return iNeed * 10;<br>        long iBuy = iNeed / pack2;<br>        long iCost = pay2 * iBuy;<br>        iNeed-=pack2*iBuy;<br>        return Math.Min(iCost + iNeed * 10, iCost + pay2);<br>    }<br>}<br></td>