<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.BigInteger;<br> <br>public class MonthlyPayment {<br>    public long minimalPayment(String totalSMS, String pack1, String pay1, String pack2, String pay2) {<br>        BigInteger tot = new BigInteger(totalSMS);<br>        BigInteger p1 = new BigInteger(pack1);<br>        BigInteger p2 = new BigInteger(pack2);<br>        BigInteger c1 = new BigInteger(pay1);<br>        BigInteger c2 = new BigInteger(pay2);<br>        BigInteger c3 = new BigInteger("10");<br> <br>        BigInteger lcm = p1.multiply(p2).divide(p1.gcd(p2));<br>        BigInteger qt = tot.divide(lcm);<br>        BigInteger rm = tot.remainder(lcm);<br>        if (qt.compareTo(BigInteger.ZERO) &gt; 0) {<br>            qt = qt.subtract(BigInteger.ONE);<br>            rm = rm.add(lcm);<br>        }<br> <br>        BigInteger clcm1 = lcm.divide(p1).multiply(c1);<br>        BigInteger clcm2 = lcm.divide(p2).multiply(c2);<br>        BigInteger clcm3 = lcm.multiply(c3);<br>        BigInteger clcm = clcm1;<br>        if (clcm.compareTo(clcm2) &gt; 0) {<br>            clcm = clcm2;<br>        }<br>        if (clcm.compareTo(clcm3) &gt; 0) {<br>            clcm = clcm3;<br>        }<br>        clcm = clcm.multiply(qt);<br> <br> <br>        BigInteger bestCost = rm.multiply(c3);<br>        if (p1.compareTo(p2) &lt; 0) {<br>            BigInteger t = p1; p1 = p2; p2 = t;<br>            t = c1; c1 = c2; c2 = t;<br>        }<br> <br>        BigInteger q1 = BigInteger.ZERO;<br>        BigInteger tq1 = q1.multiply(p1);<br>        BigInteger stop = rm.add(p1);<br>        BigInteger left = rm;<br>        while (tq1.compareTo(stop) &lt; 0) {<br>            BigInteger tcost1 = q1.multiply(c1);<br> <br>            BigInteger tcost = tcost1.add(left.multiply(c3));<br>            if (bestCost.compareTo(tcost) &gt; 0) {<br>                bestCost = tcost;<br>            }<br> <br>            BigInteger q2 = left.divide(p2);<br>            BigInteger tcost2 = q2.multiply(c2);<br>            BigInteger tcost3 = left.remainder(p2).multiply(c3);<br>            tcost = tcost1.add(tcost2).add(tcost3);<br>            if (bestCost.compareTo(tcost) &gt; 0) {<br>                bestCost = tcost;<br>            }<br> <br>            tcost2 = tcost2.add(c2);<br>            tcost = tcost1.add(tcost2);<br>            if (bestCost.compareTo(tcost) &gt; 0) {<br>                bestCost = tcost;<br>            }<br> <br>            tq1 = tq1.add(p1);<br>            q1 = q1.add(BigInteger.ONE);<br>            left = left.subtract(p1);<br>            if (left.compareTo(BigInteger.ZERO) &lt; 0) {<br>                left = BigInteger.ZERO;<br>            }<br>        }<br> <br>        bestCost = bestCost.add(clcm);<br> <br>        return bestCost.longValue();<br>    }<br> <br> <br>}<br> <br> <br>// Powered by PopsEdit<br> <br>// Powered by CodeProcessor<br></td>