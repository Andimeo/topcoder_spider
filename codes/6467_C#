<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class GrasslandFencer {<br>  int[] fences;<br>  int n;<br>  bool[] got;<br>  double[] best;<br>  <br>  public double maximalFencedArea(int[] fences) {<br>    this.fences = fences;<br>    n = fences.Length;<br>    best = new double[1 &lt;&lt; n];<br>    got = new bool[1 &lt;&lt; n];<br>    return get((1 &lt;&lt; n) - 1);<br>  }<br><br>  double get(int mask)<br>  {<br>    if (got[mask])<br>      return best[mask];<br><br>    got[mask] = true;<br>    if (mask == 0)<br>    {<br>      best[mask] = 0;<br>      return 0;<br>    }<br>    double mx = 0;<br>    for (int first = 0; first &lt; n; ++first)<br>      if ((mask &amp; (1 &lt;&lt; first)) &gt; 0)<br>      {<br>        mx = Math.Max(mx, get(mask ^ (1 &lt;&lt; first)));<br>        for (int second = first + 1; second &lt; n; ++second)<br>          if ((mask &amp; (1 &lt;&lt; second)) &gt; 0)<br>            for (int third = second + 1; third &lt; n; ++third)<br>              if ((mask &amp; (1 &lt;&lt; third)) &gt; 0)<br>              {<br>                int a = fences[first];<br>                int b = fences[second];<br>                int c = fences[third];<br>                if (a + b &gt; c &amp;&amp; a + c &gt; b &amp;&amp; b + c &gt; a)<br>                {<br>                  mx = Math.Max(mx, get(mask ^ (1 &lt;&lt; first) ^ (1 &lt;&lt; second) ^ (1 &lt;&lt; third)) + area(a, b, c));<br>                }<br>              }<br>      }<br>    best[mask] = mx;<br>    return mx;<br>  }<br><br>  double area(long a, long b, long c)<br>  {<br>    long p = a + b + c;<br>    long pa = p - 2 * a;<br>    long pb = p - 2 * b;<br>    long pc = p - 2 * c;<br>    return Math.Sqrt(p * pa * pb * pc) / 4;<br>  }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>