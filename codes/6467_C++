<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstdio&gt;<br> <br>using namespace std;<br> <br>typedef long long llong;<br>typedef long double ldbl;<br> <br>#define max(a, b) ((a) &gt; (b) ? (a) : (b))<br>#define min(a, b) ((a) &lt; (b) ? (a) : (b))<br>#define abs(a) ((a) &lt; 0 ? -(a) : (a))<br> <br>#define m (1 &lt;&lt; 16)<br> <br>double r[m];<br> <br>class GrasslandFencer<br>{<br>public:<br>  double maximalFencedArea( vector &lt;int&gt; f )<br>  {<br>    int i, j, k, l, n;<br>    double t, p;<br>    memset(r, 0, sizeof(r));<br>    n = f.size();<br>    for (i = 0; i &lt; (1 &lt;&lt; n); i++)<br>      for (j = 0; j &lt; n; j++)<br>        if (!((i &gt;&gt; j) &amp; 1))<br>          for (k = j + 1; k &lt; n; k++)<br>            if (!((i &gt;&gt; k) &amp; 1))<br>              for (l = k + 1; l &lt; n; l++)<br>                if (!((i &gt;&gt; l) &amp; 1))<br>                  if (f[j] + f[k] &gt; f[l] &amp;&amp; f[j] + f[l] &gt; f[k] &amp;&amp; f[k] + f[l] &gt; f[j])<br>                  {<br>                    p = 0.5 * (f[j] + f[k] + f[l]);<br>                    t = sqrt(p * (p - f[j]) * (p - f[k]) * (p - f[l]));<br>                    r[i | (1 &lt;&lt; j) | (1 &lt;&lt; k) | (1 &lt;&lt; l)] = max(r[i] + t, r[i | (1 &lt;&lt; j) | (1 &lt;&lt; k) | (1 &lt;&lt; l)]);<br>                  }<br>    return r[(1 &lt;&lt; n) - 1];<br>  }<br>};<br> <br> <br>// Powered by PopsEdit<br></td>