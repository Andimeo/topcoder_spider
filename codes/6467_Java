<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.Arrays;<br> <br>public class GrasslandFencer {<br> <br>  public double maximalFencedArea(int[] fences) {<br>    int N = fences.length;<br>    Arrays.sort(fences);<br>    double[] masks = new double[1 &lt;&lt; N];<br>    <br>    for (int i = 0; i &lt; N - 2; i++) {<br>      for (int j = i + 1; j &lt; N - 1; j++) {<br>        for (int k = j + 1; k &lt; N; k++) {<br>          if (fences[k] &lt; fences[i] + fences[j]) {<br>            double p = (fences[i] + fences[j] + fences[k]) / (double) 2;<br>            double a = p * (p - fences[i]) * (p - fences[j]) * (p - fences[k]);<br>            double ar = Math.sqrt(a);<br>            <br>            int m = (1 &lt;&lt; i) + (1 &lt;&lt; j) + (1 &lt;&lt; k);<br>            for (int z = 0; z &lt; (1 &lt;&lt; N); z++) {<br>              if ((z &amp; m) == 0) {<br>                int zz = z | m;<br>                if (masks[zz] &lt; masks[z] + ar) {<br>                  masks[zz] = masks[z] + ar;<br>                }<br>              }<br>            }<br>          }<br>        }<br>      }<br>    }<br>    double res = 0;<br>    for (int i = 0; i &lt; (1 &lt;&lt; N); i++) {<br>      if (masks[i] &gt; res) {<br>        res = masks[i];<br>      }<br>    }<br>    return res;<br>  }<br> <br>}<br></td>