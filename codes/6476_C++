<td class="problemText" colspan="8" valign="middle" align="left">
            /*<br>Don't try to challenge me.. you will see why!!<br>*/<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>using namespace std;<br>double v[10001];<br>int cost[10001];<br>class TreasuresPacking {<br>  public:<br>  double maximizeCost(vector &lt;string&gt; t, int W) {<br>    double ret;<br>    vector &lt;int&gt; q;<br>    vector &lt;int&gt; q2;<br>    int i, j;<br>    for (i=0; i&lt;=10000; i++) cost[i]=-1;<br>    cost[0]=0;<br>  for (i=0; i&lt;t.size(); i++) {<br>    int a, b;<br>    char c;<br>    sscanf(t[i].c_str(), "%d %d %c", &amp;a, &amp;b, &amp;c);<br>    <br>    if ( c == 'Y' ) {q.push_back(a), q2.push_back(b);}<br>    if (c == 'N') v[i] = 0; else v[i]=1;<br>    if (c=='N') {<br>    for (j=W; j&gt;=a; j--) if (cost[j-a] != -1) if (cost[j-a] + b &gt; cost[j]) cost[j] = cost[j-a] + b; }<br>  }<br>  cout&lt;&lt;"ok";<br>  int mm, mn;<br>  int pmin;<br>  for (i=0; i&lt;q.size(); i++) {<br>    mm= q2[i]; mn=q[i];<br>    pmin=i;<br>    for (j=i+1; j&lt;q.size(); j++) {int vlad= q2[j], vlad2=q[j]; if (vlad*mn&gt; mm *vlad2) {pmin=j; mm=vlad; mn=vlad2; }}<br>    int da;<br>    da = q[i]; q[i]=q[pmin]; q[pmin]=da;<br>    da = q2[i]; q2[i]=q2[pmin]; q2[pmin]=da;<br>  }<br>  ret = 0;<br>  for (i=0; i&lt;=W; i++) if (cost[i]!=-1) {<br>    cout&lt;&lt;i&lt;&lt;' '&lt;&lt;cost[i]&lt;&lt;' ';<br>    int cat = W-i;<br>    double pret = cost[i];<br>    for (j=0; j&lt;q.size(); j++) {<br>      cout&lt;&lt;"q: "&lt;&lt;q[j]&lt;&lt;' '&lt;&lt;q2[j]&lt;&lt;'\n';<br>      if (cat == 0) break;<br>      if (q[j] &lt;= cat) {cat-=q[j]; pret+= q2[j];}<br>      else {pret+= (cat * 1.0*q2[j] /(1.0* q[j])); cat = 0;}<br>    }<br>    cout&lt;&lt; pret&lt;&lt;'\n';<br>    if (pret &gt; ret) ret = pret;<br>    }<br>  return ret;<br>  }<br>};<br> <br> <br>// Powered by PopsEdit<br></td>