<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class TreasuresPacking {<br>  public double maximizeCost(String[] treasures, int W) {<br>    int n = treasures.length;<br>    int[] w = new int[n];<br>    double[] c = new double[n];<br>    boolean[] l = new boolean[n];<br>    <br>    for (int i = 0; i &lt; treasures.length; i++) {<br>      StringTokenizer st = new StringTokenizer(treasures[i]);<br>      w[i] = Integer.parseInt(st.nextToken());<br>      c[i] = Integer.parseInt(st.nextToken());<br>      l[i] = st.nextToken().trim().equals("Y");<br>    }<br>    <br>    double[] g = new double[W + 1];<br>    g[0] = 0;<br>  <br>    ArrayList&lt;Liq&gt; liq = new ArrayList&lt;Liq&gt;();<br>    <br>    for (int i = 0; i &lt; n; i++) {<br>      if (l[i]) {<br>        liq.add(new Liq(w[i], c[i]));<br>        continue;<br>      }<br>      for (int j = W; j &gt;= 0; j--) {<br>        int k = j + w[i];<br>        if (k &gt; W) {<br>          continue;<br>        }<br>        double bc = g[j] + c[i];<br>        if (bc &gt; g[k]) {<br>          g[k] = bc;<br>        }<br>      }<br>    }<br>    <br>    Collections.sort(liq, new Comparator&lt;Liq&gt;() {<br>      public int compare(Liq a, Liq b) {<br>        return Double.compare(a.cw, b.cw);<br>      }      <br>    });<br>    <br>    double[] f = new double[W + 1];<br>    f[0] = 0;<br>    for (int i = 1; i &lt;= W; i++) {<br>      f[i] = f[i - 1];<br>      if (liq.isEmpty()) {<br>        continue;<br>      }<br>      Liq a = liq.get(liq.size() - 1);<br>      if (a.w == 0) {<br>        liq.remove(liq.size() - 1);<br>        if (liq.isEmpty()) {<br>          continue;<br>        }<br>        a = liq.get(liq.size() - 1);<br>      }<br>      a.w--;<br>      f[i] += a.cw;      <br>    }<br>    <br>    double best = 0d;<br>    for (int i = 0; i &lt;= W; i++) {<br>      if (f[i] + g[W - i] &gt; best) {<br>        best = f[i] + g[W - i];<br>      }<br>    }<br>    <br>    return best;<br>    <br>  }<br>  <br>  class Liq {<br>    int w;<br>    double c;<br>    double cw;<br>    Liq(int w, double c) {<br>      this.w = w;<br>      this.c = c;<br>      this.cw = c / w;<br>    }<br>  }<br>  <br>//  public static void main(String[] args) {<br>//    String[] tr = {"350 2765 Y", "258 560 Y", "120 9325 N", "879 302 Y",<br>//     "611 2674 Y", "774 2273 Y", "318 1572 Y"};<br>//    int W = 3301;<br>//    <br>//    System.out.println(new TreasuresPacking().maximizeCost(tr, W));<br>//  }<br>}<br></td>