<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class Shopping {<br>public:<br>  int minNumber(int, vector &lt;int&gt;);<br>};<br> <br>int Shopping::minNumber(int X, vector &lt;int&gt; values) {<br>  sort(values.begin(), values.end());<br>  values.push_back(X+1);<br>  if (values.empty() || values[0] != 1) return -1;<br>  int r = 0;<br>  int current = 0;<br>  int total = 0;<br>  while (total &lt; X) {<br>    while(total &lt; X &amp;&amp; total+1 &lt; values[current+1]) {<br>      r++;<br>      total += values[current];<br>    }<br>    current ++;<br>  }<br>  return r;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>