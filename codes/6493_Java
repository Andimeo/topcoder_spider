<td class="problemText" colspan="8" valign="middle" align="left">
            public class PizzaDivision {<br>  private int n = 0;<br>  private int x[];<br>  private int y[];<br><br>  private boolean oneLine(int x1, int y1, int x2, int y2, int x3, int y3) {<br>    return (x2 - x1)*(y3 - y1) - (y2 - y1)*(x3 - x1) == 0;<br>  }<br><br>  private boolean testLine(int x1, int y1, int x2, int y2, boolean firstType) {<br>    int xc2 = x1 + x2;<br>    int yc2 = y1 + y2;<br><br>    if (xc2*(x2 - x1) + yc2*(y2 - y1) != 0) {<br>      return false;<br>    }<br><br>    if (oneLine(0, 0, x1, y1, x2, y2)) {<br>      if (xc2 == 0 &amp;&amp; yc2 == 0) {<br>        xc2 = 2*y1;<br>        yc2 = -2*x1;<br>      } else if (!firstType) {<br>        return false;<br>      }<br>    }<br><br>    for (int i = 0; i &lt; n; ++i) {<br>      boolean ok = false;<br>      for (int j = 0; j &lt; n &amp;&amp; !ok; ++j) {<br>        int xxc2 = x[i] + x[j];<br>        int yyc2 = y[i] + y[j];<br>        <br>        if (!oneLine(0, 0, xc2, yc2, xxc2, yyc2)) {<br>          continue;<br>        }<br><br>        if (xc2*(x[i] - x[j]) + yc2*(y[i] - y[j]) != 0) {<br>          continue;<br>        }<br><br>        ok = true;<br>      }<br><br>      if (!ok) {<br>        return false;<br>      }<br>    }<br><br>    return true;<br>  }<br><br>  public int howMany(String[] toppings) {<br>    n = 0;<br>    x = new int[toppings.length];<br>    y = new int[toppings.length];<br><br>    try {<br>      for (int i = 0; i &lt; toppings.length; ++i) {<br>        String[] xy = toppings[i].split("\\s");<br>        int xx = Integer.parseInt(xy[0]);<br>        int yy = Integer.parseInt(xy[1]);<br><br>        if (xx != 0 || yy != 0) {<br>          x[n] = xx;<br>          y[n] = yy;<br>          ++n;<br>        }<br>      }<br>    } catch (Exception e) {<br>      return 0;<br>    }<br><br>    if (n == 0) {<br>      return -1;<br>    }<br><br>    int ans = 0;<br>    if (testLine(x[0], y[0], x[0], y[0], true))<br>      ++ans;<br><br>    for (int i = 1; i &lt; n; ++i) {<br>      if (testLine(x[0], y[0], x[i], y[i], false)) {<br>        ++ans;<br>      }<br>    }<br><br>    return ans;<br>  }<br>}<br></td>