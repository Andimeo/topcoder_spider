<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstdio&gt;<br>using namespace std;<br> <br>class RiverCrossing <br>{<br>  public:<br>  int L[357],P[357];<br>  int u,t;<br>  map&lt;int,int&gt; ma;<br>  int go(int c,int g,int a,int b)<br>  {<br>    if(c&gt;101) c=101;<br>    if(c==101 &amp;&amp; !a &amp;&amp; !b) return 0;<br>    int xx=((c*2+g)*201+a)*201+b;<br>    if(ma.count(xx)) return ma[xx];<br>    int U=min(u,g?b:a);<br>    if(g) b-=U; else a-=U;<br>    int i,w=0,A=a,B=b;<br>    for(i=c+1;i&lt;=c+t;i++) <br>    {<br>      w+=A+B;<br>      if(i&lt;101)<br>      {<br>        A+=L[i];<br>        B+=P[i];<br>      }<br>    }<br>    int ret=go(c+t,1-g,A,B)+w;<br>    for(i=c+1;i&lt;101;i++)<br>    {<br>      w+=A+B;<br>      if(i+t&lt;101)<br>      {<br>        A+=L[i+t];<br>        B+=P[i+t];<br>      }<br>      a+=L[i];<br>      b+=P[i];<br>      int r=min(u-U,g?b:a);<br>      U+=r;<br>      if(g) b-=r; else a-=r;<br>      w-=r*t;<br>      ret&lt;?=go(i+t,1-g,A-=(!g?r:0),B-=(g?r:0))+w;<br>    }<br>    return ma[xx]=ret;<br>  }<br>  int minimalWait(vector &lt;string&gt; c, int uu, int T) <br>  {<br>    u=uu;<br>    t=T;<br>    int i,a,b;<br>    char s[10];<br>    for(i=0;i&lt;c.size();i++) <br>    {<br>      sscanf(c[i].c_str(),"%d %d %s",&amp;a,&amp;b,s);<br>      if(s[0]=='l') L[b]+=a;<br>      else P[b]+=a;<br>    }<br>    return go(0,0,0,0);<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>