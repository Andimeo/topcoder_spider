<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br><br>public class ParallelepipedUnion {<br>    public int getVolume(string[] parallelepipeds) {<br><br><br>        int iRet = 0;<br>        string[] s1, s2;<br>        s1 = parallelepipeds[0].Split(' ');<br>        s2 = parallelepipeds[1].Split(' ');<br>        int[,] iCo = new int[2,6];<br>            for (int j = 0; j &lt; 6; j++) {<br>                iCo[0, j] = int.Parse(s1[j]);<br>                iCo[1, j] = int.Parse(s2[j]);<br>            }<br>        for (int i = 0  ; i &lt; 101; i++) {<br>            for (int j = 0; j &lt; 101; j++) {<br>                for (int k = 0; k &lt; 101; k++) {<br>                    bool bIn=false;<br>                    bool bGood = true;<br>                    if (i &lt; iCo[0,0] || i &gt;= iCo[0,3]) bGood = false;<br>                    if (j &lt; iCo[0, 1] || j &gt;= iCo[0, 4]) bGood = false;<br>                    if (k &lt; iCo[0, 2] || k &gt;= iCo[0, 5]) bGood = false;<br>                    if (bGood) bIn = true;<br>                    bGood = true;<br>                    if (i &lt; iCo[1, 0] || i &gt;= iCo[1, 3]) bGood = false;<br>                    if (j &lt; iCo[1, 1] || j &gt;= iCo[1, 4]) bGood = false;<br>                    if (k &lt; iCo[1, 2] || k &gt;= iCo[1, 5]) bGood = false;<br>                    if (bGood) bIn = true;<br>                    if (bIn) iRet += 1;<br>                }<br>            }<br>        }<br>        return iRet;<br>    }<br>}<br></td>