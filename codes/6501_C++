<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;stdio.h&gt;<br>#include&lt;vector&gt;<br>#include&lt;map&gt;<br>#include&lt;string&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;math.h&gt;<br>#include&lt;set&gt;<br>using namespace std;<br><br>int min(int a,int b)<br>{<br>  return (a&lt;b)?a:b;<br>}<br>int max(int a,int b)<br>{<br>  return (a&lt;b)?b:a;<br>}<br><br>int och[110],fl[110],kol=0,ms[110][110],ct,flag[110],tmp[110],n,posl[110];<br>double os;<br><br>void Wave(int a,int z1,int z2)<br>{<br>  fl[a]=z1;<br>  och[0]=a;<br>  int hd=0;<br>  int tl=1;<br>  while(hd!=tl)<br>  {<br>    a=och[hd++];<br>    for(int i=0;i&lt;n;i++)<br>      if (ms[a][i] &amp;&amp; fl[i]==0)<br>      {<br>        fl[i]=z2;<br>        och[tl++]=i;<br>      }<br>  }<br>}<br><br>void WaveObr(int a)<br>{<br>  for(int i=0;i&lt;n;i++)<br>    tmp[i]=0;<br>  tmp[a]=1;<br>  och[0]=a;<br>  int hd=0;<br>  int tl=1;<br>  while(hd!=tl)<br>  {<br>    a=och[hd++];<br>    for(int i=0;i&lt;n;i++)<br>      if (ms[i][a] &amp;&amp; tmp[i]==0)<br>      {<br>        tmp[i]=1;<br>        och[tl++]=i;<br>      }<br>  }<br>}<br><br>void Rec(int a)<br>{<br>  if (flag[a])<br>    return;<br>  flag[a]=1;<br>  for(int i=0;i&lt;n;i++)<br>    if (ms[i][a])<br>      Rec(i);<br>  posl[ct++]=a;<br>}<br><br>class AntarcticaPolice<br>{<br>public:<br><br>double minAverageCost(vector&lt;int&gt; cost,vector&lt;string&gt; s)<br>{<br>  n=cost.size();<br>  for(int i=0;i&lt;n;i++)<br>    for(int j=0;j&lt;n;j++)<br>      if (s[i][j]=='Y')<br>        ms[i][j]=1;<br>      else<br>        ms[i][j]=0;<br>  ct=0;<br>  kol=0;<br>  os=0;<br>  for(int i=0;i&lt;n;i++)<br>    if (!flag[i])<br>      Rec(i);<br>  for(int i=0;i&lt;n;i++)<br>    printf("%d\n",posl[i]);<br><br>  for(int i=0;i&lt;n;i++)<br>    if (!fl[posl[i]])<br>    {<br>      WaveObr(posl[i]);<br>      int bc=posl[i];<br>      for(int j=0;j&lt;n;j++)<br>        if (tmp[j]==1 &amp;&amp; cost[bc]&gt;cost[j])<br>          bc=j;<br>      Wave(bc,2,1);<br>      os+=cost[bc];  <br>      kol++;<br>    }<br>  int q=1;<br>  while(q)<br>  {<br>    q=0;<br>    double bprib=0;<br>    int kolprib=0;<br>    int bi=0;<br>    for(int i=0;i&lt;n;i++)<br>      if (fl[i]!=2 &amp;&amp; (os+bprib)/(kol+kolprib)&gt;(os+cost[i])/(kol+1))<br>      {<br>        bprib=cost[i];<br>        bi=i;<br>        kolprib=1;<br>        q=1;<br>      }<br>    if (q!=0)<br>    {<br>      fl[bi]=2;<br>      kol++;<br>      os+=cost[bi];<br>    }<br>  }<br>  return os/kol;      <br>}<br><br>};<br></td>