<td class="problemText" colspan="8" valign="middle" align="left">
            /*<br>By Dumitriu Vlad, <br>my source is pretty huh? =))<br>*/<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br> <br>using namespace std;<br>//using namespace inspiration;<br>/* templates*/<br>const double eps = 1e-7;<br>typedef long long LL;<br>typedef long double LD;<br>#define PB push_back<br>#define NP next_permutation<br>#define SZ size<br>#define all(a) (a).begin(), (a).end()<br>/*start the real code*/<br> <br> <br>class WallRepair {<br>  public:<br>  int bricksRequired(vector &lt;string&gt; w) {<br>  int ret=0;<br>  int i, j;<br>  for (i=0; i&lt;w[0].size(); i++) {<br>    for (j=0; j&lt;w.size()&amp;&amp;w[j][i]=='.'; j++);<br>    for (; j&lt;w.size(); j++) if (w[j][i] == '.') ret++;<br>    }<br>  return ret;<br>  }<br>};<br> <br> <br>// Powered by PopsEdit<br></td>