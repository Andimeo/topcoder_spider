<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public struct node<br>{<br>    public string name;<br>    public int high;<br>}<br><br>public class StudentsOrdering<br>{<br>    int comp(string s1, string s2)<br>    {<br>        int i, n, n1 = s1.Length, n2 = s2.Length;<br>        n = Math.Min(n1, n2);<br>        for (i = 0; i &lt; n; i++)<br>        {<br>            if (s1[i] &lt; s2[i]) return(-1);<br>            if (s1[i] &gt; s2[i]) return(1);<br>        }<br>        if (n1 &lt; n2) return(-1);<br>        if (n1 &gt; n2) return(1);<br>        return(0);<br>    }<br><br><br>    public string findOrder(string[] students)<br>    {<br>        int i, j, n = students.Length, n1, n2;<br>        string result, result2;<br>        node swap;<br>        node[] boy = new node[n], girl = new node[n];<br>        int[] high = new int[n];<br>        string[] ss;<br>        n1 = 0;<br>        n2 = 0;<br>        for (i = 0; i &lt; n; i++)<br>        {<br>            ss = students[i].Split(' ');<br>            if (ss[2][0] == 'g')<br>            {<br>                girl[n1].name = ss[0];<br>                girl[n1].high = Int32.Parse(ss[1]);<br>                n1++;<br>            } else {<br>                boy[n2].name = ss[0];<br>                boy[n2].high = Int32.Parse(ss[1]);<br>                n2++;<br>            }<br>        }<br>        if (Math.Abs(n1 - n2) &gt; 1) return("");<br>        for (i = 0; i &lt; n1; i++)<br>            for (j = i + 1; j &lt; n1; j++)<br>                if (girl[i].high &gt; girl[j].high<br>                    || (girl[i].high == girl[j].high &amp;&amp; comp(girl[i].name, girl[j].name) &gt; 0))<br>                {<br>                    swap = girl[i];<br>                    girl[i] = girl[j];<br>                    girl[j] = swap;<br>                }<br><br>        for (i = 0; i &lt; n2; i++)<br>            for (j = i + 1; j &lt; n2; j++)<br>                if (boy[i].high &gt; boy[j].high<br>                    || (boy[i].high == boy[j].high &amp;&amp; comp(boy[i].name, boy[j].name) &gt; 0))<br>                {<br>                    swap = boy[i];<br>                    boy[i] = boy[j];<br>                    boy[j] = swap;<br>                }<br><br>        result = "";<br><br>        if (n1 &gt; n2)<br>        {<br>            for (i = 0; i &lt; n; i++)<br>                if (i % 2 == 0)<br>                {<br>                    high[i] = girl[i / 2].high;<br>                    result += "-" + girl[i / 2].name;<br>                } else {<br>                    high[i] = boy[i / 2].high;<br>                    result += "-" + boy[i / 2].name;<br>                }<br>            for (i = 0; i &lt; n - 1; i++)<br>                if (high[i] &gt; high[i + 1]) return("");<br>            result = result.Substring(1);<br>            return(result);<br>        }<br><br>        if (n1 &lt; n2)<br>        {<br>            for (i = 0; i &lt; n; i++)<br>                if (i % 2 == 0)<br>                {<br>                    high[i] = boy[i / 2].high;<br>                    result += "-" + boy[i / 2].name;<br>                } else {<br>                    high[i] = girl[i / 2].high;<br>                    result += "-" + girl[i / 2].name;<br>                }<br>            for (i = 0; i &lt; n - 1; i++)<br>                if (high[i] &gt; high[i + 1]) return("");<br>            result = result.Substring(1);<br>            return(result);<br>        }<br><br>        if (n1 == n2)<br>        {<br>            for (i = 0; i &lt; n; i++)<br>                if (i % 2 == 0)<br>                {<br>                    high[i] = girl[i / 2].high;<br>                    result += "-" + girl[i / 2].name;<br>                } else {<br>                    high[i] = boy[i / 2].high;<br>                    result += "-" + boy[i / 2].name;<br>                }<br>            for (i = 0; i &lt; n - 1; i++)<br>                if (high[i] &gt; high[i + 1])<br>                {<br>                    result = "";<br>                    break;<br>                }<br>            if (result != "") result = result.Substring(1);<br><br>            result2 = "";<br>            for (i = 0; i &lt; n; i++)<br>                if (i % 2 == 0)<br>                {<br>                    high[i] = boy[i / 2].high;<br>                    result2 += "-" + boy[i / 2].name;<br>                } else {<br>                    high[i] = girl[i / 2].high;<br>                    result2 += "-" + girl[i / 2].name;<br>                }<br>            for (i = 0; i &lt; n - 1; i++)<br>                if (high[i] &gt; high[i + 1])<br>                {<br>                    result2 = "";<br>                    break;<br>                }<br>            if (result2 != "") result2 = result2.Substring(1);<br>            <br>            if (comp(result, "") == 0) return(result2);<br>            if (comp(result2, "") == 0) return(result);<br>            if (comp(result, result2) &lt; 0) return(result); else return(result2);<br>        }<br>        return ("");<br>    }<br>}<br></td>