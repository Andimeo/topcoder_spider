<td class="problemText" colspan="8" valign="middle" align="left">
            #define ll long long<br>#line 73 "StudentsOrdering.cpp"<br>#include &lt;iostream&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;string&gt;<br>#include &lt;sstream&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;queue&gt;<br>#include &lt;utility&gt;<br><br>using namespace std;<br><br>#define cisti(X) memset(X, 0, sizeof(X))<br>#define loop(i, X) for(int i = 0; i&lt;(X); i++)<br>#define loopi(X) loop(i, X)<br>#define loopj(X) loop(j, X)<br><br>typedef pair&lt;int, string&gt; clovek;<br><br>class StudentsOrdering {<br>  public:<br><br>    string rob(vector&lt;clovek&gt; a, vector&lt;clovek&gt; b){<br>      string v = "";<br>      int kde = 0;<br>      int posl = -99999;<br>      int ind = 0;<br>      if (a.size() - b.size() &gt; 1) return "";<br>      if (b.size() &gt; a.size()) return "";<br>      while (1){<br>        if (kde == 0){<br>          if (ind &gt;= a.size() &amp;&amp; ind &gt;= b.size()) return v;       <br>          if (a[ind].first &gt;= posl){<br>            posl = a[ind].first;<br>            if (ind &gt; 0) v += '-';<br>            v = v  + a[ind].second;<br>          } else return "";<br>          kde = 1;<br>        } else {<br>          if (ind &gt;= b.size()) return v;<br>          if (b[ind].first &gt;= posl){<br>            posl = b[ind].first;<br>            v = v + '-' + b[ind].second;<br>          } else return "";<br>          kde = 0;<br>          ind++;<br>        };<br>      };<br>    };<br><br>    string findOrder(vector &lt;string&gt; students) {<br>      vector&lt;clovek&gt; ch, d;<br>      loopi(students.size()){<br>        char n[1000], p[100];<br>        int v;<br>        sscanf(students[i].c_str(), "%s %d %s", n, &amp;v, p);<br>        string s(n);<br>        if (p[0] == 'b'){<br>          ch.push_back(make_pair(v, s));<br>        } else d.push_back(make_pair(v, s));<br>      };<br>      sort(ch.begin(), ch.end());<br>      sort(d.begin(), d.end());<br>      string a = rob(ch, d);<br>      string b = rob(d, ch);<br>      if (a == "") return b;<br>      if (b == "") return a;<br>      if (a &lt; b) return a;<br>      return b;    <br>    };<br><br>    <br> <br>}; <br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>