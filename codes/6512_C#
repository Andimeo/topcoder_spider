<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Text;<br><br>public class DistinctDice<br>{<br><br>    public int[,] d;<br>    public int[] volt;<br><br>    public int n;<br>    public string[] sg;<br><br>    public void swapi(int i, int a, int b)<br>    {<br>        int c = d[i, a];<br>        d[i, a] = d[i, b]; d[i, b] = c;<br>    }<br>        <br><br>    public int getDistinct(string[] givenDice)<br>    {<br>        n = givenDice.Length;<br>        sg = givenDice;<br>        d = new int[n, 6];<br>        volt = new int[n];<br>        <br>        for (int i = 0; i &lt; n; i++)<br>        {<br>            for (int j = 0; j &lt; 6; j++)<br>            {<br>                if (char.IsDigit(sg[i][j]))<br>                {<br>                    int h = (int)sg[i][j] - (int)'0';<br>                    d[i, j] = h;<br>                }<br>            }<br>        }<br>        int db = 0;<br><br>        for (int i = 0; i &lt; n; i++)<br>        {<br>            int h = 0;<br>            for (int j = 0; j &lt; 6; j++)<br>            {<br>                if (d[i, j] == 6) h = j;<br>            }<br>            int p;<br>            switch (h)<br>            {<br>                case 0: break;<br>                case 1: { swapi(i, 0, 1); swapi(i, 4, 5); break; }<br>                case 2: { p = d[i, 0]; d[i, 0] = d[i, 2]; d[i, 2] = d[i, 1]; d[i, 1] = d[i, 3]; d[i, 3] = p; break; }<br>                case 3: { p = d[i, 0]; d[i, 0] = d[i, 3]; d[i, 3] = d[i, 1]; d[i, 1] = d[i, 2]; d[i, 2] = p; break; }<br>                case 4: { p = d[i, 0]; d[i, 0] = d[i, 4]; d[i, 4] = d[i, 1]; d[i, 1] = d[i, 5]; d[i, 5] = p; break; }<br>                case 5: { p = d[i, 0]; d[i, 0] = d[i, 5]; d[i, 5] = d[i, 1]; d[i, 1] = d[i, 4]; d[i, 4] = p; break; }<br>            }<br>           <br>        }<br><br>        for (int i = 0; i &lt; n; i++)<br>        {<br>            int h = 0;<br>            int min = 6;<br>            for (int j = 0; j &lt; 6; j++)<br>            if(j!=1)<br>            {<br>                if (d[i, j] &lt; min) { min = d[i, j]; h = j; }<br>            }<br>            int p;<br>            switch (h)<br>            {<br>                case 0: break;<br>                case 1: break;<br>                case 2: { p = d[i, 4]; d[i, 4] = d[i, 2]; d[i, 2] = d[i, 5]; d[i, 5] = d[i, 3]; d[i, 3] = p; break; }<br>                case 3: { p = d[i, 4]; d[i, 4] = d[i, 3]; d[i, 3] = d[i, 5]; d[i, 5] = d[i, 2]; d[i, 2] = p; break; }<br>                case 4: break;<br>                case 5: { swapi(i, 2, 3); swapi(i, 4, 5); break; }<br>            }<br>        }<br><br>        for (int i = 0; i &lt; n; i++)<br>            if(volt[i]==0)<br>        {<br>            volt[i] = 1;<br>            db++;<br>            for (int j = 0; j &lt; n; j++)<br>            {<br>                bool same = true;<br>                for (int k = 0; k &lt; 6; k++)<br>                {<br>                    if (d[i, k] != d[j, k]) same = false;<br>                }<br>                if (same) volt[j] = 1;<br>            }<br>        }<br><br>        return db;<br>    }<br><br>}<br></td>