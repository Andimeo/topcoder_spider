<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;vector&gt;<br>#include&lt;list&gt;<br>#include&lt;map&gt;<br>#include&lt;set&gt;<br>#include&lt;stack&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;numeric&gt;<br>#include&lt;sstream&gt;<br>#include&lt;iostream&gt;<br>#include&lt;cstdio&gt;<br>#include&lt;cmath&gt;<br>#include&lt;cstdlib&gt;<br> <br>using namespace std;<br> <br>typedef long long int64;<br><br>const int r1[]={0,1,4,5,3,2};<br>const int r2[]={4,5,2,3,1,0};<br><br>class  DistinctDice {<br>public:<br>  set&lt;string&gt; S;<br>  void rotate(string s)<br>  {<br>    if (S.find(s)!=S.end()) return;<br>    S.insert(s);<br>    string s2="000000";<br>    for (int i=0;i&lt;6;i++)<br>      s2[i]=s[r1[i]];<br>    rotate(s2);<br>    for (int i=0;i&lt;6;i++)<br>      s2[i]=s[r2[i]];<br>    rotate(s2);<br>  }<br>  int getDistinct(vector &lt;string&gt; givenDice)<br>  {<br>    rotate("123456");<br>    S.clear();<br>    int C=0;<br>    for (int i=0;i&lt;givenDice.size();i++)<br>    {<br>      string s=givenDice[i];<br>      if (S.find(s)!=S.end()) continue;<br>      C++;<br>      rotate(s);      <br>    }<br>    return C;<br>  }<br>};<br></td>