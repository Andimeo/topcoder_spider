<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.lang.*;<br><br>public class DistinctDice {<br>int sw[][] = <br>{<br>{0, 1, 2, 4, 3, 5},<br>{1, 0, 2, 5, 3, 4},<br>{2, 3, 4, 0, 5, 1},<br>{3, 2, 4, 1, 5, 0},<br>{4, 5, 0, 2, 1, 3},<br>{5, 4, 0, 3, 1, 2}<br>};<br><br>boolean issame(String s1, String s2)<br>{<br>  int k, off, i;<br>  String s;<br>  String buf = s1;<br>  s1 = "";<br>  s1 += buf.charAt(0);<br>  s1 += buf.charAt(1);<br>  s1 += buf.charAt(2);<br>  s1 += buf.charAt(4);<br>  s1 += buf.charAt(3);<br>  s1 += buf.charAt(5);<br>//  cout(s1);        <br>  for (k=0; k&lt;6; k++)<br>  {<br>    for (off=0; off&lt;4; off++)<br>    {<br>      s = "";<br>      s += s2.charAt(sw[k][0]);<br>      s += s2.charAt(sw[k][1]);<br>      for (i=2; i&lt;6; i++)<br>        s += s2.charAt(sw[k][2 + ( (i-2+off)%4 )]);<br>//    cout(k + " " + off + " " + s);<br>    if (s.compareTo(s1)==0)<br>      return true;<br>    }<br>  }<br>  return false;<br>}<br><br>public int getDistinct(String[] givenDice) {<br>  int i, j;<br>  int ans = 0;<br>  int n = givenDice.length;<br>  for (i=0; i&lt;n; i++)<br>  {<br>    for (j=0; j&lt;i; j++)<br>      if (issame(givenDice[i], givenDice[j]))<br>        break;<br>    if (j==i) ans++;<br>  }<br>  return ans;<br>}<br>};<br></td>