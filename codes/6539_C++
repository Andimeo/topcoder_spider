<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br><br>using namespace std;<br><br>//typedef long long __int64;<br><br>int A[100000];<br><br>class RPSTournament<br>{<br>public:<br>  int n,size;<br>  double C;<br>  void DFS(int n,int v)<br>  {<br>    if (n==0)<br>      A[++size]=v;<br>    else<br>    {<br>      DFS(n-1,v);<br>      double r=v-sqrt(C*(double)(v));<br>      if (r&lt;1)<br>        r=1;<br>      r=ceil(r-1e-10);<br>      DFS(n-1,(int)(r+0.1));<br>    }<br>  }<br>  bool check(int M)<br>  {<br>    size=0;<br>    DFS(n,M);<br>    sort(A+1,A+size+1);<br>    for (int i=1;i&lt;=size;i++)<br>      if (A[i]&gt;i)<br>        return false;<br>    return true;<br>  }<br>  int greatestSeed(int _n, int _C)<br>  {<br>    n=_n;<br>    C=_C;<br>    int H=1,T=(1&lt;&lt;n)+1;<br>    for (;H+1&lt;T;)<br>    {<br>      int M=(H+T)/2;<br>      if (check(M))<br>        H=M;<br>      else<br>        T=M;<br>    }<br>    return H;<br>  }<br>};<br></td>