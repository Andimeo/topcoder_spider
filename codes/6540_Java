<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br><br><br>public class PlacingPieces{<br>  public int optimalPlacement(int l,int[] a){<br>    int n = a.length;<br>    Arrays.sort(a);<br>    int best = 1000000000;<br>    for(int k=0;k&lt;a.length;k++){<br>      int s = 0;<br>      for(int j=0;j&lt;k;j++)<br>        s+=a[j];<br>      int u=l-s;<br>      if (u&lt;0) {<br>        break;<br>      }<br>      int v=l+1-s-(k+1)*a[k];<br>      if (v&lt;=0){<br>        if (best&gt;k) best = k;<br>      }<br>      boolean[][] h = new boolean[u+1][n];<br>      h[0][0] = true;<br>      for(int j=k+1;j&lt;n;j++)<br>        for(int i=u-a[j];i&gt;=0;i--)<br>          for(int ll=n-1;ll&gt;=0;ll--) if (h[i][ll]){<br>            h[i+a[j]][ll+1] = true;<br>          }<br>      for(int i =0;i&lt;u+1;i++)<br>        for(int j=0;j&lt;n;j++)<br>          if (h[i][j] &amp;&amp; i+a[k]*j&gt;=v){<br>            if (best &gt; k+j)<br>              best = k+j;<br>          }<br>/*      for(int i=0;i&lt;u+1;i++){<br>        for(int j=0;j&lt;n;j++) System.out.print(h[i][j]+" ");<br>        System.out.println();<br>      }*/<br>    }<br>    if (best&gt;n) best = n;<br>    return best;<br>  }<br>}<br></td>