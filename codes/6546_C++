<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class BasketballStrategy {<br>public:<br>  int n,m,X1[100],Y1[100],BX[100],BY[100];<br>  int sqr(int X)<br>  {<br>    return X*X;<br>  }<br>  double sqr(double X)<br>  {<br>    return X*X;<br>  }<br>  int distr(int X1,int Y1,int X2,int Y2)<br>  {<br>    return sqr(X1-X2)+sqr(Y1-Y2);<br>  }<br>  double calcdist(int X1,int Y1,int X2,int Y2)<br>  {<br>    double result=1e100;<br>    double a=Y1-Y2;<br>    double b=-(X1-X2);<br>    double c=X1*Y2-X2*Y1;<br>    for (int i=0;i&lt;m;i++)<br>    {<br>      int d1=distr(X1,Y1,BX[i],BY[i]);<br>      int d2=distr(X2,Y2,BX[i],BY[i]);<br>      int d0=distr(X1,Y1,X2,Y2);<br>      if (abs(d1-d2)&lt;=d0)<br>      {<br>        double t=fabs(a*BX[i]+b*BY[i]+c)/sqrt(a*a+b*b);<br>        if (t&lt;result)<br>          result=t;<br>      }<br>    }<br>    return result;<br>  }<br>  double scoreProbability(vector &lt;string&gt; T1, vector &lt;string&gt; T2, double Cp, double Cs)<br>  {<br>    double f[100];<br>    bool vis[100];<br>    n=T1.size();<br>    m=T2.size();<br>    int i,j;<br>    for (i=0;i&lt;n;i++)<br>      sscanf(T1[i].c_str(),"%d%d",&amp;X1[i],&amp;Y1[i]);<br>    for (i=0;i&lt;m;i++)<br>      sscanf(T2[i].c_str(),"%d%d",&amp;BX[i],&amp;BY[i]);<br>    for (i=0;i&lt;n;i++)<br>      f[i]=0;<br>    memset(vis,false,sizeof(vis));<br>    f[0]=1;<br>    double result=0;<br>    while (1)<br>    {<br>      int k=-1;<br>      double max=-1;<br>      for (i=0;i&lt;n;i++)<br>        if (!vis[i] &amp;&amp; f[i]&gt;max)<br>        {<br>          max=f[i];<br>          k=i;<br>        }<br>      if (k==-1)<br>        break;<br>      vis[k]=true;<br>      double ls=sqrt(sqr(X1[k]-50)+sqr(Y1[k]));<br>      double dr=calcdist(X1[k],Y1[k],50,0);<br>      double p0=pow(Cs*dr/(dr+1),log(ls));<br>      if (p0*max&gt;result)<br>        result=p0*max;<br>      for (i=0;i&lt;n;i++)<br>        if (!vis[i])<br>        {<br>          double dr=calcdist(X1[k],Y1[k],X1[i],Y1[i]);<br>          double ls=sqrt(sqr(X1[k]-X1[i])+sqr(Y1[k]-Y1[i]));<br>          p0=Cp*(1-sqr(ls/150.0))*dr/(dr+1);<br>          if (p0*max&gt;f[i])<br>            f[i]=p0*max;<br>        }<br>    }<br>    return result;<br>  }<br>};<br></td>