<td class="problemText" colspan="8" valign="middle" align="left">
            public class BasketballStrategy {<br>  double EPS=1e-9;<br>   class Point {<br>        double x,y;<br>        public Point(double x,double y) {this.x=x;this.y=y;}<br>        public Point() { x=y=0; }<br>    }<br>    public double dist(Point a,Point b) { return Math.sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y)); }<br>public double getHeight(double a,double b,double c) {<br>        double p=(a+b+c)/2;<br>        return 2*Math.sqrt(p*(p-a)*(p-b)*(p-c))/a; }<br>    int n;<br>    Point a[],b[];<br>    Point LAST=new Point(50,0);<br>    double leastDistance(Point q,Point w) {<br>      double res=Double.MAX_VALUE;<br>      boolean bool=false;<br>      for(int i=0;i&lt;n;i++) {<br>        double f1=dist(q,b[i]);<br>        double f2=dist(w,b[i]);<br>        double f3=dist(q,w);<br>        double h=getHeight(f3,f1,f2);<br>        if (f1*f1&lt;EPS+f2*f2+f3*f3 &amp;&amp; f2*f2&lt;EPS+f1*f1+f3*f3) {<br>          if (h&lt;res) res=h;<br>          bool=true;<br>        }<br>      }<br>      if (!bool) return -1; else return res;<br>    }<br>    double Cp,Cs;<br>    double koef;<br>    double makeGoal(int u) {<br>      double ls=dist(a[u],LAST);<br>  double dr=leastDistance(a[u],LAST);<br>  if (dr&lt;-EPS) koef=1; else koef=dr/(dr+1);<br>  return Math.pow(Cs*koef,Math.log(ls));<br>    }<br>    double makePass(int q,int w) {<br>      double ls=dist(a[q],a[w]);<br>  double dr=leastDistance(a[q],a[w]);<br>  if (dr&lt;-EPS) koef=1; else koef=dr/(dr+1);<br>  return Cp*(1-(ls/150.0)*(ls/150.0))*koef;<br>    }<br><br>  public double scoreProbability(String[] t, String[] r, double _Cp, double _Cs) {<br>    Cp=_Cp;<br>    Cs=_Cs;<br>    n=t.length;<br>    a=new Point[n];<br>    b=new Point[n];<br>    for(int i=0;i&lt;n;i++) {<br>      String z[]=t[i].split(" ");<br>      int d1=Integer.parseInt(z[0]);<br>      int d2=Integer.parseInt(z[1]);<br>      a[i]=new Point(d1,d2);<br>    }<br>    for(int i=0;i&lt;n;i++) {<br>      String z[]=r[i].split(" ");<br>      int d1=Integer.parseInt(z[0]);<br>      int d2=Integer.parseInt(z[1]);<br>      b[i]=new Point(d1,d2);<br>    }<br>    double d[]=new double [n];<br>    boolean flag[]=new boolean [n];<br>    d[0]=1;<br>    double ans=0;<br>    for(int i=0;i&lt;n;i++) {<br>      double min=-2;<br>      int jj=-1;<br>      for(int j=0;j&lt;n;j++)<br>        if (d[j]&gt;min &amp;&amp; !flag[j]) {<br>          jj=j;<br>          min=d[j];<br>        }<br>      if (jj==-1) break;<br>      flag[jj]=true;<br>      ans=Math.max(ans,d[jj]*makeGoal(jj));<br>      for(int j=0;j&lt;n;j++) if (!flag[j]) {<br>        double res=d[jj]*makePass(jj,j);<br>        if (d[j]&lt;res) {<br>          d[j]=res;<br>        }<br>      }<br>    }<br>    return ans;<br>  }<br>}<br></td>