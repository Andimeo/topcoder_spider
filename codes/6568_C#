<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br>using System.Text;<br> <br>public class SuperSort<br>{<br> <br>    public static string wordSort(string sentence)<br>    {<br>        char[] puncts = new char[] { ' ', '.', ',', '!', '?' };<br>        string ret = "", ret2 = "";<br>        List&lt;string&gt; words = new List&lt;string&gt;();<br>        List&lt;string&gt; words2 = new List&lt;string&gt;();<br>        int count = 0;<br>        int i = 0;<br>        while (i &lt; sentence.Length)<br>        {<br>            count = 0;<br>            bool punct = false;<br>            do<br>            {<br>                for (int j = 0; j &lt; puncts.Length; j++)<br>                {<br>                    if (sentence[i+count] == puncts[j])<br>                    {<br>                        punct = true;<br>                        break;<br>                    }<br>                }<br>                if (!punct)<br>                {<br>                    count++;<br>                }<br>            }<br>            while (!punct &amp;&amp; i+count &lt; sentence.Length);<br> <br>            if (count == 0)<br>            {<br>                ret += sentence[i];<br>                i++;<br>            }<br>            else<br>            {<br>                ret += "x";<br>                if (sentence[i] &gt;= 'A' &amp;&amp; sentence[i] &lt;= 'Z')<br>                {<br>                    words.Add(sentence.Substring(i, count));<br>                }<br>                else<br>                {<br>                    words2.Add(sentence.Substring(i, count));<br>                }<br>                i += count;<br>            }<br>        }<br>        words.Sort();<br>        words2.Sort();<br>        for (int j = 0; j &lt; ret.Length; j++)<br>        {<br>            if (ret[j] == 'x')<br>            {<br>                if (words.Count &gt; 0)<br>                {<br>                    ret2 += words[0];<br>                    words.RemoveAt(0);<br>                }<br>                else<br>                {<br>                    ret2 += words2[0];<br>                    words2.RemoveAt(0);<br>                }<br>            }<br>            else<br>            {<br>                ret2 += ret[j];<br>            }<br>        }<br>        return ret2;<br>    }<br>}<br></td>