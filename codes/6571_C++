<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br> <br>using namespace std;<br> <br>typedef long long llong;<br>typedef long double ldbl;<br> <br>#define m 55<br> <br>int d[m][m], u[m][m], qr[m * m], qc[m * m], fi, la;<br> <br>void addq( int rr, int cc, int dd )<br>{<br>  if (u[rr][cc])<br>    return;<br>  u[rr][cc] = 1, d[rr][cc] = dd;<br>  qr[la] = rr, qc[la++] = cc;<br>}<br> <br>class TextEditorNavigation<br>{<br>public:<br>  int keystrokes( vector &lt;string&gt; source, vector &lt;int&gt; start, vector &lt;int&gt; finish )<br>  {<br>    int i, r, c;<br>    <br>    fi = la = 0;<br>    memset(u, 0, sizeof(u));<br>    addq(start[0], start[1], 0);<br>    while (fi &lt; la)<br>    {<br>      r = qr[fi], c = qc[fi++];<br>      if (r &lt; source.size() - 1)<br>        addq(r + 1, c, d[r][c] + 1);<br>      if (r &gt; 0)<br>        addq(r - 1, c, d[r][c] + 1);<br>      if (c &lt; source[r].length() - 1)<br>        addq(r, c + 1, d[r][c] + 1);<br>      if (c &gt; 0)<br>        addq(r, c - 1, d[r][c] + 1);<br>      addq(0, c, d[r][c] + 1);<br>      addq(source.size() - 1, c, d[r][c] + 1);<br>      addq(r, 0, d[r][c] + 1);<br>      addq(r, source[r].length() - 1, d[r][c] + 1);<br>      for (i = c + 1; i &lt; source[r].length(); i++)<br>        if (!isalpha(source[r][i - 1]) &amp;&amp; isalpha(source[r][i]))<br>          break;<br>      if (i &lt; source[r].length())<br>        addq(r, i, d[r][c] + 1);<br>      for (i = c - 1; i &gt;= 0; i--)<br>        if ((i == 0 || !isalpha(source[r][i - 1])) &amp;&amp; isalpha(source[r][i]))<br>          break;<br>      if (i &gt;= 0)<br>        addq(r, i, d[r][c] + 1);<br>    }<br>    return d[finish[0]][finish[1]];<br>  };<br>};<br></td>