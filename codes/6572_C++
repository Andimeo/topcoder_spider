<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br> <br>using namespace std;<br> <br>class WordMath<br>{<br>public:<br>int maximumSum(vector &lt;string&gt; summands)<br>{<br>  int used[26];<br>  int ind[26];<br>  int a[100];<br>  vector&lt;char&gt; vc;<br>  int i,j,k,n,m,best,tot;<br>  n=summands.size();<br>  memset(used,0,sizeof(used));<br>  for (i=0;i&lt;n;i++)<br>  {<br>    for (j=0;j&lt;summands[i].length();j++)<br>      used[summands[i][j]-'A']=1;<br>  }<br>  vc.clear();<br>  for (i=0;i&lt;26;i++)<br>    if (used[i]==1)<br>    {<br>      ind[i]=vc.size();<br>      vc.push_back('A'+i);<br>    }<br>  m=vc.size();<br>  for (i=0;i&lt;10;i++) a[i]=i;<br>  best=0;<br>  do<br>  {<br>    tot=0;<br>    for (i=0;i&lt;n;i++)<br>    {<br>      k=0;<br>      for (j=0;j&lt;summands[i].length();j++)<br>      {<br>        k*=10;<br>        k+=a[ind[summands[i][j]-'A']];<br>      }<br>      tot+=k;<br>    }<br>    if (tot&gt;best) best=tot;<br>  }while (next_permutation(a,a+10));<br>  return best;<br>}<br>};<br></td>