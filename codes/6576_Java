<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class BoxTower {<br>    int n;<br>    int[][] d;<br>    int[][][][] memo;<br>    int[][] other;<br> <br>    public int find(int mask, int t, int a, int b) {<br>        if (memo[mask][t][a][b] != 0) {<br>            return memo[mask][t][a][b];<br>        }<br> <br>        memo[mask][t][a][b] = 1;<br> <br>        for (int i = 0; i &lt; n; i++) {<br>            if ((mask &amp; (1 &lt;&lt; i)) != 0) {<br>                for (int j = 0; j &lt; 2; j++) {<br>                    for (int k = j + 1; k &lt; 3; k++) {<br>                        if (d[i][j] &lt;= d[t][a] &amp;&amp; d[i][k] &lt;= d[t][b]) {<br>                            int l = other[j][k];<br>                            int r = find(mask ^ (1 &lt;&lt; i), i, j, k);<br>                            if (r + d[i][l] &gt; memo[mask][t][a][b]) {<br>                                memo[mask][t][a][b] = r + d[i][l];<br>                            }<br>                        }<br>                    }<br>                }<br> <br>//                int r = find(mask ^ (1 &lt;&lt; i), t, a, b);<br>//                if (r &gt; memo[mask][t][a][b]) {<br>//                    memo[mask][t][a][b] = r;<br>//                }<br>            }<br>        }<br> <br>        return memo[mask][t][a][b];<br>    }<br> <br>    public int tallestTower(int[] x, int[] y, int[] z) {<br>        n = x.length;<br>        d = new int[n + 1][3];<br>        for (int i = 0; i &lt; n; i++) {<br>            d[i][0] = x[i];<br>            d[i][1] = y[i];<br>            d[i][2] = z[i];<br>            Arrays.sort(d[i]);<br>        }<br>        d[n][0] = Integer.MAX_VALUE;<br>        d[n][1] = Integer.MAX_VALUE;<br>        memo = new int[1 &lt;&lt; n][n + 1][3][3];<br>        other = new int[3][3];<br>        other[0][1] = 2;<br>        other[0][2] = 1;<br>        other[1][2] = 0;<br> <br>        return find((1 &lt;&lt; n) - 1, n, 0, 1) - 1;<br>    }<br> <br>}<br> <br> <br>// Powered by PopsEdit<br> <br>// Powered by CodeProcessor<br></td>