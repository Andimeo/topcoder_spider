<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class RestoreExpression {<br>    String pad(String s, int x) {<br>        while (s.length() &lt; x) {<br>            s = "0" + s;<br>        }<br>        return s;<br>    }<br> <br> <br>    public String restore(String expression) {<br>        StringTokenizer st = new StringTokenizer(expression, "+=");<br>        String as = st.nextToken();<br>        String bs = st.nextToken();<br>        String cs = st.nextToken();<br> <br>        String aa = as;<br>        String bb = bs;<br>        String cc = cs;<br> <br>        aa = pad(aa, 50);<br>        bb = pad(bb, 50);<br>        cc = pad(cc, 50);<br> <br>        boolean[][] can = new boolean[50][2];<br>        String[][] az = new String[50][2];<br>        String[][] bz = new String[50][2];<br>        String[][] cz = new String[50][2];<br> <br>        can[0][0] = true;<br>        can[0][1] = false;<br>        az[0][0] = "0";<br>        bz[0][0] = "0";<br>        cz[0][0] = "0";<br> <br>        for (int i = 1; i &lt; 50; i++) {<br>            for (int j = 0; j &lt; 2; j++) {<br>                for (int ad = 0; ad &lt; 10; ad++) {<br>                    if (ad == 0 &amp;&amp; as.length() &gt; 1 &amp;&amp; i == 50 - as.length()) {<br>                        continue;<br>                    }<br> <br>                    if (aa.charAt(i) - '0' == ad || aa.charAt(i) == '?') {<br>                        for (int bd = 0; bd &lt; 10; bd++) {<br>                            if (bd == 0 &amp;&amp; bs.length() &gt; 1 &amp;&amp; i == 50 - bs.length()) {<br>                                continue;<br>                            }<br> <br>                            if (bb.charAt(i) - '0' == bd || bb.charAt(i) == '?') {<br>                                int cd = (ad + bd + j) % 10;<br>                                int cr = (ad + bd + j) / 10;<br> <br>                                if (cd == 0 &amp;&amp; cs.length() &gt; 1 &amp;&amp; i == 50 - cs.length()) {<br>                                    continue;<br>                                }<br> <br>                                if (cc.charAt(i) - '0' == cd || cc.charAt(i) == '?') {<br>                                    if (can[i - 1][cr]) {<br>                                        can[i][j] = true;<br>                                        String ta = az[i - 1][cr] + ad;<br>                                        String tb = bz[i - 1][cr] + bd;<br>                                        String tc = cz[i - 1][cr] + cd;<br>                                        if (cz[i][j] == null || cz[i][j].compareTo(tc) &lt; 0) {<br>                                            az[i][j] = ta;<br>                                            bz[i][j] = tb;<br>                                            cz[i][j] = tc;<br>                                        } else if (cz[i][j].equals(tc) &amp;&amp; az[i][j].compareTo(ta) &lt; 0) {<br>                                            az[i][j] = ta;<br>                                            bz[i][j] = tb;<br>                                            cz[i][j] = tc;<br>                                        }<br>                                    }<br>                                }<br>                            }<br>                        }<br>                    }<br>                }<br>            }<br>        }<br> <br>        if (can[49][0]) {<br>            String ax = az[49][0];<br>            String bx = bz[49][0];<br>            String cx = cz[49][0];<br>            ax = ax.substring(50 - as.length(), 50);<br>            bx = bx.substring(50 - bs.length(), 50);<br>            cx = cx.substring(50 - cs.length(), 50);<br>            return ax + "+" + bx + "=" + cx;<br>        } else {<br>            return "no solution";<br>        }<br>    }<br> <br> <br>}<br> <br> <br>// Powered by PopsEdit<br> <br>// Powered by CodeProcessor<br></td>