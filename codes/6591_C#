<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class MatchNumbersHard {<br>  public string[] maxNumber(string[] matches, string nStr) {<br>    long n = long.Parse(nStr);<br>    long[] need = new long[10];<br>    for (int i = 0; i &lt; 10; ++i)<br>      need[i] = n + 1;<br>    for (int i = 0; i &lt; matches.Length; ++i)<br>      need[i] = long.Parse(matches[i]);<br>    long min = long.MaxValue;<br>    for (int i = 1; i &lt; 10; ++i)<br>      min = Math.Min(min, need[i]);<br>    <br>    if (n &lt; min)<br>    {<br>      if (n &gt;= need[0])<br>      {<br>        return new string[] {"1", "0", "0"};<br>      }<br>      else<br>      {<br>        return new string[] {"0", "", ""};<br>      }<br>    }<br>    <br>    long maxLen = n / min;<br>    if (need[0] &lt; min)<br>    {<br>      maxLen = Math.Max(maxLen, 1 + (n - min) / need[0]);<br>    }<br><br>    long minAll = Math.Min(min, need[0]);<br><br>    long firstDigit = 0;<br>    for (int i = 9; i &gt;= 1; --i)<br>      if (n &gt;= need[i] + (maxLen - 1) * minAll)<br>      {<br>        firstDigit = i;<br>        break;<br>      }<br><br>    long extra = n - need[firstDigit] - (maxLen - 1) * minAll;<br>    long digits = maxLen - 1;<br>    for (int i = 0; i &lt; 10; ++i)<br>      need[i] -= minAll;<br>    long[] num = new long[10];<br>    for (int i = 9; i &gt;= 0; --i)<br>    {<br>      if (need[i] == 0)<br>      {<br>        num[i] = digits;<br>        digits = 0;<br>      } <br>      else<br>      {<br>        long can = Math.Min(digits, extra / need[i]);<br>        num[i] = can;<br>        digits -= can;<br>        extra -= can * need[i];<br>      }<br>    }<br><br>    string firstFifty = firstDigit.ToString();<br>    for (int i = 9; i &gt;= 0; --i)<br>    {<br>      long left = 50 - firstFifty.Length;<br>      int by = (int) Math.Min(left, num[i]);<br>      firstFifty += new string((char) ('0' + i), by);<br>    }<br>    <br>    string lastFifty = "";<br>    for (int i = 0; i &lt;= 9; ++i)<br>    {<br>      long left = 50 - lastFifty.Length;<br>      int by = (int)Math.Min(left, num[i]);<br>      lastFifty = new string((char)('0' + i), by) + lastFifty;<br>    }<br>    if (lastFifty.Length &lt; 50)<br>      lastFifty = firstDigit.ToString() + lastFifty;<br>    <br>    return new string[]{maxLen.ToString(), firstFifty, lastFifty};<br>  }<br><br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>