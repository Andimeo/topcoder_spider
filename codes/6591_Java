<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.BigInteger;<br> <br>public class MatchNumbersHard {<br>    public String[] maxNumber(String[] matches, String mn) {<br>        long n = Long.parseLong(mn);<br>        int dn = matches.length;<br>        long[] mm = new long[dn];<br>        long minn = Long.MAX_VALUE;<br>        for (int i = 0; i &lt; dn; i++) {<br>            mm[i] = Long.parseLong(matches[i]);<br>            if (mm[i] &lt; minn) {<br>                minn = mm[i];<br>            }<br>        }<br> <br>        long an = 0;<br>        for (int i = 1; i &lt; dn; i++) {<br>            if (n &gt;= mm[i]) {<br>                long t = (n - mm[i]) / minn + 1;<br>                if (t &gt; an) {<br>                    an = t;<br>                }<br>            }<br>        }<br> <br>        if (an == 0) {<br>            if (n &gt;= mm[0]) {<br>                return new String[]{"1", "0", "0"};<br>            } else {<br>                return new String[]{"0", "", ""};<br>            }<br>        }<br>        long ans = an;<br> <br>        long[] cnt = new long[dn];<br>        for (int i = dn - 1; i &gt;= 0; i--) {<br>            long l = 0;<br>            long r = an + 1;<br>            while (l + 1 &lt; r) {<br>                long m = (l + r) / 2;<br>                BigInteger z = BigInteger.valueOf(m);<br>                z = z.multiply(BigInteger.valueOf(mm[i]));<br>                z = z.add(BigInteger.valueOf(minn).multiply(BigInteger.valueOf(an - m)));<br>                if (z.compareTo(BigInteger.valueOf(n)) &gt; 0) {<br>                    r = m;<br>                } else {<br>                    l = m;<br>                }<br>            }<br>            cnt[i] = l;<br>            n -= cnt[i] * mm[i];<br>            an -= cnt[i];<br>        }<br> <br>        String[] r = new String[3];<br>        r[0] = "" + ans;<br>        r[1] = "";<br>        int dd = 0;<br>        for (int i = dn - 1; i &gt;= 0; i--) {<br>            for (long j = 0; j &lt; cnt[i] &amp;&amp; dd &lt; 50; j++, dd++) {<br>                r[1] += (char)('0' + i);<br>            }<br>        }<br>        r[2] = "";<br>        dd = 0;<br>        for (int i = 0; i &lt; dn; i++) {<br>            for (long j = 0; j &lt; cnt[i] &amp;&amp; dd &lt; 50; j++, dd++) {<br>                r[2] = (char)('0' + i) + r[2];<br>            }<br>        }<br> <br>        return r;<br>    }<br> <br> <br>}<br> <br> <br>// Powered by PopsEdit<br> <br>// Powered by CodeProcessor<br></td>