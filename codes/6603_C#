<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class UnrepeatableWords<br>{<br>    int[,] b;<br>    int k, n, a;<br>    string sol = "";<br> <br>    void find(string s)<br>    {<br>        if (s.Length == n)<br>        {<br>            sol = s;<br>            return;<br>        }<br> <br>        for (int i = 0; i &lt; a &amp;&amp; sol == ""; i++)<br>        {<br>            char next = Convert.ToChar( 65 + i );<br>            int l = s.Length + 1;<br>            for (int j = 1; j &lt;= l &amp;&amp; sol == ""; j++)<br>            {<br>                string c = s.Substring( s.Length - j + 1 ) + next;<br>                int cnt = 1;<br>                int ns = s.Length - j - j + 1;<br> <br>                while (ns &gt;= 0 &amp;&amp; sol == "")<br>                {<br>                    string ca = s.Substring( ns, j );<br>                    if (ca == c)<br>                    {<br>                        cnt++;<br>                        ns -= j;<br>                    }<br>                    else<br>                    {<br>                        break;<br>                    }<br>                }<br> <br>                b[i, j] = cnt;<br>                if (cnt &gt;= k) break;<br>            }<br> <br>            bool valid = true;<br>            for (int j = 1; j &lt;= l &amp;&amp; sol == ""; j++)<br>            {<br>                if (b[i,j] &gt;= k)<br>                {<br>                    valid = false;<br>                    break;<br>                }<br>            }<br> <br>            if (valid) find( s + next );<br>        }<br>    }<br> <br>    public string getWord(int k, int n, int allowed)<br>    {<br>        b = new int[n+1, n+1];<br>        this.k = k;<br>        this.n = n;<br>        this.a = allowed;<br> <br>        find( "" );<br> <br>        return sol;<br>    }<br>}<br></td>