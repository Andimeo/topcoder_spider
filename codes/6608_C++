<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;string.h&gt;<br>#include &lt;stdio.h&gt;<br><br>using namespace std;<br><br>class MarriageProblemRevised {<br>  public:<br>  <br>  int n, m, nm2;<br>  int data[12][12];<br>  int l[12], r[12];<br>  int weight[24];<br>  <br>  int neededMarriages(vector &lt;string&gt; P) {<br>    int i, j, f, t, ans;<br>    <br>    n = P.size();<br>    m = P[0].size();<br>    for (i = 0; i &lt; n; i ++)<br>      for (j = 0; j &lt; m; j ++)<br>        data[i][j] = (P[i][j] == '1');<br>    for (i = 0; i &lt; n; i ++) {<br>      f = 0;<br>      for (j = 0; j &lt; m; j ++)<br>        if (data[i][j])<br>          f = 1;<br>      if (!f)<br>        return -1;<br>      }<br>    for (i = 0; i &lt; m; i ++) {<br>      f = 0;<br>      for (j = 0; j &lt; n; j ++)<br>        if (data[j][i])<br>          f = 1;<br>      if (!f)<br>        return -1;<br>      }<br>    for (i = 0; i &lt; n; i ++) {<br>      weight[i] = 1 &lt;&lt; i;<br>      for (j = 0; j &lt; m; j ++)<br>        if (data[i][j])<br>          weight[i] += 1 &lt;&lt; (j + n);<br>      }<br>    for (i = 0; i &lt; m; i ++) {<br>      weight[i + n] = 1 &lt;&lt; (i + n);<br>      for (j = 0; j &lt; n; j ++)<br>        if (data[j][i])<br>          weight[i + n] += 1 &lt;&lt; j;<br>      }<br>    nm2 = 1 &lt;&lt; (n + m);<br>//    for (j = 0; j &lt; n + m; j ++)<br>//      printf("%d\n",weight[j]);<br>    ans = 40;<br>    for (i = 0; i &lt; nm2; i ++) {<br>      f = 0;<br>      t = 0;<br>      for (j = 0; j &lt; n + m; j ++)<br>        if (i &amp; (1&lt;&lt;j)) {<br>          f |= weight[j];<br>          t ++;<br>          }<br>      if (f == nm2 - 1)<br>        ans &lt;?= t;<br>      }<br>    return ans;<br>    }<br>  };<br></td>