<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class MarriageProblemRevised<br>{<br>  public int neededMarriages(String[] preferences)<br>  {<br>    int M = preferences.length;<br>    int N = preferences[0].length();<br>    boolean[][] m = new boolean[M][N];<br>    for (int x = 0; x &lt; M; x++)<br>      for (int y = 0; y &lt; N; y++)<br>        m[x][y] = preferences[x].charAt(y) == '1';<br>    <br>    int all = 0;<br>    for (int x = 0; x &lt; M + N; x++)<br>      all = all | (1 &lt;&lt; x);<br>    <br>    List&lt;Integer&gt; moves = new Vector&lt;Integer&gt;();<br>    for (int x = 0; x &lt; M; x++)<br>    {<br>      int s = 0;<br>      for (int y = 0; y &lt; N; y++)<br>        if (m[x][y])<br>          s |= 1 &lt;&lt; (M + y);<br>      if (s != 0) <br>        moves.add(s | (1 &lt;&lt; x));<br>    }<br>    for (int y = 0; y &lt; N; y++)<br>    {<br>      int s = 0;<br>      for (int x = 0; x &lt; M; x++)<br>        if (m[x][y])<br>          s |= 1 &lt;&lt; x;<br>      if (s != 0) <br>        moves.add(s | (1 &lt;&lt; (M + y)));<br>    }<br>    <br>    Set&lt;Integer&gt; state = new HashSet&lt;Integer&gt;();<br>    state.add(all);<br>    int res = 0;<br>    <br>    while (state.size() &gt; 0)<br>    {<br>      Set&lt;Integer&gt; newS = new HashSet&lt;Integer&gt;();      <br> <br>      for (int s : state)<br>      {<br>        if (s == 0)<br>          return res;<br>        else<br>          for (int move : moves)<br>          {<br>            int gen = s &amp; (~move);<br>            if (gen != s)<br>              newS.add(gen);<br>          }<br>      }<br>      <br>      state = newS;<br>      res++;<br>    }<br>    <br>    return -1;<br>  }<br>  <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>