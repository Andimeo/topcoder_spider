<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;numeric&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;iterator&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>using namespace std;<br> <br>typedef long long LL;<br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br> <br>#define FOR(i,a,b) for(int i=(a);i&lt;=(b);i++)<br>#define FORD(i,a,b) for(int i=(a);i&gt;=(b);i--)<br>#define REP(i,n) FOR(i,0,n-1)<br>#define FOREACH(i,x) for(__typeof((x).begin()) i=(x.begin()); i!=(x).end(); ++i)<br>#define ALL(x) x.begin(),x.end()<br>#define PB push_back<br> <br>class LineOfSight {<br>  public:<br>  bool A[50][50];<br>  bool B[50][50];<br> <br>  int bestPosition(vector &lt;string&gt; bb) {<br>    memset(A,0,sizeof(A));<br>    int n = bb.size(), m = bb[0].size();<br>    REP(i,n) REP(j,m) if (bb[i][j] == 'X') {<br>      REP(k,m) A[i][k] = 1;<br>      REP(k,n) A[k][j] = 1;<br>    }<br>    int best = 1000000000;<br>    REP(i,n) REP(j,m) if (!A[i][j]) {<br>      memcpy(B,A,sizeof(A));<br>      REP(k,m) B[i][k] = 1;<br>      REP(k,n) B[k][j] = 1;<br>      int c = 0;<br>      REP(ii,n) REP(jj,m) if (!B[ii][jj]) c++;<br>      best &lt;?= c;<br>    }<br>    return (best &lt; 1000000000) ? best : -1;<br>  }<br>};<br> <br> <br>// Powered by PopsEdit<br></td>