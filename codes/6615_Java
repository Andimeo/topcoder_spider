<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class LineOfSight<br>{<br>  public int bestPosition(String[] board)<br>  {<br>    int m=board.length,n=board[0].length();<br>    boolean[][] a=new boolean[m][n];<br>    int cur=0;<br>    for (int i=0;i&lt;m;i++)<br>      for (int j=0;j&lt;n;j++)<br>        if (board[i].charAt(j)=='X')<br>        {<br>          for (int h=0;h&lt;m;h++)<br>            if (!a[h][j])<br>            {<br>              a[h][j]=true;<br>              cur++;<br>            }<br>          for (int h=0;h&lt;n;h++)<br>            if (!a[i][h])<br>            {<br>              a[i][h]=true;<br>              cur++;<br>            }<br>        }<br>    int max=-1;<br>    for (int i=0;i&lt;m;i++)<br>      for (int j=0;j&lt;n;j++)<br>        if (a[i][j]==false)<br>        {<br>          int dem=0;<br>          for (int h=0;h&lt;m;h++)<br>            if (!a[h][j])<br>            {<br>              dem++;<br>            }<br>          for (int h=0;h&lt;n;h++)<br>            if (!a[i][h])<br>            {<br>              dem++;<br>            }<br>          if (dem&gt;max) max=dem;<br>        }<br>    if (max==-1) return -1;<br>    return n*m-cur-max+1;<br>  }<br>  <br>  <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>