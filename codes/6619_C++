<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstring&gt;<br>#include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br> <br>#define FOR(I, L, R) for (typeof((L)) I = (L), TMP_##I = (R); I &lt; TMP_##I; ++I)<br>#define FORE(I, L, R) for (typeof((L)) I = (L), TMP_##I = (R); I != TMP_##I; ++I)<br>#define FOREACH(I, C) FORE(I, (C).begin(), (C).end())<br> <br>class InboxCleanup {<br>public:<br>  int fewestClicks(string messages, int low, int high);<br>};<br> <br>int InboxCleanup::fewestClicks(string messages, int low, int high)<br>{<br>  int res = 12345678;<br>  int n = messages.size();<br>  FOR(k, low, high+1) {<br>    int p = (n+k-1) / k;<br>    int cur = p-1;<br>    FOR(i, 0, p) {<br>      string s = messages.substr(k*i, k);<br>      int zle = 0;<br>      FOREACH(it, s) if (*it == 'D') zle++;<br>      int jak = zle &lt;? s.size() - zle + 1;<br>      if (zle &gt; 0) jak++;<br>      cur += jak;<br>    }<br>    res &lt;?= cur;<br>  }<br>  return res;<br>}<br> <br>// Powered by MBMagic 0.12<br>// Powered by PopsEdit<br></td>