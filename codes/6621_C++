<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;utility&gt;<br>#include &lt;cmath&gt;<br>using namespace std;<br><br>#define fo(a,b) for(int a=0;a&lt;b;++a)<br>#define pb push_back<br>#define foreach(it,c) for(typeof((c).begin()) it = (c).begin();it != (c).end();++it)<br>#define mp make_pair<br><br>#define lint long long int<br>#define VS vector&lt;string&gt;<br>#define VI vector&lt;int&gt;<br>#define VVI vector&lt;VI &gt;<br>#define iss istringstream<br>#define oss ostringstream<br><br>int m,n;<br>string s;<br>int memo[51][51][2500];<br>VS g;<br><br>inline bool valid(int x,int y){<br>  return x&gt;=0 and x &lt; m and y &gt;=0 and y &lt; n and g[x][y] != '#';<br>}<br><br>string dir = "NEWS";<br>int dx[] = {-1,0,0,1};<br>int dy[] = {0,1,-1,0};<br>int inf = 1000000;<br><br>int doit(int x,int y,int a){<br>  if(g[x][y]=='X') return a;<br>  if(a &gt;= s.size()) return inf;<br><br>  int &amp; ret = memo[x][y][a];<br>  if(ret != -1) return ret;<br><br>  ret = doit(x,y,a+1);<br>  int d = dir.find(s[a]);<br>  int X = x + dx[d];<br>  int Y = y + dy[d];<br><br>  if(valid(X,Y))<br>    ret &lt;?= doit(X,Y,a+1);<br>  return ret;<br>}<br><br>class RoboRace{ <br>public: <br>int startTime(vector &lt;string&gt; board, vector &lt;string&gt; commands) { <br>  g = board;<br>  m = g.size(); n = g[0].size();<br>  fo(i,commands.size()) s += commands[i];<br><br>  memset(memo,-1,sizeof(memo));<br><br>  int mx,my,fx,fy;<br>  for(int i=0;i&lt;m;i++)fo(j,n) if(g[i][j]=='F') fx = i, fy = j;<br>  else if(g[i][j]=='Y') mx = i, my = j;<br><br>  for(int i=0;i&lt;s.size();i++) if(doit(mx,my,i) &lt; doit(fx,fy,i)) return i;<br>  return -1;<br>} <br>        <br> <br>}; <br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>