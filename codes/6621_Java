<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br><br>public class RoboRace {<br>  public int startTime(String[] board, String[] commands) {<br>    int n = board.length;<br>    int m = board[0].length();<br>    char[][] b = new char[n][m];<br>    int yr = -1;<br>    int yc = -1;<br>    int fr = -1;<br>    int fc = -1;<br>    for (int i = 0; i &lt; n; i++) {<br>      for (int j = 0; j &lt; m; j++) {<br>        b[i][j] = board[i].charAt(j);<br>        switch (b[i][j]) {<br>        case 'Y':<br>          yr = i;<br>          yc = j;<br>          break;<br>        case 'F':<br>          fr = i;<br>          fc = j;<br>          break;<br>        }<br>      }<br>    }<br>    StringBuilder sb = new StringBuilder();<br>    for (String c: commands)<br>      sb.append(c);<br>    char[] c = sb.toString().toCharArray();<br>    int k = c.length;<br>    int[] dr = new int[k];<br>    int[] dc = new int[k];<br>    for (int t = 0; t &lt; k; t++) {<br>      switch (c[t]) {<br>      case 'S':<br>        dr[t]++;<br>        break;<br>      case 'N':<br>        dr[t]--;<br>        break;<br>      case 'E':<br>        dc[t]++;<br>        break;<br>      case 'W':<br>        dc[t]--;<br>        break;<br>      }<br>    }<br>    int[][][] d = new int[n][m][k + 1];<br>    for (int t = k; t &gt;= 0; t--) {<br>      for (int i = 0; i &lt; n; i++) {<br>        for (int j = 0; j &lt; m; j++) {<br>          if (b[i][j] == 'X')<br>            d[i][j][t] = t;<br>          else if (t == k) {<br>            d[i][j][t] = Integer.MAX_VALUE;<br>          } else {<br>            d[i][j][t] = d[i][j][t + 1];<br>            int ii = i + dr[t];<br>            int jj = j + dc[t];<br>            if (ii &gt;= 0 &amp;&amp; ii &lt; n &amp;&amp; jj &gt;= 0 &amp;&amp; jj &lt; m &amp;&amp; b[ii][jj] != '#')<br>              d[i][j][t] = Math.min(d[i][j][t], d[ii][jj][t + 1]);<br>          }<br>        }<br>      }<br>    }<br>    for (int t = 0; t &lt; k; t++) {<br>      if (d[yr][yc][t] &lt; d[fr][fc][t])<br>        return t;<br>    }<br>    return -1;<br>  }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>