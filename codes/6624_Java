<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.io.*;<br>import java.text.*;<br>import java.util.regex.*;<br>import java.math.*;<br>import static java.lang.Math.*;<br>import static java.util.Arrays.*;<br>import static java.lang.Integer.parseInt;<br>public class FastGossip {<br>  public int minTime(String[] conn) {<br>    g = new boolean[conn.length][conn.length];<br>    reach = new int[g.length];<br>    for(int i = 0; i &lt; g.length; i++){<br>      for(int j = 0; j &lt; g.length; j++){<br>        g[i][j] = conn[i].charAt(j) == 'Y';<br>        if(g[i][j]) reach[i] |= (1&lt;&lt;j);<br>      }<br>    }<br>    return doit(1,0) == inf ? -1 : doit(1,0);<br>  }<br>  int inf = Integer.MAX_VALUE/2;<br>  boolean[][] g;<br>  int[] reach;<br>  HashMap&lt;Pair, Integer&gt; memo = new HashMap&lt;Pair, Integer&gt;();<br>  int doit(int msk, int at){<br>    Pair p = new Pair(msk, at);<br>    if(memo.containsKey(p)) return memo.get(p);<br>    int ret = doit2(msk, at);<br>    memo.put(p, ret);<br>    return ret;<br>  }<br>  int doit2(int msk, int at){<br>  //  System.out.println("Reachable " + Integer.toString(msk, 2)+ "("+at+")");<br>    if(at == g.length){<br>      if((msk&gt;&gt;14) == 0) return inf;<br>      return 1+doit((msk &amp; ((1&lt;&lt;14)-1)) | (msk&gt;&gt;14), 0);<br>    }<br>    if(msk == (1&lt;&lt;g.length)-1) return 0;<br>    if(((1&lt;&lt;at)&amp;msk) == 0) return doit(msk, at+1);<br>    int ret = inf;<br>    if((reach[at] &amp; ~msk &amp; ~(msk&gt;&gt;14)) == 0) ret = min(ret, doit(msk, at+1));<br>    for(int i = 0; i &lt; g.length; i++){<br>      if(((1&lt;&lt;i)&amp;msk) != 0) continue;<br>      if(((1&lt;&lt;i)&amp;(msk&gt;&gt;14)) != 0) continue;<br>      if(g[at][i]) ret = min(ret, doit(msk | (1&lt;&lt;(i+14)), at+1));<br>    }<br>    return ret;<br>  }<br> <br>  class Pair implements Comparable&lt;Pair&gt;{<br>    int x, y;<br>    Pair(int xx, int yy){x = xx; y = yy;}<br>    public int compareTo(Pair p){<br>      if(x != p.x) return x &lt; p.x ? -1 : 1;<br>      return y &lt; p.y ? -1 : 1;<br>    }<br>    public boolean equals(Object o){<br>      Pair p = (Pair)o;<br>      return p.x == x &amp;&amp; p.y == y;<br>    }<br>    public int hashCode(){<br>      return 17*x+y;<br>    }<br>    public String toString(){<br>      return "("+x+","+y+")";<br>    }<br>  }<br>  int gcd(int a, int b){<br>    return a == 0 ? b : gcd(b%a,a);<br>  }<br> <br>}<br> <br>// Powered by PopsEdit<br></td>