<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>//using System.Threading;<br>//using System.IO;<br> <br>using math = System.Math; <br> <br>public class ThreeMines<br> <br>{<br>  int xx,yy;<br>  int[,] table;<br>  int[,,,]ww;<br>  int[,,,] maxww;<br> <br>  void calcww()<br>  {<br>    int i,j,k,l;<br> <br>    int [,,,] maxww1 = new int[xx+1,yy+1,xx+1,yy+1];<br> <br>    maxww = new int[xx+1,yy+1,xx+1,yy+1];<br>    ww = new int[xx+1,yy+1,xx+1,yy+1];<br> <br>    for(i=0;i&lt;=xx;i++)<br>      for(j=0;j&lt;=yy;j++)<br>        for(k=0;k&lt;=xx;k++)<br>          for(l=0;l&lt;=yy;l++)<br>            ww[i,j,k,l] = maxww[i,j,k,l] = maxww1[i,j,k,l]= -(1&lt;&lt;20);<br> <br>    for(i=0;i&lt;xx;i++)<br>      for(j=0;j&lt;yy;j++)<br>      {<br>        ww[i,j,i,j] = table[i,j];<br>        maxww[i,j,i,j] = maxww1[i,j,i,j] = ww[i,j,i,j];<br>      }<br> <br>    for(i=0;i&lt;xx;i++)<br>      for(j=0;j&lt;yy;j++)<br>        for(k=i+1;k&lt;xx;k++)<br>        {<br>          ww[i,j,k,j] = ww[i,j,k-1,j] + table[k,j];<br>        }<br> <br>    for(i=0;i&lt;xx;i++)<br>      for(j=0;j&lt;yy;j++)<br>        for(k=j+1;k&lt;yy;k++)<br>          ww[i,j,i,k] = ww[i,j,i,k-1] + table[i,k];<br> <br>    for(i=0;i&lt;xx;i++)<br>      for(j=0;j&lt;yy;j++)<br>        for(k=i+1;k&lt;xx;k++)<br>          for(l=j+1;l&lt;yy;l++)<br>            ww[i,j,k,l] = table[k,l] + ww[i,j,k,l-1] + ww[i,j,k-1,l] - ww[i,j,k-1,l-1];<br> <br> <br>    for(i=0;i&lt;xx;i++)<br>      for(j=0;j&lt;yy;j++)<br>        for(k=i;k&lt;xx;k++)<br>          for(l=j;l&lt;yy;l++)<br>          {<br>            maxww1[i,j,k,l] = ww[i,j,k,l];<br>            if ( k &gt; i)<br>              maxww1[i,j,k,l] = math.Max(maxww1[i,j,k,l], maxww1[i,j,k-1,l]);<br>            if ( l &gt; j)<br>              maxww1[i,j,k,l] = math.Max(maxww1[i,j,k,l], maxww1[i,j,k,l-1]);<br>            if (( k &gt; i)&amp;&amp;(l&gt;j))<br>              maxww1[i,j,k,l] = math.Max(maxww1[i,j,k,l], maxww1[i,j,k-1,l-1]);<br>          }<br> <br>    for(i=xx-1;i&gt;=0;i--)<br>      for(j=yy-1;j&gt;=0;j--)<br>        for(k=xx-1;k&gt;=i;k--)<br>          for(l=yy-1;l&gt;=j;l--)<br>          {<br>            maxww[i,j,k,l] = maxww1[i,j,k,l];<br>            if ( k &gt; i)<br>              maxww[i,j,k,l] = math.Max(maxww[i,j,k,l], maxww[i+1,j,k,l]);<br>            if ( l &gt; j)<br>              maxww[i,j,k,l] = math.Max(maxww[i,j,k,l], maxww[i,j+1,k,l]);<br>            if (( k &gt; i)&amp;&amp;(l&gt;j))<br>              maxww[i,j,k,l] = math.Max(maxww[i,j,k,l], maxww[i+1,j+1,k,l]);<br>          }<br> <br> <br>  }<br>  public int maximumProfit(string[] field)<br>  {<br>    xx = field.Length;<br>    yy = field[0].Length;<br>    ww = new int[xx,yy,xx,yy];<br>    table = new int[xx,yy];<br>    int i,j,k;<br>    for(i=0;i&lt;xx;i++)<br>      for(j=0;j&lt;yy;j++)<br>        if (( field[i][j] &gt;='a') &amp;&amp;(field[i][j] &lt;='z')) table[i,j] = field[i][j] - 'a';<br>    else table[i,j] = -(field[i][j] - 'A');<br> <br>    calcww();<br> <br>    int max = -(1&lt;&lt;28);<br>    int i1,i2,j1;<br> <br> <br>    for(i1=0;i1&lt;xx;i1++)<br>      for(i2=i1+1;i2&lt;xx;i2++)<br>        {<br>          int cur = maxww[0,0,i1,yy-1] + maxww[i1+1,0,i2,yy-1] + maxww[i2+1,0,xx-1,yy-1];<br>        if ( cur &gt; max) <br>          max = cur;<br>        }<br> <br>    for(i1=0;i1&lt;yy;i1++)<br>      for(i2=i1+1;i2&lt;yy;i2++)<br>      {<br>        int cur = maxww[0,0,xx-1,i1] + maxww[0,i1+1,xx-1,i2] + maxww[0,i2+1,xx-1,yy-1];<br>        if ( cur &gt; max) <br>          max = cur;<br>      }<br> <br>    for(i1=0;i1&lt;xx;i1++)<br>      for(j1=0;j1&lt;yy;j1++)<br>      {<br>        int cur;<br>        cur = maxww[0,0,i1,j1] + maxww[0,j1+1,i1,yy-1] + maxww[i1+1,0,xx-1,yy-1];<br>        if ( cur &gt; max)<br>          max = cur;<br> <br>        cur = maxww[0,0,i1,j1] + maxww[i1+1,0,xx-1,j1] + maxww[0,j1+1,xx-1,yy-1];<br>        if ( cur &gt; max) <br>          max = cur;<br> <br>        cur = maxww[0,0,i1,yy-1] + maxww[i1+1,0,xx-1,j1] + maxww[i1+1,j1+1,xx-1,yy-1];<br>        if ( cur &gt; max) <br>          max = cur;<br> <br>        cur = maxww[0,0,xx-1,j1] + maxww[0,j1+1,i1,yy-1] + maxww[i1+1,j1+1,xx-1,yy-1];<br>        if ( cur &gt; max) <br>          max = cur;<br>      }<br>    return max;<br>  }<br>}<br> <br> <br> <br> <br> <br>// Powered by PopsEdit<br></td>