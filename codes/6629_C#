<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br><br>public class SillySudoku <br>{<br>  int count = 0;<br>  int[,] bd;<br>  bool[,] unset;<br>  public int countWays(string[] board) <br>  {<br>    unset = new bool[4, 4];<br>    bd = new int[4, 4];<br>    for (int i = 0; i &lt; 4; i++) for (int j = 0; j &lt; 4; j++) if (board[i][j] == '-') { unset[i, j] = true; bd[i, j] = -1; } else bd[i, j] = board[i][j] - '0';<br>    go(0, 0);<br>    return count;<br>  }<br>  bool[] seen = new bool[5];<br>  void reset()<br>  {<br>    for (int i = 0; i &lt; 5; i++) seen[i] = false;<br>  }<br>  bool check()<br>  {<br>    for (int i = 1; i &lt; 5; i++) if (!seen[i]) return false;<br>    return true;<br>  }<br>  void go(int i, int j)<br>  {<br>    <br>    if (j == 4)<br>    {<br>      for(int x=0;x&lt;4;x++)<br>      {<br>        reset();<br>        for (int y = 0; y &lt; 4; y++)<br>        {<br>          seen[bd[x, y]] = true;<br>        }<br>        if (!check()) return;<br>        reset();<br>        for (int y = 0; y &lt; 4; y++)<br>        {<br>          seen[bd[y, x]] = true;<br>        }<br>        if (!check()) return;<br>        reset();<br>        int xx = 2*(x % 2);<br>        int yy = 2*(x / 2);<br>        reset();<br>        for (int y = 0; y &lt; 4; y++)<br>        {<br>          int xxx = y % 2;<br>          int yyy = y / 2;<br>          seen[bd[xx + xxx, yy+yyy]] = true;<br>        }<br>        if (!check()) return;<br>      }<br>      <br>      count++;<br>      return;<br>    }<br>    if (i == 4)<br>    {<br>      reset();<br>      for (int k = 0; k &lt; 4; k++)<br>      {<br>        seen[bd[k, j]] = true;<br>      }<br>      if (!check()) return;<br>      go(0, j + 1);<br>      return;<br>    }<br>    if (unset[i, j])<br>    {<br>      for (int k = 1; k &lt;= 4; k++)<br>      {<br>        bd[i, j] = k;<br>        go(i + 1, j);<br>      }<br>    }<br>    else<br>    {<br>      go(i + 1, j);<br>    }<br>  }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>