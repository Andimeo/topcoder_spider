<td class="problemText" colspan="8" valign="middle" align="left">
            #pragma warning (disable:4786)<br><br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br><br>using namespace std;<br>#define Sqr(x) ((x)*(x))<br>#define Abs(x) ((x)&gt;0?(x):-(x))<br>typedef vector &lt;int&gt; VI;<br>typedef vector &lt;string&gt; VS;<br><br>#define MAX 3000<br>int ans[MAX], par[MAX];<br><br>class MemorizingPi <br>{<br>  int Solve(string s)<br>  {<br>    int i, len = s.length(), j;<br>    for (i=0;i&lt;len-1;i++)<br>      if ( s[i]!=s[i+1] ) break;<br><br>    if ( i==len-1 ) return 1;<br><br>    if ( s=="128" || s=="256" || s=="512" || s=="1024" || s=="2048" || s=="4096" || s=="8192" )<br>      return 2;<br><br>    for (i=0;i&lt;len-1;i++)<br>      if ( int(s[i]-'0')+1!=int(s[i+1]-'0') ) break;<br><br>    if ( i==len-1 ) return 4;<br><br>    for (i=0;i&lt;len-1;i++)<br>      if ( int(s[i]-'0')-1!=int(s[i+1]-'0') ) break;<br><br>    if ( i==len-1 ) return 5;<br><br>    if ( s[0]==s[len-1] ) return 7;<br>    for (i=0;i&lt;len;i++)<br>      for (j=i+1;j&lt;len;j++)<br>        if ( s[i]==s[j] ) return 8;<br><br>    return 10;<br>  }<br><br>public:<br>  vector &lt;string&gt; segmentation(vector &lt;string&gt; dig) <br>  {<br>    string s = "";<br>    int i;<br>    for (i=0;i&lt;dig.size();i++)<br>      s += dig[i];<br><br>    int len = s.length();<br><br>    ans[len] = 0;<br>    par[len] = 0;<br>    for (i=len-1;i&gt;=0;i--)<br>    {<br>      ans[i] = par[i] = -1;<br>      int c3 = (i+3&lt;=len &amp;&amp; ans[i+3]!=-1 ? Solve(s.substr(i, 3)) + ans[i+3] : -1);<br>      int c4 = (i+4&lt;=len &amp;&amp; ans[i+4]!=-1 ? Solve(s.substr(i, 4)) + ans[i+4] : -1);<br><br>      if ( c3==-1 &amp;&amp; c4==-1 ) continue;<br>      if ( c3!=-1 &amp;&amp; c4==-1 )<br>      {<br>        ans[i] = c3;<br>        par[i] = 3;<br>      }<br>      else if ( c3==-1 &amp;&amp; c4!=-1 )<br>      {<br>        ans[i] = c4;<br>        par[i] = 4;<br>      }<br>      else<br>      {<br>        if ( c3&lt;=c4 )<br>        {<br>          ans[i] = c3;<br>          par[i] = 3;<br>        }<br>        else<br>        {<br>          ans[i] = c4;<br>          par[i] = 4;<br>        }<br>      }<br>    }<br><br>    VS ret;<br>    string cur = "";<br>    int now = 0;<br>    while ( now&lt;len )<br>    {<br>      if ( par[now]==3 )<br>      {<br>        int add = 3;<br>        if ( cur.length()&gt;0 ) add++;<br><br>        if ( add+cur.length()&gt;100 )<br>        {<br>          ret.push_back(cur);<br>          cur = "";<br>        }<br><br>        if ( cur.length()&gt;0 ) cur += " ";<br>        cur += s.substr(now, 3);<br>        now += 3;<br>      }<br>      else<br>      {<br>        int add = 4;<br>        if ( cur.length()&gt;0 ) add++;<br><br>        if ( add+cur.length()&gt;100 )<br>        {<br>          ret.push_back(cur);<br>          cur = "";<br>        }<br><br>        if ( cur.length()&gt;0 ) cur += " ";<br>        cur += s.substr(now, 4);<br>        now += 4;<br>      }<br>    }<br><br>    if ( cur.length()&gt;0 ) ret.push_back(cur);<br>    return ret;<br>  }<br><br>  <br>}; <br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>