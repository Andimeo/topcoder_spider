<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br><br>public class StrawberryFieldsOnFire {<br>  long ww, hh;<br>  int n;<br>  long[] x,y,x1,y1,x2,y2;<br>  <br>  public int timeLimit(int w, int h, String need, String[] fire) {<br>    long mneed = Long.parseLong(need);<br>    ww = w;<br>    hh = h;<br>    n = fire.length;<br>    x = new long[n];<br>    y = new long[n];<br>    x1 = new long[n];<br>    y1 = new long[n];<br>    x2 = new long[n];<br>    y2 = new long[n];<br>  <br>    for (int i=0; i&lt;fire.length; i++) {<br>      StringTokenizer st = new StringTokenizer(fire[i]);<br>      x[i] = Long.parseLong(st.nextToken());<br>      y[i] = Long.parseLong(st.nextToken());<br>    }<br>    <br>    long l = 0;<br>    long r = ww+hh;<br>    <br>    while (l &lt; r) {<br>      long mid = (l+r+1) / 2;<br>      if (find(mid) &lt; mneed)<br>        r = mid-1;<br>      else<br>        l = mid;<br>    }<br>    <br>    return (int) l;<br>  }<br><br>  private Long find(long mid) {<br>    for (int i=0; i&lt;n; i++) {<br>      x1[i] = Math.max(1, x[i]-mid);<br>      x2[i] = Math.min(ww, x[i]+mid);<br>      y1[i] = Math.max(1, y[i]-mid);<br>      y2[i] = Math.min(hh, y[i]+mid);<br>    }<br>    <br>    long[] xx = new long[2*n];<br>    for (int i=0; i&lt;n; i++) {<br>      xx[2*i] = x1[i];<br>      xx[2*i+1] = x2[i]+1;<br>    }<br>    Arrays.sort(xx);<br>    long sum = 0;<br>    long[] yy = new long[2*n];<br>    int[] t = new int[2*n];<br>    for (int i=0; i&lt;2*n-1; i++) {<br>      long l = xx[i];<br>      long r = xx[i+1];<br>      int cnt = 0;<br>      for (int j=0; j&lt;n; j++)<br>        if (x1[j] &lt;= l &amp;&amp; x2[j] &gt;= r-1) {<br>          yy[cnt] = y1[j];<br>          t[cnt] = 1;<br>          cnt++;<br>          yy[cnt] = y2[j]+1;<br>          t[cnt] = 2;<br>          cnt++;<br>        }<br>      <br>      //sort<br>      for (int j=0; j&lt;cnt; j++)<br>        for (int k=j+1; k&lt;cnt; k++)<br>          if (yy[j] &gt; yy[k]) {<br>            long rr = yy[j];<br>            yy[j] = yy[k];<br>            yy[k] = rr;<br>            int tp = t[j];<br>            t[j] = t[k];<br>            t[k] = tp;<br>          }<br>      //sort<br>      <br>      int d = 0;<br>      long cur = 0;<br>      for (int j=0; j&lt;cnt-1; j++) {<br>        if (t[j] == 1)<br>          d++;<br>        else<br>          d--;<br>        if (d &gt; 0)<br>          cur += (yy[j+1] - yy[j]);<br>      }<br>      sum += cur * (r - l);<br>    }<br>    <br>    return ww*hh-sum;<br>  }<br><br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>