<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br><br>using namespace std;<br><br>#define fo(a,b,c) for( a = ( b ); a &lt; ( c ); ++ a )<br>#define fr(a,b) fo(a,0,(b))<br>#define fi(a) fr(i,(a))<br>#define fj(a) fr(j,(a))<br>#define fk(a) fr(k,(a))<br>#define fin fi(n)<br>#define fij(a) fo( j, i + 1, ( a ) )<br><br>const int maxn = 16;<br>const int maxp = 70000;<br><br>bool d[maxp][maxn];<br>int cnt[maxp];<br><br>class SpiralConstruction <br>{<br>public:<br>  int vect( int x1, int y1, int x2, int y2, int x3, int y3 )<br>  {<br>    return( x2 - x1 ) * ( y3 - y2 ) - ( x3 - x2 ) * ( y2 - y1 );<br>  }<br>  int scalar( int x1, int y1, int x2, int y2, int x3, int y3 )<br>  {<br>    return( x2 - x1 ) * ( x3 - x2 ) + ( y2 - y1 ) * ( y3 - y2 );<br>  }<br>  int longestSpiral(vector &lt;string&gt; points) <br>  {<br>    int i, j, k, z;<br>    int ans = 0;<br>    int n = points.size( );<br>    vector&lt; pair&lt; int, int &gt; &gt; p;<br>    p.push_back( make_pair( 0, 0 ) );<br>    fi( n )<br>    {<br>      int a, b;<br>      sscanf( points[i].c_str( ), "%d %d", &amp;a, &amp;b );<br>      p.push_back( make_pair( a, b ) );<br>    }<br>    ++ n;<br>    memset( d, 0, sizeof( d ) );<br>    fi( maxp ) if( i ) cnt[i] = cnt[i &amp; ( i - 1 )] + 1;<br>    d[1][0] = 1;<br><br>    fi( 1 &lt;&lt; n ) fj( n ) if( d[i][j] )<br>    {<br>      if( cnt[i] &gt; ans ) ans = cnt[i];<br>      fk( n ) if( ( i &amp; ( 1 &lt;&lt; k ) ) == 0 )<br>      {<br>        bool ok = true;<br>        fr( z, n ) if( ( i &amp; ( 1 &lt;&lt; z ) ) &amp;&amp; z != j )<br>        {<br>          int v = vect( p[k].first, p[k].second, p[j].first, p[j].second, p[z].first, p[z].second );<br>          int s = scalar( p[k].first, p[k].second, p[j].first, p[j].second, p[z].first, p[z].second );<br>          if( v &gt; 0 || v == 0 &amp;&amp; s &lt; 0 )<br>          {<br>            ok = false;<br>            break;<br>          }<br>        }<br>        if( ok ) d[i | ( 1 &lt;&lt; k )][k] = true;<br>      }<br>    }<br><br>    return ans - 1;<br>  }<br>  <br> <br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>