<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br><br>using namespace std;<br><br>class Divisibility {<br>  public:<br>  <br>  long n;<br>  long data[20];<br>  long count,N;<br>  <br>  long long gcd (long long a, long long b) {<br>    return b==0?a:gcd(b,a%b);<br>    }<br>  <br>  long long lcm (long long a, long long b) {<br>    return a * b / gcd(a,b);<br>    }<br>  <br>  void dfs (long now, long long mul, long q) {<br>    if (mul &gt; N)<br>      return;<br>    if (now == n) {<br>      count -= (N  / mul) * q;<br>      return;<br>      }<br>    dfs(now + 1, mul, q);<br>    dfs(now + 1, lcm(mul, data[now]), -q);<br>    }<br>  <br>  long solve (long num) {<br>    count = num;<br>    N = num;<br>    dfs(0, 1, 1);<br>    return count;<br>    }<br>  <br>  int numDivisible(int L, int R, vector &lt;int&gt; a) {<br>    long i;<br>    <br>    n = a.size();<br>    for (i=0;i&lt;n;i++)<br>      data[i] = a[i];<br>    return solve(R) - solve(L-1);<br>    }<br>  };<br></td>