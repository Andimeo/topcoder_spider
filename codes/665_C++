<td class="problemText" colspan="8" valign="middle" align="left">
            //#include &lt;map&gt;<br>//#include &lt;set&gt;<br>//#include &lt;list&gt;<br>//#include &lt;iomanip&gt;<br>//#include &lt;cstring&gt;<br>//#include &lt;cstdio&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;sstream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;numeric&gt;<br>#include &lt;functional&gt;<br>using namespace std;<br><br>#define ALL(C) (C).begin(), (C).end()<br>#define forIter(I, C) for( typeof((C).begin()) I=(C).begin(); I!=(C).end(); ++I )<br>#define forN(I, C) for ( int I = 0; I &lt; (C); ++(I) )<br>#define forEach(I, C) forN(I,int((C).size()))<br><br>#define METHOD Bullets::match<br>class Bullets<br>{<br>public:<br>    int match(vector &lt;string&gt; g, string b) <br>    {<br>        forEach ( i, g ) {<br>            forEach ( j, b ) {<br>                bool match = true;<br>                forEach ( k, b ) {<br>                    if ( g[i][k] != b[(k+j)%b.size()] ) {<br>                        match = false;<br>                        break;<br>                    }<br>                }<br>                if ( match )<br>                    return i;<br>            }<br>        }<br>        return -1;<br>    }<br>};<br><br><br>// Powered by FileEdit<br></td>