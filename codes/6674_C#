<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class RoadsAndFools {<br>  public string determineOrientation(int length, int[] frontSides) {<br>    int n = frontSides.Length;<br>    int[] a = new int[n];<br>    int prev = -1;<br>    for (int i = 0; i &lt; n; ++i)<br>    {<br>      a[i] = Math.Min(frontSides[i] &gt; prev ? frontSides[i] : int.MaxValue, length - frontSides[i] &gt; prev ? length - frontSides[i] : int.MaxValue);<br>      if (a[i] == int.MaxValue)<br>        return "NO SOLUTION";<br>      prev = a[i];<br>    }<br>    prev = length + 1;<br>    int[] b = new int[n];<br>    for (int i = n - 1; i &gt;= 0; --i)<br>    {<br>      b[i] = Math.Max(frontSides[i] &lt; prev ? frontSides[i] : int.MinValue, length - frontSides[i] &lt; prev ? length - frontSides[i] : int.MinValue);<br>      if (b[i] == int.MinValue)<br>        return "NO SOLUTION";<br>      prev = b[i];<br>    }<br>    for (int i = 0; i &lt; n; ++i)<br>      if (a[i] != b[i])<br>        return "MULTIPLE SOLUTIONS";<br><br>    string res = "";<br>    for (int i = 0; i &lt; n; ++i)<br>    {<br>      if (res.Length &gt; 0)<br>        res += " ";<br>      res += a[i];<br>    }<br>    return res;<br>  }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>