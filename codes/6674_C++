<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;queue&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;math.h&gt;<br><br>using namespace std;<br><br>#ifdef __GNUC__<br>typedef long long int64;<br>#else <br>typedef __int64 int64;<br>#endif<br><br>// *****************************************************************************<br>// *****************************************************************************<br>// *****************************************************************************<br><br>string getString( int x )<br>{<br>  string ret("");<br><br>  if ( x == 0 )<br>    return string("0");<br><br>  while ( x != 0 )<br>  {<br>    ret = (char)(x%10 + '0') + ret;<br>    x /= 10;<br>  }<br><br>  return ret;<br>}<br><br>class RoadsAndFools<br>{<br>public:<br>  string determineOrientation(int len, vector &lt;int&gt; v)<br>  {<br>    string ret("");<br>    int i;<br>    int n = v.size();<br><br>    if ( n == 1 )<br>    {<br>      if ( v[0] * 2 == len )<br>        ret += getString( v[0] );<br>      else<br>        ret += "MULTIPLE SOLUTIONS";<br>        <br>      return ret;<br>    }<br><br>    if ( v[n-1] &lt; len - v[n-1] )<br>      v[n-1] = len - v[n-1];<br><br>    for ( i=n-2; i&gt;=0; i-- )<br>    {<br>      if ( v[i] &lt; len - v[i] )<br>      {<br>        if ( len - v[i] &lt; v[i+1] )<br>          v[i] = len - v[i];<br>      }<br>      else<br>      {<br>        if ( v[i] &gt;= v[i+1] &amp;&amp; len - v[i] &lt; v[i+1] )<br>          v[i] = len - v[i];<br>      }<br><br>      if ( v[i] &gt;= v[i+1] )      <br>      {<br>        ret += "NO SOLUTION";<br>        return ret;<br>      }<br>    }<br><br>    if ( v[0] != len - v[0] &amp;&amp; len - v[0] &lt; v[1] || v[n-1] != len - v[n-1] &amp;&amp; len - v[n-1] &gt; v[n-2] )<br>    {<br>      ret += "MULTIPLE SOLUTIONS";<br>      return ret;<br>    }<br><br>    for ( i=1; i&lt;n-1; i++ )<br>    {<br>      if ( v[i] != len - v[i] &amp;&amp; len - v[i] &gt; v[i-1] &amp;&amp; len - v[i] &lt; v[i+1] )<br>      {<br>        ret += "MULTIPLE SOLUTIONS";<br>        return ret;<br>      }<br>    }<br><br>    ret += getString( v[0] );<br>    for ( i=1; i&lt;n; i++ )<br>    {<br>      ret += " ";<br>      ret += getString( v[i] );<br>    }<br><br>    return ret;<br>  }<br>};<br></td>