<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;stack&gt;<br>#include &lt;list&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iterator&gt;<br>#include &lt;numeric&gt;<br>using namespace std;<br> <br> <br>typedef vector &lt;int &gt; VI;<br>#define REP(i,n) for (int i=0; i&lt;n; ++i)<br>#define FOREACH(it,x) for(__typeof((x).begin()) it=(x.begin()); it!=(x).end(); ++it)<br>#define FOR(i,p,k) for (int i=p; i&lt;=k; ++i)<br>#define PB push_back<br>#define ALL(x) x.begin(),x.end()<br>#define SIZE(x) (int)x.size()<br> <br>const int N=17;<br>int suma[1&lt;&lt;N];<br>int t[1&lt;&lt;N]; //da sie<br>    class BiggestRectangleHard<br>        { <br>        public: <br>        int findArea(vector &lt;int&gt; v){ <br>          sort(ALL(v));<br>          int n=SIZE(v);<br>          int ile=1&lt;&lt;n;<br>          int res=0;<br>          REP(mask,ile){<br>            suma[mask]=0;<br>            REP(i,n) if ((1&lt;&lt;i)&amp;mask) suma[mask]+=v[i];<br>            int zbior=mask;<br>            t[mask]=0; <br>            do{<br>              zbior&amp;=mask;<br>              if (suma[zbior]*2==suma[mask]){<br>                t[mask]=1;<br>                break;<br>              }<br>            } while (--zbior&gt;=0);<br>          }<br>          REP(mask,ile) if (t[mask]){<br>            int vv=suma[mask]/2;<br>            int pelny=(ile-1)^mask;<br>            int zbior=pelny;<br>            do{<br>              zbior&amp;=pelny;<br>              if (t[zbior]){<br>                res=max(res,suma[zbior]/2*vv);<br>              }<br>            } while (--zbior&gt;=0);<br>          }<br>          return res==0?-1:res;<br>        } <br>        <br> <br>         }; <br> <br>    <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>