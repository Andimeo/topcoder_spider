<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class CheckersBoard <br>{<br>  const int INF = 123456789;<br><br>  public int numMoves(string[] board) <br>  {<br>        int res = 0;<br>        bool bmustgo = false, wmustgo = false;<br>        int black = 0, white = 0;<br>        bool[,] seen = new bool[8, 8];<br>        for (int i = 0; i &lt; 8; i++)<br>        {<br>            for (int j = 0; j &lt; 8; j++)<br>            {<br>                if (board[i][j] == 'B')<br>                {<br>                    for (int t = -1; t &lt;= 1; t+=2)<br>                    {<br>                        int u = i + 1;<br>                        int v = j + t;<br>                        if (u &lt; 0 || u &gt;= 8 || v &lt; 0 || v &gt;= 8) continue;<br>                        if (board[u][v] == 'W')<br>                        {<br>                            u = i + 2;<br>                            v = j + t * 2;<br>                            if (u &lt; 0 || u &gt;= 8 || v &lt; 0 || v &gt;= 8) continue;<br>                            if (board[u][v] == ' ')<br>                            {<br>                                bmustgo = true;<br>                                seen[i, j] = true;<br>                                black++;<br>                            }<br>                        }<br>                    }<br>                }<br>                else if (board[i][j] == 'W')<br>                {<br>                    for (int t = -1; t &lt;= 1; t += 2)<br>                    {<br>                        int u = i - 1;<br>                        int v = j + t;<br>                        if (u &lt; 0 || u &gt;= 8 || v &lt; 0 || v &gt;= 8) continue;<br>                        if (board[u][v] == 'B')<br>                        {<br>                            u = i - 2;<br>                            v = j + t * 2;<br>                            if (u &lt; 0 || u &gt;= 8 || v &lt; 0 || v &gt;= 8) continue;<br>                            if (board[u][v] == ' ')<br>                            {<br>                                wmustgo = true;<br>                                white++;<br>                                seen[i, j] = true;<br>                            }<br>                        }<br>                    }<br>                }<br>            }<br>        }<br>        if (!bmustgo)<br>        {<br>            black = 0;<br>            for (int i = 0; i &lt; 8; i++)<br>            {<br>                for (int j = 0; j &lt; 8; j++)<br>                {<br>                    if (board[i][j] == 'B' &amp;&amp; !seen[i,j])<br>                    {<br>                        for (int t = -1; t &lt;= 1; t += 2)<br>                        {<br>                            int u = i + 1;<br>                            int v = j + t;<br>                            if (u &lt; 0 || u &gt;= 8 || v &lt; 0 || v &gt;= 8) continue;<br>                            if (board[u][v] == ' ') black++;<br>                        }<br>                    }<br>                }<br>            }<br>        }<br><br>        if (!wmustgo)<br>        {<br>            white = 0;<br>            for (int i = 0; i &lt; 8; i++)<br>            {<br>                for (int j = 0; j &lt; 8; j++)<br>                {<br>                    if (board[i][j] == 'W' &amp;&amp; !seen[i, j])<br>                    {<br>                        for (int t = -1; t &lt;= 1; t += 2)<br>                        {<br>                            int u = i - 1;<br>                            int v = j + t;<br>                            if (u &lt; 0 || u &gt;= 8 || v &lt; 0 || v &gt;= 8) continue;<br>                            if (board[u][v] == ' ') white++;<br>                        }<br>                    }<br>                }<br>            }<br>        }<br>        return res = black + white;<br>  }<br><br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>