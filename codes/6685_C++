<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;map&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;ext/hash_map&gt;<br>using __gnu_cxx::hash_map;<br>#include &lt;list&gt;<br>#include &lt;stack&gt;<br><br>using namespace std;<br><br><br>#define max(a,b) ((a)&gt;(b)?(a):(b))<br>#define db double<br>#define ch char<br>#define re return<br>#define ed end()<br>#define red rend()<br>#define mm(a,b) memset(a,b,sizeof(a))<br>#define ss substr<br><br><br><br>db P1,P2;<br>db dp[1005][1005];<br>ch ok[1005][1005];<br><br>class SimplifiedDarts<br>{<br>  public:<br><br>  db rec(int p,int t)<br>  {<br>    if(t&lt;=0) re 1.; if(!p) re 0.;    <br>    if(ok[p][t]) re dp[p][t]; ok[p][t]=1;    <br>    re dp[p][t]=max(P1*rec(p-1,t-2)+(1.-P1)*rec(p-1,t),P2*rec(p-1,t-3)+(1.-P2)*rec(p-1,t));<br>  }<br><br>  double tryToWin(int W, int N, int p1, int p2)<br>  {<br>    P1=.01*p1; P2=.01*p2; mm(ok,0);    <br>    return 100.*rec(N,W);<br>  }<br><br>};<br></td>