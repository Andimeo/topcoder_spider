<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;fstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br><br>#define Min(a,b) ((a)&gt;(b)?(b):(a))<br>#define Max(a,b) ((a)&gt;(b)?(a):(b))<br>#define prr make_pair<br><br>//typedef __int64 ll;<br><br>class Repeat<br>{ <br>  public:<br>  int n,m;<br>  int rec[60][60], opt[60];<br>  int minLength(string text) <br>  {<br>    memset(rec,0x7F,sizeof(rec));<br>    int i,j,k;<br>    n = text.size();<br>    for (i=0; i&lt;n; i++)<br>    {<br>      rec[i][i] = 1;<br>      for (j=i+1; j&lt;n; j++)<br>      {<br>        rec[i][j] = rec[i][j-1] + 1;<br>        if ( ! ((j-i+1)&amp;1) )<br>        {<br>          bool okay = true;<br>          for (k=0; k&lt;((j-i+1)&gt;&gt;1); k++)<br>            if (text[i+k] != text[i+((j-i+1)&gt;&gt;1)+k])<br>            {<br>              okay = false;<br>              break;<br>            }<br>          if (okay &amp;&amp; rec[i][i+((j-i-1)&gt;&gt;1)] + 1 &lt; rec[i][j])<br>            rec[i][j] = rec[i][i+((j-i-1)&gt;&gt;1)] + 1;<br>        }<br>      }<br>    }<br>    memset(opt,0,sizeof(opt));<br>    opt[0] = rec[0][0];<br>    for (i=1; i&lt;n; i++)<br>    {<br>      opt[i] = rec[0][i];<br>      for (j=1; j&lt;n; j++)<br>        if (opt[j-1] + rec[j][i] + 1 &lt; opt[i])<br>          opt[i] = opt[j-1] + rec[j][i] + 1;<br>    }<br>    return opt[n-1];<br>  }<br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>