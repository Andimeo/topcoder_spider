<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;vector&gt;<br>#include&lt;list&gt;<br>#include&lt;map&gt;<br>#include&lt;set&gt;<br>#include&lt;stack&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;numeric&gt;<br>#include&lt;sstream&gt;<br>#include&lt;iostream&gt;<br>#include&lt;cstdio&gt;<br>#include&lt;cmath&gt;<br>#include&lt;cstdlib&gt;<br> <br>using namespace std;<br> <br>typedef long long int64;<br><br>class  Dragon {<br>public:<br>  double f[201][201],g[201][201];<br>  double winFight(int h, int k, int probDragon, int probKnight)<br>  {<br>    memset(f,0,sizeof(f));<br>    f[0][0]=1.0;<br>    for (int i=1;i&lt;=k;i++)<br>    {<br>      f[i][0]=1.0;<br>      for (int j=1;j&lt;=h;j++)<br>        f[i][j]=(probKnight+0.0)/100.0*f[i-1][j-1]+(100.0-probKnight)/100.0*f[i-1][j];<br>    }<br>    memset(g,0,sizeof(g));<br>    for (int i=0;i&lt;=k;i++)<br>      g[i][0]=1.0;<br>    for (int j=1;j&lt;=h;j++)<br>    {<br>      g[0][j]=0;<br>      for (int i=1;i&lt;=k;i++)<br>      {<br>        double p1=f[i][j];<br>        double p2=(probDragon+0.0)/100.0*g[i-1][j]+(100.0-probDragon)/100.0*g[i][j-1];<br>        g[i][j]=(p1&lt;p2)?p1:p2;<br>      }<br>    }<br>    return g[k][h];<br>  }<br>};<br></td>