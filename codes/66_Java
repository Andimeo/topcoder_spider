<td class="problemText" colspan="8" valign="middle" align="left">
            import tcclasses.Matrix2D;<br>public class Nails {<br>  Matrix2D AA;<br>   int rows, cols, best;<br>  public int bestPath(Matrix2D input) {<br>     AA = input;<br>     rows = input.numRows();<br>     cols = input.numCols();<br>     best = -1000000;<br>     int i;<br>     for (i = 0; i &lt; AA.numRows(); i++) {<br>  go (i, 0, A(i, 0), A(i, 0), 0);<br>     }<br>     return best;<br>  }<br>  public void go(int r, int c, int Loow, int high, int sum) {<br>     if (c &gt;= cols) {<br>        if (sum - 4 * (high - Loow) &gt; best)<br>          best = sum - 4 * (high  - Loow);<br>        return;<br>     }<br>//     if (A(r,c) == 0) return;<br>     go(r  , c+1, A(r,c) &lt; Loow? A(r,c): Loow, A(r,c) &gt; high? A(r,c):high, sum + A(r,c));<br>     if (r &gt; 0) {  <br>       go(r-1, c+1, A(r,c) &lt; Loow? A(r,c): Loow, A(r,c) &gt; high? A(r,c):high, sum + A(r,c));<br>     }<br>     if (r &lt; rows-1) {<br>       go(r+1, c+1, A(r,c) &lt; Loow? A(r,c): Loow, A(r,c) &gt; high? A(r,c):high, sum + A(r,c));<br>     }<br>  }<br>  public int A(int i, int j) {<br>     try {    return ((Integer)AA.get(i, j)).intValue(); }<br>     catch (Exception e) {<br>     return (Integer.parseInt((String)AA.get(i, j)));<br>     }<br>  }<br>}<br></td>