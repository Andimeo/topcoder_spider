<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>const int Max = 1&lt;&lt;23;<br> <br>class IncompleteBST {<br>public:<br>  char Ch[Max];<br>  string missingValues(vector &lt;string&gt;);<br>  bool valid(int i)<br>  {<br>    int left = i*2;<br>    if(Ch[left])<br>    {<br>      while(Ch[left*2+1]) left = left*2 + 1;<br>      if(Ch[left] &gt; Ch[i]||!valid(i*2)) return false;<br>    }<br>    int right = i*2 + 1;<br>    if(Ch[right])<br>    {<br>      while(Ch[right*2]) right *= 2;<br>      if(Ch[right] &lt;= Ch[i]||!valid(i*2+1)) return false;<br>    }<br>    return true;<br>  }<br>};<br> <br>string IncompleteBST::missingValues(vector &lt;string&gt; tree) {<br>  int n = tree.size(), i;<br>  memset(Ch,0,sizeof(Ch));<br>  int pos;<br>  for(i = 0;i &lt; n;i ++)<br>  {<br>    int tmp = 0, len = tree[i].length();<br>    for(int j = 2;j &lt; len;j ++) tmp = tmp * 10 + tree[i][j] - '0';<br>    Ch[tmp] = tree[i][0];<br>    if(tree[i][0] == '?') pos = tmp;<br>  }<br>  string ans = "";<br>  for(char c = 'A';c &lt;= 'Z';c ++)<br>  {<br>    Ch[pos] = c;<br>    char max, min;<br>    if(valid(1))<br>      ans += c;<br>  }<br>  return ans;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>