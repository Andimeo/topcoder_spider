<td class="problemText" colspan="8" valign="middle" align="left">
            // my submission accuracy is quite low recently, don't be afraid to challenge me<br><br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>typedef long long ll;<br><br>#define LS &lt;<br>#define Size(x) (int(x.size()))<br><br>// All macros with parameters "k,a,b" run the "k" variable in range [a,b)<br>#define FOR(k,a,b) for(typeof(a) k=(a); k LS (b); ++k)<br><br>#line 3 "ConstructBST.cc"<br><br>ll bin[30][30];<br><br>int childtype(int ch, int pa) {<br>  while(ch &gt; pa) {<br>    if(ch == 2*pa) return 1;<br>    if(ch == 2*pa+1) return 2;<br>    ch /= 2;<br>    }<br>  return 0;<br>  }<br><br>class ConstructBST {<br>  public:<br>  long long numInputs(vector &lt;int&gt; tree) {<br>    FOR(k,0,30) bin[0][k] = 0; bin[0][0] = 1;<br>    FOR(n,1,30) { <br>      bin[n][0] = 1;<br>      FOR(k,1,30) bin[n][k] = bin[n-1][k-1] + bin[n-1][k];<br>      }<br>  <br>    // !FDI<br>    ll ret = 1;<br>    int N = Size(tree);<br>    FOR(t,0,N) {<br>      int va[3];<br>      va[1] = 0;<br>      va[2] = 0;<br>      FOR(u,0,N) va[childtype(tree[u], tree[t])]++;<br>      ret *= bin[va[1]+va[2]][va[1]];<br>      }<br>    return ret;<br>    }<br>  };<br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>