<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cassert&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;complex&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;iostream&gt;<br>#include &lt;limits&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;vector&gt;<br> <br>using namespace std;<br> <br>#define REP(i, n) for (int i = 0; i &lt; int(n); ++i)<br>typedef complex&lt;double&gt; V2;<br>typedef vector&lt;V2&gt; VV2;<br> <br>struct BusSeating {<br>    // MAIN<br>    double getArrangement(string leftRow, string rightRow) {<br>        VV2 p;<br>        REP (i, 10) if (leftRow[i]  == '-') p.push_back(V2(i, 0));<br>        REP (i, 10) if (rightRow[i] == '-') p.push_back(V2(i, 2));<br>        const int N = p.size();<br>        double result = 1e9;<br>        REP (i, N) REP (j, i) REP (k, j)<br>            result = min(result, abs(p[i] - p[j]) + abs(p[j] - p[k]) + abs(p[k] - p[i]));<br>        return result;<br>    }<br> <br>};<br> <br> <br>// Powered by FileEdit<br>// Powered by Wihhy<br>// Powered by CodeProcessor<br></td>