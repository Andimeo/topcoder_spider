<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br><br>using namespace std;<br><br><br>int n;<br>int mask[10][26];<br>char word[10];<br>vector&lt;string&gt; ret;<br><br>char memo[10][1&lt;&lt;18];<br><br>struct WordGuessingGame {<br><br>   char rec( int i, int state ) {<br>      if( i == n ) {<br>         if( state ) return 0;<br>         word[i] = 0;<br>         ret.push_back( string(word) );<br>         return 1;<br>      }<br><br>      char &amp;ret = memo[i][state];<br>      if( ret == 0 ) return 0;<br>      ret = 0;<br><br>      for( int c = 0; c &lt; 26; ++c ) {<br>         word[i] = c+'A';<br>         ret |= rec( i+1, state ^ mask[i][c] );<br>      }<br>      <br>      return ret;<br>   }<br><br>   vector&lt;string&gt; possibleWords( vector&lt;string&gt; even, vector&lt;string&gt; odd ) {<br>      if( !even.empty() ) n = even[0].size();<br>      else n = odd[0].size();<br><br>      int E = even.size();<br>      int O = odd.size();<br><br>      for( int i = 0; i &lt; n; ++i ) {<br>         for( int c = 0; c &lt; 26; ++c ) {<br>            mask[i][c] = 0;<br>            for( int k = 0; k &lt; E; ++k ) <br>               if( even[k][i] == c+'A' ) <br>                  mask[i][c] |= 1&lt;&lt;k;<br>            for( int k = 0; k &lt; O; ++k ) <br>               if( odd[k][i] == c+'A' ) <br>                  mask[i][c] |= 1&lt;&lt;(E+k);<br>         }<br>      }<br><br>      ret.clear();<br>      memset( memo, -1, sizeof memo );<br><br>      rec( 0, ((1&lt;&lt;O)-1)&lt;&lt;E );<br>      <br>      return ret;<br>   }<br><br><br><br><br><br><br>   <br> <br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by moj 3.0 beta 7 [modified TZTester]<br>// Powered by CodeProcessor<br></td>