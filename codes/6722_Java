<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.lang.*;<br><br>public class TournamentSchedule {<br>int[][] opp;<br>boolean[][] aga;<br>int ans;<br>int n;<br>void go(int m, int x)<br>{<br>  if (m==n-1) { ans++; return; }<br>  if (x==n) go(m+1, 0);<br>  if (opp[m][x] != -1) { go(m, x+1); return; }<br>  int i;<br>  for (i=x+1; i&lt;n; i++) if (opp[m][i]==-1 &amp;&amp; !aga[x][i])<br>  {<br>    opp[m][x] = i; opp[m][i] = x;<br>    aga[x][i] = aga[i][x] = true;<br>    go(m, x+1);<br>    aga[x][i] = aga[i][x] = false;<br>    opp[m][x] = opp[m][i] = -1;<br>  }<br>}<br>public int ways(int numTeams, String[] preferences) {<br>  n = numTeams;<br>  opp = new int[10][10];<br>  aga = new boolean[10][10];<br>  int i, j;<br>  for (i=0; i&lt;10; i++) Arrays.fill(opp[i], -1);<br>  for (i=0; i&lt;10; i++) Arrays.fill(aga[i], false);  <br>  for (i=0; i&lt;preferences.length; i++)<br>  {<br>    int[] w = DL.tokenInt(preferences[i], ":-");<br>    int m = w[0], x = w[1], y = w[2];<br>    if (opp[m][x] != -1 &amp;&amp; opp[m][x] != y) return 0;<br>    if (opp[m][y] != -1 &amp;&amp; opp[m][y] != x) return 0;<br>    opp[m][x] = y;<br>    opp[m][y] = x;<br>    aga[x][y] = aga[y][x] = true;<br><br>  }<br>  ans = 0;<br>  go(0, 0);<br>  return ans;<br>}<br>public int s2i(String s) {return Integer.parseInt(s);}<br>DataLib DL = new DataLib();<br>class DataLib {  <br>  public String[] tokenString(String s, String delim) {<br>  StringTokenizer st = new StringTokenizer(s, delim);<br>  String[] r = new String[st.countTokens()];<br>  for (int i=0; i&lt;r.length; i++) r[i] = st.nextToken();<br>  return r;<br>  }<br>  public int[] tokenInt(String s, String delim) {<br>  String[] sa = tokenString(s, delim);<br>  int[] r = new int[sa.length];<br>  for (int i=0; i&lt;r.length; i++) r[i] = s2i(sa[i]);<br>  return r;<br>  }<br>}<br>};<br></td>