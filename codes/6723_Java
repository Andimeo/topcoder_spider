<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br><br>public class QueenCovering {<br>    public static int n = 8;<br>    public static String[] bb = new String[8];<br>    public static int[] a = new int[100];<br>    public static int[] b = new int[100];<br>    public static int[] c = new int[100];<br>    public static int[] d = new int[100];<br>    public static int min = 1000000000;<br>    public static String ans = "";<br>    public static boolean ok() {<br>        for (int i = 0; i &lt; n; ++i) for (int j = 0; j &lt; n; ++j) if (bb[i].charAt(j) == '.') {<br>            if (a[i] == 0 &amp;&amp; b[j] == 0 &amp;&amp; c[i + j] == 0 &amp;&amp; d[j - i + n - 1] == 0) {<br>                return false;<br>            }<br>        }<br>        return true;<br>    }<br>    public static void solve(int x, int y, int cnt, String tmp) {<br>        if (y &gt;= n) {<br>            y = 0;<br>            x++;<br>        }<br>        if (x &gt;= n) {<br>            if (cnt &lt; min &amp;&amp; ok()) {<br>                min = cnt;<br>                ans = tmp;<br>            }<br>            return;<br>        }<br><br>        if (bb[x].charAt(y) == '.' &amp;&amp; a[x] == 0 &amp;&amp; b[y] == 0 &amp;&amp; c[x + y] == 0 &amp;&amp; d[y - x + n - 1] == 0) {<br>            a[x]++;<br>            b[y]++;<br>            c[x + y]++;<br>            d[y - x + n - 1]++;<br><br>            String dd = "";<br>            dd += (char) (x + '1');<br>            dd += (char) (y + 'A');<br>            solve(x, y + 1, cnt + 1, tmp + dd);<br><br>            a[x]--;<br>            b[y]--;<br>            c[x + y]--;<br>            d[y - x + n - 1]--;<br>        }<br><br>        solve(x, y + 1, cnt, tmp);<br>    }<br>    public String getPlacement(String[] board) {<br>        for (int i = 0; i &lt; n; ++i) {<br>            bb[i] = board[i];<br>        }<br>        for (int i = 0; i &lt; n; ++i) {<br>            a[i] = 0;<br>            b[i] = 0;<br>        }<br>        for (int i = 0; i &lt; 2 * n - 1; ++i) {<br>            c[i] = 0;<br>            d[i] = 0;<br>        }<br><br>        solve(0, 0, 0, "");<br><br>        return ans;<br>    }<br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>