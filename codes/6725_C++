<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;vector&gt;<br>#include&lt;list&gt;<br>#include&lt;map&gt;<br>#include&lt;set&gt;<br>#include&lt;stack&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;numeric&gt;<br>#include&lt;sstream&gt;<br>#include&lt;iostream&gt;<br>#include&lt;cstdio&gt;<br>#include&lt;cmath&gt;<br>#include&lt;cstdlib&gt;<br> <br>using namespace std;<br> <br>typedef long long int64;<br>typedef vector&lt;int&gt; vi;<br>#define FOR(i,n) for (int i=0; i&lt;(n); i++)<br> <br>struct FactoryCounting {<br>  int64 newton[40][40],ans;<br>  int k,m,s[40];<br>  int cnt(int x) { int ans=0; while (x) { ans++; x&amp;=x-1; } return ans; }<br>  void choose(int next,int left,int allowed) {<br>    if (next&lt;k) {<br>      choose(next+1,left,allowed);<br>      if (left) choose(next+1,left-1,allowed&amp;s[next]);<br>    }  else if (!left) ans+=newton[cnt(allowed)][m];<br>  }<br>  long long count(int n, int _m, vector &lt;string&gt; county) {<br>    FOR(i,40) {<br>      newton[i][0]=1;<br>      for (int j=1; j&lt;=i; j++) newton[i][j]=newton[i-1][j-1]+newton[i-1][j];<br>    }<br>    k=county.size();<br>    m=_m;<br>    FOR(i,k) {<br>      s[i]=0;<br>      FOR(j,k) if (county[i][j]=='Y') s[i]+=1&lt;&lt;j;<br>    }<br>    ans=0;<br>    choose(0,n,(1&lt;&lt;k)-1);<br>    return ans;<br>  }<br>};<br> <br>//Powered by [KawigiEdit] 2.0!<br></td>