<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class InscribedTriangles {<br>  int[] l;<br>  int[] r;<br>  <br>  public double findLargest(int[] angleFrom, int[] angleTo) {<br>    l = angleFrom;<br>    r = angleTo;<br>    for (int i = 0; i &lt; angleFrom.Length; ++i)<br>      angleFrom[i] *= 2;<br>    for (int i = 0; i &lt; angleTo.Length; ++i)<br>      angleTo[i] *= 2;<br>    int[] all = new int[angleFrom.Length + angleTo.Length];<br>    angleFrom.CopyTo(all, 0);<br>    angleTo.CopyTo(all, angleFrom.Length);<br>    double res = 0;<br>    for (int i = 0; i &lt; all.Length; ++i)<br>    {<br>      for (int j = i + 1; j &lt; all.Length; ++j)<br>      {<br>        for (int k = j + 1; k &lt; all.Length; ++k)<br>        {<br>          res = Math.Max(res, area(all[i], all[j], all[k]));<br>        }<br>        int am = (all[i] + all[j]) / 2;<br>        if (ok(am))<br>          res = Math.Max(res, area(all[i], all[j], am));<br>        am += 360000;<br>        if (ok(am))<br>          res = Math.Max(res, area(all[i], all[j], am));<br>      }<br>      int am1 = all[i] + 240000;<br>      int am2 = all[i] + 480000;<br>      if (ok(am1) &amp;&amp; ok(am2))<br>        res = Math.Max(res, area(all[i], am1, am2));<br>    }<br>    return res;<br>  }<br><br>  bool ok(int a)<br>  {<br>    a = (a % 720000 + 720000) % 720000;<br>    for (int i = 0; i &lt; l.Length; ++i)<br>      if (l[i] &lt;= a &amp;&amp; r[i] &gt;= a || (a == 0 &amp;&amp; r[i] == 720000))<br>        return true;<br>    return false;<br>  }<br><br>  double area(int a1, int a2, int a3)<br>  {<br>    double x1 = Math.Cos(a1 / 2000.0 / 180.0 * Math.PI);<br>    double y1 = Math.Sin(a1 / 2000.0 / 180.0 * Math.PI);<br>    double x2 = Math.Cos(a2 / 2000.0 / 180.0 * Math.PI);<br>    double y2 = Math.Sin(a2 / 2000.0 / 180.0 * Math.PI);<br>    double x3 = Math.Cos(a3 / 2000.0 / 180.0 * Math.PI);<br>    double y3 = Math.Sin(a3 / 2000.0 / 180.0 * Math.PI);<br>    return 12.5 * Math.Abs(x1 * y2 - y1 * x2 + x2 * y3 - y2 * x3 + x3 * y1 - y3 * x1);<br>  }<br><br>  <br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>