<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;bitset&gt;<br>#include &lt;cassert&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;complex&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;ctime&gt;<br>#include &lt;deque&gt;<br>#include &lt;functional&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iterator&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;stack&gt;<br>#include &lt;string&gt;<br>#include &lt;valarray&gt;<br>#include &lt;vector&gt;<br>#include &lt;utility&gt;<br><br>using namespace std;<br><br>#define all(v) (v).begin(), (v).end()<br><br>// Types<br>typedef long double ld;<br>typedef long long ll;<br>typedef pair &lt;int, int&gt; pii;<br>typedef vector &lt;int&gt; vi;<br>typedef vector &lt;pii&gt; vp;<br>typedef vector &lt;ld&gt; vd;<br>typedef vector &lt;string&gt; vs;<br>typedef vector &lt;bool&gt; vb;<br>typedef queue &lt;pii&gt; qp;<br>typedef map &lt;string, int&gt; msi;<br><br>// Constants<br>const int INF = 1000000000;<br>const ld EPS = 1e-10L;<br>const ld PI = 3.14159265358979L;<br><br>vi a, b;<br><br>double S(double ang1, double ang2, double ang3)<br>{<br>  double x1 = 5 * cos(ang1 / 180000 * PI);<br>  double x2 = 5 * cos(ang2 / 180000 * PI);<br>  double x3 = 5 * cos(ang3 / 180000 * PI);<br>  double y1 = 5 * sin(ang1 / 180000 * PI);<br>  double y2 = 5 * sin(ang2 / 180000 * PI);<br>  double y3 = 5 * sin(ang3 / 180000 * PI);<br>  return 0.5 * fabs((x1 - x2) * (y1 + y2) + (x2 - x3) * (y2 + y3) + (x3 - x1) * (y3 + y1));<br>}<br><br>bool valid(double x)<br>{<br>  for (int i = 0; i &lt; a.size(); ++i)<br>  {<br>    if (x &gt; a[i] - EPS &amp;&amp; x &lt; b[i] + EPS)<br>      return true;<br>  }<br>  if (fabs(x) &lt; EPS)<br>    return valid(360000);<br>  return false;<br>}<br><br>class InscribedTriangles<br>{<br>// Global<br><br>// Functions<br>public:<br>  double findLargest(vector &lt;int&gt; _a, vector &lt;int&gt; _b)<br>  {<br>    a = _a;<br>    b = _b;<br>    double res = 0;<br>    int n = a.size();<br>    vi pts;<br>    for (int i = 0; i &lt; n; ++i)<br>      pts.push_back(a[i]);<br>    for (int i = 0; i &lt; n; ++i)<br>      pts.push_back(b[i]);<br>    sort(all(pts));<br>    pts.resize(unique(all(pts)) - pts.begin());<br>    for (int i = 0; i &lt; pts.size(); ++i)<br>    {<br>      for (int j = i + 1; j &lt; pts.size(); ++j)<br>      {<br>        for (int k = j + 1; k &lt; pts.size(); ++k)<br>          res = max(res, S(pts[i], pts[j], pts[k]));<br>      }<br>    }<br>    for (int i = 0; i &lt; pts.size(); ++i)<br>    {<br>      for (int j = i + 1; j &lt; pts.size(); ++j)<br>      {<br>        double k = (pts[i] + pts[j]) / 2;<br>        if (valid(k))<br>          res = max(res, S(pts[i], pts[j], k));<br>        k = (pts[i] + pts[j] + 360000) / 2;<br>        if (k &gt; 360000 - EPS)<br>          k -= 360000;<br>        if (valid(k))<br>          res = max(res, S(pts[i], pts[j], k));<br>        k = (pts[i] + pts[j] + 360000) / 2;<br>        if (k &gt; 360000 - EPS)<br>          k -= 360000;<br>      }<br>    }<br>    for (int i = 0; i &lt; 120000; ++i)<br>    {<br>      int j = i + 120000;<br>      int k = j + 120000;<br>      if (valid(i) &amp;&amp; valid(j) &amp;&amp; valid(k))<br>        res = max(res, S(i, j, k));<br>    }<br>    return res;<br>  }<br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>