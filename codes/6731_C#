<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br> public class PoolFiller<br>   {<br>     public int floodFill(int[,] a)<br>       {<br>         int res = 0;<br>       bool stillRemains;<br>         while (true)<br>           {<br>             stillRemains = false;<br>         for (int row = 1; row &lt; a.GetLength(0) - 1; ++row)<br>           for (int col = 1; col &lt; a.GetLength(1) - 1; ++col)<br>             {<br>             if ((a[row, col] == 0) &amp;&amp;<br>             ((a[row - 1, col] == 2) ||<br>             (a[row + 1, col] == 2) ||<br>             (a[row, col - 1] == 2) ||<br>             (a[row, col + 1] == 2)))<br>               {<br>               a[row, col] = 2;<br>               stillRemains = true;<br>               }<br>               }<br>           if (!stillRemains)<br>             break;<br>         }<br>         for (int row = 1; row &lt; a.GetLength(0) - 1; ++row)<br>           for (int col = 1; col &lt; a.GetLength(1) - 1; ++col)<br>             {<br>             if (a[row, col] == 0)<br>               ++res;<br>             }<br>         return res;<br>       }<br>   <br>     public int findMax(string[] layout)<br>       {<br>         int res = 0;<br>         int temp;<br>           for (int row = 0; row &lt; layout.Length; ++row)<br>             for (int col = 0; col &lt; layout[0].Length; ++col)<br>               {<br>                 temp = Convert.ToInt32(layout[row][col].ToString());<br>                   if (temp &gt; res)<br>                     res = temp;<br>               }<br>         return res;<br>       }<br>   <br>     public int getCapacity(string[] layout)<br>       {<br>         int max = this.findMax(layout);<br>         int[,] a = new int[layout.Length + 2, layout[0].Length + 2];<br>           for (int ctr = 0; ctr &lt; layout.Length + 2; ++ctr)<br>             {<br>               a[ctr, 0] = 2;<br>               a[ctr, layout[0].Length + 1] = 2;<br>             }<br>           for (int ctr = 0; ctr &lt; layout[0].Length + 2; ++ctr)<br>             {<br>               a[0, ctr] = 2;<br>               a[layout.Length + 1, ctr] = 2;<br>             }<br>         int temp;<br>         int res = 0;<br>           for (int ctr = 2; ctr &lt;= max; ++ctr)<br>             {<br>               for (int row = 0; row &lt; layout.Length; ++row)<br>                 for (int col = 0; col &lt; layout[0].Length; ++col)<br>                   {<br>                     temp = Convert.ToInt32(layout[row][col].ToString());<br>                       if (temp &gt;= ctr)<br>                         a[row + 1, col + 1] = 1;<br>                       else<br>                         a[row + 1, col + 1] = 0;<br>                   }<br>               res += this.floodFill(a);<br>             }<br>         return res;<br>       }<br>  }<br></td>