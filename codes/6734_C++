<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;set&gt;<br><br>#define foreach(i,s,w) for(int i=s;i&lt;w.size();++i)<br>#define forset(i,m,t1) for(set&lt;t1&gt;::iterator i=m.begin();i!=m.end();++i)<br><br>using namespace std;<br><br>class Collector {<br>  public:<br>  <br>  int minimalSum(vector &lt;int&gt; coins) {<br>    set &lt;int&gt; all;<br>    all.insert(0);<br>    foreach(i, 0, coins) {<br>      set &lt;int&gt; N;<br>      forset(j, all, int) {<br>        int t = *j + coins[i];<br>        if(all.find(t) != all.end())<br>          return -1;<br>        if(N.find(t) != N.end())<br>          return -1;<br>        N.insert(t);<br>      };<br>      all.insert(N.begin(), N.end());<br>    };<br>    vector &lt;int&gt; c(++all.begin(), all.end());<br>    foreach(i, 0, c)<br>      foreach(j, i + 1, c) {<br>        if(c[j] % c[i] == 0)<br>          return -1;<br>      };<br>    int result = 0;<br>    foreach(i, 0, coins)<br>      result += coins[i];<br>    return result;<br>  };<br>};<br></td>