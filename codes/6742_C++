<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br> <br>using namespace std;<br> <br>typedef long long llong;<br>typedef long double dbl;<br>typedef vector &lt;int&gt; VI;<br>typedef vector &lt;string&gt; VS;<br>typedef pair &lt;int, int&gt; PII;<br> <br>#define F first<br>#define S second<br> <br>class KnapsackProblem<br>{<br>public:<br>  int numberOfWays( vector &lt;int&gt; x, int C )<br>  {<br>    vector &lt;llong&gt; a, b;<br>    int n1 = x.size() / 2, n2 = x.size() - x.size() / 2;<br>    for (int i = 0; i &lt; (1 &lt;&lt; n1); i++)<br>    {<br>      a.push_back(0);<br>      for (int j = 0; j &lt; n1; j++)<br>        if ((i &gt;&gt; j) &amp; 1)<br>          a[a.size() - 1] += x[j];<br>    }<br>    for (int i = 0; i &lt; (1 &lt;&lt; n2); i++)<br>    {<br>      b.push_back(0);<br>      for (int j = 0; j &lt; n2; j++)<br>        if ((i &gt;&gt; j) &amp; 1)<br>          b[b.size() - 1] += x[n1 + j];<br>    }<br>    sort(a.begin(), a.end());<br>    sort(b.begin(), b.end());<br>    fprintf(stderr, "a.size()=%d b.size()=%d", a.size(), b.size());<br>    int ans = 0;<br>    for (int i = 0; i &lt; a.size(); i++)<br>    {<br>      int mi = 0, ma = b.size() - 1, av;<br>      while (mi &lt; ma)<br>      {<br>        av = (mi + ma + 1) / 2;<br>        if (b[av] + a[i] &lt;= C)<br>          mi = av;<br>        else<br>          ma = av - 1;<br>      }<br>      if (a[i] &lt;= C)<br>        ans += mi + 1;<br>    }<br>    return ans;<br>  }<br>};<br> <br> <br>// Powered by PopsEdit<br></td>