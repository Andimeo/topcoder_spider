<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class CoolNumbers {<br>  <br>  int ok(int a, int b, int c) {<br>    if (a+b+c==0 || a+b+c==3)<br>      return 0;<br>    else<br>      return 1;<br>  }<br>  <br>  int countForLen(int n) {    <br>    int[][][] a = new int[n+1][2][2];<br>    for (int b1=1; b1&lt;2; b1++)<br>      for (int b2=0; b2&lt;2; b2++)<br>        a[2][b1][b2] = 1;<br>    for (int l=3; l&lt;=n; l++)<br>      for (int b1=0; b1&lt;2; b1++)<br>        for (int b2=0; b2&lt;2; b2++)<br>          for (int b0=0; b0&lt;2; b0++)<br>            a[l][b1][b2] += a[l-1][b0][b1] * ok(b0, b1, b2);<br>    int res = 0;<br>    for (int b1=0; b1&lt;2; b1++)<br>      for (int b2=0; b2&lt;2; b2++)<br>        res += a[n][b1][b2];<br>    return res;<br>  }<br>  <br>  int count(int X) {<br>    //dividing X<br>    Stack&lt;Integer&gt; s = new Stack&lt;Integer&gt;();<br>    while (X&gt;0) {<br>      s.push(X % 2);<br>      X /= 2;<br>    }<br>    int n = s.size(), x[] = new int[n];<br>    for (int i=0; i&lt;n; i++)<br>      x[i] = s.pop();<br>    //Dynamix<br>    //init<br>    int a[][][] = new int[n+1][2][2], b[][][] = new int[n+1][2][2];<br>    for (int b1=1; b1&lt;2; b1++)<br>      for (int b2=0; b2&lt;2; b2++)<br>        if (2*b1+b2 &lt; 2*x[0]+x[1])  a[2][b1][b2]++; else<br>        if (2*b1+b2 == 2*x[0]+x[1]) b[2][b1][b2]++;<br>    //b<br>    for (int l=3; l&lt;=n; l++)<br>      for (int b0=0; b0&lt;2; b0++)<br>        b[l][x[l-2]][x[l-1]] += b[l-1][b0][x[l-2]]*ok(b0,x[l-2],x[l-1]);<br>    //a<br>    for (int l=3; l&lt;=n; l++)<br>      for (int b1=0; b1&lt;2; b1++)<br>        for (int b2=0; b2&lt;2; b2++) {<br>          //from a<br>          for (int b0=0; b0&lt;2; b0++)<br>            a[l][b1][b2] += a[l-1][b0][b1] * ok(b0, b1, b2);<br>          //from b<br>          for (int b0=0; b0&lt;2; b0++) if (b2&lt;x[l-1])<br>            a[l][b1][b2] += b[l-1][b0][b1] * ok(b0, b1, b2);<br>        }<br>    //out<br>    int res = 0;<br>    for (int b1=0; b1&lt;2; b1++)<br>      for (int b2=0; b2&lt;2; b2++)<br>        res += a[n][b1][b2] + b[n][b1][b2];<br>    //adding lesser lengths<br>    for (int l=3; l&lt;n; l++)<br>      res += countForLen(l);<br>    return res;<br>  }<br>  <br>  public int count(int a, int b) {<br>    a = Math.max(a, 7);<br>    if (a&gt;b) return 0;<br>    if (a&gt;7) return (b-a+1) - (count(b) - count(a-1));<br>    return (b-a+1) - (count(b) - count(a));<br>  }<br> <br>  public static void main(String[] args) {<br>    System.out.println(new CoolNumbers().count(0, 16));<br>  }<br> <br>}<br> <br> <br>// Powered by PopsEdit<br></td>