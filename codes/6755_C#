<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br><br>public class WeirdSort {<br>  public int[] sortArray(int[] data) {<br>    List&lt;int&gt; l = new List&lt;int&gt;(data);<br>    return doOrder(-2, l);<br>  }<br><br>  private int[] doOrder(int prev, List&lt;int&gt; data)<br>  {<br>    if (data.Count == 0)<br>      return new int[0];<br>    int best = int.MaxValue;<br>    int besti = -1;<br>    for (int i = 0; i &lt; data.Count; ++i)<br>    {<br>      if (data[i] != prev + 1)<br>      {<br>        List&lt;int&gt; next = new List&lt;int&gt;(data);<br>        next.RemoveAt(i);<br>        if (data[i] &lt; best &amp;&amp; canOrder(data[i], next))<br>        {<br>          best = data[i];<br>          besti = i;<br>        }<br>      }<br>    }<br>    {<br>      List&lt;int&gt; next = new List&lt;int&gt;(data);<br>      next.RemoveAt(besti);<br>      int[] res = doOrder(data[besti], next);<br>      int[] r = new int[data.Count];<br>      Array.Copy(res, 0, r, 1, res.Length);<br>      r[0] = data[besti];<br>      return r;<br>    }<br>  }<br><br>  bool canOrder(int prev, List&lt;int&gt; data)<br>  {<br>    int v1 = -1;<br>    int v2 = -1;<br>    foreach (int x in data)<br>    {<br>      if (v1 &lt; 0)<br>        v1 = x;<br>      else<br>      {<br>        if (x == v1)<br>          continue;<br>        if (v2 &lt; 0)<br>          v2 = x;<br>        else<br>        {<br>          if (x == v2)<br>            continue;<br>          return true;<br>        }<br>      }<br>    }<br>    if (v1 &lt; 0)<br>      return true;<br>    if (v2 &lt; 0)<br>      return prev + 1 != v1;<br>    if (v1 &gt; v2)<br>    {<br>      int t = v1;<br>      v1 = v2;<br>      v2 = t;<br>    }<br>    if (v1 + 1 &lt; v2)<br>      return true;<br>    if (prev != v1)<br>      return true;<br>    return false;<br>  }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>