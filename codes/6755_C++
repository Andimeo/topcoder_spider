<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;bitset&gt;<br>#include &lt;cassert&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;complex&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;ctime&gt;<br>#include &lt;deque&gt;<br>#include &lt;functional&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iterator&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;stack&gt;<br>#include &lt;string&gt;<br>#include &lt;valarray&gt;<br>#include &lt;vector&gt;<br>#include &lt;utility&gt;<br><br>using namespace std;<br><br>#define all(v) (v).begin(), (v).end()<br><br>// Types<br>typedef long double ld;<br>typedef long long ll;<br>typedef pair &lt;int, int&gt; pii;<br>typedef vector &lt;int&gt; vi;<br>typedef vector &lt;pii&gt; vp;<br>typedef vector &lt;ld&gt; vd;<br>typedef vector &lt;string&gt; vs;<br>typedef vector &lt;bool&gt; vb;<br>typedef map &lt;string , int&gt; msi;<br><br>// Constants<br>const int INF = 1000000000;<br>const ld EPS = 1e-10L;<br>const ld PI = 3.14159265358979L;<br><br>class WeirdSort<br>{<br>// Global<br><br>// Functions<br>public:<br>  vector &lt;int&gt; sortArray(vector &lt;int&gt; data, int f = -1)<br>  {<br>    vector &lt;int&gt; res;<br>    int n;<br>    sort(all(data));<br>    if (data.back() - data[0] &lt;= 1)<br>    {<br>      reverse(all(data));<br>      return data;<br>    }<br>/*    res.push_back(data[0]);<br>    reverse(all(data));<br>    data.pop_back();<br>    reverse(all(data));*/<br>    for (int i = 0; i &lt; data.size(); ++i)<br>    {<br>      if (data[i] != f)<br>      {<br>        res.push_back(data[i]);<br>        swap(data[i], data.back());<br>        data.pop_back();<br>        break;<br>      }<br>    }<br>    vi r1 = sortArray(data, res[0] + 1);<br>    for (int i = 0; i &lt; r1.size(); ++i)<br>      res.push_back(r1[i]);<br>    return res;<br>  }<br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>