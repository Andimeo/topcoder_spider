<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;set&gt;<br>#include &lt;stack&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;queue&gt;<br> <br>using namespace std;<br> <br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br> <br>// ********************************************* //<br> <br>class KDoubleSubstrings {<br>public:<br>  int howMuch(vector &lt;string&gt;, int);<br>};<br> <br>int KDoubleSubstrings::howMuch(vector &lt;string&gt; str, int kk) {<br>  <br>  int ret = 0;<br>  <br>  string full = "";<br>  <br>  for (int i = 0; i &lt; str.size(); i++) full = full + str[i];<br>  <br>  int N = full.length();<br>  <br>  for (int i = 0; i &lt; N; i++) {<br>    for (int j = i+1; j &lt; N; j++) {<br>      int len = j-i+1;<br>      if (len % 2 != 0) continue;<br>      string lh = "", rh = "";<br>      for (int k = 0; k &lt; len/2; k++) lh = lh + full[i+k];<br>      for (int k = len/2; k &lt; len; k++) rh = rh + full[i+k];<br>      int numdiff = 0;<br>      for (int k = 0; k &lt; lh.length(); k++) {<br>        if (lh[k] != rh[k]) numdiff++;<br>      }<br>      if (numdiff &lt;= kk) ret++;<br>    }<br>  }<br>  <br>  return ret;<br>}<br></td>