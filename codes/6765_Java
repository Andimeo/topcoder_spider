<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class ModularInequality {<br>    public int countSolutions(int[] A, int P) {<br>        int n = A.length;<br>        long[] a = new long[n];<br>        for (int i = 0; i &lt; n; i++) {<br>            a[i] = A[i];<br>        }<br>        Arrays.sort(a);<br> <br>        long r = a[n / 2];<br>        long sum = 0;<br>        for (int i = 0; i &lt; n; i++) {<br>            sum += Math.abs(a[i] - r);<br>        }<br>        if (sum &gt; P) {<br>            return 0;<br>        }<br> <br>        long l = -2000000001;<br>        while (l &lt; r - 1) {<br>            long m = (l + r) / 2;<br>            sum = 0;<br>            for (int i = 0; i &lt; n; i++) {<br>                sum += Math.abs(a[i] - m);<br>            }<br>            if (sum &gt; P) {<br>                l = m;<br>            } else {<br>                r = m;<br>            }<br>        }<br>        long left = r;<br> <br>        l = a[n / 2];<br>        r = 2000000001;<br>        while (l &lt; r - 1) {<br>            long m = (l + r) / 2;<br>            sum = 0;<br>            for (int i = 0; i &lt; n; i++) {<br>                sum += Math.abs(a[i] - m);<br>            }<br>            if (sum &gt; P) {<br>                r = m;<br>            } else {<br>                l = m;<br>            }<br>        }<br>        long right = l;<br> <br>        return (int) (right - left + 1);<br>    }<br> <br>}<br> <br> <br>// Powered by PopsEdit<br> <br>// Powered by CodeProcessor<br></td>