<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>using namespace std;<br>const int MAXL = 1000;<br>char buff[MAXL+1];<br>const int MAXN = 16;<br><br><br>vector&lt; string &gt; iznad;<br>vector&lt; int &gt; W;<br>int dp[1&lt;&lt;MAXN];<br>int recon[1&lt;&lt;MAXN];<br><br>int rek( int state )<br>{<br>    int &amp;ref = dp[state];<br>    if ( ref != -1 ) return ref;<br>    if ( state == ( 1 &lt;&lt; ( int )W.size() ) - 1 ) return ( ref = 0 );<br>    <br>    int vec = 0;<br>    for( int i = 0; i &lt; ( int )W.size(); ++i ) <br>        vec += ( ( state &gt;&gt; i ) &amp; 1 );<br>    <br>    ref = 987654321;<br>    for( int i = 0; i &lt; ( int )W.size(); ++i ) {<br>        bool ok = ( ( ( state &gt;&gt; i ) &amp; 1 ) == 0 );<br>        for( int j = 0; ok &amp;&amp; j &lt; ( int )W.size(); ++j )<br>            ok = ( ( ( state &gt;&gt; j ) &amp; 1 ) || iznad[i][j] == '0' );<br>        if ( ok ) {<br>            int tmp = rek( state | ( 1 &lt;&lt; i ) ) + W[i] * vec;<br>            if ( tmp &lt; ref ) {<br>                ref = tmp;<br>                recon[state] = i;<br>            }<br>        }<br>    }<br>    return ref;<br>}<br><br>vector&lt; int &gt; rec( int state )<br>{<br>    if ( state == ( 1 &lt;&lt; ( int )W.size() ) - 1 ) return vector&lt; int &gt;();<br>    vector&lt; int &gt; sol = rec( state | ( 1 &lt;&lt; recon[state] ) );<br>    sol.insert( sol.begin(), recon[state] );<br>    return sol;<br>}<br><br>class WarehouseJob {<br>public:<br>    vector &lt;int&gt; stackBoxes( vector &lt;int&gt; weight, vector &lt;string&gt; above ) {<br>        W = weight;<br>        iznad = above;<br>        memset( dp, -1, sizeof ( dp ) ); <br>        rek( 0 );<br>        return rec( 0 );<br>    }<br>};<br><br><br><br><br><br><br><br><br><br>// Powered by FileEdit<br>// Powered by moj 3.0 beta 11 [modified TZTester]<br>// Powered by CodeProcessor<br></td>