<td class="problemText" colspan="8" valign="middle" align="left">
            // my submission accuracy is quite low recently, don't be afraid to challenge me<br><br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>typedef long long ll;<br><br>#define LS &lt;<br>#define Size(x) (int(x.size()))<br>#define LET(k,val) typeof(val) k = (val)<br>// execute "act", and return "val" as an expression result<br>#define CLC(act,val) (*({act; static typeof(val) CLCR; CLCR = (val); &amp;CLCR;}))<br><br>// All macros with parameters "k,a,b" run the "k" variable in range [a,b)<br>#define FOR(k,a,b) for(typeof(a) k=(a); k LS (b); ++k)<br><br>// Standard mathematical quantifiers, plus tools to implement them<br>#define FOLD0(k,a,b,init,act) CLC(LET(k, a); LET(R##k, init); for(; k LS (b); ++k) {act;}, R##k)<br>#define PRODTO(k,a,b,init,x) FOLD0(k,a,b,init,R##k *= (x))<br>#define PROD(k,a,b,x) PRODTO(k,a,b,(typeof(x)) (1), x)<br><br>#line 3 "ExtendedDominoes.cc"<br><br>class ExtendedDominoes {<br>  public:<br>  long long countCycles(vector &lt;string&gt; pieces) {<br>    // !FDI<br>    int cnt[10];<br>    FOR(k,0,10) cnt[k] = 0;<br>    FOR(t,0,Size(pieces)) FOR(u,0,2) cnt[pieces[t][u]-'0']++;<br>    ll vals[20];<br>    vals[0] = 1; vals[1] = 0;<br>    FOR(k,2,20) vals[k] = (k-1) * vals[k-2];<br>    return PROD(k,0,10, vals[cnt[k]]);<br>    }<br>  };<br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>