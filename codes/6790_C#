<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class Diamonds {<br>  public int maxRadiusSum(string[] grid) {<br>    int height = grid.Length;<br>    int width = grid[0].Length;<br>    int[,] maxDiamond = new int[height, width];<br>    int res = 0;<br>    for (int row = 0; row &lt; height; ++row)<br>      for (int col = 0; col &lt; width; ++col)<br>      {<br>        int rad = 1000;<br>        for (int rr = -1; rr &lt;= height; ++rr)<br>          for (int cc = -1; cc &lt;= width; ++cc)<br>            if (rr &lt; 0 || rr &gt;= height || cc &lt; 0 || cc &gt;= width || grid[rr][cc] == '.')<br>            {<br>              rad = Math.Min(rad, Math.Abs(row - rr) + Math.Abs(col - cc));<br>            }<br>        maxDiamond[row, col] = rad;<br>        res = Math.Max(res, rad);<br>      }<br>    <br>    for (int r1 = 0; r1 &lt; height; ++r1)<br>      for (int c1 = 0; c1 &lt; width; ++c1)<br>        if (maxDiamond[r1, c1] &gt; 0)<br>          for (int r2 = 0; r2 &lt; height; ++r2)<br>            for (int c2 = 0; c2 &lt; width; ++c2)<br>              if (maxDiamond[r2, c2] &gt; 0)<br>              {<br>                int sum = Math.Min(maxDiamond[r1, c1] + maxDiamond[r2, c2], Math.Abs(r1 - r2) + Math.Abs(c1 - c2) + 1);<br>                res = Math.Max(res, sum);<br>              }<br>    return res;<br>  }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>