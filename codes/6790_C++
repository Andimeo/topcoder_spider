<td class="problemText" colspan="8" valign="middle" align="left">
            #line 2 "Diamonds.cc"<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;ctype.h&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;stdlib.h&gt;<br>using namespace std;<br> <br>const int MAXN = 64;<br>int r, c;<br>int m[MAXN][MAXN];<br>int d[MAXN][MAXN];<br> <br>class Diamonds {<br>public:<br>    int maxRadiusSum(vector &lt;string&gt; grid) {<br>  int r = grid.size() + 2;<br>  int c = grid[0].size() + 2;<br>  for (int i = 0; i &lt; grid.size(); i++)<br>      for (int j = 0; j &lt; grid[0].size(); j++)<br>    m[i+1][j+1] = (grid[i][j] == '#');<br>  for (int x = 0; x &lt; r; x++)<br>      for (int y = 0; y &lt; c; y++)<br>    if (m[x][y]) {<br>        d[x][y] = 1000000;<br>        for (int xx = 0; xx &lt; r; xx++)<br>      for (int yy = 0; yy &lt; c; yy++)<br>          if (m[xx][yy] == 0)<br>        d[x][y] &lt;?= abs(x - xx) + abs(y - yy);<br>    }<br>  int best = 0;<br>  for (int x1 = 0; x1 &lt; r; x1++)<br>      for (int y1 = 0; y1 &lt; c; y1++)<br>    for (int x2 = 0; x2 &lt; r; x2++)<br>        for (int y2 = 0; y2 &lt; c; y2++) {<br>      best &gt;?= (d[x1][y1] + d[x2][y2]) &lt;? (abs(x1 - x2) + abs(y1 - y2) + 1);<br>      //printf("%d %d -&gt; %d  %d %d -&gt; %d  %d\n", x1, y1, d[x1][y1], x2, y2, d[x2][y2], best);<br>        }<br>  return best;<br>    }<br>};<br> <br> <br> <br>// Powered by FileEdit<br></td>