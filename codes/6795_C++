<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class FixedPoint {<br>public:<br>  vector &lt;double&gt; find(double, vector &lt;double&gt;, double);<br>};<br> <br>vector &lt;double&gt; FixedPoint::find(double scale, vector &lt;double&gt; translate, double rotate) {<br>  double a=(scale * cos(rotate) - 1), b= scale * sin(rotate), c=-translate[0] * cos(rotate) + translate[1] * sin(rotate);<br>  double d=scale * sin(rotate), e=(scale * cos(rotate) - 1), f=-translate[0] * sin(rotate) - translate[1] * cos(rotate);<br>  vector&lt;double&gt; ats;<br>  double x=(c*e+b*f)/(a*e+b*d);<br>  double y=(f*a-c*d)/(e*a+b*d);<br>  ats.push_back(x);<br>  ats.push_back(y);<br>  return ats;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>