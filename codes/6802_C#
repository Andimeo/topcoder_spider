<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br><br>public class MoneyGame {<br>    int[] aTotCoins;<br>    int[] aVals;<br>    Dictionary&lt;int, int&gt; oHash = new Dictionary&lt;int, int&gt;();<br>    public int play(int[] lennysCoins, int[] fredsCoins, int[] values) {<br>        aTotCoins = new int[3];<br>        for (int i = 0; i &lt; 3; i++) {<br>            aTotCoins[i] = lennysCoins[i] + fredsCoins[i];<br>        }<br>        aVals = values;<br>        return iBest(lennysCoins, fredsCoins);<br>    }<br><br>    private int iBest(int[] iPlayer1Coins, int[] iPlayer2Coins) {<br>        int iState = 0;<br>        for (int i = 0; i &lt; 3; i++) {<br>            iState |= iPlayer1Coins[i] &lt;&lt; (8 * i);<br>            iState |= iPlayer2Coins[i] &lt;&lt; (8 * i + 4);<br>        }<br>        if (oHash.ContainsKey(iState)) return oHash[iState];<br>        int[] aPot = new int[3];<br>        for (int i = 0; i &lt; 3; i++) {<br>            aPot[i] = aTotCoins[i] - iPlayer1Coins[i] - iPlayer2Coins[i];<br>        }<br>        int miBest = -99999;<br>        for (int iPlay = 0; iPlay &lt; 3; iPlay++) {<br>            if (iPlayer1Coins[iPlay] &gt; 0) {<br>                for (int iFetch0 = 0; iFetch0 &lt;= aPot[0] &amp;&amp; aVals[0] * iFetch0 &lt; aVals[iPlay]; iFetch0++) {<br>                    for (int iFetch1 = 0; iFetch1 &lt;= aPot[1] &amp;&amp; aVals[0] * iFetch0 + aVals[1] * iFetch1 &lt; aVals[iPlay]; iFetch1++) {<br>                        for (int iFetch2 = 0; iFetch2 &lt;= aPot[2] &amp;&amp; aVals[0] * iFetch0 + aVals[1] * iFetch1 + aVals[2] * iFetch2 &lt; aVals[iPlay]; iFetch2++) {<br>                            iPlayer1Coins[iPlay]--;<br>                            iPlayer1Coins[0] += iFetch0;<br>                            iPlayer1Coins[1] += iFetch1;<br>                            iPlayer1Coins[2] += iFetch2;<br>                            miBest = Math.Max(miBest, -iBest(iPlayer2Coins, iPlayer1Coins));<br>                            iPlayer1Coins[iPlay]++;<br>                            iPlayer1Coins[0] -= iFetch0;<br>                            iPlayer1Coins[1] -= iFetch1;<br>                            iPlayer1Coins[2] -= iFetch2;<br>                        }<br>                    }<br>                }<br>            }<br>        }<br>        if (miBest == -99999) {<br>            miBest= -(aVals[0] * iPlayer2Coins[0] + aVals[1] * iPlayer2Coins[1] + aVals[2] * iPlayer2Coins[2]);<br>        }<br>        oHash.Add(iState, miBest);<br>        return miBest;<br>    }<br>}<br></td>