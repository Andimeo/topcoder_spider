<td class="problemText" colspan="8" valign="middle" align="left">
            Public Class GroupWork<br>    Public Function bestGroup(ByVal p As Integer(), ByVal s As Integer()) As Long<br>        Dim groups As group()<br>        Dim n As Integer = p.Length<br>        ReDim groups(n - 1)<br>        Dim i, j As Integer<br>        Dim res As Long<br>        For i = 0 To n - 1<br>            groups(i) = New group()<br>            groups(i).num = p(i)<br>            groups(i).speed = s(i)<br>        Next<br><br>        groups.Sort(groups)<br>        Dim best As Long = 0<br>        Dim current As Long = 0<br>        For i = n - 1 To 0 Step -1<br>            Dim nump As Long = 0<br>            For j = i To n - 1<br>                nump += groups(j).num<br>            Next<br>            current = groups(i).speed * nump<br>            If current &gt; best Then<br>                best = current<br>            End If<br>        Next<br><br>        Return best<br><br>    End Function<br><br>    Public Class group<br>        Implements IComparable<br><br>        Public num As Integer<br>        Public speed As Integer<br><br>        Public Function CompareTo(ByVal obj As Object) As Integer Implements System.IComparable.CompareTo<br>            Return (Me.speed - CType(obj, group).speed)<br>        End Function<br>    End Class<br>End Class<br></td>