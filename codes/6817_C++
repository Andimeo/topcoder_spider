<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt; <br>#include &lt;cstring&gt; <br>#include &lt;cstdlib&gt; <br>#include &lt;cctype&gt; <br>#include &lt;cmath&gt; <br>#include &lt;iostream&gt; <br>#include &lt;algorithm&gt; <br>#include &lt;vector&gt; <br>#include &lt;string&gt; <br>#include &lt;sstream&gt; <br>using namespace std; <br><br>const  int    limitSize  = 50  + 10;<br><br>int      n , m;<br>int      sx , sy , tx , ty;<br><br>class BrokenElevator <br>{<br>  public :<br>  int wayTime(vector &lt;string&gt; plan) <br>  {<br>    int  i , j , ans = 0;<br><br>    n = plan.size();<br>    m = plan[0].length();<br>    for(i = 0; i &lt; n; i ++)<br>      for(j = 0; j &lt; m; j ++)<br>      {<br>        if( plan[i][j] == 'S' ) sx = i , sy = j;<br>        if( plan[i][j] == 'F' ) tx = i , ty = j;<br>      }<br><br>    while( sx &lt; tx )<br>    {<br>      for(i = 0; i &lt; m; i ++)<br>        if( plan[sx + 1][i] == '|' ) break;<br>      ans += abs(i - sy) * 2 + 1; <br>      sx += 2; sy = i;<br>    }<br>    while( sx &gt; tx )<br>    {<br>      for(i = 0; i &lt; m; i ++)<br>        if( plan[sx - 1][i] == '|' ) break;<br>      ans += abs(i - sy) * 2 + 3;<br>      sx -= 2; sy = i;<br>    }<br>    ans += abs(sy - ty) * 2;<br><br>    return ans;<br>  }<br>  <br> <br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>