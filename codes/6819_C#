<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class Triominoes {<br>    string NormalizeHexagon(string bound) {<br>      string b = bound;<br>      for (int i = 1; i &lt; 6; ++i) {<br>    string s = bound.Substring(i) + bound.Substring(0, i);<br>    if (s.CompareTo(b) &lt; 0) b = s;<br>      }<br>      return b;<br>    }<br><br>    Dictionary&lt;string, object&gt; all;<br>    int[,,] num;<br><br>    void rec(int center, int at, int last, int first, string cur) {<br>  if (at == 6) {<br>      if (last == first) {<br>    all[NormalizeHexagon(cur)] = null;<br>      }<br>      return;<br>  }<br>  for (int next = 0; next &lt;= 6; ++next) {<br>      if (num[center, last, next] &gt; 0) {<br>    --num[center, last, next];<br>    --num[last, next, center];<br>    --num[next, center, last];<br>    rec(center, at + 1, next, first, cur + (char) ('0' + next));<br>    ++num[center, last, next];<br>    ++num[last, next, center];<br>    ++num[next, center, last];<br>      }<br>  }<br>    }<br><br><br>    public int countHexagons(string[] pieces) {<br>  num = new int[7, 7, 7];<br>  foreach (string p in pieces) {<br>      int a = p[0] - '0';<br>      int b = p[1] - '0';<br>      int c = p[2] - '0';<br>      ++num[a,b,c];<br>      ++num[b,c,a];<br>      ++num[c,a,b];<br>  }<br>  int res = 0;<br>  for (int center = 0; center &lt;= 6; ++center) {<br>      all = new Dictionary&lt;string, object&gt;();<br>      for (int first = 0; first &lt;= 6; ++first) {<br>    rec(center, 0, first, first, "");<br>      }<br>      res += all.Count;<br>  }<br>  return res;<br>    }<br>}<br><br><br>// Powered by FileEdit<br></td>