<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;string&gt;<br>#include &lt;cmath&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;functional&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;complex&gt;<br>#include &lt;valarray&gt;<br>#include &lt;utility&gt;<br> <br>using namespace std;<br> <br>typedef long long int64;<br>int two(int X) {return 1&lt;&lt;X;}<br>int lowbit(int X) {return (X^(X-1))&amp;X;}<br>int countbit(int X) {return (X==0)?0:(1+countbit(X-lowbit(X)));}<br>bool containbit(int s,int X) {return (s&amp;two(X))&gt;0;}<br>void addbit(int &amp;s,int X) {s|=two(X);}<br>void out(vector&lt;int&gt; A) {printf("{");for (int i=0;i&lt;A.size();i++) printf("%d ",A[i]);printf("}\n");}<br>void out(vector&lt;string&gt; A) {printf("{\n");for (int i=0;i&lt;A.size();i++) printf("%s\n",A[i].c_str());printf("}\n");}<br>void out(int A[],int n) {printf("{");for (int i=0;i&lt;n;i++) printf("%d ",A[i]);printf("}\n");}<br>void out(string s) {printf("%s",s.c_str());}<br>void checkmin(int &amp;a,int b) {if (b&lt;a) a=b;}<br>void checkmax(int &amp;a,int b) {if (b&gt;a) a=b;}<br>void checkmin(double &amp;a,double b) {if (b&lt;a) a=b;}<br>void checkmax(double &amp;a,double b) {if (b&gt;a) a=b;}<br>void checkmin(int64 &amp;a,int64 b) {if (b&lt;a) a=b;}<br>void checkmax(int64 &amp;a,int64 b) {if (b&gt;a) a=b;}<br>double eps=1e-10;<br>double pi=3.141592653589793238462643383;<br>string toString(int64 v) {if (v==0)return "0";string s="";for (;v&gt;0;v/=10) s=char(v%10+'0')+s;return s;}<br> <br>class Triominoes <br>{<br>public:<br>  vector&lt;string&gt; P;<br>  int result,A[10];<br>  bool fit[60][10][10][10];<br>  void solve()<br>  {<br>//    out(A,7);<br>    int v=-1,bk=-1;<br>    for (int i=1;i&lt;=6;i++)<br>    {<br>      int id=0;<br>      for (int j=0;j&lt;6;j++)<br>        id=id*10+(A[(i+j)%6+1]);<br>      if (id&gt;v)<br>      {<br>        v=id;<br>        bk=i;<br>      }<br>    }<br>    if (bk!=1)<br>      return;<br>    bool vis[60];<br>    memset(vis,false,sizeof(vis));<br>    int n=P.size();<br>    for (int i=1;i&lt;=6;i++)<br>    {<br>      bool find=false;<br>      int fd=-1;<br>      int c=A[0];<br>      int a=A[i];<br>      int b=A[i%6+1];<br>      for (int k=0;!find &amp;&amp; k&lt;n;k++) if (!vis[k] &amp;&amp; fit[k][c][a][b])<br>//        if (P[k][0]-'0'==c &amp;&amp; P[k][1]-'0'==a &amp;&amp; P[k][2]-'0'==b<br>//        ||  P[k][1]-'0'==c &amp;&amp; P[k][2]-'0'==a &amp;&amp; P[k][0]-'0'==b<br>//        ||  P[k][2]-'0'==c &amp;&amp; P[k][0]-'0'==a &amp;&amp; P[k][1]-'0'==b)<br>        {<br>          fd=k;<br>          find=true;<br>          break;<br>        }<br>      if (!find)<br>        return;<br>      vis[fd]=true;<br>    }<br>    result++;<br>  }<br>  void search(int d)<br>  {<br>    if (d==7)<br>      solve();<br>    else<br>    for (int i=0;i&lt;=6;i++)<br>    {<br>      A[d]=i;<br>      search(d+1);<br>    }<br>  }<br>  int countHexagons(vector &lt;string&gt; pieces) <br>  {<br>    P=pieces;<br>    int n=P.size();<br>    for (int k=0;k&lt;n;k++)<br>      for (int c=0;c&lt;=6;c++)<br>        for (int a=0;a&lt;=6;a++)<br>          for (int b=0;b&lt;=6;b++)<br>            fit[k][c][a][b]=(P[k][0]-'0'==c &amp;&amp; P[k][1]-'0'==a &amp;&amp; P[k][2]-'0'==b<br>                     ||   P[k][1]-'0'==c &amp;&amp; P[k][2]-'0'==a &amp;&amp; P[k][0]-'0'==b<br>                  ||   P[k][2]-'0'==c &amp;&amp; P[k][0]-'0'==a &amp;&amp; P[k][1]-'0'==b);<br>    result=0;<br>    search(0);<br>    return result;<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>