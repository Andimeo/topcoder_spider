<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>double f[3000];<br> <br>class FenceRepairing {<br>public:<br>  double calculateCost(vector &lt;string&gt; vs)<br>  {<br>    string s="";<br>    for (int i=0;i&lt;vs.size();i++)<br>      s+=vs[i];<br>    int n=s.length();<br>    s=" "+s;<br>    f[0]=0;<br>    for (int i=1;i&lt;=n;i++)<br>    {<br>      f[i]=1e100;<br>      if (s[i]=='.')<br>        f[i]=f[i-1];<br>      for (int j=0;j&lt;i;j++)<br>        if (f[j]+sqrt((double)(i-j))&lt;f[i])<br>          f[i]=f[j]+sqrt((double)(i-j));<br>    }<br>    return f[n];<br>  }<br>};<br></td>