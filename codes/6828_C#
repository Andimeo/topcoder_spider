<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br><br>public class NewMoneySystem {<br>  struct Pair<br>  {<br>    public long n;<br>    public int k;<br><br>    public Pair(long n, int k)<br>    {<br>      this.n = n;<br>      this.k = k;<br>    }<br><br>    public override int GetHashCode()<br>    {<br>      return n.GetHashCode() + 3137 * k;<br>    }<br><br>    public override bool Equals(object obj)<br>    {<br>      Pair pair = (Pair) obj;<br>      if (n != pair.n) return false;<br>      if (k != pair.k) return false;<br>      return true;<br>    }<br>  }<br>  <br>  Dictionary&lt;Pair, long&gt; best;<br>  <br>  public long chooseBanknotes(string N, int K) {<br>    long n = long.Parse(N);<br>    best = new Dictionary&lt;Pair, long&gt;();<br>    return get(n, K);<br>  }<br><br>  private long get(long n, int k)<br>  {<br>    if (k == 1)<br>      return n;<br>    <br>    if (n == 0)<br>      return 0;<br>    <br>    Pair p = new Pair(n, k);<br>    if (best.ContainsKey(p))<br>      return best[p];<br><br>    long res = long.MaxValue;<br>    for (int nxt = 2; nxt &lt;= 5; ++nxt)<br>    {<br>      res = Math.Min(res, n % nxt + get(n / nxt, k - 1));<br>    }<br>    <br>    best[p] = res;<br><br>    return res;<br>  }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>