<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;string&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;complex&gt;<br>#include &lt;functional&gt;<br>#include &lt;utility&gt;<br> <br>using namespace std;<br> <br>typedef long long int64;<br> <br>int two(int X) {return 1&lt;&lt;X;}<br>bool contain(int s,int X) {return (s&amp;(1&lt;&lt;X))&gt;0;}<br>int lowbit(int n) {return (n^(n-1))&amp;n;}<br>int countbit(int n) {return (n==0)?0:1+countbit(n-lowbit(n));}<br>void out(vector&lt;int&gt; vi) {printf("{");for (int i=0;i&lt;vi.size();i++) printf("%d ",vi[i]);printf("}\n");}<br>void out(vector&lt;string&gt; vs) {printf("{\n");for (int i=0;i&lt;vs.size();i++) printf("%s,\n",vs[i].c_str());printf("};\n");}<br>void out(string s) {printf("%s\n",s.c_str());}<br> <br>class Coherency <br>{<br>public:<br>  int starters(vector &lt;int&gt; A, int m) <br>  {<br>    int result=0;<br>    int n=A.size();<br>    sort(A.begin(),A.end());<br>    for (int i=0;i&lt;n-1;i++)<br>      if (A[i+1]-A[i]&gt;m)<br>        return 0;<br>    set&lt;int&gt; M;<br>    M.clear();<br>    for (int i=0;i&lt;n;i++)<br>    {<br>      if (i==0 || i==n-1)<br>      {<br>        M.insert(A[i]);<br>        continue;<br>      }<br>      bool f1=true,f2=true;<br>      for (int k=i+1;k&lt;n;k++)<br>        if (abs(A[k-2]-A[k])&gt;m)<br>          f1=false;<br>      for (int k=i-1;k&gt;=0;k--)<br>        if (abs(A[k+2]-A[k])&gt;m)<br>          f2=false;<br>      if (f1 || f2)<br>        M.insert(A[i]);<br>    }<br>    return M.size();<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>