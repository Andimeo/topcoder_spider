<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.io.*;<br>import java.math.*;<br><br>public class Coherency {<br><br>  int m;<br>  int n;<br><br>  boolean o( int[] c, int i ) {<br>      System.out.println( " OOOO " + i );<br>      int j = i;<br>      boolean ok = true;<br>      while ( j &gt; 1 ) {<br>        System.out.println( j + " " + ( j - 2 ) );<br>        if ( Math.abs( c[j] - c[j - 2] ) &lt;= m ) {<br>          j -= 2;<br>        } else { break; }<br>      }<br>      if ( j &gt; 1 ) { return false; }<br>      j = ( i + 1 ) % 2;      <br>      while ( j &lt; i ) {<br>        System.out.println( j + " " + ( j + 2 ) );<br>        if ( j + 2 &gt;= n || Math.abs( c[j] - c[j + 2] ) &lt;= m ) {<br>          j += 2;<br>        } else { break; }<br>      }<br>      if ( j &lt; i ) { return false; }<br>      for ( j = i + 1; j &lt; n; j ++ ) {<br>        System.out.println( j + " " + ( j - 1 ) );<br>        if ( Math.abs( c[j] - c[j - 1] ) &gt; m ) {<br>          ok = false; break;<br>        }<br>      }<br>      return ok;<br>  }<br><br><br>  public int starters( int[] c, int M) {<br>    m = M;<br>    Arrays.sort( c );<br>    n = c.length;<br>    for ( int i = 0; i &lt; n; i ++ ) {<br>      System.out.print( c[i] + " " );<br>    }<br>    System.out.println( " c ");<br>    int[] d = new int[n];<br>    for ( int i = 0; i &lt; n; i ++ ) {<br>      d[i] = c[n - 1 - i];<br>    }<br>    System.out.println( " d " );<br>    int ans = 0;<br>    for ( int i = 0; i &lt; n; i ++ ) {<br>      if ( i &gt; 0 &amp;&amp; c[i] == c[i - 1] ) { continue; } <br>      if ( o( c, i ) || o( d, n - 1 - i ) ) {<br>        ans ++;<br>        System.out.println( i );<br>      }<br>    }<br>    return ans;<br>  }<br>}<br></td>