<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class RepeatedAddition {<br>    public long digitsErased(string A, string B, string X) {<br>  long a = long.Parse(A);<br>  long b = long.Parse(B);<br>  long x = long.Parse(X);<br>  long am = (b - a) / x;<br><br>  /*  long res = 0;<br>  while (a &lt; b) {<br>      res += cost(a, a + x);<br>      a += x;<br>  }<br>  return res;*/<br><br>  long res = 0;<br>  long p10 = 1;<br>  long numTran = 0;<br>  while (p10 &lt;= b) {<br>      long aDigit = (a / p10) % 10;<br>      long bDigit = (b / p10) % 10;<br>      long xDigit = (x / p10) % 10;<br>      if (xDigit == 0) {<br>    res += numTran;<br>      } else if (xDigit == 9) {<br>    res += am - numTran;<br>      } else {<br>    res += am;<br>      }<br>      long other = (aDigit + xDigit * am + numTran);<br>      numTran = (other / 10);<br>      p10 *= 10;<br>  }<br><br>  p10 = 1;<br>  while (p10 &lt;= a)<br>      p10 *= 10;<br>  while (p10 &lt;= b) {<br>      long v = getFirst(a, x, am, p10);<br>      v /= p10;<br>      if (v % 10 != 0)<br>    --res;    <br>      p10 *= 10;<br>  }<br><br>  return res;<br>    }<br><br>    long getFirst(long a, long x, long am, long where) {<br>  long left = 0;<br>  long right = am;<br>  while (right - left &gt; 1) {<br>      long middle = (left + right) / 2;<br>      if (a + x * middle &lt; where)<br>    left = middle;<br>      else<br>    right = middle;<br>  }<br>  return a + x * right;<br>    }<br><br>    long cost(long n1, long n2) {<br>  long res = 0;<br>  while (n1 &gt; 0) {<br>      if (n1 % 10 != n2 % 10)<br>    ++res;<br>      n1 /= 10;<br>      n2 /= 10;<br>  }<br>  return res;<br>    }<br>}<br><br><br>// Powered by FileEdit<br></td>