<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cassert&gt;<br>#include &lt;set&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstddef&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;utility&gt;<br>#include &lt;iterator&gt;<br>#include &lt;numeric&gt;<br>#include &lt;list&gt;<br>#include &lt;complex&gt;<br>#include &lt;cmath&gt;<br> <br>using namespace std;<br> <br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;string&gt; vs;<br>typedef long long ll;<br>typedef pair&lt;int, int&gt; pii;<br>typedef long double ld;<br> <br>#define RA(x) (x).begin(), (x).end()<br>#define FE(i, x) for (typeof((x).begin()) i = (x).begin(); i != (x).end(); i++)<br> <br>class RPSChamps<br>{<br>public:<br>    double numberOfMoves(int N);<br>};<br> <br>double RPSChamps::numberOfMoves(int N)<br>{<br>    ld dp[501];<br>    ld choose[501][501];<br> <br>    choose[0][0] = 0.0;<br>    for (int i = 1; i &lt;= N; i++)<br>    {<br>        choose[i][0] = choose[i][i] = 1.0;<br>        for (int j = 1; j &lt; i; j++)<br>            choose[i][j] = choose[i - 1][j - 1] + choose[i - 1][j];<br>    }<br> <br>    dp[1] = 0.0;<br>    for (int i = 2; i &lt;= N; i++)<br>    {<br>        dp[i] = 1.0 / (3 * powl(2.0 / 3.0, i) - 6 * powl(1.0 / 3.0, i));<br>        ld tw = 0.0;<br>        ld add = 0.0;<br>        for (int j = 1; j &lt; i; j++)<br>        {<br>            ld w = choose[i][j];<br>            add += w * (dp[j] + dp[i - j]);<br>            tw += w;<br>        }<br>        dp[i] += add / tw;<br>    }<br> <br>    return dp[N];<br>}<br> <br> <br>// Powered by FileEdit<br></td>