<td class="problemText" colspan="8" valign="middle" align="left">
            public class RPSChamps {<br>  public double numberOfMoves(int n) {<br>    double[][] p = new double[n + 1][4];<br>    double[] a = new double[n + 1];<br>    p[1][1] = 1;<br>    for (int i = 1; i &lt; n; i++) {<br>      p[i + 1][1] = p[i][1] / 3d;<br>      p[i + 1][2] = p[i][1] * 2d / 3d;<br>      p[i + 1][2] += p[i][2] * 2d / 3d;<br>      p[i + 1][3] = p[i][2] / 3d;<br>      p[i + 1][3] += p[i][3];<br>    }<br>    double[][] cnk = new double[n + 1][n + 1];<br>    cnk[0][0] = 1;<br>    for (int m = 1; m &lt;= n; m++) {<br>      cnk[m][0] = cnk[m - 1][0];<br>      for (int k = 1; k &lt;= m; k++) {<br>        cnk[m][k] = (cnk[m - 1][k - 1] + cnk[m - 1][k]);<br>      }<br>    }<br>    double two = 2;<br>    for (int i = 2; i &lt;= n; i++) {<br>      two *= 2d;<br>      a[i] = 1 / p[i][2];<br>      for (int k = 1; k &lt; i; k++) {<br>        a[i] += cnk[i][k] * (a[k] + a[i - k]) / (two - 2);<br>      }<br>    }<br>    return a[n];<br>  }<br>  <br>  public static void main(String[] args) {<br>    double a = new RPSChamps().numberOfMoves(1);<br>    System.out.println(a);<br>  }<br><br>}<br></td>