<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class Chomp<br>{<br>  public int moves(int N)<br>  {<br>    memo = new int[N+1][N+1][N+1];<br>    for(int[][] arr2:memo)<br>    for(int[] arr:arr2)<br>      Arrays.fill(arr, SENT);<br>    <br>    return solve(N, N, N);<br>  }<br>  static final int SENT = Integer.MIN_VALUE;<br>  int[][][] memo;<br>  <br>  int solve(int a, int b, int c)<br>  {<br>    if(a==0 &amp;&amp; b==0 &amp;&amp; c==0)<br>      return 0;<br>    if(memo[a][b][c]==SENT)<br>    {<br>      int win = Integer.MAX_VALUE, lose = Integer.MAX_VALUE;<br>      for(int i=1;i&lt;=a;i++)<br>      {<br>        int temp = -solve(i-1,b,c);<br>        if(temp&lt;=0)<br>          lose = Math.min(lose, temp-1);<br>        else<br>          win = Math.min(win, temp+1);<br>      }<br>      for(int i=1;i&lt;=b;i++)<br>      {<br>        int temp = -solve(Math.min(i-1,a),i-1,c);<br>        if(temp&lt;=0)<br>          lose = Math.min(lose, temp-1);<br>        else<br>          win = Math.min(win, temp+1);<br>      }<br>      for(int i=1;i&lt;=c;i++)<br>      {<br>        int temp = -solve(Math.min(i-1,a),Math.min(i-1,b),i-1);<br>        if(temp&lt;=0)<br>          lose = Math.min(lose, temp-1);<br>        else<br>          win = Math.min(win, temp+1);<br>      }<br>      if(win==Integer.MAX_VALUE)<br>        memo[a][b][c] = lose;<br>      else<br>        memo[a][b][c] = win;<br>      //A.spr(a+":"+b+":"+c+":"+memo[a][b][c]);<br>    }<br>    return memo[a][b][c];<br>  }<br>}<br></td>