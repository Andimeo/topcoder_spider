<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class BlockEnemy {<br>  int[][] con;<br>  boolean[] occ;<br>  int effort, ea, eb;<br><br>  boolean rec(int idx, int src){<br>    boolean ret = occ[idx] &amp;&amp; idx!=src;<br>    for (int i=0; i&lt;con.length; i++){<br>      if (con[idx][i] &gt; 0){<br>        int t = con[idx][i];<br>        con[idx][i] = con[i][idx] = 0;<br>        if (rec(i,src)){<br>          if (t &lt; effort){<br>            effort = t;<br>            ea = idx;<br>            eb = i;<br>          }<br>          ret = true;<br>        }<br>        con[idx][i] = con[i][idx] = t;<br>      }<br>    }<br>    return ret;<br>  }<br><br>    public int minEffort(int N, String[] roads, int[] occupiedTowns) {<br>    con = new int[N][N];<br>    for (String road : roads){<br>      String[] s = road.split(" ");<br>      int a = Integer.parseInt(s[0]);<br>      int b = Integer.parseInt(s[1]);<br>      int e = Integer.parseInt(s[2]);<br>      con[a][b] = con[b][a] = e;<br>    }<br><br>    occ = new boolean[N];<br>    for (int o : occupiedTowns)<br>      occ[o] = true;<br><br>        int res = 0;<br>    for (int i=0; i&lt;N; i++) if (occ[i]){<br>      while (true){<br>        effort = Integer.MAX_VALUE;<br>        if (!rec(i,i)) break;<br>        res += effort;<br>        con[ea][eb] = con[eb][ea] = 0;<br>      }<br>    }<br>        return res;<br>    }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>