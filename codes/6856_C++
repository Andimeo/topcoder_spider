<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;utility&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br>#define REP(i,n) for(int _n=n, i=0;i&lt;_n;++i)<br>#define FOREACH(it,c) for(typeof((c).begin()) it=(c).begin();it!=(c).end();++it)<br>#define MAX(f,w) ({ int _mm=(1&lt;&lt;31); f _mm&gt;?=(w); _mm; })<br> <br>const int MAX = 22;<br>const int MAXX = 1&lt;&lt;MAX;<br> <br>int donec[MAXX];<br>int cntc[MAXX];<br> <br>struct LongLongNim {<br>int numberOfWins(int maxN, vector &lt;int&gt; moves) {<br>  ++maxN;<br>  int mask = 0;<br>  FOREACH(it,moves) mask |= 1&lt;&lt;(*it-1);<br>  REP(i,MAXX) donec[i]=-1;<br>  REP(i,MAXX) cntc[i]=-1;<br>  int state = MAXX-1;<br>  int cnt = 0;<br>  int done = 0;<br>  while(done&lt;maxN) {<br>    if(donec[state]!=-1) {<br>      int cyc = done-donec[state];<br>      int cv = cnt-cntc[state];<br>      int cycles = (maxN-done)/cyc;<br>      done += cycles * cyc;<br>      cnt += cycles * cv;<br>    }<br>    else { donec[state]=done; cntc[state]=cnt; }<br>    if(done==maxN) break;<br>    if((state&amp;mask)==mask) {<br>      cnt++;<br>      state = (state&lt;&lt;1)&amp;(MAXX-1);<br>    } else {<br>      state = ((state&lt;&lt;1)&amp;(MAXX-1))+1;<br>    }<br>    ++done;<br>  }<br>  return cnt-1;<br>}<br> <br>};<br> <br>// Powered by FileEdit<br> <br>// Powered by TomekAI<br>// Powered by TZTester 1.01 [25-Feb-2003]<br> <br>// Powered by CodeProcessor<br></td>