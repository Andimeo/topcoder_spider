<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;string&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;complex&gt;<br>#include &lt;functional&gt;<br>#include &lt;utility&gt;<br> <br>using namespace std;<br> <br>typedef long long int64;<br> <br>int two(int X) {return 1&lt;&lt;X;}<br>bool contain(int s,int X) {return (s&amp;(1&lt;&lt;X))&gt;0;}<br>int lowbit(int n) {return (n^(n-1))&amp;n;}<br>int countbit(int n) {return (n==0)?0:1+countbit(n-lowbit(n));}<br>void out(vector&lt;int&gt; vi) {printf("{");for (int i=0;i&lt;vi.size();i++) printf("%d ",vi[i]);printf("}\n");}<br>void out(vector&lt;string&gt; vs) {printf("{\n");for (int i=0;i&lt;vs.size();i++) printf("%s,\n",vs[i].c_str());printf("};\n");}<br>void out(string s) {printf("%s\n",s.c_str());}<br> <br>class Amazing <br>{<br>public:<br>  int n;<br>  vector&lt;double&gt; f1[10],f2[10],tmp[10];<br>  double cost[10][10];<br>  double result,factor;<br>  void check(double t)<br>  {<br>    t=fabs(t-1000.0);<br>    if (t&lt;result)<br>      result=t;<br>  }<br>  void solve(vector&lt;double&gt; f[10],int m,int dir)<br>  {<br>    if (m==0)<br>    {<br>      for (int i=0;i&lt;n;i++)<br>      {<br>        f[i].clear();<br>        f[i].push_back(0.0);<br>      }<br>      return;<br>    }<br>    solve(f,m-1,dir);<br>    for (int i=0;i&lt;n;i++)<br>      tmp[i]=f[i];<br>    for (int i=0;i&lt;n;i++)<br>    {<br>      f[i].clear();<br>      if (dir==0)<br>      {<br>        double fact=1.0;<br>        for (int ti=1;ti&lt;=m-1;ti++)<br>          fact*=factor;<br>        for (int j=0;j&lt;n;j++)<br>          for (int v=0;v&lt;tmp[j].size();v++)<br>            f[i].push_back(tmp[j][v]+cost[j][i]*fact);<br>      }<br>      else<br>      {<br>        for (int j=0;j&lt;n;j++)<br>          for (int v=0;v&lt;tmp[j].size();v++)<br>            f[i].push_back(tmp[j][v]*factor+cost[i][j]);<br>      }<br>    }<br>  }<br>  double totalE(double _factor, int numTrips, vector &lt;string&gt; effort) <br>  {<br>    factor=_factor;<br>    n=effort.size();<br>    for (int i=0;i&lt;effort.size();i++)<br>    {<br>      istringstream sin(effort[i]);<br>      for (int j=0;j&lt;n;j++)<br>        sin&gt;&gt;cost[i][j];<br>    }<br>    solve(f1,numTrips/2,0);<br>    solve(f2,numTrips-numTrips/2,1);<br>    double r=1.0;<br>    for (int i=0;i&lt;numTrips/2;i++)<br>      r*=factor;<br>    result=1e100;<br>    for (int i=0;i&lt;n;i++)<br>    {<br>      sort(f1[i].begin(),f1[i].end());<br>      sort(f2[i].begin(),f2[i].end());<br>      for (int v=0;v&lt;f2[i].size();v++)<br>        f2[i][v]*=r;<br>      int k=0;<br>      for (int j=f1[i].size()-1;j&gt;=0;j--)<br>      {<br>        for (;k+1&lt;f2[i].size() &amp;&amp; f2[i][k+1]+f1[i][j]&lt;1000.0;k++);<br>        check(f1[i][j]+f2[i][k]);<br>        if (k+1&lt;f2[i].size())<br>          check(f1[i][j]+f2[i][k+1]);<br>      }<br>    }<br>    return result;<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>