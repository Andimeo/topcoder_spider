<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class ForestGarbage {<br>public:<br>  vector &lt;int&gt; bestWay(vector &lt;string&gt;);<br>};<br>int n,m;<br>int wei[50][50];<br>int d[50][50];<br>bool marked[50][50];<br>void dij(int si,int sj){<br>  memset(d,-1,sizeof(d));<br>  memset(marked,0,sizeof(marked));<br>  d[si][sj]=0;<br>  while (si!=-1){<br>    marked[si][sj]=1;<br>    if (si&gt;0 &amp;&amp; (d[si][sj]+wei[si-1][sj]&lt;d[si-1][sj] || d[si-1][sj]==-1))<br>      d[si-1][sj]=d[si][sj]+wei[si-1][sj];<br>    if (si&lt;n-1 &amp;&amp; (d[si][sj]+wei[si+1][sj]&lt;d[si+1][sj] || d[si+1][sj]==-1))<br>      d[si+1][sj]=d[si][sj]+wei[si+1][sj];<br>    if (sj&gt;0 &amp;&amp; (d[si][sj]+wei[si][sj-1]&lt;d[si][sj-1] || d[si][sj-1]==-1))<br>      d[si][sj-1]=d[si][sj]+wei[si][sj-1];<br>    if (sj&lt;m-1 &amp;&amp; (d[si][sj]+wei[si][sj+1]&lt;d[si][sj+1] || d[si][sj+1]==-1))<br>      d[si][sj+1]=d[si][sj]+wei[si][sj+1];<br>    si=sj=-1;<br>    for (int i=0;i&lt;n;++i)<br>      for (int j=0;j&lt;m;++j)<br>        if (d[i][j]!=-1 &amp;&amp; !marked[i][j] &amp;&amp; (si==-1 || d[i][j]&lt;d[si][sj])){<br>          si=i;<br>          sj=j;<br>        }<br>  }<br>}<br>vector &lt;int&gt; ForestGarbage::bestWay(vector &lt;string&gt; f) {<br>  n=f.size();m=f[0].size();<br>  int si,sj,fi,fj;<br>  memset(wei,0,sizeof(wei));<br>  for (int i=0;i&lt;n;++i)<br>    for (int j=0;j&lt;m;++j){<br>      if (f[i][j]=='g')<br>        wei[i][j]=10000;<br>      else if (f[i][j]=='.'){<br>        if ((i&gt;0 &amp;&amp; f[i-1][j]=='g') || (i&lt;n-1 &amp;&amp; f[i+1][j]=='g') || (j&gt;0 &amp;&amp; f[i][j-1]=='g') || (j&lt;m-1 &amp;&amp; f[i][j+1]=='g'))<br>          wei[i][j]=1;<br>      }<br>      else if (f[i][j]=='S'){<br>        si=i;sj=j;<br>      }<br>      else if (f[i][j]=='F'){<br>        fi=i;fj=j;<br>      }<br>    }<br>    dij(si,sj);<br>    vector&lt;int&gt; res;<br>    res.push_back(d[fi][fj]/10000);<br>    res.push_back(d[fi][fj]%10000);<br>    return res;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>