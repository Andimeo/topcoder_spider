<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;utility&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br>#define REP(i,n) for(int _n=n, i=0;i&lt;_n;++i)<br>#define FOR(i,a,b) for(int i=(a),_b=(b);i&lt;=_b;++i)<br>#define MAX(f,w) ({ int _mm=(1&lt;&lt;31); f _mm&gt;?=(w); _mm; })<br>typedef long long LL;<br> <br>const int MAX = 4000000;<br> <br>int POW[10];<br>int cache[MAX];<br> <br>int f(int x) {<br>  int res = 0;<br>  while(x) { <br>    res += POW[x%10];<br>    x/=10;<br>  }<br>  return res;<br>}<br> <br>int happy(int x) {<br>  if(cache[x]&gt;=0) return cache[x];<br>  if(cache[x]==-2) {<br>    int y = x;<br>    int m = x;<br>    do {<br>      y = f(y);<br>      m = min(m,y);<br>    } while(y!=x);<br>    cache[x]=m;<br>    return m;<br>  }<br>  cache[x]=-2;<br>  int y = f(x);<br>  int mm = happy(y);<br>  mm = min(mm, x);<br>  cache[x]=mm;<br>  return mm;<br>}<br> <br>struct ExtendedHappyNumbers {<br>long long calcTheSum(int A, int B, int K) {<br>  REP(i,10) POW[i]=int(pow(double(i),double(K)));<br>  memset(cache,-1,sizeof(cache));<br>  LL res = 0;<br>  FOR(i,A,B) res += happy(i);<br>  return res;<br>}<br> <br>};<br> <br>// Powered by FileEdit<br> <br>// Powered by TomekAI<br>// Powered by TZTester 1.01 [25-Feb-2003]<br> <br>// Powered by CodeProcessor<br></td>