<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class Terrorists {<br>  public int requiredCost(string[] roads) {<br>    n = roads.Length;<br>    g = new int[n, n];<br>    for (int i = 0; i &lt; n; ++i)<br>      for (int j = 0; j &lt; n; ++j)<br>        g[i, j] = roads[i][j] - '0';<br>    int res = int.MaxValue;<br>    for (int s = 1; s &lt; n; ++s)<br>      res = Math.Min(res, flow(s, 0));<br>    return res;<br>  }<br><br>  int[,] f;<br>  int[,] g;<br>  int n;<br>  bool[] mark;<br>  <br>  int flow(int s, int t)<br>  {<br>    f = new int[n, n];<br>    mark = new bool[n];<br>    int res = 0;<br>    do<br>    {<br>      for (int i = 0; i &lt; n; ++i)<br>        mark[i] = false;<br>      int by = dfs(s, int.MaxValue, t);<br>      if (by == 0)<br>        break;<br>      res += by;<br>    } while (true);<br>    return res;<br>  }<br><br>  private int dfs(int a, int by, int t)<br>  {<br>    if (mark[a])<br>      return 0;<br>    mark[a] = true;<br>    if (a == t)<br>      return by;<br>    for (int i = 0; i &lt; n; ++i)<br>    {<br>      int way = g[a, i] - f[a, i];<br>      if (way &gt; 0)<br>      {<br>        int by2 = dfs(i, Math.Min(way, by), t);<br>        if (by2 &gt; 0)<br>        {<br>          f[a, i] += by2;<br>          f[i, a] -= by2;<br>          return by2;<br>        }<br>      }<br>    }<br>    return 0;<br>  }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>