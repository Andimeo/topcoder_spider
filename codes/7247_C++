<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br><br>using namespace std;<br><br>typedef long long int64;<br>typedef unsigned long long uint64;<br>#define two(X) (1&lt;&lt;(X))<br>#define twoL(X) (((int64)(1))&lt;&lt;(X))<br>#define contain(S,X) (((S)&amp;two(X))!=0)<br>#define containL(S,X) (((S)&amp;twoL(X))!=0)<br>const double pi=acos(-1.0);<br>const double eps=1e-11;<br>template&lt;class T&gt; inline void checkmin(T &amp;a,T b){if(b&lt;a) a=b;}<br>template&lt;class T&gt; inline void checkmax(T &amp;a,T b){if(b&gt;a) a=b;}<br>template&lt;class T&gt; inline T sqr(T x){return x*x;}<br>typedef pair&lt;int,int&gt; ipair;<br><br>class NewMagicSquare<br>{<br>public:<br>  vector&lt;string&gt; result;<br>  string A[10];<br>  int T[10][10];<br>  bool vis[30];<br>  bool valid(int r,int a1,int a2,int a3,int a4,int a5)<br>  {<br>    int B[6],v;<br>    B[1]=a1;B[2]=a2;B[3]=a3;B[4]=a4;B[5]=a5;<br>    istringstream sin(A[r]);<br>    for (int i=1;i&lt;=5;i++)<br>      if (T[r][i]!=-1 &amp;&amp; T[r][i]!=B[i])<br>        return false;<br>    for (int i=r+1;i&lt;=5;i++)<br>      for (int k=1;k&lt;=5;k++)<br>        for (int l=1;l&lt;=5;l++)<br>          if (T[i][k]==B[l])<br>            return false;<br>    return true;<br>  }<br>  bool check(int r)<br>  {<br>    int size=0,v,P[6],V[6];<br>    bool used[30];<br>    memcpy(used,vis,sizeof(used));<br>    for (int i=r;i&lt;=5;i++)<br>      for (int k=1;k&lt;=5;k++)<br>        if (T[i][k]!=-1)<br>        {<br>          int v=T[i][k];<br>          P[++size]=k;<br>          V[size]=v;<br>          used[v]=true;<br>        }<br>    int C=0;<br>    for (int i=1;i&lt;=25;i++)<br>    {<br>      if (!used[i]) C++;<br>      int C2=0;<br>      for (int k=1;k&lt;=size;k++)<br>        if (V[k]&lt;=i)<br>          C2+=(P[k]-1);<br>      if (C&lt;C2) return false;<br>    }<br>    C=0;<br>    for (int i=25;i&gt;0;i--)<br>    {<br>      if (!used[i]) C++;<br>      int C2=0;<br>      for (int k=1;k&lt;=size;k++)<br>        if (V[k]&gt;=i)<br>          C2+=(5-P[k]);<br>      if (C&lt;C2) return false;<br>    }<br>    return true;<br>  }<br>  bool solve(int r)<br>  {<br>    for (int a1=1;a1&lt;=25;a1++) if (!vis[a1])<br>    for (int a2=a1+1;a2&lt;=25;a2++) if (!vis[a2])<br>    for (int a3=a2+1;a3&lt;=25;a3++) if (!vis[a3])<br>    for (int a4=a3+1;a4&lt;=25;a4++) if (!vis[a4])<br>    for (int a5=a4+1;a5&lt;=25;a5++) if (!vis[a5])<br>    {<br>      if (!valid(r,a1,a2,a3,a4,a5)) continue;<br>      vis[a1]=vis[a2]=vis[a3]=vis[a4]=vis[a5]=true;<br>      if (check(r+1))<br>      {<br>        char str[200];<br>        sprintf(str,"%02d %02d %02d %02d %02d",a1,a2,a3,a4,a5);<br>        result.push_back(str);<br>        return true;<br>      }<br>      vis[a1]=vis[a2]=vis[a3]=vis[a4]=vis[a5]=false;<br>    }<br>    return false;<br>  }<br>  vector &lt;string&gt; completeTheSquare(vector &lt;string&gt; square)<br>  {<br>    for (int i=0;i&lt;5;i++)<br>      A[i+1]=square[i];<br>    for (int i=1;i&lt;=5;i++)<br>    {<br>      istringstream sin(A[i]);<br>      for (int j=1;j&lt;=5;j++)<br>      {<br>        string str;<br>        sin&gt;&gt;str;<br>        if (str=="??")<br>          T[i][j]=-1;<br>        else<br>          sscanf(str.c_str(),"%d",&amp;T[i][j]);<br>      }<br>    }<br>    memset(vis,false,sizeof(vis));<br>    vector&lt;string&gt; empty;<br>    result.clear();<br>    empty.clear();<br>    for (int row=1;row&lt;=5;row++)<br>      if (!solve(row))<br>        return empty;<br>    return result;<br>  }<br>};<br></td>