<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br><br>public class RemissiveSwaps {<br>  public int findMaximum(int N) {<br>    bool[] reachable = new bool[12000000];<br>    List&lt;int&gt; queue = new List&lt;int&gt;();<br>    reachable[N] = true;<br>    int res = N;<br>    queue.Add(N);<br>    while (queue.Count &gt; 0)<br>    {<br>      int cur = queue[queue.Count - 1];<br>      queue.RemoveAt(queue.Count - 1);<br>      for (int p10 = 1; p10 &lt;= cur; p10 *= 10)<br>        for (int q10 = 1; q10 &lt; p10; q10 *= 10)<br>        {<br>          int dp = (cur / p10) % 10;<br>          int dq = (cur / q10) % 10;<br>          if (dp &gt; 0 &amp;&amp; dq &gt; 0)<br>          {<br>            int next = cur - dp * p10 - dq * q10 + (dp - 1) * q10 + (dq - 1) * p10;<br>            if (!reachable[next])<br>            {<br>              reachable[next] = true;<br>              res = Math.Max(res, next);<br>              queue.Add(next);<br>            }<br>          }<br>        }<br>    }<br>    return res;<br>  }<br>  <br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>