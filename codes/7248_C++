<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br> <br>bool seen[11000000];<br>char buf[50];<br> <br>struct RemissiveSwaps {<br>  int findMaximum(int N) {<br>    int best = N;<br>    queue&lt;int&gt; q;<br>    q.push(N);<br> <br>    memset(seen, 0, sizeof(seen));<br> <br>    while (!q.empty()) {<br>      int x = q.front(); q.pop();<br>      seen[x] = true;<br> <br>      sprintf(buf, "%d", x);<br> <br>      for (int i = 0; buf[i]; i++) {<br>        if (buf[i] == '0') continue;<br>        for (int j = i+1; buf[j]; j++) {<br>          if (buf[j] == '0') continue;<br> <br>          buf[i]--; buf[j]--; swap(buf[i], buf[j]);<br>          int y = atoi(buf);<br>          if (!seen[y]) {<br>            seen[y] = true;<br>            q.push(y);<br>            best &gt;?= y;<br>          }<br> <br>          swap(buf[i], buf[j]); buf[i]++; buf[j]++;<br>        }<br>      }<br>    }<br> <br>    return best;    <br>  }<br>};<br></td>