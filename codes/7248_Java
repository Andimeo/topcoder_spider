<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br>import java.text.*;<br>import java.io.*;<br><br>public class RemissiveSwaps {<br>    public int findMaximum(int N) {<br>        boolean vis[] = new boolean[1000001];<br>        int q[] = new int[1000001];<br>        int sq = 0;<br>        int fq = 0;<br>        int a[] = new int[8];<br>        int res = 0;<br>        q[0] = N;<br>        while (sq &lt;= fq) {<br>          int i,j;<br>          int cur = q[sq];<br>          if (q[sq] &gt; res) res = q[sq];<br>          for (i = 0; i &lt; 7; i++) {<br>            a[i] = cur % 10;<br>            cur = cur / 10;<br>          }<br>          for (i = 0; i &lt; 7; i++) {<br>            for (j = i+1; j &lt; 7; j++) {<br>              if (a[i] &gt; 0 &amp;&amp; a[j] &gt; 0) {<br>                a[i]--;<br>                a[j]--;<br>                int buf = a[i];<br>                a[i] = a[j];<br>                a[j] = buf;<br>                int k;<br>                int rr = 0;<br>                int os = 1;<br>                for (k = 0; k &lt; 7; k++) {<br>                  rr = rr + a[k] * os;<br>                  os = os * 10;<br>                }<br>                if (!vis[rr]) {<br>                  vis[rr] = true;<br>                  fq++;<br>                  q[fq] = rr;<br>                }<br>                buf = a[i];<br>                a[i] = a[j];<br>                a[j] = buf;<br>                a[i]++;<br>                a[j]++;<br>              }<br>            }<br>          }<br>          sq++;<br>        }<br>        return res;<br>    }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>