<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br><br>public class EncodedSum {<br>    public long maximumSum(string[] numbers) {<br>        long iBest = 0;<br><br>        long[] iMult = new long[10];<br>        bool[] bZero = new bool[10];<br>        for (int i = 0; i &lt; 10; i++) {<br>            bZero[i] = true;<br>        }<br><br>        for (int i = 0; i &lt; numbers.Length; i++) {<br>            int iFirst = numbers[i][0] - 'A';<br>            bZero[iFirst] = false;<br>            for (int j = 0; j &lt; numbers[i].Length; j++) {<br>                int iNum = numbers[i][j] - 'A';<br>                long iVal = 1;<br>                for (int k = j; k &lt; numbers[i].Length-1; k++) {<br>                    iVal *= 10;<br>                }<br>                iMult[iNum] += iVal;<br>            }<br>        }<br><br>        int iLowZero = -1;<br>        long iLowest = long.MaxValue;<br>        for (int i = 0; i &lt; 10; i++) {<br>            if (bZero[i] &amp;&amp; iMult[i] &lt; iLowest) {<br>                iLowZero = i;<br>                iLowest = iMult[i];<br>            }<br>        }<br>        iMult[iLowZero] = 0;<br>        Array.Sort(iMult);<br>        long iRet = 0;<br>        for (int i = 0; i &lt; 10; i++) {<br>            iRet += i * iMult[i];<br>        }<br>        return iRet;<br><br><br>    }<br>}<br></td>