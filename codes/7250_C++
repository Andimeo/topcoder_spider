<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br> <br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;VI&gt; VVI;<br> <br>vector&lt;string&gt; Tokenize(string s, string ch) {<br>  vector&lt;string&gt; ret;<br>  for (int p = 0, p2; p &lt; s.size(); p = p2+1) {<br>    p2 = s.find_first_of(ch, p);<br>    if (p2 == -1) p2 = s.size();<br>    if (p2-p &gt; 0) ret.push_back(s.substr(p, p2-p));<br>  }<br>  return ret;<br>}<br> <br>vector&lt;int&gt; TokenizeInt(string s, string ch) {<br>  vector&lt;int&gt; ret;<br>  vector&lt;string&gt; p = Tokenize(s, ch);<br>  for( int i = 0; i &lt; p.size(); i++ )<br>    ret.push_back(atoi(p[i].c_str()));<br>  return ret;<br>}<br> <br>vector&lt;vector&lt;int&gt; &gt; TokenizeMatrix(vector&lt;string&gt; s, string ch) {<br>  vector&lt;vector&lt;int&gt; &gt; ret;<br>  for( int i = 0; i &lt; s.size(); i++ )<br>    ret.push_back( TokenizeInt(s[i], ch) );<br>  return ret;<br>}<br> <br>class LightsCube {<br>public:<br>vector &lt;int&gt; count(int N, vector &lt;string&gt; lights) {<br>  int i, j, k, x, y, z;<br>  vector &lt;int&gt; ret(lights.size());<br> <br>  VVI c = TokenizeMatrix(lights, " ");<br>  for (x = 0; x &lt; N; x++)<br>  for (y = 0; y &lt; N; y++)<br>  for (z = 0; z &lt; N; z++) {<br>    int d = 1000, best;<br>    for (i = 0; i &lt; c.size(); i++) {<br>      int curd = abs(x-c[i][0]) + abs(y-c[i][1]) + abs(z-c[i][2]);<br>      if (curd &lt; d) {<br>        d = curd;<br>        best = i;<br>      }<br>    }<br>    ret[best]++;<br>  }<br> <br>  return ret;<br>}<br> <br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>