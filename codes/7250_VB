<td class="problemText" colspan="8" valign="middle" align="left">
            imports System<br>imports Microsoft.VisualBasic<br>imports System.Collections<br>imports System.Text<br> <br> <br>Public Class LightsCube<br> <br>    Dim nn As Integer<br>    Dim l(,,,) As Integer<br> <br>    Public Function count(ByVal N As Integer, ByVal lights() As String) As Integer()<br>        nn = n<br>        ReDim l(1, N - 1, N - 1, N - 1)<br> <br>        Dim i As Integer, sp() As String<br>        For i = 0 To lights.Length - 1<br>            sp = Split(lights(i), " ")<br>            l(0, Val(sp(0)), Val(sp(1)), Val(sp(2))) = i + 1<br>        Next<br> <br>        Dim bDone As Boolean, cur As Integer, nex As Integer<br>        cur = 0<br>        nex = 1<br>        While Not bDone<br>            bDone = Not ProcessLights(cur, nex)<br>            If cur = 0 Then<br>                cur = 1<br>                nex = 0<br>            Else<br>                cur = 0<br>                nex = 1<br>            End If<br>        End While<br> <br>        Dim iRet(lights.Length - 1) As Integer<br>        Dim x, y, z As Integer<br>        For x = 0 To nn - 1<br>            For y = 0 To nn - 1<br>                For z = 0 To nn - 1<br>                    iRet(l(cur, x, y, z) - 1) += 1<br>                Next<br>            Next<br>        Next<br> <br>        Return iRet<br> <br>    End Function<br> <br>    Private Function ProcessLights(ByVal cur As Integer, ByVal nex As Integer) As Boolean<br>        Dim x, y, z As Integer<br>        Dim v, vv As Integer<br>        Dim bw As Boolean<br> <br>        For x = 0 To nn - 1<br>            For y = 0 To nn - 1<br>                For z = 0 To nn - 1<br> <br>                    If l(cur, x, y, z) = 0 Then<br>                        vv = 1000<br> <br>                        If (x &gt; 0) Then<br>                            v = l(cur, x - 1, y, z)<br>                            If v &lt;&gt; 0 And v &lt; vv Then vv = v<br>                        End If<br>                        If (x &lt; nn - 1) Then<br>                            v = l(cur, x + 1, y, z)<br>                            If v &lt;&gt; 0 And v &lt; vv Then vv = v<br>                        End If<br> <br>                        If (y &gt; 0) Then<br>                            v = l(cur, x, y - 1, z)<br>                            If v &lt;&gt; 0 And v &lt; vv Then vv = v<br>                        End If<br>                        If (y &lt; nn - 1) Then<br>                            v = l(cur, x, y + 1, z)<br>                            If v &lt;&gt; 0 And v &lt; vv Then vv = v<br>                        End If<br> <br>                        If (z &gt; 0) Then<br>                            v = l(cur, x, y, z - 1)<br>                            If v &lt;&gt; 0 And v &lt; vv Then vv = v<br>                        End If<br>                        If (z &lt; nn - 1) Then<br>                            v = l(cur, x, y, z + 1)<br>                            If v &lt;&gt; 0 And v &lt; vv Then vv = v<br>                        End If<br> <br>                        If vv &lt;&gt; 1000 Then<br>                            l(nex, x, y, z) = vv<br>                            bw = True<br>                        End If<br> <br>                    Else<br>                        l(nex, x, y, z) = l(cur, x, y, z)<br>                    End If<br> <br>                Next<br>            Next<br>        Next<br> <br>        Return bw<br>    End Function<br> <br>End Class<br></td>