<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class VolleyballTournament<br>{<br>  public string reconstructResults(int wonMatches, int lostMatches, int wonSets, int lostSets)<br>  {<br>    // Won Matches<br>    int N = wonMatches + lostMatches;<br>    int[] wins = new int[N];<br>    int[] lost = new int[N];<br>    <br>    for ( int i = 0; i &lt; wonMatches; i++ ) {<br>      wins[N-i-1] = 3;<br>      wonSets -= 3;<br>    }<br>    <br>    for ( int i = 0; i &lt; lostMatches; i++ ) {<br>      lost[i] = 3;<br>      lostSets -= 3;<br>    }<br>    <br>    while ( wonSets &gt; 0 ) {<br>      for ( int i = N - 1; i &gt;= 0; i-- ) {<br>        if ( wins[i] &lt; 2 ) {<br>          wins[i]++;<br>          wonSets--;<br>          break;<br>        }<br>      }<br>    }<br>    <br>    while ( lostSets &gt; 0 ) {<br>      for ( int i = N - 1; i &gt;= 0; i-- ) {<br>        if ( lost[i] &lt; 2 ) {<br>          lost[i]++;<br>          lostSets--;<br>          break;<br>        }<br>      }<br>    }<br> <br>    string ret = "";<br>    <br>    for ( int i = 0; i &lt; N; i++ ) {<br>      if ( i &gt; 0 )<br>        ret += ",";<br>      ret += wins[i] + "-" + lost[i];<br>    }<br>    <br>    if ( ret.IndexOf( "3-0" ) &gt;= 0 &amp;&amp; ret.IndexOf( "3-2" ) &gt;= 0 ) return "AMBIGUITY";<br>    if ( ret.IndexOf( "0-3" ) &gt;= 0 &amp;&amp; ret.IndexOf( "2-3" ) &gt;= 0 ) return "AMBIGUITY";<br>    <br>    return ret;<br>  }<br> <br> <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>