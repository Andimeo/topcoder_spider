<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>typedef long long __int64;<br> <br>class PrefixFreeSubsets<br>{<br>public:<br>  __int64 cantPrefFreeSubsets(vector &lt;string&gt; A)<br>  {<br>    int n=A.size();<br>    sort(A.begin(),A.end());<br>    __int64 f[60];<br>    f[n]=1;<br>    for (int i=n-1;i&gt;=0;i--)<br>    {<br>      f[i]=f[i+1];<br>      int k;<br>      for (k=i;k&lt;n;k++)<br>        if (A[k].find(A[i])!=0)<br>          break;<br>      f[i]+=f[k];<br>    }<br>    return f[0];<br>  }<br>};<br></td>