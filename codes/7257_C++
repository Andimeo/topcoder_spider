<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;iostream&gt;<br>#include&lt;vector&gt;<br>#include&lt;string&gt;<br>#include&lt;set&gt;<br>#include&lt;map&gt;<br>#include&lt;fstream&gt;<br>#include&lt;sstream&gt;<br>#include&lt;queue&gt;<br>#include&lt;cmath&gt;<br>using namespace std;   <br>#define FOR(i,A,N) for(int i=A;i&lt;N;++i)<br>#define REP(i,N) FOR(i,0,N)<br>string s;<br>void add(int i)<br>{<br>  if(s[i] == '9')<br>  {<br>    if(i==s.size()-1)<br>    {<br>      s += "1";<br>      s[i] = '0';<br>    }<br>    else<br>    {<br>      s[i] = '0';<br>      add(i+1);<br>    }<br>  }<br>  else<br>    s[i] = (char)((int)s[i] +1);<br>}  <br>class NextPalindromicNumber {<br>public:<br>  string getNext(string);<br>};<br> <br>string NextPalindromicNumber::getNext(string ss) {<br>s=ss;<br>  reverse(s.begin(),s.end());<br>    add(0);<br>    int l = s.size();<br>    for(int i=0; i&lt;l/2; i++)<br>    {<br>      if(s[i]==s[l-i-1])<br>        continue;<br>      else if(s[i] &lt; s[l-i-1])<br>        s[i] = s[l-i-1];<br>      else<br>      {<br>        add(i+1);<br>        s[i] = s[l-i-1];<br>      }<br>    }<br>    return s;<br>}<br></td>