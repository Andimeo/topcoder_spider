<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Text.RegularExpressions;<br>using System.Collections;<br>using System.Collections.Generic;<br><br>public class CarParking {<br>    private bool isPalindrom(string s)<br>    {<br>        int i = 0;<br>        int j = s.Length - 1;<br>        while (i &lt;= j)<br>        {<br>            if (s[i] != s[j])<br>                return false;<br>            ++i;<br>            --j;<br>        }<br>        return true;<br>    }<br>    public int closestShed(int now, int streets)<br>    {<br>        int d1 = int.MaxValue, d2 = int.MaxValue;<br>        for (int i = now ; i &lt;= streets &amp;&amp; i &gt; 0; ++i)<br>        {<br>            if (isPalindrom(i.ToString()))<br>            {<br>                d1 = i - now;<br>                break;<br>            }<br>        }<br>        for (int i = now; i &gt;= 1 &amp;&amp; i &gt; 0; --i)<br>        {<br>            if (isPalindrom(i.ToString()))<br>            {<br>                d2 =  now-i;<br>                break;<br>            }<br>        }<br>        if (d1 &lt; d2)<br>        {<br>            return now+d1;<br>        }<br>        else<br>        {<br>            return now-d2;<br>        }<br>    }<br><br>    #region test_region<br>    #endregion  test_region<br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>