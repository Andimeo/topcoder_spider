<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br><br>public class TableLabel {<br>  public string[] labels(string[] table) {<br>    int height = table.Length;<br>    int width = table[0].Split(new char[] {' '}, StringSplitOptions.RemoveEmptyEntries).Length;<br>    string[,] data = new string[height, width];<br>    for (int row = 0; row &lt; height; ++row)<br>    {<br>      string[] p = table[row].Split(new char[] {' '}, StringSplitOptions.RemoveEmptyEntries);<br>      for (int col = 0; col &lt; width; ++col)<br>        data[row, col] = p[col];<br>    }<br><br>    string[] rrowLabels = null;<br>    string[] rcolLabels = null;<br>    <br>    for (int len = 1; len &lt;= data[0, 0].Length - 1; ++len)<br>    {<br>      string[] rowLabels = new string[height];<br>      string[] colLabels = new string[width];<br>      string prefix = data[0, 0].Substring(0, len);<br>      bool ok = true;<br>      for (int col = 0; col &lt; width; ++col)<br>      {<br>        if (data[0, col].Length &lt;= len || data[0, col].Substring(0, len) != prefix)<br>        {<br>          ok = false;<br>          break;<br>        }<br>        colLabels[col] = data[0, col].Substring(len);<br>      }<br>      if (ok)<br>      {<br>        string suffix = colLabels[0];<br>        for (int row = 0; row &lt; height; ++row)<br>        {<br>          if (data[row, 0].Length &lt;= suffix.Length || data[row, 0].Substring(data[row, 0].Length - suffix.Length, suffix.Length) != suffix)<br>          {<br>            ok = false;<br>            break;<br>          }<br>          rowLabels[row] = data[row, 0].Substring(0, data[row, 0].Length - suffix.Length);<br>        }<br>        if (ok)<br>        {<br>          for (int row = 0; row &lt; height; ++row)<br>            if (rowLabels[row].Length == 0)<br>              ok = false;<br>          for (int col = 0; col &lt; width; ++col)<br>            if (colLabels[col].Length == 0)<br>              ok = false;<br>          for (int row = 0; row &lt; height; ++row)<br>          {<br>            for (int col = 0; col &lt; width; ++col)<br>              if (rowLabels[row] + colLabels[col] != data[row, col])<br>              {<br>                ok = false;<br>                break;<br>              }<br>            if (!ok)<br>              break;<br>          }<br>          if (ok)<br>          {<br>            if (rrowLabels != null)<br>              return new string[]{"multiple"};<br>            rrowLabels = rowLabels;<br>            rcolLabels = colLabels;<br>          }<br>        }<br>      }<br>    }<br>    <br>    if (rrowLabels == null)<br>      return new string[]{"none"};<br>    else<br>    {<br>      List&lt;string&gt; l = new List&lt;string&gt;();<br>      l.AddRange(rcolLabels);<br>      l.AddRange(rrowLabels);<br>      return l.ToArray();<br>    }<br>  }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>