<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;sstream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br><br>using namespace std;<br><br>typedef long long ll;<br>typedef pair&lt;int,int&gt; pii;<br>typedef pair&lt;double,double&gt; pdd;<br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;string&gt; vs;<br>typedef map&lt;string,int&gt; msi;<br><br>int H, W;<br>string tbl[100][100];<br>string clab[100], rlab[100];<br><br>struct TableLabel {<br>   vector &lt;string&gt; labels(vector &lt;string&gt; table) {<br>     H = table.size();<br>     for (int i = 0; i &lt; H; ++i) {<br>       istringstream in(table[i]);<br>       string s;<br>       W = 0; <br>       while (in &gt;&gt; s) tbl[i][W++] = s;<br>     }<br>     vs res;<br>     for (int x = 1; ; ++x) {<br>       for (int j = 0; j &lt; W; ++j) {<br>   if (tbl[0][j].length() &lt;= x) goto done;<br>   clab[j] = tbl[0][j].substr(x);<br>       }<br>       for (int j = 0; j &lt; H; ++j) {<br>   if (tbl[j][0].length() &lt;= clab[0].length()) goto bad;<br>   else rlab[j] = tbl[j][0].substr(0, tbl[j][0].length() - clab[0].length());<br>       }<br>       for (int i = 0; i &lt; H; ++i)<br>   for (int j = 0; j &lt; W; ++j)<br>     if (tbl[i][j] != rlab[i] + clab[j]) goto bad;<br>       if (res.empty()) {<br>   for (int i = 0; i &lt; W; ++i)<br>     res.push_back(clab[i]);<br>   for (int i = 0; i &lt; H; ++i)<br>     res.push_back(rlab[i]);<br>       } else {<br>   res.clear();<br>   res.push_back("multiple");<br>   break;<br>       }<br>     bad:;<br>     }<br>   done:<br>     if (res.empty()) res.push_back("none");<br>     return res;<br>   }<br><br>};<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>