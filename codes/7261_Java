<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class ChristmasTree<br>{<br>  int[] a;<br>  long res;<br>  long NN;<br>  int[] f;<br>  <br>  public long seek(int n)<br>  {<br>    if (n&gt;NN) return 1;<br>    long res2 = 0;<br>    //<br>    //          System.out.println(n);<br>        <br>  //            for (int y=0; y&lt;3; y++)<br>//          System.out.println(a[y]);                  <br> <br>    for (int t=1; t&lt;=3; t++)<br>      if ((n%t)==0)<br>        {<br>          if (t==1)<br>            {<br>              for (int i=0; i&lt;3; i++)<br>              if (a[i]&gt;=(n/t))<br>              {<br>                a[i]-=n/t;<br>                res2 += seek(n+1);<br>                a[i]+=n/t;<br>              }              <br>            }<br>          if (t==2)<br>            {<br>              for (int i=0; i&lt;3; i++)<br>              if (a[i]&gt;=(n/t))<br>                for (int j=i+1; j&lt;3; j++)<br>                if (j!=i)<br>                if (a[j]&gt;=(n/t))<br>              {<br>        <br>                a[i]-=n/t;<br>                a[j]-=n/t;<br>                res2 += f[n]/(f[n/t]*f[n/t])*seek(n+1);<br>                a[i]+=n/t;<br>                a[j]+=n/t;<br> <br>              }                  <br>            }<br>          if (t==3)<br>            {<br>              for (int i=0; i&lt;3; i++)<br>              if (a[i]&gt;=(n/t))<br>                for (int j=i+1; j&lt;3; j++)<br>                if (a[j]&gt;=(n/t))<br>                for (int k=j+1; k&lt;3; k++)<br>                if (a[k]&gt;=(n/t))<br>                {<br>                a[i]-=n/t;<br>                a[j]-=n/t;<br>                a[k]-=n/t;                <br>                res2 += f[n]/(f[n/t]*f[n/t]*f[n/t])*seek(n+1);<br>                a[i]+=n/t;<br>                a[j]+=n/t;<br>                a[k]+=n/t;                <br>                }                  <br>            }            <br>        }<br>//              System.out.println(res2);                                        <br>//              System.out.println("   ");                      <br>    return res2;<br>  }<br>  <br>  public long decorationWays(int N, int red, int green, int blue)<br>  {<br>    a = new int[3];<br>    f = new int[12];<br>    f[1] = 1;<br>    for (int u=2; u&lt;=11; u++)<br>      {<br>      f[u] = u*f[u-1];<br> <br>      }<br>      <br>    <br>    a[0] = red;<br>    a[1] = green;<br>    a[2] = blue;<br>    NN = N;<br>    res = 0;<br>    for (int i=0; i&lt;3; i++)<br>    if (a[i]&gt;0)<br>      {<br>        a[i]--;<br>        long fff = seek(2);<br>//        System.out.println(fff);        <br>        res += fff;<br>        a[i]++;<br>      }<br>    return res;<br>  }<br>  <br>  <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>