<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>//typedef long long __int64;<br> <br>class HiddenSquares<br>{<br>public:<br>  int n;<br>  int A[110][110],B[110][110];<br>  int IDX[110],IDY[110];<br>  void initp(vector&lt;int&gt; &amp;x1,vector&lt;int&gt; &amp;x2,int ID[])<br>  {<br>    for (int k=0;k&lt;110;k++)<br>      ID[k]=-1;<br>    set&lt;int&gt; M;<br>    M.clear();<br>    int i;<br>    for (i=0;i&lt;x1.size();i++)<br>      M.insert(x1[i]);<br>    for (i=0;i&lt;x2.size();i++)<br>      M.insert(x2[i]);<br>    map&lt;int,int&gt; MS;<br>    MS.clear();<br>    int c=1;<br>    for (set&lt;int&gt;::iterator it=M.begin();it!=M.end();++it,c++)<br>    {<br>      ID[c]=*it;<br>      MS[*it]=c;<br>    }<br>    for (i=0;i&lt;x1.size();i++)<br>      x1[i]=MS[x1[i]];<br>    for (i=0;i&lt;x2.size();i++)<br>      x2[i]=MS[x2[i]];<br>  }<br>  int count(vector &lt;int&gt; x1, vector &lt;int&gt; y1, vector &lt;int&gt; x2, vector &lt;int&gt; y2)<br>  {<br>    int i,j;<br>    n=x1.size()*2;<br>    initp(x1,x2,IDX);<br>    initp(y1,y2,IDY);<br>    memset(A,0,sizeof(A));<br>    memset(B,0,sizeof(B));<br>    for (i=0;i&lt;x1.size();i++)<br>    {<br>      int sX=x1[i],sY=y1[i];<br>      int tX=x2[i],tY=y2[i];<br>      int k;<br>      for (k=sY;k&lt;tY;k++)<br>        A[sX][k]=A[tX][k]=1;<br>      for (k=sX;k&lt;tX;k++)<br>        B[k][sY]=B[k][tY]=1;<br>    }<br>    for (i=n;i&gt;0;i--)<br>      for (j=n;j&gt;0;j--)<br>      {<br>        A[i][j]=(A[i][j]==0)?0:(1+A[i][j+1]);<br>        B[i][j]=(B[i][j]==0)?0:(1+B[i+1][j]);<br>      }<br>    int result=0;<br>    for (i=1;i&lt;=n;i++)<br>      for (j=1;j&lt;=n;j++)<br>        for (int u=i+1;u&lt;=n;u++)<br>          for (int v=j+1;v&lt;=n;v++) if (IDX[u]!=-1 &amp;&amp; IDY[v]!=-1)<br>            if (IDX[u]-IDX[i]==IDY[v]-IDY[j])<br>            {<br>              if (A[i][j]&gt;=v-j &amp;&amp; A[u][j]&gt;=v-j &amp;&amp; B[i][j]&gt;=u-i &amp;&amp; B[i][v]&gt;=u-i)<br>                result++;<br>            }<br>    return result;<br>  }<br>};<br></td>