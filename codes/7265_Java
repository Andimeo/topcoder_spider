<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class HiddenSquares<br>{<br>  public int count(int[] x1, int[] y1, int[] x2, int[] y2)<br>  {<br>    int[][] vertSeg = new int[x1.length*2][3];<br>    for (int i=0; i&lt;x1.length; i++)<br>    {<br>      vertSeg[i][0] = x1[i];<br>      vertSeg[i+x1.length][0] = x2[i];<br>      vertSeg[i][1] = vertSeg[i+x1.length][1] = y1[i];<br>      vertSeg[i][2] = vertSeg[i+x1.length][2] = y2[i];<br>    }<br>    <br>    int[][] horzSeg = new int[x1.length*2][3];<br>    for (int i=0; i&lt;x1.length; i++)<br>    {<br>      horzSeg[i][0] = y1[i];<br>      horzSeg[i+x1.length][0] = y2[i];<br>      horzSeg[i][1] = horzSeg[i+x1.length][1] = x1[i];<br>      horzSeg[i][2] = horzSeg[i+x1.length][2] = x2[i];<br>    }<br>    Comparator&lt;int[]&gt; comp = new Comparator&lt;int[]&gt;()<br>    {<br>      public int compare(int[] a, int[] b)<br>      {<br>        for (int i=0; i&lt;3; i++)<br>          if (a[i] != b[i])<br>            return a[i]-b[i];<br>        return 0;<br>      }<br>    };<br>    Arrays.sort(vertSeg, comp);<br>    Arrays.sort(horzSeg, comp);<br>    ArrayList&lt;int[]&gt; vert = unique(vertSeg);<br>    ArrayList&lt;int[]&gt; horz = unique(horzSeg);<br>    int count = 0;<br>    for (int[] vert1 : vert)<br>      for (int[] vert2 : vert)<br>        if (vert1[0] &lt; vert2[0])<br>          for (int[] horz1 : horz)<br>            if (horz1[0] &gt;= vert1[1] &amp;&amp; horz1[0] &gt;= vert2[1] &amp;&amp; horz1[0] &lt;= vert1[2] &amp;&amp; horz1[0] &lt;= vert2[2] &amp;&amp; horz1[1] &lt;= vert1[0] &amp;&amp; horz1[2] &gt;= vert2[0])<br>              for (int[] horz2 : horz)<br>                if (horz1[0] &lt; horz2[0] &amp;&amp; horz2[0] &gt;= vert1[1] &amp;&amp; horz2[0] &gt;= vert2[1] &amp;&amp; horz2[0] &lt;= vert1[2] &amp;&amp; horz2[0] &lt;= vert2[2] &amp;&amp; horz2[1] &lt;= vert1[0] &amp;&amp; horz2[2] &gt;= vert2[0] &amp;&amp; horz2[0]-horz1[0] == vert2[0]-vert1[0])<br>                  count++;<br>    return count;<br>              <br>  }<br>  <br>  public ArrayList&lt;int[]&gt; unique(int[][] segs)<br>  {<br>    ArrayList&lt;int[]&gt; ret = new ArrayList&lt;int[]&gt;();<br>    ret.add(segs[0]);<br>    for (int i=1; i&lt;segs.length; i++)<br>    {<br>      if (ret.get(ret.size()-1)[0] == segs[i][0] &amp;&amp; segs[i][1] &lt;= ret.get(ret.size()-1)[2])<br>        ret.get(ret.size()-1)[2] = Math.max(ret.get(ret.size()-1)[2], segs[i][2]);<br>      else<br>        ret.add(segs[i]);<br>    }<br>    return ret;<br>  }<br>  <br>  <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>