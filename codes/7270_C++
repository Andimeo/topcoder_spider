<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br> <br>using namespace std;<br><br>vector&lt;int&gt; stovi(string s)<br>{<br>  vector&lt;int&gt; vi;<br>  int p;<br>  string s1;<br>  vi.clear();<br>  s+=" ";<br>  while ((s.length()&gt;0)&amp;&amp;(s[0]==' ')) s.erase(0,1);<br>  while (s!="")<br>  {<br>    p=s.find_first_of(' ');<br>    s1=s.substr(0,p);<br>    s.erase(0,p+1);<br>    while ((s.length()&gt;0)&amp;&amp;(s[0]==' ')) s.erase(0,1);<br>    vi.push_back(atoi(s1.c_str()));<br>  }<br>  return vi;<br>}<br><br>vector&lt;vector&lt;int&gt; &gt; vstovvi(vector&lt;string&gt; vs)<br>{<br>  int i,n;<br>  vector&lt;vector&lt;int&gt; &gt; vvi;<br>  n=vs.size();<br>  vvi.clear();<br>  for (i=0;i&lt;n;i++)<br>    vvi.push_back(stovi(vs[i]));<br>  return vvi;<br>}<br><br>pair&lt;int,int&gt; makepair(int x,int y)<br>{<br>  pair&lt;int,int&gt; p;<br>  p.first=x;<br>  p.second=y;<br>  return p;<br>}<br><br>int a[100][100];<br>char used[100][100];<br>int zhan[10000][2];<br>int neigh[4][2]={{0,1},{1,0},{0,-1},{-1,0}};<br><br>class SwampyLands<br>{<br>public:<br>int surroundedArea(vector &lt;string&gt; swampy)<br>{<br>  vector&lt;vector&lt;int&gt; &gt; a1;<br>  vector&lt;int&gt; x,y;<br>  int i,j,k,n,xx,yy,top,bottom,tot,b1;<br>  a1=vstovvi(swampy);<br>  n=a1.size();<br>  x.clear();<br>  y.clear();<br>  for (i=0;i&lt;n;i++)<br>  {<br>    x.push_back(a1[i][0]);<br>    y.push_back(a1[i][1]);<br>    x.push_back(a1[i][2]);<br>    y.push_back(a1[i][3]);<br>  }<br>  sort(x.begin(),x.end());<br>  sort(y.begin(),y.end());<br>  memset(a,0,sizeof(a));<br>  for (i=0;i&lt;x.size()-1;i++)<br>    for (j=0;j&lt;y.size()-1;j++)<br>    {<br>      b1=0;<br>      for (k=0;k&lt;n;k++)<br>      {<br>        if ((a1[k][0]&lt;=x[i])&amp;&amp;(x[i+1]&lt;=a1[k][2])&amp;&amp;(a1[k][1]&lt;=y[j])&amp;&amp;(y[j+1]&lt;=a1[k][3]))<br>        {<br>          b1=1;break;<br>        }<br>      }<br>      if (b1==1) a[i][j]=1;<br>    }<br>  top=0;bottom=0;<br>  for (i=0;i&lt;x.size()-1;i++)<br>  {<br>    if (a[i][0]==0)<br>    {<br>      a[i][0]=-1;<br>      zhan[bottom][0]=i;<br>      zhan[bottom][1]=0;<br>      bottom++;<br>    }<br>    if (a[i][y.size()-2]==0)<br>    {<br>      a[i][y.size()-2]=-1;<br>      zhan[bottom][0]=i;<br>      zhan[bottom][1]=y.size()-2;<br>      bottom++;<br>    }<br>  }<br>  for (i=0;i&lt;y.size()-1;i++)<br>  {<br>    if (a[0][i]==0)<br>    {<br>      a[0][i]=-1;<br>      zhan[bottom][0]=0;<br>      zhan[bottom][1]=i;<br>      bottom++;<br>    }<br>    if (a[x.size()-2][i]==0)<br>    {<br>      a[x.size()-2][i]=-1;<br>      zhan[bottom][0]=x.size()-2;<br>      zhan[bottom][1]=i;<br>      bottom++;<br>    }<br>  }<br>  while (top&lt;bottom)<br>  {<br>    for (i=0;i&lt;4;i++)<br>    {<br>      xx=zhan[top][0]+neigh[i][0];<br>      yy=zhan[top][1]+neigh[i][1];<br>      if ((xx&gt;=0)&amp;&amp;(xx&lt;x.size()-1)&amp;&amp;(yy&gt;=0)&amp;&amp;(yy&lt;y.size()-1))<br>        if (a[xx][yy]==0)<br>        {<br>          a[xx][yy]=-1;<br>          zhan[bottom][0]=xx;<br>          zhan[bottom][1]=yy;<br>          bottom++;<br>        }<br>    }<br>    top++;<br>  }<br>  tot=0;<br>  for (i=0;i&lt;x.size()-1;i++)<br>    for (j=0;j&lt;y.size()-1;j++)<br>      if (a[i][j]==0)<br>      {<br>        tot+=(x[i+1]-x[i])*(y[j+1]-y[j]);<br>      }<br>  return tot;<br>}<br>};<br></td>