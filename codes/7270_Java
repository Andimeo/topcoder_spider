<td class="problemText" colspan="8" valign="middle" align="left">
            /*<br>*/<br>import java.util.*;<br>public class SwampyLands {<br>    int nx, ny;<br>   int[] x, y;<br>   int[][] a;<br>   int[][] c;<br>   int[][] d;<br>   <br>   public void dfs(int x, int y)<br>   {<br>     d[x][y] = 1;<br>    if (x-1 &gt;= 0 &amp;&amp; d[x-1][y]==0) dfs(x-1, y);<br>    if (x+1 &lt; nx-1 &amp;&amp; d[x+1][y]==0) dfs(x+1, y);<br>    if (y-1 &gt;= 0 &amp;&amp; d[x][y-1]==0) dfs(x, y-1);<br>    if (y+1&lt;ny-1 &amp;&amp; d[x][y+1]==0) dfs(x, y+1);<br>   }<br>   <br>    public int surroundedArea(String[] st) {<br>        int res = 0;<br>      int n = st.length;<br>      x = new int[n*2];<br>      y = new int[n*2];<br>      nx = 0;<br>      ny = 0;<br>      a = new int[n][4];<br>      for (int i=0; i&lt;n; i++)<br>      {<br>        Scanner sc = new Scanner(st[i]);<br>       for (int j=0; j&lt;4; j++) a[i][j] = sc.nextInt();       <br>      }<br>      <br>      for (int i=0; i&lt;n; i++)<br>      {<br>        x[nx++] = a[i][0];<br>       x[nx++] = a[i][2];<br>       y[ny++] = a[i][1];<br>       y[ny++] = a[i][3];<br>      }<br>      <br>      Arrays.sort(x);<br>      Arrays.sort(y);<br>      d = new int[nx][ny];  <br>      c = new int[nx][ny];   <br>      /*for (int i=0; i&lt;nx; i++) System.out.println(x[i]);<br>      System.out.println();<br>      for (int i=0; i&lt;ny; i++) System.out.println(y[i]);*/<br>      <br>      for (int i=0; i&lt;nx-1; i++)<br>        for (int j=0; j&lt;ny-1; j++)<br>       {<br>         c[i][j] = (x[i+1]-x[i])*(y[j+1]-y[j]);<br>         for (int u=0; u&lt;n; u++)<br>        {<br>          if (x[i]&gt;=a[u][0] &amp;&amp; x[i+1]&lt;=a[u][2] &amp;&amp; y[j]&gt;=a[u][1] &amp;&amp; y[j+1]&lt;=a[u][3] )<br>          {<br>            d[i][j] = 1;         <br>           break;<br>          }<br>        }<br>       }<br>       <br>      /*for (int i=0; i&lt;nx-1; i++)<br>        for (int j=0; j&lt;ny-1; j++)<br>         if (d[i][j]==0) System.out.println(i+ " " + j + " " + c[i][j]);*/<br>       <br>      for (int i=0; i&lt;nx-1; i++)<br>      {<br>        if (d[i][0]==0) dfs(i, 0);<br>       if (d[i][ny-1]==0) dfs(i, ny-1);<br>      }<br>      <br>      for (int j=0; j&lt;ny-1; j++)<br>      {<br>        if (d[0][j]==0) dfs(0, j);<br>       if (d[ny-1][j]==0) dfs(ny-1, j);<br>      }<br>      <br>      for (int i=0; i&lt;nx-1; i++)<br>        for (int j=0; j&lt;ny-1; j++)<br>         if (d[i][j]==0) res+=c[i][j];<br>      <br>        return res;<br>    }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>