<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;cctype&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br>#include &lt;list&gt;<br>#include &lt;string&gt;<br>#include &lt;iostream&gt;<br>#include &lt;map&gt;<br>#include &lt;stack&gt;<br>#include &lt;sstream&gt;<br> <br>using namespace std;<br> <br>typedef vector&lt;int&gt; vi ;<br>typedef vector&lt;string&gt; vs ;<br>typedef vector&lt;double&gt; vd ;<br>#define PB push_back<br>#define ll long long<br>#define For(i,n) for (i = 0 ; i &lt; n ; i ++)<br>#define bend(v) v.begin (), v.end ()<br>vs split (string s, string delim = " ") {vs res; string t; unsigned int i ; For (i, s.size ()) {if (delim.find (s [i]) != string::npos) {if (! t.empty ()) {res.PB (t); t = "" ;}} else {t += s [i] ; }} if (! t.empty ()) {res.PB (t) ;} return res ;}<br> <br>// 7an7ot 3aleehom ya monnn<br> <br>class Palindromize {<br>public:<br>  string minAdds(string);<br>};<br> <br>bool ispal (string s)<br>{<br>  int i ;<br>  int n = s.size () ;<br>  For (i, n / 2)<br>  {<br>    if (s [i] != s [n - i - 1]) return false ;<br>  }<br>  return true ;<br>}<br> <br>string Palindromize::minAdds(string s) {<br>  string t, ret ;<br>  while (! ispal (s))<br>  {<br>    t += s [0] ;<br>    s.erase (s.begin ()) ;<br>  }<br>  ret = t + s ;<br>  reverse (bend (t)) ;<br>  ret += t ;<br>  return ret ;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br>//7an7ot 3aleehom ya Monnn<br></td>