<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;ctime&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br><br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;iostream&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;utility&gt;<br>#include &lt;vector&gt;<br><br>using namespace std; <br> <br> class GoodAndBadPostmen { <br> public: <br>    vector &lt;int&gt; whoIsWho( vector &lt;string&gt; white, vector &lt;string&gt; black ) { <br>     set&lt;string&gt; good;<br>     set&lt;string&gt; bad;<br>     set&lt;string&gt; und;<br><br>     for( int i = 0; i &lt; white.size(); ++i ) {<br>        istringstream IN( white[i] );<br>        for( string t; IN &gt;&gt; t; ) <br>            good.insert( t );<br>     }<br><br>     for( int i = 0; i &lt; black.size(); ++i ) {<br>        vector&lt;string&gt; V;<br>        istringstream IN( black[i] );<br>        for( string t; IN &gt;&gt; t; ) V.push_back( t );<br>        <br>        int ok = 0;<br>        for( int i = 0; i &lt; V.size(); ++i )<br>            if( good.find( V[i] ) != good.end() ) ++ok;<br>        for( int i = 0; i &lt; V.size(); ++i ) <br>            if( good.find( V[i] ) == good.end() ) {<br>                if( ok + 1 == V.size() ) bad.insert( V[i] );<br>                else                     und.insert( V[i] );<br>            }<br>     }<br><br>     vector&lt;int&gt; ret;<br>     ret.push_back( good.size() );<br>     ret.push_back( bad.size() );<br>     for( set&lt;string&gt; :: iterator it = bad.begin(); it != bad.end(); ++it ) und.erase( *it );<br>     ret.push_back( und.size() );<br>     return ret;<br>   } <br>     <br>   <br>  <br> }; <br> <br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>