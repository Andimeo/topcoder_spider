<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class TooManyBugs {<br>public:<br>  int bestBugFixing(vector &lt;string&gt;);<br>};<br> <br>struct bug {<br>  int value, fixtime;<br>};<br> <br>bool operator &lt; ( const bug &amp;a, const bug &amp;b ) { return a.value &gt; b.value; }<br> <br>int n, m;<br>int worktime[50], used[50];<br>bug bugs[50];<br> <br>int TooManyBugs::bestBugFixing(vector &lt;string&gt; info) {<br>  n = m = 0;<br> <br>  for( int i = 0; i &lt; info.size(); ++i ) {<br>    istringstream strin( info[i] );<br>    int u, v;<br>    <br>    strin &gt;&gt; u;<br>    if( strin &gt;&gt; v ) {<br>      bugs[m].value = u;<br>      bugs[m].fixtime = v;<br>      ++m;<br>    } else {<br>      worktime[n++] = u;<br>    }<br>  }<br>  <br>  sort( worktime, worktime + n );<br>  sort( bugs, bugs + m );<br>  <br>  memset( used, 0, sizeof used );<br>  <br>  int sum = 0;<br>  <br>  for( int i = 0; i &lt; m; ++i ) {<br>    int j = 0;<br>    while( j &lt; n ) {<br>      if( !used[j] &amp;&amp; worktime[j] &gt;= bugs[i].fixtime ) break;<br>      ++j;<br>    }<br>    if( j &lt; n ) {<br>      used[j] = 1;<br>      sum += bugs[i].value;<br>    }<br>  }<br>  <br>  return sum;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>