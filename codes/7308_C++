<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br><br>using namespace std;<br><br>class MoreBlack {<br>  public:<br>  <br>  char data[50][50];<br>  int n,m,odd,even;<br>  <br>  void dfs (int i, int j) {<br>    <br>    data[i][j] = 'Q';<br>    if ((i^j)&amp;1)<br>      odd ++;<br>    else<br>      even ++;<br>    if (i - 1 &gt;= 0 &amp;&amp; data[i-1][j] == '#')<br>      dfs(i-1,j);<br>    if (j - 1 &gt;= 0 &amp;&amp; data[i][j-1] == '#')<br>      dfs(i,j-1);<br>    if (i + 1 &lt; n &amp;&amp; data[i+1][j] == '#')<br>      dfs(i+1,j);<br>    if (j + 1 &lt; m &amp;&amp; data[i][j+1] == '#')<br>      dfs(i,j+1);<br>    }<br><br>  void dfsODD (int i, int j) {<br>    <br>    if ((i^j)&amp;1)<br>      data[i][j] = 'b';<br>    else<br>      data[i][j] = 'w';<br>    if (i - 1 &gt;= 0 &amp;&amp; data[i-1][j] == 'Q')<br>      dfsODD(i-1,j);<br>    if (j - 1 &gt;= 0 &amp;&amp; data[i][j-1] == 'Q')<br>      dfsODD(i,j-1);<br>    if (i + 1 &lt; n &amp;&amp; data[i+1][j] == 'Q')<br>      dfsODD(i+1,j);<br>    if (j + 1 &lt; m &amp;&amp; data[i][j+1] == 'Q')<br>      dfsODD(i,j+1);<br>    }<br>  <br>  void dfsEVEN (int i, int j) {<br>    <br>    if ((i^j)&amp;1)<br>      data[i][j] = 'w';<br>    else<br>      data[i][j] = 'b';<br>    if (i - 1 &gt;= 0 &amp;&amp; data[i-1][j] == 'Q')<br>      dfsEVEN(i-1,j);<br>    if (j - 1 &gt;= 0 &amp;&amp; data[i][j-1] == 'Q')<br>      dfsEVEN(i,j-1);<br>    if (i + 1 &lt; n &amp;&amp; data[i+1][j] == 'Q')<br>      dfsEVEN(i+1,j);<br>    if (j + 1 &lt; m &amp;&amp; data[i][j+1] == 'Q')<br>      dfsEVEN(i,j+1);<br>    }<br>  <br>  vector &lt;string&gt; color(vector &lt;string&gt; b) {<br>    int i,j;<br>    <br>    n = b.size();<br>    m = b[0].size();<br>    for (i = 0; i &lt; n; i ++)<br>      for (j = 0; j &lt; m; j ++)<br>        data[i][j] = b[i][j];<br>    for (i = 0; i &lt; n; i ++)<br>      for (j = 0; j &lt; m; j ++)<br>        if (data[i][j] == '#') {<br>          odd = even = 0;<br>          dfs(i,j);<br>          if ((i^j)&amp;1) {<br>            if (odd &gt;= even)<br>              dfsODD(i,j);<br>            else<br>              dfsEVEN(i,j);<br>            }<br>          else {<br>            if (odd &gt; even)<br>              dfsODD(i,j);<br>            else<br>              dfsEVEN(i,j);<br>            }<br>          }<br>    for (i = 0; i &lt; n; i ++)<br>      for (j = 0; j &lt; m; j ++)<br>        b[i][j] = data[i][j];<br>    return b;<br>    }<br>  };<br></td>