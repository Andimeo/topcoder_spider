<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br>using System.Text;<br><br>public class KingMovement<br>{<br>    int x;<br>    int y;<br>    int stoneX;<br>    int stoneY;<br>    public string finalPosition(string startPosition, string stonePosition, string[] moves)<br>    {<br>        x = startPosition.Substring(0, 1).ToCharArray()[0] - 64;<br>        y = int.Parse(startPosition.Substring(1, 1));<br><br>        stoneX = stonePosition.Substring(0, 1).ToCharArray()[0] - 64;<br>        stoneY = int.Parse(stonePosition.Substring(1, 1));<br><br>        foreach (string move in moves)<br>        {<br>            switch (move)<br>            {<br>                case "R":<br>                    Move(1, 0);<br>                    break;<br>                case "L":<br>                    Move(-1,0);<br>                    break;<br>                case "B":<br>                    Move(0, -1);<br>                    break;<br>                case "T":<br>                    Move(0,1);<br>                    break;<br>                case "RT":<br>                    Move(1, 1);<br>                    break;<br>                case "LT":<br>                    Move(-1, 1);<br>                    break;<br>                case "RB":<br>                    Move(1, -1);<br>                    break;<br>                case "LB":<br>                    Move(-1, -1);<br>                    break;                  <br>            }<br><br>        }<br>        return "" + (char)(x + 64) + y + "," + (char)(stoneX + 64) + stoneY;<br><br>    }<br><br>    private void Move(int a, int b)<br>    {<br>        if (IsNextStone(a, b))<br>        {<br>            if (Valid(x + a, y + b) &amp;&amp; Valid(stoneX + a, stoneY + b))<br>            {<br>                x += a;<br>                y += b;<br>                stoneX += a;<br>                stoneY += b;<br>            }<br>        }<br>        else<br>        {<br>            if (Valid(x + a, y + b))<br>            {<br>                x += a;<br>                y += b;<br>            }<br>        }<br>    }<br>    private bool Valid(int x,int y)<br>    {<br>        if (x &gt;= 1 &amp;&amp; x &lt;= 8 &amp;&amp; y &gt;= 1 &amp;&amp; y &lt;= 8)<br>        {<br>            return true;<br>        }<br>        return false;<br>    }<br><br>    private bool IsNextStone(int a, int b)<br>    {<br>        if (x + a == stoneX &amp;&amp; y + b == stoneY)<br>        {<br>            return true;<br>        }<br>        return false;<br>    }<br>    <br>}<br></td>