<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br><br>using namespace std;<br><br>typedef long long int64;<br>typedef unsigned long long uint64;<br>#define two(X) (1&lt;&lt;(X))<br>const double pi=acos(-1.0);<br><br>class Destruction<br>{<br>public:<br>  bool vis[105][105],vis2[105][105];<br>  double f[105][105],f2[105][105];<br>  double solve(int n,int m)<br>  {<br>    if (vis[n][m]) return f[n][m];<br>    vis[n][m]=true;<br>    double &amp;ret=f[n][m];<br>    if (n==0 || m==0) return ret=0.5;<br>    double t1=solve(n-1,m);<br>    double t2=solve(n-1,m-1);<br>    double r=t1/(t1+t2);<br>    return ret=r*t2;<br>  }<br>  double solve2(int n,int m)<br>  {<br>    if (vis2[n][m]) return f2[n][m];<br>    vis2[n][m]=true;<br>    double &amp;ret=f2[n][m];<br>    if (n==1) return 0.5;<br>    double t1=solve2(n-1,m);<br>    double t2=solve(n-1,m-1);<br>    double r=t1/(t1+t2);<br>    return ret=r*t2;<br>  }<br>  double minError(int n, int m)<br>  {<br>    memset(vis,false,sizeof(vis));<br>    memset(vis2,false,sizeof(vis2));<br>    double ret=solve2(n,m)*100.0;<br>    return ret;<br>  }<br>};<br></td>