<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;utility&gt;<br> <br>using namespace std;<br> <br>#define PB push_back<br>#define MP make_pair<br>#define FI first<br>#define SE second<br> <br>#define eps 1e-9<br>#define PI 3.14159265358969323<br> <br>typedef vector &lt;int&gt; VI;<br>typedef pair &lt;int, int&gt; PII;<br> <br>typedef long long Long;<br>typedef double dbl;<br> <br>class CompressedString {<br>  public:<br>    int getLength( string s )<br>    {<br>      int Ans = 0;<br>      for (int i = 0; i &lt; s.length(); i++)<br>        if (i &gt;= s.length() - 1 || s[i + 1] != '(')<br>          Ans++;<br>        else<br>        {<br>          string t = "";<br>          int k = 1, j;<br>          for (j = i + 2; k; j++)<br>          {<br>            if (s[j] == '(')<br>              k++;<br>            else if (s[j] == ')')<br>              k--;<br>            if (k)<br>              t += s[j];<br>          }<br>          Ans += (s[i] - '0') * getLength(t);<br>          i = j - 1;<br>        }<br>      return Ans;<br>    }<br>};<br> <br>// Code by Burunduk3<br> <br>// Powered by PopsEdit<br></td>