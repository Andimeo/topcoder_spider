<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;stack&gt;<br>#include &lt;list&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iterator&gt;<br>#include &lt;numeric&gt;<br>using namespace std;<br> <br> <br>typedef vector &lt;int &gt; VI;<br>#define REP(i,n) for (int i=0; i&lt;n; ++i)<br>#define FOREACH(it,x) for(__typeof((x).begin()) it=(x.begin()); it!=(x).end(); ++it)<br>#define FOR(i,p,k) for (int i=p; i&lt;=k; ++i)<br>#define PB push_back<br>#define ALL(x) x.begin(),x.end()<br>#define SIZE(x) (int)x.size()<br> <br>const int N=210;<br>int typ[N];<br>VI krawedzie[N];<br>VI lewy,prawy;<br> <br>int kasuj[N];<br>int numer[N];<br>int n,n1,n2;<br>int vis[N];<br>int skojx[N],skojy[N];<br> <br>int dfs(int x){<br>  vis[x]=1;<br>  FOREACH(it,krawedzie[lewy[x]]) if (typ[*it]==0){<br>    if (!kasuj[*it]){<br>      int y=numer[*it];<br>      if (skojy[y]==-1 || !vis[skojy[y]] &amp;&amp; dfs(skojy[y])){<br>        skojx[x]=y;<br>        skojy[y]=x;<br>        return 1;<br>      }<br>    }<br>  }<br>  return 0;<br>}<br> <br>int skojarzenie(){<br>  REP(i,n1) skojx[i]=-1;<br>  REP(i,n2) skojy[i]=-1;<br>  int change=1,res=0;<br>  while (change){<br>    change=0;<br>    REP(i,n1) vis[i]=0;<br>    REP(i,n1) if (!kasuj[lewy[i]] &amp;&amp; !vis[i] &amp;&amp; skojx[i]==-1 &amp;&amp; dfs(i)) change=1,res++;<br>  }<br>  return res; <br>}<br> <br>    class VotingBloc<br>        { <br>        public: <br>        vector &lt;int&gt; abstainers(vector &lt;string&gt; voter){ <br>          n=SIZE(voter);<br>          n1=0,n2=0;<br>          REP(i,n){<br>            istringstream in(voter[i]);<br>            string s;<br>            in &gt;&gt; s;<br>            if (s[0]=='Y'){<br>              numer[i]=SIZE(lewy);<br>              typ[i]=1; lewy.PB(i); n1++;<br>            } else{<br>              numer[i]=SIZE(prawy);<br>              typ[i]=0; prawy.PB(i); n2++;<br>            }<br>            int x;<br>            while (in &gt;&gt; x){<br>              x--;<br>              krawedzie[i].PB(x);<br>              krawedzie[x].PB(i);<br>            }<br>          }<br>          int res=skojarzenie();<br>          VI ktorzy;<br>          while (res){<br>            REP(i,n) if (!kasuj[i]){<br>              kasuj[i]=1;<br>              int kand=skojarzenie();<br>              if (kand==res-1){<br>                res--;<br>                ktorzy.PB(i+1);<br>                break;<br>              }<br>              kasuj[i]=0;<br>            }<br>          }<br>          return ktorzy;<br>        } <br>        <br> <br>         }; <br> <br>    <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>