<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br><br>public class ExpensiveTravel<br>{<br>  int mas[][], cost[][];<br>  boolean use[][];<br>  int n, m;<br>  static int d10 = 8 * 9 * 5 * 7;<br><br>  boolean check(int x1, int y1, int x2, int y2)<br>  {<br>    if (x2&lt;0||x2&gt;=n||y2&lt;0||y2&gt;=m) return false;<br>    int d1 = mas[x1][y1] + cost[x2][y2];<br>    if (d1&lt;mas[x2][y2]&amp;&amp;d1&lt;=d10)<br>    {<br>      mas[x2][y2] = d1;<br>      use[x2][y2] = true;<br>      return true;<br>    }<br>    return false;<br>  }<br>  <br>  boolean bfs()<br>  {<br>    boolean res = true;<br>    boolean result = false;<br>    int i, j;<br>    for (i=0; i&lt;n; i++)<br>      for (j=0; j&lt;m; j++)<br>        if (use[i][j])<br>          mas[i][j] = cost[i][j];<br>        else<br>          mas[i][j] = d10+1;<br>    while (res)<br>    {<br>      res = false;<br>      for (i = 0; i &lt; n; i++)<br>        for (j = 0; j &lt; m; j++) <br>        if (use[i][j])<br>        {<br>          res|=check(i, j, i + 1, j);<br>          res|=check(i, j, i - 1, j);<br>          res|=check(i, j, i, j + 1);<br>          res|=check(i, j, i, j - 1);<br>        }<br>      result|=res;<br>    }<br>    return result;<br>  }<br>  <br>  public int minTime(String[] m1, int startRow, int startCol, int endRow, int endCol)<br>  {<br>    startRow--;startCol--;endRow--;endCol--;<br><br>    this.n = m1.length;<br>    this.m = m1[0].length();<br><br>    <br>    cost = new int[n][m];<br>    for (int i=0; i&lt;n; i++)<br>      for (int j=0; j&lt;m; j++)<br>        cost[i][j] = d10/(m1[i].charAt(j)-'0');<br><br>    mas = new int[n][m];<br>    int ans = 0;<br>    use = new boolean[n][m];<br>    use[startRow][startCol] = true;<br>    if (use[endRow][endCol]) return ans;<br>    while (bfs())<br>    {<br>      ans++;<br>      if (use[endRow][endCol]) return ans;<br>    }<br>    return -1;<br>  }<br><br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>