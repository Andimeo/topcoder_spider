<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdarg&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;functional&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;limits&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;stack&gt;<br>#include &lt;string&gt;<br>#include &lt;utility&gt;<br>#include &lt;vector&gt;<br><br>using namespace std;<br><br>#define FORI(p, x) for (int i = p; i &lt; (int)(x); ++i)<br>#define PB push_back<br>#define S size()<br><br>#define ALL(C) (C).begin(), (C).end()<br>#define UNIQUE(v) v.erase(unique(v.begin(), v.end()), v.end())<br><br>#define VS vector&lt;string&gt;<br><br>#define LOOKUP(c, x) { __typeof((c).begin()) fit = (c).find(x); if (fit != (c).end()) return fit-&gt;second; }<br><br>struct WordSplit{<br>    vector &lt;string&gt; pieces(string theString);<br><br>};<br><br>map&lt;string, VS&gt; mp;<br><br>VS go(const string &amp;str) {<br>    if (str.empty()) return VS();<br>    LOOKUP(mp, str);<br><br>    VS res;<br><br>    FORI (1, str.S + 1) {<br>        string pref(str.begin(), str.begin() + i);<br>        string spref = pref;<br>        sort(ALL(spref));<br>        UNIQUE(spref);<br>        if (spref.S != pref.S) break;<br><br>        VS cand = go(string(str.begin() + i, str.end()));<br>        cand.PB(pref);<br>        sort(ALL(cand));<br>        if (res.empty() || cand.S &lt; res.S || (cand.S == res.S &amp;&amp; cand &lt; res)) {<br>            res = cand;<br>        }<br>    }<br>    return mp[str] = res;<br>}<br><br>vector &lt;string&gt; WordSplit :: pieces ( string theString ) {<br>    mp.clear();<br>    return go(theString);<br>}<br><br>// Powered by Krzysan's Cleaner 1.4-6<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>