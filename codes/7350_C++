<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;vector&gt;<br>#include&lt;algorithm&gt;<br><br>using namespace std;<br><br>int cnt[55], maxv;<br><br>void Try(vector&lt;int&gt; &amp;a, int sco, int w)<br>{<br>  int l1, rank = 1;<br>  <br>  for(l1=0;l1&lt;a.size();l1++)<br>  {<br>    if(a[l1] &gt; sco) rank++;<br>  }<br>  cnt[rank] += w;<br>}<br><br>class MostLikely<br>{<br>public:<br>  int likelyRank(vector &lt;int&gt; a, int low, int high)<br>  {<br>    int l1, l2;<br>    vector &lt;int&gt; b;<br>    b.push_back(low);<br>    if(low != high) b.push_back(high);<br>    for(l1=0;l1&lt;a.size();l1++)<br>    {<br>      if(a[l1] &lt; low || a[l1] &gt; high) continue;<br>      for(l2=0;l2&lt;b.size();l2++)<br>      {<br>        if(b[l2] == a[l1]) break;<br>      }<br>      if(l2 == b.size())<br>      {<br>        b.push_back(a[l1]);<br>      }<br>    }<br>    sort(b.begin(), b.end());<br>    Try(a, b[0], 1);<br>    for(l1=1;l1&lt;b.size();l1++)<br>    {<br>      Try(a, b[l1], 1);<br>      if(b[l1] &gt; b[l1-1] + 1)<br>      {<br>        Try(a, b[l1]-1, b[l1]-b[l1-1]-1);<br>      }<br>    }<br>    maxv = -1;<br>    int ret = -1;<br>    for(l1=1;l1&lt;=51;l1++)<br>    {<br>      if(maxv &lt; cnt[l1])<br>      {<br>        maxv = cnt[l1];<br>        ret = l1;<br>      }<br>      else if(maxv == cnt[l1])<br>      {<br>        ret = -1;<br>      }<br>    }<br>    return ret;<br>  }<br>};<br></td>