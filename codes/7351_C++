<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br> <br>using namespace std;<br><br>class LikelyWord<br>{<br>public:<br>int likely(vector &lt;string&gt; dictionary, int k)<br>{<br>  int i,j,n;<br>  long long x,left,right,max,ans;<br>  string s;<br>  vector&lt;long long&gt; ind;<br>  ind.clear();<br>  ind.push_back(-1);<br>  n=dictionary.size();<br>  for (i=0;i&lt;n;i++)<br>  {<br>    s=dictionary[i];<br>    x=0;<br>    for (j=0;(j&lt;s.length())&amp;&amp;(j&lt;k);j++)<br>    {<br>      x*=26;<br>      x+=s[j]-'a';<br>    }<br>    while (j&lt;k)<br>    {<br>      x*=26;<br>      j++;<br>    }<br>    ind.push_back(x);<br>  }<br>  x=0;<br>  for (i=0;i&lt;k;i++)<br>  {<br>    x*=26;<br>    x+=('z'-'a');<br>  }<br>  x++;<br>  ind.push_back(x);<br>  max=-1;<br>  ans=-1;<br>  for (i=0;i&lt;=n;i++)<br>  {<br>    left=ind[i];<br>    if ((i!=0)&amp;&amp;(dictionary[i-1].length()&lt;k)) left--;<br>    right=ind[i+1];<br>    if ((i!=n)&amp;&amp;(dictionary[i].length()&gt;k)) right++;<br>    if ((right-left-1)&gt;max)<br>    {<br>      max=(right-left-1);<br>      ans=i;<br>    }<br>    else if ((right-left-1)==max)<br>    {<br>      ans=-1;<br>    }<br>  }<br>  return ans;<br>}<br>};<br></td>