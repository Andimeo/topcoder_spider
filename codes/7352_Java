<td class="problemText" colspan="8" valign="middle" align="left">
            import java.math.BigInteger;<br><br>public class Neaten {<br>  public int shortest(int k, String number) {<br>        int p10 = k;<br>        if (number.indexOf('.') &gt;= 0) {<br>            int pos = number.indexOf(".");<br>            int at = number.length() - 1 - pos;<br>            p10 += at;<br>            number = number.substring(0, pos) + number.substring(pos + 1);<br>        }<br><br>        String allowance = number;<br>        String other = "1";<br>        for (int i = 0; i &lt; p10 - k; ++i)<br>            other += "0";<br>        BigInteger diffLess = new BigInteger(allowance);<br>        BigInteger diffLess2 = new BigInteger(other);<br>        if (diffLess2.compareTo(diffLess) &gt; 0)<br>            diffLess = diffLess2;<br><br>        for (int i = 0; i &lt; k; ++i)<br>            number = number + "0";<br><br>        BigInteger need = new BigInteger(number);<br><br>        number = "0" + number;<br>        int res = Integer.MAX_VALUE;<br>        for (int i = 1; i &lt;= number.length(); ++i) {<br>            BigInteger x = new BigInteger(number.substring(0, i));<br>            for (int j = 0; j &lt; 5; ++j)<br>                if (x.signum() &gt; 0)<br>                    x = x.subtract(BigInteger.ONE);<br>            for (int j = 0; j &lt; 11; ++j) {<br>                StringBuilder s = new StringBuilder(x.toString());<br>                for (int l = 0; l &lt; number.length() - i; ++l) {<br>                    s.append('0');<br>                }<br><br>                BigInteger value = new BigInteger(s.toString());<br>                BigInteger diff = value.subtract(need).abs();<br>                if (diff.compareTo(diffLess) &lt; 0)<br>                    res = Math.min(res, encodeLen(value, p10));<br><br>                x = x.add(BigInteger.ONE);<br>            }<br>        }<br><br>        return res;<br>    }<br><br><br>    private int encodeLen(BigInteger value, int p10) {<br>        if (value.signum() == 0)<br>            return 1;<br><br>        String s = value.toString();<br>        int skip;<br>        for (skip = 0; skip &lt; p10; ++skip) {<br>            if (s.charAt(s.length() - 1 - skip) != '0')<br>                break;<br>        }<br>        s = s.substring(0, s.length() - skip);<br>        p10 -= skip;<br>        if (p10 == 0)<br>            return s.length();<br>        else if (s.length() &lt; p10)<br>            return p10 + 1;<br>        else<br>            return s.length() + 1;<br>    }<br><br><br>}<br></td>