<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br><br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;sstream&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>#include &lt;functional&gt;<br><br>using namespace std;<br><br>#define PB push_back<br>#define MP make_pair<br>#define F first<br>#define S second<br>typedef pair &lt;int, int&gt; PII;<br>typedef long long LL;<br>typedef double dbl;<br>typedef vector &lt;int&gt; VI;<br>typedef vector &lt;string&gt; VS;<br>typedef vector &lt;VI&gt; VVI;<br><br>#define SZ(a) ((int)(a).size())<br>#define ALL(a) (a).begin(), (a).end()<br>#define FOR(i, n) for (i = 0; i &lt; (n); i++)<br>#define FORS(i, a) FOR(i, SZ(a))<br>#define FORIT(i, a) for (__typeof((a).begin()) i = (a).begin(); i != (a).end(); i++)<br><br>class Overhang<br>{<br>public:<br>  double hang(vector &lt;int&gt; a, int LOAD)<br>  {<br>    int i, j, n = SZ(a);<br>    dbl res = -1e20;<br>    <br>    for (i = 1; i &lt;= n; i++)<br>    {<br>//      fprintf(stderr, "-------&gt; i=%d\n", i);<br>      <br>      int sum = 0;<br>      for (j = i; j &lt; n; j++)<br>        sum += a[j];<br><br>      dbl w = (dbl)sum + a[i - 1] + LOAD;<br>      dbl pos = (sum * (a[i - 1] * 1.0) + a[i - 1] * (a[i - 1] * 0.5) + LOAD * 0) / w;<br>      <br>//      fprintf(stderr, "start: pos=%.3lf w=%.2lf\n", pos, w);<br>      <br>      for (j = i - 2; j &gt;= 0; j--)<br>      {<br>        pos = (pos * w + (pos + a[j] * 0.5) * a[j]) / (w + a[j]);<br>        w += a[j];<br><br>//        fprintf(stderr, "j=%d pos=%.3lf w=%.2lf\n", j, pos, w);<br>      }<br>      res &gt;?= pos;<br>    }<br>    return res;<br>  }<br>};<br></td>