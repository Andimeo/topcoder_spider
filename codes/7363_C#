<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>  public class MinimumVariancePartition<br>  {<br>    int[] a;<br>    double[,] m;<br>    int n;<br><br>    private double Count(int l, int r)<br>    {<br>      int s = 0;<br>      for (int i = l; i &lt;= r; i++)<br>        s += a[i];<br>      double m = 1.0 * s / (r - l + 1);<br>      double ans = 0.0;<br>      for (int i = l; i &lt;= r; i++)<br>        ans += (a[i] - m) * (a[i] - m);<br>      ans /= (r - l + 1);<br><br>      return ans;<br>    }<br><br>    private double rec(int x, int k)<br>    {<br>            if (m[x, k] != -1.0)<br>        return m[x, k];<br>      double ans = 0.0;<br>      if (k == 1)<br>        ans += Count(x, n - 1);<br>      else<br>      {<br>        double min = 1e100;<br>        for (int i = x + 1; i &lt;= n; i++)<br>        {<br>          double w = Count(x, i - 1) + rec(i, k - 1);<br>                    if (w &lt; min)<br>            min = w;<br>        }<br>        ans = min;<br>      }<br>            <br>            m[x, k] = ans;<br>      return ans;<br>    }<br><br>    public double minDev(int[] mixedSamples, int k)<br>    {<br>      a = mixedSamples;<br>      n = a.Length;<br>      Array.Sort(a);<br><br>      m = new double[n + 1, n + 1];<br>      for (int i = 0; i &lt;= n; i++)<br>        for (int j = 0; j &lt;= n; j++)<br>          m[i, j] = -1.0;<br>      <br>      double ans = rec(0, k);<br><br>      return ans;<br>    }<br>  }<br></td>