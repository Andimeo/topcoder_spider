<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br><br>public class MinimumVariancePartition {<br><br>  <br>  public static double minDev(int[] a, int k)<br>  {<br>    int i, j, l, tmp, n = a.length;<br>    double sum;<br>    double [][] d = new double [100][100];<br>    double [][] g = new double [100][100];<br>    Arrays.sort(a);<br>    <br>    for (i = 1; i &lt;= n; i++)<br>      for (j = i; j &lt;= n; j++)<br>      {    <br>        g [i][j] = 0;<br>        sum = 0;<br>        for (l = i; l &lt;= j; l++)<br>          sum = sum + a [l - 1];<br>        sum = sum / (j - i + 1);<br>        for (l = i; l &lt;= j; l++)<br>          g [i][j] = g [i][j] + (a [l - 1] - sum) * (a [l - 1] - sum);<br>        g [i][j] = g [i][j] / (j - i + 1);<br>      }<br>    <br>    for (i = 0; i &lt;= n; i++)<br>      for (j = 0; j &lt;= k; j++)<br>        d [i][j] = -1;<br>    d [1][1] = 0;<br>    d [0][0] = 0;<br>    for (i = 2; i &lt;= n; i++)<br>      for (j = 1; j &lt;= k; j++)<br>        for (l = 1; l &lt;= i - j + 1; l++)<br>        {<br>          if (d [i - l][j - 1] != -1) <br>            if ((d [i][j] &gt; d [i - l][j - 1] + g [i - l + 1][i]) || (d [i][j] == -1))<br>              d [i][j] = d [i - l][j - 1] + g [i - l + 1][i];<br>        }<br>    <br>    return d [n][k];<br>  }<br>  <br>  public static void main(String[] args) {<br>    // TODO Auto-generated method stub<br>    int [] a = {3,4,7,10};<br>    System.out.println(minDev (a, 1));<br><br>  }<br><br>}<br></td>