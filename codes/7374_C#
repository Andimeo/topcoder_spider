<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections; <br>using System.Collections.Generic;<br><br>public class HighwayJam {<br>  public double minTime(int[] lanes, int laneChange, int dist) <br>  {<br>        double d = dist;<br><br>        if (dist &lt;= lanes[0] * laneChange &amp;&amp; lanes[0]!=0)<br>            return d / lanes[0];<br><br>        d -= lanes[0] * laneChange;<br><br>        <br>        double stD = 0;<br>        double endD = dist;<br>        double res = 10e100;<br>        double eps = 1e-9;<br>       <br>        double t;<br>        int i;<br>        for (i = 0; i &lt; lanes.Length; i++)<br>            if (lanes[i] != 0)<br>            {<br>                t = i * 2 * laneChange;<br><br>                stD = 0;<br>                endD = d;<br>                for (int j = 0; j &lt; i; j++)<br>                {<br>                    stD = stD + laneChange * lanes[j];<br>                    endD = endD - laneChange * lanes[j+1];<br>                }<br><br>                if (stD &lt;= endD + eps)<br>                {<br>                    t += (endD - stD) / lanes[i];<br>                    res = Math.Min(res, t);<br>                }<br><br>                <br><br>            }<br><br>        return res + laneChange;<br>        /*<br>        double s_t,e_t;<br>       for (i = 0; i &lt; lanes.Length; i++)<br>        {<br><br>            if (Math.Abs(s_t- e_t)&lt;eps)<br>                return 2*(i + 1) * laneChange;<br><br>            if (s_t &gt; e_t)<br>            {<br>                i--;<br>                break;<br>            }<br><br>            stD = s_t;<br>            endD = e_t;<br>        }<br><br>        if (i == -1)<br>            return d/ lanes[0];<br><br>        if (i &gt;= lanes.Length)<br>            return 2*lanes.Length * laneChange + (endD - stD) / lanes[lanes.Length - 1];<br><br><br>        return 2 * (i+1) * laneChange + (endD - stD) / lanes[i];*/<br>  }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>