<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br><br>public class RandomFights {<br>  public double expectedNrOfPoints(int[] A, int[] B, int n) {<br>    int[] p = getP(A, n);<br>    int[] q = getP(B, n);<br>    <br>    long res = 0;<br>    <br>    long[] sum = new long[50000];<br>    long[] sum2 = new long[50000];<br>    int[] count = new int[50000];<br>    Arrays.fill(sum, 0);<br>    Arrays.fill(sum2, 0);<br>    Arrays.fill(count, 0);<br>    for (int i=0; i&lt;n; i++) {<br>      int x = q[i];<br>      long y = q[i];<br>      sum[x] += y;<br>      sum2[x] += y*y;<br>      count[x]++;<br>    }<br>    for (int i=1; i&lt;50000; i++) {<br>      sum[i] = sum[i] + sum[i-1];<br>      sum2[i] = sum2[i] + sum2[i-1];<br>      count[i] = count[i] + count[i-1];<br>    }<br>    <br>    for (int i=0; i&lt;n; i++) {<br>      int x = p[i];<br>      long y = p[i];<br>      if (x &gt; 0) {<br>        long c = count[x-1];<br>        res += (y*y*c + sum2[x-1] - 2*y*sum[x-1]);<br>      }<br>      if (x &lt; 49999) {<br>        long c = count[49999] - count[x];<br>        long s = sum[49999] - sum[x];<br>        long s2 = sum2[49999] - sum2[x];<br>        res -= (y*y*c + s2 - 2*y*s);<br>      }<br>    }<br>    <br>    return 1.0d / n * res;<br>  }<br><br>  private int[] getP(int[] a, int n) {<br>    int j = 0;<br>    int m = a.length;<br>    int[] res = new int[n];<br>    for (int i=0; i&lt;n; i++) {<br>      res[i] = a[j];<br>      int s = (j+1) % m;<br>      a[j] = ((a[j] ^ a[s]) + 13) % 49999;<br>      j = s;<br>    }<br>    return res;<br>  }<br><br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>