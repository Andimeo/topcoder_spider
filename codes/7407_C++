<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>using namespace std;<br><br>typedef long long LL;<br>typedef vector &lt;int&gt; VI;<br><br>#define MAX 30<br><br>class AnagramList<br>{<br>  LL fac[MAX];<br>  LL Count(int *kol)<br>  {<br>    LL ret = 1;<br>    int cnt = 0;<br>    int i;<br>    for (i=0;i&lt;MAX;i++)<br>    {<br>      cnt += kol[i];<br>    }<br>      <br>    ret = fac[cnt];<br>    for (i=0;i&lt;MAX;i++)<br>      ret /= fac[kol[i]];<br><br>    return ret;      <br>  }<br>  <br>  string Solve(int *kol, LL k)<br>  {<br>    LL tot = 0;<br>    int i;<br>    for (i=0;i&lt;MAX;i++)<br>      if ( kol[i]&gt;0 )<br>      {  <br>        kol[i]--;<br>        LL cnt = Count(kol);<br>        tot += cnt;<br>        if ( tot&gt;=k )<br>        {<br>          tot -= cnt;<br>          return char(i+'a') + Solve(kol, k-tot);  <br>        }<br>        <br>        kol[i]++;<br>      }<br>      <br>    return "";<br>  }<br>  <br>public:<br>  string getAnagram(string s, int k)<br>  {<br>    int kol[MAX];<br>    int len = s.length();<br>    int i;<br>    for (i=0;i&lt;MAX;i++)<br>      kol[i] = 0;<br>      <br>    for (i=0;i&lt;len;i++)<br>      kol[s[i]-'a']++;<br>  <br>    fac[0] = 1;<br>    for (i=1;i&lt;MAX;i++)<br>      fac[i] = fac[i-1]*LL(i);<br>  <br>    k++;      <br>    LL tot = Count(kol);<br>    if ( k&lt;1 || k&gt;tot )<br>      return "";<br>      <br>    return Solve(kol, LL(k));<br>  }<br><br>};<br></td>