<td class="problemText" colspan="8" valign="middle" align="left">
            // after all, I think you should not try to challenge me<br><br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>typedef long long ll;<br><br>#define LS &lt;<br>#define Size(x) (int(x.size()))<br><br>// All macros with parameters "k,a,b" run the "k" variable in range [a,b)<br>#define FOR(k,a,b) for(typeof(a) k=(a); k LS (b); ++k)<br><br>#line 3 "DrivingAround.cc"<br><br>struct matrix {<br>  int a[50][50];<br>  };<br><br>#define MOD 1000003<br><br>matrix M;<br><br>matrix mul(matrix x, matrix y) {<br>  matrix res;<br>  FOR(a,0,50) FOR(b,0,50) res.a[a][b] = 0;<br>  FOR(a,0,50) FOR(b,0,50) FOR(c,0,50) {<br>    res.a[a][c] += (x.a[a][b] * ll(y.a[b][c])) % MOD;<br>    res.a[a][c] %= MOD;<br>    }<br>  return res;<br>  }<br><br>matrix power(matrix m, int n) {<br>  if(n == 1) return m;<br>  matrix u = mul(m, m);<br>  u = power(u, n/2);<br>  if(n&amp;1) u = mul(u, m);<br>  return u;<br>  }<br><br>class DrivingAround {<br>  public:<br>  int numberOfWays(vector &lt;string&gt; adj, int start, int finish, int time) {<br>    // !FDI<br>    <br>    int N = Size(adj);<br><br>    FOR(x,0,50) FOR(y,0,50) M.a[x][y] = 0;<br>    FOR(x,0,N)  FOR(y,0,N)  <br>      if(adj[x][y] != '.')<br>        M.a[50+x-10*(adj[x][y]-'0')][40+y]++;<br>    FOR(x,0,40) M.a[x+10][x] = 1;<br>    <br>//  FOR(x,0,50) { FOR(y,0,50) printf("%c", '0'+M.a[x][y]); printf("\n"); }<br><br>    M = power(M, time);<br>    return M.a[40+start][40+finish];<br>    }<br>  };<br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>