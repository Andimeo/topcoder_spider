<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class ReverseResources {<br>    String s;<br>    String[] z;<br>    int n;<br>    int[][][][] a;<br>    boolean[][][][] u;<br> <br>    int[][] m;<br>    boolean[][] us;<br> <br>    int sum(int l, int r) {<br>        if (us[l][r]) {<br>            return m[l][r];<br>        }<br> <br>        us[l][r] = true;<br>        long v = 0;<br>        for (int i = 0; i &lt; z.length; i++) {<br>            v = v + count(l, r, i, z[i].length());<br>        }<br>        m[l][r] = (int) (v % MOD);<br>        return m[l][r];<br>    }<br> <br>    final static long MOD = 1000000007;<br> <br>    int count(int l, int r, int k, int p) {<br>        if (u[l][r][k][p]) {<br>            return a[l][r][k][p];<br>        }<br>        u[l][r][k][p] = true;<br>        if (r == l) {<br>            if (p == 0) {<br>                return a[l][r][k][p] = 1;<br>            } else {<br>                return a[l][r][k][p] = 0;  <br>            }<br>        } else {<br>            if (p == 0) {<br>                return a[l][r][k][p] = 0; <br>            }<br>            if (z[k].charAt(p - 1) == '%') {<br>                long v = 0;<br>                for (int i = l; i &lt; r; i++) {<br>                    v = (v + 1L * count(l, i, k, p - 1) * sum(i, r)) % MOD;<br>                }<br>                return a[l][r][k][p] = (int) v;<br>            } else {<br>                if (s.charAt(r - 1) == z[k].charAt(p - 1)) {<br>                    return a[l][r][k][p] = count(l, r - 1, k, p - 1);<br>                } else {<br>                    return a[l][r][k][p] = 0;<br>                }<br>            }<br>        }<br>    }<br> <br>    public int findDecompositions(String str, String[] resources) {<br>        int n = str.length();<br>        int rn = resources.length;<br>        a = new int[n + 1][n + 1][rn][51];<br>        u = new boolean[n + 1][n + 1][rn][51];<br>        m = new int[n + 1][n + 1];<br>        us = new boolean[n + 1][n + 1];<br> <br>        z = new String[rn];<br>        for (int i = 0; i &lt; rn; i++) {<br>            z[i] = "";<br>            for (int j = 0; j &lt; resources[i].length(); j++) {<br>                z[i] += resources[i].charAt(j);<br>                if (resources[i].charAt(j) == '%') {<br>                    j++;<br>                }<br>            }<br>        }<br>        s = str;<br> <br>        return sum(0, n);<br>    }<br> <br> <br>}<br> <br> <br>// Powered by PopsEdit<br> <br>// Powered by CodeProcessor<br></td>