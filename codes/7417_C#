<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class CardStraights<br>{<br>  public int longestStraight(int[] cards)<br>  {<br>    Array.Sort( cards );<br>    <br>    int[] d = new int[1000005];<br>    for ( int i = 0; i &lt; cards.Length; i++ )<br>    if ( cards[i] &gt; 0 )<br>    d[ cards[i] ] = 1;<br>    <br>    for ( int i = 1; i &lt;= 1000000; i++ ) {<br>      d[i] += d[i-1];<br>    }<br>    <br>    int wild = 0;<br>    for ( int i = 0; i &lt; cards.Length; i++ ) if ( cards[i] == 0 ) wild++;<br>    <br>    int max = 0;<br>    for ( int i = 0; i &lt;= 1000000; i++ ) {<br>      for ( int j = 0; j &lt; cards.Length; j++ ) {<br>        if ( i + j + 1 &lt;= 1000000 &amp;&amp; d[i+j+1] - d[i] == j + 1 ) {<br>          max = Math.Max( max, j + 1 );<br>        }<br>        if ( i + j + 1 &lt;= 1000000 &amp;&amp; d[i+j+1] - d[i] + wild &gt;= j + 1 ) {<br>          max = Math.Max( max, j + 1 );<br>        }<br>      }<br>    }<br>    return max;<br>  }<br> <br> <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>