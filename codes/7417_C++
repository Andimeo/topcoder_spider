<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;stdio.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;inttypes.h&gt;<br>#include &lt;ctype.h&gt;<br> <br>#include &lt;algorithm&gt;<br>#include &lt;utility&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;iostream&gt;<br> <br>using namespace std;<br> <br>#define TRACE(x...) x<br>#define PRINT(x...) TRACE(printf(x))<br>#define WATCH(x) TRACE(cout &lt;&lt; #x" = " &lt;&lt; x &lt;&lt; "\n")<br> <br>int is[1000010];<br> <br>struct CardStraights {<br>  int longestStraight(vector &lt;int&gt; cards) {<br>    int N = cards.size();<br>    int J = 0;<br>    memset(is, 0, sizeof(is));<br>    for (int i = 0; i &lt; N; i++) {<br>      if (cards[i] == 0) {<br>        J++;<br>      } else {<br>        is[cards[i]] = 1;<br>      }<br>    }<br>    int ans = 0;<br>    for (int i = 1; i &lt;= 1000000; i++) {<br>      int R = J, best = 0;<br>      for (int j = i; j &lt;= 1000000; j++) {<br>        if (is[j]) {<br>          best++;<br>          continue;<br>        } else if (R) {<br>          R--;<br>          best++;<br>          continue;<br>        } else break;<br>      }<br>      ans = max(ans, best);<br>    }<br>    return ans;<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>