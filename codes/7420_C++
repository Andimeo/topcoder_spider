<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br><br>using namespace std;<br><br>//typedef long long __int64;<br><br>const int maxn=1000+5;<br>const int maxT=2000+5;<br><br>int V[maxn][maxT];<br><br>class BusTrip<br>{<br>public:<br>  int returnTime(int n, vector &lt;string&gt; vs)<br>  {<br>    memset(V,255,sizeof(V));<br>    for (int i=0;i&lt;vs.size();i++)<br>    {<br>      istringstream sin(vs[i]);<br>      vector&lt;int&gt; L;<br>      L.clear();<br>      int v;<br>      while (sin&gt;&gt;v)<br>        L.push_back(v);<br>      int T=0,k=0;<br>      while (T&lt;=1000)<br>      {<br>        if (V[L[k]][T]==-1)<br>          V[L[k]][T]=L[(k+1)%L.size()];<br>        T+=abs(L[(k+1)%L.size()]-L[k]);<br>        k=(k+1)%L.size();<br>      }<br>    }<br>    int T=-1,pos=0;<br>    bool first=false;<br>    while (T&lt;=1000)<br>    {<br>      if (first &amp;&amp; pos==0)<br>        return T;<br>      T++;<br>      if (V[pos][T]!=-1)<br>      {<br>        first=true;<br>        int _pos=V[pos][T];<br>        T+=abs(pos-V[pos][T]);<br>        pos=_pos;<br>      }<br>    }<br>    return -1;<br>  }<br>};<br></td>