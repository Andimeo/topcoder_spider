<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections; <br>using System.Collections.Generic;<br><br>public class OnTime {<br><br>    struct Pair<br>    {<br>        public int now;<br>        public int time;<br>        public int cost;<br>    }<br>        <br><br>  public int minCost(int N, int T, string[] buses) <br>  {    <br>    int res=0;<br><br>        int m=buses.Length;<br>        int[] a = new int[m];<br>        int[] b = new int[m];<br>        int[] dep = new int[m];<br>        int[] time = new int[m];<br>        int[] cost = new int[m];<br>        for (int i = 0; i &lt; m; i++)<br>        {<br>            string[] t = buses[i].Split(' ');<br><br>            a[i] = int.Parse(t[0]);<br>            b[i] = int.Parse(t[1]);<br>            dep[i] = int.Parse(t[2]);<br>            time[i] = int.Parse(t[3]);<br>            cost[i] = int.Parse(t[4]);<br>        }<br><br>        Queue&lt;Pair&gt; q = new Queue&lt;Pair&gt;();<br>        Pair start;<br>        start.now = 0;<br>        start.time = 0;<br>        start.cost = 0;<br>        q.Enqueue(start);<br><br>        int min = -1;<br><br>        while (q.Count != 0)<br>        {<br>            Pair curr = q.Dequeue();<br><br>            for(int i=0;i&lt;m;i++)<br>                if (curr.now == a[i] &amp;&amp; (curr.time &lt; dep[i] || curr.time == 0))<br>                {<br>                    Pair x;<br>                    x.now = b[i];<br>                    x.time = dep[i] + time[i];<br>                    x.cost = curr.cost + cost[i];<br><br>                    if (x.now == N - 1 &amp;&amp; (min == -1 || x.cost &lt; min) &amp;&amp; x.time&lt;=T)<br>                        min = x.cost;<br><br>                    if(x.time&lt;=T)<br>                        q.Enqueue(x);<br>                }<br>        }<br>  <br>        return min;<br>  }  <br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>