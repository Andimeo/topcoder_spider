<td class="problemText" colspan="8" valign="middle" align="left">
            public class CakeParty {<br>    String answer;<br> <br>    void relax(String z) {<br>        if (answer == null || answer.compareTo(z) &gt; 0) {<br>            answer = z;<br>        }<br>    }<br> <br>    int mlex(long from, long to) {<br>        long pten = 1;<br>        while (pten &lt; from) {<br>            pten *= 10L;<br>        }<br>        if (pten &lt;= to) {<br>            return (int) pten;<br>        } else {<br>            return (int) from;<br>        }<br>    }<br> <br>    public String makeMove(int[] p) {<br>        answer = null;<br>        int n = p.length;<br>        int k = 0;<br>        for (int i = 0; i &lt; n; i++) {<br>            if (p[i] &gt; k) {<br>                k = p[i];<br>            }<br>        }<br>        int z = 0;<br>        for (int i = 0; i &lt; n; i++) {<br>            if (k == p[i]) {<br>                z++;<br>            }<br>        }<br>        if (z % 2 == 0) {<br>            for (int i = 0; i &lt; n; i++) {<br>                if (k == p[i]) {<br>                    relax("CAKE " + i + " PIECES 1");<br>                }<br>            }<br>            return answer;<br>        }<br> <br>        if (z == 1) {<br>            if (n == 1) {<br>                return "CAKE 0 PIECES " + p[0];<br>            }<br> <br>            int sk = 0;<br>            for (int i = 0; i &lt; n; i++) {<br>                if (p[i] &lt; k &amp;&amp; p[i] &gt; sk) {<br>                    sk = p[i];<br>                }<br>            }<br>            int sz = 0;<br>            for (int i = 0; i &lt; n; i++) {<br>                if (p[i] == sk) {<br>                    sz++;<br>                }<br>            }<br> <br>            if (sz % 2 == 0) {<br>                int min = mlex(k - sk + 1, k);<br> <br>                for (int i = 0; i &lt; n; i++) {<br>                    if (p[i] == k) {<br>                        relax("CAKE " + i + " PIECES " + min);<br>                    }<br>                }<br>            } else {<br>                for (int i = 0; i &lt; n; i++) {<br>                    if (p[i] == k) {<br>                        relax("CAKE " + i + " PIECES " + (k - sk));<br>                    }<br>                }<br>            }<br>        } else {<br>            for (int i = 0; i &lt; n; i++) {<br>                if (k == p[i]) {<br>                    relax("CAKE " + i + " PIECES 1");<br>                }<br>            }<br>        }<br> <br>        return answer;<br>    }<br> <br>}<br> <br> <br>// Powered by PopsEdit<br> <br>// Powered by CodeProcessor<br></td>