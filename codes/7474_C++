<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;cmath&gt;<br>#include &lt;queue&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cfloat&gt;<br>#include &lt;climits&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>using namespace std;<br><br>struct st<br>{<br>  int dif;<br>  string name;<br>  bool operator&lt;(const st&amp; cmp)const<br>  {<br>    if(bool(dif)==bool(cmp.dif))<br>      if(dif==cmp.dif)return name&lt;cmp.name;<br>      else return dif&gt;cmp.dif;<br>    else return bool(dif)&gt;bool(cmp.dif);<br>  }<br>};<br><br>class ChangeReport<br>{<br>private:<br>  int n;<br>  st s[53];<br>  char buf[100];<br>public:<br>  vector &lt;string&gt; produceReport(vector &lt;string&gt; name, vector &lt;int&gt; l, vector &lt;int&gt; t)<br>  {<br>    n=name.size();<br>    for(int i=0;i&lt;n;i++)<br>    {<br>      s[i].name=name[i];<br>      s[i].dif=t[i]-l[i];<br>    }<br>    sort(s,s+n);<br>    vector&lt;string&gt; ret;<br>    ret.clear();<br>    for(int i=0;i&lt;n;i++)<br>    {<br>      sprintf(buf,"%d %s",s[i].dif,s[i].name.c_str());<br>      ret.push_back(string(buf));<br>    }<br>    return ret;<br>  }<br>};<br></td>