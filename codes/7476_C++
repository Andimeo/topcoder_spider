<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;algorithm&gt; <br>#include&lt;sstream&gt;<br>#include&lt;string&gt; <br>#include&lt;vector&gt; <br>using namespace std; <br>  <br>#define FOR(i,a,b) for(int i = (a); i &lt; (b); ++i) <br>#define REP(i,n) FOR(i,0,n) <br>#define FORE(it,x) for(typeof(x.begin()) it=x.begin();it!=x.end();++it) <br>#define pb push_back <br>#define all(x) (x).begin(),(x).end() <br>#define CLEAR(x,with) memset(x,with,sizeof(x)) <br>#define sz size() <br>typedef long long ll;<br>struct CDPlayer<br>{<br>  bool check(const string&amp; a, int left, int right)<br>  {<br>    bool app[26]; CLEAR(app,0);<br>    for(int i = left; i &lt; a.sz &amp;&amp; i &lt; right; ++i) if(app[a[i]-'A']) return false; else app[a[i]-'A'] = true;<br>    return true;<br>  }<br>  int isRandom(vector &lt;string&gt; songlist, int n)<br>  {<br>    string S;<br>    REP(i,songlist.sz) S += songlist[i];<br>    for(int st = 0; st &lt; n; ++st)<br>    {<br>      bool valid = true;<br>      valid = valid &amp;&amp; check(S, 0, st);<br>      for(int begin = st; begin &lt; S.sz; begin += n) valid = valid &amp;&amp; check(S, begin, begin + n);<br>      if(valid) return st;<br>    }<br>    return -1;<br>  }<br>};<br></td>