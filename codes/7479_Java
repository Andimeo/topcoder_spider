<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class Alarmed {<br>  int leftdist2(int x, int y) {<br>    if (x &gt; 50) {<br>      return Math.min(x*x,<br>      Math.min((x-50)*(x-50)+y*y,<br>      (x-50)*(x-50)+(100-y)*(100-y)));<br>    } else {<br>      return Math.min(x*x, Math.min(y*y, (100-y)*(100-y)));<br>    }<br>  }<br>  public double noise(int[] x, int[] y, int[] th) {<br>    int n = x.length, N = x.length+2; int LEFT=N-2, RIGHT=N-1;<br>    double[][] mt = new double[N][N];<br>    int i, j, k;<br>    double[] lbest = new double[n]; double best;<br>    for (i = 0; i &lt; n; i++) {<br>      mt[i][LEFT] = mt[LEFT][i] = leftdist2(x[i],y[i])*th[i];<br>      mt[i][RIGHT]=mt[RIGHT][i] = leftdist2(100-x[i],y[i])*th[i];<br>    }<br>    for (i = 0; i &lt; n; i++) {<br>      for (j = 0; j &lt; i; j++) {<br>        double dist = (x[i]-x[j])*(x[i]-x[j]), d;<br>        dist += (y[i]-y[j])*(y[i]-y[j]);<br>        d = (1.0/Math.sqrt(th[i])+1.0/Math.sqrt(th[j]));<br>        mt[i][j] = dist/(d*d);<br>        mt[j][i] = mt[i][j];<br>      }<br>    }<br>    best = Math.max(mt[0][LEFT], mt[0][RIGHT]);<br>    for (i = 0; i &lt; n; i++) {<br>      lbest[i] = mt[i][LEFT];<br>      best = Math.min(best, Math.max(mt[i][LEFT],mt[i][RIGHT]));<br>    }<br>    boolean change = true;<br>    while (change) {<br>      change = false;<br>      for (i = 0; i &lt; n; i++) {<br>        for (j = 0; j &lt; n; j++) {<br>          if (i != j) {<br>            if (Math.max(lbest[i], mt[i][j]) &lt; lbest[j]) {<br>              lbest[j] = Math.max(lbest[i], mt[i][j]);<br>              change = true;<br>              best = Math.min(best, Math.max(lbest[j], mt[j][RIGHT]));<br>            }<br>          }<br>        }<br>      }<br>    }<br>    return best;  <br>  }<br>}<br> <br>// Powered by PopsEdit<br></td>