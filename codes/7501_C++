<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;utility&gt;<br>#include &lt;bitset&gt;<br>#include &lt;functional&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;stdarg.h&gt;<br>#include &lt;stddef.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;stdlib.h&gt;<br>using namespace std;<br> <br>#define lint long long<br> <br>#define ss stringstream<br>#define pb push_back<br>#define sz size()<br>#define FOR(i,n) for(i=0;i&lt;n;i++)<br>#define SFOR(i,m,n) for(i=m;i&lt;n;i++)<br>#define FORD(i,n) for(i=n-1;i&gt;=0;i--)<br> <br>class LongestSubanagramChain {<br>  public:<br>  int getLength(vector &lt;string&gt; B) {<br>    int i,j,k;<br>    FOR(i,B.sz) sort(B[i].begin(),B[i].end());<br>    j = 0;<br>    while (1) {<br>      k = 0;<br>      FOR(i,B.sz) {<br>        while ((B[i].sz != 0) &amp;&amp; (B[i][0] &lt; k)) B[i].erase(B[i].begin(),B[i].begin()+1);<br>        if (B[i].sz == 0) return j;<br>        k = B[i][0];<br>        B[i].erase(B[i].begin(),B[i].begin()+1);<br>      }<br>      j++;<br>    }<br>    return -1;<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>