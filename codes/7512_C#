<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class LandAndSea<br>{<br>    int[] dx = new int[] { -1, -1, -1, 0, 1, 1, 1, 0 };<br>    int[] dy = new int[] { -1, 0, 1, 1, 1, 0, -1, -1 };<br>    int[] dx2 = new int[] { -1, 1, 0, 0};<br>    int[] dy2 = new int[] { 0, 0, -1, 1};<br>    int n, m;<br>    int count;<br>    int nn, mm;<br>    int[,] map;<br>    int[,] f;<br>    int[,] mas;<br> <br>    void calc(int x, int y, int val)<br>    {<br>        map[x, y] = val;<br>        for (int i = 0; i &lt; 8; i++)<br>        {<br>            int xx = x + dx[i];<br>            int yy = y + dy[i];<br>            if (xx &gt;= 0 &amp;&amp; xx &lt; nn &amp;&amp; yy &gt;= 0 &amp;&amp; yy &lt; mm &amp;&amp; map[xx, yy] == -1)<br>                calc(xx, yy, val);<br>        }<br>    }<br> <br>    void calc2(int x, int y, int val)<br>    {<br>        f[x, y] = 1;<br>        for (int i = 0; i &lt; 4; i++)<br>        {<br>            int xx = x + dx2[i];<br>            int yy = y + dy2[i];<br>            if (xx &gt;= 0 &amp;&amp; xx &lt; nn &amp;&amp; yy &gt;= 0 &amp;&amp; yy &lt; mm &amp;&amp; f[xx, yy] == 0)<br>            {<br>                if (map[xx, yy] == val || map[xx, yy] == 0)<br>                    calc2(xx, yy, val);<br>                else<br>                    mas[val, map[xx, yy]] = 1;<br>            }<br>        }<br>    }<br> <br>    public int[] howManyIslands(string[] seaMap)<br>  {<br>        n = seaMap.Length;<br>        m = seaMap[0].Length;<br>        nn = n + 3;<br>        mm = m + 3;<br>        map = new int[nn, mm];<br>        for (int i = 0; i &lt; n; i++)<br>            for (int j = 0; j &lt; m; j++)<br>                if (seaMap[i][j] != '.')<br>                    map[i + 2, j + 2] = -1;<br> <br>        map[0, 0] = -1;<br>        count = 0;<br>        for(int i = 0; i &lt; nn; i++)<br>            for(int j = 0; j &lt; mm; j++)<br>                if (map[i, j] == -1)<br>                    calc(i, j, ++count);<br> <br>        /*for(int i = 0; i &lt; nn; i++)<br>        {<br>            for (int j = 0; j &lt; mm; j++)<br>                System.Console.Write(map[i, j]);<br>            System.Console.WriteLine();<br>        }*/<br> <br>        if (count == 1)<br>            return new int[0];<br> <br>        mas = new int[count + 1, count + 1];<br>        f = new int[nn, mm];<br>        for (int k = 1; k &lt;= count; k++)<br>        {<br>            for(int i = 0; i &lt; nn; i++)<br>                for(int j = 0; j &lt; mm; j++)<br>                    f[i, j] = 0;<br> <br>            for (int i = 0; i &lt; nn; i++)<br>                for (int j = 0; j &lt; mm; j++)<br>                    if (map[i, j] == k)<br>                        calc2(i, j, k);<br>        }<br> <br>        int[] s = new int[count + 1];<br>        int[] r = new int[count + 1];<br>        int[] q = new int[count + 1];<br>        int[] fr = new int[count + 1];<br>        int numq = 1;<br>        q[0] = 1;<br>        s[1] = 1;<br>        int obr = 0;<br>        while (obr &lt; numq)<br>        {<br>            int x = q[obr];<br>            for(int i = 1; i &lt;= count; i++)<br>                if (s[i] == 0 &amp;&amp; mas[x, i] == 1)<br>                {<br>                    s[i] = 1;<br>                    fr[numq] = obr;<br>                    q[numq++] = i;<br>                }<br>            obr++;<br>        }<br> <br>        for (int i = numq - 1; i &gt;= 1; i--)<br>            r[fr[i]] = Math.Max(r[fr[i]], r[i] + 1);<br> <br>        int max = 0;<br>        for (int i = 1; i &lt; numq; i++)<br>            max = Math.Max(max, r[i]);<br> <br>        int[] res = new int[max + 1];<br>        for (int i = 1; i &lt; numq; i++)<br>            res[r[i]]++;<br> <br>        return res;<br>  }<br> <br>    <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>