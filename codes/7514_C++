<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;climits&gt;<br>#include &lt;cmath&gt;<br><br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;iostream&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;stack&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>int graf[100][100], n;<br>int memo[100][100][100];<br><br>int rec( int disam, int prosli, int p ) {<br>    if( disam == 1 ) return 0;<br><br>    int &amp;ref = memo[disam][prosli][p];<br>    if( ref &gt;= 0 ) return ref;<br><br>    ref = 1000000000;<br><br>    for( int i = 0; i &lt; n; ++i )<br>        if( i != p &amp;&amp; graf[disam][i] &gt;= 1 )<br>            if( graf[disam][i] &lt;= prosli )<br>                ref &lt;?= rec( i, graf[disam][i], disam ) + graf[disam][i];<br>    return ref;<br>}<br><br>class FamilyTravel {<br>  public:<br>  int shortest(vector &lt;string&gt; edges) {<br>        n = edges.size();<br>        for( int i = 0; i &lt; n; ++i )<br>            for( int j = 0; j &lt; n; ++j )<br>                if( edges[i][j] == '0' ) graf[i][j] = -1;<br>                else if( 'a' &lt;= edges[i][j] &amp;&amp; edges[i][j] &lt;= 'z' ) graf[i][j] = edges[i][j] - 'a' + 1;<br>                else if( 'A' &lt;= edges[i][j] &amp;&amp; edges[i][j] &lt;= 'Z' ) graf[i][j] = edges[i][j] - 'A' + 27;<br><br>        memset( memo, -1, sizeof memo );<br>        return rec( 0, 99, 99 ) &gt;= 1000000000 ? -1 : rec( 0, 99, 99 ) ;<br>  }<br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>