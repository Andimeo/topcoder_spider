<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;string.h&gt;<br><br>using namespace std;<br><br>class DigitMask {<br>  public:<br>  <br>  int flag[100];<br>  <br>  int howMany(vector &lt;string&gt; p, int len) {<br>    int i,j;<br>    <br>    memset(flag,-1,sizeof(flag));<br>    for (i = 0; i &lt; p.size(); i ++)<br>      if (p[i][0] == '-') {<br>        if (p[i].size() - 1 &gt; len)<br>          return 0;<br>        for (j = 1; j &lt; p[i].size(); j ++)<br>          if (p[i][j] != '?') {<br>            if (flag[j+len-p[i].size()] != -1 &amp;&amp; flag[j+len-p[i].size()] != p[i][j] - '0')<br>              return 0;<br>            flag[j+len-p[i].size()] = p[i][j] - '0';<br>            }<br>        }<br>      else<br>        if (p[i][p[i].size() - 1] == '-') {<br>          if (p[i].size() - 1 &gt; len)<br>            return 0;<br>          for (j = 0; j &lt; p[i].size() - 1; j ++)<br>            if (p[i][j] != '?') {<br>              if (flag[j] != -1 &amp;&amp; flag[j] != p[i][j] - '0')<br>                return 0;<br>              flag[j] = p[i][j] - '0';<br>              }<br>          }<br>        else {<br>          if (p[i].size() != len)<br>            return 0;<br>          for (j = 0; j &lt; p[i].size(); j ++)<br>            if (p[i][j] != '?') {<br>              if (flag[j] != -1 &amp;&amp; flag[j] != p[i][j] - '0')<br>                return 0;<br>              flag[j] = p[i][j] - '0';<br>              }<br>          }<br>    j = 1;<br>    for (i = 0; i &lt; len; i ++)<br>      if (flag[i] == -1)<br>        j *= 10;<br>    return j;<br>    }<br>  };<br></td>