<td class="problemText" colspan="8" valign="middle" align="left">
            #define FR(i,a,b) for (int i = (a); i &lt; (b); i++)<br>#define FOR(i,n) FR(i,0,n)<br>#define FORI(i,n) FOR(i,n.size())<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#define PB push_back<br>#define SZ size()<br>#define CS c_str()<br>#define S string<br>#define VS vector&lt;string&gt;<br>#define VI vector&lt;int&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;ctype.h&gt;<br>#include &lt;setjmp.h&gt;<br>#include &lt;regex.h&gt;<br>#include &lt;utility&gt;<br>#define ll long long<br>#define ld long double<br>#define EPS 1e-9<br>using namespace std;<br> <br>VS split(S s,S d=" "){VS rv; char foo[s.SZ+2],*bar;strcpy(foo,s.CS); for (bar = strtok(foo, d.CS); bar; bar = strtok(0, d.CS)) rv.PB(S(bar)); return rv;}<br> <br>struct NavalBattle {<br>map&lt;S,int&gt; candp;<br>#line 1 "foo"<br>int can(S s, int sl) {<br> if (candp.count(s)) return candp[s];<br> if (s.SZ &lt; sl) { FORI(i,s) if (s[i] == '#') return 0; return 1; }<br> if (s.SZ == sl) return 1;<br> return candp[s] = (s[sl] != '#' &amp;&amp; can(s.substr(sl+1), sl)) || (s[0] != '#' &amp;&amp; can(s.substr(1), sl));<br>}<br>#line 1 "bar"<br>int can(VI vi, int sl) {<br> S foo; FORI(i,vi) foo += "?.#"[vi[i]+1];<br>// printf("%s\n", foo.CS);<br> VS vs = split(foo, ".");<br> FORI(i,vs) if (!can(vs[i], sl)) return 0;<br> FORI(i,vs) if (vs[i].SZ &gt;= sl) return 1;<br> return 0;<br>}<br>#line 1 "baz"<br>int firstDishonestMove(int fieldLength, int shipLength, vector &lt;int&gt; shots, string answers) {<br> vector&lt;int&gt; vi(fieldLength, -1);<br> FORI(i,shots) {<br>  int ans = answers[i] - '0';<br>  if (ans == 0 &amp;&amp; vi[shots[i]] == 1) return i;<br>  if (ans == 1 &amp;&amp; vi[shots[i]] == 0) return i;<br>  vi[shots[i]] = ans;<br>  if (!can(vi, shipLength)) return i;<br> }<br> return -1;<br>}};<br>// Powered by ted<br></td>