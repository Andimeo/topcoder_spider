<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br><br>using namespace std;<br><br>class GamesSchedule {<br>  public:<br>    vector&lt;string&gt; sch;<br>    int k,n;<br>    bool ur[5][5];<br>    bool uc[5][5];<br>    int arr[5][5];<br>    int cnt[5];<br>    int use[5];<br>    <br>    int cmp(){<br>      for(int i=0;i&lt;n;i++)<br>        for(int j=0;j&lt;n;j++)<br>          if(sch[i][j]=='?') continue;<br>          else if(sch[i][j]=='-') { if(arr[i][j]!=-1) return 0; }<br>          else if(arr[i][j]!=sch[i][j]-'A') return 0;<br>      return 1;     <br>    }<br>    <br>    int rec(int r,int c,int u){<br>      if(c==n) return rec(r+1,0,-1);<br>      if(r==n) return cmp();<br>      int tot = 0;<br>      if(cnt[r]&lt;k) //if we haven't already assigned all teams <br>      {<br>        for(int p=0;p&lt;k;p++)<br>          if(!ur[r][p]&amp;&amp;!uc[c][p]&amp;&amp;(u==-1||use[c]==u)){<br>            ur[r][p]=uc[c][p]=1;<br>            arr[r][c]=p;<br>            cnt[r]++;<br>            use[c]++;<br>            tot += rec(r,c+1,use[c]-1);<br>            cnt[r]--;<br>            use[c]--;<br>            ur[r][p]=uc[c][p]=0;<br>          }           <br>      }<br>      if(cnt[r]+n-c &gt; k) //if we can fill in the rest of the brackets <br>        {<br>        arr[r][c]=-1;<br>        tot += rec(r,c+1,u);<br>      }<br>      return tot;<br>    }<br>    <br>    <br>    int howMany(vector&lt;string&gt; schedule, int _k){<br>      sch = schedule; k=_k; n = schedule.size();<br>      return rec(0,0,-1);<br>    }<br>};<br></td>