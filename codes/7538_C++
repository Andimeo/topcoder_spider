<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;queue&gt;<br>#define pb push_back<br>#define re return<br>using namespace std;<br> <br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;string&gt; vs;<br>class node<br>{<br>public:<br>string name;<br>int win;<br>int played;<br>};<br>bool lt(node a,node b)<br>{<br>  return (a.win&gt;b.win || (a.win==b.win &amp;&amp; a.name&lt;b.name));<br>}<br>class BasketballStandings {<br>public:<br>  vector&lt;string&gt; constructTable(vector&lt;string&gt;);<br>};<br> <br>vector&lt;string&gt; BasketballStandings::constructTable(vector&lt;string&gt; teams) {<br>  vector&lt;node&gt; t;<br>  int m=0;<br>  for(int i=0;i&lt;teams.size();i++)<br>  {<br>    char a[51];<br>    node temp;<br>    sscanf(teams[i].c_str(),"%s %d %d",a,&amp;temp.win,&amp;temp.played);<br>    temp.played+=temp.win;<br>    m&gt;?=temp.played;<br>    temp.name=a;<br>    t.pb(temp);<br>  }<br>  for(int i=0;i&lt;t.size();i++)<br>  {<br>    t[i].win=2*t[i].win+(m-t[i].played);<br>  }<br>  sort(t.begin(),t.end(),lt);<br>  for(int i=1;i&lt;t.size();i++)<br>  t[i].win=t[0].win-t[i].win;<br>  t[0].win=0;<br>  vs ans;<br>  for(int i=0;i&lt;t.size();i++)<br>  {<br>    string a=t[i].name;<br>    ostringstream s;<br>    s&lt;&lt;t[i].win/2;<br>    a=a+" "+s.str();<br>    if(t[i].win%2)<br>    a=a+".5";<br>    else<br>    a+=".0";<br>    ans.pb(a);<br>  }<br>  return ans;<br>}<br></td>