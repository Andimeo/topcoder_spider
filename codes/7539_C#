<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Text.RegularExpressions;<br>using System.Collections;<br>using System.Collections.Generic;<br><br>public class Tetrahedron {<br>  public string exists(string[] d) {<br>    int[,] dis = new int[4, 4];<br>    for (int i = 0; i &lt; 4; i++) {<br>      string[] ss = d[i].Split();<br>      for (int j = 0; j &lt; 4; j++) {<br>        dis[i, j] = int.Parse(ss[j]);<br>      }<br>    }<br>    if (dis[0, 1] + dis[1, 2] &lt; dis[0, 2]) return "NO";<br>    if (dis[0, 1] + dis[0, 2] &lt; dis[1, 2]) return "NO";<br>    if (dis[0, 2] + dis[1, 2] &lt; dis[0, 1]) return "NO";<br>    if (dis[0, 1] + dis[1, 3] &lt; dis[0, 3]) return "NO";<br>    if (dis[0, 1] + dis[0, 3] &lt; dis[1, 3]) return "NO";<br>    if (dis[0, 3] + dis[1, 3] &lt; dis[0, 1]) return "NO";<br>    if (dis[0, 3] + dis[3, 2] &lt; dis[0, 2]) return "NO";<br>    if (dis[0, 3] + dis[0, 2] &lt; dis[3, 2]) return "NO";<br>    if (dis[0, 2] + dis[3, 2] &lt; dis[0, 3]) return "NO";<br>    if (dis[3, 1] + dis[1, 2] &lt; dis[3, 2]) return "NO";<br>    if (dis[3, 1] + dis[3, 2] &lt; dis[1, 2]) return "NO";<br>    if (dis[3, 2] + dis[1, 2] &lt; dis[3, 1]) return "NO";<br><br>    double x = (double)(dis[1, 2] * dis[1, 2] + dis[1, 3] * dis[1, 3] - dis[2, 3] * dis[2, 3]) /<br>               (2 * dis[1, 2]);<br>    double h2 = dis[1, 3] * dis[1, 3] - x * x;<br>    double x_ = (double)(dis[1, 2] * dis[1, 2] + dis[1, 0] * dis[1, 0] - dis[2, 0] * dis[2, 0]) /<br>               (2 * dis[1, 2]);<br>    double h2_ = dis[1, 0] * dis[1, 0] - x_ * x_;<br>    if (dis[0, 3] * dis[0, 3] &gt; (x - x_) * (x - x_) + (Math.Sqrt(h2) + Math.Sqrt(h2_)) * (Math.Sqrt(h2) + Math.Sqrt(h2_)))<br>      return "NO";<br>    if (dis[0, 3] * dis[0, 3] &lt; (x - x_) * (x - x_) + (Math.Sqrt(h2) - Math.Sqrt(h2_)) * (Math.Sqrt(h2) - Math.Sqrt(h2_)))<br>      return "NO";<br>    return "YES";<br>  }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>