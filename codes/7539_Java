<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class Tetrahedron<br>{<br>  public String exists(String[] d)<br>  {<br>    int[][] data = splitInts2D(d);<br>    // most of this code is based on what I did for PIR on SPOJ long ago.<br>    int AB = data[0][1];<br>    int AC = data[0][2];<br>    int AD = data[0][3];<br>    int BC = data[1][2];<br>    int BD = data[1][3];<br>    int CD = data[2][3];<br>    //most of these are totally unnecessary, they just help me think:<br>    int ax = 0;<br>    int ay = 0;<br>    int az = 0;<br>    int bx = AB;<br>    int by = 0;<br>    int bz = 0;<br>    double x = (AB*AB+AC*AC-BC*BC)/(2.0*AC*AB);<br>    double cx = x*AC;<br>    double cy = AC*Math.sqrt(1-x*x);<br>    double cz = 0;<br>    double dx = (AD*AD-BD*BD+AB*AB)/(2.0*AB);<br>    double dynumer = (BD*BD-CD*CD-(bx-dx)*(bx-dx)+(cx-dx)*(cx-dx)+cy*cy);<br>    double dy = dynumer == 0 ? 0 : dynumer/(2*cy);<br>    double dzsq = (AD*AD-dx*dx-dy*dy);<br>    if (dzsq &gt;= 0)<br>      return "YES";<br>    else<br>      return "NO";<br>  }<br>  <br>  int[][] splitInts2D(String[] arr)<br>  {<br>    int[][] ret = new int[arr.length][];<br>    for (int i=0; i&lt;ret.length; i++)<br>    {<br>      String[] split = arr[i].split(" ");<br>      ret[i] = new int[split.length];<br>      for (int j=0; j&lt;split.length; j++)<br>        ret[i][j] = Integer.parseInt(split[j]);<br>    }    return ret;<br>  }<br>    <br>  <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>