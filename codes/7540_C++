<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>//typedef long long __int64;<br> <br>class QuantumAlchemy<br>{<br>public:<br>  int minSteps(string str, vector&lt;string&gt; reactions)<br>  {<br>    int C[26],A[26],i;<br>    string data[26];<br>    for (i=0;i&lt;26;i++) data[i]="";<br>    for (i=0;i&lt;reactions.size();i++)<br>    {<br>      string s=reactions[i];<br>      data[s[s.length()-1]-'A']=s.substr(0,s.length()-3);<br>    }<br>    memset(C,0,sizeof(C));<br>    for (i=0;i&lt;str.size();i++)<br>      C[str[i]-'A']++;<br>    memset(A,0,sizeof(A));<br>    A['X'-'A']++;<br>    int result=0;<br>    for (int step=0;step&lt;10000;step++)<br>    {<br>      for (i=0;i&lt;26;i++)<br>        if (A[i]&gt;C[i] &amp;&amp; data[i]=="") <br>          return -1;<br>      for (i=0;i&lt;26;i++) if (A[i]&gt;C[i]) break;<br>      if (i==26)<br>        return result;<br>      A[i]--;<br>      for (int k=0;k&lt;data[i].length();k++)<br>        A[data[i][k]-'A']++;<br>      result++;<br>    }<br>    return -1;<br>  }<br>};<br> <br> <br>// Powered by PopsEdit<br></td>