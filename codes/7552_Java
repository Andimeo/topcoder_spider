<td class="problemText" colspan="8" valign="middle" align="left">
            // In memory of James Emerson<br>import java.util.*;import java.text.*;import java.math.*;import java.util.regex.*;import java.awt.geom.*;import static java.lang.Math.*;import static java.lang.Character.*;import static java.lang.Integer.*;import static java.lang.Double.*;import static java.lang.Long.*;import static java.lang.System.*;import static java.util.Arrays.*; import java.util.*; <br><br>// Integer<br>// int<br>class Scale {<br>  public TreeSet&lt;Integer&gt; tree = new TreeSet&lt;Integer&gt;();<br><br>  public void add(int... t) {<br>    for (int i = 0; i &lt; t.length; i++)<br>      tree.add(t[i]);<br>  }<br><br>  public int[] toArray() {<br>    int[] ret = new int[tree.size()];<br>    int cnt = 0;<br>    for (int x : tree) {<br>      ret[cnt++] = x;<br>    }<br>    return ret;<br>  }<br>}<br>public class EntertainingSegment {<br>  private int m, n;<br>  public int longestEntertainingSegment(int[] left, int[] right, int k) {<br>    Scale scale = new Scale();<br>    scale.add(left);<br>    scale.add(right);<br>    scale.add(0);<br>    scale.add(1000000001);<br>    <br>    int[] a = scale.toArray();<br>    int[] b = new int[ a.length ];<br>    n = left.length;<br>    for (int i = 0; i &lt; a.length-1; i++) {<br>      for (int j = 0; j &lt; n; j++) {<br>        if (a[i]&gt;=left[j] &amp;&amp; a[i+1]&lt;=right[j]) b[i] ++; <br>      }<br>    }<br>    boolean ok = false;<br>    int l = 0, r =0;<br>    for (int i = 0; i &lt; b.length-1; i++) {<br>      if (b[i]&gt;=k) {<br>        r = a[i+1];<br>        if (!ok) {<br>          ok = true;<br>          l = a[i];<br>        }<br>        ret = max (ret, r-l);<br>//        System.out.println(r+ " "+ l);<br>      } else {<br>        ok = false;<br>      }<br>    }<br>    return ret;<br>  }<br>  private int ret;<br>  <br>  <br>  <br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>