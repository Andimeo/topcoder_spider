<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;utility&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>vector&lt;string&gt;    words;<br><br>bool  check( string word , int a , int b )<br>{<br>  int    i;<br><br>  for(i = 1; i &lt; word.length(); i ++)<br>    if( word[i - 1] == (char)a + 'a' &amp;&amp; word[i] == (char)b + 'a' ) return 1;<br>  return 0;<br>}<br><br>class DigramAnalysis <br>{<br>  public:<br>  string mostFrequent(vector &lt;string&gt; chunks)<br>  {<br>    int  i , j , k;<br>    int  am , cnt;<br>    string  text , x;<br><br>    for(i = 0; i &lt; chunks.size(); i ++)<br>      text += chunks[i];<br><br>    words.clear();<br><br>    istringstream  strin( text );<br>    while( strin &gt;&gt; x )<br>      words.push_back( x );<br><br>    am = -1; x = "";<br><br>    for(i = 0; i &lt; 26; i ++)<br>      for(j = 0; j &lt; 26; j ++)<br>      {<br>        cnt = 0;<br>        for(k = 0; k &lt; words.size(); k ++)<br>          if( check(words[k] , i , j) ) cnt ++;<br>        if(cnt &gt; am)<br>        {<br>          am = cnt;<br>          x = (char)i + 'a'; x += (char)j + 'a';<br>        }<br>      }<br><br>    return x;<br>  }<br>  <br><br>};<br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>