<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>#define foreach(it,c) for(typeof((c).begin()) it = (c).begin();it != (c).end();++it)<br>#define print(A, N) copy(A, A + N, ostream_iterator&lt;int&gt;(cout, " "));<br> <br>using namespace std;<br> <br>class ItemizedList {<br>public:<br>  vector &lt;string&gt; generateList(vector &lt;string&gt;);<br>};<br> <br>vector &lt;string&gt; ItemizedList::generateList(vector &lt;string&gt; items) {<br>  map&lt;string, int&gt; M;<br>  for (int i = 0; i &lt; items.size(); i++)   <br>    M [ items [i] ] ++;<br>  vector&lt;string&gt; res;<br>  foreach(it, M) {<br>    ostringstream out;<br>    out &lt;&lt; it -&gt; first &lt;&lt; " - " &lt;&lt; it -&gt; second;<br>    res.push_back( out.str() );<br>  }<br>  return res;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>