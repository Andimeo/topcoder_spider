<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br><br>using namespace std;<br><br>#define forn(i, n) for (int i = 0; i &lt; (int)(n); i++)<br>#define forv(i, v) forn(i, v.size())<br>#define fors(i, v) forn(i, v.length())<br>#define ALL(x) x.begin(), x.end()<br>#define pb push_back <br>#define EPS (1E-10)<br><br>struct HittingPerfectTarget<br>{<br>  pair&lt;double, double&gt; cross(vector &lt;int&gt; x, vector &lt;int&gt; y, double Y)<br>  {<br>    vector&lt;double&gt; r;<br>    <br>    int n = x.size();<br>    <br>    forn(i, n)<br>    {<br>    forn(j, n)<br>    {<br>      double xa = x[i], ya = y[i];<br>      double xb = x[j], yb = y[j];<br>      <br>      if (((ya &lt;= Y + EPS &amp;&amp; Y &lt;= yb + EPS) || (yb &lt;= Y + EPS &amp;&amp; Y &lt;= ya + EPS)) &amp;&amp; (ya != yb))<br>      {<br>        double X = xa + (xb - xa) * (Y - ya) / (yb - ya);    <br>        r.push_back(X);<br>      }<br>    }<br>    }<br>    <br>    <br>    if (r.size() == 0)<br>    {<br>      return make_pair(1, 0);<br>    }<br>    <br>    sort(r.begin(), r.end());<br>    <br>    return make_pair(r[0], r[r.size() - 1]);<br>  }<br>  <br>  double getProbability(vector &lt;int&gt; x1, vector &lt;int&gt; y1, vector &lt;int&gt; x2, vector &lt;int&gt; y2)<br>  {<br>    double ans = 0;<br>    for (int i = -100; i &lt;= 100; i++)<br>    {<br>      pair&lt;double, double&gt; A = cross(x1, y1, i);<br>      pair&lt;double, double&gt; B = cross(x2, y2, i);<br>      <br>      for (int j = -100; j &lt;= 100; j++)<br>        if (max(A.first, B.first) &lt;= j + EPS &amp;&amp; j &lt;= min(A.second, B.second) + EPS)<br>        {<br>          ans++;<br>          //cout &lt;&lt; i &lt;&lt; "  " &lt;&lt; j &lt;&lt; endl;<br>        }<br>    }<br>    <br>    return ans / 201.0 / 201.0;<br>  }<br>};<br></td>