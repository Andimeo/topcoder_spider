<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br><br>public class StarsInGraphs {<br>  boolean G [][];<br>  int d [];<br>  int n, C;<br>  long S [];<br>  int F [];<br>  int A [];<br><br>  int ans (int x) {<br>    if (d[x] &lt; 3 || S[d[x]] &gt; C) return 0;<br>    if (F[x] == 1) {<br>      F[x] = 2;<br>      A[x] = 1000;<br>      return 1000;<br>    };<br>    if (F[x] == 2)<br>      return A[x];<br>    F[x] = 1;<br>    A[x] = 1;<br>    for (int i = 0; i &lt; n; i++)<br>      if (G[x][i] &amp;&amp; d[i] &gt;= d[x]) {<br>        int cur = 1 + ans (i);<br>        if (cur &gt; 1000) cur = 1000;<br>        if (cur &gt; A[x]) A[x] = cur;<br>      };<br>    F[x] = 2;<br>    return A[x];<br>  };<br><br>  public int starryPaths (String [] gr, int CC) {<br>    S = new long [51];<br>    C = CC;<br><br>    for (int i = 3; i &lt;= 50; i++) {<br>      S[i] = 1;<br>      S[i] &lt;&lt;= i;<br>      S[i] -= 1 + i + (i * (i - 1)) / 2;<br>    };<br><br>    n = gr.length;<br>    G = new boolean [n][n];<br>    d = new int [n];<br>    for (int i = 0; i &lt; n; i++)<br>      for (int j = 0; j &lt; n; j++) {<br>        G[i][j] = gr[i].charAt (j) == '1';<br>        if (G[i][j]) ++d[i];<br>      };<br><br>    F = new int [n];<br>    A = new int [n];<br><br>    int mx = 0;<br><br>    for (int i = 0; i &lt; n; i++) {<br>      int cur = ans (i);<br>      if (cur &gt; mx)<br>        mx = cur;<br>    };<br><br>    if (mx &gt; n) return -1;<br><br>    return mx;<br>  };<br>};<br></td>