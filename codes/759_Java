<td class="problemText" colspan="8" valign="middle" align="left">
            public class RiverHill<br>{<br>int h[][] = new int[64][64];<br>int nr, nc;<br>public int largest(String[] map, int md)<br>{<br>   nr = map.length; nc = map[0].length();<br>   for (int i = 0; i &lt;= nr + 1; i++) for (int j = 0; j &lt;= nc + 1; j++) h[i][j] = 10;<br>   for (int i = 0; i &lt; nr; i++)<br>      for (int j = 0; j &lt; nc; j++)<br>         h[i+1][j+1] = map[i].charAt(j) - '0';<br> <br>   int best = 0;<br>   for (int i = 1; i &lt;= nr; i++)<br>      for (int j = 1; j &lt;= nc; j++) {<br>         int sc = flood(i, j, md);<br>         if (sc &gt; best) best = sc;<br>      }<br>   return best;<br>}<br> <br>int queue[] = new int[200000];<br>int qptr, qtail;<br>int hit[][] = new int[64][64];<br>int dr[] = {1,0,-1,0};<br>int dc[] = {0,1,0,-1};<br> <br>int flood(int sr, int sc, int md)<br>{<br>   int x, r, c, i, rr, cc, cnt = 0;<br> <br>   for (r = 1; r &lt;= nr; r++)<br>      for (c = 1; c &lt;= nc; c++)<br>         hit[r][c] = -1;<br> <br>   qptr = qtail = 0;<br>   queue[qptr++] = sr * 64 + sc;<br>   hit[sr][sc] = md; cnt++;<br> <br>   while (qptr != qtail) {<br>      x = queue[qtail++]; r = x / 64; c = x % 64;<br> <br>      for (i = 0; i &lt; 4; i++) {<br>         rr = r + dr[i]; cc = c + dc[i];<br>         if (h[rr][cc] &gt; h[r][c]) continue;<br>         if (h[rr][cc] &lt; h[r][c]) {<br>            if (hit[rr][cc] &lt; 0) cnt++;<br>            if (hit[rr][cc] &lt; md) {<br>               hit[rr][cc] = md;<br>               queue[qptr++] = rr * 64 + cc;<br>            }<br>         } else if (h[rr][cc] == h[r][c] &amp;&amp; hit[r][c] &gt; 0) {<br>            if (hit[rr][cc] &lt; 0) cnt++;<br>            if (hit[rr][cc] &lt; hit[r][c] - 1) {<br>               hit[rr][cc] = hit[r][c] - 1;<br>               queue[qptr++] = rr * 64 + cc;<br>            }<br>         }    <br>      }<br>   }<br>   return cnt;<br>}<br>}<br></td>