<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br><br>using namespace std;<br><br>#define forn(i, n) for (int i = 0; i &lt; (int)(n); i++)<br>#define forv(i, v) forn(i, v.size())<br>#define fors(i, v) forn(i, v.length())<br>#define ALL(x) x.begin(), x.end()<br>#define pb push_back <br><br>struct TournamentsAmbiguityNumber<br>{<br>  int scrutinizeTable(vector &lt;string&gt; t)<br>  {<br>    int ans = 0;<br>    <br>    int n = t.size();<br>    <br>    forn(i, n) <br>      forn(j, n)<br>        forn(k, n)<br>          if (i != j &amp;&amp; j != k &amp;&amp; k != i)<br>            if (t[i][j] == '1' &amp;&amp; t[j][k] == '1' &amp;&amp; t[k][i] == '1')<br>              ans++;<br>              <br>    return ans;<br>  }<br>};<br></td>