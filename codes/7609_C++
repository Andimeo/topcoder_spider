<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;fstream&gt;<br>#include &lt;math.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;iterator&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;stack&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cctype&gt;<br>#include &lt;assert.h&gt;<br>#include &lt;list&gt;<br>#include &lt;ext/hash_set&gt;<br>#include &lt;ext/hash_map&gt;<br><br>using namespace __gnu_cxx;<br>using namespace std;<br><br>#define MP(a,b) make_pair(a,b)<br>#define i64 long long<br>#define pb push_back<br>#define For(i,a,b) for(typeof(a) i=(a);i&lt;(b);i++)<br>#define Rev(i,a,b) for(typeof(a) i=(a);i&gt;=(b);i--)<br>#define FOREACH(V,it) for(typeof(V.begin()) it=V.begin();it!=V.end();it++)<br>#define CLR(a,x) memset(a,x,sizeof(a))<br>#define ALL(x) x.begin(),x.end()<br><br>/**********************************************************************************/<br>vector&lt; vector&lt;int&gt; &gt; a;<br>i64 SUM(int x, int y ,int x1, int y1){<br>  if (x&gt;=0 &amp;&amp; x&lt;a.size() &amp;&amp; x1&gt;=0 &amp;&amp; x1&lt;= a.size() &amp;&amp; y1&gt;=0 &amp;&amp; y1&lt;a[0].size() &amp;&amp; y&gt;=0 &amp;&amp; y&lt;= a[0].size()){<br>    i64 sum= a[x1][y1];<br>    if (x) sum-= a[x-1][y1];<br>    if (y) sum-= a[x1][y-1];<br>    if (x&amp;&amp;y) sum+= a[x-1][y-1];<br>    return sum;<br>  }<br>  else return 0;<br>  <br>}<br><br>i64 doit(int x, int y, int x1, int y1){<br>  i64 ret=0;<br>  For(i,x,x1+1){<br>    ret&gt;?= SUM(x,y,i-1,y1) * SUM(i,y,x1,y1);<br>  }<br>  For(i,y,y1+1){<br>    ret&gt;?= SUM(x,y,x1,i-1) * SUM(x,i,x1,y1);<br>  }<br>  return ret;<br><br>}<br>struct DividingRectangle{<br>public:<br>  long long maxProduct(vector &lt;string&gt; rectangle){<br>    a.resize(rectangle.size());<br>    For(i,0,rectangle.size()){<br>      a[i].resize( rectangle[0].size());<br>      For(j,0,rectangle[0].size())<br>        a[i][j]= rectangle[i][j]-'0';<br>    }<br>    For(i,0,a.size())<br>      For(j,0,a[0].size()){ if (i) a[i][j]+= a[i-1][j]; if (j) a[i][j]+= a[i][j-1]; if (i&amp;&amp;j) a[i][j]-= a[i-1][j-1];}<br>    i64 ret=0;<br>    For(i,0,a.size()){<br>      ret&gt;?= SUM(0,0,i-1,a[i].size()-1) * doit(i,0,a.size()-1,a[0].size()-1);<br>      ret&gt;?= SUM(i,0,a.size()-1,a[i].size()-1) * doit(0,0,i-1,a[0].size()-1);<br>    }<br>    For(j,0,a[0].size()){<br>      ret&gt;?= SUM(0,0,a.size()-1,j-1)* doit(0,j,a.size()-1,a[0].size()-1);<br>      ret&gt;?= SUM(0,j,a.size()-1,a[0].size()-1)* doit(0,0,a.size()-1,j-1);<br>    }<br>      return ret;<br><br>  }<br><br>};<br></td>