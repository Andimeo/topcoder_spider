<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;map&gt; <br>#include &lt;set&gt; <br>#include &lt;cmath&gt; <br>#include &lt;string&gt; <br>#include &lt;vector&gt; <br>#include &lt;algorithm&gt; <br>using namespace std; <br>#define FOR(i,a,b) for(int i=(a); i&lt;(b); ++i) <br>#define FORE(it,x) for(typeof(x.begin()) it=x.begin(); it!=x.end(); ++it) <br>#define SET(x, v) memset(x, v, sizeof (x)) <br>#define pb push_back <br>#define sz size() <br>#define cs c_str() <br><br>typedef long long i64; <br><br>class   SumsOfPerfectPowers                    { public: <br>// <br>  int res ;<br>  int cnt[5000000+10];<br>  int howMany(int lowerBound, int upperBound){<br>    SET(cnt,0);<br>    i64 ii, jj;<br>    FOR(i,0,2300){<br>      FOR(j,0,2300){<br>        ii= i*i;<br>        FOR(k,2,5000000){<br>          jj=j*j;<br>          FOR(l,2,5000000){<br>            if(jj+ii &gt; 5000000) break;<br>            cnt[jj+ii]=1;<br>            jj*=j;<br>            if(j&lt;2)break;<br>          }    <br>          ii*=i;      <br>          if(ii &gt; 5000000 || i&lt;2) break;<br>        }<br>      }<br>    }<br>    FOR(i,1,5000001)<br>      cnt[i]+=cnt[i-1];<br>    if(lowerBound)<br>      res = cnt[upperBound] - cnt[lowerBound-1];<br>    else<br>      res = cnt[upperBound];<br>    return res;<br>  }<br><br>};<br></td>