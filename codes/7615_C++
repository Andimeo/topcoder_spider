<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt; <br>#include &lt;numeric&gt;<br>#include &lt;string&gt; <br>#include &lt;set&gt; <br>#include &lt;map&gt; <br>#include &lt;vector&gt; <br>#include &lt;queue&gt; <br>#include &lt;deque&gt;<br>#include &lt;iostream&gt; <br>#include &lt;iterator&gt; <br>#include &lt;sstream&gt; <br>#include &lt;cmath&gt; <br>#include &lt;cstdio&gt; <br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;stack&gt; <br>#include &lt;complex&gt;<br> <br>using namespace std; <br> <br>#define FOR(i,a,b) for (int _n(b), i(a); i &lt; _n; i++) <br>#define REP(i,n) FOR(i,0,n) <br>#define ALL(c) (c).begin(), (c).end() <br>#define SORT(c) sort(ALL(c))<br>#define pb push_back <br>#define sz size() <br>#define INF 2147483647<br>#define MAX(a,b) (((a) &gt; (b)) ? (a) : (b))<br>#define MIN(a,b) (((a) &lt; (b)) ? (a) : (b))<br> <br>class Defects {<br>  public:<br>  double maxSum(int w1, int h1, vector &lt;double&gt; dw, vector &lt;double&gt; dh) {<br>  double w = w1, h = h1;<br>  vector&lt;double&gt; sw, sh;<br>  REP(i,dw.sz)<br>  {<br>    sw.pb(w - dw[i]);<br>    sh.pb(h - dh[i]);<br>  }<br> <br>  double res = 0;<br> <br>  REP(i, sw.sz)<br>  {<br>    double now = 0;<br>    double w1 = sw[i], h1 = sh[i];<br>    REP(j, dw.sz)<br>    {<br>      double w2 = dw[j], h2 = dh[j];<br>      double dist1 = 0, dist2 = 0;<br>      if (fabs(w2 - w1) == w)<br>      {<br>        double d = w + MIN(h1 + h2, 2*h - (h1+h2));<br>        dist1 = d; dist2 = 2*(w+h) - dist1;<br>      }<br>      else<br>      {<br>        if (fabs(h2-h1) == h)<br>        {<br>          double d = h + MIN(w1 + w2, 2*w - (w1+w2));<br>          dist1 = d; dist2 = 2*(w+h) - dist1;<br>        }<br>        else<br>        {<br>          double d = fabs(w1-w2) + fabs(h1-h2);<br>          dist1 = d; dist2 = 2*(w+h) - dist1;<br>        }<br>      }<br>      double dist = MIN(dist1, dist2);<br>      now += dist;<br>    }//rep j<br>    if (now &gt; res)<br>      res = now;<br>  }//rep i<br>  return res;<br>  }<br> <br>};<br> <br>// Powered by PopsEdit<br></td>