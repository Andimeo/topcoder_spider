<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System<br>Imports System.Collections<br>Imports System.Text<br> <br>Public Class Defects<br> <br>  Public function md(byval x as double, byval y as double, byval w as integer, byval h as integer) As Double<br>    Return Math.Min(Math.Abs(x-y),2*w+2*h-Math.abs(x-y))<br>  End Function<br>  Public Function maxSum(ByVal w As Integer, ByVal h As Integer, ByVal defectw As Double(), ByVal defecth As Double()) As Double<br>    Dim np As Integer = defectw.getupperbound(0)<br>    Dim trans(np) As Double<br>    Dim I As Integer<br>    <br>    For I = 0 to np<br>      If defecth(I) = 0 Then<br>        trans(I) = defectw(I)<br>      ElseIf defectw(I) = w Then<br>        trans(I) = w + defecth(I)<br>      ElseIf defecth(I) = h Then<br>        trans(I) = w + h + (w - defectw(I))<br>      Else<br>        trans(I) = 2*w+h + (h - defecth(I))<br>      End If<br>    Next I<br>    <br>    Dim BestTot As Double<br>    Dim BestVal As Double<br>    Dim TestVal AS Double<br>    Dim TestTot As Double<br>    Dim J As Double<br>    <br>     For I = 0 to 10000<br>      TestVal = (2*w+2*h)*(I/10000)<br>      TestTot = 0<br>      For J = 0 to np<br>        TestTot+=md(testval,trans(J),w,h)<br>      Next J<br>      If TestTot &gt; BestTot Then<br>        BestTot = TestTot<br>        BestVal = TestVal<br>      End If <br>     Next I<br>     <br>     <br>    <br>    If 2*h+2*w - BestVal &lt; 0.02 Or BestVal &lt; 0.02 Then<br>      BestVal = (BestVal+ 1) Mod (2*h+2*w)<br>      For I = 0 to np<br>        trans(I) = (trans(I) + 1) Mod (2*h+2*w)<br>      Next I<br>    End If<br>    <br>    Dim LB As Double = BestVal  - 0.5<br>    Dim UB As Double = BestVal + 0.5<br>    <br>    Dim T1 As Double, T2 As Double<br>    Dim V1 As Double = 1, V2 As Double = 0<br>    <br>    Do Until UB-LB &lt; 1e-13<br>      <br>      T1 = LB + (UB - LB)  * (1 - ((5)^(1/2)-1)/2)<br>      T2 = LB + (UB - LB) * (((5)^(1/2)-1)/2)<br>      V1 = 0<br>      V2 = 0<br>      For J = 0 to np<br>        V1 +=md(T1,trans(J),w,h)<br>        V2 +=md(T2,trans(J),w,h)<br>      Next J    <br>      If V1 &gt; V2 Then<br>        UB = T2<br>      Else<br>        LB = T1<br>      End If<br>    Loop<br>    <br>    Return Math.Max(V2,V1)<br>    <br>  End Function<br>End Class<br></td>