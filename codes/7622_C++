<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;memory&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;cmath&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;sstream&gt;<br>#include &lt;queue&gt;<br><br>#define FUP(i,j,k)  for (i=(j);i&lt;(k);i++)<br>#define FDOWN(i,j,k) for (i=(j);i&gt;(k);i--)<br>#define MAX(i,j) (((i)&gt;(j))?(i):(j))<br>#define MAXI(i,j) {if ((j)&gt;(i)) i=(j);}<br>#define MIN(i,j) (((i)&lt;(j))?(i):(j))<br>#define MINI(i,j) {if ((j)&lt;(i)) i=(j);}<br>#define FIT(it,a) for (it=a.begin();it&lt;a.end();it++)<br>#define int64 long long<br><br>using namespace std;<br>class Candles{<br>public:<br>  int64 gcd(int64 a, int64 b){<br>    if (b==0) return a; else return gcd(b,a%b);<br>  }<br><br>  int ceremonies(int n, int n1, int r1, int n2, int r2){<br>    int64 r=gcd(r1,r2);<br><br>    int64 a1=r2/r;<br><br>    int64 a2=r1/r;<br><br>    int64 m=n1*a1+n2*a2;<br>    if (n*a1&gt;n1*a1+n2*a2||n*a2&gt;n1*a1+n2*a2) return -1;<br>    int64 t=n/gcd(n,m);<br>    a1*=t;a2*=t;<br>    return (a1*n1+a2*n2)/n;<br>  }<br><br>};<br></td>