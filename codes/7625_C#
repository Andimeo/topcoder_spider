<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Text.RegularExpressions;<br>using System.Collections;<br>using System.Collections.Generic;<br><br>public class SimpleRotationDecoder {<br>    public string decode(string cipherText) {<br>        string res;<br>        for (char a = 'a'; a &lt;= 'z'; a++ )<br>          for (char b = 'a'; b &lt;= 'z'; b++)<br>            for (char c = 'a'; c &lt;= 'z'; c++)<br>            {<br>              res = dec(cipherText, a.ToString() + b.ToString() + c.ToString());<br>              if (isCorrect(res)) return res;<br>            }<br>          return "";<br>    }<br><br>  string dec(string text, string pass)<br>  {<br>    string res = "";<br>    for(int i = 0; i &lt; text.Length; i++)<br>    {<br>      res += fchar(fint(text[i]) + fint(pass[i%3]));<br>    }<br>    return res;<br>  }<br><br>  bool isCorrect(string s)<br>  {<br>    if (s[0] == ' ') return false;<br>    if (s[s.Length - 1] == ' ') return false;<br>    for (int i = 1; i &lt; s.Length - 3; i++)<br>      if (s[i] == ' ' &amp;&amp; s[i + 1] == ' ') return false;<br>    string[] ss = s.Split();<br>    foreach (string s1 in ss)<br>    {<br>      if (s1.Length &lt; 2 || s1.Length &gt; 8) return false;<br>      bool b = false;<br>      for (int i = 0; i &lt; s1.Length; i++)<br>        if (s1[i] == 'a' || s1[i] == 'e' || s1[i] == 'i' || s1[i] == 'o' || s1[i] == 'u')<br>        {<br>          b = true;<br>          break;<br>        }<br>      if (!b) return false;<br>    }<br>    return true;<br>  }<br><br>  int fint(char a)<br>  {<br>    if (a == ' ')<br>      return 0;<br>    else<br>      return a - 'a' + 1;<br>  }<br><br>  char fchar(int a)<br>  {<br>    a = a%27;<br>    if (a == 0) return ' ';<br>    else return (char)('a' + a - 1);<br>  }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>