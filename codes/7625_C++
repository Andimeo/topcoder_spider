<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>using namespace std;<br><br>typedef double LD;<br>typedef long LL;<br><br>class SimpleRotationDecoder<br>{<br>public:<br>  char getChar( char c1, char c2 )<br>  {<br>    int v1 = ( c1 == ' ' ? 0 : 1 + (int)(c1-'a') );<br>    int v2 = ( c2 == ' ' ? 0 : 1 + (int)(c2-'a') );<br><br>    if ( v1 &gt; v2 )<br>      return (char)(v1-v2-1+'a');<br><br>    if ( v1 &lt; v2 )<br>      return (char)(26+v1-v2+'a');<br><br>    return ' ';<br>  }<br>  <br>  bool isVow(char c)<br>  {<br>    return (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u');<br>  }<br><br>  string decode(string s)<br>  {<br>    char s1[64];<br>    char s2[4];<br>    int i;<br>    int j;<br>    int k;<br>    int n = s.length();<br><br>    s1[n] = 0;<br>    s2[3] = 0;<br>    for ( s2[0] = 'a'; s2[0]&lt;='z'; s2[0]++ )<br>    for ( s2[1] = 'a'; s2[1]&lt;='z'; s2[1]++ )<br>    for ( s2[2] = 'a'; s2[2]&lt;='z'; s2[2]++ )<br>    {<br>//      cout &lt;&lt; s2 &lt;&lt; endl;<br>      for ( i=0,j=0; i&lt;n; i++, j=(j+1)%3 )<br>        s1[i] = getChar( s[i], s2[j] );<br>      for ( i=0; i&lt;n-1; i++ )<br>        if ( s1[i] == ' ' &amp;&amp; s1[i+1] == ' ' )<br>          break;<br>      if ( i &gt;= n-1 &amp;&amp; s1[0] != ' ' &amp;&amp; s1[n-1] != ' ' )<br>      {<br>        i = 0;<br>        while ( true )<br>        {<br>          for ( ; i&lt;n; i++ )<br>            if ( s1[i] != ' ' )<br>              break;<br>          if ( i &gt;= n )<br>            break;<br>          for ( j=i+1; j&lt;n; j++ )<br>            if ( s1[j] == ' ' )<br>              break;<br>          if ( j-i &lt; 2  || j-i &gt; 8 )<br>            break;<br>          bool vow = false;<br>          for ( k=i; k&lt;j; k++ )<br>            if ( isVow( s1[k] ) )<br>              vow = true;<br>          if ( !vow )<br>            break;<br>          i = j;<br>        }<br>        if ( i &gt;= n )<br>          return string( s1 );<br>      }<br>    }<br><br>    return "";<br>  }<br>};<br></td>