<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;ext/hash_map&gt;<br>#include &lt;set&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;complex&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br>using namespace __gnu_cxx;<br>typedef long long ll;<br>typedef unsigned long long ull;<br>typedef long double ld;<br> <br>#define foreach(c, i) for (__typeof(c.end()) i = c.begin(); i != c.end(); ++i)<br>#define fi(s, e) for (int i = s; i &lt; e; ++i)<br>#define fj(s, e) for (int j = s; j &lt; e; ++j)<br>#define fk(s, e) for (int k = s; k &lt; e; ++k)<br>#define fl(s, e) for (int l = s; l &lt; e; ++l)<br>#define all(c) c.begin(), c.end()<br> <br>int n;<br>vector&lt;int&gt; xx, yy, ww;<br>ll thr;<br> <br>bool fall(int bm)<br>{<br>  ll tx = 0, ty = 0;<br>  fi (0, n) if (bm &amp; (1&lt;&lt;i)) tx += -yy[i]*ww[i], ty += xx[i]*ww[i];<br>  return tx*tx + ty*ty &gt; thr*thr;<br>}<br> <br>char help[1&lt;&lt;21][2];<br> <br>char win(int bm, int pl)<br>{<br>  char &amp;now = help[bm][pl];<br>  if (now != -1) return now;<br>  <br>  if (fall(bm)) return now = 1;<br>  if (bm == 0) return now = (pl == 1);<br>  <br>  fi (0, n) if ((bm &amp; (1&lt;&lt;i)) &amp;&amp; !win(bm &amp; (~(1&lt;&lt;i)), 1-pl)) return now = 1;<br>  return now = 0;<br>}<br> <br>class BalancingGame {<br>  public:<br>  vector &lt;int&gt; winningMoves(vector &lt;int&gt; x, vector &lt;int&gt; y, vector &lt;int&gt; w, int threshold) {<br>    n = x.size();<br>    thr = threshold;<br>    xx = x, yy = y, ww = w;<br>    int initbm = (1&lt;&lt;n)-1;<br>    if (fall(initbm)) return vector&lt;int&gt;(1, -1);<br>    vector&lt;int&gt; ans;<br>    memset(help, -1, sizeof(help));<br>    fi (0, n) if (!win(initbm &amp; (~(1&lt;&lt;i)), 1)) ans.push_back(i);<br>    return ans;<br>  }<br>};<br> <br> <br>// Powered by PopsEdit<br></td>