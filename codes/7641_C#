<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br> <br>public class BuildTheBestTeam<br>{<br>    private class Player : IComparable&lt;Player&gt;<br>    {<br>        private int usual;<br>        private int power;<br> <br> <br>        public int Usual<br>        {<br>            get { return usual; }<br>            set { usual = value; }<br>        }<br> <br>        public int Power<br>        {<br>            get { return power; }<br>            set { power = value; }<br>        }<br> <br>        public Player(int usual, int power)<br>        {<br>            this.usual = usual;<br>            this.power = power;<br>        }<br> <br>        public int CompareTo(Player other)<br>        {<br>            if (usual != other.usual) return other.usual - usual;<br>            return other.power - power;<br>        }<br>    }<br> <br>    public int maximalStrength(int[] usualSkills, int[] powerplaySkills, int m, int p)<br>    {<br>        int n = usualSkills.Length;<br>        p--;<br>        Player[] players = new Player[n];<br>        for (int i = 0; i &lt; n; i++) players[i] = new Player(usualSkills[i], powerplaySkills[i]);<br>        Array.Sort(players);<br>        int[,] d = new int[n + 1,n + 1];<br>        d[0, 0] = 1;<br>        for (int i = 1; i &lt;= n/m; i++)<br>        {<br>            if (i%2 == 1)<br>            {<br>                for (int j = (i - 1)*m + p + 1; j &lt;= n; j++)<br>                {<br>                    for (int k = 0; k &lt; j; k++)<br>                        if (d[i - 1, k] &gt; 0 &amp;&amp; d[i - 1, k] + players[j - 1].Power &gt; d[i, j])<br>                        {<br>                            d[i, j] = d[i - 1, k] + players[j - 1].Power;<br>                        }<br>                }<br>            }<br>            else<br>            {<br>                for (int j = (i - 1) * m + m - p; j &lt;= n; j++)<br>                {<br>                    for (int k = 0; k &lt; j; k++)<br>                        if (d[i - 1, k] &gt; 0 &amp;&amp; d[i - 1, k] + players[j - 1].Power &gt; d[i, j])<br>                        {<br>                            d[i, j] = d[i - 1, k] + players[j - 1].Power;<br>                        }<br>                }<br>            }<br>        }<br>        int ans = 0;<br>        for (int j = 0; j &lt;= n; j++)<br>            if (d[n/m, j] &gt; ans) ans = d[n/m, j];<br>        return ans-1;<br>    }<br>}<br> <br>//Powered by [Zigger]<br></td>