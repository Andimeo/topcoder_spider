<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;ext/hash_map&gt;<br>#include &lt;set&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;complex&gt;<br>#include &lt;numeric&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br>using namespace __gnu_cxx;<br>typedef long long ll;<br>typedef unsigned long long ull;<br>typedef long double ld;<br> <br>#define foreach(c, i) for (__typeof(c.end()) i = c.begin(); i != c.end(); ++i)<br>#define fi(s, e) for (int i = s; i &lt; e; ++i)<br>#define fj(s, e) for (int j = s; j &lt; e; ++j)<br>#define fk(s, e) for (int k = s; k &lt; e; ++k)<br>#define fl(s, e) for (int l = s; l &lt; e; ++l)<br>#define all(c) c.begin(), c.end()<br> <br>class PacketRepack {<br>  public:<br>  vector &lt;int&gt; output(vector &lt;int&gt; input, int b, int num_fields, int field_size) {<br>    string inb = "";<br>    fi (0, input.size()) {<br>      string n(b, '0');<br>      fj (0, b) n[j] = (input[i] &amp; (1&lt;&lt;j) ? '1' : '0');<br>      inb += n;<br>    }<br>    inb = inb.substr(0, num_fields*field_size);<br>    vector&lt;string&gt; vv;<br>    fi (0, num_fields) vv.push_back(inb.substr(i*field_size, field_size));<br>    reverse(all(vv));<br>    string outb = "";<br>    fi (0, vv.size()) outb += vv[i];<br>    <br>    //cerr &lt;&lt; outb &lt;&lt; endl;<br>    outb += string(input.size()*b - num_fields*field_size, '0');<br>    vector&lt;int&gt; ans;<br>    fi (0, input.size()) {<br>      string n = outb.substr(b*i, b);<br>      int bm = 0;<br>      fj (0, n.size()) if (n[j] == '1') bm |= (1&lt;&lt;j);<br>      ans.push_back(bm);<br>    }<br>    return ans;<br>  }<br>};<br> <br> <br>// Powered by PopsEdit<br></td>