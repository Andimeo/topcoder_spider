<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;string&gt;<br>#include&lt;iostream&gt;<br>#include&lt;vector&gt;<br>using namespace std;<br>struct node<br>{<br>    int x,y,l;<br>};<br>bool cmp(node n1,node n2)<br>{<br>    return (n1.l&lt;n2.l);<br>};<br>class CableDonation<br>{<br>public:<br>    int p[60],rank[60];<br>    int setct;<br>    int getl(char x)<br>    {<br>        if (x=='0') return 0;<br>        if (x&gt;='a'&amp;&amp;x&lt;='z') return (x-'a'+1);<br>        if (x&gt;='A'&amp;&amp;x&lt;='Z') return (x-'A'+27);<br>    };<br>    void makeset(int x)<br>    {<br>        setct++;<br>  rank[x]=0;<br>  p[x]=x;<br>    };<br><br>int findset(long x)<br>{<br>  int px=x,i;<br>  while (px!=p[px]) px=p[px]; <br>  while (x!=px)<br>  {<br>    i=p[x];<br>    p[x]=px;<br>    x=i;<br>  }<br>  return px;<br>};<br><br>void unionset (int x , int y)<br>{<br>  x=findset(x);<br>  y=findset(y);<br>        if (x!=y)<br>        {<br>            setct--;<br>            if( rank[x] &gt; rank[y]) p[y]=x;<br>            else<br>            {<br>                    p[x]=y;<br>                    if( rank[x]==rank[y]) rank[y]++;<br>            }<br>        }<br>};<br>    int cable(vector &lt;string&gt; l)<br>    {<br>        int ans=0,i,j,k,a,b;<br>        vector&lt;node&gt;e;<br>        node nd;<br>        for (i=0;i&lt;l.size();i++)<br>            for (j=0;j&lt;l.size();j++)<br>            {<br>                nd.l=getl(l[i][j]);<br>                if (nd.l==0) continue;<br>                nd.x=i+1;<br>                nd.y=j+1;<br>                e.push_back(nd);<br>            }<br>        sort(e.begin(),e.end(),cmp);<br>        setct=0;<br>        for (i=0;i&lt;l.size();i++) makeset(i+1);<br>        for(i=0;i&lt;e.size();i++)<br>        {<br>            nd=e[i];<br>            if (nd.x==nd.y) ans+=nd.l;<br>            else if(findset(nd.x)==findset(nd.y))<br>                ans+=nd.l;<br>            else unionset(nd.x,nd.y);<br>        }<br>        if (setct&gt;1) ans=-1;<br>        return ans;<br>    };<br>};<br></td>