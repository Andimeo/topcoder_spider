<td class="problemText" colspan="8" valign="middle" align="left">
            Class CableDonation<br>    Private Function chartoint(ByVal c As Char) As Integer<br>        Dim i As Integer = Asc(c)<br>        If c = "0" Then Return 0<br>        If i &gt;= Asc("a") And i &lt;= Asc("z") Then<br>            Return i - Asc("a") + 1<br>        ElseIf i &gt; -Asc("A") And i &lt;= Asc("Z") Then<br>            Return i - Asc("A") + 27<br>        Else<br>            Return 0<br>        End If<br>    End Function<br><br>    Private Function sumstr(ByVal s As String) As Integer<br>        Dim sum As Integer = 0<br>        For Each c As Char In s<br>            sum += chartoint(c)<br>        Next<br>        Return sum<br>    End Function<br><br>    Private Function smallestchar(ByVal a As Char, ByVal b As Char) As Integer<br>        Dim c As Integer = chartoint(a)<br>        Dim d As Integer = chartoint(b)<br>        If c = 0 And d = 0 Then Return Integer.MaxValue<br>        If c &lt;&gt; 0 And (c &lt;= d Or d = 0) Then Return c<br>        If d &lt;&gt; 0 And (d &lt;= c Or c = 0) Then Return d<br>    End Function<br><br>    Public Function cable(ByVal lengths As String()) As Integer<br>        Dim give As Integer = sumstr(lengths(0))<br>        Dim left As New System.Collections.ArrayList<br>        Dim added As New System.Collections.ArrayList<br>        Dim links As New System.Collections.ArrayList<br>        added.Add(0)<br><br>        For cur As Integer = 1 To lengths.Length() - 1<br>            left.Add(cur)<br>            give += sumstr(lengths(cur))<br>        Next<br><br>        For cur As Integer = 1 To lengths.Length() - 1<br>            Dim smallest As Integer = Integer.MaxValue<br>            Dim smallestto As Integer = 0<br>            Dim from As Integer = 0<br>            Dim t As Integer<br>            For Each room As Integer In added<br>                For Each nextroom As Integer In left<br>                    t = smallestchar(lengths(room)(nextroom), lengths(nextroom)(room))<br>                    If t &lt; smallest Then<br>                        smallest = t<br>                        smallestto = nextroom<br>                        from = room<br>                    End If<br>                Next<br>            Next<br>            If smallest = Integer.MaxValue Then Return -1<br><br>            left.Remove(smallestto)<br>            added.Add(smallestto)<br>            t = smallestchar(lengths(from)(smallestto), lengths(smallestto)(from))<br>            give -= t<br>            System.Console.WriteLine(smallestto.ToString() + " " + from.ToString() + " " + t.ToString() + " " + give.ToString())<br>        Next<br>        Return give<br>    End Function<br>End Class<br></td>