<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;list&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;stack&gt;<br>#include &lt;deque&gt;<br>#include &lt;cmath&gt;<br>#include &lt;memory.h&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cctype&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;utility&gt;<br>using namespace std;<br><br>typedef unsigned long long   uint64;<br>typedef long long  int64;<br>typedef unsigned  uint;<br>typedef unsigned char  uchar;<br>typedef vector&lt;int&gt;  VInt;<br>typedef vector&lt;string&gt;  VStr;<br>typedef map&lt;int, int&gt;  MapI;<br><br>#define PB(what)  push_back(what)<br>#define FOR(i, from, to)   for(i = from; i&lt;(to); ++i)<br>#define FORI(i, from, to)   for(i = from; i&lt;=(to); ++i)<br>#define FORD(i, from, to)   for(i = from; i&gt;(to); --i)<br>#define FORDI(i, from, to)   for(i = from; i&gt;=(to); --i)<br>#define FORS(i, from, to, step)   for(i = from; i&lt;(to); i+=step)<br>#define FORSI(i, from, to, step)   for(i = from; i&lt;=(to); i+=step)<br>#define REP(i, to)  for(i = 0; i&lt;(to); ++i)<br>#define REPI(i, to)  for(i = 0; i&lt;=(to); ++i)<br><br>#define min(a, b)   (((a) &lt; (b)) ? (a) : (b))<br>#define max(a, b)   (((a) &gt; (b)) ? (a) : (b))<br>#define ALL(a)     (a).begin(), (a).end()<br>#define INF     (2000000000)<br>#define INF_MIN  (-2000000000)<br><br>class Trekking {<br>  public:<br>  int findCamps(string trail, vector &lt;string&gt; plans)<br>  {<br>    int mn=20000000;<br>    for (int i=0; i&lt;plans.size(); ++i)<br>    {<br>      int cnt=0,j;<br>      for (j=0; j&lt;trail.size(); ++j)<br>      {<br>        if (plans[i][j] == 'C')<br>        {<br>          ++cnt;<br>          if (trail[j] == '^') break;<br>        }<br>      }<br>      if (j == trail.size())<br>      {<br>        mn = min(mn, cnt);<br>      }<br>    }<br>    if (mn &gt; 10000000) return -1; else return mn;    <br>  }<br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>