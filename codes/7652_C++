<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class CarBuyer {<br>public:<br>  double lowestCost(vector &lt;string&gt;, int, int, int);<br>};<br> <br>double CarBuyer::lowestCost(vector &lt;string&gt; cars, int fuelPrice, int annualDistance, int years) <br>{<br>  vector&lt;double&gt; ans;<br>  for(int i=0;i&lt;cars.size();i++)<br>  {<br>    int pc,t,fe;<br>    string str;<br>    double as;<br>    vector&lt;int&gt;v;<br>    stringstream ss(cars[i]);<br>    while(ss&gt;&gt;pc&gt;&gt;t&gt;&gt;fe)<br>    {<br>      v.push_back(pc);<br>      v.push_back(t);<br>      v.push_back(fe);<br>    }<br>    as=pc+((double)t*(double)(years)+((double)fuelPrice*(double)annualDistance*(double)years/(double)fe));<br>    ans.push_back(as);<br>  }<br>  sort(ans.begin(),ans.end());<br>  return ans[0];<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>