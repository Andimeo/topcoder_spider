<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br><br>public class SchoolTrip {<br>  int sz(int x) {<br>    int ans = 0;<br>    while (x&gt;0) {<br>      ans+=x%2;<br>      x/=2;<br>    }<br>    return ans;<br>  }<br>  public double duration(int[] pp) {<br>    double[] prob = new double[pp.length];<br>    for (int i=0; i&lt;pp.length; i++) prob[i]=(double)pp[i]/100.0;<br>    double[][] ans = new double[1&lt;&lt;prob.length][prob.length];<br>    for (int i=1; i&lt;ans.length; i++) {<br>      if (sz(i)==1) continue;<br>      for (int j=0; j&lt;prob.length; j++) {<br>        if ((i&amp;(1&lt;&lt;j))==0) continue;<br>        //System.out.println(i+" "+j);<br>        // js turn, state i<br>        double best = Double.MAX_VALUE;<br>        double runprob = 1;<br>        double cur = 0;<br>        int turns = 1;<br>        for (int delta=0; delta&lt;prob.length; delta++) {<br>          int k = (j+delta)%prob.length;<br>          if ((i&amp;(1&lt;&lt;k))==0) continue;<br>          // this guy hits?<br>          double besthere = Double.MAX_VALUE;<br>          for (int m=0; m&lt;prob.length; m++) {<br>            if ((i&amp;(1&lt;&lt;m))==0 || m==k) continue;<br>            // k hits m<br>            int whonext = (k+1)%prob.length;<br>            while (whonext==m || (i&amp;(1&lt;&lt;whonext))==0) whonext=(whonext+1)%prob.length;            <br>            besthere = Math.min(besthere,ans[i&amp;~(1&lt;&lt;m)][whonext]);<br>          }<br>          cur += prob[k]*runprob*(turns+besthere);<br>          runprob*=(1-prob[k]);<br>          turns++;<br>        }<br>        turns--;<br>        //System.out.println(cur+" "+runprob);<br>        ans[i][j]=(cur+runprob*turns)/(1-runprob);<br>        //System.out.println(i+" "+j+" "+ans[i][j]);<br>      }<br>    }<br>    return ans[ans.length-1][0];<br>  }<br>}<br></td>