<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>typedef long long int64;<br>typedef unsigned long long uint64;<br>#define two(X) (1&lt;&lt;(X))<br>#define twoL(X) (((int64)(1))&lt;&lt;(X))<br>#define contain(S,X) (((S)&amp;two(X))!=0)<br>#define containL(S,X) (((S)&amp;twoL(X))!=0)<br>const double pi=acos(-1.0);<br>const double eps=1e-11;<br>template&lt;class T&gt; inline void checkmin(T &amp;a,T b){if(b&lt;a) a=b;}<br>template&lt;class T&gt; inline void checkmax(T &amp;a,T b){if(b&gt;a) a=b;}<br>template&lt;class T&gt; inline T sqr(T x){return x*x;}<br>typedef pair&lt;int,int&gt; ipair;<br> <br>const int MODE=1000001;<br> <br>int f[52][52][52][102];<br> <br>class RooksPlacement<br>{<br>public:<br>  int add(int a,int b)<br>  {<br>    return (a+b)%MODE;<br>  }<br>  int mul(int a,int b)<br>  {<br>    int64 _a=a,_b=b;<br>    int64 t=_a*_b;<br>    return (int)(t%MODE);<br>  }<br>  int solve(int n,int v1,int v2,int k)<br>  {<br>    if (k==0) return 1;<br>    if (n==0) return 0;<br>    int &amp;ret=f[n][v1][v2][k];<br>    if (ret!=-1) return ret;<br>    ret=solve(n-1,v1,v2,k);<br>    //1<br>    if (v1&gt;=1 &amp;&amp; k&gt;=1)<br>      ret=add(ret,mul(solve(n-1,v1-1,v2+1,k-1),v1));<br>    if (v2&gt;=1 &amp;&amp; k&gt;=1)<br>      ret=add(ret,mul(solve(n-1,v1,v2-1,k-1),v2));<br>    //2<br>    if (v1&gt;=2 &amp;&amp; k&gt;=2)<br>      ret=add(ret,mul(solve(n-1,v1-2,v2,k-2),v1*(v1-1)/2));<br>    return ret;<br>  }<br>  int countPlacements(int N, int M, int K)<br>  {<br>    memset(f,255,sizeof(f));<br>    int ret=solve(N,M,0,K);<br>    return ret;<br>  }<br>};<br> <br> <br>// Powered by PopsEdit<br></td>