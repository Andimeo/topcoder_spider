<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br> <br>const int MAXS = 10005;<br>const int MAXN = 50;<br> <br>class SumoTournament<br>{<br>  public:<br>  <br>  int size;<br>  bool sum [MAXS][MAXN];<br>  <br>  int maxWeight (vector &lt;int&gt; weight, int average)<br>  {<br>    sort (weight.rbegin (), weight.rend ());<br>    <br>    size = weight.size ();<br>    <br>    for (int i = 0; i &lt; size; i++)<br>    {<br>      int w = weight [i];<br>      <br>      memset (sum, false, sizeof (sum));<br>      <br>      sum [0][0] = true;<br>      <br>      for (int j = i + 1; j &lt; size; j++)<br>        for (int p = j - i - 1; p &gt;= 0; p--)<br>          for (int k = p * 200; k &gt;= 0; k--)<br>            if (sum [k][p])<br>              sum [k + weight [j]][p + 1] = true;<br>      <br>      int aw = average - w;<br>      <br>      while (aw &lt; 0)<br>        aw += average;<br>      <br>      int num = ((aw + w) / average) - 1;<br>      <br>      while (aw &lt; MAXS &amp;&amp; num &lt; MAXN)<br>      {<br>        if (sum [aw][num]) return w;<br>        <br>        aw += average;<br>        num++;<br>      }<br>    }<br>    <br>    return -1;<br>  }<br>};<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>