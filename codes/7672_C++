<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cmath&gt;<br>using namespace std;<br><br>struct AmbiguousWatch {<br>  struct { long long p, q; } t1, t2;<br><br>  long long solve(long long m = 12, long long n = 60)<br>  {<br>    long long k, r;<br><br>    if (m &lt;= 1) return 0;<br><br>    r = ((t2.p * (m * m - 1LL)) / (t2.q * m * n)) - ((t1.p * (m * m - 1LL)) / (t1.q * m * n));<br>    if (r &lt; 0) r = 0;<br><br>    k = ((t2.p * (m - 1LL)) / (t2.q * m * n)) - ((t1.p * (m - 1LL)) / (t1.q * m * n));<br>    r -= k;<br>    if (r &lt; 0) r = 0;<br><br>    return r;<br>  }<br><br>  int howMany(string startTime, string finishTime) {<br>    int hh, mm;<br>    sscanf(startTime.c_str(), "%d:%d", &amp;hh, &amp;mm);<br>    t1.p = hh * 60 + mm;<br>    t1.q = 1;<br> <br>    sscanf(finishTime.c_str(), "%d:%d", &amp;hh, &amp;mm);<br>    t2.p = hh * 60 + mm;<br>    t2.q = 1;<br> <br>    return solve();<br>  }<br>};<br></td>