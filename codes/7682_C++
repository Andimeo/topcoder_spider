<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;bitset&gt;<br>#include &lt;cassert&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;complex&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;ctime&gt;<br>#include &lt;deque&gt;<br>#include &lt;functional&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iterator&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;stack&gt;<br>#include &lt;string&gt;<br>#include &lt;valarray&gt;<br>#include &lt;vector&gt;<br>#include &lt;utility&gt;<br><br>using namespace std;<br><br>#define all(v) (v).begin(), (v).end()<br><br>// Types<br>typedef long double ld;<br>typedef long long ll;<br>typedef pair &lt;int, int&gt; pii;<br>typedef vector &lt;int&gt; vi;<br>typedef vector &lt;pii&gt; vp;<br>typedef vector &lt;ld&gt; vd;<br>typedef vector &lt;string&gt; vs;<br>typedef vector &lt;bool&gt; vb;<br>typedef queue &lt;pii&gt; qp;<br>typedef map &lt;string, int&gt; msi;<br><br>// Constants<br>const int INF = 1000000000;<br>const ld EPS = 1e-10L;<br>const ld PI = 3.14159265358979L;<br><br>class HeightRound<br>{<br>// Global<br><br>// Functions<br>public:<br>  vector &lt;int&gt; getBestRound(vector &lt;int&gt; h)<br>  {<br>    vector &lt;int&gt; res;<br>    int n = h.size();<br>    int mx = 0;<br>    sort(all(h));<br>    for (int i = 2; i &lt; n; i += 2)<br>      mx = max(mx, h[i] - h[i - 2]);<br>    for (int i = 3; i &lt; n; i += 2)<br>      mx = max(mx, h[i] - h[i - 2]);<br>    int c = h[0] + mx;<br>    vb w(n);<br>    for (int i = 0; i &lt; n; ++i)<br>    {<br>      if (h[i] &gt; c)<br>      {<br>        res.push_back(h[i - 1]);<br>        c = h[i - 1] + mx;<br>        w[i - 1] = true;<br>      }<br>    }<br>    for (int i = n - 1; i &gt;= 0; --i)<br>    {<br>      if (!w[i])<br>        res.push_back(h[i]);<br>    }<br>    reverse(all(res));<br>    return res;<br>  }<br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>