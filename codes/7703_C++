<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;stack&gt;<br>#include &lt;list&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iterator&gt;<br>#include &lt;numeric&gt;<br>using namespace std;<br> <br>typedef long long LL;<br> <br>typedef vector &lt;int &gt; VI;<br>#define REP(i,n) for (int i=0; i&lt;n; ++i)<br>#define FOREACH(it,x) for(__typeof((x).begin()) it=(x.begin()); it!=(x).end(); ++it)<br>#define FOR(i,p,k) for (int i=p; i&lt;=k; ++i)<br>#define PB push_back<br>#define ALL(x) x.begin(),x.end()<br>#define SIZE(x) (int)x.size()<br> <br>const int N=55;<br>int kraw[N][N];<br>VI graf[N];<br>const int MOD=1000003;<br>VI spojna;<br>int vis[N];<br> <br>void dfs(int x){<br>  vis[x]=1; spojna.PB(x);<br>  FOREACH(it,graf[x]) if (!vis[*it]) dfs(*it);<br>}<br> <br>const int K=21;<br>int t[1&lt;&lt;K];<br>int krawedzie[K];<br> <br>int licz(){<br>  int n=SIZE(spojna);<br>  int ile=1&lt;&lt;n;<br>  REP(mask,ile) t[mask]=0;<br>  t[0]=1;<br>  REP(mask,ile) if (t[mask]){<br>    REP(i,n) if (!((1&lt;&lt;i)&amp;mask)){<br>      int ok=1;<br>      REP(j,n) if (((1&lt;&lt;j)&amp;mask) &amp;&amp; kraw[spojna[i]][spojna[j]]){<br>        ok=0; break;<br>      }<br>      int nmask=(mask|(1&lt;&lt;i));<br>      if (ok) t[nmask]=(t[nmask]+t[mask])%MOD;<br>    }<br>  }<br>  return t[ile-1];<br>}<br> <br>int nk[N][N];<br> <br>    class RaceOrdering<br>        { <br>        public: <br>        int countOrders(int n, vector &lt;int&gt; first, vector &lt;int&gt; second){ <br>          REP(i,N) nk[i][0]=1;<br>          FOR(i,1,N) FOR(j,1,N) nk[i][j]=nk[i-1][j-1]+nk[i-1][j];<br>          REP(i,SIZE(first)){<br>            int a=first[i],b=second[i];<br>            kraw[a][b]=1;<br>            graf[a].PB(b);<br>            graf[b].PB(a);<br>          }<br>          REP(k,n) REP(i,n) REP(j,n) kraw[i][j]|=(kraw[i][k]&amp;kraw[k][j]);<br>          int res=1;<br>          VI rozm;<br>          REP(i,n) if (!vis[i]){<br>            spojna.clear();<br>            dfs(i);<br>            rozm.PB(SIZE(spojna));<br>            res=((LL)res*(LL)licz())%MOD;<br>          }<br>          int suma=n;<br>          FOREACH(it,rozm){<br>            res=((LL)res*nk[suma][*it])%MOD;<br>            suma-=*it;<br>          }<br>          return res;<br>        } <br>        <br> <br>         }; <br> <br>    <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>