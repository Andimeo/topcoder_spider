<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br><br>public class BrokenButtons {<br>    public int minPresses(int page, int[] broken) {<br><br>        bool[] bBroken = new bool[10];<br>        for (int i = 0; i &lt; broken.Length; i++) {<br>            bBroken[broken[i]] = true;<br>        }<br>        int iBest = Math.Abs(page - 100);<br>        if (!bBroken[0]) iBest = Math.Min(iBest, page + 1);<br>        for (int i1 = 1; i1 &lt; 10; i1++) if (!bBroken[i1]) {<br>                iBest = Math.Min(iBest, Math.Abs(i1 - page) + 1);<br>                for (int i2 = 0; i2 &lt; 10; i2++) if (!bBroken[i2]) {<br>                        iBest = Math.Min(iBest, Math.Abs(10 * i1 + i2 - page) + 2);<br>                        for (int i3 = 0; i3 &lt; 10; i3++) if (!bBroken[i3]) {<br>                                iBest = Math.Min(iBest, Math.Abs(100 * i1 + 10*i2+i3 - page) + 3);<br>                                for (int i4 = 0; i4 &lt; 10; i4++) if (!bBroken[i4]) {<br>                                        iBest = Math.Min(iBest, Math.Abs(1000 * i1 + 100 * i2 + 10*i3+i4 - page) + 4);<br>                                        for (int i5 = 0; i5 &lt; 10; i5++) if (!bBroken[i5]) {<br>                                                iBest = Math.Min(iBest, Math.Abs(10000 * i1 + 1000 * i2 + 100 * i3 + 10*i4+i5 - page) + 5);<br>                                                for (int i6 = 0; i6 &lt; 10; i6++) if (!bBroken[i6]) {<br>                                                        iBest = Math.Min(iBest, Math.Abs(100000 * i1 + 10000 * i2 + 1000 * i3 + 100 * i4 + 10*i5+i6 - page) + 6);<br>                                                    }<br>                                            }<br>                                    }<br>                            }<br>                    }<br>            }<br>        return iBest;<br>    }<br>}<br></td>