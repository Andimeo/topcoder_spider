<td class="problemText" colspan="8" valign="middle" align="left">
            import java.io.*;<br>import java.util.*;<br><br>public class DayTrader {<br>    int q = 390;<br>  <br>  double[] vv(int[] time, int[] p) {<br>    double[] v = new double[q + 1];<br>    int i = 0;<br>    for (int t = 0; t &lt;= q; t++) {<br>      if (time[i] == t) {<br>        v[t] = p[i];<br>        i++;<br>        continue;<br>      }<br>      v[t] = p[i - 1] + (p[i] - p[i - 1]) * 1d * (t - time[i - 1]) / (time[i] - time[i - 1]);<br>    }<br>    return v;<br>  }<br><br>  public double earnings(int[] timeA, int[] priceA, int[] timeB, int[] priceB) {<br>    double[] va = vv(timeA, priceA);<br>    double[] vb = vv(timeB, priceB);<br>    double bablo = 1000;<br>    for (int t = 0; t &lt; q; t++) {<br>      double da = va[t + 1] - va[t];<br>      double a = va[t];<br>      double db = vb[t + 1] - vb[t];<br>      double b = vb[t];<br>      double d = Math.max(da, db);<br>      if (d &lt; 0)<br>        d = 0;<br>      if (da &lt; 0 &amp;&amp; db &lt; 0)<br>        continue;<br>      System.out.println(da / a + " " + db / b);<br>      double k = Math.max(da / a, db / b);<br>      bablo *= (1 + k);<br>    }<br>    return bablo - 1000;<br>  }<br>}<br></td>