<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;algorithm&gt; <br>#include&lt;sstream&gt;<br>#include&lt;string&gt; <br>#include&lt;vector&gt; <br>using namespace std; <br>  <br>#define FOR(i,a,b) for(int i = (a); i &lt; (b); ++i) <br>#define REP(i,n) FOR(i,0,n) <br>#define FORE(it,x) for(typeof(x.begin()) it=x.begin();it!=x.end();++it) <br>#define pb push_back <br>#define all(x) (x).begin(),(x).end() <br>#define CLEAR(x,with) memset(x,with,sizeof(x)) <br>#define sz size() <br>typedef long long ll;<br>ll cache[51][51];<br>struct PolishNotation<br>{<br>  string E;<br>  ll go(int left, int right)<br>  {<br>    if(left &gt; right) return 0;<br>    ll&amp; ret = cache[left][right]; if(ret != -1) return ret;<br>    ret = 0;<br>    if(isdigit(E[left]))<br>    {<br>      ret = 1;<br>      FOR(i,left,right+1) if(!isdigit(E[i])) { ret = 0; break; }<br>      return ret;<br>    }<br>    if(E[left] == '-' &amp;&amp; right-left+1&gt;1)<br>    {<br>      ret = 1;<br>      FOR(i,left+1,right+1) if(!isdigit(E[i])) { ret = 0; break; }<br>    }<br>    FOR(i,left+1,right)<br>    {<br>      ret += go(left+1, i) * go(i+1, right);<br>    }    <br>    return ret;<br>  }<br>  long long waysToDecode(string expression)<br>  {<br>    CLEAR(cache,-1);<br>    E = expression;<br>    return go(0, E.sz-1);    <br>  }<br>};<br></td>