<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class SimilarPairs {<br>  public int howManyElements(String[] text, int k) {<br>        StringBuilder builder = new StringBuilder();<br>        for (String line : text)<br>            builder.append(line);<br>        String data = builder.toString();<br>        int n = data.length();<br>        int[][] maxLen = new int[n][n];<br>        for (int delta = -n + 1; delta &lt;= n - 1; ++delta) {<br>            int clen = 0;<br>            int ck = 0;<br>            for (int pa = Math.max(0, -delta); pa &lt;= Math.min(n - 1, n - 1 - delta); ++pa) {<br>                int pb = pa + delta;<br>                while (pa + clen &lt; n &amp;&amp; pb + clen &lt; n) {<br>                    if (data.charAt(pa + clen) == data.charAt(pb + clen)) {<br>                        ++clen;<br>                    } else {<br>                        if (ck &gt;= k)<br>                            break;<br>                        else {<br>                            ++clen;<br>                            ++ck;<br>                        }<br>                    }<br>                }<br>                maxLen[pa][pb] = clen;<br>                --clen;<br>                if (clen &lt; 0)<br>                    clen = 0;<br>                if (data.charAt(pa) != data.charAt(pb))<br>                    --ck;<br>                if (ck &lt; 0)<br>                    ck = 0;<br>            }<br>        }<br>        long[] all = new long[n * (n + 1) / 2];<br>        int nAll = 0;<br>        for (int pa = 0; pa &lt; n; ++pa) {<br>            int mx = 0;<br>            for (int pb = 0; pb &lt; n; ++pb)<br>                mx = Math.max(mx, Math.min(maxLen[pa][pb], Math.abs(pa - pb)));<br>            long h = 0;<br>            for (int i = 0; i &lt; mx; ++i) {<br>                h = h * 3137 + data.charAt(pa + i);<br>                all[nAll++] = h;<br>            }<br>        }<br>        Arrays.sort(all, 0, nAll);<br>        int res = 0;<br>        for (int i = 0; i &lt; nAll; ++i)<br>            if (i == 0 || all[i] != all[i - 1])<br>                ++res;<br>        return res;<br>  }<br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>