<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>using namespace std;<br>#define FORC( V, it ) for( __typeof( (V).begin() ) it = (V).begin(); it != (V).end(); ++it )<br>const int MAXL = 1000;<br>const int MAXN = 50;<br>char buff[MAXL+1];<br><br><br>vector&lt; int &gt; p1, p2, v1, v2;<br>int R;<br><br>double calc_dist( vector&lt; double &gt; A, vector&lt; double &gt; B )<br>{<br>    double sum = 0;<br>    for( int i = 0; i &lt; ( int )A.size(); ++i ) <br>        sum += ( A[i] - B[i] ) * ( A[i] - B[i] );<br>    return sum;<br>}<br><br>double dist( double t )<br>{<br>    vector&lt; double &gt; pp1;<br>    for( int i = 0; i &lt; ( int )p1.size(); ++i ) <br>        pp1.push_back( p1[i] );<br><br>    vector&lt; double &gt; pp2;<br>    for( int i = 0; i &lt; ( int )p2.size(); ++i ) <br>        pp2.push_back( p2[i] );<br>    <br>    for( int i = 0; i &lt; ( int )pp1.size(); ++i ) {<br>        pp1[i] += v1[i] * t;<br>        pp2[i] += v2[i] * t;<br>    }<br>    <br>    return calc_dist( pp1, pp2 );<br>}<br><br>class Aircraft {<br>public:<br>    string nearMiss( vector &lt;int&gt; _p1, vector &lt;int&gt; _v1, vector &lt;int&gt; _p2, vector &lt;int&gt; _v2, int _R ) {<br>        R = _R;<br>        v1 = _v1;<br>        p1 = _p1;<br>        v2 = _v2;<br>        p2 = _p2;<br><br>        double l = 0, u = 1e9;<br>        for( int iter = 1000; iter--; ) {<br>            double a = l + ( u - l ) / 3.;<br>            double b = l + ( u - l ) / 3. * 2;<br><br>            if ( dist( a ) &lt; dist( b ) )<br>                u = b;<br>            else<br>                l = a;<br>        }<br>        if ( dist( l ) - 1e-9 &lt; R * R )<br>            return "YES";<br>        return "NO";<br>    }<br>};<br><br><br><br><br><br><br><br><br><br>// Powered by FileEdit<br>// Powered by moj 3.0 beta 11 [modified TZTester]<br>// Powered by CodeProcessor<br></td>