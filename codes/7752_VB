<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System<br>Imports System.Collections<br>Imports System.Text<br> <br>Public Class OptimalList<br>  Public Function optimize(ByVal inst As String) As String<br>    dim x as integer<br>    dim y as integer<br>    x=0<br>    y=0<br>    dim i as integer<br>    for i=1 to len(inst) step 1<br>    if mid(inst,i,1)="N" then y=y+1<br>    if mid(inst,i,1)="S" then y=y-1<br>    if mid(inst,i,1)="W" then x=x-1<br>    if mid(inst,i,1)="E" then x=x+1<br>    next i<br>    dim s as string<br>    s=""<br>    if x=0 and y=0 then return s<br>    if x&gt;0 then<br>    for i=1 to x step 1<br>    s=s+"E"<br>    next i<br>    end if<br>    if y&gt;0 then<br>    for i=1 to y step 1<br>    s=s+"N"<br>    next i<br>    end if<br>    <br>    if x&lt;0 then<br>    for i=1 to math.abs(x) step 1<br>    s=s+"W"<br>    next i<br>    end if<br>    if y&lt;0 then<br>    for i=1 to math.abs(y) step 1<br>    s=s+"S"<br>    next i<br>    end if<br>    return sortstr(s)<br>  End Function<br>Function SortStr(pStr as string) as string<br>  dim a as integer<br>  dim b as integer<br>  dim str1 as string<br>  dim str2 as string<br>For a = 1 To len(pStr)<br>       For b = a To len(pStr)<br>            If UCase(mid(pStr,b,1)) &lt; UCase(mid(pStr,a,1)) Then<br>                str1 = mid(pStr,a,1)<br>                str2 = mid(pStr,b,1)<br>                mid(pStr,a,1) = str2<br>                mid(pStr,b,1) = str1<br>            End If<br>        Next b<br>    Next a<br>    SortStr=pStr<br>    End Function<br>End Class<br> <br>'Powered by [KawigiEdit] 2.0!<br></td>