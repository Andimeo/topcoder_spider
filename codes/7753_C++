<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>long long n,i,j,k;<br>bool br[100][100];<br>long long mr[100];<br> <br>class IncreasingSubsequences {<br>public:<br>  long long count(vector &lt;int&gt;);<br>};<br> <br>long long IncreasingSubsequences::count(vector &lt;int&gt; a) {<br>  a.push_back(2000000000);<br>  n=a.size();<br>  mr[0]=1;<br>  for(i=0;i&lt;n;i++)<br>    for(j=i+1;j&lt;n;j++)<br>      if(a[j]&gt;a[i])<br>      {<br>        k=i+1;<br>        while(k&lt;j &amp;&amp; (a[k]&lt;=a[i] || a[k]&gt;=a[j]))<br>          k++;<br>        if(k&gt;=j)<br>          br[i][j]=1;<br>        else<br>          br[i][j]=0;<br>      }<br>      else<br>        br[i][j]=0;<br>  for(i=1;i&lt;n;i++)<br>  {<br>    mr[i]=0;<br>    for(j=0;j&lt;i;j++)<br>      if(br[j][i])<br>        mr[i]+=mr[j];<br>    if(mr[i]==0)<br>      mr[i]=1;<br>  }<br>  return mr[n-1];<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>