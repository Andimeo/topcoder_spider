<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;iostream&gt;<br>#include&lt;sstream&gt;<br>#include&lt;cstdlib&gt;<br>#include&lt;cmath&gt;<br>#include&lt;vector&gt;<br>#include&lt;string&gt;<br>#include&lt;algorithm&gt;<br>using namespace std;<br>typedef vector&lt;int&gt;VI;typedef vector&lt;VI&gt;VVI;<br>typedef vector&lt;string&gt;VS;<br>typedef pair&lt;int,int&gt;PII;<br>#define FOR(i,n) for((i)=0;(i)&lt;(n);(i)++)<br>#define FORN(i,n) for((i)=(n)-1;(i)&gt;=0;(i)--)<br>#define BE(a) ((a).begin()),((a).end())<br>#define SI(a) ((a).size())<br>#define PB push_back<br>#define MP make_pair<br>#define FORIT(i,a) for((i)=(a).begin();(i)!=(a).end();(i)++)<br>#define CLR(a,v) memset((a),(v),sizeof(a))<br>template &lt;class Ty, class Tx&gt;<br>Ty cast(const Tx &amp;x) { Ty y; stringstream ss(""); ss&lt;&lt;x; ss.seekg(0); ss&gt;&gt;y; return y; }<br>VS tokenize(string s, string del=" ") {<br>        VS ret(0); ret.reserve(1000);<br>        for (int i=0,j;i&lt;SI(s);i=j+1) {<br>                if ((j=s.find_first_of(del,i))==s.npos) j = SI(s);<br>                if (j-i&gt;0) ret.PB(s.substr(i,j-i));<br>        }<br>        return ret;<br>}<br>template &lt;class T, class TS&gt;<br>vector&lt;T&gt; tokt(string s, TS del=" ") {<br>        vector&lt;T&gt; ret(0); ret.reserve(1000);<br>        VS vs = tokenize(s,string(del));<br>        for (int i=0;i&lt;SI(vs);i++) ret.PB(cast&lt;T&gt;(vs[i]));<br>        return ret;<br>}<br><br>class LostParentheses {<br>public:<br>  int minResult(string s) {<br>    VS tok;<br>    VI tok2;<br>    int ret, i, j;<br>    tok = tokenize(s, "-");<br>    ret = 0;<br>    FOR (i,SI(tok)) {<br>      tok2 = tokt&lt;int&gt;(tok[i], "+");<br>      FOR (j,SI(tok2)) if (i) ret -= tok2[j];<br>      else ret += tok2[j];<br>    }<br>    return ret;<br>  }<br><br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]                    <br>// Powered by CodeProcessor<br></td>