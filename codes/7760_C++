<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;stdio.h&gt;<br>#include &lt;map&gt;<br><br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>typedef vector &lt;int&gt; VI;<br>typedef vector &lt;string&gt; VS;<br><br>#define SI(A) ((int)(A).size())<br>#define ALL(A) A.begin(),A.end()<br>#define REP(i,N) for ( i = 0; i &lt; N; ++i )<br><br>typedef pair&lt;int, int&gt; TP;<br><br>VS SPLIT(string s, string sep)<br>{<br>  VS res;<br>  string t = "";<br>  int i;<br>  <br>  s += sep;<br>  REP(i, s.length())<br>    if ( sep.find(s[i]) != - 1 )<br>    {<br>      if ( t.length() ) res.push_back(t);<br>      t = "";<br>    }<br>    else<br>      t += s[i];<br><br>  return res;<br>}<br><br>map&lt;int, VI&gt; End;<br>int N;<br><br>class RailwayTickets<br>{<br>public:<br>  int minRejects(vector &lt;string&gt; travel, int seats)<br>  {    <br>    int i, j, a, b;<br>    N = 0;<br><br>    End.clear();<br>    REP(i, SI(travel))<br>    {<br>      VS S = SPLIT(travel[i], " ");<br>      REP(j, SI(S))<br>      {<br>        sscanf(S[j].c_str(), "%d-%d", &amp;a, &amp;b);        <br>        End[a].push_back(b);        <br>      }<br>    }<br>    VI A;<br>    int res = 0;<br>    REP(i, 10345)<br>    {      <br>      VI B;<br>      REP(j, SI(A))<br>        if ( A[j] &gt; i ) B.push_back(A[j]);<br>      VI E = End[i];<br>      REP(j, SI(E))<br>        B.push_back(E[j]);<br>      if ( SI(B) &gt; seats )<br>      {<br>        sort(ALL(B));<br>        res += SI(B) - seats;<br>        B.resize(seats);<br>      }<br>      A = B;<br>    }<br>    return res;<br>  }<br>};<br></td>