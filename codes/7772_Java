<td class="problemText" colspan="8" valign="middle" align="left">
            import java.io.*;<br>import java.util.*;<br><br>public class BoxesArrangement {<br>  public int maxUntouched(String s) {<br>    int n = s.length();<br>    if (n &lt; 3)<br>      return n;<br>    int[] a = new int[n];<br>    int[] am = new int[3];<br>    for (int i = 0; i &lt; n; i++) {<br>      a[i] = s.charAt(i) - 'A';<br>      am[a[i]]++;<br>    }<br>    int[][][][] r = new int[n + 1][n + 1][n + 1][9];<br>    int infty = 1000;<br>    for (int i = 0; i &lt;= n; i++) {<br>      for (int j = 0; j &lt;= n; j++) {<br>        for (int k = 0; k &lt;= n; k++) {<br>          Arrays.fill(r[i][j][k], -infty);<br>        }<br>      }<br>    }<br>    int[] z = new int[3];<br>    for (int x = 0; x &lt; 3; x++) {<br>      for (int y = 0; y &lt; 3; y++) {<br>        z[x]++;<br>        z[y]++;<br>        int left = 0;<br>        if (x == a[0])<br>          left++;<br>        if (y == a[1])<br>          left++;<br>        r[z[0]][z[1]][z[2]][3 * x + y] = left;<br>        z[x]--;<br>        z[y]--;<br>      }<br>    }<br>    for (int len = 2; len &lt; n; len++) {<br>      for (z[0] = 0; z[0] &lt;= len; z[0]++) {<br>        for (z[1] = 0; z[1] &lt;= len; z[1]++) {<br>          z[2] = len - z[0] - z[1];<br>          if (z[2] &lt; 0)<br>            continue;<br>          for (int last = 0; last &lt; 9; last++) {<br>            int q1 = last / 3;<br>            int q2 = last % 3;<br>            for (int q3 = 0; q3 &lt; 3; q3++) {<br>              if (q1 == q2 &amp;&amp; q2 == q3)<br>                continue;<br>              int cur = r[z[0]][z[1]][z[2]][last];<br>              if (q3 == a[len])<br>                cur++;<br>              z[q3]++;<br>              r[z[0]][z[1]][z[2]][3 * q2 + q3] = Math.max(r[z[0]][z[1]][z[2]][3 * q2 + q3], cur);<br>              z[q3]--;<br>            }<br>          }<br>        }<br>      }<br>    }<br>    int ans = -infty;<br>    for (int last = 0; last &lt; 9; last++)<br>      ans = Math.max(ans, r[am[0]][am[1]][am[2]][last]);<br>    if (ans &lt; 0)<br>      return -1;<br>    return ans;<br>  }<br>  <br>  public static void main(String[] args) {<br>  }<br>}<br></td>