<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br><br>using System.Text;<br>using System.Reflection;<br>using System.Net;<br>using System.IO;<br><br><br><br>public class FreeGuitars<br>{<br>    List&lt;int&gt;[] to = null;<br><br>    int f(int N)<br>    {<br>        int[] d = new int[N];<br>        bool[] fl = new bool[N];<br><br>        for (int i = 0; i &lt; N; ++i)<br>        {<br>            d[i] = 999999999;<br>            fl[i] = false;<br>        }<br>        d[0] = 0;<br>        int ans = 0;<br>        for (int i = 0; i &lt; N; ++i)<br>        {<br>            int k = -1;<br>            for( int j=0; j&lt;N; ++j )<br>            {<br>                if( fl[j] == false &amp;&amp; <br>                    ( k &lt; 0 || d[j] &lt; d[k] ) )<br>                {<br>                    k = j;<br>                }<br>            }<br><br>            if( k == -1 || d[k] &gt;= 999999999 )<br>            {<br>                return -1;<br>            }<br><br>            fl[k] = true;<br>            ans += d[k];<br>            foreach( int l in to[k] )<br>            {<br>                int t = l /10000;<br>                int c = l % 10000;<br><br>                if( d[t] &gt; c )<br>                    d[t] = c;<br>            }<br>        }<br><br>        return ans;<br>    }<br><br>    public int minimumCosts(int N, String[] trainRoutes)<br>    {<br>        to = new List&lt;int&gt;[N];<br>        for( int i=0; i&lt;N; ++i )<br>        {<br>            to[i] = new List&lt;int&gt;();<br>        }<br><br>        foreach (string str in trainRoutes)<br>        {<br>            string[] strs = str.Split(' ');<br>            int a = int.Parse(strs[0]) - 1;<br>            int b = int.Parse(strs[1]) - 1;<br>            int c = int.Parse(strs[2]);<br><br>            to[a].Add(b * 10000 + c);<br>            to[b].Add(a * 10000 + c);<br>        }<br><br>        return f(N);<br>    }<br>}<br></td>