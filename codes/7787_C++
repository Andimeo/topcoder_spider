<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;utility&gt;<br><br>#define NMAX 55<br><br>#define mp make_pair<br>#define pb push_back<br>#define all(a) a.begin(), a.end()<br>#define forn(i, n) for(int i = 0; i &lt; (int)(n); ++i)<br>#define forv(i, a) for(int i = 0; i &lt; (int)(a.size()); ++i)<br>#define fors(i, s) for(int i = 0; i &lt; (int)(s.length()); ++i)<br><br>#define norm(a) sort(all(a)); a.erase(unique(all(a)), a.end());<br>#define num(a, v) (int)(lower_bound(all(a), v) - a.begin())<br><br>using namespace std;<br><br>struct PointsOnCircle {<br>long long count(int _r) {<br>  long long cr = _r;<br>  vector&lt;long long&gt; d, k;<br>  for(long long i = 2; i * i &lt;= cr; ++i) {<br>    if (cr % i == 0) {<br>      long long cd = i, ck = 0;      <br>      while (cr % cd == 0) {<br>        ++ck;<br>        cr /= cd;<br>      }<br>      d.pb(cd);<br>      k.pb(ck * 2);<br>    }<br>  }<br>  if (cr &gt; 1) {<br>    d.pb(cr);<br>    k.pb(2);<br>  }<br>  long long w[1000][6];<br>  memset(w, 0, sizeof w);<br>  w[0][1] = 1;<br>  forv(i, d) {<br>    forn(o, 4) {<br>      long long po = o;<br>      forn(j, k[i] + 1) {<br>        w[i + 1][po] += w[i][o];<br>        po = (po * d[i]) % 4;<br>      }<br>    }<br>  }<br>  return 4 * (w[d.size()][1] - w[d.size()][3]);<br>}<br>};<br></td>