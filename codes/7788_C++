<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br><br>using namespace std;<br><br>typedef long long int64;<br>typedef unsigned long long uint64;<br>#define two(X) (1&lt;&lt;(X))<br>#define twoL(X) (((int64)(1))&lt;&lt;(X))<br>#define contain(S,X) (((S)&amp;two(X))!=0)<br>#define containL(S,X) (((S)&amp;twoL(X))!=0)<br>const double pi=acos(-1.0);<br>const double eps=1e-13;<br>template&lt;class T&gt; inline void checkmin(T &amp;a,T b){if(b&lt;a) a=b;}<br>template&lt;class T&gt; inline void checkmax(T &amp;a,T b){if(b&gt;a) a=b;}<br>template&lt;class T&gt; inline T sqr(T x){return x*x;}<br>typedef pair&lt;int,int&gt; ipair;<br><br>struct Tdata<br>{<br>  int64 a,b;<br>};<br>class PlaneDivision<br>{<br>public:<br>  int n;<br>  vector&lt;int&gt; X1,Y1,X2,Y2;<br>  int m;<br>  Tdata X[1000000],Y[1000000];<br>  bool parallel(int u,int v)<br>  {<br>    return (X1[u]-X2[u])*(Y1[v]-Y2[v])==(X1[v]-X2[v])*(Y1[u]-Y2[u]);<br>  }<br>  int64 gcd(int64 a,int64 b)<br>  {<br>    return (b==0)?a:gcd(b,a%b);<br>  }<br>  Tdata getdata(int64 a,int64 b)<br>  {<br>    int64 m=gcd(a,b);<br>    a/=m;<br>    b/=m;<br>    if (a&lt;0 || a==0 &amp;&amp; b&lt;0)<br>      a=-a,b=-b;<br>    Tdata ret;<br>    ret.a=a;<br>    ret.b=b;<br>    return ret;<br>  }<br>  int howManyFiniteParts(vector &lt;int&gt; x1, vector &lt;int&gt; y1, vector &lt;int&gt; x2, vector &lt;int&gt; y2)<br>  {<br>    n=x1.size();<br>    X1=x1;<br>    Y1=y1;<br>    X2=x2;<br>    Y2=y2;<br>    bool find=false;<br>    for (int i=0;i&lt;n;i++)<br>      if (!parallel(0,i))<br>        find=true;<br>    if (!find) return 0;<br>    int npoint=0;<br>    int nedge=0;<br>    m=0;<br>    for (int i=0;i&lt;n;i++)<br>      for (int j=i+1;j&lt;n;j++)<br>        if (!parallel(i,j))<br>        {<br>          int64 a1=Y1[i]-Y2[i];<br>          int64 b1=-(X1[i]-X2[i]);<br>          int64 c1=X1[i]*Y2[i]-X2[i]*Y1[i];<br>          int64 a2=Y1[j]-Y2[j];<br>          int64 b2=-(X1[j]-X2[j]);<br>          int64 c2=X1[j]*Y2[j]-X2[j]*Y1[j];<br>          int64 t=a1*b2-a2*b1;<br>          Tdata x0=getdata(b1*c2-b2*c1,t);<br>          Tdata y0=getdata(-(a1*c2-a2*c1),t);<br>          bool fd=false;<br>          for (int i=1;!fd &amp;&amp; i&lt;=m;i++)<br>            if (x0.a==X[i].a &amp;&amp; x0.b==X[i].b &amp;&amp; y0.a==Y[i].a &amp;&amp; y0.b==Y[i].b)<br>              fd=true;<br>          if (fd) continue;<br>          X[++m]=x0;<br>          Y[m]=y0;<br>        }<br>    npoint=m;<br>    for (int i=0;i&lt;n;i++)<br>    {<br>      int64 a=Y1[i]-Y2[i];<br>      int64 b=-(X1[i]-X2[i]);<br>      int64 c=X1[i]*Y2[i]-X2[i]*Y1[i];<br>      int C=0;<br>      for (int k=1;k&lt;=m;k++)<br>      {<br>        Tdata A=getdata(a*X[k].a,X[k].b);<br>        Tdata B=getdata(b*Y[k].a,Y[k].b);<br>        int64 a1=A.a,b1=A.b;<br>        int64 a2=B.a,b2=B.b;<br>        if (a1*b2+a2*b1+c*b1*b2==0)<br>          C++;<br>      }<br>      nedge+=(C+1);<br>    }<br>    int result=nedge-npoint+1;<br>    result-=(2*n);<br>    return result;<br>  }<br>};<br></td>