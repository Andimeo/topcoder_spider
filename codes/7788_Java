<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class PlaneDivision {<br>  int n;<br>  int p = 0;<br>  int e = 0;<br>  int c;<br>  double[] x = new double[60];<br>  double[] y = new double[60];<br>  void add(double ix, double iy) {<br>    for (int i = 0; i &lt; c; i++) {<br>      if (Math.abs(x[i] - ix) &lt; 1e-9 &amp;&amp; Math.abs(y[i] - iy) &lt; 1e-9) {<br>        return;<br>      }<br>    }<br>    x[c] = ix;<br>    y[c] = iy;<br>    c++;<br>  }<br>    public int howManyFiniteParts(int[] x1, int[] y1, int[] x2, int[] y2) {<br>      n = x1.length;<br>      for (int i = 0; i &lt; n; i++) {<br>        c = 0;<br>        int c1 = 0;<br>        for (int j = 0; j &lt; n; j++) {<br>          if (i == j) {<br>            c1 = c;<br>            continue;<br>          }<br>          long a11 = y1[i] - y2[i];<br>          long a12 = x2[i] - x1[i];<br>          long a21 = y1[j] - y2[j];<br>          long a22 = x2[j] - x1[j];<br>          double b1 = x2[i] * y1[i] - x1[i] * y2[i];<br>          double b2 = x2[j] * y1[j] - x1[j] * y2[j];<br>          if (a11 * a22 - a12 * a21 == 0) continue;<br>          double temp = a11 * a22 - a12 * a21;<br>          double tx = b1 * a22 - b2 * a12;<br>          double ty = a11 * b2 - a21 * b1;<br>          double ix = tx / temp;<br>          double iy = ty / temp;<br>          add(ix, iy);<br>        }<br>        if (c &gt;= 2) {<br>          e += c - 1;<br>        }<br>        p += c - c1;<br>      }<br>      if (p &lt; 3) return 0;<br>      return 1 - p + e;<br>    }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>