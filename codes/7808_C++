<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br> <br>using namespace std;<br> <br>typedef long long llong;<br>typedef long double ldbl;<br>typedef pair &lt;int, int&gt; PII;<br>typedef vector &lt;int&gt; VI;<br>typedef vector &lt;string&gt; VS;<br> <br>#define F first<br>#define S second<br>#define PB push_back<br> <br>#define m 55<br> <br>VS a;<br>int f0[m], f1[m];<br> <br>void dfs( int v, int p )<br>{<br>  VI c;<br>  for (int i = 0; i &lt; a.size(); i++)<br>    if (i != p &amp;&amp; a[v][i] == '1')<br>      dfs(i, v), c.PB(i);<br>  f0[v] = f1[v] = 0;<br>  for (int i = 0; i &lt; c.size(); i++)<br>    for (int j = i + 1; j &lt; c.size(); j++)<br>    {<br>      int cur = f1[c[i]] + f1[c[j]] + 2;<br>      for (int k = 0; k &lt; c.size(); k++)<br>        if (k != i &amp;&amp; k != j)<br>          cur += max(f0[c[k]], f1[c[k]]);<br>      f0[v] &gt;?= cur;<br>    }<br>  for (int i = 0; i &lt; c.size(); i++)<br>  {<br>    int cur = f1[c[i]] + 1;<br>    for (int k = 0; k &lt; c.size(); k++)<br>      if (k != i)<br>        cur += max(f0[c[k]], f1[c[k]]);<br>    f1[v] &gt;?= cur;<br>  }<br>}<br> <br>class RoadsReorganization<br>{<br>public:<br>  int minDaysCount( vector &lt;string&gt; _a )<br>  {<br>    a = _a;<br>    int n = a.size();<br>    dfs(0, -1);<br>    return 2 * n - 1 - 2 * max(f0[0], f1[0]);<br>  }<br>};<br> <br> <br>// Powered by PopsEdit<br></td>