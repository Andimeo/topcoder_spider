<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br><br>public class DeviceProgramming {<br>    public long minBytes(int[] offset, int[] size, int maxPacketSize, int overhead) {<br>        int N = offset.Length;<br>        int packetsize = maxPacketSize-overhead;<br>        Array.Sort(offset, size);<br><br>        long[] aBest = new long[N + 1];<br>        aBest[0] = 0;<br><br>        for (int i = 0; i &lt; N; i++) {<br>            aBest[i+1] = long.MaxValue;<br>            for (int j = 0; j &lt;= i; j++) {<br>                int iFirst = offset[j];<br>                int iLast = offset[i] + size[i] - 1;<br>                int iSize = iLast - iFirst + 1;<br>                int iPackets = iSize / packetsize;<br>                long iTotSize = (long)iPackets*maxPacketSize;<br>                if (iSize % packetsize &gt; 0) iTotSize += overhead + (iSize % packetsize);<br>                aBest[i + 1] = Math.Min(aBest[i + 1], aBest[j] + iTotSize);<br>            }<br>        }<br><br>        return aBest[N];<br><br>    }<br>}<br></td>