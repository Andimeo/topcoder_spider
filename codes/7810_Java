<td class="problemText" colspan="8" valign="middle" align="left">
            public class DeviceProgramming {<br>    public long minBytes(int[] offset, int[] size, int maxPacketSize, int overhead) {<br>        int n = offset.length;<br>        for (int i = 0; i &lt; n; i++) {<br>            for (int j = i + 1; j &lt; n; j++) if (offset[j] &lt; offset[i]) {<br>                int t = offset[i];<br>                offset[i] = offset[j];<br>                offset[j] = t;<br>                t = size[i];<br>                size[i] = size[j];<br>                size[j] = t;<br>            }<br>        }<br>        int m = maxPacketSize - overhead;<br>        long[] d = new long[n + 1];<br>        d[0] = 0;<br>        for (int i = 1; i &lt;= n; i++) {<br>            d[i] = Long.MAX_VALUE;<br>            for (int j = 0; j &lt; i; j++) {<br>                int l = offset[i - 1] + size[i - 1] - offset[j];<br>                d[i] = Math.min(d[i], d[j] + l + (long)((l + m - 1) / m) * overhead);<br>            }<br>        }<br>        return d[n];<br>    }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>