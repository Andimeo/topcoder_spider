<td class="problemText" colspan="8" valign="middle" align="left">
            imports System<br>imports Microsoft.VisualBasic<br>imports System.Collections<br>imports System.Text<br> <br> <br>Public Class DeviceProgramming<br> <br>    Dim n As Integer<br>    Dim off() As Integer<br>    Dim sz() As Integer<br>    Dim ov, mps, es As Integer<br>    Dim memo(50) As Long<br> <br>    Public Function minBytes(ByVal offset() As Integer, ByVal size() As Integer, ByVal maxPacketSize As Integer, ByVal overhead As Integer) As Long<br>        Dim i1 As Integer<br>        For i1 = 0 To 50<br>            memo(i1) = -1<br>        Next<br> <br>        mps = maxPacketSize<br>        ov = overhead<br>        es = mps - ov<br>        n = offset.Length<br>        Array.Sort(offset, size)<br>        off = offset.Clone()<br>        sz = size.Clone()<br>        Return mb(0)<br>    End Function<br> <br>    Private Function mb(ByVal ip As Integer) As Long<br>        If ip = n Then Return 0<br>        If memo(ip) &lt;&gt; -1 Then Return memo(ip)<br> <br>        Dim ep As Integer<br>        Dim b, vv, tv As Long<br>        Dim ap, tw, tail As Long<br> <br>        b = (1L &lt;&lt; 62)<br>        For ep = ip To n - 1<br>            tw = off(ep) + sz(ep) - off(ip)<br>            ap = tw \ es<br>            tail = tw - (ap * es)<br>            vv = mps * ap + IIf(tail = 0, 0, ov + tail)<br>            tv = vv + mb(ep + 1)<br>            If tv &lt; b Then b = tv<br>        Next<br> <br>        memo(ip) = b<br>        Return b<br>    End Function<br> <br>End Class<br></td>