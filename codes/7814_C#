<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class LineOfDice {<br>    const int MOD = 10007;<br><br>  public int howMany(int[] dice) {<br>        int sum = 0;<br>        int max = 3;<br>        foreach (int x in dice)<br>        {<br>            sum += x;<br>            max = Math.Max(max, x);<br>        }<br>        int ret = 0;<br>        int[,] c = new int[sum + 1, max + 1];<br>        c[0, 0] = 1;<br>        for (int i = 1; i &lt;= sum; ++i)<br>        {<br>            c[i, 0] = 1;<br>            for (int j = 1; j &lt;= i &amp;&amp; j &lt;= max; ++j)<br>            {<br>                c[i, j] = c[i - 1, j] + c[i - 1, j - 1];<br>                if (c[i, j] &gt;= MOD)<br>                    c[i, j] -= MOD;<br>            }<br>        }<br>        for (int leftSide = 0; leftSide &lt; 6; ++leftSide)<br>        {<br>            int[] cnt = new int[4];<br>            int k = 0;<br>            for (int i = 0; i &lt; 6; ++i)<br>                if (i != leftSide &amp;&amp; i != 5 - leftSide)<br>                    cnt[k++] = dice[i];<br>            int[] res = new int[sum + 1];<br>            res[0] = 1;<br>            foreach (int am in cnt)<br>            {<br>                for (int n = sum; n &gt;= 0; --n)<br>                    for (int take = 1; take &lt;= am &amp;&amp; take &lt;= n; ++take)<br>                        if (res[n - take] != 0)<br>                        {<br>                            res[n] = (res[n] + res[n - take] * c[n, take]) % MOD;<br>                        }<br>            }<br>            for (int i = 1; i &lt;= sum; ++i)<br>            {<br>                ret = (ret + res[i]) % MOD;<br>            }<br>        }<br>        return ret;<br>  }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>