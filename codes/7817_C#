<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br><br>public class NestedDiamonds {<br>    int N;<br>    double[] aSides;<br>    public double minHeight(int[] sides) {<br>        N = sides.Length;<br>        if (N == 1) return 0;<br>        Array.Sort(sides);<br>        for (int i = 0; i &lt; N-1; i++) {<br>            if (sides[i] == sides[i + 1]) return -1;<br>        }<br>        aSides = new double[N];<br>        for (int i = 0; i &lt; N; i++) {<br>            aSides[i] = sides[i];<br>        }<br>        Array.Sort(aSides);<br><br>        double[] max = new double[N];<br>        double[] min = new double[N];<br><br>        max[0] = Math.Sqrt(2) * aSides[0]/2;<br>        min[0] = 0;<br>        for (int i = 1; i &lt; N; i++) {<br>            max[i] = Math.Sqrt(2)* aSides[i]/2;<br>            min[i] = 0;<br>            max[i] = Math.Min(max[i], Math.Sqrt(aSides[i - 1] * aSides[i - 1] - min[i - 1] * min[i - 1]));<br>            min[i] = Math.Max(min[i], Math.Sqrt(aSides[i - 1] * aSides[i - 1] - max[i - 1] * max[i - 1]));<br>            if (min[i] &gt; max[i]) return -1;<br>        }<br><br>        return min[N-1]*2;<br><br><br>    }<br>}<br></td>