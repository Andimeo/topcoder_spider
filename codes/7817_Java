<td class="problemText" colspan="8" valign="middle" align="left">
            import java.io.*;<br>import java.util.*;<br><br>public class NestedDiamonds {<br>  public double minHeight(int[] sd) {<br>    int n = sd.length;<br>    long[] s = new long[n];<br>    for (int i = 0; i &lt; n; i++) {<br>      s[i] = sd[i] * 1L * sd[i];<br>    }<br>    Arrays.sort(s);<br>    for (int i = 0; i &lt; n - 1; i++)<br>      if (s[i] == s[i + 1])<br>        return -1;<br>    long maxH = s[n - 1];<br>    long minH = 0;<br>    boolean tall = true;<br>    long d = 0;<br>    for (int i = n - 2; i &gt;= 0; i--) {<br>      long e;<br>      if (tall) {<br>        e = s[i] - d;<br>        minH = Math.max(minH, e - d);<br>        maxH = Math.min(maxH, 2 * e);<br>      } else {<br>        e = s[i] - d;<br>        maxH = Math.min(maxH, (d - e));<br>        minH = Math.max(minH, -2 * e);<br>      }<br>      d = e;<br>      tall ^= true;<br>    }<br>    if (maxH &gt;= minH) {<br>      return Math.sqrt(minH * 2);<br>    }<br>    return -1;<br>  }<br>  <br>  public static void main(String[] args) {<br>    new NestedDiamonds().minHeight(new int[]{1, 2, 3, 5});<br>  }<br>}<br></td>