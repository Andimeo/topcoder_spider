<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br><br>public class LateForConcert {<br>  <br>  double[][][][] x;<br>  int n, m;<br>  <br>  int[] dx = {1, -1, 0, 0};<br>  int[] dy = {0, 0, 1, -1};<br>  int[] back = {1, 0, 3, 2};<br>  <br>  public double bestRoute(String[] cityMap, int timeLeft, double speedingTicket, double redLight) {<br>    n = cityMap.length;<br>    m = cityMap[0].length();<br>    char[][] r = new char[n][];<br>    for (int i = 0; i &lt; n; i++)<br>      r[i] = cityMap[i].toCharArray();<br>    <br>    int sx = 0;<br>    int sy = 0;<br>    int ex = 0;<br>    int ey = 0;<br>    for (int i = 0; i &lt; n; i++)<br>      for (int j = 0; j &lt; m; j++) {<br>        if (r[i][j] == 'Y') {<br>          sx = i;<br>          sy = j;<br>          r[i][j] = '.';<br>        }<br>        if (r[i][j] == 'C') {<br>          ex = i;<br>          ey = j;<br>          r[i][j] = '.';<br>        }<br>      }<br>    <br>    x = new double[n][m][timeLeft + 1][4];<br>    for (int i = 0; i &lt; n; i++)<br>      for (int j = 0; j &lt; m; j++)<br>        for (int t = 0; t &lt;= timeLeft; t++)<br>          for (int d = 0; d &lt; 4; d++)<br>            x[i][j][t][d] = 1e100;<br>    for (int d = 0; d &lt; 4; d++)<br>      x[sx][sy][0][d] = 0;<br>    <br>    for (int t = 0; t &lt; timeLeft; t++)<br>      for (int i = 0; i &lt; n; i++)<br>        for (int j = 0; j &lt; m; j++)<br>          for (int d = 0; d &lt; 4; d++)<br>            for (int dir = 0; dir &lt; 4; dir++)<br>              if (dir != back[d]) {<br>                int ni = i + dx[dir];<br>                int nj = j + dy[dir];<br>                if (ni &lt; 0 || ni &gt;= n || nj &lt; 0 || nj &gt;= m)<br>                  continue;<br>                if (ni == ex &amp;&amp; nj == ey &amp;&amp; t + 1 &lt; timeLeft)<br>                  continue;<br>                <br>                if (r[ni][nj] == 'X')<br>                  continue;<br>                if (r[ni][nj] == '.') {<br>                  x[ni][nj][t + 1][dir] = Math.min(x[ni][nj][t + 1][dir], x[i][j][t][d]);<br>                } else if (r[ni][nj] == 'S') {<br>                  x[ni][nj][t + 1][dir] = Math.min(x[ni][nj][t + 1][dir], x[i][j][t][d] + speedingTicket);<br>                } else if (r[ni][nj] == 'T') {<br>                  x[ni][nj][t + 1][dir] = Math.min(x[ni][nj][t + 1][dir], x[i][j][t][d] + redLight * 0.7);<br>                  if (t + 2 &lt;= timeLeft)<br>                    x[ni][nj][t + 2][dir] = Math.min(x[ni][nj][t + 2][dir], x[i][j][t][d]);<br>                }<br>              }<br>    <br>    double res = 1e100;<br>    for (int d = 0; d &lt; 4; d++)<br>      res = Math.min(res, x[ex][ey][timeLeft][d]);<br>    if (res &gt; 0.5e100)<br>      res = -1;<br>    return res;<br>  }<br><br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>