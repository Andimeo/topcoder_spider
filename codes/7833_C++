<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class RandomShuffle {<br>public:<br>  double probability(vector &lt;int&gt;);<br>};<br> <br>double tot = 0, bune = 0;<br>int o[15], N, a[15];<br> <br>inline int valid(int x)<br>{<br>  int places = 0;<br>  for(int i = 1; i &lt;= N; i++)<br>    if(o[i] == a[i]) places++;<br>    <br>  places = N - places;<br>  int ramase = N - x;<br>  if(ramase * 2 &lt; places) return 0;<br>  else return 1;<br>}<br> <br>void back(int x)<br>{<br>  for(int i = 1; i &lt;= N; i++)<br>  {<br>    swap(a[x], a[i]);<br>    if(valid(x))<br>    {<br>      if(x &lt; N) back(x + 1);<br>      else bune += 1.0;<br>    }<br>    swap(a[x], a[i]);<br>  }<br>}<br> <br>double RandomShuffle::probability(vector &lt;int&gt; outputArray) {<br>  N = outputArray.size();<br>  tot = 1;<br>  for(int i = 1; i &lt;= N; i++) tot = tot * N;<br>  for(int i = 1; i &lt;= N; i++) o[i] = outputArray[i - 1];  <br>  for(int i = 1; i &lt;= N; i++) a[i] = i;<br>  back(1);<br>  return (double)bune / tot;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>