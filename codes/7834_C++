<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cctype&gt;<br>using namespace std;<br>#define REP(i,n) for(int i=0; i&lt;(n); ++i)<br>#define FOR(a,b,c) for(int a=(b); a&lt;=(c); a++)<br> <br>class SharksDinner {<br>  public:<br>   int n;<br>  int match[100];<br>  bool matchP[100];<br>  bool vis[100];<br>  int M[100][100];<br>  <br>bool dfs(int v) {<br>  if(vis[v]) return false;<br>  vis[v]=true;<br>  if(v&gt;=n &amp;&amp; !match[v]) {<br>    match[v]=true;<br>    return true;<br>  }<br>  if(v&lt;n) {<br>    for(int it=0; it&lt;n; ++it)<br>      if(M[v][it]==1)<br>        if(dfs(it+n)) {<br>          M[v][it]=-1;<br>          return true;<br>        }<br>  }<br>  else {<br>    for(int it=0;it&lt;n;++it)<br>      if(M[it][v-n]==-1)<br>        if(dfs(it)) {<br>          M[it][v-n]=1;<br>          return true;<br>        }<br>  }<br>  return false;<br>}<br>int maxflow() {<br>  int ile = 0;<br>  bool done = false;<br>      REP(i, n) if(match[i]) ile+=match[i];<br>      //printf("we maxflow = %d\n", ile);<br>      ile=0;<br>  while(1) {<br>    memset(vis, 0, 2*n);<br>    done=true;<br>    REP(i, n) if(match[i]&lt;2 &amp;&amp; dfs(i)) {<br>      match[i] ++;<br>      done=false;<br>    }<br> <br>    if(done) {<br>      REP(i, n) if(match[i]) ile+=match[i];<br>      //printf("wy maxflow = %d\n", ile);<br>      return ile;<br>    }<br>  }<br>}<br>  int minSurvivors(vector &lt;int&gt; size, vector &lt;int&gt; speed, vector &lt;int&gt; intelligence) {<br>    memset(M, 0, sizeof(M));<br>    memset(match, 0, sizeof(match));<br>    n = size.size();<br>    REP(i, n) REP(j, n) if(i!=j) {<br>      if(size[i] &gt;= size[j])<br>      if(speed[i] &gt;= speed[j])<br>      if(intelligence[i] &gt;= intelligence[j])<br>      M[i][j]=1;<br>      if(size[i]==size[j] &amp;&amp; speed[i]==speed[j] &amp;&amp; intelligence[i]==intelligence[j] &amp;&amp; i&gt;j)<br>      M[i][j]=0;<br>    }<br>    return n-maxflow();<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>