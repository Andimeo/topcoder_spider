<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class SharksDinner {<br>  int n;<br>  boolean[][] e;<br>  int[] d;<br>  int[][] s;<br>  <br>  public boolean poisk(int v, int w){<br>    if (d[v]&lt;2){<br>      s[v][d[v]] = w;<br>      d[v]++;<br>      //System.out.println(v+" "+w);<br>      return true;<br>    }<br>    g[v] = true;<br>    for(int j=0;j&lt;2;j++){<br>      int t = s[v][j];<br>      for(int i=0;i&lt;n;i++)<br>        if (!g[i] &amp;&amp; e[i][t] &amp;&amp; poisk(i,t)){<br>          s[v][j] = w;<br>          return true;<br>        }<br>    }<br>    return false;<br>  }<br>  <br>  boolean[] g;<br>  public int minSurvivors(int[] a, int[] b, int[] c){<br>    n = a.length;<br>    e = new boolean[n][n];<br>    for(int i=0;i&lt;n;i++){<br>      for(int j=0;j&lt;n;j++) if (i!=j){<br>        e[i][j] = (a[i]&gt;=a[j] &amp;&amp; b[i]&gt;=b[j] &amp;&amp; c[i]&gt;=c[j]);<br>      }<br>    }<br>    for(int i=0;i&lt;n;i++){<br>      for(int j=i+1;j&lt;n;j++){<br>        if (e[i][j] &amp;&amp; e[j][i]) e[j][i] = false;<br>      }<br>    }<br>    d = new int[n];    <br>    s = new int[n][2];<br>    int cc = n;<br>    g = new boolean[n];<br>    for(int i=0;i&lt;n;i++){ <br>      for(int j=0;j&lt;n;j++){<br>        Arrays.fill(g,false);<br>        if (e[j][i] &amp;&amp; poisk(j,i)){<br>          cc--; break;<br>        }<br>      }<br>    }<br>    return cc;<br>  }<br>}<br></td>