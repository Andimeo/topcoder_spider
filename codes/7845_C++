<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;bitset&gt;<br>#include &lt;cassert&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;complex&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;ctime&gt;<br>#include &lt;deque&gt;<br>#include &lt;functional&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iterator&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;stack&gt;<br>#include &lt;string&gt;<br>#include &lt;valarray&gt;<br>#include &lt;vector&gt;<br>#include &lt;utility&gt;<br><br>using namespace std;<br><br>#define all(v) (v).begin(), (v).end()<br><br>// Types<br>typedef long double ld;<br>typedef long long ll;<br>typedef pair &lt;int, int&gt; pii;<br>typedef vector &lt;int&gt; vi;<br>typedef vector &lt;pii&gt; vp;<br>typedef vector &lt;ld&gt; vd;<br>typedef vector &lt;string&gt; vs;<br>typedef vector &lt;bool&gt; vb;<br>typedef queue &lt;pii&gt; qp;<br>typedef map &lt;string, int&gt; msi;<br><br>// Constants<br>const int INF = 1000000000;<br>const ld EPS = 1e-10L;<br>const ld PI = 3.14159265358979L;<br><br>vi a;<br>int n;<br>int res;<br>int g;<br><br>int gcd(int a, int b)<br>{<br>  while (a &amp;&amp; b)<br>  {<br>    a %= b;<br>    swap(a, b);<br>  }<br>  return a + b;<br>}<br><br>//set &lt;pii&gt; w;<br><br>void go(int p, int gc, int q)<br>{<br>//  if (w.find(pii(p, g)) != w.end())<br>//    return;<br>  if (q &gt;= res)<br>    return;<br>  if (gc == g)<br>  {<br>    res = q;<br>    return;<br>  }<br>  if (p == n)<br>    return;<br>  int g2 = gcd(a[p], gc);<br>  if (g2 != gc)<br>    go(p + 1, g2, q + 1);<br>  go(p + 1, gc, q);<br>}<br><br>class BalanceScale<br>{<br>// Global<br><br>// Functions<br>public:<br>  int takeWeights(vector &lt;int&gt; _w)<br>  {<br>    res = INF;<br>    n = _w.size();<br>    a = _w;<br>    g = 0;<br>//    w.clear();<br>    for (int i = 0; i &lt; n; ++i)<br>      g = gcd(g, a[i]);<br>    go(0, 0, 0);<br>    return res;<br>  }<br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>