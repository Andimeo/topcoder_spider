<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class RelabelingOfGraph {<br>  public int[] renumberVertices(String[] m) {<br>        int n = m.length;<br>        boolean[][] g = new boolean[n][n];<br>        for (int i = 0; i &lt; n; ++i)<br>            for (int j = 0; j &lt; n; ++j)<br>                g[i][j] = m[i].charAt(j) == '1';<br>        for (int k = 0; k &lt; n; ++k)<br>            for (int i = 0; i &lt; n; ++i)<br>                for (int j = 0; j &lt; n; ++j)<br>                    if (g[i][k] &amp;&amp; g[k][j])<br>                        g[i][j] = true;<br>        for (int i = 0; i &lt; n; ++i)<br>            if (g[i][i])<br>                return new int[0];<br>        int[] res = new int[n];<br>        boolean[] bad = new boolean[n];<br>        doPlace(res, g, bad, 0, n - 1, n);<br>        return res;<br>  }<br> <br>    private void doPlace(int[] res, boolean[][] g, boolean[] bad, int l, int r, int n) {<br>        int i;<br>        for (i = 0; i &lt; n; ++i)<br>            if (!bad[i])<br>                break;<br>        if (i &gt;= n)<br>            return;<br>        int cnt = 0;<br>        for (int j = 0; j &lt; n; ++j)<br>            if (!bad[j] &amp;&amp; g[j][i])<br>                ++cnt;<br>        res[i] = l + cnt;<br>        boolean[] b2 = new boolean[n];<br>        for (int j = 0; j &lt; n; ++j)<br>            if (bad[j] || !g[j][i] || j == i)<br>                b2[j] = true;<br>        doPlace(res, g, b2, l, l + cnt - 1, n);<br>        for (int j = 0; j &lt; n; ++j)<br>            if (bad[j] || g[j][i] || j == i)<br>                b2[j] = true;<br>            else<br>                b2[j] = false;<br>        doPlace(res, g, b2, l + cnt + 1, r, n);<br>    }<br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>