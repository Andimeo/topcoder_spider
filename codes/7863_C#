<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class NumberOfDivisors<br>{<br>  public long smallestNumber(int k)<br>  {<br>        bool[] prime = new bool[101];<br>        long mul = 1;<br>        long x = 1000000000;<br>        x*=x;<br>        List&lt;int&gt; p = new List&lt;int&gt;();<br>        for (int i = 2;i&lt;=100;i++)<br>            if (!prime[i])<br>            {<br>                mul *= i;<br>                if (mul &gt; x) break;<br>             //   Console.WriteLine(i);<br>                p.Add(i);<br>                for (int j = i; j &lt;= 100; j += i) prime[j] = true;<br>            }<br>        int np = p.Count;<br> <br>        long[,] dp = new long[100, 50001];<br>        for (int i = 0; i &lt;= np; i++)<br>            for (int j = 0; j &lt; 50001; j++) dp[i, j] = long.MaxValue;<br>        dp[0, 1] = 1;<br>        if (k == 1) return 1;<br>        for (int i = 0; i &lt; np; i++)<br>            for (int j = 0;j&lt;=k;j++)<br>                if (dp[i,j] &lt;long.MaxValue)<br>        {<br>            dp[i + 1, j] = Math.Min(dp[i + 1, j], dp[i, j]);<br>            long pp = p[i];<br>            long cur = dp[i, j];<br>            int cnt = 2;<br>            while (cur &lt;= x / pp)<br>            {<br>                cur = cur * pp;<br>                int kk = j * cnt;<br>                if (kk&gt;k) break;<br>                dp[i + 1, kk] = Math.Min(dp[i + 1, kk], cur);<br>                cnt++;<br>            }<br>        }<br>if (dp[np, k] &lt;= x) return dp[np,k];<br>else return -1;<br>        return 0;<br>  }}<br></td>