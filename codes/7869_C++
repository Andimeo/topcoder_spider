<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>typedef long long int64;<br> <br>class MirrorNumber<br>{<br>public:<br>  int64 countAll(int L)<br>  {<br>    if (L==1) return 2;<br>    int64 result=1;<br>    if (L%2==1) result=3;<br>    result*=4;<br>    for (int i=1;i&lt;L/2;i++)<br>      result*=5;<br>    return result;<br>  }<br>  int64 search(int L,int D,int64 now,int64 limit)<br>  {<br>    if (D&gt;(L+1)/2)<br>      return (int)(now&lt;=limit);<br>    int64 result=0;<br>    int64 p1=1,p2=1;<br>    for (int i=0;i&lt;D-1;i++) p2*=10;<br>    for (int i=0;i&lt;L-D;i++) p1*=10;<br>    for (int i=0;i&lt;10;i++)<br>    {<br>      if (D==1 &amp;&amp; i==0) continue;<br>      int k=-1;<br>      if (i==0 || i==1 || i==8) k=i;<br>      if (i==2 || i==5) k=7-i;<br>      if (k==-1) continue;<br>      if (L%2==1 &amp;&amp; D==(L+1)/2)<br>      {<br>        if (i!=k) continue;<br>        result+=search(L,D+1,now+p1*i,limit);<br>      }<br>      else<br>        result+=search(L,D+1,now+p1*i+p2*k,limit);<br>    }<br>    return result;<br>  }<br>  int64 solve(int64 n)<br>  {<br>    if (n&lt;0) return 0;<br>    if (n==0) return 1;<br>    int64 result=1;<br>    int L=0;<br>    for (int64 m=n;m&gt;0;m/=10) L++;<br>    for (int p=1;p&lt;L;p++) result+=countAll(p);<br>    result+=search(L,1,0,n);<br>    return result;<br>  }<br>  int count(string A, string B)<br>  {<br>    int64 nA=0;<br>    int64 nB=0;<br>    for (int i=0;i&lt;A.size();i++) nA=nA*10+(int)(A[i]-'0');<br>    for (int i=0;i&lt;B.size();i++) nB=nB*10+(int)(B[i]-'0');<br>    int64 r1=solve(nA-1);<br>    int64 r2=solve(nB);<br>    return r2-r1;<br>  }<br>};<br> <br> <br> <br>// Powered by PopsEdit<br></td>