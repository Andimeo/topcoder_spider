<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;bitset&gt;<br>#include &lt;cassert&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;complex&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;ctime&gt;<br>#include &lt;deque&gt;<br>#include &lt;functional&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iterator&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;stack&gt;<br>#include &lt;string&gt;<br>#include &lt;valarray&gt;<br>#include &lt;vector&gt;<br>#include &lt;utility&gt;<br><br>using namespace std;<br><br>#define all(v) (v).begin(), (v).end()<br><br>// Types<br>typedef long double ld;<br>typedef long long ll;<br>typedef pair &lt;int, int&gt; pii;<br>typedef vector &lt;int&gt; vi;<br>typedef vector &lt;pii&gt; vp;<br>typedef vector &lt;ld&gt; vd;<br>typedef vector &lt;string&gt; vs;<br>typedef vector &lt;bool&gt; vb;<br>typedef queue &lt;pii&gt; qp;<br>typedef map &lt;string, int&gt; msi;<br><br>// Constants<br>const int INF = 1000000000;<br>const ld EPS = 1e-10L;<br>const ld PI = 3.14159265358979L;<br><br>class SumOfSelectedCells<br>{<br>// Global<br><br>// Functions<br>public:<br>  string hypothesis(vector &lt;string&gt; table)<br>  {<br>    string res;<br>    int n = table.size();<br>    vector &lt;vi&gt; t(n);<br>    for (int i = 0; i &lt; n; ++i)<br>    {<br>      istringstream in(table[i]);<br>      int c;<br>      while (in &gt;&gt; c)<br>        t[i].push_back(c);<br>    }<br>    int m = t[0].size();<br>    if (n == m)<br>    {<br>      for (int i = 1; i &lt; n; ++i)<br>      {<br>        for (int j = 1; j &lt; n; ++j)<br>        {<br>          if (t[0][0] + t[i][j] != t[i][0] + t[0][j])<br>            return "INCORRECT";<br>        }<br>      }<br>      return "CORRECT";<br>    }<br>    if (n &gt; m)<br>    {<br>      for (int i = 0; i &lt; m; ++i)<br>      {<br>        for (int j = 1; j &lt; n; ++j)<br>        {<br>          if (t[j][i] != t[0][i])<br>            return "INCORRECT";<br>        }<br>      }<br>      return "CORRECT";<br>    }<br>    else<br>    {<br>      for (int i = 1; i &lt; m; ++i)<br>      {<br>        for (int j = 0; j &lt; n; ++j)<br>        {<br>          if (t[j][i] != t[j][0])<br>            return "INCORRECT";<br>        }<br>      }<br>      return "CORRECT";<br>    }<br>    return res;<br>  }<br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>