<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br> <br>class ConvexArray<br>{<br>public:<br>  int n,X[60],Y[60];<br>  vector&lt;int&gt; R;<br>  int next(int v)<br>  {<br>    return (v==n-1)?0:(v+1);<br>  }<br>  int cross(int p0,int p1,int p2)<br>  {<br>    return (X[p1]-X[p0])*(Y[p2]-Y[p0])-(X[p2]-X[p0])*(Y[p1]-Y[p0]);<br>  }<br>  bool check(vector&lt;int&gt; A,bool closed)<br>  {<br>    n=0;<br>    for (int i=0;i&lt;A.size();i+=2)<br>      X[n]=A[i],Y[n++]=A[i+1];<br>    for (int i=0;i&lt;n;i++)<br>      for (int j=i+1;j&lt;n;j++)<br>        if (X[i]==X[j] &amp;&amp; Y[i]==Y[j])<br>          return false;<br>    if (closed &amp;&amp; n&lt;3) return false;<br>    for (int i=0;i&lt;n;i++)<br>    {<br>      if (i==n-1 &amp;&amp; !closed) continue;<br>      bool f1=false,f2=false;<br>      for (int k=0;k&lt;n;k++) if (k!=i &amp;&amp; k!=next(i))<br>      {<br>        int c=cross(i,next(i),k);<br>        if (c==0) return false;<br>        if (c&lt;0) f1=true;<br>        if (c&gt;0) f2=true;<br>      }<br>      if (f1 &amp;&amp; f2) return false;<br>    }<br>    return true;<br>  }<br>  bool search(vector&lt;int&gt; A)<br>  {<br>    if (A.size()&gt;=6 &amp;&amp; A.size()%2==0)<br>      return check(A,true);<br>    if (A.size()%2==0 &amp;&amp; !check(A,false)) return false;<br>    for (int i=1;i&lt;=50;i++)<br>    {<br>      A.push_back(i);<br>      R.push_back(i);<br>      if (search(A)) return true;<br>      A.pop_back();<br>      R.pop_back();<br>    }<br>    return false;<br>  }<br>  vector &lt;int&gt; getEnding(vector &lt;int&gt; A)<br>  {<br>    R.clear();<br>    if (!search(A))<br>      R.push_back(-1);<br>    return R;<br>  }<br>};<br> <br> <br> <br>// Powered by PopsEdit<br></td>