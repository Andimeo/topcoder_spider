<td class="problemText" colspan="8" valign="middle" align="left">
            import java.io.*;<br>import java.util.*;<br><br>public class Inc {<br>  public String[] finalBoard(String[] brd, int inc, int turns) {<br>    int hei = brd.length;<br>    int wid = brd[0].length();<br>    int d = hei + wid;<br>    int three = 1;<br>    for (int i = 0; i &lt; d; i++)<br>      three *= 3;<br>    int[][] res = new int[turns + 1][three];<br>    int[][] finmask = new int[turns + 1][three];<br>    for (int mask = 0; mask &lt; three; mask++) {<br>      int[] dx = new int[wid];<br>      int[] dy = new int[hei];<br>      int mm = mask;<br>      for (int x = 0; x &lt; wid; x++) {<br>        dx[x] = mm % 3;<br>        mm /= 3;<br>      }<br>      for (int x = 0; x &lt; hei; x++) {<br>        dy[x] = mm % 3;<br>        mm /= 3;<br>      }<br>      int[] a = new int[7];<br>      for (int i = 0; i &lt; hei; i++) {<br>        for (int j = 0; j &lt; wid; j++) {<br>          if (brd[i].charAt(j) == '.')<br>            continue;<br>          int v = brd[i].charAt(j) - '0';<br>          v += dx[j] + dy[i] + 3333;<br>          v = (v + 2) % 3 + 1;<br>          a[v]++;<br>        }<br>      }<br>      int result = (a[1] &lt;&lt; 10) + (a[2] &lt;&lt; 5) + a[3];<br>      res[turns][mask] = result;<br>      finmask[turns][mask] = mask;<br>    }<br>    int[] dx = new int[wid];<br>    int[] dy = new int[hei];<br>    int[] ex = new int[wid];<br>    int[] ey = new int[hei];<br>    int[] a = new int[7];<br>    for (int mov = turns; mov &gt; 0; mov--) {<br>      int pl = (mov + 2) % 3 + 1;<br>      for (int mask = 0; mask &lt; three; mask++) {<br>        int mm = mask;<br>        for (int x = 0; x &lt; wid; x++) {<br>          dx[x] = mm % 3;<br>          mm /= 3;<br>        }<br>        for (int x = 0; x &lt; hei; x++) {<br>          dy[x] = mm % 3;<br>          mm /= 3;<br>        }<br>        int bqual = -1000;<br>        for (int cut = 0; cut &lt; 20; cut++) {<br>          int c = cut;<br>          boolean hor = false;<br>          if (c &gt;= 10) {<br>            c -= 10;<br>            hor = true;<br>          }<br>          <br>          boolean leftop = false;<br>          if (c &gt;= 5) {<br>            c -= 5;<br>            leftop = true;<br>          }<br>          <br>          for (int x = 0; x &lt; wid; x++) {<br>            ex[x] = dx[x];<br>          }<br>          for (int x = 0; x &lt; hei; x++) {<br>            ey[x] = dy[x];<br>          }<br>          int lo, hi;<br>          if (hor) {<br>            if (c &lt; 1 || c &gt;= hei)<br>              continue;<br>            if (leftop) {<br>              lo = 0;<br>              hi = c;<br>            } else {<br>              lo = c;<br>              hi = hei;<br>            }<br>            for (int i = lo; i &lt; hi; i++) {<br>              ey[i] = (dy[i] + 3 + inc) % 3;<br>            }<br>          } else {<br>            if (c &lt; 1 || c &gt;= wid)<br>              continue;<br>            if (leftop) {<br>              lo = 0;<br>              hi = c;<br>            } else {<br>              lo = c;<br>              hi = wid;<br>            }<br>            for (int i = lo; i &lt; hi; i++) {<br>              ex[i] = (dx[i] + 3 + inc) % 3;<br>            }<br>          }<br><br>          int nm = 0;<br>          int tr = 1;<br>          for (int x = 0; x &lt; wid; x++) {<br>            nm += tr * ex[x];<br>            tr *= 3;<br>          }<br>          for (int x = 0; x &lt; hei; x++) {<br>            nm += tr * ey[x];<br>            tr *= 3;<br>          }<br>          <br>          int r = res[mov][nm];<br>          int rr = r;<br>          a[3] = r &amp; 31;<br>          r &gt;&gt;= 5;<br>          a[2] = r &amp; 31;<br>          r &gt;&gt;= 5;<br>          a[1] = r &amp; 31;<br>          //System.out.println(a[1] + " " + a[2] + " " + a[3]);<br>          int pl1 = (pl) % 3 + 1;<br>          int pl2 = (pl + 1) % 3 + 1;<br>          int qual = 0;<br>          if (a[pl] &gt; a[pl1] &amp;&amp; a[pl] &gt; a[pl2])<br>            qual += 1000000000;<br>          if (a[pl] &gt;= a[pl1] &amp;&amp; a[pl] &gt;= a[pl2])<br>            qual +=   100000000;<br>          qual += a[pl] * 1000000;<br>          if (hor)<br>            qual += 100000;<br>          if (leftop)<br>            qual += 10000;<br>          qual -= c;<br>          if (qual &gt; bqual) {<br>            bqual = qual;<br>            res[mov - 1][mask] = rr;<br>            finmask[mov - 1][mask] = finmask[mov][nm];<br>          }<br>        }<br>      }<br>    }<br>    int mm = finmask[0][0];<br>    String[] ans = new String[hei];<br>    {<br>      for (int x = 0; x &lt; wid; x++) {<br>        dx[x] = mm % 3;<br>        mm /= 3;<br>      }<br>      for (int x = 0; x &lt; hei; x++) {<br>        dy[x] = mm % 3;<br>        mm /= 3;<br>      }<br>    }<br>    for (int i = 0; i &lt; hei; i++) {<br>      ans[i] = "";<br>      for (int j = 0; j &lt; wid; j++) {<br>        if (brd[i].charAt(j) == '.') {<br>          ans[i] += ".";<br>          continue;<br>        }<br>        int v = brd[i].charAt(j) - '0';<br>        v += dx[j] + dy[i] + 3333;<br>        v = (v + 2) % 3 + 1;<br>        ans[i] += (char) ('0' + v);<br>      }<br>    }<br>    return ans;<br>  }<br>}<br></td>