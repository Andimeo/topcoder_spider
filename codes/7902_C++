<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstring&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt;<br>using namespace std;<br><br>char g[55][110], a[55][110];<br>int n, ans, cnt;<br><br>void dfs(int i, int j) {<br>     if (i&lt;=0 || j&lt;=0 || i&gt;n || j&gt;(i &lt;&lt; 1)-1) return;<br>     if (g[i][j] == '@') return;<br>     char ch = g[i][j];<br>     if (g[i][j] != 'A' &amp;&amp; g[i][j] != 'R') cnt++;<br>     g[i][j] = '@';<br>     if (ch == 'A') {<br>     if (j&amp;1) {<br>        dfs(i, j-1);<br>        dfs(i, j+1);<br>        dfs(i+1, j+1);<br>     } else {<br>        dfs(i, j-1);<br>        dfs(i, j+1);<br>        dfs(i-1, j-1);        <br>     }<br>     return;<br>     }<br>     if (ch == 'R') {<br>        for (int k=1; k&lt;=(i &lt;&lt; 1)-1; k++)<br>            dfs(i, k);<br>        return;<br>     }<br>     if (j&amp;1) {<br>        if (g[i][j-1] == ch) dfs(i, j-1);<br>        if (g[i][j+1] == ch) dfs(i, j+1);<br>        if (g[i+1][j+1] == ch) dfs(i+1, j+1);<br>     } else {<br>        if (g[i][j-1] == ch) dfs(i, j-1);<br>        if (g[i][j+1] == ch) dfs(i, j+1);<br>        if (g[i-1][j-1] == ch) dfs(i-1, j-1);        <br>     }<br>}<br><br>class TrianglesBoard { <br>public:<br>     int maxScore(vector &lt;string&gt; board) {<br>         n = board.size(); ans = 0;<br>         int i, j;<br>         for (i=1; i&lt;=n; i++)<br>             for (j=1; j&lt;=(i &lt;&lt; 1)-1; j++)<br>                 a[i][j] = board[i-1][j-1];<br>         for (i=1; i&lt;=n; i++)<br>             for (j=1; j&lt;=(i &lt;&lt; 1)-1; j++) {<br>                 memmove(g, a, sizeof(g));<br>                 cnt = 0;<br>                 dfs(i, j);<br>//                 cout &lt;&lt; i &lt;&lt; ' ' &lt;&lt; j &lt;&lt; ' ' &lt;&lt; cnt &lt;&lt; endl;<br>                 ans = max(ans, cnt);<br>             }         <br>         return ans;<br>     } <br>     <br> <br>}; <br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>