<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.io.*;<br>import static java.lang.Math.*;<br><br>public class TrianglesBoard {<br> <br>    int m;<br>    char[][] temp;<br>    int[] remain;<br>    int cc;<br>    <br>    public int maxScore(String[] board) {<br>        int res = 0;<br>        m = board.length;<br>        remain = new int[m];<br>        for (int i = 0; i &lt; m; i++) {<br>            for (int j = 0; j &lt; 2*i+1; j++) <br>                if (ok(board, i, j)) {<br>                    temp = new char[m][2*m+2];<br>                    for (int k = 0; k &lt; m; k++) {<br>                        temp[k] = board[k].toCharArray();<br>                        remain[k] = 2*k+1;<br>                    }<br>                    int count = getScore(i, j);<br>                    res = max(res, count);<br>                }<br>        }<br>        return res;<br>    }<br>    <br>    int getScore(int x, int y) {<br>        cc = 0;<br>        tryP(x, y);<br>        return cc;<br>    }<br>    <br>    void tryP(int x, int y) {<br>        char c = temp[x][y];<br>        remain[x]--;<br>        temp[x][y] = 'x';<br>        if (c &gt;= '0' &amp;&amp; c &lt;='9') {<br>            cc ++;<br>            if (y &gt; 0 &amp;&amp; temp[x][y-1] == c)<br>                tryP(x, y-1);<br>            if (y &lt; 2*x &amp;&amp; temp[x][y+1] == c)<br>                tryP(x, y+1);<br>            if (x &gt; 0 &amp;&amp; (y % 2 == 1))<br>                if (temp[x-1][y-1] == c)<br>                    tryP(x-1, y-1);<br>            if (x &lt; m-1 &amp;&amp; (y % 2 == 0))<br>                if (temp[x+1][y+1]==c)<br>                    tryP(x+1, y+1);<br>        }<br>        if (c == 'A') {<br>            if (y &gt; 0 &amp;&amp; temp[x][y-1] != 'x')<br>                tryP(x, y-1);<br>            if (y &lt; 2*x &amp;&amp; temp[x][y+1] != 'x')<br>                tryP(x, y+1);<br>            if (x &gt; 0 &amp;&amp; (y % 2 == 1))<br>                if (temp[x-1][y-1] != 'x')<br>                    tryP(x-1, y-1);<br>            if (x &lt; m-1 &amp;&amp; (y % 2 == 0))<br>                if (temp[x+1][y+1] != 'x')<br>                    tryP(x+1, y+1);<br>        }<br>        if (c == 'R' &amp;&amp; remain[x] &gt; 0) {<br>            for (int i = 0; i &lt;= 2*x; i++)<br>                if (temp[x][i] != 'x' &amp;&amp; remain[x] &gt; 0)<br>                    tryP(x, i);<br>        }<br>        <br>    }<br>    <br>    boolean ok(String[] board, int x, int y) {<br>        if (x==0 &amp;&amp; y == 0)<br>            return true;<br>        char c = board[x].charAt(y);<br>        for (int i = 0; i &lt; y; i++)<br>            if (board[x].charAt(i) == 'R')<br>                return false;<br>        if (y &gt; 0 &amp;&amp; board[x].charAt(y-1) == 'A')<br>            return false;<br>        if (x &gt; 0 &amp;&amp; (y % 2 == 1) &amp;&amp; board[x-1].charAt(y-1) == 'A')<br>            return false;<br>        if (c &gt;='0' &amp;&amp; c&lt;='9') {<br>            if (x &gt; 0 &amp;&amp; (y % 2 == 1) &amp;&amp; board[x-1].charAt(y-1) == c)<br>                return false;<br>            if ((y &gt; 0) &amp;&amp; (board[x].charAt(y-1) == c))<br>                return false;<br>        }        <br>        return true;<br>    }<br>}<br></td>