<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;string&gt;<br>#include &lt;utility&gt;<br>#include &lt;vector&gt;<br> <br>using namespace std;<br> <br>typedef long long ll;<br>typedef pair &lt;int, int&gt; pii;<br>typedef vector &lt;int&gt; vi;<br> <br>#define fi first<br>#define mp make_pair<br>#define pb push_back<br>#define se second<br> <br>int dp[55];<br>vector &lt;string&gt; a;<br>int x[26] = {2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 9};<br> <br>vector &lt;string&gt; Get( vector &lt;int&gt; t )<br>{<br>  vector &lt;string&gt; res;<br>  for (int i = 0; i &lt; (int)a.size(); i++)<br>  {<br>    string s = "";<br>    for (int j = 0; j &lt; (int)t.size(); j++)<br>    {<br>      if (x[a[i][j] - 'a'] != t[j])<br>        break;<br>      s += a[i][j];<br>    }<br>    if (s.length() == t.size())<br>      res.pb(s);<br>  }<br>  return res;<br>}<br> <br>void Set( int i, int a )<br>{<br>  if (dp[i] == -1 || dp[i] &gt; a)<br>    dp[i] = a;<br>}<br> <br>class JohnnysPhone<br>{<br>  public:<br>    int minimizePushes( vector &lt;string&gt; dictionary, string message )<br>    {<br>      string d = "";<br>      for (int i = 0; i &lt; (int)dictionary.size(); i++)<br>        d += dictionary[i];<br>      d += ' ';<br>      string t = "";<br>      for (int i = 0; i &lt; (int)d.length(); i++)<br>        if (d[i] == ' ')<br>          a.pb(t), t = "";<br>        else<br>          t += d[i];<br>      memset(dp, -1, sizeof(dp));<br>      dp[0] = 0;<br>      for (int i = 0; i &lt; (int)message.length(); i++)<br>        if (dp[i] != -1)<br>        {<br>          if (message[i] == ' ')<br>          {<br>            Set(i + 1, dp[i] + 1);<br>            continue;<br>          }<br>          vector &lt;int&gt; t;<br>          string ss;<br>          for (int j = 0; i + j &lt; (int)message.length() &amp;&amp; message[i + j] != ' '; j++)<br>          {<br>            t.pb(x[message[i + j] - 'a']);<br>            ss += message[i + j];<br>            vector &lt;string&gt; res = Get(t);<br>            int k;<br>            for (k = 0; k &lt; (int)res.size(); k++)<br>              if (res[k] == ss)<br>                break;<br>            if (k == (int)res.size())<br>              break;<br>            if (i + j + 1 &lt; (int)message.length() &amp;&amp; message[i + j + 1] == ' ')<br>              Set(i + j + 2, dp[i] + j + k + 2);<br>            if (i + j + 1 == (int)message.length())<br>              Set(i + j + 1, dp[i] + j + k + 1);<br>            Set(i + j + 1, dp[i] + j + k + 2);<br>          }<br>        }<br>      return dp[message.length()];<br>    }<br>};<br> <br> <br>// Powered by PopsEdit<br></td>