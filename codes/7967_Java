<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br><br>public class JohnnysPhone {<br>    public int minimizePushes(String[] dictionary, String message) {<br>        String qqq = "";<br>        for (String s : dictionary) {<br>            qqq += s;<br>        }<br>        dictionary = qqq.split(" ");<br>        String s = message;<br>        String ss = norm(s);<br>        int n = s.length();<br>        int m = dictionary.length;<br>        String[] dd = new String[m];<br>        for (int i = 0; i &lt; dictionary.length; i++) {<br>            String s1 = dictionary[i];<br>            dd[i] = norm(s1);<br>        }<br>        int[] d = new int[n + 1];<br>        Arrays.fill(d, Integer.MAX_VALUE);<br>        d[0] = 0;<br>        for (int i = 0; i &lt; s.length(); i++)<br>            if (d[i] &lt; Integer.MAX_VALUE) {<br>                for (int j = i; j &lt; s.length(); j++) {<br>                    if (s.charAt(j) != ' ') {<br>                        String q = s.substring(i, j + 1);<br>                        String qq = ss.substring(i, j + 1);<br>                        int z = 0;<br>                        for (int k = 0; k &lt; dd.length; k++) {<br>                            if (dd[k].length() &gt;= qq.length() &amp;&amp; qq.equals(dd[k].substring(0, qq.length()))) {<br>                                if (q.equals(dictionary[k].substring(0, qq.length()))) {<br>                                    int ddd = d[i] + (j - i + 1) + z + ((j + 1 &lt; n) ? 1 : 0);<br>                                    d[j + 1] = Math.min(d[j + 1], ddd);<br>                                    if (j + 1 &lt; n &amp;&amp; s.charAt(j + 1) == ' ') {<br>                                        d[j + 2] = Math.min(d[j + 2], ddd);<br>                                    }<br>                                    z++;<br>                                    break;<br>                                } else {<br>                                    z++;<br>                                }<br>                            }<br>                        }<br>                        if (z == 0) break;<br>                    } else {<br>                        break;<br>                    }<br>                }<br>                if (s.charAt(i) == ' ') {<br>                    d[i + 1] = Math.min(d[i + 1], d[i] + 1);<br>                }<br>            }<br>        return d[n] == Integer.MAX_VALUE ? -1 : d[n];<br>    }<br><br>    private String norm(String s) {<br>        String ss = "";<br>        for (int i = 0; i &lt; s.length(); i++) {<br>            char c = s.charAt(i);<br>            if (c == ' ') ss += ' ';<br>            else if (c &lt;= 'c') ss += '2';<br>            else if (c &lt;= 'f') ss += '3';<br>            else if (c &lt;= 'i') ss += '4';<br>            else if (c &lt;= 'l') ss += '5';<br>            else if (c &lt;= 'o') ss += '6';<br>            else if (c &lt;= 's') ss += '7';<br>            else if (c &lt;= 'v') ss += '8';<br>            else ss += '9';<br>        }<br>        return ss;<br>    }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>