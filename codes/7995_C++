<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define SIZE(X) ((int)(X.size()))<br> <br>class GameOfEight<br>{<br>public:<br>  set&lt;string&gt; M;<br>  vector&lt;string&gt; Q;<br>  int fewestMoves(vector &lt;string&gt; board)<br>  {<br>    string s="";<br>    for (int i=0;i&lt;3;i++) s+=board[i];<br>    M.clear();<br>    M.insert(s);<br>    Q.clear();<br>    Q.push_back(s);<br>    for (int d=0,cl=0;cl&lt;SIZE(Q);d++)<br>    {<br>      printf("%d %d %d\n",d,cl,SIZE(Q));<br>      int size=SIZE(Q);<br>      for (;cl&lt;size;cl++)<br>      {<br>        s=Q[cl];<br>        if (s=="12345678.") return d;<br>        for (int i=0;i&lt;9;i++) if (s[i]=='.')<br>          for (int j=0;j&lt;9;j++) if (i!=j &amp;&amp; abs(i/3-j/3)+abs(i%3-j%3)==1)<br>          {<br>            swap(s[i],s[j]);<br>            if (M.find(s)==M.end())<br>            {<br>              M.insert(s);<br>              Q.push_back(s);<br>            }<br>            swap(s[i],s[j]);<br>          }<br>      }<br>    }<br>    return -1;<br>  }<br>};<br> <br> <br> <br>// Powered by PopsEdit<br></td>