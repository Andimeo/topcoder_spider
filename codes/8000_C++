<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;iostream&gt;<br>#include&lt;vector&gt;<br>#include&lt;string&gt;<br>#include&lt;sstream&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;set&gt;<br>#include&lt;map&gt;<br>using namespace std;<br><br>class GreedyGlob<br>{<br>public:<br>  vector&lt;string&gt; labs[2500];<br>  bool b[100][100];<br>  int n,m;<br>  int x[2500],y[2500],t[2500];<br>  int begin,end;<br>  int escapeTime(vector &lt;string&gt; lab)<br>  {<br>    n=lab.size();m=lab[0].size();<br>    labs[0]=lab;<br>    int ans1,ans2;<br>    for(int p=0;p+1&lt;2500;p++)<br>    {<br>      ans1=ans2=0;<br>      for(int i=0;i&lt;n;i++)<br>        for(int j=0;j&lt;m;j++)<br>        {<br>          if(labs[p][i][j]=='*'||labs[p][i][j]=='G')continue;<br>          if(i&gt;0&amp;&amp;labs[p][i-1][j]=='G'||i&lt;n-1&amp;&amp;labs[p][i+1][j]=='G')ans1++;<br>          if(j&gt;0&amp;&amp;labs[p][i][j-1]=='G'||j&lt;m-1&amp;&amp;labs[p][i][j+1]=='G')ans2++;<br>        }<br>      labs[p+1]=labs[p];<br>      if(ans1&gt;ans2)<br>      {<br>        for(int i=0;i&lt;n;i++)<br>          for(int j=0;j&lt;m;j++)<br>          {<br>          if(labs[p][i][j]=='*'||labs[p][i][j]=='G')continue;<br>            if(i&gt;0&amp;&amp;labs[p][i-1][j]=='G'||i&lt;n-1&amp;&amp;labs[p][i+1][j]=='G'||labs[p][i][j]=='G')labs[p+1][i][j]='G';<br>          }<br>      }<br>      else<br>      {<br>        for(int i=0;i&lt;n;i++)<br>          for(int j=0;j&lt;m;j++)<br>          {<br>          if(labs[p][i][j]=='*'||labs[p][i][j]=='G')continue;<br>            if(j&gt;0&amp;&amp;labs[p][i][j-1]=='G'||j&lt;m-1&amp;&amp;labs[p][i][j+1]=='G'||labs[p][i][j]=='G')labs[p+1][i][j]='G';<br>          }<br>      }<br>//      if(p&lt;5)<br>//      {<br>//        printf("%d %d\n",ans1,ans2);<br>//        for(int i=0;i&lt;n;i++)<br>//        {<br>//          for(int j=0;j&lt;m;j++)<br>//            cout&lt;&lt;labs[p][i][j];<br>//          cout&lt;&lt;endl;<br>//        }<br>//      }<br>    }<br>    memset(b,false,sizeof(b));<br>    begin=end=0;<br>    for(int i=0;i&lt;n;i++)<br>      for(int j=0;j&lt;m;j++)<br>        if(lab[i][j]=='S')<br>        {<br>          x[end]=i;y[end]=j;t[end]=0;<br>          b[i][j]=true;<br>          end++;<br>          break;<br>        }<br>    while(begin&lt;end)<br>    {<br>//      printf("%d %d\n",x[begin],y[begin]);<br>      int xx,yy;<br>      xx=x[begin]+1;yy=y[begin];<br>//      printf("%d %d %c %d\n",xx,yy,labs[t[begin]+1][xx][yy],b[xx][yy]);<br>      if(xx&lt;0||xx&gt;=n||yy&lt;0||yy&gt;=m)return t[begin]+1;<br>      if(!b[xx][yy]&amp;&amp;labs[t[begin]+1][xx][yy]!='*'&amp;&amp;labs[t[begin]+1][xx][yy]!='G')<br>      {<br>//        printf("ok\n");<br>        x[end]=xx;y[end]=yy;t[end]=t[begin]+1;<br>        b[xx][yy]=true;<br>        end++;<br>      }<br>      xx=x[begin]-1;yy=y[begin];<br>//      printf("%d %d %c %d\n",xx,yy,labs[t[begin]+1][xx][yy],b[xx][yy]);<br>      if(xx&lt;0||xx&gt;=n||yy&lt;0||yy&gt;=m)return t[begin]+1;<br>      if(!b[xx][yy]&amp;&amp;labs[t[begin]+1][xx][yy]!='*'&amp;&amp;labs[t[begin]+1][xx][yy]!='G')<br>      {<br>//        printf("ok\n");<br>        x[end]=xx;y[end]=yy;t[end]=t[begin]+1;<br>        b[xx][yy]=true;<br>        end++;<br>      }<br>      xx=x[begin];yy=y[begin]+1;<br>//      printf("%d %d %c %d\n",xx,yy,labs[t[begin]+1][xx][yy],b[xx][yy]);<br>      if(xx&lt;0||xx&gt;=n||yy&lt;0||yy&gt;=m)return t[begin]+1;<br>      if(!b[xx][yy]&amp;&amp;labs[t[begin]+1][xx][yy]!='*'&amp;&amp;labs[t[begin]+1][xx][yy]!='G')<br>      {<br>//        printf("ok\n");<br>        x[end]=xx;y[end]=yy;t[end]=t[begin]+1;<br>        b[xx][yy]=true;<br>        end++;<br>      }<br>      xx=x[begin];yy=y[begin]-1;<br>//      printf("%d %d %c %d\n",xx,yy,labs[t[begin]+1][xx][yy],b[xx][yy]);<br>      if(xx&lt;0||xx&gt;=n||yy&lt;0||yy&gt;=m)return t[begin]+1;<br>      if(!b[xx][yy]&amp;&amp;labs[t[begin]+1][xx][yy]!='*'&amp;&amp;labs[t[begin]+1][xx][yy]!='G')<br>      {<br>//        printf("ok\n");<br>        x[end]=xx;y[end]=yy;t[end]=t[begin]+1;<br>        b[xx][yy]=true;<br>        end++;<br>      }<br>      begin++;<br>    }<br>    return -1;<br>  }<br>  <br><br>}; <br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>