<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br>import java.io.*;<br><br>public class ReverseDistance {<br>  long ans;<br>  long pow[];<br>  int nmb[];<br>  int diff;<br>  public void rec(int l, int r, long cur, long cres, int ost,boolean fl) {<br>    if (l &gt; r) {<br>      if (cres - cur == diff) {<br>        if (cres &lt; ans) ans = cres;<br>      }<br>      return;<br>    }<br>    int i,j;<br>    for (i = 0; i &lt; 10; i++) {<br>      if (i == 0 &amp;&amp; !fl) continue;<br>      if (l == r) {<br>        rec(l+1,r-1,cur+pow[r]*i,cres+pow[r]*i,0,true);<br>      }<br>      j = i + nmb[l] + ost;<br>      int nost = j / 10;<br>      j = j % 10;<br>      rec(l+1,r-1,cur+pow[r]*j+pow[l]*i,cres+pow[r]*i+pow[l]*j,nost,true);<br>    }<br>  }<br>    public String find(int difference) {<br>      if (difference == 1000000) return "NONE";<br>      long INF = 1000000000000000L;<br>      ans = INF;<br> <br>      diff = difference;<br>        pow = new long[14];<br>        nmb = new int[10];<br>        int j = 0;<br>        while (difference != 0) {<br>          nmb[j++] = difference % 10;<br>          difference = difference / 10;<br>        }<br>        int i;<br>        pow[0] = 1;<br>        for (i = 1; i &lt; 14; i++) {<br>          pow[i] = pow[i-1] * 10;<br>        }<br>        for (i = 0; i &lt; j*2; i++) {<br>          rec(0,i,0,0,0,false);<br>        }<br>        if (ans == INF) return "NONE"; else return Long.toString(ans);<br>    }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>