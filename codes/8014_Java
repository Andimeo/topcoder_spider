<td class="problemText" colspan="8" valign="middle" align="left">
            public class Election {<br>  public int votesNeeded(int[] votes, int[] wishList) {<br>    C[] resulting = new C[wishList.length];<br>    for (int candidate = 0; candidate &lt; wishList.length; candidate++) {<br>      if (wishList[candidate] &gt;= 0) {<br>        C c = new C();<br>        resulting[wishList[candidate]] = c;<br>        c.candidate = candidate;<br>        c.startVotes = votes[candidate];<br>      }<br>    }<br>    <br>    for (int rank = 0; rank &lt; resulting.length; rank++) {<br>      if (resulting[rank] == null) {<br>        C c = new C();<br>        resulting[rank] = c;<br>        <br>        int max = -1;<br>        int maxC = -1;<br>        for (int candidate = 0; candidate &lt; wishList.length; candidate++) {<br>          if (wishList[candidate] == -1 &amp;&amp; (votes[candidate] &gt; max || (votes[candidate] == max &amp;&amp; candidate &lt; maxC))) {<br>            max = votes[candidate];<br>            maxC = candidate;<br>          }<br>        }<br>        wishList[maxC] = -2;<br>        c.candidate = maxC;<br>        c.startVotes = votes[maxC];<br>      }<br>    }<br>    <br>    int lastvotes = -1;<br>    int lastcandidate = -1;<br>    for (int rank = resulting.length - 1; rank &gt;= 0; rank--) {<br>      C c = resulting[rank];<br>      if (c.startVotes &gt; lastvotes || (c.startVotes == lastvotes &amp;&amp; c.candidate &lt; lastcandidate)) {<br>        c.endVotes = c.startVotes;<br>      }<br>      else if (c.candidate &lt; lastcandidate){<br>        c.endVotes = lastvotes;<br>      }<br>      else {<br>        c.endVotes = lastvotes + 1;<br>      }<br>      lastvotes = c.endVotes;<br>      lastcandidate = c.candidate;<br>    }<br>    <br>    int diff = 0;<br>    for (C c : resulting) {<br>      diff += (c.endVotes - c.startVotes);<br>    }<br>    <br>    return diff;<br>  }<br>  <br>  private class C {<br>    int candidate;<br>    int startVotes;<br>    int endVotes;<br>  }<br>}<br></td>