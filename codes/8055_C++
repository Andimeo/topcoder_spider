<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>using namespace std;<br><br>#define forn(i, n) for(int i = 0; i &lt; n; ++i)<br>#define forv(i, v) for(int i = 0; i &lt; (int)v.size(); ++i)<br>#define fors(i, s) for(int i = 0; i &lt; (int)s.length(); ++i)<br>#define sz(a) (int)a.size()<br>#define pb push_back<br>#define all(a) a.begin(), a.end()<br>typedef pair&lt;int, int&gt; ii;<br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;vi&gt; vii;<br>const int INF = 2000000000;<br><br>class Secretary {<br>public:<br>  string wrongOrdering(vector &lt;string&gt; files) {<br>    vector&lt;string&gt; v(sz(files));<br>    forv(i, files) {<br>      string s = files[i];<br>      reverse(all(s));<br>      v[i] = s;<br>    }<br>    sort(all(v));<br>    reverse(all(v[0]));<br>    return v[0];<br>  }<br><br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>