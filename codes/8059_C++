<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;climits&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;ctime&gt;<br>#include &lt;functional&gt;<br>#include &lt;queue&gt;<br><br>using namespace std;<br><br>int C[1000];<br> <br>class VegetableField<br>{<br>    public :<br>    int biggestPlot(vector &lt;string&gt; Map)<br>    {<br>        int N = Map.size(), M = Map[0].size(), Ans = 0;<br>        for (int I = 0; I &lt; N; I++)<br>            for (int J = 0; J &lt; M; J++)<br>                for (int K = I; K &lt; N; K++)<br>                    for (int L = J; L &lt; M; L++)<br>                    {<br>                        int Count = 0;<br>                        memset(C, 0, sizeof(C));<br>                        for (int A = I; A &lt;= K; A++)<br>                            for (int B = J; B &lt;= L; B++)<br>                                if (C[Map[A][B]] == 0)<br>                                {<br>                                    Count++;<br>                                    C[Map[A][B]] = 1; <br>                                }<br>                        if (Count &lt;= 2)<br>                            Ans &gt;?= (K - I + 1) * (L - J + 1);<br>                    }<br>        return Ans; <br>    }<br>    <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>