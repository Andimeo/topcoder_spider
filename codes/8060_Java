<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class Paintball {<br>    class Team implements Comparable&lt;Team&gt; {<br>        String name;<br>        int score;<br> <br>        ArrayList&lt;Player&gt; players;<br> <br>        public Team(String name) {<br>            this.name = name;<br>            players = new ArrayList&lt;Player&gt;();<br>        }<br> <br>        public int compareTo(Team o) {<br>            if (score != o.score) {<br>                return o.score - score;<br>            } else {<br>                return name.compareTo(o.name);<br>            }<br>        }<br> <br>        void addScore(String name, int d) {<br>            score += d;<br>            for (Player p : players) {<br>                if (p.name.equals(name)) {<br>                    p.score += d;<br>                }<br>            }<br>        }<br>    }<br> <br>    class Player implements Comparable&lt;Player&gt; {<br>        String name;<br>        int score;<br> <br> <br>        public Player(String name) {<br>            this.name = name;<br>        }<br> <br>        public int compareTo(Player o) {<br>            if (score != o.score) {<br>                return o.score - score;<br>            } else {<br>                return name.compareTo(o.name);<br>            }<br>        }<br>    }<br> <br>    public String[] getLeaderboard(String[] players, String[] messages) {<br>        Map&lt;String, Team&gt; pt = new HashMap&lt;String, Team&gt;();<br>        Map&lt;String, String&gt; team = new HashMap&lt;String, String&gt;();<br>        ArrayList&lt;Team&gt; teams = new ArrayList&lt;Team&gt;();<br>        for (String s : players) {<br>            StringTokenizer st = new StringTokenizer(s);<br>            String nm = st.nextToken();<br>            String tm = st.nextToken();<br>            team.put(nm, tm);<br>            if (!pt.containsKey(tm)) {<br>                pt.put(tm, new Team(tm));<br>                teams.add(pt.get(tm));<br>            }<br>            pt.get(tm).players.add(new Player(nm));<br>        }<br> <br>        for (String s : messages) {<br>            StringTokenizer st = new StringTokenizer(s);<br>            String n1 = st.nextToken();<br>            st.nextToken();<br>            String n2 = st.nextToken();<br> <br>            String t1 = team.get(n1);<br>            String t2 = team.get(n2);<br> <br>            if (t1.equals(t2)) {<br>                pt.get(t1).addScore(n1, -1);<br>            } else {<br>                pt.get(t1).addScore(n1, 1);<br>                pt.get(t2).addScore(n2, -1);<br>            }<br>        }<br> <br>        Collections.sort(teams);<br>        ArrayList&lt;String&gt; res = new ArrayList&lt;String&gt;();<br>        for (Team t : teams) {<br>            res.add(t.name + " " + t.score);<br>            Collections.sort(t.players);<br>            for (Player p : t.players) {<br>                res.add("  " + p.name + " " + p.score);<br>            }<br>        }<br>        return res.toArray(new String[res.size()]);<br>    }<br> <br> <br>}<br> <br> <br>// Powered by PopsEdit<br> <br>// Powered by CodeProcessor<br></td>