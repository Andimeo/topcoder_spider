<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br><br>public class PowerPlants {<br>    string[] conCost;<br>    public int minCost(string[] connectionCost, string plantList, int numPlants) {<br>        conCost = connectionCost;<br>        int N = plantList.Length;<br>        int NN = 1 &lt;&lt; N;<br>        int INF = 999999;<br>        int iStart = 0;<br>        for (int i = 0; i &lt; plantList.Length; i++) {<br>            if (plantList[i] == 'Y') iStart |= (1 &lt;&lt; i);<br>        }<br>        int[] aCost = new int[NN];<br>        for (int iState = 0; iState &lt; NN; iState++) {<br>            aCost[iState] = INF;<br>        }<br>        aCost[iStart] = 0;<br>        int iBest = INF;<br>        for (int iState = iStart; iState &lt; NN; iState++) {<br>            int iCount = 0;<br>            for (int j = 0; j &lt; N; j++) if ((iState &amp; 1&lt;&lt;j)&gt;0) {<br>                    iCount++;<br>                    int min = INF;<br>                    for (int k = 0; k &lt; N; k++) if (k!=j) if ((iState &amp; 1&lt;&lt;k)&gt;0) {<br>                                min = Math.Min(min, cost(connectionCost[k][j]));<br>                    }<br>            aCost[iState] = Math.Min(aCost[iState], aCost[iState - (1 &lt;&lt; j)] + min);<br>            }<br>        if (iCount &gt;= numPlants) iBest = Math.Min(iBest, aCost[iState]);<br>        }<br>        return iBest;<br>    }<br><br>    private int cost(char cCost) {<br>        if (cCost &gt;= '0' &amp;&amp; cCost &lt;= '9') return cCost - '0';<br>        return cCost - 'A' + 10;<br>    }<br>}<br></td>