<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define two(X) (1&lt;&lt;(X))<br>#define contain(S,X) (((S)&amp;two(X))!=0)<br>template&lt;class T&gt; inline void checkmin(T &amp;a,T b){if(b&lt;a) a=b;}<br>template&lt;class T&gt; inline int countbit(T n){return (n==0)?0:(1+countbit(n&amp;(n-1)));}<br> <br>class PowerPlants<br>{<br>public:<br>  int n;<br>  int G[16][16];<br>  int f[two(16)];<br>  int m;<br>  int solve(int set)<br>  {<br>    if (countbit(set)&gt;=m) return 0;<br>    int &amp;ret=f[set];<br>    if (ret!=-1) return ret;<br>    ret=100000000;<br>    for (int i=0;i&lt;n;i++) if (!contain(set,i))<br>      for (int k=0;k&lt;n;k++) if (contain(set,k))<br>        checkmin(ret,solve(set+two(i))+G[k][i]);<br>    return ret;<br>  }<br>  int minCost(vector &lt;string&gt; vs, string plantList, int numPlants)<br>  {<br>    m=numPlants;<br>    memset(f,255,sizeof(f));<br>    n=vs.size();<br>    for (int i=0;i&lt;n;i++)<br>      for (int j=0;j&lt;n;j++)<br>        G[i][j]=(vs[i][j]&gt;='0' &amp;&amp; vs[i][j]&lt;='9')?(vs[i][j]-'0'):(vs[i][j]-'A'+10);<br>    int set=0;<br>    for (int i=0;i&lt;n;i++) if (plantList[i]=='Y') set|=two(i);<br>    int ret=solve(set);<br>    return ret;<br>  }<br>};<br> <br> <br> <br>// Powered by PopsEdit<br></td>