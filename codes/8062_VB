<td class="problemText" colspan="8" valign="middle" align="left">
            imports System<br>imports Microsoft.VisualBasic<br>imports System.Collections<br>imports System.Text<br>imports System.Collections.Generic<br> <br>Public Class PowerPlants<br> <br>    Dim n As Integer<br>    Dim cc(,) As Integer<br>    Dim memo(,) As Integer<br> <br>    Public Function minCost(ByVal connectionCost() As String, ByVal plantList As String, ByVal numPlants As Integer) As Integer<br>        If numPlants = 0 Then Return 0<br> <br>        n = connectionCost.Length<br>        ReDim cc(n - 1, n - 1)<br> <br>        Dim x, y As Integer<br>        Dim c As String<br>        For y = 0 To n - 1<br>            For x = 0 To n - 1<br>                c = connectionCost(x).Chars(y)<br>                If c &gt;= "0" And c &lt;= "9" Then<br>                    cc(x, y) = Val(c)<br>                Else<br>                    cc(x, y) = Asc(c) - Asc("A") + 10<br>                End If<br>            Next<br>        Next<br> <br> <br>        Dim all, w As Integer<br>        all = (1 &lt;&lt; n)<br>        ReDim memo(n, all)<br>        For x = 0 To n<br>            For y = 0 To all<br>                memo(x, y) = -1<br>            Next<br>        Next<br> <br>        For x = 0 To n - 1<br>            If plantList.Chars(x) = "Y" Then<br>                w += (1 &lt;&lt; x)<br>                numPlants -= 1<br>            End If<br>        Next<br> <br>        Return mc(numPlants, w)<br> <br>    End Function<br> <br>    Private Function mc(ByVal np As Integer, ByVal w As Integer) As Integer<br>        Dim nx As Integer<br>        Dim use As Integer<br>        Dim bu As Integer<br>        Dim vc, bc As Integer<br> <br>        If np &lt; 1 Then Return 0<br>        If memo(np, w) &lt;&gt; -1 Then Return memo(np, w)<br> <br>        bc = 1000000<br>        For nx = 0 To n - 1<br>            If ((1 &lt;&lt; nx) And w) = 0 Then<br>                bu = -1<br>                For use = 0 To n - 1<br>                    If ((1 &lt;&lt; use) And w) &gt; 0 Then<br>                        If bu = -1 OrElse (cc(use, nx) &lt; cc(bu, nx)) Then<br>                            bu = use<br>                        End If<br>                    End If<br>                Next<br>                If bu &lt;&gt; -1 Then<br>                    vc = cc(bu, nx) + mc(np - 1, w + (1 &lt;&lt; nx))<br>                    If vc &lt; bc Then bc = vc<br>                End If<br>            End If<br>        Next<br> <br>        memo(np, w) = bc<br>        Return bc<br>    End Function<br> <br>End Class<br></td>