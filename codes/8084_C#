<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br><br>public class IntervalSubsets {<br><br>  public int numberOfSubsets(int[] start, int[] finish) {<br>        List&lt;int&gt; myStart = new List&lt;int&gt;();<br>        foreach (int x in start)<br>            myStart.Add(x);<br>        myStart.Add(0);<br>        myStart.Add(101);<br>        start = myStart.ToArray();<br>        List&lt;int&gt; myFinish = new List&lt;int&gt;();<br>        foreach (int x in finish)<br>            myFinish.Add(x);<br>        myFinish.Add(0);<br>        myFinish.Add(101);<br>        finish = myFinish.ToArray();<br>        Array.Sort(start, finish);<br>        int n = start.Length;<br>        long[] best = new long[n];<br>        best[0] = 1;<br>        for (int i = 1; i &lt; n; ++i)<br>        {<br>            for (int j = 0; j &lt; i; ++j)<br>                if (!inter(start, finish, i, j))<br>                {<br>                    bool ok = true;<br>                    for (int k = j + 1; k &lt; i; ++k)<br>                        if (!inter(start, finish, i, k) &amp;&amp; !inter(start, finish, k, j))<br>                            ok = false;<br>                    if (ok)<br>                        best[i] += best[j];<br>                }<br>        }<br>        return (int) best[n - 1];<br>  }<br><br>    bool inter(int[] start, int[] finish, int a, int b)<br>    {<br>        int sa = start[a];<br>        int fa = finish[a];<br>        int sb = start[b];<br>        int fb = finish[b];<br>        return fa &gt;= sb &amp;&amp; fb &gt;= sa;<br>    }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>