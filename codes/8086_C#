<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br><br>public class StrangeArray {<br>    public int calculateSum(int[] A, int[] B, string N) {<br>        long R = 1000000007;<br>        long NN = long.Parse(N);<br>        long ret = 0;<br>        long[] realA = new long[A.Length * B.Length];<br>        long[] realB = new long[A.Length * B.Length];<br>        for (int i = 0; i &lt; A.Length*B.Length; i++) {<br>            realA[i] = A[i % A.Length];<br>            realB[i] = B[i % B.Length] + i / B.Length;<br>            long r = realA[i];<br>            for (int j = 0; j &lt; A.Length-1; j++) {<br>                r *= realA[i];<br>                r %= R;<br>            }<br>            if (NN&gt;i) {<br>            long n = (NN-i-1) / (A.Length * B.Length)+1;<br>                long tot = powrem(realA[i], realB[i], R);<br>                if (r != 1) {<br>                    tot *= powrem(r, n, R) + R - 1;<br>                    tot %= R;<br>                    tot *= powrem(r-1, R - 2, R);<br>                    tot %= R;<br>                } else {<br>                    tot *= n;<br>                    tot %= R;<br>                }<br>                ret += tot;<br>                ret %= R;<br>            }<br>        }<br>        return (int)ret;<br><br>    }<br><br>    private long powrem(long A, long B, long R) {<br>        A %= R;<br>        long[] mult = new long[64];<br>        mult[0] = A;<br>        for (int i = 1; i &lt; 64; i++) {<br>            mult[i] = mult[i - 1] * mult[i - 1];<br>            mult[i] %= R;<br>        }<br>        long ret = 1;<br>        long l1 = 1;<br>        for (int i = 0; i &lt; 64; i++) if ((l1 &lt;&lt; i &amp; B) &gt; 0) {<br>                ret *= mult[i];<br>                ret %= R;<br>            }<br>        return ret;<br>    }<br>}<br></td>