<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cassert&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;complex&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;ctime&gt;<br>#include &lt;deque&gt;<br>#include &lt;functional&gt;<br>#include &lt;iterator&gt;<br>#include &lt;iostream&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;string&gt;<br>#include &lt;valarray&gt;<br>#include &lt;vector&gt;<br><br>using namespace std;<br><br>const int MAXN = 100;<br>const int inf = 1000000000;<br>const double eps = 1e-8;<br>const double PI = 3.1415926535897932384626433832795;<br><br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;vi&gt; vvi;<br>typedef long double ld;<br>typedef vector&lt;ld&gt; vd;<br>typedef pair&lt;int,int&gt; pii;<br>typedef vector&lt;pii&gt; vp;<br>typedef queue&lt;int&gt; qi;<br>typedef queue&lt;pii&gt; qp;<br>typedef map&lt;string,int&gt; msi;<br>typedef map&lt;string,string&gt; mss;<br>typedef long long ll;<br><br>#define MP make_pair<br>#define all(v) (v).begin(), (v).end()<br><br>int gcd(int a, int b)<br>{<br>  if(!b)<br>    return a;<br>  return gcd(b, a % b);<br>}<br><br>const ll MOD = 1000000007;<br><br>class StrangeArray<br> {<br>   ll pow(ll a, ll n)<br>   {<br>     if(n == 0)<br>       return 1;<br>     if(n == 1)<br>       return a % MOD;<br>     ll res = pow(a, n / 2);<br>     res = (res * res) % MOD;<br>     if(n % 2)<br>       res = (res * a) % MOD;<br>     return res;<br>   }<br>   ll geom(ll a, ll n)<br>   {<br>     if(n == 0)<br>       return 0;<br>     if(n == 1)<br>       return 1 % MOD;<br>     ll result = geom(a, n / 2);<br>     ll t = pow(a, n / 2);<br>     result = (result * (1 + t)) % MOD;<br>     if(n % 2)<br>       result = (result + pow(a, n - 1)) % MOD;<br>     return result;<br>   }<br>  public:<br>  int calculateSum(vector &lt;int&gt; A, vector &lt;int&gt; B, string N) <br>  {<br>    int result;<br>    int lcm = A.size() * B.size() / gcd(A.size(), B.size());<br>    istringstream in(N);<br>    ll n;<br>    in &gt;&gt; n;<br>    result = 0;<br>    ll t = lcm / B.size();<br>    for(int i = 0; i &lt; lcm; i++)<br>    {<br>      int a_index = i % A.size();<br>      int b_index = i % B.size();<br>      int b_add = i / B.size();<br>      ll initial = pow(A[a_index], B[b_index] + b_add);<br>      if(n &lt;= i)<br>        break;<br>      ll maxk = (n - i - 1) / lcm;<br>      ll geom_osn = pow(A[a_index], t);<br>      ll sum = geom(geom_osn, maxk + 1);<br>      result = (result + (initial * sum) % MOD) % MOD;<br>    }<br>    return result;<br>  }<br>  <br><br>};<br><br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>