<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class StringFragmentation<br>{<br>  public int largestFontSize(string text, int width, int height)<br>  {<br>        string[] a = text.Split(' ');<br>        int n = a.Length;<br>        int[] len = new int[n];<br>        for (int i = 0;i&lt;n;i++) len[i] = a[i].Length;<br> <br>        int low = 8; int high = 10000; int l;<br> <br>        int max = -1;<br>        while (low &lt;= high)<br>        {<br>            l = (low + high) / 2;<br>            int i = 0;<br>            bool flag = true;<br> <br>            int hh = 0;<br>            while (i &lt; n)<br>            {<br>                hh+= l*2;<br>                if (hh &gt; height) { flag = false; break; }<br>                int ww = len[i] * (l+2);<br>                if (ww &gt; width) { flag = false; break; }<br>                i++;<br>                {<br>                    while (i&lt;n &amp;&amp; ww + (l+2)*(1 + len[i]) &lt;= width)<br>                    {<br>                        ww += (l+2)*(1 + len[i]);<br>                        i++;<br>                    }<br>                }<br>            }<br>            if (flag) { low = l+1; max = Math.Max(max, l); }<br>            else high = l - 1;<br>        }<br>        return max;<br>  }<br>}<br></td>