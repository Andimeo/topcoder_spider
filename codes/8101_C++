<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>using namespace std;<br><br>class OptimalGroupMovement{<br>  int solve( string S, int p ){<br>    int ret = 0, i, j, sp;<br>    <br>    for ( sp = 0, i = p; i&gt;=0; ){<br>      if (S[i]=='.') ++sp, --i; else<br>      {<br>        for (j = i; j&gt;=0 &amp;&amp; S[j]=='X'; j--);<br>        ret += (i-j) * (i-j) * sp;<br>        i = j;<br>      }<br>    }<br>    <br>    for ( sp = 0, i = p+1; i &lt; S.size(); ){<br>      if (S[i]=='.') ++sp, ++i; else<br>      {<br>        for (j = i; j &lt; S.size() &amp;&amp; S[j]=='X'; j++);<br>        ret += (i-j) * (i-j) * sp;<br>        i = j;<br>      }<br>    }<br>    <br>    return ret;<br>  }<br>  public:<br>  int minimumCost(string board){<br>    if (board.size() &lt;= 2) return 0;<br>    int ret = solve( board, 0 );<br>    for ( int i = 1; i+1 &lt; board.size(); i++)<br>      ret &lt;?= solve( board, i );<br>    return ret;<br>  }<br>};<br></td>