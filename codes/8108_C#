<td class="problemText" colspan="8" valign="middle" align="left">
            public class Pawns<br>{<br>  public int getCol(string pawnPlace)<br>  {<br>    return ((int)pawnPlace[0] - 'a' + 1);<br>  }<br>  public int getRow(string pawnPlace)<br>  {<br>    return ((int)pawnPlace[1] - '0');<br>  }<br>  public int pawnsAttack(string[] pawns)<br>  {<br>    bool[,] board = new bool[9,9];<br>    <br>    for(int i=0;i&lt;9;i++)<br>    {<br>      for(int j=0;j&lt;9;j++)<br>      {<br>        board[i,j] = false;<br>      }<br>    }<br>    <br>    int row = 0;<br>    int col = 0;<br>    for(int i=0;i&lt;pawns.Length;i++)<br>    {<br>      row = getRow(pawns[i]);<br>      col = getCol(pawns[i]);<br>      <br>      //System.Console.WriteLine(col);<br>      <br>      if(row==8) { continue; }<br>      else if(col==1) { board[row+1,col+1] = true; }<br>      else if(col==8) { board[row+1,col-1] = true; }<br>      else { board[row+1,col+1] = true; board[row+1,col-1] = true; }<br>    }<br>    <br>    for(int i=0;i&lt;pawns.Length;i++)<br>    {<br>      row = getRow(pawns[i]);<br>      col = getCol(pawns[i]);<br>      <br>      board[row,col] = false;<br>    }<br>    <br>    int ret = 0;<br>    for(int i=1;i&lt;9;i++)<br>    {<br>      for(int j=1;j&lt;9;j++)<br>      {<br>        if(board[i,j] == true)<br>        {<br>          ret++;<br>        }<br>      }<br>    }<br>    <br>    return ret;<br>  }<br>}<br></td>