<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt; <br>#include &lt;list&gt; <br>#include &lt;map&gt; <br>#include &lt;set&gt; <br>#include &lt;deque&gt; <br>#include &lt;queue&gt; <br>#include &lt;stack&gt; <br>#include &lt;bitset&gt; <br>#include &lt;algorithm&gt; <br>#include &lt;functional&gt; <br>#include &lt;numeric&gt; <br>#include &lt;utility&gt; <br>#include &lt;sstream&gt; <br>#include &lt;iostream&gt; <br>#include &lt;iomanip&gt; <br>#include &lt;cstdio&gt; <br>#include &lt;cmath&gt; <br>#include &lt;cstdlib&gt; <br>#include &lt;cctype&gt; <br>#include &lt;string&gt; <br>#include &lt;vector&gt; <br>#include &lt;list&gt; <br>#include &lt;map&gt; <br>#include &lt;set&gt; <br>#include &lt;deque&gt; <br>#include &lt;queue&gt; <br>#include &lt;stack&gt; <br>#include &lt;cstring&gt; <br>#include &lt;cstdio&gt; <br>#include &lt;cmath&gt; <br>#include &lt;cstdlib&gt; <br>#include &lt;ctime&gt;<br><br>#include &lt;vector&gt; <br>#include &lt;list&gt; <br>#include &lt;map&gt; <br>#include &lt;set&gt; <br>#include &lt;deque&gt; <br>#include &lt;queue&gt; <br>#include &lt;stack&gt; <br>#include &lt;bitset&gt; <br>#include &lt;algorithm&gt; <br>#include &lt;functional&gt; <br>#include &lt;numeric&gt; <br>#include &lt;utility&gt; <br>#include &lt;sstream&gt; <br>#include &lt;iostream&gt; <br>#include &lt;iomanip&gt; <br>#include &lt;cstdio&gt; <br>#include &lt;cmath&gt; <br>#include &lt;cstdlib&gt; <br>#include &lt;cctype&gt; <br>#include &lt;string&gt; <br>#include &lt;vector&gt; <br>#include &lt;list&gt; <br>#include &lt;map&gt; <br>#include &lt;set&gt; <br>#include &lt;deque&gt; <br>#include &lt;queue&gt; <br>#include &lt;stack&gt; <br>#include &lt;cstring&gt; <br>#include &lt;cstdio&gt; <br>#include &lt;cmath&gt; <br>#include &lt;cstdlib&gt; <br>#include &lt;ctime&gt;<br><br>#include &lt;vector&gt; <br>#include &lt;list&gt; <br>#include &lt;map&gt; <br>#include &lt;set&gt; <br>#include &lt;deque&gt; <br>#include &lt;queue&gt; <br>#include &lt;stack&gt; <br>#include &lt;bitset&gt; <br>#include &lt;algorithm&gt; <br>#include &lt;functional&gt; <br>#include &lt;numeric&gt; <br>#include &lt;utility&gt; <br>#include &lt;sstream&gt; <br>#include &lt;iostream&gt; <br>#include &lt;iomanip&gt; <br>#include &lt;cstdio&gt; <br>#include &lt;cmath&gt; <br>#include &lt;cstdlib&gt; <br>#include &lt;cctype&gt; <br>#include &lt;string&gt; <br>#include &lt;vector&gt; <br>#include &lt;list&gt; <br>#include &lt;map&gt; <br>#include &lt;set&gt; <br>#include &lt;deque&gt; <br>#include &lt;queue&gt; <br>#include &lt;stack&gt; <br>#include &lt;cstring&gt; <br>#include &lt;cstdio&gt; <br>#include &lt;cmath&gt; <br>#include &lt;cstdlib&gt; <br>#include &lt;ctime&gt;<br><br>using namespace std;<br><br>#define SZ size()<br>#define PB push_back<br>#define ALL(v) v.begin(),v.end()<br>#define MP make_pair<br>#define x first<br>#define y second<br><br>#define LL long long<br>#define UI unsigned int<br>#define ULL unsigned long long<br>#define PI pair&lt;int,int&gt;<br>#define PD pair&lt;double,double&gt;<br>#define PLL pair&lt;LL,LL&gt;<br>#define PULL pair&lt;ULL,ULL&gt;<br>#define VI vector&lt;int&gt;<br>#define VD vector&lt;double&gt;<br>#define VS vector&lt;string&gt;<br>#define SI set&lt;int&gt;<br>#define PQ priority_queue<br>#define VVI vector&lt;vector&lt;int&gt; &gt;<br>#define IT iterator<br><br>inline int strtoint(const string &amp;s) {istringstream ss; ss.str(s);int ret;ss&gt;&gt;ret;return ret;}<br>inline string inttostr(const int &amp;a) {ostringstream ss; ss&lt;&lt;a; return ss.str();}<br>#define sqr(a) ((a)*(a))<br>#define ABS(a) ( ( (a)&lt;0 )?( -(a) ):( a ) )<br>#define Repi(n) for (int i=0; i&lt;n; i++)<br>#define Repj(n) for (int j=0; j&lt;n; j++)<br>#define Repk(n) for (int k=0; k&lt;n; k++)<br>#define pause system("pause")<br><br>#define Pi 3.1415926535897932384626433832795028841971693993751<br>#define INF 2000000000<br>#define EPS 1e-6<br><br>int th[12][12];<br><br>int go[8][2]={<br>    {0,1},<br>    {0,-1},<br>    {1,0},<br>    {-1,0},<br>    {1,1},<br>    {1,-1},<br>    {-1,-1},<br>    {-1,1},<br>    };<br><br>class KingsTour {<br>  public:<br>  int attackPawns(string king, string pawnA, string pawnB) {<br>        int x,y,i,j,k,l,x1,y1;<br>    int u[12][12];<br>    memset(u,0,sizeof(u));<br>    memset(th,0,sizeof(th));<br>        x=pawnB[0]-'a'+1; y=pawnB[1]-'1'+1;<br>    th[x+1][y+1]=2; th[x-1][y+1]=2;<br>        x=pawnA[0]-'a'+1; y=pawnA[1]-'1'+1;<br>    th[x+1][y+1]=1; th[x-1][y+1]=1;<br>        x1=pawnB[0]-'a'+1; y1=pawnB[1]-'1'+1;<br>    <br>    PI q[1000];<br>    int lev[1000];<br>    int b[1000];<br>    q[0].x=king[0]-'a'+1; q[0].y=king[1]-'1'+1;<br>    b[0]=0;<br>    lev[0]=0;<br>    PI t,v;<br>    for (int s=0,e=1; s&lt;e; s++)<br>    {<br>            v=q[s];<br>            Repi(8)<br>            {<br>                   t.x=v.x+go[i][0]; t.y=v.y+go[i][1];<br>                   if (t.x&gt;0 &amp;&amp; t.x&lt;9 &amp;&amp; t.y&gt;0 &amp;&amp; t.y&lt;9 &amp;&amp; !u[t.x][t.y] &amp;&amp; (!th[t.x][t.y] || (b[s] &amp;&amp; th[t.x][t.y]==2)))<br>                   {<br>                                    lev[e]=lev[s]+1;<br>                                    q[e]=t;<br>                                    u[t.x][t.y]=1;<br>                                    b[e]=b[s];<br>                                    if (t.x==x1 &amp;&amp; t.y==y1) b[e]=1;<br>                                    if (t.x==x &amp;&amp; t.y==y) return lev[e];<br>                                    e++;<br>                   }<br>            }<br>        }<br>  }<br>                             <br> <br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>