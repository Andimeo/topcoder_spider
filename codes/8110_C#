<td class="problemText" colspan="8" valign="middle" align="left">
            class LetterInterchange<br>    {<br>        public int[] interchangeWhich(string[] s1, string[] s2)<br>        {<br>            int[] position = new int[2];<br>            string s = "";<br>            int len = s1.Length;<br>            for (int i = 0; i &lt; len; i++)<br>            {<br>                s += s1[i];<br>            }<br>            len = s2.Length;<br>            for (int i = 0; i &lt; len; i++)<br>            {<br>                s += s2[i];<br>            }<br>            len = s.Length;<br>            int[] abc = new int[26];<br>            for (int i = 0; i &lt; 26; i++)<br>            {<br>                abc[i] = 0;<br>            }<br>            for (int i = 0; i &lt; len; i++)<br>            {<br>                abc[s[i] - 'a']++;<br>            }<br>            int p = 0;<br>            int j = 0;<br>            for (j = 0; j &lt; 26; j++)<br>            {<br>                while(abc[j] &gt; 0 &amp;&amp; s[p] - 'a' == j)<br>                {<br>                    abc[j]--;<br>                    p++;<br>                }<br>                if (abc[j] &gt; 0)<br>                {<br>                    break;<br>                }<br>            }<br>            if (j &gt;= 26)<br>            {<br>                for (int k = 0; k &lt; len-1; k++)<br>                {<br>                    if (s[k] == s[k + 1])<br>                    {<br>                        position[0] = k;<br>                        position[1] = k+1;<br>                        return position;<br>                    }<br>                }<br>                position[0] = len-2;<br>                position[1] = len-1;<br>                return position;<br>            }<br>            else<br>            {<br>                position[0] = p;<br>                for (int k = len-1; k &gt;= p; k--)<br>                {<br>                    if (s[k] == 'a' + j)<br>                    {<br>                        position[1] = k;<br>                        break;<br>                    }<br>                }<br>            }<br>            return position;<br>        }<br>    }<br></td>