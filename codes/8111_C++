<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>typedef long long int64;<br>int64 toInt64(string s){int64 r=0;istringstream sin(s);sin&gt;&gt;r;return r;}<br> <br>class RLESum<br>{<br>public:<br>  void listAll(string s,int &amp;n,int64 C[],int A[])<br>  {<br>    int L=s.length();<br>    n=0;<br>    for (int i=0;i&lt;L;i++)<br>      if (s[i]=='[')<br>      {<br>        int k;<br>        for (k=i;s[k]!=']';k++);<br>        C[++n]=toInt64(s.substr(i+1,k-i-1));<br>        i=k+1;<br>        A[n]=s[i]-'0';<br>      }<br>      else<br>      {<br>        C[++n]=1;<br>        A[n]=s[i]-'0';<br>      }<br>  }<br>  int getvalue(string s,int64 pos)<br>  {<br>    int64 C[100];<br>    int n,A[100];<br>    listAll(s,n,C,A);<br>    for (int i=n;i&gt;0;i--)<br>      if (C[i]&gt;pos)<br>        return A[i];<br>      else<br>        pos-=C[i];<br>    return 0;<br>  }<br>  bool all9(string a,string b,int64 H,int64 T)<br>  {<br>    if (H&gt;T) return true;<br>    int n1,n2,A1[100],A2[100];<br>    int64 C1[100],C2[100];<br>    listAll(a,n1,C1,A1);<br>    listAll(b,n2,C2,A2);<br>    set&lt;int64&gt; M;<br>    M.insert(H);<br>    M.insert(T);<br>    int64 total=0;<br>    for (int i=n1;i&gt;0;i--)<br>    {<br>      M.insert(total);<br>      M.insert(total+C1[i]-1);<br>      total+=C1[i];<br>    }<br>    total=0;<br>    for (int i=n2;i&gt;0;i--)<br>    {<br>      M.insert(total);<br>      M.insert(total+C2[i]-1);<br>      total+=C2[i];<br>    }<br>    for (set&lt;int64&gt;::iterator it=M.begin();it!=M.end();++it)<br>    {<br>      int64 pos=*it;<br>      if (pos&lt;H || pos&gt;T) continue;<br>      if (getvalue(a,pos)+getvalue(b,pos)!=9) return false;<br>    }<br>    return true;<br>  }<br>  vector &lt;int&gt; getDigits(string a, string b, vector &lt;string&gt; key)<br>  {<br>    vector&lt;int&gt; R;<br>    for (int i=0;i&lt;key.size();i++)<br>    {<br>      int64 pos=toInt64(key[i]);<br>      int v1=getvalue(a,pos);<br>      int v2=getvalue(b,pos);<br>      int64 H=-1,T=pos;<br>      for (;H+1&lt;T;)<br>      {<br>        int64 M=H+(T-H)/2;<br>        if (all9(a,b,M,pos-1))<br>          T=M;<br>        else<br>          H=M;<br>      }<br>      if (H&gt;=0 &amp;&amp; getvalue(a,H)+getvalue(b,H)&gt;=10)<br>        R.push_back((v1+v2+1)%10);<br>      else<br>        R.push_back((v1+v2)%10);<br>    }<br>    return R;<br>  }<br>};<br> <br> <br> <br>// Powered by PopsEdit<br></td>