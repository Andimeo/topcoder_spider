<td class="problemText" colspan="8" valign="middle" align="left">
            import java.math.BigInteger;<br>import java.util.*;<br><br>public class RLESum {<br>  private class Number {<br>    public BigInteger[] from, to;<br>    public int[] d;<br>    <br>    public Number(String str) {<br>      ArrayList&lt;BigInteger&gt; f = new ArrayList&lt;BigInteger&gt;();<br>      ArrayList&lt;BigInteger&gt; t = new ArrayList&lt;BigInteger&gt;();<br>      ArrayList&lt;Integer&gt; dd = new ArrayList&lt;Integer&gt;();<br>      BigInteger current = BigInteger.ZERO;<br>      for (int i = 0; i &lt; str.length(); ) {<br>        if (str.charAt(i) == '[') {<br>          int j = i + 1;<br>          while (str.charAt(j) != ']') {<br>            j++;<br>          }<br>          BigInteger len = new BigInteger(str.substring(i + 1, j));<br>          int digit = str.charAt(j + 1) - '0';<br>          <br>          f.add(current);<br>          current = current.add(len);<br>          t.add(current);<br>          dd.add(digit);<br>          i = j + 2;<br>        } else {<br>          f.add(current);<br>          current = current.add(BigInteger.ONE);<br>          t.add(current);<br>          dd.add(str.charAt(i) - '0');<br>          i++;<br>        }<br>      }<br>      from = new BigInteger[f.size()];<br>      to = new BigInteger[t.size()];<br>      d = new int[dd.size()];<br>      for (int i = 0; i &lt; f.size(); i++) {<br>        from[i] = f.get(i);<br>        to[i] = t.get(i);<br>        d[i] = dd.get(i);<br>      }<br>      <br>      for (int i = 0; i &lt; from.length; i++) {<br>        BigInteger u = current.subtract(to[i]);<br>        BigInteger v = current.subtract(from[i]);<br>        from[i] = u;<br>        to[i] = v;<br>      }<br>    }<br>    <br>    public int getDigit(BigInteger pos) {<br>      for (int i = 0; i &lt; from.length; i++) {<br>        if ((from[i].compareTo(pos) &lt;= 0) &amp;&amp; (to[i].compareTo(pos) &gt; 0)) {<br>          return d[i];<br>        }<br>      }<br>      return 0;<br>    }<br>  }<br>  <br>    public int[] getDigits(String a, String b, String[] k){<br>      Number num1 = new Number(a);<br>      Number num2 = new Number(b);<br>      <br>      HashSet&lt;BigInteger&gt; pos = new HashSet&lt;BigInteger&gt;();<br>      for (int i = 0; i &lt; num1.from.length; i++) {<br>        pos.add(num1.from[i]);<br>        pos.add(num1.to[i]);<br>      }<br>      for (int i = 0; i &lt; num2.from.length; i++) {<br>        pos.add(num2.from[i]);<br>        pos.add(num2.to[i]);<br>      }<br>      for (int i = 0; i &lt; k.length; i++) {<br>        pos.add(new BigInteger(k[i]));<br>      }<br>      pos.add(BigInteger.ZERO);<br>      BigInteger[] p = new BigInteger[pos.size()];<br>      pos.toArray(p);<br>      Arrays.sort(p);<br>      <br>      int[] ans = new int[p.length];<br>      <br>      int addon = 0;<br>      for (int i = 0; i &lt; p.length; i++) {<br>        int d1 = num1.getDigit(p[i]);<br>        int d2 = num2.getDigit(p[i]);<br>        <br>        ans[i] = (d1 + d2 + addon) % 10;<br>        if (d1 + d2 + addon &lt; 10) {<br>          addon = 0;<br>          continue;<br>        } else {<br>          addon = 1;<br>        }<br>      }<br>      <br>      int[] result = new int[k.length];<br>      for (int i = 0; i &lt; k.length; i++) {<br>        for (int j = 0; j &lt; p.length; j++) {<br>          if (new BigInteger(k[i]).compareTo(p[j]) == 0) {<br>            result[i] = ans[j];<br>            break;<br>          }<br>        }<br>      }<br>      <br>      return result;<br>    }<br>}<br></td>