<td class="problemText" colspan="8" valign="middle" align="left">
            #line 5 "BlackWhiteRectangles.cpp"<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br> <br>#include &lt;cstdio&gt;<br>#include &lt;vector&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br> <br>using namespace std;<br> <br>#define REP(a,n) for(int a=0; a&lt;(n); ++a)<br>#define FOR(a,b,c) for(int a=(b); a&lt;=(c); ++a)<br>#define FORD(a,b,c) for(int a=(b); a&gt;=(c); --a)<br>#define INIT(a, b) __typeof(b) a = (b)<br>#define FOREACH(a, b) for(INIT(a, (b).begin()); a!=(b).end(); ++a)<br> <br>#define PB push_back<br> <br>typedef long long LL;<br>typedef pair&lt;int, int&gt; pii;<br>typedef vector&lt;string&gt; vs;<br>typedef vector&lt;int&gt; vi;<br> <br>#define INF 1000000000<br> <br>template&lt;class T&gt;<br>inline int size(const T&amp;t){return t.size();}<br> <br>//////////////////////////////////////////<br> <br>int test[2][2];<br> <br>class BlackWhiteRectangles {<br>  public:<br>  int blackCount(vector &lt;string&gt; rectangles) {<br>     vector&lt;vi&gt; rect;<br>     vi xp, yp;<br>     FOREACH(it, rectangles)<br>     {<br>         vi v(5);<br>         sscanf(it-&gt;c_str(), "%d%d%d%d%d", &amp;v[0], &amp;v[1], &amp;v[2], &amp;v[3], &amp;v[4]);<br>         rect.PB(v);<br>         xp.PB(v[0]);<br>         xp.PB(v[2]);<br>         yp.PB(v[1]);<br>         yp.PB(v[3]);<br>     }<br>     sort(xp.begin(), xp.end());<br>     sort(yp.begin(), yp.end());<br>     int wyn = 0;<br>     REP(xw, size(xp)-1)<br>       REP(yw, size(yp)-1)<br>       {<br>         int x1 = xp[xw], x2 = xp[xw+1], y1 = yp[yw], y2 = yp[yw+1];<br>         REP(a, 2) REP(b, 2)<br>         {<br>           test[a][b] = 0;<br>                 REP(r, size(rect))<br>                   if (rect[r][0]&lt;=x1 &amp;&amp; rect[r][1]&lt;=y1 &amp;&amp; rect[r][2]&gt;=x2 &amp;&amp; rect[r][3]&gt;=y2)<br>                   {<br>                     int parx = (x1+a-rect[r][0])%2;<br>                     int pary = (y1+b-rect[r][1])%2;<br>                     if (rect[r][4]==1 || (rect[r][4]==2 &amp;&amp; pary) || (rect[r][4]==3 &amp;&amp; parx) || (rect[r][4]==4 &amp;&amp; !(parx^pary)))<br>                       test[a][b] = 1;<br>                   }<br>                 wyn += test[a][b]*((x2-x1)/2+(!a&amp;&amp;(x2-x1)%2==1))*((y2-y1)/2+(!b&amp;&amp;(y2-y1)%2==1));<br>               }<br>       }<br>        return wyn;<br>  }<br> <br> <br>};<br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>