<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class MyFriends {<br>    String BAD = "IMPOSSIBLE";<br>    String GOOD = "POSSIBLE";<br> <br>    public String calcFriends(int[] sumFriends, int k) {<br>        int n = sumFriends.length;<br>        int totalSum = 0;<br>        for (int x : sumFriends)<br>            totalSum += x;<br>        if (totalSum % (n - 2) != 0)<br>            return BAD;<br>        totalSum /= (n - 2);<br>        for (int i = 0; i &lt; n; ++i) {<br>            if (sumFriends[i] &gt; totalSum)<br>                return BAD;<br>            sumFriends[i] = totalSum - sumFriends[i];<br>        }<br>        int[] am = new int[n];<br>        for (int i = 0; i &lt; n; ++i) {<br>            int s = 0;<br>            int j = i;<br>            int sign = 1;<br>            do {<br>                s = s + sign * sumFriends[j];<br>                sign = -sign;<br>                j = (j + k) % n;<br>            } while (i != j);<br>            if (s &lt; 0 || s % 2 != 0)<br>                return BAD;<br>            am[i] = s / 2;<br>        }<br>        for (int i = 0; i &lt; n; ++i) {<br>            if (am[i] + am[(i + k) % n] != sumFriends[i])<br>                return BAD;<br>            if (am[i] &gt; n - 1)<br>                return BAD;<br>        }<br>        if (can(am))<br>            return GOOD;<br>        else<br>            return BAD;<br>    }<br> <br>    private boolean can(int[] am) {<br>        int n = am.length;<br>        Arrays.sort(am);<br>        if (am[am.length - 1] == 0)<br>            return true;<br>        int k = am[am.length - 1];<br>        int[] nam = new int[am.length - 1];<br>        for (int i = 0; i &lt; nam.length; ++i)<br>            if (i &gt;= am.length - 1 - k) {<br>                nam[i] = am[i] - 1;<br>                if (nam[i] &lt; 0)<br>                    return false;<br>            } else<br>                nam[i] = am[i];<br>        return can(nam);<br>    }<br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>