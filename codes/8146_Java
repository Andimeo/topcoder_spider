<td class="problemText" colspan="8" valign="middle" align="left">
            /*<br>*/<br>import java.util.*;<br>public class ConstructionFromMatches {<br>    public int minimumCost(int[] cost, int[] top, int[] bottom) {<br>      int M = top.length;<br>      int N = cost.length; //[i] has thickness i+1<br>      int[][][] d = new int[M+1][N][N];<br>      for (int i=0; i&lt;N; i++)<br>        for (int j=0; j&lt;N; j++)<br>          d[0][i][j] = cost[i]+cost[j];<br>      for (int p=1; p&lt;=M; p++) <br>          for (int i=0; i&lt;N; i++)<br>            for (int j=0; j&lt;N; j++)<br>            {<br>              d[p][i][j] = 1000000000;<br>              for (int a=0; a&lt;N; a++)<br>                for (int b=0; b&lt;N; b++)<br>                  for (int c=0; c&lt;N; c++) {<br>                    int x = top[p-1]-a-c-i-4;<br>                    int y = bottom[p-1]-b-c-j-4;<br>                    if (x&gt;=0 &amp;&amp; x&lt;N &amp;&amp; y&gt;=0 &amp;&amp; y&lt;N) <br>                      d[p][i][j] = Math.min(d[p-1][a][b]+cost[x]+cost[y]+cost[c]+cost[i]+cost[j], d[p][i][j]);<br>                  }<br>                    <br>            }<br>      <br>        int res = 1000000000;<br>        for (int i=0; i&lt;N; i++)<br>          for (int j=0; j&lt;N; j++)<br>            res = Math.min(res, d[M][i][j]);<br>        return res==1000000000?-1:res;<br>    }<br><br>    private static void print(Object arg){};<br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>