<td class="problemText" colspan="8" valign="middle" align="left">
            //Be the MAN<br>//Challenge it!<br>public class FrabonacciTree {<br>    private long[] k;<br><br>    public String shortestPath(int n, int startIndex, int finishIndex) {<br>        k = new long[n + 5];<br>        k[0] = 1;<br>        k[1] = 1;<br>        for (int i = 2; i &lt;= n; i++) {<br>            k[i] = k[i - 2] + k[i - 1] + 1;<br>        }<br>        String a = getPath(startIndex, n);<br>        String b = getPath(finishIndex, n);<br>        int i = 0;<br>        while (i &lt; a.length() &amp;&amp; i &lt; b.length() &amp;&amp; a.charAt(i) == b.charAt(i)) i++;<br>        a = a.substring(i);<br>        b = b.substring(i);<br>        String res = "";<br>        for (int j = 0; j &lt; a.length(); j++) res += "U";<br>        return res + b;<br>    }<br><br>    private String getPath(long i, int n) {<br>        if (i == 1) return "";<br>        if (i - 1 &lt;= k[n - 2]) return "L" + getPath(i - 1, n - 2);<br>        return "R" + getPath(i - 1 - k[n - 2], n - 1);<br>    }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>