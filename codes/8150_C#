<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class TristripeBacteria<br>{<br>  int[,] b;<br>  int n, m;<br>  public void gao(int i, int j, int all) {<br>    if (i &lt; 0 || i &gt;= n || j &lt; 0 || j &gt;= m) return;<br>    if (b[i,j] == 1) {<br>      b[i,j] = all;<br>      gao(i +1, j, all);<br>      gao(i -1, j, all);<br>      gao(i , j+1, all);<br>      gao(i , j-1, all);<br>    }<br>  }<br>  public bool check(int now) {<br>    int[] t = new int[3];<br>    for (t[0] = 0; t[0] &lt; 2; ++t[0]) <br>    for (t[1] = 0; t[1] &lt; 2; ++t[1]) <br>    for (t[2] = 0; t[2] &lt; 2; ++t[2]) {<br>      for (int w = 0; w &lt; 3; ++w) {<br>        for (int i = 0; i &lt; n; ++i) <br>        for (int j = 0; j &lt; m; ++j) <br>        if (b[i,j] == now) {<br>          b[i,j] = -1;<br>          if (t[w] == 0) {<br>            int jj = j;<br>            while(jj &gt;= 0 &amp;&amp; jj &lt; m &amp;&amp; b[i,jj] != 0) b[i,jj--] = -1;<br>            jj = j;<br>            while(jj &gt;= 0 &amp;&amp; jj &lt; m &amp;&amp; b[i,jj] != 0) b[i,jj++] = -1;<br>          } else {<br>            int ii = i;<br>            while(ii &gt;= 0 &amp;&amp; ii &lt; n &amp;&amp; b[ii,j] != 0) b[ii--,j] = -1;<br>            ii = i;<br>            while(ii &gt;= 0 &amp;&amp; ii &lt; n &amp;&amp; b[ii,j] != 0) b[ii++,j] = -1;<br>          }<br>          i = n;<br>          j = m;<br>          break;<br>        }<br>      }<br>      bool ok = true;<br>      for (int i = 0; i &lt; n; ++i) for (int j = 0; j &lt; m; ++j) {<br>        if (b[i,j] == now) ok = false;<br>      }<br>      for (int i = 0; i &lt; n; ++i) for (int j = 0; j &lt; m; ++j) {<br>        if (b[i,j] == -1) b[i,j] = now;<br>      }<br>      <br>      if (ok) {<br>        //Console.WriteLine(t[0] + " " +  t[1] +  " "  + t[2]);<br>        return true;<br>      }<br>      <br>    }<br>    return false;<br>  }<br>  public int howMany(string[] c)<br>  {<br>    n = c.Length;<br>    m = c[0].Length;<br>    b = new int[n, m];<br>    for (int i = 0; i &lt; n; ++i) {<br>    for (int j = 0; j &lt; m; ++j) {<br>      b[i,j] = (c[i][j] == '.' ? 0 : 1);<br>    }}<br>    int all = 2;<br>    for (int i = 0; i &lt; n; ++i) {<br>      for (int j = 0; j &lt; m; ++j) {<br>        if (b[i,j] == 1) {<br>          gao(i, j, all);<br>          all++;<br>        }<br>      }<br>    }<br>    int ret = 0;<br>    for (int ct = 2; ct &lt; all; ++ct) {<br>      if (check(ct)) {<br>        ret++;<br>      }<br>    }<br>    return ret;<br>  }<br> <br> <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>