<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class TristripeBacteria {<br>    String[] photo;<br>    int height;<br>    int width;<br>    int[][] mark;<br> <br>    public int howMany(String[] photo) {<br>        this.photo = photo;<br>        height = photo.length;<br>        width = photo[0].length();<br>        mark = new int[height][width];<br>        int res = 0;<br>        for (int row = 0; row &lt; height; ++row)<br>            for (int col = 0; col &lt; width; ++col)<br>                if (mark[row][col] == 0 &amp;&amp; photo[row].charAt(col) == '*') {<br>                    dfs(1, row, col);<br>                    if (checkTri(0, 0, 3))<br>                        ++res;<br>                    dfs(2, row, col);<br>                }<br>    return res;<br>  }<br> <br>    private boolean checkTri(int row, int col, int toGo) {<br>        if (col &gt;= width)<br>            return checkTri(row + 1, 0, toGo);<br>        if (row &gt;= height)<br>            return toGo &gt;= 0;<br>        if (mark[row][col] != 1)<br>            return checkTri(row, col + 1, toGo);<br>        if (toGo &lt;= 0)<br>            return false;<br>        int num = 1;<br>        while (row + num &lt; height &amp;&amp; (mark[row + num][col] &amp; 1) != 0)<br>            ++num;<br>        for (int i = 0; i &lt; num; ++i) {<br>            mark[row + i][col] = 3;<br>        }<br>        boolean res = checkTri(row, col + 1, toGo - 1);<br>        for (int i = 0; i &lt; num; ++i) {<br>            mark[row + i][col] = 1;<br>        }<br>        if (res)<br>            return true;<br>        num = 1;<br>        while (col + num &lt; width &amp;&amp; (mark[row][col + num] &amp; 1) != 0)<br>            ++num;<br>        for (int i = 0; i &lt; num; ++i) {<br>            mark[row][col + i] = 3;<br>        }<br>        res = checkTri(row, col + 1, toGo - 1);<br>        for (int i = 0; i &lt; num; ++i) {<br>            mark[row][col + i] = 1;<br>        }<br>        return res;<br>    }<br> <br>    private void dfs(int m, int row, int col) {<br>        if (mark[row][col] &gt;= m)<br>            return;<br>        mark[row][col] = m;<br>        for (int dr = -1; dr &lt;= 1; ++dr)<br>            for (int dc = -1; dc &lt;= 1; ++dc)<br>                if (dr == 0 ^ dc == 0) {<br>                    int nr = row + dr;<br>                    int nc = col + dc;<br>                    if (nr &gt;= 0 &amp;&amp; nr &lt; height &amp;&amp; nc &gt;= 0 &amp;&amp; nc &lt; width &amp;&amp; photo[nr].charAt(nc) == '*')<br>                        dfs(m, nr, nc);<br>                }<br>    }<br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>