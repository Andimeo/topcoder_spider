<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br><br>public class KSubstring {<br>  class Pair implements Comparable &lt;Pair&gt; {<br>    long x;<br>    int y;<br>    Pair (long xx, int yy) {<br>      x = xx;<br>      y = yy;<br>    };<br>    public int compareTo (Pair z) {<br>      if (x &lt; z.x) return -1;<br>      if (x &gt; z.x) return 1;<br>      if (y &lt; z.y) return -1;<br>      if (y &gt; z.y) return 1;<br>      return 0;<br>    };<br>  };<br><br>  public int [] maxSubstring (int a0, int x, int y, int M, int n) {<br>    long [] a = new long [n];<br>    a[0] = a0;<br>    for (int i = 1; i &lt; n; i++)<br>      a[i] = (a[i - 1] * x + y) % M;<br><br><br>    Pair [] b = new Pair [n];<br><br>    for (int i = 0; i &lt; n; i++)<br>      b[i] = new Pair (a[i], i);<br><br>    long mn = Long.MAX_VALUE;<br>    int mk = -1;<br><br>    for (int i = 1; i &lt; n; i++) {<br>      Arrays.sort (b, 0, n - i + 1);<br>      int sg = 0, mig = b[0].y, mag = b[0].y;<br>      for (int j = 0; j &lt; n - i; j++) {<br>        if (Math.abs (b[j + 1].x - b[j].x) == 0) {<br>          if (b[j + 1].y &lt; mig) mig = b[j + 1].y;<br>          if (b[j + 1].y &gt; mag) mag = b[j + 1].y;<br>          if (mag - mig &gt;= i) {<br>            mn = 0;<br>            mk = i;<br>          };<br>        } else {<br>          sg = j + 1;<br>          mig = b[j + 1].y;<br>          mag = b[j + 1].y;<br>        };<br>        if (Math.abs (b[j + 1].x - b[j].x) &lt;= mn &amp;&amp;<br>            Math.abs (b[j + 1].y - b[j].y) &gt;= i) {<br>          mn = Math.abs (b[j + 1].x - b[j].x);<br>          mk = i;<br>        };<br>      };<br>      for (int j = 0; j &lt; n - i; j++) {<br>        if (b[j].y + i == n)<br>          b[j] = b[n - i];<br>        b[j].x += a[b[j].y + i];<br>      };<br>    };<br><br>    int [] ret = new int [2];<br>    ret[0] = mk;<br>    ret[1] = (int)mn;<br><br>    return ret;<br>  };<br>};<br></td>