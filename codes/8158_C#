<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br> <br>public class CountPaths<br>{<br>  public int[] difPaths (int r, int c, int[] fieldrow, int[] fieldcol)<br>  {<br>    int mod = 1000007;<br>    <br>    int n = fieldrow.Length;<br>    int[,] spec = new int[r, c];<br>    <br>    for (int i = 0; i &lt; n; ++i)<br>      spec[fieldrow[i] - 1, fieldcol[i] - 1] = i + 1;<br>    <br>    int[,,,] paths = new int[r, c, n + 1, n + 1];<br>    <br>    paths[0, 0, spec[0, 0] != 0 ? 1 : 0, spec[0, 0]] = 1;<br>    <br>    for (int i = 0; i &lt; r; ++i)<br>      for (int j = 0; j &lt; c; ++j)<br>    {<br>      if (i != 0)<br>      {<br>        if (spec[i, j] == 0)<br>          for (int k = 0; k &lt;= n; ++k)<br>            for (int l = 0; l &lt;= n; ++l)<br>              paths[i, j, k, l] = (paths[i, j, k, l] + paths[i - 1, j, k, l]) % mod;<br>        else<br>          for (int k = 0; k &lt; n; ++k)<br>            for (int l = 0; l &lt; spec[i, j]; ++l)<br>              paths[i, j, k + 1, spec[i, j]] = (paths[i, j, k + 1, spec[i, j]] + paths[i - 1, j, k, l]) % mod;<br>      }<br>      <br>      if (j != 0)<br>      {<br>        if (spec[i, j] == 0)<br>          for (int k = 0; k &lt;= n; ++k)<br>            for (int l = 0; l &lt;= n; ++l)<br>              paths[i, j, k, l] = (paths[i, j, k, l] + paths[i, j - 1, k, l]) % mod;<br>        else<br>          for (int k = 0; k &lt; n; ++k)<br>            for (int l = 0; l &lt; spec[i, j]; ++l)<br>              paths[i, j, k + 1, spec[i, j]] = (paths[i, j, k + 1, spec[i, j]] + paths[i, j - 1, k, l]) % mod;<br>      }<br>    }<br>    <br>    int[] ret = new int[n + 1];<br>    <br>    for (int i = 0; i &lt;= n; ++i)<br>      for (int j = 0; j &lt;= n; ++j)<br>        ret[i] = (ret[i] + paths[r - 1, c - 1, i, j]) % mod;<br>    <br>    return ret;<br>  }<br>  <br>  <br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>