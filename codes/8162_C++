<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;  <br>#include &lt;iostream&gt;  <br>#include &lt;sstream&gt;  <br>#include &lt;string&gt;  <br>#include &lt;vector&gt;  <br>#include &lt;queue&gt;  <br>#include &lt;set&gt;  <br>#include &lt;map&gt;  <br>#include &lt;cstdio&gt;  <br>#include &lt;cstdlib&gt;  <br>#include &lt;cctype&gt;  <br>#include &lt;cmath&gt;  <br>#include &lt;list&gt;  <br>using namespace std;  <br> <br>#define PB push_back<br>#define MP make_pair<br>#define SZ(v) ((int)(v).size())<br>#define FOR(i,a,b) for(int i=(a);i&lt;(b);++i)<br>#define REP(i,n) FOR(i,0,n)<br>#define FORE(i,a,b) for(int i=(a);i&lt;=(b);++i)<br>#define REPE(i,n) FORE(i,0,n)<br>#define FORSZ(i,a,v) FOR(i,a,SZ(v))<br>#define REPSZ(i,v) REP(i,SZ(v))<br>typedef long long ll;<br>typedef vector&lt;int&gt; VI;<br> <br>ll choose[21][21];<br> <br>ll mem[20][20];<br>ll go(int len,int left) {<br>  if(len==0) return left==0?1:0;<br>  if(left&lt;0) return 0;<br>  ll &amp;ret=mem[len][left];<br>  if(ret==-1) {<br>    ret=0;<br>    REP(i,len) {<br>      int nleft=left-(i==0?0:1);<br>      REPE(j,nleft) ret+=go(i,j)*go(len-i-1,nleft-j)*choose[len-1][i];<br>    }<br>    printf("%d %d = %lld\n",len,left,ret);<br>  }<br>  return ret;<br>}<br> <br>class KSlopePermutation {  <br>public:  <br>  long long getCount(int len, int left, int i) {<br>    choose[0][0]=1;<br>    FORE(x,1,len) { choose[x][0]=1; FORE(y,1,x) choose[x][y]=choose[x-1][y-1]+choose[x-1][y]; }<br>    memset(mem,-1,sizeof(mem));<br>    ll ret=0;<br>    int nleft=left-(i==0?0:1);<br>    REPE(j,nleft) ret+=go(i,j)*go(len-i-1,nleft-j)*choose[len-1][i];<br>    return ret;<br>  }<br>};<br></td>