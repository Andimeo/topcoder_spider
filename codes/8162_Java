<td class="problemText" colspan="8" valign="middle" align="left">
            /*<br>*/<br>import java.util.*;<br>public class KSlopePermutation {<br>    public long getCount(int n, int k, int f) {<br>      int N = 20;<br>      long[][] C = new long[N][N];<br>      long[][] A = new long[N][N];<br>      for (int i=0; i&lt;N; i++)<br>        C[i][0] = 1;<br>      for (int i=1; i&lt;N; i++)<br>        for (int j=1; j&lt;N; j++)<br>          C[i][j] = C[i-1][j] + C[i-1][j-1];<br>      for (int i=0; i&lt;N; i++)<br>        A[i][0] = 1;<br>      for (int i=1; i&lt;N; i++)<br>        for (int j=1; j&lt;N; j++)<br>          A[i][j] = (i-j)*A[i-1][j-1] + (j+1)*A[i-1][j];<br>      //System.out.println(Arrays.deepToString(C));<br>      //System.out.println(Arrays.deepToString(A));<br>        long res = 0;<br>        if (f==0) <br>          res = A[n-1][k];<br>        else { <br>          for (int i=0; i&lt;k; i++) <br>            res += C[n-1][f]*A[f][i]*A[n-f-1][k-i-1];<br>        }<br>        return res;<br>    }<br><br>    private static void print(Object arg){};<br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>