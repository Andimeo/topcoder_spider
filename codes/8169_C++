<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;fstream&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;vector&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;ctime&gt;<br>#include &lt;utility&gt;<br> <br>using namespace std;<br> <br>typedef long long int64;<br>typedef unsigned long long uint64;<br>#define two(X) (1&lt;&lt;(X))<br>#define twoL(X) (((int64)(1))&lt;&lt;(X))<br>#define contain(S,X) ((S&amp;two(X))&gt;0)<br>#define containL(S,X) ((S&amp;twoL(X))&gt;0)<br>const double pi=acos(-1.0);<br>const double eps=1e-11;<br>template&lt;class T&gt; void checkmin(T &amp;a,T b){if (b&lt;a) a=b;}<br>template&lt;class T&gt; void checkmax(T &amp;a,T b){if (b&gt;a) a=b;}<br>template&lt;class T&gt; T sqr(T x) {return x*x;}<br>int countbit(int n) {return (n==0)?0:(1+countbit(n&amp;(n-1)));}<br>int lowbit(int n) {return (n^(n-1))&amp;n;}<br>typedef pair&lt;int,int&gt; ipair;<br>template&lt;class T&gt; void out(T A[],int n)<br>{<br>  for (int i=0;i&lt;n;i++) cout&lt;&lt;A[i]&lt;&lt;" ";<br>  cout&lt;&lt;endl;<br>}<br>template&lt;class T&gt; void out(vector&lt;T&gt; A,int n=-1)<br>{<br>  if (n==-1) n=A.size();<br>  for (int i=0;i&lt;n;i++) cout&lt;&lt;A[i]&lt;&lt;" ";<br>  cout&lt;&lt;endl;<br>}<br>template&lt;class T&gt; T gcd(T a,T b)<br>{<br>  if (a&lt;0) return gcd(-a,b);<br>  if (b&lt;0) return gcd(a,-b);<br>  return (b==0)?a:gcd(b,a%b);<br>}<br>template&lt;class T&gt; T lcm(T a,T b)<br>{<br>  return a*(b/gcd(a,b));<br>}<br>int64 toInt64(string s)<br>{<br>  istringstream sin(s);<br>  int64 t;<br>  sin&gt;&gt;t;<br>  return t;<br>}<br>int64 toInt(string s)<br>{<br>  istringstream sin(s);<br>  int t;<br>  sin&gt;&gt;t;<br>  return t;<br>}<br>string toString(int64 v)<br>{<br>  ostringstream sout;<br>  sout&lt;&lt;v;<br>  return sout.str();<br>}<br>string toString(int v)<br>{<br>  ostringstream sout;<br>  sout&lt;&lt;v;<br>  return sout.str();<br>}<br> <br> <br>class FlashFlood <br>{<br>public:<br>  double getS(double x1,double x2,double h)<br>  {<br>    if (x1&gt;x2) swap(x1,x2);<br>    if (h&lt;=x1 &amp;&amp; h&lt;=x2) return 0;<br>    if (h&gt;=x1 &amp;&amp; h&gt;=x2) return h-(x1+x2)/2.0;<br>    return (x2-x1)/2.0*sqr((h-x1)/(x2-x1));<br>  }<br>  bool check(vector&lt;int&gt; A,double r,double m)<br>  {<br>    r*=m/12.0;<br>    int n=A.size();<br>    int last=n-1;<br>    double total=0;<br>    for (int i=n-2;i&gt;=0;i--) if (A[i]&gt;=A[last]-eps)<br>    {<br>      for (int k=i;k&lt;last;k++)<br>        total+=getS(A[k],A[k+1],A[last]);<br>      double now=(n-1-i)*r;<br>      if (now&gt;=total) return true;<br>      last=i;<br>    }<br>    return false;<br>  }<br>  double hours(int r, vector &lt;int&gt; A) <br>  {<br>    double H=0,T=1e7;<br>    for (int step=0;step&lt;1000;step++)<br>    {<br>      double M=(H+T)/2.0;<br>      if (check(A,r,M))<br>        T=M;<br>      else<br>        H=M;<br>    }<br>    return H;<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>