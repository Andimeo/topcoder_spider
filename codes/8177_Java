<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class PickGuitars {<br>  int[] a;<br> <br>  int[][][] tab;<br> <br>  int rec(int l, int r, int turn) {<br>    if (l &gt; r)<br>      return 0;<br>    if (tab[l][r][turn] == -1) {<br>      int ans = 0;<br>      int ans2 = 0;<br>      for (int i = l; i &lt;= r; i++) {<br>        int h = a[i] + rec(l, i - 1, 1) + rec(i + 1, r, 1);<br>        if (h &gt; ans) {<br>          ans = h;<br>          ans2 = rec(l, i - 1, 0) + rec(i + 1, r, 0);<br>        }<br>      }<br>      tab[l][r][0] = ans;<br>      tab[l][r][1] = ans2;<br>    }<br>    return tab[l][r][turn];<br>  }<br> <br>  public int maxValue(int[] guitarValues) {<br>    int n = guitarValues.length;<br>    int ans = 0;<br>    a = new int[n - 1];<br>    tab = new int[n - 1][n - 1][2];<br>    for (int i = 0; i &lt; n; i++) {<br>      a = new int[n - 1];<br>      int k = 0;<br>      for (int j = (i + 1) % n; j != i; j = (j + 1) % n) {<br>        if (j == i)<br>          break;<br>        a[k++] = guitarValues[j];<br>      }<br>      for (int v = 0; v &lt; n - 1; v++) {<br>        for (int u = 0; u &lt; n - 1; u++) {<br>          Arrays.fill(tab[v][u], -1);<br>        }<br>      }<br>      ans = Math.max(ans, guitarValues[i] + rec(0, n - 2, 1));<br>    }<br>    return ans;<br>  }<br>}<br>// Powered by [KawigiEdit] 2.0!<br></td>