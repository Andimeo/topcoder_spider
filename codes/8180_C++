<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;ctype.h&gt;<br>using namespace std;<br><br>typedef long long ll;<br>typedef vector&lt;int&gt; vi;<br>typedef long double ld;<br>typedef vector&lt;long double&gt; vld;<br>typedef vector&lt;string&gt; vs;<br><br>#define Size(x) (int((x).size()))<br><br>#define LS &lt;<br>#define FOR(k,a,b) for(typeof(a) k = (a); k LS (b); k++)<br><br>vi parsevi(string s) {<br>  s += " ";<br>  int tmp = 0;<br>  vi res;<br>  FOR(k,0,Size(s)) if(s[k] == ' ') { res.push_back(tmp); tmp = 0; } else { tmp *= 10; tmp += s[k] - '0'; }<br>  return res;<br>  }<br><br>vs parsevs(string s) {<br>  s += " ";<br>  string tmp;<br>  vs res;<br>  FOR(k,0,Size(s)) if(s[k] == ' ') { res.push_back(tmp); tmp = ""; } else { tmp += s[k]; }<br>  return res;<br>  }<br><br>class CoolFunction {<br>  public:<br>  vector &lt;int&gt; restore(vector &lt;int&gt; values) {<br>    int N = Size(values);<br>    vi res;<br>    if(N == 1) {<br>      res.push_back(-values[0]);<br>      return res;<br>      }<br>    {<br>      init:<br>      FOR(a,1,N-1) if(values[a]+values[a] &lt; values[a-1]+values[a+1]) {<br>        res.push_back(a);<br>        FOR(u,0,N) values[u] -= abs(a-u);<br>//        printf("t%d\n", a); return res;<br>        goto init;<br>        }<br>      }<br>    vi xres, cres;<br>    <br>    xres.push_back(9999);<br>    <br>    int mul = abs(values[1] - values[0]);<br>    <br>    int U = N-1;<br>    <br>    if(values[1] &gt; values[0]) {<br>      FOR(u,0,mul-1) res.push_back(0);<br>      res.push_back(-values[0]);<br>      sort(res.begin(), res.end());<br>      return res;<br>      }<br>     <br>    if(values[1] &lt; values[0]) {<br>      FOR(u,0,mul-1) res.push_back(U);<br>      res.push_back(U+values[U]);<br>      sort(res.begin(), res.end());<br>      return res;<br>      }<br>    <br>    if(values[0] == values[1]) {<br>      if(values[0] != 0) {<br>        res.push_back(U-values[0]);<br>        res.push_back(U);<br>        }<br>      sort(res.begin(), res.end());<br>      return res;<br>      }<br>    }<br>  };<br><br><br>// Powered by FileEdit<br></td>