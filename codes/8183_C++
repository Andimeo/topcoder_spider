<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class LameKnight {<br>public:<br>  int maxCells(int, int);<br>};<br> <br>int LameKnight::maxCells(int h, int w) {<br>  int res;<br>  if (h &gt;= 3) {<br>    if (w &gt;= 7) {<br>      res = 5 + (w - 7);<br>    } else {<br>      if (w &gt;= 4)<br>        res = 4;<br>      else<br>        res = w;<br>    }<br>  } else {<br>    if (h == 1)<br>      res = 1;<br>    else {<br>      // h == 2<br>      if (w &gt;= 7)<br>        res = 4;<br>      else if (w &gt;= 5)<br>        res = 3;<br>      else if (w &gt;= 3)<br>        res = 2;<br>      else<br>        res = 1;<br>    }<br>  }<br>  return res;<br>}<br> <br>//Powered by [KawigiEdit] 2.0!<br></td>