<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>template&lt;class T&gt; inline void checkmin(T &amp;a,T b){if(b&lt;a) a=b;}<br> <br>class ConnectTheCities<br>{<br>public:<br>  int n,D,key;<br>  int A[110],f[110][110];<br>  int solve(int v,int l)<br>  {<br>    if (v==n) return (abs(l-D)&lt;=key)?0:1000000;<br>    int &amp;ret=f[v][l];<br>    if (ret!=-1) return ret;<br>    ret=1000000;<br>    for (int i=l;i&lt;=D;i++) if (abs(i-l)&lt;=key)<br>    {<br>      checkmin(ret,solve(v+1,i)+abs(i-A[v]));<br>    }<br>    return ret;<br>  }<br>  int minimalRange(int distance, int funds, vector &lt;int&gt; position)<br>  {<br>    D=distance;<br>    n=position.size();<br>    for (int i=0;i&lt;n;i++) A[i]=position[i];<br>    sort(A,A+n);<br>    int H=-1,T=110;<br>    while (H+1&lt;T)<br>    {<br>      key=(H+T)/2;<br>      memset(f,255,sizeof(f));<br>      int rd=solve(0,0);<br>      if (rd&lt;=funds) T=key;<br>      else H=key;<br>    }<br>    return T;<br>  }<br>};<br></td>