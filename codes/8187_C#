<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br><br>public class LinearCity <br>{<br>    public string[] getReference(int[] refSource, int[] refDestination, string refDirection, int N, int[] source, int[] destination) <br>    {<br>        int[,] A = new int[N, N];<br>        A.Initialize();<br>        for (int i = 0; i &lt; refSource.Length; i++)<br>        {<br>            int a = refSource[i];<br>            int b = refDestination[i];<br>            char c = refDirection[i];<br>            if (c == 'R')<br>            {<br>                A[a, b] = 2;<br>                A[b, a] = 1;<br>            }<br>            else<br>            {<br>                A[a, b] = 1;<br>                A[b, a] = 2;<br>            }<br><br>        }<br>        for (int g = 0; g &lt; N; g++)<br>        {<br>            for (int i = 0; i &lt; N; i++)<br>            {<br>                for (int j = 0; j &lt; N; j++)<br>                {<br>                    for (int k = 0; k &lt; N; k++)<br>                    {<br>                        if (A[i, j] == A[j, k] &amp;&amp; A[i, j]!=0)<br>                        {<br>                            A[i, k] = A[i, j];<br>                        }<br>                    }<br>                }<br>            }<br>        }<br>        List&lt;string&gt; R = new List&lt;string&gt;();<br>        for (int i = 0; i &lt; source.Length; i++)<br>        {<br>            if (A[source[i], destination[i]] == 2)<br>            {<br>                R.Add("RIGHT");<br>            }<br>            if (A[source[i], destination[i]] == 1)<br>            {<br>                R.Add("LEFT");<br>            }<br>            if (A[source[i], destination[i]] == 0)<br>            {<br>                R.Add("UNKNOWN");<br>            }<br>        }<br>        return R.ToArray();<br><br><br>    }<br>    <br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by r1cs1]<br>// Powered by CodeProcessor<br></td>