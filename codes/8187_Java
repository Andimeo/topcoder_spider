<td class="problemText" colspan="8" valign="middle" align="left">
            public class LinearCity{<br>  public char getDir(char[][] dirs, char dir,int start, int end){<br>    int[] placesBeen=new int[dirs.length];<br>    int pBlen=0;<br>    int[] placesCheck=new int[dirs.length];<br>    int pCpos=0;<br>    int pClen=1;<br>    placesBeen[0]=start;<br>    placesCheck[0]=start;<br>    int i, j;<br>    boolean found=false;<br>    while(pCpos&lt;pClen &amp;&amp; !found){<br>      for(j=0;j&lt;dirs.length; j++){<br>        if(dirs[placesCheck[pCpos]][j]==dir){<br>          boolean alreadyIn=false;<br>          for(i=0;i&lt;pBlen &amp;&amp; !alreadyIn;i++){<br>            if(placesBeen[i]==j){<br>              alreadyIn=true;<br>              }<br>            }<br>          if(!alreadyIn){<br>            placesCheck[pClen++]=j;<br>            placesBeen[pBlen++]=j;<br>            }<br>          if(j==end){<br>            found=true;<br>            }<br>          }<br>        }<br>      pCpos++;<br>      }<br>    if(found){<br>      return dir;<br>      }<br>    else{<br>      return 'N';<br>      }<br>    }<br>  public String[] getReference(int[] refSource, int[] refDestination, String refDirection, int N, int[] source, int[] destination){<br>    char[][] dirs=new char[N][N];<br>    int i;<br>    for(i=0;i&lt;refSource.length;i++){<br>      dirs[refSource[i]][refDestination[i]]=refDirection.charAt(i);<br>      if(refDirection.charAt(i)=='L'){<br>        dirs[refDestination[i]][refSource[i]]='R';<br>      }<br>      else{<br>        dirs[refDestination[i]][refSource[i]]='L';<br>        }<br>      }<br>    String[] retval=new String[source.length];<br>    for(i=0;i&lt;source.length;i++){<br>      if(getDir(dirs,'L',source[i],destination[i])=='L'){<br>        retval[i]="LEFT";<br>        }<br>      else if(getDir(dirs,'R',source[i],destination[i])=='R'){<br>        retval[i]="RIGHT";<br>        }<br>      else{<br>        retval[i]="UNKNOWN";<br>        }<br>      }<br>    return retval;<br>    }<br>  }<br></td>