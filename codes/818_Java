<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class Average {<br>  public int belowAvg(int[] math, int[] verbal) {<br>    double ret = accum(math) + accum(verbal);<br>    ret = (double) ret / (double) math.length;<br>    int count = 0;<br>    for (int i=0;i&lt;math.length;i++) { <br>      if (math[i] + verbal[i] &lt; ret) count++;<br>    }<br>    return count;<br>    <br>  }<br>  <br>/* ***********************TEMPLATE CODE BEGINS HERE *************************/<br>  class Pair implements Comparable {<br>    int x,y;<br>    Pair(int a, int b) { x = a; y = b; }<br>    public int compareTo(Object o) {Pair a = (Pair) o; int temp = x-a.x; if<br>(temp!=0) return temp; return y-a.y; }<br>  }<br>  Pair mp(int x, int y) { return new Pair(x,y); }<br>  int abs(int a) { return Math.abs(a); }<br>  int max(int a, int b) { return Math.max(a, b); }<br>  int min(int a, int b) { return Math.min(a, b); }<br>  int accum(int[] a) { int tot = 0; for(int i=0;i&lt;a.length;i++) tot+=a[i]; return<br>tot; }<br>  void swap(int[] a, int i, int j) { int t = a[i]; a[i] = a[j]; a[j] = t; }<br>  long abs(long a) { return Math.abs(a); }<br>  long max(long a, long b) { return Math.max(a, b); }<br>  long min(long a, long b) { return Math.min(a, b); }<br>  long accum(long[] a) { long tot = 0; for(int i=0;i&lt; a.length;i++) tot+=a[i];<br>return tot; }<br>  double abs(double a) { return Math.abs(a); }<br>  double max(double a, double b) { return Math.max(a, b); }<br>  double min(double a, double b) { return Math.min(a, b); }<br>  double accum(double[] a) { double tot=0; for(int i=0;i&lt;a.length;i++) tot+=a[i];<br>return tot; }<br>/* ***********************TEMPLATE CODE ENDS HERE ****************************/<br> <br>}<br> <br>// Powered by PopsEdit<br></td>