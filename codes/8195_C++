<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;climits&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;ctime&gt;<br>#include &lt;functional&gt;<br>#include &lt;queue&gt;<br><br>using namespace std;<br><br>class StudentEnrollment<br>{<br>    public :<br>    vector &lt;string&gt; checkClasses(vector &lt;string&gt; names, vector &lt;int&gt; spaces, vector &lt;string&gt; queries)<br>{<br>    map &lt;string, int&gt; Map;<br>    vector &lt;string&gt; Ans;<br>    for (int I = 0; I &lt; names.size(); I ++)<br>        Map[names[I]] = spaces[I];<br>    for (int I = 0; I &lt; queries.size(); I ++)<br>        if (Map.find(queries[I]) == Map.end())<br>            Ans.push_back("DOES NOT EXIST");<br>        else<br>        {<br>            if (Map[queries[I]] &gt; 0)<br>            {<br>                Map[queries[I]] --;<br>                Ans.push_back("GOOD");<br>            }<br>            else<br>                Ans.push_back("NOT GOOD");<br>        }<br>    return Ans;<br>} <br>    <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>