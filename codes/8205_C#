<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class SausagesProductionScheduler {<br>  const int MAX_LIMIT = 6000;<br>  <br>  public int maxCount(string[] lowerPercentage, string[] upperPercentage, int[] limits) {<br>    int n = lowerPercentage.Length;<br>    int[] minA = new int[n];<br>    int[] maxA = new int[n];<br>    for (int i = 0; i &lt; n; ++i)<br>    {<br>      int[] lp = Array.ConvertAll&lt;string, int&gt;(lowerPercentage[i].Split(' '), int.Parse);<br>      int[] up = Array.ConvertAll&lt;string, int&gt;(upperPercentage[i].Split(' '), int.Parse);<br>      minA[i] = Math.Max(lp[0], 100 - up[1]);<br>      maxA[i] = Math.Min(up[0], 100 - lp[1]);<br>    }<br>    bool[,] can = new bool[n + 1, MAX_LIMIT + 1];<br>    can[0, 0] = true;<br>    for (int i = 0; i &lt; n; ++i)<br>      for (int cnt = i; cnt &gt;= 0; --cnt)<br>        for (int a = 0; a &lt;= MAX_LIMIT; ++a)<br>          if (can[cnt, a])<br>            for (int use = minA[i]; use &lt;= maxA[i]; ++use)<br>              can[cnt + 1, a + use] = true;<br>    int res = 0;<br>    for (int cnt = 1; cnt &lt;= n; ++cnt)<br>    {<br>      int minCan = Math.Max(0, 100 * cnt - limits[1]);<br>      int maxCan = Math.Min(limits[0], 100 * cnt);<br>      for (int a = minCan; a &lt;= Math.Min(maxCan, MAX_LIMIT); ++a)<br>        if (can[cnt, a])<br>          res = cnt;<br>    }<br>    return res;<br>  }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>