<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class Barracks {<br>  public int attack(int myUnits, int barHp, int unitsPerRound) {<br>        barHp -= myUnits;<br>        if (barHp &lt;= 0)<br>            return 1;<br>        int res = int.MaxValue;<br>        int extras = Math.Max(0, myUnits - unitsPerRound);<br>        for (int barDieAt = 1; barDieAt &lt; 1000000; ++barDieAt)<br>        {<br>            barHp -= extras;<br>            if (barHp &lt;= 0)<br>            {<br>                res = Math.Min(res, barDieAt + 1);<br>                break;<br>            }<br>            int whole = barHp / (myUnits - extras);<br>            int rem = barHp % (myUnits - extras);<br>            int total = whole;<br>            if (rem &gt; 0)<br>                total += 1;<br>            if (total &gt; barDieAt)<br>                continue;<br>            long theyKill = Math.Max(0, (unitsPerRound - (myUnits - extras - rem))) * (whole + 1) + (unitsPerRound) * whole * (long)(whole + 1) / 2;<br>            long they = Math.Max(0, (unitsPerRound - (myUnits - extras - rem))) + unitsPerRound * whole;<br>            long we = myUnits - theyKill;<br>            int at = barDieAt + 1;<br>            while (they &gt; 0 &amp;&amp; we &gt; 0)<br>            {<br>                ++at;<br>                they -= we;<br>                if (they &gt; 0)<br>                    we -= they;<br>            }<br>            if (we &gt; 0)<br>                res = Math.Min(res, at);<br>        }<br>        if (res == int.MaxValue)<br>            res = -1;<br>        return res;<br>  }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>