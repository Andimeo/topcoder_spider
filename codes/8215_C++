<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class RevealTriangle {<br>public:<br>  vector &lt;string&gt; calcTriangle(vector &lt;string&gt;);<br>};<br> <br>vector &lt;string&gt; RevealTriangle::calcTriangle(vector &lt;string&gt; s) {<br>  int n = s.size(), i, j, k, p;<br>  for (i=n-2;i&gt;=0;i--) {<br>    k = 0;<br>    for (j=0;j&lt;n-i;j++)<br>      if (s[i][j] != '?') {<br>        k = j;<br>        break;<br>      }<br>    for (j=k-1;j&gt;=0;j--) {<br>      p = s[i+1][j]-s[i][j+1];<br>      if (p &lt; 0) p += 10;<br>      s[i][j] = p+48;<br>    }<br>    for (j=k+1;j&lt;n-i;j++) {<br>      p = s[i+1][j-1]-s[i][j-1];<br>      if (p &lt; 0) p += 10;<br>      s[i][j] = p+48;<br>    }<br>  }<br>  return s;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>