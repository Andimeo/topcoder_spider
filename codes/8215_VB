<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Public Class RevealTriangle<br>    Public Function calcTriangle(ByVal questionMarkTriangle As String()) As String()<br>        Dim x As Integer, y As Integer, r As Integer, ok As Boolean<br>        Dim qmt As String()<br>        qmt = questionMarkTriangle.Clone<br>        'Array.Copy(questionMarkTriangle, qmt, questionMarkTriangle.Length)<br>        Do<br>            ok = True<br>            For y = qmt.Length - 1 To 0 Step -1<br>                For x = 0 To qmt.Length - 1 - y<br>                    If isQM(qmt, x, y) Then<br>                        r = calcVal(qmt, x, y)<br>                        If r &lt;&gt; -1 Then<br>                            qmt(y) = qmt(y).Substring(0, x) + Trim(Str(r)) + qmt(y).Substring(x + 1)<br>                        End If<br>                        ok = False<br>                    End If<br>                Next<br>            Next<br>        Loop Until ok = True<br>        Return qmt<br>    End Function<br>    Function calcVal(ByVal qmt As String(), ByVal x As Integer, ByVal y As Integer) As Integer<br>        Dim r As Integer<br>        If (Not isQM(qmt, x, y - 1)) And (Not isQM(qmt, x + 1, y - 1)) Then<br>            r = CInt(Val(qmt(y - 1).Substring(x, 1)) + Val(qmt(y - 1).Substring(x + 1, 1))) Mod 10<br>            Return r<br>        End If<br>        If (Not isQM(qmt, x, y + 1)) And (Not isQM(qmt, x + 1, y)) Then<br>            r = CInt(10 + Val(qmt(y + 1).Substring(x, 1)) - Val(qmt(y).Substring(x + 1, 1))) Mod 10<br>            Return r<br>        End If<br>        If (Not isQM(qmt, x - 1, y + 1)) And (Not isQM(qmt, x - 1, y)) Then<br>            r = CInt(10 - Val(qmt(y).Substring(x - 1, 1)) + Val(qmt(y + 1).Substring(x - 1, 1))) Mod 10<br>            Return r<br>        End If<br>        Return -1<br>    End Function<br><br>    Function isQM(ByVal qmt As String(), ByVal x As Integer, ByVal y As Integer) As Boolean<br>        If x &lt; 0 Or y &lt; 0 Then<br>            Return True<br>        End If<br>        If y &gt; qmt.GetUpperBound(0) Then<br>            Return True<br>        End If<br>        If x &gt; qmt.GetUpperBound(0) - y Then<br>            Return True<br>        End If<br>        If qmt(y).Substring(x, 1) = "?" Then<br>            Return True<br>        End If<br>        Return False<br>    End Function<br>End Class<br></td>