<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br>using System.Text;<br><br>class PlayerExtraction<br>{<br>    class Point<br>    {<br>        public int x;<br>        public int y;<br>    }<br><br>    int run(char[][] photo, int i, int j, int k, ref int x1, ref int y1, ref int x2, ref int y2)<br>    {<br>        int res = 1;<br>        if (photo[i][j] != '0' + k) return 0;<br>        photo[i][j] = 'Z';<br>        if (2 * i &lt; y1) y1 = 2 * i;<br>        if (2 * j &lt; x1) x1 = 2 * j;<br>        if (2 * i+2 &gt; y2) y2 = 2 * i+2;<br>        if (2 * j+2 &gt; x2) x2 = 2 * j+2;<br>        if (i &lt; photo.Length - 1 &amp;&amp; photo[i + 1][j] == '0' + k) res += run(photo,<br>                      i + 1, j, k, ref x1, ref y1, ref x2, ref y2);<br>        if (i &gt; 0 &amp;&amp; photo[i - 1][j] == '0' + k) res += run(photo,<br>                      i - 1, j, k, ref x1, ref y1, ref x2, ref y2);<br>        if (j &lt; photo[0].Length - 1 &amp;&amp; photo[i][j+1] == '0' + k) res += run(photo,<br>              i, j+1, k, ref x1, ref y1, ref x2, ref y2);<br>        if (j &gt; 0 &amp;&amp; photo[i][j-1] == '0' + k) res += run(photo,<br>              i, j - 1, k, ref x1, ref y1, ref x2, ref y2);<br>        return res;<br>    }<br><br>    int psort(Point p1, Point p2)<br>    {<br>        int c;<br>        c = ((IComparable&lt;int&gt;)p1.x).CompareTo(p2.x);<br>        if (c != 0) return c;<br>        return ((IComparable&lt;int&gt;)p1.y).CompareTo(p2.y);<br>    }<br><br>    public string[] extractPlayers(string[] photo1, int k, int threshold)<br>    {<br>        char[][] photo;<br>        List&lt;Point&gt; pts = new List&lt;Point&gt;();<br>        int i,j,n,m,r;<br>        int x1, y1, x2, y2;<br>        n=photo1.Length;<br>        m=photo1[0].Length;<br>        photo = new char[n][];<br>        for (i = 0; i &lt; n; ++i)<br>        {<br>            photo[i] = new char[m];<br>            for (j = 0; j &lt; m; ++j) photo[i][j] = photo1[i][j];<br>        }<br>        for (i=0;i&lt;n;++i)<br>            for (j = 0; j &lt; m; ++j)<br>            {<br>                x1 = 2 * m;<br>                y1 = 2 * n;<br>                x2 = 0;<br>                y2 = 0;<br>                r = run(photo, i, j, k, ref x1, ref y1, ref x2, ref y2);<br>                if (4 * r &gt;= threshold)<br>                {<br>                    Point point = new Point();<br>                    point.x = /*2*n -*/ (x2 + x1) / 2;<br>                    point.y = (y2 + y1) / 2;<br>                    pts.Add(point);<br>                }<br>            }<br>        pts.Sort(psort);<br>        List&lt;string&gt; res = new List&lt;string&gt;();<br>        for (i = 0; i &lt; pts.Count; ++i)<br>            res.Add(String.Format("{0} {1}", pts[i].x, pts[i].y));<br>        return res.ToArray();<br>    }<br><br>    static void Main(string[] args)<br>    {<br>        string[] plrs ={"33JUBU33",<br>            "3U3O4433",<br>            "O33P44NB",<br>            "PO3NSDP3",<br>            "VNDSD333",<br>            "OIVNFD33"};<br>        PlayerExtraction pe = new PlayerExtraction();<br>        string[] res = pe.extractPlayers(plrs, 3, 16);<br>        foreach (string r in res)<br>            Console.WriteLine(r);<br>    }<br>}<br></td>