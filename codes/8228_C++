<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br>typedef long long LL;<br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br>typedef set&lt;string&gt; SS;<br>typedef map&lt;string, int&gt; MSI;<br>int bit(LL x){int y=0;while(x){y+=(x&amp;1);x&gt;&gt;=1;}return y;}<br>LL gcd(LL x,LL y){return(y==0)?x:gcd(y,x%y);}<br>string i2s(LL x){ostringstream o;o&lt;&lt;x;return o.str();}<br>LL s2i(string s){istringstream i(s);LL x;i&gt;&gt;x;return x;}<br><br>class CompilingDecksWithJokers<br>{<br>public:<br>int maxCompleteDecks(vector &lt;int&gt; cards, int jokers);<br>};<br>VI a;<br>int n;<br>int CompilingDecksWithJokers::maxCompleteDecks(vector &lt;int&gt; _a, int jokers)<br>{<br>  a = _a;<br>  sort(a.begin(), a.end());<br>  n = a.size();<br>  LL left, right, mid;<br>  left = 1; right = 2147483647;<br>  bool flag;<br>  while (left &lt;= right)<br>  {<br>    mid = (left + right) / 2;<br>    LL used = 0;<br>    for (int i = 0; i &lt; n; i++) if (a[i] &lt; mid) used += mid - a[i];<br>    if (used &lt;= mid &amp;&amp; jokers &gt;= used)<br>    {<br>      flag = true;<br>      left = mid + 1;<br>    }<br>    else<br>    {<br>      flag = false;<br>      right = mid - 1;<br>    }<br>  } <br>  if (!flag) mid--;<br>  return mid;<br>}<br></td>