<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br> <br>public class PointsOnACircle<br>{<br>  int calc (List&lt;bool&gt; seq)<br>  {<br>    int n = seq.Count;<br>    <br>    for (int i = 0; i &lt; n; ++i)<br>      seq.Add (seq[i]);<br>    <br>    int start = 0;<br>    <br>    for (; start &lt; n; ++start)<br>      if (!seq[start])<br>        break;<br>    <br>    if (start == n)<br>      return n / 2;<br>    <br>    bool was = false;<br>    int cnt = 0;<br>    for (int i = start; i &lt; start + n; ++i)<br>      if (!seq[i])<br>        was = false;<br>       else<br>      if (!was)<br>        was = true;<br>       else<br>    {<br>      was = false;<br>      ++cnt;<br>    }<br>    <br>    <br>    return cnt;<br>  }<br>  <br>  public int color (string[] points)<br>  {<br>    bool[] have = new bool[360];<br>    <br>    foreach (string s in string.Join ("", points).Split (' '))<br>      have[int.Parse (s)] = true;<br>    <br>    int max = 0;<br>    <br>    for (int rot = 1; rot &lt; 360; ++rot)<br>    {<br>      bool[] was = new bool[360];<br>      <br>      int can = 0;<br>      <br>      for (int s = 0; s &lt; 360; ++s)<br>        if (!was[s])<br>      {<br>        List&lt;bool&gt; numb = new List&lt;bool&gt; ();<br>        <br>        int x = s;<br>        while (!was[x])<br>        {<br>          was[x] = true;<br>          numb.Add (have[x]);<br>          x += rot;<br>          x %= 360;<br>        }<br>        <br>        can += calc (numb);<br>      }<br>      <br>      max = Math.Max (max, can);<br>    }<br>    <br>    return 2 * max;<br>  }<br>  <br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>