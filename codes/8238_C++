<td class="problemText" colspan="8" valign="middle" align="left">
            // greetings to you, for reading this<br><br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>typedef long long ll;<br>typedef vector&lt;int&gt; vi;<br><br>#define LS &lt;<br>#define Size(x) (int(x.size()))<br><br>// All macros with parameters "k,a,b" run the "k" variable in range [a,b)<br>#define FOR(k,a,b) for(typeof(a) k=(a); k LS (b); ++k)<br><br>// parse a space-delimited string into a vi<br>vi parsevi(string s) {<br>  s = s + " ";<br>  int q = 0;<br>  vi res;<br>  FOR(l,0, Size(s)) {<br>    if(s[l] == ' ') { res.push_back(q); q = 0;}<br>    else { q = q * 10 + s[l] - '0'; }<br>    }<br>  return res;<br>  }<br><br>// Greatest Common Divisor<br>ll gcd(ll x, ll y) {return x ? gcd(y%x,x) : y;}<br><br>#line 3 "PointsOnACircle.cc"<br><br>class PointsOnACircle {<br>  public:<br>  int color(vector &lt;string&gt; points) {<br>    // !FDI<br>    string s;<br>    FOR(u,0,Size(points)) s += points[u];<br>    vi deg = parsevi(s);<br>    int dg[360];<br>    FOR(k,0,360) dg[k] = 0;<br>    FOR(u,0,Size(deg)) dg[deg[u]] = 1;<br>    <br>    int best = 0;<br>    FOR(delta,1,181) {<br>      int dd = gcd(360, delta);<br>      int xdd = 360 / dd;<br>      <br>      int count = 0;<br><br>      FOR(k,0,dd) {<br>        FOR(u,0,xdd) if(dg[(k+u*delta)%360] == 0) {<br>          int last = 0;<br>          FOR(v,u+1,u+xdd+1)<br>          if(dg[(k+v*delta)%360] == 0) {<br>            count += last/2;<br>            last = 0;<br>            }<br>          else last++;<br>          goto nextk;<br>          }<br>        count += xdd/2;<br>        nextk: ;<br>        }<br>      <br>      if(count &gt; best) best = count;<br>      }<br><br>    return best*2;<br>    }<br>  };<br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>