<td class="problemText" colspan="8" valign="middle" align="left">
            import java.lang.Math;<br><br>public class PirateTreasure {<br>  public static double getDistance(int[] steps, String[] directions) {<br>    double x = 0, y = 0,r;<br>    for (int i=0; i&lt;steps.length; i++) {<br>      if (directions[i].compareTo("NORTH") == 0) {<br>        y += steps[i];<br>      } else <br>      if (directions[i].compareTo("SOUTH") == 0) {<br>        y -= steps[i];<br>      } else<br>      if (directions[i].compareTo("EAST") == 0) {<br>        x += steps[i];<br>      } else<br>      if (directions[i].compareTo("WEST") == 0) {<br>        x -= steps[i];<br>      } else<br>      if (directions[i].compareTo("NORTHEAST") == 0) {<br>        y += steps[i]/Math.sqrt(2);<br>        x += steps[i]/Math.sqrt(2);<br>      } else<br>      if (directions[i].compareTo("NORTHWEST") == 0) {<br>        y += steps[i]/Math.sqrt(2);<br>        x -= steps[i]/Math.sqrt(2);<br>      } else<br>      if (directions[i].compareTo("SOUTHEAST") == 0) {<br>        y -= steps[i]/Math.sqrt(2);<br>        x += steps[i]/Math.sqrt(2);<br>      } else<br>      if (directions[i].compareTo("SOUTHWEST") == 0) {<br>        y -= steps[i]/Math.sqrt(2);<br>        x -= steps[i]/Math.sqrt(2);<br>      }<br>    }<br>    return Math.sqrt(x*x+y*y);<br>  }<br>}<br></td>