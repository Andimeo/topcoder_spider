<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cctype&gt;<br>#include &lt;numeric&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iterator&gt;<br>#include &lt;sstream&gt;<br><br>using namespace std;<br><br>typedef pair&lt;int,int&gt; PII;<br>typedef vector&lt;PII&gt; VPII;<br>typedef long long LL;<br>typedef long double LD;<br>typedef vector&lt;int&gt; VI;<br><br>#define ST first<br>#define ND second<br>#define MP make_pair<br>#define PB push_back<br>#define FOR(i,a,b) for(int i=(a); i&lt;=(b); ++i)<br>#define FORD(i,a,b) for(int i=(a); i&gt;=(b); --i)<br>#define REP(i,n) for (int i=0; i&lt;(n); ++i)<br>#define FOREACH(it,X) for(__typeof((X).begin()) it=(X).begin(); it!=(X).end(); ++it)<br>#define ALL(X) (X).begin(),(X).end()<br>#define SIZE(X) (int)(X).size()<br><br>int x;<br>int dx[]={0,0,-1,1};<br>int dy[]={1,-1,0,0};<br>char litera[]={'U','D','L','R'};<br>set&lt;pair&lt;PII,PII&gt; &gt; zbior;<br><br>int moj_random(){<br>  x = (x * 25173 + 13849) % 65536;<br>  return x/16384;<br>}<br><br>class RandomWalks {<br>  public:<br>  string generateWalk(int seed) {<br>    x=seed;<br>    int px=0,py=0;<br>    string res;<br>    do{<br>      int ruch;<br>      while (1){<br>        ruch=moj_random();<br>        int nx=px+dx[ruch];<br>        int ny=py+dy[ruch];<br>        if (zbior.count(MP(MP(px,py),MP(nx,ny)))==0){<br>          zbior.insert(MP(MP(px,py),MP(nx,ny)));<br>          zbior.insert(MP(MP(nx,ny),MP(px,py)));<br>          break;<br>        }<br>      }<br>      px+=dx[ruch]; py+=dy[ruch];<br>      res+=litera[ruch];<br>      if (SIZE(res)&gt;200000) return string();<br>    } while (px!=0 || py!=0);<br>    if (SIZE(res)&lt;=40) return res;<br>    return res.substr(0,20)+"..."+res.substr(SIZE(res)-20);<br>  }<br>};<br><br><br>// Powered by FileEdit<br></td>