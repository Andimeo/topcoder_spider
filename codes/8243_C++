<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;memory&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;algorithm&gt;<br>using namespace std;<br><br>typedef long long Int;<br>typedef pair&lt;int,int&gt; PII;<br>typedef vector&lt;int&gt; VInt;<br><br>#define FOR(i, a, b) for(i = (a); i &lt; (b); ++i)<br>#define RFOR(i, a, b) for(i = (a) - 1; i &gt;= (b); --i)<br>#define CLEAR(a, b) memset(a, b, sizeof(a))<br>#define SIZE(a) int((a).size()) <br>#define ALL(a) (a).begin(),(a).end() <br>#define PB push_back<br>#define MP make_pair<br><br>const int DX[] = {-1, 1, 0, 0};<br>const int DY[] = {0, 0, -1, 1};<br><br>vector &lt;string&gt; A;<br>int B[64][64];<br>int N, M;<br><br>void dfs(int x, int y)<br>{<br>  B[x][y] = 1;<br><br>  int i;<br>  FOR(i, 0, 4)<br>  {<br>    int xx = x + DX[i];<br>    int yy = y + DY[i];<br><br>    if(xx &lt; 0 || xx &gt;= N || yy &lt; 0 || yy &gt;= M || B[xx][yy] != 0 || A[xx][yy] &lt; A[x][y])<br>      continue;<br><br>    dfs(xx, yy);<br>  }<br>}<br><br>class FloodRelief {<br>  public:<br>  int minimumPumps(vector &lt;string&gt; _A) <br>  {<br>    A = _A;<br>    N = SIZE(A);<br>    M = SIZE(A[0]);<br><br>    CLEAR(B, 0);<br>    int res = 0;<br>    int i, j, k;<br>    FOR(k, 'a', 'z' + 1)<br>      FOR(i, 0, N)<br>        FOR(j, 0, M)<br>          if(B[i][j] == 0 &amp;&amp; A[i][j] == k)<br>          {<br>            ++res;<br>            dfs(i, j);<br>          }<br><br>    return res;<br>  }<br><br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>