<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define FOR(i,a,b) for(int i=(a);i&lt;(b);++i)<br>#define REP(i,n) FOR(i,0,n)<br>#define ALL(a) (a).begin(),a.end()<br>#define SORT(a) sort(ALL(a))<br>#define SZ(a) ((int) a.size())<br>#define pb push_back<br> <br>class TurningLightOn {<br>public:<br>  int minFlips(vector &lt;string&gt;);<br>};<br> <br>int TurningLightOn::minFlips(vector &lt;string&gt; a) {<br>  int res = 0;<br>  for (int i = SZ (a) - 1; i &gt;= 0; --i)<br>    for (int j = SZ (a[0]) - 1; j &gt;= 0; --j) {<br>      if (a[i][j] == '0') {<br>        ++res;<br>        REP (y, i + 1)<br>          REP (x, j + 1)<br>            a[y][x] = 1-(a[y][x] - '0') + '0';<br>      }<br>    }<br>  return res;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>