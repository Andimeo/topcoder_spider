<td class="problemText" colspan="8" valign="middle" align="left">
            public class JumpingBoard {<br>  public int maxJumps(String[] board)<br>  {<br>    int[][] b=new int[board.length][board[0].length()];<br>    int n,m;<br>    n=board.length;<br>    m=board[0].length();<br>    int[][] f=new int[n][m];<br>    for (int i=0;i&lt;n;i++)<br>    {<br>      for (int j=0;j&lt;m;j++)<br>      {<br>        b[i][j]=board[i].charAt(j)-'0';<br>        if (board[i].charAt(j)=='H') f[i][j]=1;<br>      }<br>      <br>    }<br>    <br>    int cur=2;<br>    while (true)<br>    {<br>      boolean fl=false;<br>      for (int i=0;i&lt;n;i++)<br>      {<br>        for (int j=0;j&lt;m;j++)<br>        {<br>          if (f[i][j]==0)<br>          {<br>            if (b[i][j]=='H'-'0')<br>            {<br>              f[i][j]=cur;<br>              fl=true;<br>            }<br>            else<br>            {<br>              boolean q=false; <br>              if (i+b[i][j]&lt;n &amp;&amp; (f[i+b[i][j]][j]==0 || f[i+b[i][j]][j]==cur)) q=true;<br>              if (i-b[i][j]&gt;=0 &amp;&amp; (f[i-b[i][j]][j]==0 || f[i-b[i][j]][j]==cur)) q=true;<br>              if (j+b[i][j]&lt;m &amp;&amp; (f[i][j+b[i][j]]==0 || f[i][j+b[i][j]]==cur)) q=true;<br>              if (j-b[i][j]&gt;=0 &amp;&amp; (f[i][j-b[i][j]]==0 || f[i][j-b[i][j]]==cur)) q=true;<br>              <br>              if (!q)<br>              {<br>                f[i][j]=cur;<br>                fl=true;<br>              }<br>            }<br>          }<br>        }<br>      }<br>      cur++;<br>      if (f[0][0]&gt;0 || !fl) break;<br>    }<br><br>    if (f[0][0]&gt;0) return f[0][0]-1; else return -1;<br>  }<br>}<br></td>