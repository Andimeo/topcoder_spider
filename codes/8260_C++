<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;ctime&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br><br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;iostream&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;utility&gt;<br>#include &lt;vector&gt;<br><br>using namespace std; <br> <br><br>const int INF = 1000000000;<br>int cost[50], mask[50], n, memo[50][1&lt;&lt;4];<br><br>int rec( int pos, int mask ) {<br>   if( pos == n ) {<br>      if( mask == 15 ) return 0;<br>      return INF;<br>   }<br><br>   int &amp;ret = memo[pos][mask];<br>   if( ret &gt;= 0 ) return ret;<br><br>   ret = rec( pos+1, mask );<br>   ret &lt;?= rec( pos+1, mask|::mask[pos] ) + cost[pos];<br>   return ret;<br>}<br><br> class TraditionalMarriage { <br> public: <br>    int getLuckyItems( vector &lt;string&gt; _p, vector &lt;int&gt; weight ) {<br>      n = _p.size();<br>      for( int i = 0; i &lt; n; ++i ) {<br>         _p[i] += ",";<br>         istringstream IN( _p[i] );<br>         int m = 0;<br>         for( string t; getline( IN, t, ',' ); ) {<br>            if( t == "new" ) m |= 1;<br>            if( t == "old" ) m |= 2;<br>            if( t == "borrowed" ) m |= 4;<br>            if( t == "blue" ) m |= 8;<br>         }<br>         mask[i] = m;<br>         cost[i] = weight[i];<br>      }<br><br>      memset( memo, -1, sizeof memo );<br>      int ret = rec( 0, 0 );<br>      if( ret &gt;= INF ) return -1;<br>      return ret;<br>   }<br>     <br>   <br>  <br> }; <br> <br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>