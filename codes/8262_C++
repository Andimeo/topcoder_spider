<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;fstream&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;deque&gt;<br>#include &lt;math.h&gt;<br>#include &lt;sstream&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#define beg 100000000<br>#define pb push_back<br>#define mp make_pair<br>#define sz size()<br>#define iss istringstream<br>#define oss ostringstream<br>#define it iterator<br>#define pf pop_front()<br>#define eps 1e-9<br>#define nd second<br>#define st first<br>#define pi 3.141592653589793238462643<br>#define lson(x) 2*x<br>#define rson(x) 2*x+1<br> <br>using namespace std;<br> <br>class SpiralRoute {<br>public:<br>  vector &lt;int&gt; thronePosition(int, int);<br>};<br> <br>pair&lt;int, int&gt; kur(int n, int m) {<br>  if(n == 1) return mp(0, m-1);<br>  if(m == 1) return mp(n-1, 0);<br>  if(n == 2 || m == 2) return mp(0, 1);<br>  pair&lt;int, int&gt; ats = kur(n-2, m-2);<br>  ats.st += 1;<br>  ats.nd += 1;<br>  return ats;<br>}<br> <br>vector &lt;int&gt; SpiralRoute::thronePosition(int w, int l) {<br>  pair&lt;int, int&gt; ats = kur(w, l);<br>  vector&lt;int&gt; a;<br>  a.pb(ats.st);<br>  a.pb(ats.nd);<br>  return a;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>