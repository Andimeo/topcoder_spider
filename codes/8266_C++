<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;memory&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;algorithm&gt;<br> <br>using namespace std;<br> <br>typedef long long Int;<br>typedef long double Double;<br>typedef vector&lt;int&gt; VInt;<br>typedef pair&lt;int, int&gt; PII;<br> <br>#define FOR(i, n, m) for(i = (n); i &lt; (m); ++i)<br>#define RFOR(i, n, m) for(i = (n) - 1; i &gt;= (m); --i)<br>#define CLEAR(a, b) memset(a, b, sizeof(a))<br>#define SIZE(a) int((a).size())<br>#define ALL(a) (a).begin(), (a).end()<br>#define MP make_pair<br>#define PB push_back<br> <br>int Res[2][64][64];<br>int C[128][128];<br> <br>int F(int n, int m, int k)<br>{<br>  int&amp; res = Res[k][n][m];<br>  if(res != -1)<br>  return res;<br>  <br>  if(n == 0)<br>    return res = (k == 0 ? 1 : 0);<br>  <br>  if(m == 1)<br>    return res = (k == (n &amp; 1) ? 1 : 0);<br>  <br>  if(m &gt; n)<br>    return res = F(n, n, k);<br>    <br>  res = F(n, m - 1, k);<br>  int r = F(m - 1, m - 1, 0);<br>  if(r &gt; 0)  <br>    for(int i = 1; i*m &lt;= n; ++i)<br>    {<br>      int N = r + i - 1;<br>      int K = i;<br>      Int temp = 1;<br>      int j;<br>      FOR(j, 0, K)<br>        temp *= N - j;<br>      FOR(j, 0, K)<br>        temp /= j + 1;  <br>      res += Int(temp)*F(n - i*m, m - 1, k ^ (i &amp; 1));<br>    }  <br>    <br>  return res;<br>}<br> <br>class OddGraph {<br>  public:<br>  int count(int n) <br>  {<br>    int i, j;<br>    FOR(i, 0, 128)<br>      C[i][i] = C[i][0] = 1;<br>    FOR(i, 0, 128)<br>    FOR(j, 1, i)    <br>      C[i][j] = C[i - 1][j - 1] + C[i - 1][j];<br>    <br>    CLEAR(Res, -1);<br>    return F(n, n, n &amp; 1);<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>