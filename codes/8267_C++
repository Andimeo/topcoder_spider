<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;   <br>#include &lt;iostream&gt;   <br>#include &lt;sstream&gt;   <br>#include &lt;string&gt;   <br>#include &lt;vector&gt;   <br>#include &lt;queue&gt;   <br>#include &lt;set&gt;   <br>#include &lt;map&gt;   <br>#include &lt;cstdio&gt;   <br>#include &lt;cstdlib&gt;   <br>#include &lt;cctype&gt;   <br>#include &lt;cmath&gt;   <br>#include &lt;list&gt;   <br>using namespace std;   <br><br>#define PB push_back <br>#define MP make_pair <br>#define SZ(v) ((int)(v).size()) <br>#define FOR(i,a,b) for(int i=(a);i&lt;(b);++i) <br>#define REP(i,n) FOR(i,0,n) <br>#define FORE(i,a,b) for(int i=(a);i&lt;=(b);++i) <br>#define REPE(i,n) FORE(i,0,n) <br>#define FORSZ(i,a,v) FOR(i,a,SZ(v)) <br>#define REPSZ(i,v) REP(i,SZ(v)) <br>typedef long long ll; <br><br>int nrd[12]={31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30 ,31};<br>char mname[12][30]={"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November" , "December"};<br><br>int d[256][256];<br><br>int calc(const string &amp;a,const string &amp;b) {<br>  int ret=0;<br>  REPSZ(i,a) ret+=d[tolower(a[i])][tolower(b[i])];<br>  return ret;<br>}<br><br>const char keys[4][20]={"1234567890","qwertyuiop","asdfghjkl","zxcvbnm"};<br><br>class DateFieldCorrection {   <br>public:   <br>  string correctDate(string input) {<br>    REP(i,256) REP(j,256) d[i][j]=i==j?0:INT_MAX;<br>    REP(i,4) for(int j=0;keys[i][j+1]!='\0';++j) d[keys[i][j]][keys[i][j+1]]&lt;?=1;<br>    REP(i,3) for(int j=0;keys[i][j]!='\0'&amp;&amp;keys[i+1][j]!='\0';++j) d[keys[i][j]][keys[i+1][j]]&lt;?=1;<br>    REP(i,3) for(int j=1;keys[i][j]!='\0'&amp;&amp;keys[i+1][j-1]!='\0';++j) d[keys[i][j]][keys[i+1][j-1]]&lt;?=1;<br>    for(int j=1;keys[3][j]!='\0';++j) d[keys[3][j]][' ']&lt;?=3;<br>    REP(i,256) REP(j,256) d[i][j]&lt;?=d[j][i];<br>    REP(k,256) REP(i,256) REP(j,256) if(d[i][k]!=INT_MAX&amp;&amp;d[k][j]!=INT_MAX) d[i][j]&lt;?=d[i][k]+d[k][j];<br>    <br>    <br>    int best=INT_MAX; string ret="?";<br>    REP(m,12) FORE(d,1,nrd[m]) {<br>      char buff[100]; sprintf(buff,"%s %d",mname[m],d); string s=buff;<br>      if(SZ(s)==SZ(input)) {<br>        int cur=calc(s,input);<br>        if(cur&lt;best) best=cur,ret=s;<br>      }<br>    }<br>    printf("%d\n",best);<br>    return ret;<br>  }<br>};<br></td>