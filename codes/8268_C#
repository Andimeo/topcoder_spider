<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Text;<br>public class DukeOnChessBoard {<br>  public int [,] board;<br>  public string GetNext(string curm,int n)<br>  {<br>    int ver = curm[0]-'a';<br>    int gor = curm[1]-'0';<br>    Console.WriteLine("ver="+ver+" gor="+gor);<br>    string ans="";<br>    if ((ver&lt;n-1)&amp;&amp;(board[ver+1,gor]!=1))<br>    {<br>      //pravo<br>      board[ver+1,gor]=1;<br>      ver++;<br>      ans+=(char)('a'+ver);<br>      ans+=(char)('0'+gor);<br>      Console.WriteLine("VPRAVO"+ans);<br> <br>      return ans;<br>    }<br>    if ((gor&lt;n)&amp;&amp;(board[ver,gor+1]!=1))<br>    {<br>      board[ver,gor+1]=1;<br>      gor++;  <br>      ans+=(char)('a'+ver);<br>      ans+=(char)('0'+gor);<br>      Console.WriteLine("VVERH"+ans);<br>      return ans;<br>    }<br>    if ((gor&gt;1)&amp;&amp;(board[ver,gor-1]!=1))<br>    {<br>      board[ver,gor-1]=1;<br>      gor--;  <br>      ans+=(char)('a'+ver);<br>      ans+=(char)('0'+gor);<br>      Console.WriteLine("VNIZ"+ans);<br>      return ans;<br>    }<br>    if ((ver&gt;0)&amp;&amp;(board[ver-1,gor]!=1))<br>    {<br>      board[ver-1,gor]=1;<br>      ver--;  <br>      ans+=(char)('a'+ver);<br>      ans+=(char)('0'+gor);<br>            Console.WriteLine("VLEVO"+ans);<br>      return ans;<br>    }<br>    return "NO";<br>    <br>    <br>  }<br>  <br>  public string dukePath(int n, string initPosition) {<br>    string [] ans = new string[1000];<br> <br>    board  = new int [n+2,n+2];<br>    int cnt=1;<br>    int ver = initPosition[0]-'a';<br>    int gor = initPosition[1]-'0';<br>    board[ver,gor]=1;<br>    ans[1]=initPosition;<br>    while (true)<br>    {<br>    <br>      string temp=GetNext(ans[cnt],n);<br>      if (temp!="NO")<br>      {<br>        Console.WriteLine(temp);<br>        cnt++;<br>        ans[cnt]=temp;<br>      }<br>      else<br>      {<br>        break;  <br>      }<br>    }<br>    string anss=initPosition;<br>    <br>    Console.WriteLine(cnt);<br>    <br>    for (int i=2;i&lt;=cnt;i++)<br>    {<br>      Console.WriteLine(anss);<br>      anss+="-";<br>      anss+=ans[i];      <br>    }<br>    <br>    string newans="";<br>    if (anss.Length&lt;=40)<br>    {<br>      newans=anss;<br>    }<br>    else<br>    {<br>      int kkk=anss.Length;<br>      Console.WriteLine("kkk="+kkk);<br>      for (int i=0;i&lt;20;i++)<br>      {<br>        newans+=anss[i];  <br>      }<br>      newans+="...";<br>      int k=kkk-20;<br>      while (k&lt;kkk)<br>      {<br>        newans+=anss[k];  <br>        k++;<br>      }<br>    }<br>//    anss+=ans[cnt];<br>    return newans;<br>    <br>  }<br>}<br> <br>// Powered by PopsEdit<br></td>