<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>using namespace std;<br><br>class DukeOnChessBoard{<br>int N;<br>bool valid(int x, int y){<br>  return (0&lt;=x) &amp;&amp; (x&lt;N) &amp;&amp; (0&lt;=y) &amp;&amp; (y&lt;N);<br>}<br>string tos(int x, int y){<br>  char xx[3];<br>  xx[0]=x+'a'; xx[1]=y+'1';<br>  xx[2]=0;<br>  return xx;<br>}<br>public: string dukePath(int n, string iP){<br>  N=n;<br>  int x=iP[0]-'a';<br>  int y=iP[1]-'1';<br>  string ans=tos(x,y);<br>  int a[10][10];<br>  memset(a,0,sizeof(a));<br>  a[x][y]=1;<br>  while(1){<br>    a[x][y]=1;<br>    int dx[4]={  0,  1,  -1,  0};<br>    int dy[4]={  1,  0,  0,  -1};<br>    int va=-1; string vass;<br>    for(int i=0;i&lt;4;i++){<br>      int NX=x+dx[i];<br>      int NY=y+dy[i];<br>      if(!valid(NX,NY) || a[NX][NY])<br>        continue;<br>      if(va&lt;0 || tos(NX,NY)&gt;vass  )<br>        va=i, vass=tos(NX,NY);<br>    }<br>    if(va&lt;0)<br>      break;<br>    ans+="-";<br>    ans+=vass;<br>    x+=dx[va];<br>    y+=dy[va];<br>    a[x][y]=1;<br>  }<br>  int L=ans.size();<br>  <br>  if(L&gt;40){<br>    ans=ans.substr(0,20)+"..."+ans.substr(L-20,20);<br>  }<br>  return ans;<br>}<br>};//c<br></td>