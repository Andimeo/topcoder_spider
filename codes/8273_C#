<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text; <br><br>public class SolvePolynomial<br>{<br>    int[] a;<br>    int lX, lY;<br>    int n;<br>    List&lt;int&gt; lst;<br><br>    bool check(int step, long sum, long v)<br>    {<br>        if (sum % v != 0) return false;<br>        if (step == n)<br>        {<br>            return sum == 0;<br>        }<br>        return check(step + 1, (sum / v) - a[step + 1], v);<br>    }<br>    void go(long v)<br>    {<br>        if (check(0, -a[0], v))<br>        {<br>            lst.Add((int)v);<br>        }<br>    }<br>    public int[] integerRoots(int[] X, int[] Y, int __n)<br>    {<br>        n = __n;<br>        a = new int[10005];<br>        lX = X.Length;<br>        lY = Y.Length;<br>        int i;<br>        for (i = 0; i &lt;= n; i++)<br>        {<br>            int p = i % lX;<br>            int q = (i + Y[i % lY]) % lX;<br>            a[i] = X[p];<br>            X[p] = X[q];<br>            X[q] = a[i];<br>        }<br>        lst = new List&lt;int&gt;();<br>        bool zero = false;<br>        while (a[0] == 0)<br>        {<br>            zero = true;<br>            for (i = 0; i &lt; n; i++) a[i] = a[i + 1];<br>            n--;<br>        }<br>//        cout(a[0] + " " + a[1]);<br>//        cout(n);<br>        if (zero) lst.Add(0);<br>        for (i = 1; (long)i * i &lt;= Math.Abs(a[0]); i++)<br>            if (a[0] % i == 0)<br>            {<br>                go(i);<br>                go(-i);<br>                if ((long)i*i &lt; Math.Abs(a[0]))<br>                {<br>                    go(a[0] / i);<br>                    go(-a[0] / i);<br>                }<br>            }<br>        lst.Sort();<br>        return lst.ToArray();<br>    }<br><br>    // helper<br>    void cout(object o) { System.Console.WriteLine(o); } <br><br>};<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>