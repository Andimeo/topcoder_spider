<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define FOR(i,n) for (int i=0; i&lt;(int)(n); i++)<br>typedef long long int64;<br>typedef vector&lt;int&gt; vi;<br> <br>struct SolvePolynomial {<br>  set&lt;int&gt; ans;<br>  int n,a[20000];<br>  void check(int x) {<br>    int64 tmp=0;<br>    for (int i=n; i&gt;=0; i--) {<br>      tmp=tmp*x+a[i];<br>      if (abs(x)!=1 &amp;&amp; abs(tmp)&gt;2000000000) return;<br>    }<br>    if (!tmp) ans.insert(x);<br>  }<br>  vector &lt;int&gt; integerRoots(vector &lt;int&gt; X, vector &lt;int&gt; Y, int _n) {<br>    n=_n;<br>    FOR(i,n+1) {<br>      int p=i%X.size(),q=(i+Y[i%Y.size()])%X.size();<br>      a[i]=X[p];<br>      X[p]=X[q];<br>      X[q]=a[i];<br>    }<br>    if (!a[0]) ans.insert(0);<br>    vi t;<br>    int first=0; while (!a[first]) first++;<br>    for (int i=first; i&lt;=n; i++) a[i-first]=a[i]; n-=first;<br>    int a0=abs(a[0]);<br>    for (int d=1; d*d&lt;=a0; d++) if (a0%d==0) {<br>      check(d);<br>      check(-d);<br>      check(a0/d);<br>      check(-a0/d);<br>    }<br>    return vi(ans.begin(),ans.end());<br>  }<br>};<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>