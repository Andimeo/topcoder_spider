<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;stdio.h&gt;<br>#include&lt;stdlib.h&gt;<br>#include&lt;ctype.h&gt;<br>#include&lt;string.h&gt;<br>#include&lt;math.h&gt;<br><br>#include&lt;iostream&gt;<br>#include&lt;sstream&gt;<br>#include&lt;vector&gt;<br>#include&lt;string&gt;<br>#include&lt;set&gt;<br>#include&lt;map&gt;<br>#include&lt;list&gt;<br>#include&lt;utility&gt;<br>#include&lt;algorithm&gt;<br>using namespace std; <br><br>class CommercialPlanner {<br>  public:<br>  int bestMinute(vector &lt;int&gt; starts_, vector &lt;int&gt; durations_, int ourDuration, int SPD_, int n) {<br>    vector&lt; pair&lt;long long,int&gt; &gt; a;<br>    long long SPD = SPD_;<br>    int K = starts_.size();<br>    if( K == 0 ){<br>      if( ourDuration &gt; SPD_ )<br>        return -1;<br>      else<br>        return 0;<br>    }<br>    int flag = 1;<br>    for( int i = 0; i &lt; K; i ++ ){<br>      long long S = starts_[i];<br>      long long D = durations_[i];<br>      long long E = S + D;<br>      a.push_back( pair&lt;long long,int&gt;(S,       1) );<br>      a.push_back( pair&lt;long long,int&gt;(S + SPD, 1) );<br>      if( E &gt;= SPD ){<br>        a.push_back( pair&lt;long long,int&gt;(E % SPD, -1) );<br>        flag = 0;<br>      }<br>      else<br>        a.push_back( pair&lt;long long,int&gt;(E,       -1) );<br>    }<br>    if( flag )<br>      a.push_back( pair&lt;long long,int&gt;(0, -1) );<br>    sort( a.begin(), a.end() );<br>    long long TMEMMAX = -1;<br>    long long TBEGINMAX = -1;<br>    for( int i = 0; i + 1 &lt; a.size(); i ++ ){<br>      if( a[i].second &gt; 0 ) continue; // begin<br>      long long T    = a[i].first;<br>      if( T &gt;= SPD ) break;<br>      long long DMAX = a[i+1].first - T;<br>      if( DMAX &lt; ourDuration ) continue;<br>      int j, n2;<br>      for( j = i + 1, n2 = n; j &lt; a.size(); j ++ ){<br>        if( a[j].second &gt; 0 ){ // begin<br>          n2 --;<br>          if( n2 == 0 )<br>            break;<br>        }<br>      }<br>      long long TMEM = (j &lt; a.size() ? a[j].first - T : SPD);<br>      TMEM = min( TMEM, SPD );<br>      if( TMEMMAX &lt; TMEM ){<br>        TMEMMAX = TMEM;<br>        TBEGINMAX = T;<br>      }<br>    }<br>    return (int)TBEGINMAX;<br>  }<br>//BEGIN CUT HERE<br><br><br>//END CUT HERE<br>};<br><br>// Master Spark!<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>