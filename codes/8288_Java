<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br>import java.io.*;<br>import java.text.*;<br>import java.util.regex.*;<br>import static java.util.Arrays.*;<br>import static java.lang.Math.*;<br>import static java.lang.Integer.parseInt;<br>public class Unjumpers {<br>  public int reachableTargets(String start, String[] targets) {<br>    <br>    boolean[][][] done = new boolean[35][35][34];<br>    LinkedList&lt;State&gt; que = new LinkedList&lt;State&gt;();<br>    int[] init = get(start);<br>    que.add(new State(init[0], init[1], init[2]));<br>    while(que.size() &gt; 0){<br>      State s = que.removeFirst();<br>      if(s.a &lt; 0 || s.b &lt; 0 || s.c &lt; 0 || s.a &gt; 34 || s.b &gt; 34 || s.c &gt; 33) continue;<br>      if(done[s.a][s.b][s.c]) continue;<br>      done[s.a][s.b][s.c] = true;<br>      que.add(new State(s.a-1, s.b+1, s.c+1));<br>      que.add(new State(s.a+1, s.b-1, s.c+1));<br>      que.add(new State(s.a+1, s.b+1, s.c-1));<br>      que.add(new State(s.a+1, s.b-1, s.c-1));<br>      que.add(new State(s.a-1, s.b+1, s.c-1));<br>      que.add(new State(s.a-1, s.b-1, s.c+1));<br>      <br>    }<br>    int ret = 0;<br>    for(int i = 0; i &lt; targets.length; i++){<br>      int[] tmp = get(targets[i]);<br>      if(done[tmp[0]][tmp[1]][tmp[2]]) ret++;<br>    }<br>    return ret;<br>  }<br>  <br>  int[] get(String s){<br>    int[] ret = new int[3];<br>    for(int i = 0; i &lt; s.length(); i++){<br>      if(s.charAt(i) == '.') continue;<br>      ret[i%3]++;<br>    }<br>    return ret;<br>  }<br>  <br>  class State{<br>    int a, b, c;<br>    State(int aa, int bb, int cc){ a = aa; b = bb; c = cc;}<br>  }<br> <br>}<br> <br>// Powered by PopsEdit<br>// Powered by CodeProcessor<br></td>