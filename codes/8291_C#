<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Text; <br><br>public class Transformation<br>{<br>    long gcd(long x, long y)<br>    {<br>        return (x == 0) ? y : gcd(y % x, x);<br>    }<br>    bool[] b;<br>    List&lt;int&gt; prime;<br>    public string[] transform(string[] A)<br>    {<br>        b = new bool[40000];<br>        prime = new List&lt;int&gt;();<br>        b[0] = b[1] = true;<br>        int n = A.Length;<br>        long[] a = new long[n];<br>        int i, j, k;<br>        for (i = 2; i &lt; 40000; i++)<br>            if (!b[i])<br>            {<br>                prime.Add(i);<br>                for (j = i + i; j &lt; 40000; j += i) b[j] = true;<br>            }<br>        int l = prime.Count;<br>        for (i = 0; i &lt; n; i++)<br>        {<br>            a[i] = long.Parse(A[i]);<br>        }<br>        for (i=0; i&lt;n; i++)<br>            for (j=0; j&lt;n; j++) if (j != i)<br>            {<br>                long d = gcd(a[i], a[j]);<br>                long t = a[i] / d;<br>                long share = gcd(t, d);<br>                bool[] ex = new bool[l];<br>                for (k = 0; k &lt; l; k++)<br>                {<br>                    if (share % prime[k]==0)<br>                    {<br>                        while (share % prime[k] == 0)<br>                        {<br>                            share /= prime[k];<br>                        }<br>                        while (d % prime[k] == 0)<br>                        {<br>                            d /= prime[k];<br>                        }<br>                    }<br>                }<br>                if (share &gt; 1)<br>                {<br>                    while (d % share == 0)<br>                    {<br>                        d /= share;<br>                    }<br>                }<br>                a[i] /= d;<br>            }<br>        string[] ans = new string[n];<br>        for (i = 0; i &lt; n; i++) ans[i] = "" + a[i];<br>        return ans;<br>    }<br><br>    // helper<br>    void cout(object o) { System.Console.WriteLine(o); } <br><br>};<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>