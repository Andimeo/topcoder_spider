<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class Transformation<br>{<br>  BigInteger lcm(BigInteger a, BigInteger b) {<br>    return (a.multiply(b)).divide(a.gcd(b));<br>  }<br>  <br>  public String[] transform(String[] A)<br>  {<br>    int n = A.length;<br>    BigInteger[] a = new BigInteger[n];<br>    for (int i = 0; i &lt; n; ++i) {<br>      a[i] = new BigInteger(A[i]);<br>    }<br>    BigInteger[] b = new BigInteger[n + 1];<br>    b[n] = BigInteger.ONE;<br>    for (int i = n - 1; i &gt;= 0; --i) {<br>      b[i] = lcm(b[i + 1], a[i]);<br>    }<br>    String[] ans = new String[n];<br>    System.out.println(b[0]);<br>    BigInteger[] x = new BigInteger[n];<br>    for (int i = 0; i &lt; n; ++i) {<br>      x[i] = b[i].divide(b[i + 1]);<br>    }<br>    for (int i = 0; i &lt; n; ++i) {<br>      for (int j = i + 1; j &lt; n; ++j) {<br>        while (true) {<br>          BigInteger gcd = x[i].gcd(x[j]);<br>          if (gcd.compareTo(BigInteger.ONE) == 0) {<br>            break;<br>          }<br>          x[i] = x[i].multiply(gcd);<br>          x[j] = x[j].divide(gcd);<br>        }<br>      }<br>    }<br>    for (int i = 0; i &lt; n; ++i) {<br>      ans[i] = x[i].toString();<br>    }<br>    return ans;<br>  }<br>  <br>  <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>