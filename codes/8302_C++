<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br> <br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br>typedef vector&lt;VI&gt; VVI;<br>typedef pair&lt;int,int&gt; pii;<br> <br>typedef long long LL;<br> <br>#define sz size()<br>#define mp make_pair<br>#define pb push_back<br>#define all(v) (v).begin(),(v).end()<br>#define FOR(i,a,b) for(typeof(a) i=a;i&lt;b;++i)<br>#define rep(i,n) FOR(i,0,n)<br>#define dbg(x) cout&lt;&lt;#x&lt;&lt;"="&lt;&lt;x&lt;&lt;endl<br> <br>class ConsecutiveNumbers {<br>public:<br>  vector &lt;int&gt; missingNumber(vector &lt;int&gt;);<br>};<br> <br>vector &lt;int&gt; ConsecutiveNumbers::missingNumber(vector &lt;int&gt; numbers) {<br>sort(all(numbers));<br>//int start=numbers[0];<br>int fg=0;<br>VI poss;<br>for(int i=1;i&lt;numbers.sz;i++)<br>{<br>  if(numbers[i]!=numbers[i-1]+1)<br>  {<br>    if(numbers[i]==numbers[i-1]+2 &amp;&amp; fg==0) <br>    {<br>      fg=1; poss.pb(numbers[i]-1);<br>    }<br>    else  { poss.clear(); return poss;}<br>    <br>  }<br>}<br> <br>if(poss.sz==1) return poss;<br>else <br>{<br>  if(numbers[0]&gt;1) poss.pb(numbers[0]-1);<br>  poss.pb(numbers[numbers.sz-1]+1);<br>  return poss;<br>}<br>    <br>    <br>  <br>  <br>  <br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>