<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;bitset&gt;<br>#include &lt;cassert&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;complex&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;ctime&gt;<br>#include &lt;deque&gt;<br>#include &lt;functional&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iterator&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;stack&gt;<br>#include &lt;string&gt;<br>#include &lt;valarray&gt;<br>#include &lt;vector&gt;<br>#include &lt;utility&gt;<br><br>using namespace std;<br><br>#define all(v) (v).begin(), (v).end()<br><br>// Types<br>typedef long double ld;<br>typedef long long ll;<br>typedef pair &lt;int, int&gt; pii;<br>typedef vector &lt;int&gt; vi;<br>typedef vector &lt;pii&gt; vp;<br>typedef vector &lt;ld&gt; vd;<br>typedef vector &lt;string&gt; vs;<br>typedef vector &lt;bool&gt; vb;<br>typedef queue &lt;pii&gt; qp;<br>typedef map &lt;string, int&gt; msi;<br><br>// Constants<br>const int INF = 1000000000;<br>const ld EPS = 1e-10L;<br>const ld PI = 3.14159265358979L;<br>const int MOD = 999983;<br><br>// Vars<br>vi d;<br><br>// Functions<br>ll go(int k) {<br>  vector &lt;vector &lt;int&gt; &gt; a(k + 1, vector &lt;int&gt; (k * 9 + 1));<br>  a[0][0] = 1;<br>  for (int i = 0; i &lt; k; ++i) {<br>    for (int j = 0; j &lt;= 9 * i; ++j) {<br>      for (int l = 0; l &lt; d.size(); ++l) {<br>        a[i + 1][j + d[l]] += a[i][j];<br>      }<br>    }<br>    for (int j = 0; j &lt;= 9 * (i + 1); ++j) {<br>      a[i + 1][j] %= MOD;<br>    }<br>  }<br>  ll res = 0;<br>  for (int i = 0; i &lt;= 9 * k; ++i) {<br>    res += ll(a[k][i]) * a[k][i];<br>  }<br>  return res % MOD;<br>}<br><br>//Interface<br>class CharmingTickets {<br>public:<br>  int count(int K, string good) {<br>    int res;<br>    int n;<br>    d.clear();<br>    for (int i = 0; i &lt; good.size(); ++i) {<br>      d.push_back(good[i] - '0');<br>    }<br>    res = (2 * go(K) - go(K / 2) * go((K + 1) / 2)) % MOD;<br>    if (res &lt; 0) {<br>      res += MOD;<br>    }<br>    return res;<br>  }<br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>