<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class DukeOnLargeChessBoard<br>{<br>  int maxx=1000000;<br>  int cc,ll;<br>  int[]mic=new int[maxx];<br>  int[]mare=new int[maxx];<br>  boolean liber(int cc,int ll)<br>  {<br>    if((cc&lt;0)||(cc&gt;=maxx)||(ll&lt;0)||(ll&gt;=maxx))return false;<br>    if((ll&gt;=mic[cc])&amp;&amp;(ll&lt;=mare[cc]))return false;<br>    return true;<br>  }<br>  void pune(int c,int lmic,int lmare)<br>  {<br>    if(mare[c]==-1)<br>    {<br>      mic[c]=lmic;<br>      mare[c]=lmare;<br>    }<br>    else<br>    {<br>      mic[c]=Math.min(mic[c],lmic);<br>      mare[c]=Math.max(mare[c],lmare);<br>    }<br>  }<br>  String trans(int cc,int ll)<br>  {<br>    String r1=""+cc;<br>    while(r1.length()&lt;6)r1="0"+r1;<br>    String r2=""+ll;<br>    while(r2.length()&lt;6)r2="0"+r2;<br>    return "("+r1+", "+r2+")";  <br>  }<br>  public String lastCell(String ip)<br>  {<br>    cc=Integer.parseInt(ip.substring(1,7));<br>    ll=Integer.parseInt(ip.substring(9,15));    <br>    Arrays.fill(mic,0);<br>    Arrays.fill(mare,-1);<br>    pune(cc,ll,ll);<br>    boolean gasit=true;<br>    while(gasit)<br>    {<br>      //System.err.println(cc+" "+ll);<br>      gasit=true;<br>      if(liber(cc+1,ll))<br>      {<br>        pune(cc+1,ll,ll);<br>        cc++;<br>        continue;<br>      }<br>      if(liber(cc,ll+1))<br>      {<br>        int maxim=maxx-1;<br>        if(cc+1&lt;maxx)<br>          if(mare[cc+1]&lt;maxx-1)maxim=Math.min(maxim,mare[cc+1]+1);<br>        if(mare[cc]!=-1)<br>          if(mic[cc]&gt;ll)maxim=Math.min(maxim,mic[cc]-1);<br>        //System.err.println(maxim);<br>        pune(cc,ll,maxim);<br>        ll=maxim;<br>        continue;<br>      }<br>      if(liber(cc,ll-1))<br>      {<br>        int minim=0;<br>        if(cc+1&lt;maxx)<br>          if(mic[cc+1]&gt;0)minim=Math.max(minim,mic[cc+1]-1);<br>        if(mare[cc]!=-1)<br>          if(mare[cc]&lt;ll)minim=Math.max(minim,mare[cc]+1);<br>        pune(cc,minim,ll);<br>        ll=minim;<br>        continue;  <br>      }<br>      if(liber(cc-1,ll))<br>      {<br>        //pune(cc-1,ll,ll);<br>        cc--;<br>        continue;<br>      }<br>      gasit=false;<br>    }<br>    return trans(cc,ll);<br>  }<br>  <br>  <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>