<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class DivisibleByDigits {<br>  public long getContinuation(int n) {<br>    long ans = 1;<br>    HashSet&lt;Integer&gt; hs = new HashSet&lt;Integer&gt;();<br>    for(char c: (n + "").toCharArray()) {<br>      int x = c - '0';<br>      if(x == 0) continue;<br>      hs.add(x);<br>    }<br>    for(int x: hs) {<br>      long g = gcd(x, ans);<br>      ans *= x / g;<br>    }<br>    int[] dig = {0,1,2,3,4,5,6,7,8,9};<br>    if(n % ans == 0) return n;<br>    for(int d1: dig) {<br>      long t = Long.parseLong(n + "" + d1);<br>      if(t % ans == 0) return t;<br>    }<br>    for(int d1: dig) for(int d2: dig) {<br>      long t = Long.parseLong(n + "" + d1 + "" + d2);<br>      if(t % ans == 0) return t;<br>    }<br>    for(int d1: dig) for(int d2: dig) for(int d3: dig) {<br>      long t = Long.parseLong(n + "" + d1 + "" + d2 + "" + d3);<br>      if(t % ans == 0) return t;<br>    }<br>    for(int d1: dig) for(int d2: dig) for(int d3: dig) for(int d4: dig) {<br>      long t = Long.parseLong(n + "" + d1 + "" + d2 + "" + d3 + "" + d4);<br>      if(t % ans == 0) return t;<br>    }<br>    for(int d1: dig) for(int d2: dig) for(int d3: dig) for(int d4: dig) for(int d5: dig) {<br>      long t = Long.parseLong(n + "" + d1 + "" + d2 + "" + d3 + "" + d4 + "" + d5);<br>      if(t % ans == 0) return t;<br>    }<br>    return -1;<br>  }<br>  <br>  long gcd(long a, long b) {<br>    while(b != 0) {<br>      long tmp = b;<br>      b = a % b;<br>      a = tmp;<br>    }<br>    return a;<br>  }<br>}<br></td>