<td class="problemText" colspan="8" valign="middle" align="left">
            // I think I have been challenged...<br><br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>#define LS &lt;<br>#define Size(x) (int(x.size()))<br><br>// All macros with parameters "k,a,b" run the "k" variable in range [a,b)<br>#define FOR(k,a,b) for(typeof(a) k=(a); k LS (b); ++k)<br><br>#line 3 "NCool.cc"<br><br>#define LIM 3600<br><br>int ins[LIM][LIM];<br><br>int next[80];<br><br>int divdown(int a, int b) {<br>  if(b &lt; 0) a = -a, b = -b;<br>  if(a &gt;= 0) return a / b;<br>  if(a % b == 0) return a / b;<br>  return a/b-1;<br>  }<br><br>int divup(int a, int b) {<br>  return -divdown(-a,b);<br>  }<br><br>class NCool {<br>  public:<br>  int nCoolPoints(vector &lt;int&gt; x, vector &lt;int&gt; y, int n) {<br>    // !FDI<br>    n--;<br>    <br>    int N = Size(x);<br>/*  N = 4;<br>    x[0] = 10000; y[0] = 0;<br>    x[1] = 10000; y[1] = 10;<br>    x[2] = 00000; y[2] = 10;<br>    x[3] = 00000; y[3] =  0;<br>    n = 10000; */<br>    <br>    FOR(a,0,N) {<br>      next[a] = (a+1) % N;<br>      FOR(b,0,N) {<br>        int dx1 = x[b] - x[a];<br>        int dy1 = y[b] - y[a];<br>        int dx2 = x[next[a]] - x[a];<br>        int dy2 = y[next[a]] - y[a];<br>        if(dx1*dy2 - dy1*dx2 &lt; 0) next[a] = b;<br>        }<br>      }<br>    <br>    int top[10001], bot[10001];<br>    <br>    FOR(xx,0,10001) {<br>      top[xx] = -1;<br>      bot[xx] = 10006;<br>      FOR(a,0,N) {<br>        if(x[a] == xx) top[xx] &gt;?= y[a], bot[xx] &lt;?= y[a];<br>        else if(x[a] &lt;= xx &amp;&amp; x[next[a]] &gt;= xx) {<br>//        printf("(%d,%d)-(%d,%d)\n", x[a],y[a], x[next[a]],y[next[a]]);<br>          top[xx] &gt;?= y[a] + divdown(((xx - x[a]) * (y[next[a]] - y[a])), (x[next[a]] - x[a]));<br>          }<br>        else if(x[a] &gt;= xx &amp;&amp; x[next[a]] &lt;= xx) {<br>//        printf("(%d,%d)-(%d,%d)\n", x[a],y[a], x[next[a]],y[next[a]]);<br>          bot[xx] &lt;?= y[a] + divup(((xx - x[a]) * (y[next[a]] - y[a])), (x[next[a]] - x[a]));<br>          }<br>        }<br>      <br>//    if(top[xx] &gt;= 0) printf("%d: %d %d\n", xx, top[xx], bot[xx]);<br>      }<br><br>    if(n &gt; LIM) {<br>      int ret = 0;<br>      FOR(xx,0,10001) FOR(yy,bot[xx],top[xx]+1) {<br>      FOR(dx,-2,3) {<br>        int xx2 = xx+dx*n;<br>        if(xx2 &gt;= 0 &amp;&amp; xx2 &lt;= 10000) {<br>          FOR(dy,-2,3) if(dx || dy) {<br>            int yy2 = yy+dy*n;<br>            if(yy2 &gt;= bot[xx2] &amp;&amp; yy2 &lt;= top[xx2]) {<br>//            printf("%d,%d - %d,%d\n", xx,yy, xx2,yy2);<br>              ret++;<br>              goto nxy;<br>              }<br>            }<br>          }<br>        }<br>        nxy: ;<br>        }<br>      return ret;<br>      }<br>    <br>    FOR(a,0,n) FOR(b,0,n) ins[a][b] = 0;<br>    <br>    int modtab[10001];<br>    FOR(u,0,10001) modtab[u] = u % n;<br><br>    FOR(xx,0,10001) FOR(yy,bot[xx],top[xx]+1) ins[modtab[xx]][modtab[yy]]++;<br>    <br>    int ret = 0;<br>    <br>    FOR(a,0,n) FOR(b,0,n) if(ins[a][b] != 1) ret += ins[a][b];<br><br>    return ret;<br>    }<br>  };<br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>