<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>using namespace std;<br><br>#define PB push_back<br>#define PF pop_front<br>#define MP make_pair<br>#define INF 100000000<br>#define DINF 1e30<br><br>typedef long long LL;<br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br>typedef pair&lt;int,int&gt; PII;<br><br>class LuckyTicketSubstring {<br>public:<br>    int maxLength(string s) {<br>        int res = 0;<br>        int i, j, k, tot;<br>        for (i = 0 ; i &lt; s.size() ; i++) {<br>      for (j = i + 1 ; j &lt; s.size() ; j++) {<br>        if ((j-i+1)%2 != 0) continue;<br>        tot = 0;<br>        for (k = i ; k &lt;= (i+j) / 2 ; k++) {<br>          tot += s[k] - '0';  <br>        }<br>        for ( ; k &lt;= j ; k++) {<br>          tot -= s[k] - '0';<br>        }<br>        if (tot == 0) res &gt;?= (j-i+1);<br>      }  <br>    }<br>        return res;<br>    }<br><br>};<br><br><br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>