<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;iostream&gt;<br>#include&lt;cstdio&gt;<br>#include&lt;cctype&gt;<br>#include&lt;cmath&gt;<br>#include&lt;cstdlib&gt;<br>#include&lt;algorithm&gt;<br>#include&lt;vector&gt;<br>#include&lt;string&gt;<br>#include&lt;list&gt;<br>#include&lt;deque&gt;<br>#include&lt;map&gt;<br>#include&lt;set&gt;<br>#include&lt;queue&gt;<br>#include&lt;stack&gt;<br>#include&lt;utility&gt;<br>#include&lt;sstream&gt;<br>#include&lt;cstring&gt;<br>using namespace std;<br> <br>#define FOR(I,A,B) for(int I=(A);I&lt;=(B);I++)<br>#define REP(I,N) for(int I=0;I&lt;(N);I++)<br>#define ALL(X) (X).begin(),(X).end()<br>#define PB push_back<br>#define MP make_pair<br>#define FI first<br>#define SE second<br>typedef vector&lt;int&gt; VI;<br>typedef pair&lt;int,int&gt; PII;<br>typedef long long ll;<br>typedef vector&lt;string&gt; VS;<br> <br> <br> <br>class Planks <br>{<br>    public:<br>    int makeSimilar(vector &lt;int&gt; lengths, int costPerCut, int woodValue)<br>    {<br>        int best = 0;<br>        for(int i=1;i&lt;=10000;i++) {<br>            int act = 0;<br>            REP(j, lengths.size()) {<br>                if(i == lengths[j]) {<br>                    act += i * woodValue;<br>                    continue;<br>                }<br>                if(!(lengths[j]%i)) {<br>                    int a = lengths[j] * woodValue - (lengths[j]/i - 1) * costPerCut;<br>                    if(a &gt;= 0) act += a;<br>                    continue;<br>                }<br>                else {<br>                    int w = lengths[j]/i;<br>                    w *= i;<br>                    int a = w * woodValue;<br>                    a -= (lengths[j]/i) * costPerCut;<br>                    if(a &gt;= 0) act += a;<br>                }<br>            }<br>            best &gt;?= act;<br>        }<br>        return best;<br>    }<br> <br> <br> <br> <br> <br> <br> <br>};<br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>