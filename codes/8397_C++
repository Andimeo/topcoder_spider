<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define FOR(i,a,b) for(int i=(a);i&lt;(b);++i)<br>#define REP(i,n) FOR(i,0,n)<br>#define ALL(a) (a).begin(),a.end()<br>#define SORT(a) sort(ALL(a))<br>#define SZ(a) ((int) a.size())<br>#define pb push_back<br> <br>class FloorBoards {<br>public:<br>  int layout(vector &lt;string&gt;);<br>};<br> <br>int a[11][1&lt;&lt;10];<br> <br>#define INF 1000000000<br> <br>int FloorBoards::layout(vector &lt;string&gt; b) {<br>  int n = SZ (b);<br>  int m = SZ (b[0]);<br>  <br>  REP (i, n+1)<br>    REP (j, 1&lt;&lt;m)<br>      a[i][j] = INF;<br>      <br>  a[0][0] = 0;<br>  <br>  REP (i, n) {<br>    REP (j, 1&lt;&lt;m) if (a[i][j] &lt; INF) {<br>      REP (k, 1&lt;&lt;m) {<br>          int last = -666;<br>          int cr = 0;<br>          REP (v, m) if (b[i][v] == '.') {<br>            if ((k &amp; (1&lt;&lt;v))) {<br>              if (!(j &amp; (1&lt;&lt;v)))<br>                ++cr;<br>              continue;<br>            }<br>            if (last != v - 1)<br>              ++cr;<br>            last = v;<br>          } else {<br>            if (k &amp; (1&lt;&lt;v))<br>              goto cont;<br>          }        <br>          a[i+1][k] &lt;?= a[i][j] + cr;  <br>          cont:;          <br>        }<br>    }<br>  }<br>  int res = INF;<br>  REP (i, 1&lt;&lt;m)<br>    res &lt;?= a[n][i];<br>  return res;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>