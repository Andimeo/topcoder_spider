<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br>import java.io.*;<br>import java.text.*;<br>import java.util.regex.*;<br>import static java.util.Arrays.*;<br>import static java.lang.Math.*;<br>import static java.lang.Integer.parseInt;<br>public class FloorBoards {<br>  boolean[][] cover;<br>  int mx, my;<br>  public int layout(String[] room) {<br>    mx = room.length;<br>    my = room[0].length();<br>    cover = new boolean[mx][my];<br>    for(int i = 0; i &lt; room.length; i++){<br>      for(int j = 0; j &lt; room[i].length(); j++){<br>        cover[i][j] = room[i].charAt(j) == '#';<br>      }<br>    }<br>    return go(0,0,0);<br>  }<br>  <br>  int[][][] memo = new int[11][11][1&lt;&lt;10];<br>  int go(int x, int y, int msk){<br>    if(y == my) return go(x+1,0,msk);<br>    if(x == mx) return 0;<br>    if(cover[x][y]) return go(x,y+1,msk &amp; (~(1&lt;&lt;y)));<br>    if(memo[x][y][msk] != 0) return memo[x][y][msk]-1;<br>    int ret = Integer.MAX_VALUE;<br>    ret = min(ret, (((1&lt;&lt;y)&amp;msk)!=0 ? 0 : 1)+go(x,y+1,msk | (1&lt;&lt;y)));<br>    int unset = 0;<br>    for(int i = y; i &lt; my; i++){<br>      if(cover[x][i]) break;<br>      unset |= 1&lt;&lt;i;<br>      ret = min(ret, 1+go(x, i+1, msk &amp; (~unset)));<br>    }<br>    memo[x][y][msk] = ret+1;<br>    return ret;<br>  }<br>  <br> <br>}<br> <br>// Powered by PopsEdit<br>// Powered by CodeProcessor<br></td>