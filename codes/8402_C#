<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class GraphClique<br>{<br>  public static int[] allClique(string[] graph)<br>  {<br>    int[] result = new int[graph.Length];<br>    int n = graph.Length;<br>    result[0] = n;<br><br>    for (int k = 1; k &lt; n; k++)<br>    {<br>      bool[] was = new bool[n];<br>      int[] testClique = new int[k + 1];<br>      result[k] = count(ref testClique, ref was, k + 1, -1, ref graph);<br>    }<br><br>    return result;<br>  }<br><br>  public static int count(ref int[] testClique, ref bool[] was, int todo, int last, ref string[] graph)<br>  {<br>    <br>    if (todo == 0)<br>    {<br>      if (isClique(ref testClique, ref graph)) <br>        return 1;<br>      else<br>        return 0;<br>    }<br><br>    todo--;<br><br>    int n = graph.Length;<br>    int m = testClique.Length;<br><br>    int res = 0;<br>    for (int i = last + 1; i &lt; n; i++)<br>    {<br>      if (!was[i])<br>      {<br>        testClique[m - todo - 1] = i;<br>        was[i] = true;<br>        res += count(ref testClique, ref was, todo, i, ref graph);<br>        was[i] = false;<br>      }<br>    }<br><br>    return res;<br>  }<br>  <br>  public static bool isClique(ref int[] clique, ref string[] graph)<br>  {<br>    int n = clique.Length;<br><br>    for (int i = 0; i &lt; n; i++)<br>    {<br>      for (int j = 0; j &lt; n; j++)<br>        if (i != j &amp;&amp; graph[clique[i]][clique[j]] == '0') return false;<br>    }<br>    return true;<br>  }<br><br>}<br></td>