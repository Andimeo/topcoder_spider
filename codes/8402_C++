<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;climits&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;ctime&gt;<br>#include &lt;functional&gt;<br>#include &lt;queue&gt;<br><br>using namespace std;<br><br>class GraphClique<br>{<br>    public :<br>    vector &lt;int&gt; allClique(vector &lt;string&gt; graphEdge)<br>    {<br>        int T[100] = {0};<br>         <br>        int N = graphEdge.size(); <br>        for (int I = 0; I &lt; (1 &lt;&lt; N); I ++)<br>        {<br>            int t = 0;<br>            for (int J = 0; J &lt; N; J ++)<br>                if (I &amp; (1 &lt;&lt; J))<br>                    t ++; <br>            int Flag = 1; <br>            for (int J = 0; J &lt; N; J ++)<br>                if (I &amp; (1 &lt;&lt; J))<br>                    for (int K = 0; K &lt; N; K ++)<br>                        if (I &amp; (1 &lt;&lt; K))<br>                        {<br>                            if (J == K) <br>                                continue; <br>                            if (graphEdge[J][K] == '0')<br>                                Flag = 0; <br>                        }<br>            if (Flag)<br>                T[t] ++; <br>        }<br>        vector &lt;int&gt; Ans; <br>        for (int J = 1; J &lt;= N; J ++)<br>            Ans.push_back(T[J]);<br>        return Ans; <br>    }<br>    <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>