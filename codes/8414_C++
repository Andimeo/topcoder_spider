<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cassert&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;utility&gt;<br>#include &lt;numeric&gt;<br>#include &lt;iterator&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;list&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>using namespace std;<br><br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;VI&gt; VVI;<br>typedef vector&lt;string&gt; VS;<br>typedef long long int i64;<br>typedef pair&lt;int, int&gt; PII;<br><br>#define FST first<br>#define SND second<br><br>class TheDiceGame {<br>  public:<br>    double expectedThrows(int C);<br>};<br><br>const double OS=1./6;<br><br>double dp[1000008];<br><br>double TheDiceGame::expectedThrows(int C) {<br>  int i, j;<br>  //<br>  for (i=1; i&lt;=C; i++)<br>    for (j=1; j&lt;=6; j++)<br>      dp[i]+=OS*(1+(i-j&lt;=0 ? 0 : dp[i-j]));<br>  return dp[C];<br>}<br></td>