<td class="problemText" colspan="8" valign="middle" align="left">
            imports System<br>imports Microsoft.VisualBasic<br>imports System.Collections<br>imports System.Text<br>imports System.Collections.Generic<br> <br>Public Class TheHomework<br>    Dim nt As Integer<br>    Dim memo(200, 200) As Integer<br>    Dim qs As New Queue(Of Integer)<br>    Dim qc As New Queue(Of Integer)<br>    Dim qm As New Queue(Of Integer)<br> <br>    Public Function transform(ByVal first() As Integer, ByVal second() As Integer) As Integer<br>        nt = second.Length<br> <br>        Dim i1, i2 As Integer<br>        Dim ns, nc, nm As Integer<br> <br>        For i1 = 0 To 200<br>            For i2 = 0 To 200<br>                memo(i1, i2) = 10000<br>            Next<br>        Next<br> <br>        For i1 = 0 To first.Length - 1<br>            For i2 = 0 To second.Length - 1<br>                If first(i1) = second(i2) Then<br>                    nc += 1<br>                    second(i2) = -1<br>                    Exit For<br>                End If<br>            Next<br>        Next<br> <br>        ns = first.Length<br>        nm = 0<br> <br>        qs.Enqueue(ns)<br>        qc.Enqueue(nc)<br>        qm.Enqueue(nm)<br> <br>        Dim best As Integer<br>        best = 100000<br> <br>        While qs.Count &gt; 0<br>            ns = qs.Dequeue()<br>            nc = qc.Dequeue()<br>            nm = qm.Dequeue()<br> <br>            If nm &lt; memo(ns, nc) And nm &lt; best Then<br>                memo(ns, nc) = nm<br>                If ns = nt And nc = nt Then<br>                    If nm &lt; best Then best = nm<br>                End If<br> <br>                Dim ia, id, ic As Integer<br>                For ia = 1 To ns<br>                    AddState(ns + ia, nc + ia, nm + 1)<br>                Next<br>                For id = 1 To ns \ 2<br>                    AddState(ns - id, Math.Min(nc, ns - id), nm + 1)<br>                Next<br>                For ic = 1 To ns \ 2<br>                    AddState(ns, Math.Min(ns, nc + ic), nm + 1)<br>                Next<br>            End If<br>        End While<br> <br>        Return best<br> <br>    End Function<br> <br>    Private Sub AddState(ByVal ns As Integer, ByVal nc As Integer, ByVal nm As Integer)<br>        If ns &gt; 200 Or nc &gt; 200 Then Exit Sub<br>        If nm &gt;= memo(ns, nc) Then Exit Sub<br>        qs.Enqueue(ns)<br>        qc.Enqueue(nc)<br>        qm.Enqueue(nm)<br>    End Sub<br> <br> <br>End Class<br></td>