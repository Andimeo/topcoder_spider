<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cassert&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;utility&gt;<br>#include &lt;numeric&gt;<br>#include &lt;iterator&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;list&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>using namespace std;<br><br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;VI&gt; VVI;<br>typedef vector&lt;string&gt; VS;<br>typedef long long int i64;<br>typedef pair&lt;int, int&gt; PII;<br><br>#define FST first<br>#define SND second<br><br>class TheNumbersLord {<br>  public:<br>    string create(VI nb, int N);<br>};<br><br>bool startsWith(const string &amp;ss, const string &amp;s) {<br>  return ss.find(s)==0;<br>}<br><br>bool isBetter(const string &amp;s1, const string &amp;s2) {<br>  string z1=s1+s2;<br>  string z2=s2+s1;<br>  if (startsWith(s1, s2) || startsWith(s2, s1))<br>    return z1&gt;z2;<br>  return s1&gt;s2;<br>}<br><br>string TheNumbersLord::create(VI nb, int N) {<br>  int i, j, B=nb.size(), aI;<br>  VI cn(B);<br>  VS st;<br>  string A;<br>  for (i=0; i&lt;B; i++) {<br>    char bf[32];<br>    sprintf(bf, "%d", nb[i]);<br>    st.push_back(bf);<br>  }<br>  aI=0;<br>  cn[0]=1;<br>  for (i=1; i&lt;B; i++) {<br>    if (st[i].length()&gt;st[aI].length() ||<br>        st[i].length()==st[aI].length() &amp;&amp; st[i]&gt;st[aI])<br>      aI=i;<br>    cn[i]=1;<br>  }<br>  cn[aI]+=N-B;<br>  for (i=0; i&lt;B; i++) {<br>    aI=(-1000000);<br>    for (j=0; j&lt;B; j++)<br>      if (cn[j]&gt;0)<br>        if (aI&lt;0 || isBetter(st[j], st[aI]))<br>          aI=j;<br>    while (cn[aI]--)<br>      A+=st[aI];<br>  }<br>  return A;<br>}<br></td>