<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;map&gt; <br>#include &lt;set&gt; <br>#include &lt;cmath&gt;<br>#include &lt;vector&gt; <br>#include &lt;string&gt; <br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt; <br>using namespace std; <br>#define FOR(i,a,b) for(int i=(a); i&lt;(b); ++i) <br>#define FORE(it,x) for(typeof(x.begin()) it=x.begin(); it!=x.end(); ++it) <br>#define SET(x, v) memset(x, v, sizeof (x)) <br>#define sz size() <br>#define cs c_str() <br>#define pb push_back <br>#define mp make_pair<br> <br>typedef long long i64; <br> <br>class SellingProducts{ public: <br><br><br>  int optimalPrice(vector &lt;int&gt; price, vector &lt;int&gt; cost) {<br>    int n = price.sz;<br>    int maxi = 0;<br>    int ans = -1 ,ans1;<br>    FOR(i,0,n)maxi=max(maxi, price[i]);<br>    FOR(i,0,maxi+1) {<br>      int profit = 0;<br>      FOR(j,0,n) {<br>        if(price[j] &gt;= i) {<br>          profit += max(0, i - cost[j]);<br>        }<br>      }<br>//      printf("(%d, %d)\n",i, profit);<br>      if(profit &gt; ans) {<br>        ans = profit;<br>        ans1 = i;<br>      }<br>    }<br>    return ans1;<br>  }<br><br><br>};<br></td>