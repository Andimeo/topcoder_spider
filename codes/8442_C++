<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cctype&gt;<br>#include &lt;queue&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;utility&gt;<br>#include &lt;numeric&gt;<br>#include &lt;complex&gt;<br><br>using namespace std;<br><br>typedef long long ll;<br><br>ll needed[20];<br><br>class FillBox {<br>  public:<br>  int minCubes(int l, int w, int h, vector &lt;int&gt; cubes) {<br>    <br>    for (int i = 0; i &lt; 20; i++)<br>      for (int j = 0; j &lt; 20; j++)<br>        for (int k = 0; k &lt; 20; k++)<br>    if ((l&gt;&gt;i)&amp;(w&gt;&gt;j)&amp;(h&gt;&gt;k)&amp;1)<br>      {<br>        int m = min(min(i, j), k);<br>        needed[m] += 1LL&lt;&lt;(i+j+k-3*m);<br>      }<br>    while (cubes.size() &lt; 20) cubes.push_back(0);<br>    int ans = 0;<br>    for (int i = 19; i &gt;= 0; i--)<br>      {<br>        if (cubes[i] &gt;= needed[i])<br>    {<br>      ans += needed[i];<br>      needed[i] = 0;<br>    }<br>        else<br>    {<br>      ans += cubes[i];<br>      needed[i-1] += 8 * (needed[i] - cubes[i]);<br>    }<br>      }<br>    return needed[0] ? -1 : ans;<br><br>  }<br>};<br><br><br>// Powered by FileEdit<br></td>