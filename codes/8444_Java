<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.io.*;<br>import java.text.*;<br>import java.math.*;<br>import java.util.regex.*;<br>import static java.lang.Math.*;<br>import static java.util.Arrays.*;<br>import static java.util.Collections.*;<br>import static java.lang.Integer.*;<br>import static java.lang.Long.*;<br>public class CandidateKeys {<br>  public int[] getKeys(String[] table) {<br>    int[] ret = new int[2];<br>    ret[0] = 1000;<br>    boolean[] sup = new boolean[1&lt;&lt;table[0].length()];<br>    int n = table[0].length();<br>    outer:<br>    for(int i = 0; i &lt; sup.length; i++){<br>      for(int j = 0; j &lt; n; j++){<br>        if(((1&lt;&lt;j)&amp;i)==0) continue;<br>        if(sup[i^(1&lt;&lt;j)]){<br>          sup[i] = true;<br>          continue outer;<br>        }<br>      }<br>      for(int a = 0; a &lt; table.length; a++){<br>        for(int b = a+1; b &lt; table.length; b++){<br>          boolean ok = false;<br>          for(int k = 0; k &lt; n; k++){<br>            if(((1&lt;&lt;k)&amp;i)==0) continue;<br>            if(table[a].charAt(k) != table[b].charAt(k)) ok = true;<br>          }<br>          if(!ok) continue outer;<br>        }<br>      }<br>      sup[i] = true;<br>      ret[0] = min(ret[0], Integer.bitCount(i));<br>      ret[1] = max(ret[1], Integer.bitCount(i));<br>      continue outer;<br>    }<br>    if(ret[0] == 1000) return new int[0];<br>    return ret;<br>  }<br> <br>}<br> <br>// Powered by PopsEdit<br>// Powered by CodeProcessor<br></td>