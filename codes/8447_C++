<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;functional&gt;<br>#include &lt;iostream&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br><br>using namespace std;<br><br>#define FORALL(it,c) for( __typeof((c).begin()) it = (c).begin(); it != (c).end(); ++it )<br><br>inline int myabs( int x ) { return x &lt; 0 ? -x : x; }<br><br>inline void refresh( int &amp;x, int v ) { if( x &lt; 0 || v &lt; x ) x = v; }<br><br>class RectanglesArrangement {<br>public:<br>    int cover( vector &lt;int&gt; left, int width, int a, int b ) {<br>        int n = (int)left.size();<br>        int len = b - a + 1;<br><br>        if( width &gt; len || n * width &lt; len ) return -1;<br><br>        sort( left.begin(), left.end() );<br><br>        int dp[51][1001]; memset( dp, -1, sizeof dp );<br><br>        dp[0][a] = myabs( left[0] - a );<br><br>        for( int i = 0; i &lt; n - 1; ++i )<br>            for( int j = a; j &lt;= b - width + 1; ++j ) {<br>                if( dp[i][j] &lt; 0 ) continue;<br><br>                for( int k = a; k &lt;= b - width + 1; ++k ) {<br>                    if( k &gt; j + width ) continue;<br><br>                    refresh( dp[i + 1][j &gt;? k], dp[i][j] + myabs( k - left[i + 1] ) );<br>                }<br>            }<br>        <br>        return dp[n - 1][b - width + 1];<br>    }<br>    <br> <br>};<br><br><br>    <br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>