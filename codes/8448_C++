<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br> <br>class GoodHours<br>{<br>public:<br>  int howMany(string s1, string s2)<br>  {<br>    vector&lt;int&gt; A;<br>    A.push_back((s1[0]-'0')*10+(s1[1]-'0'));<br>    A.push_back((s1[3]-'0')*10+(s1[4]-'0'));<br>    vector&lt;int&gt; B;<br>    B.push_back((s2[0]-'0')*10+(s2[1]-'0'));<br>    B.push_back((s2[3]-'0')*10+(s2[4]-'0'));<br>    int result=0;<br>    while (1)<br>    {<br>      int G[4];<br>      G[0]=A[0]/10;<br>      G[1]=A[0]%10;<br>      G[2]=A[1]/10;<br>      G[3]=A[1]%10;<br>      bool good=false;<br>      for (int k=0;k&lt;3;k++)<br>      {<br>        int p1=1,p2=1;<br>        for (int i=0;i&lt;4;i++) <br>          if (i&lt;=k)<br>            p1*=G[i];<br>          else<br>            p2*=G[i];<br>        if (p1==p2) good=true;<br>      }<br>      if (good) result++;<br>      if (A==B) break;<br>      A[1]++;<br>      if (A[1]==60)<br>      {<br>        A[1]=0;<br>        A[0]++;<br>        if (A[0]==24) A[0]=0;<br>      }<br>    }<br>    return result;<br>  }<br>};<br></td>