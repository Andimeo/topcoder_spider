<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;map&gt; <br>#include &lt;set&gt; <br>#include &lt;cmath&gt;<br>#include &lt;vector&gt; <br>#include &lt;string&gt; <br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt; <br>using namespace std; <br>#define FOR(i,a,b) for(int i=(a); i&lt;(b); ++i) <br>#define FORE(it,x) for(typeof(x.begin()) it=x.begin(); it!=x.end(); ++it) <br>#define SET(x, v) memset(x, v, sizeof (x)) <br>#define sz size() <br>#define cs c_str() <br>#define pb push_back <br>#define mp make_pair<br> <br>typedef long long i64; <br><br>class   ContiguousSubsequences<br>            { public: <br>  vector &lt;int&gt; findMaxAverage(vector &lt;int&gt; a, int K) {<br>    int n = a.sz;<br>    int p = -1, q= 1, len = 0;<br>    vector&lt;int&gt; ret;<br>    FOR(i,0,n) {  <br>      FOR(j,i,n) {<br>        if(j-i+1 &lt;K)continue;<br>        int sum = 0;<br>        vector&lt;int&gt; tmp;<br>        tmp.clear();<br>        FOR(k,i,j+1){<br>          sum+= a[k];<br>        }<br>        tmp.pb(i);<br>        tmp.pb(j);<br>        /*<br>        p  sum<br>        q   (j-i+1)<br>        */<br>        if (p * (j-i+1) &lt; sum * q) {<br>          p = sum;<br>          q = j-i+1;<br>          len = j-i+1;<br>          ret = tmp;<br>//          printf("(%d/%d)\n",sum, j-i+1);<br>        } else if (p * (j-i+1) == sum * q &amp;&amp; j-i+1 &gt; len) {<br>          len = j-i+1;<br>          ret = tmp;<br>        }<br>      }<br>    }<br>    return ret;<br>  }<br><br><br>};<br></td>