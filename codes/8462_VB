<td class="problemText" colspan="8" valign="middle" align="left">
            Public Class CandyGame<br>    Dim nodes() As Integer<br>    Dim from() As Integer<br>    Dim dest() As Integer<br>    Dim ct As Integer<br>    Dim graph As String()<br>    Public Function maximumCandy(ByVal g As String(), ByVal target As Integer) As Integer<br>        Dim i As Integer, j As Integer, flag As Boolean, mx As Integer, r As Integer<br>        ct = g.Length - 1<br>        ReDim nodes(ct)<br>        ReDim from(ct), dest(ct), graph(ct)<br><br>        For i = 0 To ct<br>            nodes(i) = -1<br>            graph(i) = g(i)<br>        Next<br>        nodes(target) = 0<br>        from(target) = -1<br>        Do<br>            flag = False<br>            For i = 0 To ct<br>                If nodes(i) = -1 Then<br>                    For j = 0 To ct<br>                        If graph(i).Substring(j, 1) = "Y" Then<br>                            If nodes(j) &lt;&gt; -1 Then<br>                                nodes(i) = nodes(j) + 1<br>                                from(i) = j<br>                                flag = True<br>                            End If<br>                        End If<br>                    Next<br>                End If<br>            Next<br>        Loop While flag<br>        For i = 0 To ct<br>            If nodes(i) = -1 Then Return -1<br>        Next<br>        For i = 0 To ct<br>            If Len(graph(i).Replace("N", "")) = 1 Then<br>                dest(i) = nodes(i)<br>            End If<br>        Next<br>        Do<br>            flag = False<br><br>            For i = 0 To ct<br>                If i &lt;&gt; target Then<br>                    If dest(i) &gt; dest(from(i)) Then<br>                        dest(from(i)) = dest(i)<br>                        flag = True<br>                    End If<br>                End If<br>            Next<br>        Loop While flag<br>        mx = -1<br>        r = getMax(target, 0)<br>        Return r<br>    End Function<br>    Function getMax(ByVal p As Integer, ByVal tm As Integer) As Integer<br>        Dim i As Integer, mx As Integer, mxi As Integer<br>        Dim r As Integer, t As Integer, flag As Boolean<br>        flag = True<br>        If dest(p) = nodes(p) Then<br>            t = tm '* 2 + 1<br>            If t &gt; 2000000000 Then Return -1 Else Return t<br>        End If<br>        For i = 0 To ct<br>            If graph(p).Substring(i, 1) = "Y" Then<br>                If i &lt;&gt; from(p) Then<br>                    If dest(i) = dest(p) And flag Then<br>                        flag = False<br>                        t = getMax(i, tm * 2 + 1)<br>                        If t = -1 Then Return t<br>                    Else<br>                        t = getMax(i, 1)<br>                        If t = -1 Then Return t<br>                    End If<br>                    r = r + t<br>                    If r &gt; 2000000000 Then Return -1<br>                End If<br>            End If<br>        Next<br>        If r &gt; 2000000000 Then Return -1 Else Return r<br><br>    End Function<br>    Function getNum(ByVal mx As Integer) As Integer<br>        Dim i As Integer, r As Integer<br>        For i = 1 To mx<br>            r = r * 2 + 1<br>            If r &gt; 2000000000 Then Return -1<br>        Next<br>        getNum = r<br>    End Function<br>End Class<br></td>