<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;map&gt; <br>#include &lt;set&gt; <br>#include &lt;cmath&gt;<br>#include &lt;vector&gt; <br>#include &lt;string&gt; <br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;algorithm&gt; <br>using namespace std; <br>#define FOR(i,a,b) for(int i=(a); i&lt;(b); ++i) <br>#define FORE(it,x) for(typeof(x.begin()) it=x.begin(); it!=x.end(); ++it) <br>#define SET(x, v) memset(x, v, sizeof (x)) <br>#define sz size() <br>#define cs c_str() <br>#define pb push_back <br>#define mp make_pair<br> <br>typedef long long i64; <br><br>class   CharmingTicketsEasy<br>            { public: <br>     int mod;<br>    int cach[52][512][512];<br>    int num[10], m;<br>    int n;<br>    int cach2[52][512];<br>    int doit(int len, int X, int Y) {<br>      if(abs(X) &gt;= 250 || abs(Y) &gt;= 250) return 0;<br>      if(abs(X) &gt; (n-len) * num[m-1] ||<br>         abs(Y) &gt; (n-len) * num[m-1])return 0;<br>      if(X&gt;Y) {<br>        int tmp = Y;<br>        Y = X;<br>        X = tmp;<br>      }<br>      if (len == n) {<br>      return (X==0 &amp;&amp; Y==0);<br>      }<br>      int&amp; ret = cach[len][X+250][Y+250];<br>      if(ret!=-1) return ret;<br>      ret = 0;<br>      FOR(i,0,m) {<br>        int x = num[i];<br>        FOR(j,0,m) {<br>          int y = num[j];<br>          int d = x-y;<br>          int A, B;<br>          A = X+ d;<br>          B = len%2 == 0 ? Y + d : Y - d;<br><br>        int v = doit(len+1, A, B);<br>        ret += v;<br>        if(ret &gt; mod) ret -= mod;<br>        }<br>      }<br>      return ret;<br>    }<br>    <br>    int doit2(int len, int X) {<br>      if(abs(X) &gt;= 250) return 0;<br>      if (len == n) {<br>      return X==0;<br>      }<br>      int&amp; ret = cach2[len][X+250];<br>      if(ret!=-1) return ret;<br>      ret = 0;<br>      FOR(i,0,m) {<br>        int x = num[i];<br>        FOR(j,0,m) {<br>          int y = num[j];<br>          int d = x-y;<br>          int A = X+d;<br>        int v = doit2(len+1, A);<br>        ret += v;<br>        if(ret &gt; mod) ret -= mod;<br>        }<br>      }<br>      return ret;<br>    }<br>    <br>  int count(int K, string good) {<br>    n= K;<br>    mod = 999983;<br>    m = 0;<br>    FORE(i,good) num[m++]= (*i) - '0';<br>    sort(num,num+m);<br>    SET(cach, -1);<br>    int C =doit(0, 0, 0); <br>    SET(cach2, -1);<br>    int A = doit2(0, 0);<br>    <br>    int X = A*2 - C;<br>    X %= mod;<br>    if(X&lt;0) X+=mod;<br>    return X;<br>  }<br><br><br>};<br></td>