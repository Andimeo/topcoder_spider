<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br><br>public class StringsAndTabs {<br>  public string[] transformTab(string[] tab, int[] stringsA, int[] stringsB, int d) {<br>        int[] noteSeq = new int[stringsB.Length];<br>        for (int i = 0; i &lt; noteSeq.Length; ++i)<br>            noteSeq[i] = i;<br>        Array.Sort(noteSeq, delegate(int a, int b)<br>        {<br>            if (stringsB[a] != stringsB[b])<br>                return stringsB[b] - stringsB[a];<br>            else<br>                return b - a;<br>        });<br>        string[] res = new string[stringsB.Length];<br>        for (int i = 0; i &lt; tab[0].Length; ++i)<br>        {<br>            List&lt;int&gt; toPlay = new List&lt;int&gt;();<br>            for (int j = 0; j &lt; tab.Length; ++j)<br>                if (tab[j][i] != '-')<br>                {<br>                    char ch = tab[j][i];<br>                    int note = stringsA[j];<br>                    if (ch &gt;= '0' &amp;&amp; ch &lt;= '9')<br>                        note += (ch - '0');<br>                    else<br>                        note += (ch - 'A' + 10);<br>                    toPlay.Add(note + d);<br>                }<br>            toPlay.Sort(delegate(int a, int b)<br>            {<br>                return b - a;<br>            });<br>            char[] will = new char[stringsB.Length];<br>            for (int j = 0; j &lt; stringsB.Length; ++j)<br>                will[j] = '-';<br>            foreach (int x in toPlay)<br>            {<br>                bool ok = false;<br>                foreach (int y in noteSeq)<br>                {<br>                    if (will[y] == '-' &amp;&amp; x &gt;= stringsB[y] &amp;&amp; x &lt;= stringsB[y] + 35)<br>                    {<br>                        char ch;<br>                        int delta = x - stringsB[y];<br>                        if (delta &lt;= 9)<br>                            ch = (char) ('0' + delta);<br>                        else<br>                            ch = (char) ('A' + (delta - 10));<br>                        will[y] = ch;<br>                        ok = true;<br>                        break;<br>                    }<br>                }<br>                if (!ok)<br>                {<br>                    for (int j = 0; j &lt; stringsB.Length; ++j)<br>                        will[j] = 'x';<br>                    break;<br>                }<br>            }<br>            for (int j = 0; j &lt; stringsB.Length; ++j)<br>                res[j] += will[j];<br>        }<br>        return res;<br>  }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>