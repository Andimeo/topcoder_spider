<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cassert&gt;<br>#include &lt;set&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstddef&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;utility&gt;<br>#include &lt;iterator&gt;<br>#include &lt;numeric&gt;<br>#include &lt;list&gt;<br>#include &lt;complex&gt;<br> <br>using namespace std;<br> <br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;string&gt; vs;<br>typedef long long ll;<br>typedef complex&lt;double&gt; pnt;<br>typedef pair&lt;int, int&gt; pii;<br> <br>#define RA(x) (x).begin(), (x).end()<br>#define FE(i, x) for (typeof((x).begin()) i = (x).begin(); i != (x).end(); i++)<br>#define SZ(x) ((int) (x).size())<br> <br> <br>class StringsAndTabs<br>{<br>public:<br>    vector &lt;string&gt; transformTab(vector &lt;string&gt; tab, vector &lt;int&gt; stringsA, vector &lt;int&gt; stringsB, int d);<br>};<br> <br>static inline char num2char(int n)<br>{<br>    return n &lt; 10 ? '0' + n : 'A' + (n - 10);<br>}<br> <br>static inline int char2num(int n)<br>{<br>    return n &lt;= '9' ? n - '0' : n - 'A' + 10;<br>}<br> <br>vector &lt;string&gt; StringsAndTabs::transformTab(vector &lt;string&gt; tab, vector &lt;int&gt; stringsA, vector &lt;int&gt; stringsB, int d)<br>{<br>    int N = tab[0].size();<br>    int SA = stringsA.size();<br>    int SB = stringsB.size();<br>    vector&lt;vector&lt;int&gt; &gt; notes;<br>    vs out;<br> <br>    notes.resize(N);<br>    for (int i = 0; i &lt; N; i++)<br>    {<br>        for (int j = 0; j &lt; SA; j++)<br>            if (tab[j][i] != '-')<br>                notes[i].push_back(stringsA[j] + d + char2num(tab[j][i]));<br>        sort(RA(notes[i]), greater&lt;int&gt;());<br>    }<br> <br>    out.resize(SB);<br>    for (int i = 0; i &lt; SB; i++)<br>        out[i] = string(N, '-');<br> <br>    for (int i = 0; i &lt; N; i++)<br>    {<br>        for (int j = 0; j &lt; SZ(notes[i]); j++)<br>        {<br>            int n = notes[i][j];<br>            int s;<br>            int best = -1;<br>            for (s = SB - 1; s &gt;= 0; s--)<br>                if (out[s][i] == '-' &amp;&amp; n &gt;= stringsB[s] &amp;&amp; n &lt;= stringsB[s] + 35)<br>                {<br>                    if (best == -1<br>                        || stringsB[best] &lt; stringsB[s])<br>                        best = s;<br>                }<br>            if (best &lt; 0)<br>            {<br>                for (s = 0; s &lt; SB; s++)<br>                    out[s][i] = 'x';<br>                break;<br>            }<br>            else<br>            {<br>                out[best][i] = num2char(n - stringsB[best]);<br>            }<br>        }<br>    }<br> <br>    return out;<br>}<br> <br> <br>// Powered by FileEdit<br></td>