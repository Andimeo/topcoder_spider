<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.io.*;<br>import java.text.*;<br>import java.math.*;<br>import java.util.regex.*;<br>import static java.lang.Math.*;<br>import static java.util.Arrays.*;<br>import static java.util.Collections.*;<br>import static java.lang.Integer.*;<br>import static java.lang.Long.*;<br>public class StringsAndTabs {<br>  public String[] transformTab(String[] tab, int[] stringsA, int[] stringsB, int d) {<br>    String[] ret = new String[stringsB.length];<br>    fill(ret, "");<br>    for(int i = 0; i &lt; tab[0].length(); i++){<br>      int[] notes = getNotes(tab, stringsA, i);<br>      for(int j = 0; j &lt; notes.length; j++){<br>        notes[j] += d;<br>      }<br>      String play = getPlay(stringsB, notes);<br>      for(int j = 0; j &lt; play.length(); j++){<br>        ret[j] += play.charAt(j);<br>      }<br>    }<br>    return ret;<br>  }<br>  int[] getNotes(String[] tab, int[] strings, int col){<br>    ArrayList&lt;Integer&gt; al = new ArrayList();<br>    for(int i = 0; i &lt; tab.length; i++){<br>      if(tab[i].charAt(col) == '-') continue;<br>      char c = tab[i].charAt(col);<br>      if(c &gt;= '0' &amp;&amp; c &lt;= '9') al.add(strings[i]+c-'0');<br>      else al.add(strings[i]+c-'A'+10);<br>    }<br>    int[] ret = new int[al.size()];<br>    for(int i = 0; i &lt; ret.length; i++){<br>      ret[i] = al.get(i);<br>    }<br>    return ret;<br>  }<br>  String getPlay(int[] strings, int[] notes){<br>    boolean[] used = new boolean[strings.length];<br>    sort(notes);<br>    char[] ret = new char[strings.length];<br>    fill(ret, '-');<br>    for(int i = notes.length-1; i &gt;= 0; i--){<br>      int best = -1;<br>      for(int j = 0; j &lt; strings.length; j++){<br>        if(used[j]) continue;<br>        if(notes[i] &lt; strings[j] || notes[i] &gt; strings[j]+35) continue;<br>        if(best == -1 || strings[j] &gt;= strings[best]) best = j;<br>      }<br>      if(best == -1){<br>        fill(ret, 'x');<br>        return new String(ret);<br>      }<br>      int tone = notes[i]-strings[best];<br>      if(tone &lt; 10) ret[best] = (char)('0'+tone);<br>      else ret[best] = (char)('A'+tone-10);<br>      used[best] = true;<br>    }<br>    return new String(ret);<br>  }<br> <br>}<br> <br>// Powered by PopsEdit<br>// Powered by CodeProcessor<br></td>