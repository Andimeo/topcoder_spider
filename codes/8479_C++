<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cassert&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;complex&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;ctime&gt;<br>#include &lt;deque&gt;<br>#include &lt;functional&gt;<br>#include &lt;iterator&gt;<br>#include &lt;iostream&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;string&gt;<br>#include &lt;valarray&gt;<br>#include &lt;vector&gt;<br><br>using namespace std;<br><br>const int inf = 1000000000;<br>const double eps = 1e-8;<br>const double PI = 3.1415926535897932384626433832795;<br><br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;vi&gt; vvi;<br>typedef long double ld;<br>typedef vector&lt;ld&gt; vd;<br>typedef pair&lt;int,int&gt; pii;<br>typedef long long ll;<br>typedef pair&lt;ll, ll&gt; pll;<br>typedef vector&lt;bool&gt; vb;<br>typedef vector&lt;string&gt; vs;<br><br>#define MP make_pair<br>#define all(v) (v).begin(), (v).end()<br><br>const int MAXN = 4001;<br>bool win[MAXN][MAXN];<br>bool calc[MAXN][MAXN];<br><br>int dx[8] = {2,1,-1,-2,-2,-1,1,2};<br>int dy[8] = {1,2,2,1,-1,-2,-2,-1};<br><br>bool first_win(int x, int y)<br>{<br>  if(x &lt; 0)<br>    x = -x;<br>  if(y &lt; 0)<br>    y = -y;<br>  if(x &lt; y)<br>    swap(x, y);<br>  if(x != y &amp;&amp; x != 0 &amp;&amp; y != 0)<br>    return true;<br>  if(x == 0 &amp;&amp; y == 0)<br>    return false;<br>  if(calc[x][y])<br>    return win[x][y];<br>  calc[x][y] = true;<br>  bool&amp; res = win[x][y];<br>  for(int dir = 0; dir &lt; 8; dir++)<br>  {<br>    int curx = x;<br>    int cury = y;<br>    while(1)<br>    {<br>      int nx = curx + dx[dir];<br>      int ny = cury + dy[dir];<br>      if (nx * nx + ny * ny &lt; curx * curx + cury * cury)<br>      {<br>        if(!first_win(nx, ny))<br>        {<br>          return res = true;<br>        }<br>        curx = nx;<br>        cury = ny;<br>      }<br>      else<br>        break;<br>    }<br>  }<br>  return res = false;<br>}<br><br>class ErrantKnight<br> {<br>  public:<br>  string whoWins2(vector &lt;int&gt; x, vector &lt;int&gt; y) <br>  {<br>    string result;<br>    for(int i = 0; i &lt; x.size(); i++)<br>      if(first_win(x[i], y[i]))<br>      {<br>        result += 'W';<br>      }<br>      else<br>        result += 'B';<br>    return result;<br>  }<br><br>  string whoWins(vector &lt;int&gt; x, vector &lt;int&gt; y) <br>  {<br>    string result;<br>    for(int i = 0; i &lt; x.size(); i++)<br>      if(first_win(x[i], y[i]))<br>      {<br>        result += 'W';<br>      }<br>      else<br>        result += 'B';<br>    return result;<br>  }<br>  <br><br>};<br><br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>