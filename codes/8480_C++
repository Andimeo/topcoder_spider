<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define LENGTH(X) ((int)(X.length()))<br>typedef long long int64;<br> <br>class ForbiddenStrings<br>{<br>public:<br>  map&lt;string,int64&gt; M[60];<br>  int64 solve(int n,string s)<br>  {<br>    if (LENGTH(s)==3 &amp;&amp; s[0]!=s[1] &amp;&amp; s[0]!=s[2] &amp;&amp; s[1]!=s[2]) return 0;<br>    if (LENGTH(s)&gt;2) return solve(n,s.substr(1));<br>    if (n==0) return 1;<br>    if (M[n].find(s)!=M[n].end()) return M[n][s];<br>    int64 ret=0;<br>    for (char c='A';c&lt;='C';c++) ret+=solve(n-1,s+c);<br>    return M[n][s]=ret;<br>  }<br>  int64 countNotForbidden(int n)<br>  {<br>    int64 ret=solve(n,"");<br>    return ret;<br>  }<br>};<br> <br> <br> <br>// Powered by PopsEdit<br></td>