<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class BirthdayReminders<br>{<br>  class E<br>  {<br>    public int Dt,Num,Id,Oc;<br>    public E(int d, int n, int i, int o){Dt=d;Num=n;Id=i;Oc=o;}<br>  }<br>  public string[] remind(string[] friendNames, int[] birthDates, int currentDate, string[] occasions, int[] days, int k0)<br>  {<br>    List&lt;E&gt; datas = new List&lt;E&gt;();<br>    for(int i=0;i&lt;friendNames.Length;i++)<br>    {<br>      for(int j=0;j&lt;occasions.Length;j++)<br>      {<br>        int nextnum = (currentDate-birthDates[i]-1)/days[j] + 1;<br>        int day = nextnum * days[j] + birthDates[i];<br>        for(int k=0;k&lt;k0;k++)<br>        {<br>          datas.Add(new E(day, nextnum, i, j) );<br>          day += days[j]; nextnum++;<br>        }<br>      }<br>    }<br> <br>    datas.Sort(delegate(E a, E b)<br>      {<br>        if(a.Dt != b.Dt) return a.Dt-b.Dt;<br>        if(a.Oc != b.Oc) return a.Oc-b.Oc;<br>        return a.Id-b.Id;<br>      });<br>    <br>    string[] ret = new string[k0];<br>    for(int k=0; k&lt;k0; k++)<br>    {<br>      E e = datas[k];<br>      ret[k] = ""+e.Dt+". "+friendNames[e.Id]+" "+occasions[e.Oc]+" ("+e.Num+")";<br>    }<br>    return ret;<br>  }<br> <br> <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>