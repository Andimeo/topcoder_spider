<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;ctime&gt;<br><br>#define pb push_back<br>#define sz size()<br>#define FOR(v,lo,hi) for (int v=(lo);v&lt;(hi);v++)<br>#define FORD(v,hi,lo) for (int v=((hi)-1);v&gt;=(lo);v--)<br><br>using namespace std;<br><br><br>class BirthdayReminders {<br>public:<br>  vector &lt;string&gt; remind(vector &lt;string&gt; f, vector &lt;int&gt; b, int now, vector &lt;string&gt; o, vector &lt;int&gt; d, int k) {<br>    vector &lt;string&gt; res;<br>    int a[60][60];<br>    int n=f.sz;<br>    int m=o.sz;<br><br>    FOR (i,0,n) FOR (j,0,m) {<br>      a[i][j]=b[i];<br>      int t=(now-b[i])/d[j];<br>      if ((now-b[i])%d[j]!=0) t++;<br>      a[i][j]+=d[j]*t;<br>    }<br>    while (k--) {<br>      int mi=0,mj=0;<br>      FOR (j,0,m) FOR (i,0,n) if (a[i][j]&lt;a[mi][mj]) {mi=i;mj=j;}<br>      ostringstream oss;<br>      oss&lt;&lt;a[mi][mj]&lt;&lt;". "&lt;&lt;f[mi]&lt;&lt;" "&lt;&lt;o[mj]&lt;&lt;" ("&lt;&lt;(a[mi][mj]-b[mi])/d[mj]&lt;&lt;")";<br>      res.pb(oss.str());<br>      a[mi][mj]+=d[mj];<br>    }<br>    return res;<br>  }<br><br>};<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>