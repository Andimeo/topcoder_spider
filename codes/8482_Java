<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class UnderscoreJustification<br>{<br>  public String justifyLine(String[] words, int width)<br>  {<br>    int n = words.length;<br>    int sumlen = 0;<br>    for(int i = 0; i &lt; n; i++)<br>      sumlen += words[i].length();<br>    sumlen = width - sumlen;<br>    int len1 = sumlen / (n - 1);<br>    int count2 = sumlen % (n - 1);<br>    int count1 = n - 1 - count2;<br>    String str1 = "";<br>    for(int i = 0; i &lt; len1; i++)<br>      str1 += "_";<br>    String str2 = str1 + "_";<br> <br>    String res = words[0];<br>    for(int i = 1; i &lt; n; i++)<br>    {<br>      char c = words[i].charAt(0);<br>      if (Character.isUpperCase(c))<br>      {<br>        if (count1 &gt; 0)<br>        {<br>          res += str1;<br>          count1--;<br>        }<br>        else<br>        {<br>          res += str2;<br>          count2--;<br>        }<br>      }<br>      else<br>      {<br>        if (count2 &gt; 0)<br>        {<br>          res += str2;<br>          count2--;<br>        }<br>        else<br>        {<br>          res += str1;<br>          count1--;<br>        }<br>      }<br>      res += words[i];<br>    }<br>    return res;<br>  }<br>  <br>  <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>