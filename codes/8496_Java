<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class NSegmentDisplay {<br>  public String brokenSegments(String[] symbols, String[] patterns) {<br>        int n = symbols[0].length();<br>        int[] res = new int[n];<br>        for (String p : patterns)<br>            for (int i = 0; i &lt; n; ++i)<br>                if (p.charAt(i) == '1') {<br>                    res[i] = 1;<br>                }<br>        for (String p : patterns) {<br>            boolean ok = false;<br>            for (String s : symbols) {<br>                boolean fits = true;<br>                for (int i = 0; i &lt; n; ++i)<br>                    if (res[i] == 1 &amp;&amp; p.charAt(i) != s.charAt(i))<br>                        fits = false;<br>                if (fits) {<br>                    ok = true;<br>                    break;<br>                }<br>            }<br>            if (!ok)<br>                return "INCONSISTENT";<br>        }<br>        for (int j = 0; j &lt; n; ++j)<br>            if (res[j] == 0)<br>            {<br>                boolean valid = true;<br>                for (String p : patterns) {<br>                    boolean ok = false;<br>                    for (String s : symbols) {<br>                        boolean fits = true;<br>                        for (int i = 0; i &lt; n; ++i)<br>                            if (res[i] == 1 &amp;&amp; p.charAt(i) != s.charAt(i))<br>                                fits = false;<br>                        if (fits &amp;&amp; s.charAt(j) == '0') {<br>                            ok = true;<br>                            break;<br>                        }<br>                    }<br>                    if (!ok) {<br>                        valid = false;<br>                        break;<br>                    }<br>                }<br>                if (valid)<br>                    res[j] = 3;<br>                else<br>                    res[j] = 2;<br>            }<br>        String r = "";<br>        for (int i = 0; i &lt; n; ++i) {<br>            switch (res[i]) {<br>                case 1:<br>                    r += "Y";<br>                    break;<br>                case 2:<br>                    r += "N";<br>                    break;<br>                case 3:<br>                    r += "?";<br>                    break;<br>            }<br>        }<br>        return r;<br>  }<br> <br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>