<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Collections.Generic;<br><br>public class LargestGap {<br>  public int getLargest(string[] board) {<br>        StringBuilder b = new StringBuilder();<br>        foreach (string s in board)<br>            b.Append(s);<br>        string input = b.ToString();<br>        List&lt;int&gt; res = null;<br>        int resAt = -1;<br>        for (int u = 0; u &lt; input.Length; ++u)<br>        {<br>            int l = u;<br>            int r = u;<br>            bool[] off = new bool[input.Length];<br>            while (input[l] == input[u])<br>            {<br>                off[l] = true;<br>                --l;<br>                if (l &lt; 0)<br>                    l += input.Length;<br>            }<br>            while (input[r] == input[u]) {<br>                off[r] = true;<br>                ++r;<br>                if (r &gt;= input.Length)<br>                    r -= input.Length;<br>            }<br>            char ch = input[r];<br>            while (input[r] == ch)<br>            {<br>                ++r;<br>                if (r &gt;= input.Length)<br>                    r -= input.Length;<br>            }<br>            List&lt;int&gt; cur = new List&lt;int&gt;();<br>            bool atDots = false;<br>            for (int i = 0; i &lt; input.Length; ++i)<br>            {<br>                int at = (r + i) % input.Length;<br>                if (off[at])<br>                    continue;<br>                if (input[at] == '.')<br>                {<br>                    if (atDots)<br>                        ++cur[cur.Count - 1];<br>                    else<br>                    {<br>                        atDots = true;<br>                        cur.Add(1);<br>                    }<br>                }<br>                else atDots = false;<br>            }<br>            cur.Sort();<br>            bool ok = false;<br>            if (res == null)<br>                ok = true;<br>            else {<br>                for (int i = cur.Count - 1; i &gt;= 0; --i) {<br>                    if (cur[i] &gt; res[i]) {<br>                        ok = true;<br>                        break;<br>                    }<br>                    if (cur[i] &lt; res[i])<br>                        break;<br>                }<br>            }<br>            if (ok)<br>            {<br>                res = cur;<br>                resAt = u;<br>            }<br>        }<br>        return resAt;<br>  }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>