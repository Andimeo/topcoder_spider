<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>using namespace std;<br> <br>#define ALL(t) t.begin(),t.end()<br>#define FOR(i,n) for (int i=0; i&lt;(int)(n); i++)<br>typedef vector&lt;int&gt; vi;<br> <br>struct LargestGap {<br>  int getLargest(vector &lt;string&gt; board) {<br>    string s=accumulate(board.begin(),board.end(),string(""));<br>    vi best;<br>    int where=-1;<br>    FOR(i,s.size())if(s[i]=='X'){<br>      string s2=s.substr(i)+s.substr(0,i)+"X";<br>      vi cur;<br>      int len=0;<br>      FOR(j,s2.size())if(s2[j]=='.')len++;else if(len){cur.push_back(len);len=0;}<br>      if(cur.size()&gt;1)cur[0]+=cur.back(),cur.pop_back();<br>      sort(cur.begin(),cur.end(),greater&lt;int&gt;());<br>      if(cur&gt;best)best=cur,where=i;<br>    }<br>    return where; <br>  }<br>};<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>