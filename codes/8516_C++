<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;memory&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;algorithm&gt;<br>using namespace std;<br><br>typedef long long Int;<br>typedef pair&lt;int,int&gt; PII;<br>typedef vector&lt;int&gt; VInt;<br><br>#define FOR(i, a, b) for(i = (a); i &lt; (b); ++i)<br>#define RFOR(i, a, b) for(i = (a) - 1; i &gt;= (b); --i)<br>#define CLEAR(a, b) memset(a, b, sizeof(a))<br>#define SIZE(a) int((a).size()) <br>#define ALL(a) (a).begin(),(a).end() <br>#define PB push_back<br>#define MP make_pair<br><br>int R[64][64];<br>int Res[1 &lt;&lt; 16];<br><br>class PaintingBoards {<br>  public:<br>  double minimalTime(vector &lt;int&gt; A, vector &lt;int&gt; S) <br>  {<br>    double Min = 0, Max = 1e7;<br>    int N = SIZE(S);<br>    int M = SIZE(A);<br>    int t;<br>    FOR(t, 0, 64)<br>    {<br>      double Mid = (Max + Min)/2;<br>      int i, j, k;<br>      FOR(i, 0, N)<br>        FOR(j, 0, M)<br>        {<br>          int sum = 0;<br>          FOR(k, j, M)<br>          {<br>            sum += A[k];<br>            if(sum &gt; Mid*S[i])<br>              break;<br>          }<br><br>          R[i][j] = k;<br>        }<br><br>      FOR(i, 0, N)<br>        R[i][M] = M;<br><br>      CLEAR(Res, 0);<br>      FOR(i, 0, 1 &lt;&lt; N)<br>      {<br>        FOR(j, 0, N)<br>          if((i &amp; (1 &lt;&lt; j)) == 0)<br>            Res[i ^ (1 &lt;&lt; j)] = max(Res[i ^ (1 &lt;&lt; j)], R[j][ Res[i] ]);<br>      }<br><br>      if(Res[(1 &lt;&lt; N) - 1] == M)<br>        Max = Mid;<br>      else<br>        Min = Mid;<br>    }<br><br>    return Max;<br>  }<br><br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>