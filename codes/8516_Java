<td class="problemText" colspan="8" valign="middle" align="left">
            import java.io.*;<br>import java.util.*;<br>import java.math.*;<br><br>public class PaintingBoards {<br>  <br>  public boolean canPaint(int[] boardLength, int painterSpeed[], double res) {<br>    int n = boardLength.length;<br>    int m = painterSpeed.length;<br>    int preCalc[][] = new int[n][m];<br>    int i,j,k;<br>    for (i = 0; i &lt; n; i++) {<br>      for (j = 0; j &lt; m; j++) {<br>        int len = 0;<br>        for (k = i; k &lt; n; k++) {<br>          len += boardLength[k];<br>          if (res * painterSpeed[j] &lt; len) break;<br>        }<br>        preCalc[i][j] = k;<br>      }<br>    }<br>    <br>    boolean dyn[][] = new boolean[n+1][1&lt;&lt;m];<br>    dyn[0][0] = true;<br>    for (i = 0; i &lt; n; i++) {<br>      for (j = 0; j &lt; (1 &lt;&lt; m); j++) {<br>        if (dyn[i][j]) {<br>          for (k = 0; k &lt; m; k++) {<br>            if ((j &amp; (1 &lt;&lt; k)) == 0) {<br>              dyn[preCalc[i][k]][j|(1&lt;&lt;k)] = true;<br>            }<br>          }<br>        }<br>      }<br>    }<br>    <br>    for (j = 0; j &lt; (1 &lt;&lt; m); j++) {<br>      if (dyn[n][j]) return true;<br>    }<br>    return false;<br>  }<br>    public double minimalTime(int[] boardLength, int[] painterSpeed) {<br>      int n = boardLength.length;<br>      int m = painterSpeed.length;<br>      double res[][] = new double[n+1][1&lt;&lt;m];<br>      <br>      <br>      int i,j,k;<br>      for (i = 0; i &lt;= n; i++) Arrays.fill(res[i], 1e20);<br>      for (j = 0; j &lt; (1 &lt;&lt; m); j++) {<br>        for (i = 0; i &lt; n; i++) {<br>          <br>        }<br>      }<br>      double min = 0;<br>      double max = 5000000;<br>      while ((max - min) / (max + min) &gt; 1e-11) {<br>        double med = (max + min) / 2;<br>        if (canPaint(boardLength, painterSpeed,med)) max = med; else min = med;<br>      }<br>      return max;<br>    }<br><br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>