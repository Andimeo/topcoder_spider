<td class="problemText" colspan="8" valign="middle" align="left">
            //Be the MAN<br>//Challenge it!<br><br>import java.util.Arrays;<br><br>public class SuperWatch {<br>    public int smallestImprecision(String[] times, int[] zones) {<br>        int n = times.length;<br>        int[] t = new int[n];<br>        for (int i = 0; i &lt; n; i++) {<br>            t[i] = Integer.parseInt(times[i].substring(0, 2)) * 60 +<br>                    Integer.parseInt(times[i].substring(3, 5));<br>        }<br>        int cc = 60 * 24;<br>        Arrays.sort(t);<br>        Arrays.sort(zones);<br>        int res = 1000000000;<br>        for (int i = 0; i &lt; n; i++) {<br>            int[] tt = new int[n];<br>            for (int j = 0; j &lt; n; j++) {<br>                tt[j] = t[j] - (zones[(i + j) % n]) * 60;<br>                while (tt[j] &lt; 0) tt[j] += cc;<br>            }<br>            Arrays.sort(tt);<br>            int r = tt[0] + cc - tt[n - 1];<br>            for (int j = 0; j &lt; n - 1; j++) {<br>                r = Math.max(r, tt[j + 1] - tt[j]);<br>            }<br>            r = cc - r;<br>            if (r &lt; res) res = r;<br>        }<br>        return res;<br>    }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>