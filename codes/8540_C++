<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cassert&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstring&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br> <br>using namespace std;<br>typedef double real;<br>const int MaxN = 16, MaxL = 1 &lt;&lt; MaxN;<br>const real MaxC = 1E25;<br> <br>class PolygonCover<br>{<br>private:<br> real f [MaxL];<br> <br> inline real area (real x1, real y1, real x2, real y2, real x3, real y3)<br> {<br>  return (x1 - x2) * (y1 + y2) + (x2 - x3) * (y2 + y3) + (x3 - x1) * (y3 + y1);<br> }<br> <br>public:<br> double getArea (vector &lt;int&gt; x, vector &lt;int&gt; y)<br> {<br>  int i, j, k, l, m, n, p;<br>  real g;<br>  n = x.size ();<br>  assert (n == y.size ());<br>  m = 1 &lt;&lt; n;<br>  f[0] = 0.0;<br>  for (i = 1; i &lt; m; i++)<br>   f[i] = MaxC;<br>  for (i = 0; i &lt; m; i++)<br>  {<br>   for (j = 0; j &lt; n; j++)<br>    for (k = j + 1; k &lt; n; k++)<br>     for (l = k + 1; l &lt; n; l++)<br>     {<br>      p = i | (1 &lt;&lt; j) | (1 &lt;&lt; k) | (1 &lt;&lt; l);<br>      g = fabs (area (x[j], y[j], x[k], y[k], x[l], y[l]));<br>      if (f[p] &gt; f[i] + g)<br>       f[p] = f[i] + g;<br>     }<br>  }<br>  return f[m - 1] * 0.5;<br> }<br>};<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>