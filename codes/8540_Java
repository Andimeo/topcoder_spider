<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class PolygonCover<br>{<br>  private int f(int x1, int y1, int x2, int y2, int x3, int y3)<br>  {<br>    x2 -= x1;<br>    y2 -= y1;<br>    x3 -= x1;<br>    y3 -= y1;<br>    return Math.abs(x2 * y3 - x3 * y2);<br>  }<br>  <br>  public double getArea(int[] x, int[] y)<br>  {<br>    int MAX = 1000000000;<br>    int n = x.length;<br>    int nn = 1 &lt;&lt; n;<br>    int[] min = new int[nn];<br>    Arrays.fill(min, MAX);<br>    <br>    min[0] = 0;<br>    <br>    int[][][] sq = new int[n][n][n];<br>    for(int p1 = 0; p1 &lt; n; p1++)<br>      for(int p2 = p1 + 1; p2 &lt; n; p2++)<br>        for(int p3 = p2 + 1; p3 &lt; n; p3++)<br>          sq[p1][p2][p3] = f(x[p1], y[p1], x[p2], y[p2], x[p3], y[p3]);<br>    for(int i = 0; i &lt; nn; i++)<br>    {<br>      for(int p1 = 0; p1 &lt; n; p1++)<br>        for(int p2 = p1 + 1; p2 &lt; n; p2++)<br>          for(int p3 = p2 + 1; p3 &lt; n; p3++)<br>          {<br>            int j = i | (1 &lt;&lt; p1) | (1 &lt;&lt; p2) | (1 &lt;&lt; p3);<br>            int s = min[i] + sq[p1][p2][p3];<br>            if (min[j] &gt; s)<br>              min[j] = s;<br>          }<br>    }    <br>    <br>    return min[nn - 1] / 2.0;<br>  }<br>  <br>  <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>