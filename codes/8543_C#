<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class LittleSquares {<br>  public string winner(string[] state) {<br>        int x = 0;<br>        c1 = new int[30];<br>        c2 = new int[30];<br>        for (int i = 0; i &lt; 30; ++i)<br>        {<br>            c1[i] = -1;<br>            c2[i] = -1;<br>        }<br>        for (int i = 0; i &lt; state.Length / 2; ++i)<br>            x ^= eval(state[i * 2], state[i * 2 + 1]);<br>        if (x == 0)<br>            return "second";<br>        else<br>            return "first";<br>  }<br><br>    int[] c1;<br>    int[] c2;<br><br>    int eval(string s1, string s2)<br>    {<br>        int len = 0;<br>        int res = 0;<br>        for (int i = 0; i &lt; s1.Length; ++i)<br>        {<br>            int c = 0;<br>            if (s1[i] == '.')<br>                ++c;<br>            if (s2[i] == '.')<br>                ++c;<br>            if (c == 2)<br>                ++len;<br>            else<br>            {<br>                res ^= get2(len) ^ get1(c);<br>                len = 0;<br>            }<br>        }<br>        res ^= get2(len);<br>        return res;<br>    }<br><br>    int get1(int n)<br>    {<br>        if (c1[n] &gt;= 0)<br>            return c1[n];<br>        bool[] can = new bool[50];<br>        if (n &gt; 0)<br>            can[get1(n - 1)] = true;<br>        int res;<br>        for (res = 0; can[res]; ++res) ;<br>        c1[n] = res;<br>        return res;<br>    }<br><br>    int get2(int n)<br>    {<br>        if (c2[n] &gt;= 0)<br>            return c2[n];<br>        bool[] can = new bool[50];<br>        for (int i = 0; i &lt; n - 1; ++i)<br>        {<br>            can[get2(i) ^ get2(n - 2 - i)] = true;<br>        }<br>        for (int i = 0; i &lt; n; ++i)<br>        {<br>            can[get2(i) ^ get2(n - 1 - i) ^ get1(1)] = true;<br>        }<br>        int res;<br>        for (res = 0; can[res]; ++res) ;<br>        c2[n] = res;<br>        return res;<br>    }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>