<td class="problemText" colspan="8" valign="middle" align="left">
            // I think I have been challenged...<br><br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>#define LS &lt;<br>#define Size(x) (int(x.size()))<br>#define LET(k,val) typeof(val) k = (val)<br>// execute "act", and return "val" as an expression result<br>#define CLC(act,val) (*({act; static typeof(val) CLCR; CLCR = (val); &amp;CLCR;}))<br><br>// All macros with parameters "k,a,b" run the "k" variable in range [a,b)<br>#define FOR(k,a,b) for(typeof(a) k=(a); k LS (b); ++k)<br><br>// find the first k in [a,b) that satisfies cond, or b if none<br>#define FIRST(k,a,b,cond) CLC(LET(k, a); for(; k LS (b); ++k) if(cond) break, k)<br><br>#line 3 "LittleSquares.cc"<br><br>int gim[1&lt;&lt;20];<br><br>class LittleSquares {<br>  public:<br>  string winner(vector &lt;string&gt; state) {<br>    // !FDI<br>    <br>    FOR(sn, 0, 1&lt;&lt;20) {<br>      bool left[60];<br>      FOR(a,0,50) left[a] = true;<br>      <br>      FOR(u, 0, 20) if(sn &amp; (1&lt;&lt;u)) left[gim[sn ^ (1&lt;&lt;u)]] = false;<br>      <br>      FOR(u, 0, 9) {<br>        int st = 3075 &lt;&lt; u;<br>        if((sn &amp; st) == st) left[gim[sn ^ st]] = false;<br>        }<br>      <br>      gim[sn] = FIRST(t, 0, 50, left[t]);<br>      }<br>    <br>    int gres = 0;<br>    for(int y=0; y&lt;Size(state); y++) {<br>      int gpos = 0;<br>      FOR(x,0,Size(state[y])) if(state[y][x] == '.') gpos |= (1&lt;&lt;x);<br>      y++;<br>      if(y &lt; Size(state))<br>      FOR(x,0,Size(state[y])) if(state[y][x] == '.') gpos |= (1024&lt;&lt;x);<br>      <br>      printf("pos: %d gim: %d\n", gpos, gim[gpos]);<br>      gres ^= gim[gpos];<br>      }<br><br>    return gres ? "first" : "second";<br>    }<br>  };<br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>