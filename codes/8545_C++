<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;iostream&gt;<br>#include &lt;fstream&gt;<br>using namespace std;<br><br>int ss[10];<br>int cs[10];<br>int cp[10];<br>int tcp[10];<br>int n, m;<br>int tmin;<br>int was[10];<br><br>int Count()<br>{<br>  memset(was, 0, sizeof(was));<br>  int i;<br>  for (i = 0; i &lt; n; i++)<br>  {<br>    was[cp[i]] = 1;<br>  }<br>  for (i = 0; i &lt; m; i++) if (was[i] == 0) return 2000000000;<br>  int minfr = 2000000000;<br>  int maxfr = -2000000000;<br>  for (i = 0; i &lt; n; i++)<br>  {<br>    int fr = cs[cp[i]] - ss[i];<br>    if (fr == 0) continue;<br>    if (fr &lt; 0) fr += 12;<br>    fr += tcp[i];<br>    if (fr &lt; minfr) minfr = fr;<br>    if (fr &gt; maxfr) maxfr = fr;<br>  }<br>  if (minfr == 2000000000) return 0;<br>  return maxfr - minfr + 1;<br>}<br><br>void Gen(int pos)<br>{<br>  if (pos == n)<br>  {<br>    int cur = Count();<br>    if (cur &lt; tmin) tmin = cur;<br>    return;<br>  }<br>  int i;<br>  tcp[pos] = 0;<br>  for (i = 0; i &lt; m; i++)<br>  {<br>    cp[pos] = i;<br>    Gen(pos + 1);    <br>  }<br>  tcp[pos] = 12;<br>  for (i = 0; i &lt; m; i++)<br>  {<br>    cp[pos] = i;<br>    Gen(pos + 1);    <br>  }<br>}<br><br>class GuitarChords<br>{<br>public:  <br>  int Convert(string n)<br>  {<br>    if (n == "A") return 0;<br>    if (n == "A#") return 1;<br>    if (n == "B") return 2;<br>    if (n == "C") return 3;<br>    if (n == "C#") return 4;<br>    if (n == "D") return 5;<br>    if (n == "D#") return 6;<br>    if (n == "E") return 7;<br>    if (n == "F") return 8;<br>    if (n == "F#") return 9;<br>    if (n == "G") return 10;<br>    if (n == "G#") return 11;<br>    return 12;<br>  }<br>  int stretch(vector &lt;string&gt; strings, vector &lt;string&gt; chord)<br>  {<br>    n = strings.size();<br>    m = chord.size();<br>    int i;<br>    for (i = 0; i &lt; n; i++) ss[i] = Convert(strings[i]);<br>    for (i = 0; i &lt; m; i++) cs[i] = Convert(chord[i]);<br>    tmin = 2000000000;<br>    Gen(0);<br>    return tmin;<br>  }<br>};<br></td>