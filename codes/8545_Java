<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br><br>public class GuitarChords {<br><br>    private final static String[] notes = {"A", "A#", "B", "C", "C#", "D", "D#", "E", "F", "F#", "G", "G#"};<br><br>    int n;<br>    int m;<br>    int[] str;<br>    int[] ch;<br><br>    public int stretch(String[] strings, String[] chord) {<br>        n = strings.length;<br>        str = new int[n];<br>        for (int i = 0; i &lt; n; i++) {<br>            int j = 0;<br>            while (!notes[j].equals(strings[i])) j++;<br>            str[i] = j;<br>        }<br>        m = chord.length;<br>        ch = new int[m];<br>        for (int i = 0; i &lt; m; i++) {<br>            int j = 0;<br>            while (!notes[j].equals(chord[i])) j++;<br>            ch[i] = j;<br>        }<br>        int[] p = new int[n];<br><br>        int res = 1000000000;<br><br>        while (true) {<br><br>            boolean[] z = new boolean[m];<br>            for (int i : p) {<br>                z[i] = true;<br>            }<br>            boolean ok = true;<br>            for (boolean b : z) {<br>                if (!b) ok = false;<br>            }<br><br>            if (ok) {<br>                boolean[] q = new boolean[notes.length];<br>                for (int i = 0; i &lt; n; i++) {<br>                    if (ch[p[i]] != str[i]) {<br>                        int j = ch[p[i]] - str[i];<br>                        if (j &lt; 0) j += notes.length;<br>                        q[j] = true;<br>                    }<br>                }<br>                int j = notes.length - 1;<br>                while (j &gt;= 0 &amp;&amp; !q[j]) j--;<br>                if (j &lt; 0) return 0;<br>                for (int i = 0; i &lt; notes.length; i++) {<br>                    res = Math.min(res, (j - i + 1));<br>                    if (q[i]) j = i + notes.length;<br>                }<br>            }<br><br>            //inc<br>            int j = 0;<br>            while (j &lt; n &amp;&amp; p[j] == m - 1) {<br>                p[j] = 0;<br>                j++;<br>            }<br>            if (j == n) break;<br>            p[j]++;<br>        }<br><br>        return res;<br><br>    }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>