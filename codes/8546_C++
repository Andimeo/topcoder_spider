<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;set&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;sstream&gt;<br><br>using namespace std;<br><br>#define forn(i, n) for (int i = 0; i &lt; (int)(n); i++)<br>#define sz(a) (int)(a).size()<br><br>typedef long long ll;<br>typedef vector &lt;int&gt; vi;<br><br>#define maxn 53<br>#define eps 1e-6<br><br>typedef long double dbl;<br><br>dbl a[maxn], b[maxn], c[maxn];<br>int u[maxn];<br><br>struct pnt<br>{<br>  dbl x, y;<br>  pnt( dbl _x = 0, dbl _y = 0 ) { x = _x, y = _y; }<br>};<br><br>bool operator &lt; ( pnt a, pnt b )<br>{<br>  if (fabs(a.x - b.x) &gt; eps)<br>    return a.x &lt; b.x;<br>  return a.y + eps &lt; b.y;<br>}<br><br>int Par( int i, int j )<br>{<br>  return fabs(a[i] - a[j]) &lt; eps &amp;&amp; fabs(b[i] - b[j]) &lt; eps;<br>}<br><br>class CentersOfSymmetry<br>{<br>public:<br>  int lineConfigurations(vector &lt;int&gt; x1, vector &lt;int&gt; y1, vector &lt;int&gt; x2, vector &lt;int&gt; y2)<br>  {<br>    int n = sz(x1);<br>    forn(i, n)<br>    {<br>      a[i] = y1[i] - y2[i];<br>      b[i] = x2[i] - x1[i];<br>      double no = sqrt(a[i] * a[i] + b[i] * b[i]);<br>      a[i] /= no, b[i] /= no;<br>      if (a[i] &lt; -eps || (a[i] &lt; eps &amp;&amp; b[i] &lt; -eps))<br>        a[i] = -a[i], b[i] = -b[i];<br>      c[i] = -(a[i] * x1[i] + b[i] * y1[i]);<br>    }<br>    <br>    int s = 0, t = -1;<br>    forn(i, n)<br>      if (!Par(i, s))<br>        t = i;<br>    if (t == -1)<br>    {<br>      sort(c, c + n);<br>      int f = 1;<br>      forn(i, n)<br>        if (fabs(c[i] + c[n - i - 1] - c[n - 1] - c[0]) &gt; eps)<br>          f = 0;<br>      return f ? -1 : 0;<br>    }<br>    else<br>    {<br>      set &lt;pnt&gt; ans;<br>      forn(i, n)<br>        forn(j, n)<br>          if (Par(i, s) &amp;&amp; Par(j, t))<br>          {<br>            dbl a1 = a[i], b1 = b[i], c1 = (c[i] + c[s]) / 2;<br>            dbl a2 = a[j], b2 = b[j], c2 = (c[j] + c[t]) / 2;<br>            dbl x, y;<br>            x = -(c1 * b2 - c2 * b1) / (a1 * b2 - a2 * b1);<br>            y = -(c1 * a2 - c2 * a1) / (b1 * a2 - b2 * a1);<br>            <br>            int f = 1;<br>            memset(u, 0, sizeof(u));<br>            forn(k, n)<br>              if (!u[k])<br>              {<br>                forn(t, n)<br>                  if (!u[t] &amp;&amp; Par(k, t) &amp;&amp; fabs(a[k] * x + b[k] * y + (c[k] + c[t]) / 2) &lt; eps)<br>                  {<br>                    u[k] = u[t] = 1;<br>                    break;<br>                  }<br>                if (!u[k])<br>                  f = 0;<br>              }<br>            if (f)<br>              ans.insert(pnt(x, y));<br>          }<br>       return ans.size();<br>    }    <br>  }<br>};<br></td>