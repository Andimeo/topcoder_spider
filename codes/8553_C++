<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;string&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>using namespace std;<br>#define FORC( V, it ) for( __typeof( (V).begin() ) it = (V).begin(); it != (V).end(); ++it )<br>const int MAXL = 1000;<br>const int INF = 987654321;<br>const double EPS = 1e-9;<br>char buff[MAXL+1];<br><br><br>int n, k;<br><br>long long dp[1&lt;&lt;20];<br><br>long long rek( int state, int cnt )<br>{<br>    long long &amp;ref = dp[state];<br>    if ( ref != -1 ) return ref;<br>    <br>    if ( cnt == k ) return ( ref = 1 );<br><br>    ref = 0;<br>    for( int i = 0; i &lt; n; ++i ) <br>        if ( i != cnt &amp;&amp; !( ( state &gt;&gt; i ) &amp; 1 ) )<br>            ref += rek( state | ( 1 &lt;&lt; i ), cnt + 1 );<br>    return ref;<br>}<br><br>class UnfixedArrangements {<br>public:<br>    long long count( int n, int k ) {<br>        ::n = n;<br>        ::k = k;<br>        memset( dp, -1, sizeof ( dp ) ); <br>        return rek( 0, 0 );<br>    }<br>};<br><br><br><br><br><br><br><br><br><br>// Powered by FileEdit<br>// Powered by moj 3.0 beta 11 [modified TZTester]<br>// Powered by CodeProcessor<br></td>