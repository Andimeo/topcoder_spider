<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br><br>using namespace std;<br><br>class SpecificPolyominoCovering {<br>  public:<br>    <br>    int n, m;<br>  <br>    bool colorable (vector&lt;string&gt; x, int i, int j) {<br>      if (i + 1 &lt; n &amp;&amp; j + 3 &lt; m) {<br>        if (x[i][j] != 'X')<br>          return false;<br>        if (x[i+1][j] != 'X')<br>          return false;<br>        if (x[i+1][j+1] != 'X')<br>          return false;<br>        if (x[i+1][j+2] != 'X')<br>          return false;<br>        if (x[i+1][j+3] != 'X')<br>          return false;<br>        if (x[i][j+3] != 'X')<br>          return false;<br>        return true;<br>        }<br>      return false;<br>      }<br>  <br>    vector&lt;string&gt; color (vector&lt;string&gt; x, int i, int j) {<br>      x[i][j] = 'A';<br>      x[i+1][j] = 'A';<br>      x[i+1][j+1] = 'A';<br>      x[i+1][j+2] = 'A';<br>      x[i+1][j+3] = 'A';<br>      x[i][j+3] = 'A';<br>      return x;<br>      }<br>    <br>    bool islegal (vector&lt;string&gt; x) {<br>      for (int i = 0; i &lt; n; i ++)<br>        for (int j = 0; j &lt; m; j ++)<br>          if (x[i][j] == 'X') {<br>            if (j + 1 &lt; m &amp;&amp; x[i][j + 1] == 'X')<br>              x[i][j] = x[i][j + 1] = 'B';<br>            else<br>              if (colorable(x, i, j))<br>                x = color(x, i, j);<br>              else<br>                return false;<br>            }<br>      return true;<br>      }<br>  <br>    vector &lt;string&gt; findCovering(vector &lt;string&gt; x) {<br>      n = x.size();<br>      m = x[0].size();<br>      if (!islegal(x)) {<br>        vector&lt;string&gt; re;<br>        return re;<br>        }<br>      for (int i = 0; i &lt; n; i ++)<br>        for (int j = 0; j &lt; m; j ++)<br>          if (colorable(x, i, j) &amp;&amp; islegal(color(x, i, j)))<br>            x = color(x, i, j);<br>      for (int i = 0; i &lt; n; i ++)<br>        for (int j = 0; j &lt; m; j ++)<br>          if (x[i][j] == 'X')<br>            x[i][j] = 'B';<br>      return x;<br>      }<br>  };<br></td>