<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Text.RegularExpressions;<br>using System.Collections;<br>using System.Collections.Generic;<br><br>public class SmoothNumbersHard {<br>    public int countSmoothNumbers(int N, int ks) <br>    {<br>        int[] r = new int[100000];<br>        bool[] b = new bool[5000001];<br>        b[0] = true;<br>        b[1] = true;<br>        for (int i = 2; i * i &lt; 5000001; ++i)<br>        {<br>            if (b[i])<br>                continue;<br>            for (int j = 2; i * j &lt; 5000001; ++j)<br>            {<br>                b[i * j] = true;<br>            }<br>        }<br>        List&lt;int&gt; v = new List&lt;int&gt;();<br>        for (int i = 0; i &lt; 5000001; ++i)<br>            if (b[i] == false)<br>                v.Add(i);<br>        int x = 0;<br>        int res = 0;<br>        int id = 0;<br>        int m = 0;<br>        int maxi = 0;<br>        for (int i = 1; i &lt;= N; ++i)<br>        {<br>            id = 0;<br>            m = 0;<br>            x = i;<br>            while (x != 1)<br>            {<br>                m = v[id];<br>                if (b[x] == false)<br>                {<br>                    maxi = Math.Max(maxi, x);<br>                    break;<br>                }<br>                while (x % m == 0)<br>                {<br>                    maxi = m;<br>                    x /= m;<br>                }<br>                id++;<br>            }<br>            if (maxi &lt;= ks)<br>                res++;<br>        }<br>        return res;<br>    }<br><br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>