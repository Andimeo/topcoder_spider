<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br><br>public class TheLuckySequence {<br>    const long MOD = 1234567891;<br><br>    bool lucky(int x, out int s, out int e)<br>    {<br>        e = x % 10;<br>        s = e;<br>        while (x &gt; 0)<br>        {<br>            int d = x % 10;<br>            if (d != 4 &amp;&amp; d != 7)<br>                return false;<br>            s = d;<br>            x /= 10;<br>        }<br>        return true;<br>    }<br><br>  public int count(int[] numbers, int length) {<br>        long[,] m = new long[2, 2];<br>        for (int i = 0; i &lt; numbers.Length; ++i)<br>        {<br>            int s;<br>            int e;<br>            bool ok = lucky(numbers[i], out s, out e);<br>            for (int j = 0; j &lt; i; ++j)<br>                if (numbers[j] == numbers[i])<br>                    ok = false;<br>            if (!ok)<br>                continue;<br>            s = (s - 4) / 3;<br>            e = (e - 4) / 3;<br>            ++m[s, e];<br>        }<br>        m = pow(m, length);<br>        long res = 0;<br>        for (int i = 0; i &lt; 2; ++i)<br>            for (int j = 0; j &lt; 2; ++j)<br>                res = (res + m[i, j]) % MOD;<br>        return (int) res;<br>    }<br><br>    private long[,] pow(long[,] a, int k)<br>    {<br>        if (k == 0)<br>        {<br>            long[,] res = new long[2, 2];<br>            res[0, 0] = 1;<br>            res[1, 1] = 1;<br>            return res;<br>        }<br>        else if (k % 2 == 0)<br>        {<br>            return pow(mul(a, a), k / 2);<br>        }<br>        else<br>        {<br>            return mul(a, pow(a, k - 1));<br>        }<br>    }<br><br>    private long[,] mul(long[,] a, long[,] b)<br>    {<br>        long[,] c = new long[2, 2];<br>        for (int i = 0; i &lt; 2; ++i)<br>            for (int j = 0; j &lt; 2; ++j)<br>                for (int k = 0; k &lt; 2; ++k)<br>                    c[i, j] = (c[i, j] + a[i, k] * b[k, j]) % MOD;<br>        return c;<br>    }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>