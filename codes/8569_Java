<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br> <br> <br>public class TheLuckySequence<br>{<br>  final long p = 1234567891;<br>    <br>  long[][] mul(long[][] a, long[][] b) {<br>    long[][] ans = new long[a.length][a.length];<br>    for (int i = 0; i &lt; a.length; ++i) {<br>      for (int j = 0; j &lt; a.length; ++j) {<br>        for (int k = 0; k &lt; a.length; ++k) {<br>          ans[i][j] = (ans[i][j] + a[i][k] * b[k][j]) % p;<br>        }<br>      }<br>    }<br>    return ans;<br>  }<br>  <br>  boolean isLucky(int a) {<br>    String s = Integer.toString(a);<br>    for (int i = 0; i &lt; s.length(); ++i) {<br>      if (s.charAt(i) != '4' &amp;&amp; s.charAt(i) != '7') {<br>        return false;<br>      }<br>    }<br>    return true;<br>  }<br>  <br>  public int count(int[] numbers, int length)<br>  {<br>    long[][] m = new long[2][2];<br>    long[] start = new long[2];<br>    HashSet&lt;Integer&gt; set = new HashSet&lt;Integer&gt;();<br>    for (int i = 0; i &lt; numbers.length; ++i) {<br>      if (!isLucky(numbers[i]) || set.contains(numbers[i])) {<br>        continue;<br>      }<br>      set.add(numbers[i]);<br>      String s = Integer.toString(numbers[i]);<br>      int u = s.charAt(0) == '4' ? 0 : 1;<br>      int v = s.charAt(s.length() - 1) == '4' ? 0 : 1;<br>      start[v]++;<br>      m[u][v]++;<br>    }<br>    length--;<br>    long[][] aa = new long[2][2];<br>    aa[0][0] = aa[1][1] = 1;<br>    while (length &gt; 0) {<br>      if (length % 2 == 1) {<br>        aa = mul(aa, m);<br>      }<br>      m = mul(m, m);<br>      length /= 2;<br>    }<br>    //System.out.println(Arrays.deepToString(m));<br>    return (int)(((start[0] * (aa[0][0] + aa[0][1]) % p) % p + (start[1] * (aa[1][0] + aa[1][1]) % p) % p) % p);<br>  }<br>  <br> <br>}<br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>