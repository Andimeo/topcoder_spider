<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;utility&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br>#define REP(i,n) for(int _n=n, i=0;i&lt;_n;++i)<br>#define FOR(i,a,b) for(int i=(a),_b=(b);i&lt;=_b;++i)<br>typedef vector&lt;int&gt; VI;<br>template&lt;class T&gt; inline int size(const T&amp;c) { return c.size(); }<br> <br>int thenumber;<br> <br>VI impossible(1,-1);<br>VI notdoneyet(1,-2);<br> <br>VI cache[12][50];<br> <br>VI calc(int done, int p) {<br>  VI &amp;res = cache[done][p];<br>  if(res!=notdoneyet) return res;<br>  res = impossible;<br>  int number = thenumber;<br>  REP(i,done) number /= 10;<br>  if(number&lt;p) { return res; }<br>  if(number==p) { res.clear(); return res; }<br>  FOR(n4,0,20) FOR(n7,0,20) {<br>    int sm = n4*4 + n7*7 + p;<br>    if(sm&gt;number || sm%10 != number%10) continue;<br>    int p2 = sm / 10;<br>    VI v = calc(done+1, p2);<br>    if(v==impossible) continue;<br>    int extras = n4+n7-size(v);<br>    if(extras&lt;0) continue;<br>    reverse(v.begin(),v.end());<br>    REP(i,extras) v.push_back(0);<br>    reverse(v.begin(),v.end());<br>    REP(i,size(v)) {<br>      if(i&lt;n4) v[i] = v[i]*10+4;<br>      else v[i] = v[i]*10+7;<br>    }<br>    if(res == impossible || size(res)&gt;size(v) || size(res)==size(v) &amp;&amp; res&lt;v)<br>      res = v;<br>  }<br>  return res;<br>}<br> <br>struct TheLuckySum {<br>vector &lt;int&gt; sum(int n) {<br>  REP(i,12) REP(j,50) cache[i][j]=notdoneyet;<br>  thenumber = n;<br>  VI res = calc(0,0);<br>  if(res==impossible) res.clear();<br>  return res;<br>}<br> <br>};<br> <br>// Powered by FileEdit<br> <br>// Powered by TomekAI<br>// Powered by TZTester 1.01 [25-Feb-2003]<br> <br>// Powered by CodeProcessor<br></td>