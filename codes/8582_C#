<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br><br>public class Skyscrapers {<br>    int MOD = 1000000007;<br>    public int buildingCount(int N, int leftSide, int rightSide) {<br><br>        long[] fac = new long[101];<br>        fac[0] = 1;<br>        for (int i = 1; i &lt; 101; i++) {<br>            fac[i] = fac[i - 1] * i;<br>            fac[i] %= MOD;<br>        }<br><br>        long[,] choose = new long[101, 101];<br>        choose[0, 0] = 1;<br>        for (int i = 1; i &lt; 101; i++) {<br>            choose[0, i] = 1;<br>            choose[i, i] = 1;<br>            for (int j = 1; j &lt; i; j++) {<br>                choose[j, i] = choose[j, i - 1] + choose[j - 1, i - 1];<br>                choose[j, i] %= MOD;<br>            }<br>        }<br><br>        long[,] aL = new long[N + 1, N + 1];<br>        aL[0, 0] = 1;<br>        aL[1, 1] = 1;<br>        aL[1, 0] = 0;<br>        aL[0, 1] = 0;<br>        for (int i = 2; i &lt;= N; i++) {<br>            for (int j = 1; j &lt;= i; j++) {<br>                for (int h = 0; h &lt; i; h++) {<br>                    long ways = aL[h, j - 1];<br>                    ways *= fac[i - h - 1];<br>                    ways %= MOD;<br>                    ways *= choose[h, i - 1];<br>                    ways %= MOD;<br>                    aL[i, j] += ways;<br>                    aL[i, j] %= MOD;<br>                }<br>            }<br>        }<br><br><br>        long ret = 0;<br>        for (int i = 0; i &lt; N; i++) {<br>            long amt = aL[i, leftSide - 1]*aL[N-i-1,rightSide-1];<br>            amt%=MOD;<br>            amt*=choose[i,N-1];<br>            amt%=MOD;<br>            ret += amt;<br>            ret %= MOD;<br>        }<br>        return (int)ret;<br><br><br><br>    }<br>}<br></td>