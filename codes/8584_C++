<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br><br>using namespace std;<br><br>#define SZ(X) ((int)(X.size()))<br>#define LN(X) ((int)(X.length()))<br>template&lt;class T&gt; inline void checkmin(T &amp;a,T b){if(b&lt;a) a=b;}<br><br>class DNAString<br>{<br>public:<br>  int ID(char c)<br>  {<br>    if (c=='A') return 0;<br>    if (c=='C') return 1;<br>    if (c=='G') return 2;<br>    return 3;<br>  }<br>  int minChanges(int m, vector &lt;string&gt; vs)<br>  {<br>    string str="";<br>    for (int i=0;i&lt;SZ(vs);i++) str+=vs[i];<br>    int n=LN(str);<br>    int result=100000000;<br>    for (int p=1;p&lt;=m;p++)<br>    {<br>      int total=0;<br>      for (int s=0;s&lt;p;s++)<br>      {<br>        int C[4];<br>        C[0]=C[1]=C[2]=C[3]=0;<br>        for (int i=s;i&lt;n;i+=p)<br>          C[ID(str[i])]++;<br>        total+=(C[0]+C[1]+C[2]+C[3])-max(max(C[0],C[1]),max(C[2],C[3]));<br>      }<br>      checkmin(result,total);<br>    }<br>    return result;<br>  }<br>};<br></td>