<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br><br>using namespace std;<br><br>#define SZ(X) ((int)(X.size()))<br>typedef long long int64;<br>template&lt;class T&gt; inline T lowbit(T n){return (n^(n-1))&amp;n;}<br>int64 toInt64(string s){int64 r=0;istringstream sin(s);sin&gt;&gt;r;return r;}<br><br>class MoreNim<br>{<br>public:<br>  int64 bestSet(vector &lt;string&gt; heaps)<br>  {<br>    int n=SZ(heaps);<br>    int64 A[60],B[60];<br>    for (int i=0;i&lt;n;i++) A[i]=toInt64(heaps[i]);<br>    sort(A,A+n);<br>    reverse(A,A+n);<br>    for (int i=0;i&lt;n;i++) B[i]=A[i];<br>    int64 result=0;<br>    for (int i=0;i&lt;n;i++)<br>    {<br>      int64 set=A[i];<br>      if (set==0) <br>      {<br>        result+=B[i];<br>        continue;<br>      }<br>      int64 key=lowbit(set);<br>      for (int j=i+1;j&lt;n;j++)<br>        if (A[j]&amp;key)<br>          A[j]^=set;<br>    }<br>    return result;<br>  }<br>};<br></td>