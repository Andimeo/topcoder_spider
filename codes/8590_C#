<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br><br>public class RandomSort {<br>    Dictionary&lt;string, double&gt; mem = new Dictionary&lt;string, double&gt;();<br>    int N;<br>    public double getExpected(int[] permutation) {<br>        N = permutation.Length;<br>        return getex(permutation);<br>    }<br><br>    private double getex(int[] perm) {<br>        string hash = "";<br>        bool good = true;<br>        for (int i = 0; i &lt; N; i++) {<br>            if (perm[i] != i+1) good = false;<br>        }<br>        if (good) return 0;<br>        for (int i = 0; i &lt; N; i++) {<br>            hash += '0' + perm[i];<br>        }<br>        if (mem.ContainsKey(hash)) return mem[hash];<br><br>        int ways = 0;<br>        double tot=0;<br>        for (int i = 0; i &lt; N; i++) {<br>            for (int j = i+1; j &lt; N; j++) {<br>                if (perm[i] &gt; perm[j]) {<br>                    int temp = perm[i];<br>                    perm[i] = perm[j];<br>                    perm[j] = temp;<br><br>                    tot += getex(perm)+1;<br>                    ways++;<br>                    temp = perm[i];<br>                    perm[i] = perm[j];<br>                    perm[j] = temp;<br>                }<br>            }<br>        }<br><br>        mem.Add(hash, tot / ways);<br>        return tot / ways;<br><br>    }<br>}<br></td>