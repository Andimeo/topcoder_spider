<td class="problemText" colspan="8" valign="middle" align="left">
            imports System<br>imports Microsoft.VisualBasic<br>imports System.Collections<br>imports System.Text<br>imports System.Collections.Generic<br> <br>Public Class RandomSort<br> <br>    Dim mm As New Hashtable<br> <br>    Public Function getExpected(ByVal permutation() As Integer) As Double<br>        Dim dist As Double<br>        dist = GetDist(permutation)<br>        Return dist<br>    End Function<br> <br>    Private Function GetDist(ByVal p() As Integer) As Double<br>        Dim hv As Integer<br>        Dim i, x As Integer<br>        x = 1<br>        For i = 0 To p.Length - 1<br>            hv += p(i) * x<br>            x *= 10<br>        Next<br> <br>        If mm.Contains(hv) Then Return mm(hv)<br> <br>        Dim i1, i2 As Integer<br>        Dim dd, tt As Double<br>        For i1 = 0 To p.Length - 1<br>            For i2 = i1 + 1 To p.Length - 1<br>                If p(i1) &gt; p(i2) Then<br>                    swap(p(i1), p(i2))<br>                    dd += 1 + GetDist(p)<br>                    swap(p(i1), p(i2))<br>                    tt += 1<br>                End If<br>            Next<br>        Next<br>        If tt = 0 Then<br>            mm.Add(hv, 0)<br>            Return 0<br>        End If<br>        mm.Add(hv, dd / tt)<br>        Return dd / tt<br>    End Function<br> <br>    Private Sub swap(ByRef i1 As Integer, ByRef i2 As Integer)<br>        Dim t As Integer<br>        t = i1<br>        i1 = i2<br>        i2 = t<br>    End Sub<br> <br>End Class<br></td>