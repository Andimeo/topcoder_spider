<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class PseudoRandomKingdom<br>{<br>  public double probabilityOfHappiness(String[] g, int cost, int savings)<br>  {<br>    n = g.length;save = savings;c = cost;<br>    ss = new boolean[n][n];<br>    for (int i=0; i&lt;n; i++)<br>    {<br>      String[] s = g[i].split(" +");<br>      for (int j=0; j&lt;s.length; j++)<br>        ss[i][Integer.parseInt(s[j])] = true;<br>    }<br>    prob = new double[n][save+1];<br>    dfs(0, -1);<br>    <br>    double ans = 0.0;<br>    for (int i=0; i&lt;=save; i++)<br>      ans+=prob[0][i];<br>    return ans;<br>  }<br>  <br>  int n, save, c;<br>  double[][] prob;<br>  boolean[][] ss;<br>  void dfs(int x, int pred)<br>  {<br>    prob[x][0] = 1.0;<br>    for (int y=0; y&lt;n; y++)<br>    {<br>      if (y==pred||y==x) continue;<br>      if (!ss[x][y]) continue;<br>      dfs(y, x);<br>      double[] newprob = new double[save+1];<br>      for (int i=0; i&lt;=save; i++)<br>        for (int j=0; j&lt;=save-i; j++)<br>          for (int k=0; k&lt;=c&amp;&amp;i+j+k&lt;=save; k++)<br>          {<br>            if (i+j&gt;save) continue;<br>            newprob[Math.max(i,j+k)]+=prob[x][i] * prob[y][j] * (1.0/(c+1.0));<br>          }<br>      for (int i=0; i&lt;=save; i++)<br>        prob[x][i] = newprob[i];<br>    }<br>  }<br>  <br>  <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>