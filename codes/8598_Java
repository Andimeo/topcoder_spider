<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class BoxFilling {<br>    public long getNumber2(int sizeX, int sizeY, int cubeX, int cubeY) {<br>        long n = 0;<br> <br>        long l = Math.min(cubeX - 2, cubeY - 2);<br>        if (l &gt; 0) {<br>            n = (sizeX + sizeY) * l - l * l;<br>            sizeX -= l;<br>            sizeY -= l;<br>            cubeX -= l;<br>            cubeY -= l;<br>        }<br> <br>        while (true) {<br>            if (cubeY &gt; 1) {<br>                sizeY--;<br>                cubeY--;<br>                n += sizeX;<br>            } else {<br>                return n + cubeX;<br>            }<br>            if (cubeX &gt; 1) {<br>                sizeX--;<br>                cubeX--;<br>                n += sizeY;<br>            } else {<br>                return n + cubeY;<br>            }<br>        }<br>    }<br> <br>    public long getNumber(int sizeX, int sizeY, int sizeZ, int cubeX, int cubeY, int cubeZ) {<br>        long n = 0;<br>        while (true) {<br>            if (sizeX == 1 || sizeY == 1 || sizeZ == 1) {<br>                break;<br>            }<br>            if (cubeZ &gt; 1) {<br>                sizeZ--;<br>                cubeZ--;<br>                n += 1L * sizeX * sizeY;<br>            } else {<br>                return n + getNumber2(sizeX, sizeY, cubeX, cubeY);<br>            }<br> <br>            if (sizeX == 1 || sizeY == 1 || sizeZ == 1) {<br>                break;<br>            }<br>            if (cubeY &gt; 1) {<br>                sizeY--;<br>                cubeY--;<br>                n += 1L * sizeX * sizeZ;<br>            } else {<br>                return n + getNumber2(sizeX, sizeZ, cubeX, cubeZ);<br>            }<br> <br>            if (sizeX == 1 || sizeY == 1 || sizeZ == 1) {<br>                break;<br>            }<br>            if (cubeX &gt; 1) {<br>                sizeX--;<br>                cubeX--;<br>                n += 1L * sizeY * sizeZ;<br>            } else {<br>                return n + getNumber2(sizeY, sizeZ, cubeY, cubeZ);<br>            }<br>        }<br> <br>        if (sizeX == 1 &amp;&amp; sizeY == 1) {<br>            return n + cubeZ;<br>        }<br>        if (sizeY == 1 &amp;&amp; sizeZ == 1) {<br>            return n + cubeX;<br>        }<br>        if (sizeZ == 1 &amp;&amp; sizeX == 1) {<br>            return n + cubeY;<br>        }<br> <br>        if (sizeX == 1) {<br>            return n + getNumber2(sizeY, sizeZ, cubeY, cubeZ);<br>        }<br>        if (sizeY == 1) {<br>            return n + getNumber2(sizeX, sizeZ, cubeX, cubeZ);<br>        }<br>        if (sizeZ == 1) {<br>            return n + getNumber2(sizeX, sizeY, cubeX, cubeY); <br>        }<br> <br>        return -1;<br>    }<br> <br> <br>}<br> <br> <br>// Powered by PopsEdit<br> <br>// Powered by CodeProcessor<br></td>