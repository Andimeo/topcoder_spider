<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class InstantRunoffVoting<br>{<br>    public int winner(string[] voters)<br>    {<br>        bool[] left = new bool[voters[0].Length];<br>        for (int i = 0; i &lt; left.Length; i++) left[i] = true;<br>        int leftnum = left.Length;<br>        while (leftnum &gt; 1)<br>        {<br>            int[] votes = new int[left.Length];<br>            for (int i = 0; i &lt; voters.Length; i++)<br>            {<br>                for (int j = 0; j &lt; voters[i].Length; j++)<br>                {<br>                    if (left[voters[i][j] - '0'])<br>                    {<br>                        votes[voters[i][j] - '0']++;<br>                        break;<br>                    }<br>                }<br>            }<br>            int least = int.MaxValue;<br>            for (int i = 0; i &lt; votes.Length; i++)<br>            {<br>                if (left[i])<br>                {<br>                    if (votes[i] * 2 &gt; voters.Length)<br>                        return i;<br>                    least = Math.Min(least, votes[i]);<br>                }<br>            }<br> <br>            for (int i = 0; i &lt; left.Length; i++)<br>            {<br>                if (left[i] &amp;&amp; votes[i] == least)<br>                {<br>                    left[i] = false;<br>                    leftnum--;<br>                }<br>            }<br>        }<br>        for (int i = 0; i &lt; left.Length; i++)<br>            if (left[i])<br>                return i;<br>        return -1;<br>    }<br> <br> <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>