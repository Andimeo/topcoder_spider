<td class="problemText" colspan="8" valign="middle" align="left">
            using System.Collections.Generic;<br><br>public class PhoneNumbers {<br><br>int score(string s) {<br>  if (s.Length == 2) {<br>    if (s[0] == s[1]) return 2;<br>    return 0;<br>  }<br>  if (s[0] == s[1] &amp;&amp; s[1] == s[2]) return 2;<br>  if (s[0] == s[1] || s[1] == s[2] || s[0] == s[2]) return 1;<br>  return 0;<br>}<br><br>int scoreAll(string s) {<br>  if (bestScore.ContainsKey(s))<br>    return bestScore[s];<br>  string[] t = s.Split('-');<br>  int ret = 0;<br>  for (int i = 0; i &lt; t.Length; i++)<br>    ret += score(t[i]);<br>  bestScore.Add(s, ret);<br>  return ret;<br>}<br><br>Dictionary&lt;string, string&gt; best = new Dictionary&lt;string, string&gt;();<br>Dictionary&lt;string, int&gt; bestScore = new Dictionary&lt;string, int&gt;();<br><br>public string bestNumber(string number) {<br>  if (best.ContainsKey(number))<br>    return best[number];<br>  if (number.Length == 2 || number.Length == 3) {<br>    best.Add(number, number);<br>    return number;<br>  }<br>  if (number.Length == 4) {<br>    string ret = number.Substring(0, 2) + "-" + number.Substring(2, 2);<br>    best.Add(number, ret);<br>    return ret;<br>  }<br>  string test1 = number.Substring(0, 2) + "-" + bestNumber(number.Substring(2));<br>  string test2 = number.Substring(0, 3) + "-" + bestNumber(number.Substring(3));<br>  int score1 = scoreAll(test1);<br>  int score2 = scoreAll(test2);<br>  if (score2 &gt; score1) {<br>    best.Add(number, test2);<br>    return test2;<br>  }<br>  best.Add(number, test1);<br>  return test1;<br>}<br><br>}<br></td>