<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cmath&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;sstream&gt;<br>#include &lt;functional&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br><br>using namespace std;<br><br>#define forn(i, n) for (int i = 0; i &lt; (int)(n); i++)<br>#define forit(i, a) for (__typeof((a).begin()) i = (a).begin(); i != (a).end(); i++)<br>#define sz(a) (int)(a).size()<br>#define all(a) (a).begin(), (a).end()<br>#define pb push_back<br><br>typedef long long ll;<br>typedef vector &lt;int&gt; vi;<br><br>#define maxn 53<br>#define inf (int)1e9<br><br>int h, w, u[maxn][maxn];<br>int xmi[maxn], xma[maxn], ymi[maxn], yma[maxn];<br><br>int cor( int x, int y )<br>{<br>  return 0 &lt;= x &amp;&amp; x &lt; w &amp;&amp; 0 &lt;= y &amp;&amp; y &lt; h;<br>}<br><br>vector &lt;string&gt; m;<br><br>void dfs( int x, int y )<br>{<br>  if (!cor(x, y) || u[y][x] || m[y][x] != '#')<br>    return;<br>  u[y][x] = 1;<br>  xmi[y] &lt;?= x, xma[y] &gt;?= x;<br>  ymi[x] &lt;?= y, yma[x] &gt;?= y;<br>  dfs(x + 1, y);<br>  dfs(x - 1, y);<br>  dfs(x, y + 1);<br>  dfs(x, y - 1);<br>}<br><br>class FixImage<br>{<br>public:<br>  vector &lt;string&gt; originalImage(vector &lt;string&gt; _m)<br>  {<br>    m = _m, h = sz(m), w = sz(m[0]);<br><br>    int run = 1;<br>    while (run)<br>    {<br>    run = 0;    <br>    memset(u, 0, sizeof(u));<br>    forn(i, h)<br>      forn(j, w)<br>        if (!u[i][j] &amp;&amp; m[i][j] == '#')<br>        {<br>          forn(k, h) xmi[k] = inf, xma[k] = -inf;<br>          forn(k, w) ymi[k] = inf, yma[k] = -inf;<br>          dfs(j, i);<br>          forn(k, h)<br>            for (int x = xmi[k]; x &lt;= xma[k]; x++)<br>            {<br>              if (m[k][x] != '#')<br>                run = 1;<br>              m[k][x] = '#', u[k][x] = 1;<br>            }<br>          forn(k, w)<br>            for (int y = ymi[k]; y &lt;= yma[k]; y++)<br>            {<br>              if (m[y][k] != '#')<br>                run = 1;<br>              m[y][k] = '#', u[y][k] = 1;<br>            }<br>        }<br>    }<br>    return m;<br>  }<br>};<br></td>