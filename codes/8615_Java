<td class="problemText" colspan="8" valign="middle" align="left">
            import static java.lang.Math.*;<br>import static java.math.BigInteger.*;<br>import java.math.*;<br>import java.util.*;<br> <br>public class FixImage {<br>  int[] lx = {-1, 0, 0, 1}, ly = {0, -1, 1, 0};<br>  public String[] originalImage(String[] alteredImage) {<br>    int n = alteredImage.length, m = alteredImage[0].length();<br>    char[][] cs = new char[n][];<br>    for (int i = 0; i &lt; n; i++) cs[i] = alteredImage[i].toCharArray();<br>    UnionFind uf = new UnionFind(n * m);<br>    boolean b = true;<br>    while (b) {<br>      b = false;<br>      for (int i = 0; i &lt; n; i++) {<br>        for (int j = 0; j &lt; m; j++) {<br>          for (int k = 0; k &lt; 4; k++) {<br>            int ii = i + lx[k], jj = j + ly[k];<br>            if (ii &gt;= 0 &amp;&amp; ii &lt; n &amp;&amp; jj &gt;= 0 &amp;&amp; jj &lt; m) {<br>              if (cs[i][j] == '#' &amp;&amp; cs[ii][jj] == '#') uf.union(i * m + j, ii * m + jj);<br>            }<br>          }<br>        }<br>      }<br>      for (int i = 0; i &lt; n; i++) {<br>        for (int j = 0; j &lt; m; j++) if (cs[i][j] == '#') {<br>          for (int k = j + 1; k &lt; m; k++) if (uf.same(i * m + j, i * m + k)) {<br>            for (int h = j + 1; h &lt; k; h++) {<br>              if (cs[i][h] == '.') {<br>                b = true;<br>                cs[i][h] = '#';<br>              }<br>            }<br>          }<br>        }<br>      }<br>      for (int i = 0; i &lt; m; i++) {<br>        for (int j = 0; j &lt; n; j++) if (cs[j][i] == '#') {<br>          for (int k = j + 1; k &lt; n; k++) if (uf.same(j * m + i, k * m + i)) {<br>            for (int h = j + 1; h &lt; k; h++) {<br>              if (cs[h][i] == '.') {<br>                b = true;<br>                cs[h][i] = '#';<br>              }<br>            }<br>          }<br>        }<br>      }<br>    }<br>    String[] res = new String[n];<br>    for (int i = 0; i &lt; n; i++) res[i] = new String(cs[i]);<br>    return res;<br>  }<br>  void debug(Object... os) {<br>    System.err.println(Arrays.deepToString(os));<br>  }<br>  class UnionFind {<br>    int[] p, rank, num;<br>    UnionFind(int size) {<br>      p = new int[size];<br>      rank = new int[size];<br>      num = new int[size];<br>      for (int i = 0; i &lt; size; i++) {<br>        p[i] = i;<br>        num[i] = 1;<br>      }<br>    }<br>    void union(int x, int y) {<br>      x = find(x); y = find(y);<br>      if (x == y) return;<br>      if (rank[x] &gt; rank[y]) {<br>        p[y] = x;<br>        num[x] += num[y];<br>      } else {<br>        p[x] = y;<br>        num[y] += num[x];<br>        if (rank[x] == rank[y]) rank[y]++;<br>      }<br>    }<br>    int find(int x) {<br>      if (x != p[x]) p[x] = find(p[x]);<br>      return p[x];<br>    }<br>    boolean same(int x, int y) {<br>      return find(x) == find(y);<br>    }<br>  }<br>}<br></td>