<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br>import java.io.*;<br>import java.text.*;<br>import java.util.regex.*;<br>import static java.util.Arrays.*;<br>import static java.lang.Math.*;<br>import static java.lang.Integer.parseInt;<br>public class DiscountCombination {<br>  public double minimumPrice(String[] discounts, int price) {<br>    ArrayList&lt;Integer&gt; one = new ArrayList();<br>    ArrayList&lt;Integer&gt; two = new ArrayList();<br>    ArrayList&lt;Integer&gt; three = new ArrayList();<br>    for(int i = 0; i &lt; discounts.length; i++){<br>      StringTokenizer st = new StringTokenizer(discounts[i]);<br>      int cost = parseInt(st.nextToken());<br>      int p = parseInt(st.nextToken());<br>      if(p == 1) one.add(cost);<br>      if(p == 2) two.add(cost);<br>      if(p == 3) three.add(cost);<br>    }<br>    Collections.sort(one);<br>    Collections.sort(two);<br>    Collections.sort(three);<br>    double ret = price;<br>    double a = 0;<br>    for(int i = 0; i &lt;= one.size(); i++){<br>      if(i &gt; 0) a += one.get(i-1);<br>      double b = 0;<br>      for(int j = 0; j &lt;= two.size(); j++){<br>        if(j &gt; 0) b += two.get(j-1);<br>        double c = 0;<br>        for(int k = 0; k &lt;= three.size(); k++){<br>          if(k &gt; 0) c += three.get(k-1);<br>          double p = pow(0.99,i)*pow(0.98,j)*pow(0.97,k);<br>          ret = min(ret, a+b+c+p*price);<br>        }<br>      }<br>    }<br>    return ret;<br>  }<br> <br>}<br> <br>// Powered by PopsEdit<br>// Powered by CodeProcessor<br></td>