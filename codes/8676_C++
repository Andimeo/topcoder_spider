<td class="problemText" colspan="8" valign="middle" align="left">
            // I think I have been challenged...<br><br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>typedef long long ll;<br><br>#define LS &lt;<br>#define Size(x) (int(x.size()))<br><br>// All macros with parameters "k,a,b" run the "k" variable in range [a,b)<br>#define FOR(k,a,b) for(typeof(a) k=(a); k LS (b); ++k)<br><br>#line 3 "MagicLabeling.cc"<br><br>int N;<br><br>int gr[60][60];<br><br>int type[60];<br><br>bool ok;<br><br>int cnt;<br><br>void dfs(int at, int t) {<br>  if(type[at]) {<br>    if(type[at] != t) ok = false;<br>    return;<br>    }<br>  cnt++;<br>  type[at] = t;<br>  t ^= 3;<br>  FOR(u,0,N) if(gr[at][u]) dfs(u, t);<br>  }<br><br>class MagicLabeling {<br>  public:<br>  int count(vector &lt;string&gt; graph, int M) {<br>    // !FDI<br>    ll ret;<br>    N = Size(graph);<br>    FOR(y,0,N) FOR(x,0,N)<br>      gr[y][x] = graph[y][x] == 'Y';<br>    <br>    FOR(y,0,N) type[y] = 0;<br><br>    int t1 = 0, t2 = 0, t0 = 0;<br>    <br>    FOR(y,0,N) if(type[y] == 0) {<br>      ok = true;<br>      cnt = 0;<br>      dfs(y, 1);<br>      if(cnt == 1) t0++;<br>      else if(ok) t1++;<br>      else t2++;<br>      }<br>    <br>    ret = 0;<br>    <br>    ll mod = 1000003;<br>  <br>    bool ed = false;<br>    FOR(a,0,N) FOR(b,0,N) if(gr[a][b]) ed = true;<br>    if(!ed) {<br>      ll cur = 1;<br>      FOR(u,0,N) {<br>        cur *= M;<br>        cur %= mod;<br>        }<br>      return cur;<br>      }<br><br>    FOR(sum, 1, 2*M+1) {<br>      ll cur = 1;<br>      <br>      FOR(u,0,t0) {<br>        cur *= M;<br>        cur %= mod;<br>        }<br>      <br>      if(sum&amp;1) FOR(u,0,t2) cur = 0;<br>      <br>      FOR(u,0,t1) {<br>        int MM = 0;<br>        FOR(a,1,M+1) FOR(b,1,M+1) if(a+b == sum) MM++;<br>        cur *= MM;<br>        cur %= mod;<br>        }<br>      <br>      ret += cur;<br>      ret %= mod;<br>      }<br>  <br>    return ret;<br>    }<br>  };<br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>