<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class MagicLabeling<br>{<br>  <br>  boolean[][] a;<br>  int n;<br>  boolean[] vs, vs2;<br>  int[] label;<br>  boolean ok;<br>  int tong;<br>  int M;<br>  <br>  void check(int i) {<br>    vs2[i] = true;<br>    for(int j=0;j&lt;n;++j) if(a[i][j]) {<br>      if(!vs2[j]) {<br>        label[j] = tong - label[i];<br>        if(label[j]&gt;M || label[j]&lt;=0) {<br>          ok = false;<br>        }<br>        check(j);<br>      }<br>      else {<br>        if(label[j]+label[i]!=tong) {<br>          ok = false;<br>        }<br>      }<br>    }<br>  }<br>  <br>  public int count(String[] graph, int M)<br>  {<br>    <br>    this.M = M;<br>    n = graph.length;<br>    a = new boolean[n][n];<br>    for(int i=0;i&lt;n;++i)<br>      for(int j=0;j&lt;n;++j) a[i][j] = graph[i].charAt(j) == 'Y';<br>    boolean cc = false;<br>    for(int i=0;i&lt;n;++i) for(int j=0;j&lt;n;++j) if(a[i][j]) cc=true;<br>    if(!cc) {<br>      <br>      int res = 1;<br>      for(int i=0;i&lt;n;++i) res = ( res * M ) % 1000003;<br>      return res;<br>      <br>    }<br>    int  kq = 0;<br>    for(tong=1;tong&lt;=M*2;++tong) {<br>      vs = new boolean[n];<br>      label = new int[n];<br>      int result = 1;<br>      for(int i=0;i&lt;n;++i) if(!vs[i]) {<br>        int count = 0;<br>        for(int k=1;k&lt;=M;++k) {<br>          vs2 = vs.clone();<br>          label[i] = k;<br>          ok = true;<br>          check(i);<br>          if(ok) ++count;<br>        }<br>        for(int j=0;j&lt;n;++j) vs[j] = vs2[j];<br>        result = (result * count) % 1000003;<br>      }<br>      kq = ( kq + result ) % 1000003;<br>    }<br>    return kq;<br>  }<br>  <br>  <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>