<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br><br>public class PrettyPrintASpiral <br>{<br>  public string[] getWindow(int row1, int col1, int row2, int col2) <br>  {<br>    string[,] matrix = new string[row2 - row1 + 1, col2 - col1 + 1];<br>    int max = 0;<br>    for (int i = row1; i &lt;= row2; i++)<br>    {<br>      for (int j = col1; j &lt;= col2; j++)<br>      {<br>        matrix[i - row1, j - col1] = getNum(i, j).ToString();<br>        max = Math.Max(max, matrix[i - row1, j - col1].Length);<br>      }<br>    }<br>    string[] ret = new string[row2 - row1 + 1];<br>    for (int i = row1; i &lt;= row2; i++)<br>    {<br>      ret[i - row1] = string.Empty;<br>      for (int j = col1; j &lt;= col2; j++)<br>      {<br>        string w = matrix[i - row1, j - col1];<br>        while (w.Length &lt; max) w = " " + w;<br>        ret[i - row1] += w + " ";<br>      }<br>      ret[i - row1] = ret[i - row1].Substring(0, ret[i - row1].Length - 1);<br>    }<br>    return ret;<br>  }<br>  int getNum(int row, int col)<br>  {<br>    if (row == 0 &amp;&amp; col == 0) return 1;<br>    int ring = Math.Max(Math.Abs(row), Math.Abs(col));<br><br>    int sr = ring - 1;<br>    int sc = ring;<br>    int pow = ring * 2 - 1;<br>    int num = pow * pow + 1;<br>    int stage = 0;<br>    while (sr != row || sc != col)<br>    {<br>      switch (stage)<br>      {<br>        case 0:<br>          sr--;<br>          if (sr == -ring) stage = 1;<br>          break;<br>        case 1:<br>          sc--;<br>          if (sc == -ring) stage = 2;<br>          break;<br>        case 2:<br>          sr++;<br>          if (sr == ring) stage = 3;<br>          break;<br>        case 3:<br>          sc++;<br>          break;<br>      }<br>      <br>      num++;<br>    }<br>    return num;<br>  }<br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by CodeProcessor<br></td>