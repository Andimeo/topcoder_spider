<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;fstream&gt;<br>#include &lt;numeric&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;bitset&gt;<br>#include &lt;list&gt;<br>#include &lt;stdexcept&gt;<br>#include &lt;functional&gt;<br>#include &lt;utility&gt;<br>#include &lt;ctime&gt;<br>using namespace std;<br><br>#define PB push_back<br>#define MP make_pair<br><br>#define REP(i,n) for(i=0;i&lt;(n);++i)<br>#define FOR(i,l,h) for(i=(l);i&lt;=(h);++i)<br>#define FORD(i,h,l) for(i=(h);i&gt;=(l);--i)<br><br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br>typedef vector&lt;double&gt; VD;<br>typedef long long LL;<br>typedef pair&lt;int,int&gt; PII;<br>int Max(int a,int b)<br> { return a&gt;b?a:b;}<br>int GetValue(int x, int y)<br>{<br>    int m = Max(abs(x), abs(y));<br>    int r = m * m * 4 - 2 * m + 1;<br>    int v = 0;<br>    if(x == -m)<br>    {<br>        v = r+ 2 * m + m - y;<br>    }<br>    else if( y == m)<br>    {<br>        v= r+ m - x;<br>    }<br>    else if(y == -m)<br>    {<br>        v = r+ 4 * m + x + m;<br>    }<br>    else if( x == m )<br>    {<br>        v = r - (m - y);<br>    }<br>    <br><br>    return v;<br>}<br>string cha(int t,int x)<br>{<br>       string ts;<br>       char ct;<br>       int tx=t,i;<br>       while(tx!=0)<br>       {<br>                   ct=tx%10+'0';<br>                   ts+=ct;<br>                   tx=tx/10;<br>       }<br>       for(i=ts.size();i&lt;x;i++)<br>         ts+=" ";<br>       string res;<br>       for(int i=ts.size()-1;i&gt;=0;i--)<br>         res+=ts[i];<br>       return res;<br>}<br>   int ge(int a)<br>   {<br>       int cnt=0;<br>       while(a!=0)<br>       {<br>                  cnt++;   <br>                  a/=10;<br>       }      <br>       return cnt;<br>   }     <br>      int num[10002];              <br>                   <br>class PrettyPrintASpiral<br>{<br>        public:<br>        vector &lt;string&gt; getWindow(int row1, int col1, int row2, int col2)<br>        {<br>               vector&lt;string&gt;  res;<br>               string s;<br>               int i,j;<br>               int Max=0;<br>               for(j=col1;j&lt;=col2;j++)<br>               {<br>                   int tes;<br>                   tes=GetValue(j,row1*(-1));<br>                   num[j+5000]=tes;<br>                   tes=GetValue(j,row2*(-1));<br>                   if(tes&gt;num[j+5000])<br>                     num[j+5000]=tes;<br>                   num[j+5000]=ge(num[j+5000]);<br>               }<br>                for(j=col1;j&lt;=col2;j++)<br>               {<br>                                         if(num[j+5000]&gt;Max)<br>                                           Max=num[j+5000];<br>               }<br>               for(i=row1;i&lt;=row2;i++)<br>               {<br>                  string s;<br>                 for(j=col1;j&lt;=col2;j++)<br>                 {<br>                      int temp;<br>                      char t;<br>                      temp=GetValue(j,i*(-1));<br>                      string s1=cha(temp,Max);<br>                      if(j!=col2)<br>                        s1+=" ";<br>                      s+=s1;<br>                 }<br>                 int syx,txy=0;<br>                 for(int k=0;k&lt;100;k++)<br>                 syx++;<br>                 res.push_back(s);<br>               }<br>               return res;<br>        }<br>        };<br></td>