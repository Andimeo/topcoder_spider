<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br><br>public class PrettyPrintASpiral {<br>  int[] dr = {0, -1, 0, 1};<br>  int[] dc = {1, 0, -1, 0};<br>  <br>       public String[] getWindow(int row1, int col1, int row2, int col2) {<br>         String[][] x = new String[row2 - row1 + 1][col2 - col1 + 1];<br>         <br>         int r = 0;<br>         int c = 0;<br>         int dir = 0;<br>         int maxlen = 1;<br>         int len = 1;<br>         for (int iter = 1; iter &lt;= 120000000; iter++) {<br>           if (r &gt;= row1 &amp;&amp; r &lt;= row2 &amp;&amp; c &gt;= col1 &amp;&amp; c &lt;= col2) {<br>             x[r - row1][c - col1] = Integer.toString(iter);<br>           }<br>           <br>           r += dr[dir];<br>           c += dc[dir];<br>           len--;<br>           if (len == 0) {<br>             dir = (dir + 1) % 4;<br>             if (dir == 0 || dir == 2) {<br>               maxlen++;<br>             }<br>             len = maxlen;<br>           }<br>         }<br>         <br>         int rl = 0;<br>         for (int i = 0; i &lt;= row2 - row1; i++) {<br>           for (int j = 0; j &lt;= col2 - col1; j++) {<br>             rl = Math.max(rl, x[i][j].length());<br>           }<br>         }<br>         String[] result = new String[row2 - row1 + 1];<br>         for (int i = 0; i &lt;= row2 - row1; i++) {<br>           StringBuilder sb = new StringBuilder();<br>           for (int j = 0; j &lt;= col2 - col1; j++) {<br>             if (j &gt; 0) {<br>               sb.append(" ");<br>             }<br>             for (int k = rl - x[i][j].length(); k &gt; 0; k--) {<br>               sb.append(" ");<br>             }<br>             sb.append(x[i][j]);<br>           }<br>           result[i] = sb.toString();<br>         }<br>         <br>         return result;<br>       }<br><br>}<br><br><br><br>// Powered by FileEdit<br>// Powered by RETester [based on ExampleBuilder]<br>// Powered by CodeProcessor<br></td>