<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br><br>public class CompanyRestructuring {<br><br><br>  boolean [][] G, H;<br><br>  int [] F;<br><br><br>  boolean [] Z;<br>  int [] B;<br><br>  int n;<br><br><br>  boolean dfs (int v, int c) {<br>    Z[v] = true;<br>    int u = B[v];<br>    if (u == n) return true;<br>    for (int j = 0; j &lt; n; j++)<br>      if (F[j] == c &amp;&amp; G[u][j] &amp;&amp; !Z[j] &amp;&amp; dfs (j, c)) {<br>        B[j] = u;<br>        return true;<br>      }<br>    return false;<br>  }<br><br><br>  int pairsize (int c) {<br>    Z = new boolean [n + 1];<br>    B = new int [n + 1];<br><br>    Arrays.fill (B, n);<br><br>    int ans = 0;<br><br>    for (int i = 0; i &lt; n; i++)<br>      if (F[i] != c) {<br>        B[n] = i;<br>        Arrays.fill (Z, false);<br>        if (dfs (n, c)) ++ans;<br>      }<br>    return ans;<br>  }<br><br>  <br>  public int fewestDivisions (String [] X) {<br>    n = X.length;<br><br>    G = new boolean [n][n];<br>    H = new boolean [n][n];<br><br>    for (int i = 0; i &lt; n; i++)<br>      for (int j = 0; j &lt; n; j++) {<br>        G[i][j] = X[i].charAt (j) == 'Y';<br>        H[i][j] = G[i][j];<br>      }<br><br>    for (int i = 0; i &lt; n; i++)<br>      H[i][i] = true;<br><br>    for (int k = 0; k &lt; n; k++)<br>      for (int i = 0; i &lt; n; i++)<br>        for (int j = 0; j &lt; n; j++) <br>          H[i][j] |= H[i][k] &amp; H[k][j];<br><br>    F = new int [n];<br><br>    Arrays.fill (F, -1);<br><br>    int ans = 0;<br><br>    for (int k = 0; k &lt; n; k++)<br>      if (F[k] &lt; 0) {<br>        int cnt = 0;<br>        for (int i = 0; i &lt; n; i++)<br>          if (H[k][i] &amp;&amp; H[i][k]) {<br>            ++ans;<br>            F[i] = k;<br>          }<br>        ans -= pairsize (k);<br>      }<br><br>    return ans;<br>  };<br>};<br></td>