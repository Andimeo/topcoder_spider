<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class RoundAboutCircle {<br>  public int maxScore(int N) {<br>        int[] sum = new int[N + 1];<br>        for (int i = 1; i &lt;= N; ++i)<br>        {<br>            sum[i] = i % 10 + sum[i / 10];<br>        }<br>        int[] p = new int[N];<br>        for (int i = 0; i &lt; N; ++i)<br>        {<br>            p[i] = (i + sum[i + 1]) % N;<br>        }<br>        int res = 0;<br>        int[] d = new int[N];<br>        int[] m = new int[N];<br>        for (int i = 0; i &lt; N; ++i)<br>        {<br>            if (d[i] == 0)<br>            {<br>                walk(i, 1, d, m, p);<br>            }<br>            res = Math.Max(res, d[i]);<br>        }<br>        return res;<br>  }<br><br>    private int walk(int i, int at, int[] d, int[] m, int[] p)<br>    {<br>        m[i] = at;<br>        int j = p[i];<br>        int res;<br>        if (m[j] == 0)<br>        {<br>            int z = walk(j, at + 1, d, m, p);<br>            if (z &gt;= 0)<br>            {<br>                d[i] = d[j];<br>                if (z == i)<br>                    z = -1;<br>            }<br>            else<br>            {<br>                d[i] = d[j] + 1;<br>            }<br>            res = z;<br>        }<br>        else if (m[j] &gt; 0)<br>        {<br>            d[i] = at - m[j] + 1;<br>            res = j;<br>            if (j == i)<br>            {<br>                res = -1;<br>            }<br>        }<br>        else<br>        {<br>            d[i] = d[j] + 1;<br>            res = -1;<br>        }<br>        m[i] = -at;<br>        return res;<br>    }<br><br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>