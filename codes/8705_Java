<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class RoundAboutCircle {<br>    public int maxScore(int N) {<br>        int[] s = new int[N];<br> <br>        for (int i = 0; i &lt; N; i++) {<br>            int j = i + 1;<br>            while (j &gt; 0) {<br>                s[i] += j % 10;<br>                j = j / 10;<br>            }<br>        }<br> <br>        boolean[] u = new boolean[N];<br>        int[] l = new int[N];<br>        int[] p = new int[N];<br>        int[] v = new int[N];<br> <br>        for (int i = 0; i &lt; N; i++) {<br>            if (!u[i]) {<br>                int vis = 0;<br>                int j = i;<br>                while (!u[j]) {<br>                    v[vis++] = j;<br>                    u[j] = true;<br>                    j = (j + s[j]) % N;<br>                }<br> <br>                if (l[j] == 0) {<br>                    int k = i;<br>                    int steps = 0;<br>                    while (k != j) {<br>                        steps++;<br>                        k = (k + s[k]) % N;<br>                    }<br> <br>                    for (int t = steps; t &lt; vis; t++) {<br>                        l[v[t]] = vis - steps;<br>                    }<br>                    for (int t = 0; t &lt; steps; t++) {<br>                        l[v[t]] = vis - t;<br>                    }<br>                } else {<br>                    for (int t = 0; t &lt; vis; t++) {<br>                        l[v[t]] = l[j] + vis - t;<br>                    }<br>                }<br>            }<br>        }<br> <br>        int best = 0;<br>        for (int i = 0; i &lt; N; i++) {<br>            if (l[i] &gt; best) {<br>                best = l[i];<br>            }<br>        }<br> <br>        return best;<br>    }<br> <br> <br>}<br> <br> <br>// Powered by PopsEdit<br> <br>// Powered by CodeProcessor<br></td>