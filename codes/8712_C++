<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string.h&gt;<br><br>using namespace std;<br><br>int dp[11][11][30721];<br>int f1[11][11][30721];<br>int f2[11][11][30721];<br>  <br>class PredictionCardGame {<br>  public:<br>  <br>  int winnings(int n, int m, int c) {<br>    int i, j, k;<br>    <br>    for (i = 0; i &lt;= n; i ++)<br>      for (j = 0; j &lt;= m; j ++)<br>        for (k = 0; k &lt;= 30720; k ++) {<br>          if (i == 0 &amp;&amp; j == 0) {<br>            dp[i][j][k] = k;<br>            f1[i][j][k] = 0;<br>            f2[i][j][k] = 0;<br>            }<br>          else<br>            if (i == 0)<br>              dp[i][j][k] = dp[i][j-1][k*2];<br>            else<br>              if (j == 0)<br>                dp[i][j][k] = dp[i-1][j][k*2];<br>              else {<br>                if (k == 0) {<br>                  dp[i][j][k] = 0;<br>                  f1[i][j][k] = 0;<br>                  f2[i][j][k] = 0;<br>                  }<br>                else {<br>                  f1[i][j][k] = f1[i][j][k-1];<br>                  while (f1[i][j][k] + 1 &lt;= k &amp;&amp; (dp[i-1][j][k - f1[i][j][k] - 1] &lt;? dp[i][j-1][k + f1[i][j][k] + 1]) &gt; (dp[i-1][j][k - f1[i][j][k]] &lt;? dp[i][j-1][k + f1[i][j][k]]))<br>                    f1[i][j][k] ++;<br>                  f2[i][j][k] = f2[i][j][k-1];<br>                  while (f2[i][j][k] + 1 &lt;= k &amp;&amp; (dp[i][j-1][k - f2[i][j][k] - 1] &lt;? dp[i-1][j][k + f2[i][j][k] + 1]) &gt; (dp[i][j-1][k - f2[i][j][k]] &lt;? dp[i-1][j][k + f2[i][j][k]]))<br>                    f2[i][j][k] ++;<br>                  dp[i][j][k] = (dp[i-1][j][k - f1[i][j][k]] &lt;? dp[i][j-1][k + f1[i][j][k]]) &gt;? (dp[i][j-1][k - f2[i][j][k]] &lt;? dp[i-1][j][k + f2[i][j][k]]);<br>                  }<br>                }<br>          }<br>    return dp[n][m][c];<br>    }<br>  };<br></td>