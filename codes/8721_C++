<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class RemovingDigits {<br>public:<br>  string maxNumber(string, string);<br>};<br> <br>  int a[51], p[51];<br>    int s[10];<br>  int v[51];<br>  int n, m;<br>  <br>int cmp(const int &amp; i, const int &amp; j)<br>{<br>    if (a[i] &gt; a[j]) return 1;<br>    if (a[i] &lt; a[j]) return 0;<br>    if (i &lt; j) return 1;<br>    return 0;<br>}<br> <br>int check(int pos, int last)<br>{<br>    int ss[10];<br>    for (int i = 1; i &lt;= 9; i++) ss[i] = s[i];<br>    for (int i = last + 1; i &lt; pos; i++) if (v[i] == 0) {<br>        ss[a[i]]--;<br>        if (ss[a[i]] &lt; 0) return 0;<br>    }<br>    <br>    for (int i = pos + 1; i &lt;= n; i++) ss[a[i]]--;<br>    for (int i = 1; i &lt;= 9; i++) if (ss[i] &gt; 0) return 0;<br>    return 1;<br>}<br> <br>string RemovingDigits::maxNumber(string number, string digits) {<br> <br>  <br> <br>  string ans;<br>  <br>  memset(s, 0, sizeof(s));<br>  for (int i = 0; i &lt; digits.length(); i++) s[digits[i] - '0']++;<br>  <br>  <br>  n = number.size(), m = digits.length();<br>  for (int i = 0; i &lt; number.size(); i++) a[i + 1] = number[i] - '0';<br>  <br>  for (int i = 1; i &lt;= n; i++) p[i] = i;<br>  sort(p + 1, p + n + 1, cmp);<br>  <br>  int pos = 0;<br>  memset(v, 0, sizeof(v));<br>  for (int i = 1; i &lt;= n - m; i++) {<br>      int j;<br>        for (j = 1; j &lt;= n; j++) <br>          if ((p[j] &gt; pos) &amp;&amp; (check(p[j], pos))) break;<br>        <br>     <br>        for (int i = pos + 1; i &lt; p[j]; i++) if (v[i] == 0) {<br>            v[i] = 1;<br>            s[a[i]]--;<br>        }<br>        <br>        pos = p[j];<br>        ans = ans + (char)(a[pos] + '0');<br>    }<br>    <br>    return ans;<br>}<br></td>