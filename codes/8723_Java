<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br><br>public class LangfordSequence {<br>  int[] a;<br>  int n;<br>  int r[],best[];<br>  boolean gen(int pl){<br>    System.err.println(pl);<br>    if (pl==n){<br>    /*  for(int i = 0;i&lt;2*n;i++){<br>        System.err.print(r[i]+" ");<br>      }<br>      System.err.println();*/<br>      for(int i = 0;i&lt;2*n;i++){<br>         if (r[i]&gt;best[i])return false;<br>         if (r[i]&lt;best[i])break;<br>      }<br>      for(int i = 0;i&lt;2*n;i++){<br>        best[i] = r[i];<br>      }<br>      return false;<br>    }<br>    for(int i = 0;i&lt;r.length-a[pl]-1;i++){<br>       if (r[i]==-1 &amp;&amp; r[i+a[pl]+1]==-1 ){<br>         r[i] = a[pl];<br>         r[i+a[pl]+1] = a[pl];<br>         if (gen(pl+1)){<br>           return true;<br>         }<br>         r[i] = -1;<br>         r[i+a[pl]+1] = -1;<br>       }<br>    }<br>    return false;<br>  }<br>  public int[] getFirst(int[] aa) {<br>    n = aa.length;<br>    this.a = aa;<br>    Arrays.sort(a);<br>    for(int i = 0;i&lt;n;i++){<br>      System.err.println(a[i]);<br>    }<br>    r = new int[2*n];<br>    best = new int[2*n];<br>    Arrays.fill(r,-1);<br>    Arrays.fill(best,1000000);<br>    gen(0);<br>    if (best[0]!=1000000){<br>      return best;<br>    }else{<br>      return new int[0];<br>    }<br>    <br>    <br>  }<br>}<br><br><br>// Powered by FileEdit<br></td>