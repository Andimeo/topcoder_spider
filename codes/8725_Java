<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br><br>public class SumOfPowers {<br>  static int MAXDIM;<br>  static BigInteger[][] a;<br>  static BigInteger[][] b;<br>  public static int value(int n, int k){<br>    init();<br>    BigInteger ans = solve(new BigInteger(Integer.toString(n)), k);<br>    return ans.mod(new BigInteger("1000000007")).intValue();<br>  }<br>  public static void init(){<br>    MAXDIM = 100;<br>    a = new BigInteger[MAXDIM+1][MAXDIM+1];<br>    b = new BigInteger[MAXDIM+1][MAXDIM+1];<br>    <br>    a[0][0] = BigInteger.ONE;<br>    for(int i=1;i&lt;=MAXDIM;i++){<br>      for(int j=0;j&lt;=i;j++) a[i][j] = BigInteger.ZERO;<br>      for(int j=0;j&lt;=i-1;j++){<br>        a[i][j+1] = a[i][j+1].add(a[i-1][j]);<br>        a[i][j] = a[i][j].add(a[i-1][j].multiply(BigInteger.valueOf(i-1)));<br>      }<br>    }<br>    <br>    for(int i=0;i&lt;=MAXDIM;i++){<br>      BigInteger[] x = new BigInteger[MAXDIM+1];<br>      for(int j=0;j&lt;i;j++) x[j] = BigInteger.ZERO;<br>      x[i] = BigInteger.ONE;<br>      for(int j=i;j&gt;=0;j--){<br>        BigInteger q = x[j];<br>        b[i][j] = q;<br>        for(int k=j;k&gt;=0;k--){<br>          x[k] = x[k].subtract(q.multiply(a[j][k]));<br>        }<br>      }<br>    }<br>  }<br>  public static BigInteger solve(BigInteger n, int k)<br>  {<br>    BigInteger ans = BigInteger.ZERO;<br>    BigInteger seed = BigInteger.ONE;<br>    for(int i=0;i&lt;=k;i++){<br>      seed = seed.multiply(n.add(BigInteger.valueOf(i)));<br>      ans = ans.add(seed.multiply(b[k][i]).divide(BigInteger.valueOf(i+1)));<br>    }<br>    return ans;<br>  }<br>}<br></td>