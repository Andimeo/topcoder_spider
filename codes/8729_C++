<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define SIZE(X) ((int)(X.size()))<br>#define LENGTH(X) ((int)(X.length()))<br>typedef long long int64;<br>template&lt;class T&gt; inline T gcd(T a,T b)<br>  {if(a&lt;0)return gcd(-a,b);if(b&lt;0)return gcd(a,-b);return (b==0)?a:gcd(b,a%b);}<br> <br>class IngredientProportions<br>{<br>public:<br>  int A[20],B[20],P[20],Q[20];<br>  vector &lt;int&gt; getMasses(vector &lt;string&gt; vs)<br>  {<br>    int n=SIZE(vs)+1;<br>    for (int i=0;i&lt;n-1;i++)<br>    {<br>      string str=vs[i];<br>      for (int k=0;k&lt;LENGTH(str);k++)<br>        if (str[k]=='#' || str[k]==':') <br>          str[k]=' ';<br>      istringstream sin(str);<br>      string s0;<br>      sin&gt;&gt;A[i]&gt;&gt;s0&gt;&gt;B[i]&gt;&gt;s0&gt;&gt;P[i]&gt;&gt;Q[i];<br>    }<br>    for (int i=0;i&lt;n-1;i++) <br>    {<br>      A[n-1+i]=B[i];<br>      B[n-1+i]=A[i];<br>      P[n-1+i]=Q[i];<br>      Q[n-1+i]=P[i];<br>    }<br>    vector&lt;int64&gt; R(n,-1);<br>    R[0]=1;<br>    while (1)<br>    {<br>      bool ok=true;<br>      for (int i=0;i&lt;n;i++) if (R[i]&gt;=0)<br>        for (int k=0;k&lt;2*(n-1);k++)<br>          if (A[k]==i &amp;&amp; R[B[k]]&lt;0)<br>          {<br>            ok=false;<br>            int64 rA=R[A[k]]*Q[k];<br>            int64 rB=P[k];<br>            int64 d=gcd(rA,rB);<br>            rA/=d;<br>            rB/=d;<br>            for (int v=0;v&lt;n;v++) if (R[v]&gt;=0) R[v]*=rB;<br>            R[B[k]]=rA;<br>          }<br>      if (ok) break;<br>    }<br>    int64 d=0;<br>    for (int i=0;i&lt;n;i++) d=gcd(d,R[i]);<br>    vector&lt;int&gt; result;<br>    for (int i=0;i&lt;n;i++) result.push_back((int)(R[i]/d));<br>    return result;<br>  }<br>};<br></td>