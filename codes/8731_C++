<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class RollingLetters {<br>public:<br>  long long getTime(vector &lt;string&gt;, string);<br>  long long cnt;<br>    long long array[1000][2];<br>    <br>long long extended(long long a,long long n,long long &amp;x,long long &amp;y)<br>{<br>    long long x1,y1,gcd;<br>    if(n==0)<br>    {<br>        x=1,y=0;return a;<br>    }<br>    gcd = extended(n,a%n,x1,y1);<br>    x = y1;<br>    y = x1-a/n*y1;<br>    return gcd;    <br>}<br> <br>long long multi(long long a,long long b,long long lcm)<br>{<br>    long long t;<br>    if(b==0)<br>     return 0;<br>    t = (multi(a,b&gt;&gt;1,lcm) &lt;&lt; 1)%lcm;<br>    if((b&amp;1)==1)<br>     t = (t+a)%lcm;<br>    return t;    <br>}<br> <br>long long solve(){<br>    long long gcd,i,x,y,lcm;<br>    long long left=array[0][1],mod=array[0][0];<br>    for(i=1;i&lt;cnt;i++){<br>       gcd = extended(mod,array[i][0],x,y);<br>       lcm = mod*(array[i][0]/gcd);<br>       if((array[i][1]-left)%gcd !=0)<br>       {<br>           return -1;           <br>       }<br>       x*=(array[i][1]-left)/gcd;<br>       x%=lcm;<br>       left = (multi(x,mod,lcm)+left)%lcm;<br>       if(left &lt; 0)<br>        left+=lcm; <br>       mod = lcm; <br>    }<br>    return left;<br>}<br>};<br> <br>long long RollingLetters::getTime(vector &lt;string&gt; r, string t) {<br>     cnt=r.size();<br>   for(int i=0;i&lt;r.size();i++){<br>      array[i][0]=r[i].length();<br>      bool f=false;<br>      for(int j=0;j&lt;r[i].length();j++){<br>         if(r[i][j]==t[i]){<br>           array[i][1]=j;<br>           f=true;<br>           break;<br>         }<br>      }<br>      if(f==false)return -1;<br>   }<br>   return solve();<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>