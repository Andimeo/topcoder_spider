<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>using namespace std;<br> <br>class MountainWalk{<br>  public:<br>    int cellsVisited(vector &lt;string&gt; AM, int hD){<br>      int st [51][51];<br>      for(int i=0;i&lt;51;i++)<br>        for(int j=0;j&lt;51;j++)<br>          st[i][j]=0;<br>      int x=0,y=0;<br>      int cnt=1;<br>      int maxX=AM.size(),maxY = AM[0].size();<br>      int v = 0;<br>      bool end=true;<br>      st[0][0] = 1;<br>      while(18){<br>        v = AM[x][y]-'0';<br>        if(x+1&lt;maxX&amp;&amp;st[x+1][y]==0&amp;&amp;abs((AM[x+1][y]-'0')-v)&lt;=hD){<br>          ++cnt;<br>          st[x+1][y]=1;<br>          ++x;<br>          end= false;<br>        }  <br>        else if(y-1&gt;=0&amp;&amp;st[x][y-1]==0&amp;&amp;abs((AM[x][y-1]-'0')-v)&lt;=hD){<br>          ++cnt;<br>          st[x][y-1]=1;<br>          --y;<br>          end= false;<br>        }<br>        else if(x-1&gt;=0&amp;&amp;st[x-1][y]==0&amp;&amp;abs((AM[x-1][y]-'0')-v)&lt;=hD){<br>          ++cnt;<br>          st[x-1][y]=1;<br>          --x;<br>          end= false;<br>        }<br>        else if(y+1&lt;maxY&amp;&amp;st[x][y+1]==0&amp;&amp;abs((AM[x][y+1]-'0')-v)&lt;=hD){<br>          ++cnt;<br>          st[x][y+1]=1;<br>          ++y;<br>          end= false;<br>        }<br>        if(end)<br>          break;<br>        end = true;<br>      }<br>      return cnt;<br>    }<br>};<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>