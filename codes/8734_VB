<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System<br>Imports System.Collections<br>Imports System.Text<br> <br>Public Class MountainWalk<br>    Public Function cellsVisited(ByVal areaMap As String(), ByVal heightDifference As Integer) As Integer<br>        Dim i% = 0<br>        Dim j% = 0<br>        '(i+1, j), (i, j-1), (i-1, j), (i, j+1)<br>        Dim up1% = areaMap(0).Length - 1<br>        Dim up% = areaMap.GetUpperBound(0)<br>        Dim cnt% = 1<br>        Dim ar As New ArrayList<br>        ar.Add(New pnt(0, 0))<br>        While True<br>            Dim bl As Boolean = False<br>            If i + 1 &lt;= up AndAlso Math.Abs(CInt(areaMap(i + 1).Substring(j, 1)) - CInt(areaMap(i).Substring(j, 1))) &lt;= heightDifference And exts(New pnt(i + 1, j), ar) Then<br>                Console.WriteLine(i + 1 &amp; " : " &amp; j)<br>                ar.Add(New pnt(i + 1, j))<br>                i = i + 1<br>                cnt += 1<br>                bl = True<br>            ElseIf j - 1 &gt;= 0 AndAlso Math.Abs(CInt(areaMap(i).Substring(j - 1, 1)) - CInt(areaMap(i).Substring(j, 1))) &lt;= heightDifference And exts(New pnt(i, j - 1), ar) Then<br>                Console.WriteLine(i &amp; " : " &amp; j - 1)<br>                ar.Add(New pnt(i, j - 1))<br>                j = j - 1<br>                cnt += 1<br>                bl = True<br>            ElseIf i - 1 &gt;= 0 AndAlso Math.Abs(CInt(areaMap(i - 1).Substring(j, 1)) - CInt(areaMap(i).Substring(j, 1))) &lt;= heightDifference And exts(New pnt(i - 1, j), ar) Then<br>                ar.Add(New pnt(i - 1, j))<br>                Console.WriteLine(i - 1 &amp; " : " &amp; j)<br>                i = i - 1<br>                cnt += 1<br>                bl = True<br>            ElseIf j + 1 &lt;= up1 AndAlso Math.Abs(CInt(areaMap(i).Substring(j + 1, 1)) - CInt(areaMap(i).Substring(j, 1))) &lt;= heightDifference And exts(New pnt(i, j + 1), ar) Then<br>                ar.Add(New pnt(i, j + 1))<br>                Console.WriteLine(i &amp; " : " &amp; j + 1)<br>                j = j + 1<br>                cnt += 1<br>                bl = True<br>            End If<br> <br> <br>            If bl = False Then<br>                Exit While<br>            End If<br> <br>        End While<br>        Return cnt<br>    End Function<br> <br>    Public Function exts(ByVal p As pnt, ByVal a As ArrayList) As Boolean<br>        Dim i%<br>        For i = 0 To a.Count - 1<br>            Dim tp As pnt = System.Convert.ChangeType(a(i), GetType(pnt))<br>            If tp.i = p.i And tp.j = p.j Then<br>                Return False<br>            End If<br>        Next<br>        Return True<br>    End Function<br>    Public Class pnt<br> <br> <br> <br>        Public i As Integer<br>        Public j As Integer<br>        Public Sub New(ByVal x As Integer, ByVal y As Integer)<br>            i = x<br>            j = y<br>        End Sub<br> <br> <br>    End Class<br> <br>End Class<br> <br>'Powered by [KawigiEdit] 2.0!<br></td>