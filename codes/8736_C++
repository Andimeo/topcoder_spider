<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;bitset&gt;<br>#include &lt;cmath&gt;<br>#include &lt;complex&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;deque&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;iostream&gt;<br>#include &lt;limits&gt;<br>#include &lt;list&gt;<br>#include &lt;locale&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;valarray&gt;<br>#include &lt;vector&gt;<br>#include &lt;ext/hash_map&gt;<br>#include &lt;ext/hash_set&gt;<br>#include &lt;ext/rope&gt;<br>#include &lt;ext/slist&gt;<br>using namespace std;<br>using namespace __gnu_cxx;<br>#define sz size()<br>#define iter(i, a, b) for(typeof(a) i=a; i!=b; ++i)<br>#define rep(i, n) for(int i=0; i&lt;n; i++)<br>#define all(x) x.begin(),x.end()<br>typedef long long ll;<br>struct PubTrivia {<br>  vector&lt;int&gt; gen(int N, int G, vector&lt;int&gt; x) {<br>    vector&lt;int&gt; ans(N);<br>    int k=0, m=x.sz;<br>    rep(i, N) {<br>      ans[i]=x[k];<br>      int s=(k+1)%m;<br>      x[k]=((x[k]^x[s])+13)%G;<br>      k=s;<br>    }<br>    return ans;<br>  }<br>  long long maximumScore(int N, int tokensNeeded, vector &lt;int&gt; p, vector &lt;int&gt; b) {<br>    vector&lt;int&gt; pt=gen(N, 1001, p), bon=gen(N, 10001, b);<br>    vector&lt;ll&gt; ans(N+1), withtok(N+1), psum(N);<br>    rep(i, N) psum[i]=(i?psum[i-1]:0)+pt[i];<br>    rep(i, N) {<br>      withtok[i+1]=ans[i]-pt[i];<br>      if(i+1&gt;=tokensNeeded) withtok[i+1]=max(withtok[i+1], bon[i]+withtok[i+1-tokensNeeded]+psum[i]-(i&gt;=tokensNeeded?psum[i-tokensNeeded]:0));<br>      ans[i+1]=max(withtok[i+1], ans[i]+pt[i]);<br>    }<br>    return ans.back();<br>  }<br>};<br> <br>//Powered by [KawigiEdit] 2.0!<br></td>