<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>typedef long long int64;<br> <br>class ModuleSequence<br>{<br>public:<br>  int64 L,R;<br>  int64 multiply(int64 a,int64 b,int64 m)<br>  {<br>    int64 e=a,r=0;<br>    while (b&gt;0)<br>    {<br>      if (b&amp;1) r=(r+e)%m;<br>      e=(e+e)%m;<br>      b/=2;<br>    }<br>    return r;<br>  }<br>  int64 solve2(int64 a,int64 d,int64 c,int64 m)<br>  {<br>    int64 r=0;<br>    for (int64 i=0;i&lt;c;i++)<br>    {<br>      if (a&gt;=L &amp;&amp; a&lt;=R) r++;<br>      a+=d;<br>      if (a&gt;=m) a-=m;<br>    }<br>    return r;<br>  }<br>  int64 countElements(int64 K, int64 N, int64 A, int64 B, int64 lower, int64 upper)<br>  {<br>    int64 m=N;<br>    int64 a=multiply(K%m,A%m,m);<br>    int64 c=B-A+1;<br>    int64 d=K%m;<br>    L=lower;<br>    R=upper;<br>    int64 H=100000;<br>    int64 p1=L,p2=R;<br>    map&lt;int64,int&gt; M;<br>    M[m]=0;<br>    for (int i=0;i&lt;H;i++)<br>    {<br>      if (p1&lt;=p2)<br>      {<br>        if (p1-1&gt;=0) M[p1-1]--;<br>        M[p2]++;<br>      }<br>      else<br>      {<br>        M[p2]++;<br>        if (p1-1&gt;=0) M[p1-1]--;<br>        M[m-1]++;<br>      }<br>      p1-=d;<br>      p2-=d;<br>      if (p1&lt;0) p1+=m;<br>      if (p2&lt;0) p2+=m;<br>    }<br>    map&lt;int64,int&gt; M2;<br>    int s=0;<br>    for (map&lt;int64,int&gt;::iterator it=M.begin();it!=M.end();++it) s+=it-&gt;second;<br>    for (map&lt;int64,int&gt;::iterator it=M.begin();it!=M.end();++it)<br>    {<br>      M2[it-&gt;first]=s;<br>      s-=it-&gt;second;<br>    }<br>    int64 result=0;<br>    int64 p=a;<br>    int64 dp=multiply(d,H,m);<br>    for (;c&gt;=H;c-=H)<br>    {<br>      map&lt;int64,int&gt;::iterator it=M2.lower_bound(p);<br>      result+=it-&gt;second;<br>      p=(p+dp)%m;<br>    }<br>    result+=solve2(p,d,c,m);<br>    return result;<br>  }<br>};<br></td>