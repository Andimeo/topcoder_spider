<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;vector&gt;<br>#include &lt;cmath&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; VI;<br> <br>struct SortingGame {<br>  int fewestMoves(vector&lt;int&gt; board, int k) {<br>    map&lt;VI, int&gt; dist;<br>    dist[board] = 0;<br> <br>    queue&lt;VI&gt; Q;<br>    Q.push(board);<br> <br>    int i, N = board.size();<br> <br>    while (!Q.empty()) {<br>      VI u = Q.front(); Q.pop();<br>      int d = dist[u];<br> <br>      for (i = 1; i &lt; N; i++)<br>        if (u[i-1] &gt; u[i]) break;<br>      if (i == N) return d;<br> <br>      for (i = 0; i + k &lt;= N; i++) {<br>        VI w = u;<br>        reverse(w.begin() + i, w.begin() + i + k);<br>        if (dist.count(w) == 0) {<br>          dist[w] = d + 1;<br>          Q.push(w);<br>        }<br>      }<br>    }<br> <br>    return -1;    <br>  }<br>};<br></td>