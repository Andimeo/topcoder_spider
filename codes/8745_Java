<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br>import java.io.*;<br>import java.text.*;<br>import java.util.regex.*;<br>import static java.util.Arrays.*;<br>import static java.lang.Math.*;<br>import static java.lang.Integer.parseInt;<br>public class SortingGame {<br>  public int fewestMoves(int[] board, int k) {<br>    TreeSet&lt;int[]&gt; seen = new TreeSet&lt;int[]&gt;(new Comparator&lt;int[]&gt;(){<br>      public int compare(int[] a, int[] b){<br>        for(int i = 0; i &lt; a.length; i++){<br>          if(a[i] != b[i]) return a[i]-b[i];<br>        }<br>        return 0;<br>      }<br>    });<br>    LinkedList&lt;int[]&gt; que = new LinkedList();<br>    int ret = 0;<br>    que.add(board);<br>    int[] goal = board.clone();<br>    sort(goal);<br>    while(que.size() &gt; 0){<br>      LinkedList&lt;int[]&gt; next = new LinkedList();<br>      while(que.size() &gt; 0){<br>        int[] at = que.removeFirst();<br>        if(Arrays.equals(goal, at)) return ret;<br>        for(int i = 0; i+k &lt;= at.length; i++){<br>          int[] ar = at.clone();<br>          for(int j = 0; j &lt; k; j++){<br>            ar[i+j] = at[i+k-1-j];<br>          }<br>          if(!seen.add(ar)) continue;<br>          next.add(ar);<br>        }<br>      }<br>      ret++;<br>      que = next;<br>    }<br>    return -1;<br>  }<br> <br>}<br> <br>// Powered by PopsEdit<br>// Powered by CodeProcessor<br></td>