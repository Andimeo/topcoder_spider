<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;fstream&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;cctype&gt;<br>#include &lt;sstream&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;functional&gt;<br>#include &lt;stdarg.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;iterator&gt;<br>#include &lt;math.h&gt;<br>#include &lt;complex&gt;<br>#include &lt;bitset&gt;<br>#include &lt;iostream&gt;<br>#include &lt;fstream&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;cctype&gt;<br>#include &lt;sstream&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;functional&gt;<br>#include &lt;stdarg.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;iterator&gt;<br>#include &lt;math.h&gt;<br>#include &lt;complex&gt;<br>#include &lt;bitset&gt;<br>#include &lt;iostream&gt;<br>#include &lt;fstream&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;cctype&gt;<br>#include &lt;sstream&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;functional&gt;<br>#include &lt;stdarg.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;iterator&gt;<br>#include &lt;math.h&gt;<br>#include &lt;complex&gt;<br>#include &lt;numeric&gt;<br>#include &lt;iostream&gt;<br>#include &lt;fstream&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;cctype&gt;<br>#include &lt;sstream&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;functional&gt;<br>#include &lt;stdarg.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;iterator&gt;<br>#include &lt;math.h&gt;<br>#include &lt;complex&gt;<br>#include &lt;numeric&gt;<br>#include &lt;iostream&gt;<br>#include &lt;fstream&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;cctype&gt;<br>#include &lt;sstream&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;functional&gt;<br>#include &lt;stdarg.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;iterator&gt;<br>#include &lt;math.h&gt;<br>#include &lt;complex&gt;<br>#include &lt;numeric&gt;<br>#include &lt;iostream&gt;<br>#include &lt;fstream&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;cctype&gt;<br>#include &lt;sstream&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;functional&gt;<br>#include &lt;stdarg.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;iterator&gt;<br>#include &lt;math.h&gt;<br>#include &lt;complex&gt;<br>#include &lt;numeric&gt;<br>#include &lt;iostream&gt;<br>#include &lt;fstream&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;cctype&gt;<br>#include &lt;sstream&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;functional&gt;<br>#include &lt;stdarg.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;iterator&gt;<br>#include &lt;math.h&gt;<br>#include &lt;complex&gt;<br>#include &lt;numeric&gt;<br>#include &lt;iostream&gt;<br>#include &lt;fstream&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;cctype&gt;<br>#include &lt;sstream&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;functional&gt;<br>#include &lt;stdarg.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;iterator&gt;<br>#include &lt;math.h&gt;<br>#include &lt;complex&gt;<br>#include &lt;numeric&gt;<br>#include &lt;iostream&gt;<br>#include &lt;fstream&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;cctype&gt;<br>#include &lt;sstream&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;functional&gt;<br>#include &lt;stdarg.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;iterator&gt;<br>#include &lt;math.h&gt;<br>#include &lt;complex&gt;<br>#include &lt;numeric&gt;<br>using namespace std;<br><br>typedef complex&lt;double&gt; point;<br>typedef complex&lt;double&gt; Vector;<br>typedef pair&lt;point, point&gt; Segment;<br>typedef pair&lt;int, int&gt; pii;<br>typedef pair&lt;int, string&gt; pis;<br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;vi&gt; vvi;<br>typedef vector&lt;vvi&gt; vvvi;<br>typedef vector&lt;long long&gt; vLL;<br>typedef vector&lt;pii&gt; vpii;<br>typedef vector&lt;string&gt; vs;<br>typedef pair&lt;pii, pii&gt; ppii;<br>typedef long long LL;<br>typedef long double LD;<br><br>#define f(i, n)          for(int i = 0; i &lt; n; i++)<br>#define fo(i, a, b)        for(int i = a; i &lt;= b; i++)<br>#define fx(it, x)        for(typeof((x).begin()) it = (x).begin(); it != (x).end();++it)<br>#define popcount(n)        __builtin_popcount(n)<br>#define clz(n)          __builtin_clz(n)<br>#define ctz(n)          __builtin_ctz(n)<br>#define gcd(a, b)        __gcd(a, b)<br>#define X            real()<br>#define Y            imag()<br>#define nom            first<br>#define den            second<br>#define sz(a)          (int(a.size()))<br>#define pb            push_back<br>#define all(v)          v.begin(), v.end()<br>#define PI            acos(-1.0)<br>#define EPS            1e-9<br>#define EQ(a, b)        (abs(a - b) &lt; eps)<br>#define sqr(a)          ((a) * (a))<br>#define cl(x, el)        memset(x, el, sizeof(x))<br>#define wait          system("pause")<br>#define Get_Time(time)      (double)((double)(clock() - time) / (double)CLOCKS_PER_SEC)<br>#define INF            (1e60)<br>#define MAX            (1 &lt;&lt; 28)<br>#define MIN            (- MAX)<br>#define MAX_N          (15)<br><br>inline LL strtoint(const string &amp;s) {stringstream ss;ss&lt;&lt;s;LL ret;ss&gt;&gt;ret;return ret;}<br>inline string inttostr(const LL &amp;a) {stringstream ss;ss&lt;&lt;a;string ret;ss&gt;&gt;ret;return ret;}<br><br><br>vi states;<br>int dp[1 &lt;&lt; MAX_N];<br><br><br>class CollectingMarbles<br>{<br>public:<br><br>int mostMarbles(vector &lt;int&gt; marblesWeights, int bagCapacity, int numberOfBags)<br>{<br>int N = sz(marblesWeights);<br>int ret = 0;<br>  <br>  <br>  f(i, 1 &lt;&lt; N) dp[i] = MAX;<br>  <br>  dp[0] = 0;<br>  <br>  f(mask, 1 &lt;&lt; N)<br>  {<br>    int sum = 0;<br>    <br>    f(i, N) if(mask &amp; (1 &lt;&lt; i)) sum += marblesWeights[i];<br>    <br>    if(sum &lt;= bagCapacity)<br>    {<br>      f(i, 1 &lt;&lt; N) if(!(i &amp; mask) &amp;&amp; dp[i] &lt; numberOfBags)<br>      {<br>        dp[i | mask] = min(dp[i | mask], dp[i] + 1);<br>      }<br>    }<br>  }<br>  <br>  f(mask, 1 &lt;&lt; N) if(dp[mask] &lt;= numberOfBags) ret = max(ret, popcount(mask));<br>  <br>  <br>  return ret;<br>}<br><br>};<br></td>