<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;algorithm&gt;<br> <br>#define forn(i, n) for (int i = 0; i &lt; (int)(n); i++)<br>#define forit(i, a) for (_typeof((a).begin()) = (a).begin(); i != (a).end(); i++)<br>#define pb push_back<br>#define mp make_pair<br>#define fi first<br>#define se second<br> <br>using namespace std;<br> <br>typedef long long llong;<br>typedef vector &lt;int&gt; vi;<br>typedef vector &lt;string&gt; vs;<br>typedef pair &lt;int, int&gt; pii;<br> <br>#define m 10000<br> <br>int u[m];<br> <br>class AvoidingProduct<br>{<br>public:<br>  vector &lt;int&gt; getTriple( vector &lt;int&gt; a, int n )<br>  {<br>    memset(u, 0, sizeof(u));<br>    for (int i = 0; i &lt; a.size(); i++)<br>      u[a[i]] = 1;<br>    int bx = -1, by = -1, bz = -1;<br>    for (int x = 1; bx == -1 || x &lt;= n; x++)<br>      if (!u[x])<br>        for (int y = x; bx == -1 || x * y &lt;= 2 * n + 1; y++)<br>          if (!u[y])<br>            for (int z = y; bx == -1 || x * y * z &lt;= 2 * n + 1; z++)<br>              if (!u[z])<br>                if (bx == -1 || abs(bx * by * bz - n) &gt; abs(x * y * z - n))<br>                  bx = x, by = y, bz = z;<br>    vi res;<br>    res.pb(bx);<br>    res.pb(by);<br>    res.pb(bz);<br>    return res;<br>  }<br>};<br> <br> <br>// Powered by PopsEdit<br></td>