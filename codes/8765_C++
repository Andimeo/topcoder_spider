<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define LN(X) ((int)(X.length()))<br>template&lt;class T&gt; inline void checkmin(T &amp;a,T b){if(b&lt;a) a=b;}<br> <br>class ReversalChain<br>{<br>public:<br>  map&lt;string,int&gt; M;<br>  int solve(string s,string t)<br>  {<br>    if (s==t) return 0;<br>    string buf=s+" "+t;<br>    if (M.find(buf)!=M.end()) return M[buf];<br>    int ret=10000;<br>    int L=LN(s);<br>    if (s[0]==t[0]) checkmin(ret,solve(s.substr(1),t.substr(1)));<br>    if (s[L-1]==t[L-1]) checkmin(ret,solve(s.substr(0,L-1),t.substr(0,L-1)));<br>    for (int i=0;i&lt;L-1-i;i++) swap(s[i],s[L-1-i]);<br>    if (s[0]==t[0]) checkmin(ret,solve(s.substr(1),t.substr(1))+1);<br>    if (s[L-1]==t[L-1]) checkmin(ret,solve(s.substr(0,L-1),t.substr(0,L-1))+1);<br>    return M[buf]=ret;<br>  }<br>  int minReversal(string init, string goal)<br>  {<br>    M.clear();<br>    int ret=solve(init,goal);<br>    if (ret==10000) ret=-1;<br>    return ret;<br>  }<br>};<br></td>