<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class ReversalChain {<br>    int n;<br>    int[] a;<br>    int[] b;<br> <br>    int[][][] d;<br>    int[][][] r;<br> <br>    int relax(int r, int v, int d) {<br>        if (v != -1 &amp;&amp; (r == -1 || v + d &lt; r)) {<br>            return v + d;<br>        }<br>        return r;<br>    }<br> <br>    int direct(int s, int t, int l) {<br>        if (d[s][t][l] != -2) {<br>            return d[s][t][l];<br>        }<br>        if (l == 1) {<br>            return d[s][t][l] = (a[s] == b[t] ? 0 : -1);<br>        }<br>        int res = -1;<br>        if (a[s] == b[t]) {<br>            int v = direct(s + 1, t + 1, l - 1);<br>            res = relax(res, v, 0);<br>        }<br>        if (a[s + l - 1] == b[t + l - 1]) {<br>            int v = direct(s, t, l - 1);<br>            res = relax(res, v, 0);<br>        }<br>        if (a[s] == b[t + l - 1]) {<br>            int v = reverse(s + 1, t, l - 1);<br>            res = relax(res, v, 1);<br>        }<br>        if (a[s + l - 1] == b[t]) {<br>            int v = reverse(s, t + 1, l - 1);<br>            res = relax(res, v, 1);<br>        }<br> <br>        return d[s][t][l] = res;<br>    }<br> <br>    int reverse(int s, int t, int l) {<br>        if (r[s][t][l] != -2) {<br>            return r[s][t][l];<br>        }<br>        if (l == 1) {<br>            return r[s][t][l] = (a[s] == b[t] ? 0 : -1);<br>        }<br>        int res = -1;<br>        if (a[s] == b[t]) {<br>            int v = direct(s + 1, t + 1, l - 1);<br>            res = relax(res, v, 1);<br>        }<br>        if (a[s + l - 1] == b[t + l - 1]) {<br>            int v = direct(s, t, l - 1);<br>            res = relax(res, v, 1);<br>        }<br>        if (a[s] == b[t + l - 1]) {<br>            int v = reverse(s + 1, t, l - 1);<br>            res = relax(res, v, 0);<br>        }<br>        if (a[s + l - 1] == b[t]) {<br>            int v = reverse(s, t + 1, l - 1);<br>            res = relax(res, v, 0);<br>        }<br> <br>        return r[s][t][l] = res;<br>    }<br> <br>    public int minReversal(String init, String goal) {<br>        n = init.length();<br>        a = new int[n];<br>        for (int i = 0; i &lt; n; i++) {<br>            a[i] = init.charAt(i) - '0';<br>        }<br>        b = new int[n];<br>        for (int i = 0; i &lt; n; i++) {<br>            b[i] = goal.charAt(i) - '0';<br>        }<br> <br>        d = new int[n][n][n + 1];<br>        r = new int[n][n][n + 1];<br>        for (int i = 0; i &lt; n; i++) {<br>            for (int j = 0; j &lt; n; j++) {<br>                Arrays.fill(d[i][j], -2);<br>                Arrays.fill(r[i][j], -2);<br>            }<br>        }<br> <br>        return direct(0, 0, n);<br>    }<br> <br>}<br> <br> <br>// Powered by PopsEdit<br> <br>// Powered by CodeProcessor<br></td>