<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Collections.Generic;<br><br>public class StringInterspersal {<br>    public string minimum(string[] W) {<br>        string res = "";<br>        foreach (string x in W)<br>            res = join(res, x);<br>        return res;<br>    }<br><br>    string join(string a, string b)<br>    {<br>        StringBuilder res = new StringBuilder();<br>        Dictionary&lt;int, object&gt; can = new Dictionary&lt;int, object&gt;();<br>        can[0] = null;<br>        for (int len = 0; len &lt; a.Length + b.Length; ++len)<br>        {<br>            Dictionary&lt;int, object&gt; ncan = new Dictionary&lt;int, object&gt;();<br>            char best = (char) ('Z' + 1);<br>            foreach (int x in can.Keys)<br>            {<br>                int pa = x;<br>                int pb = len - x;<br>                if (pa &lt; a.Length)<br>                {<br>                    char cur = a[pa];<br>                    if (cur &lt; best)<br>                    {<br>                        best = cur;<br>                        ncan.Clear();<br>                    }<br>                    if (cur == best)<br>                    {<br>                        ncan[x + 1] = null;<br>                    }<br>                }<br>                if (pb &lt; b.Length)<br>                {<br>                    char cur = b[pb];<br>                    if (cur &lt; best)<br>                    {<br>                        best = cur;<br>                        ncan.Clear();<br>                    }<br>                    if (cur == best)<br>                    {<br>                        ncan[x] = null;<br>                    }<br>                }<br>            }<br>            res.Append(best);<br>            can = ncan;<br>        }<br>        return res.ToString();<br>    }<br><br>   <br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>