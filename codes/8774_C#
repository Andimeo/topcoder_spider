<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Text;<br>using System.Collections.Generic;<br><br>public class PerfectPowers {<br>    long INF = 2000000000000000000;<br><br>    public long nearestCouple(long A, long B) {<br>        long res = INF;<br>        List&lt;long&gt; all = new List&lt;long&gt;();<br>        for (int k = 2;; ++k) {<br>            long left = Math.Abs(root(A, k));<br>            long right = Math.Abs(root(B + 1, k)) - 1;<br>            if (right &lt; 2)<br>                break;<br>            if (k == 2) {<br>                if (left &lt; right) {<br>                    res = Math.Min(res, 2 * left + 1);<br>                }<br>                continue;<br>            }<br>            for (long x = left; x &lt;= right; ++x) {<br>                long v = pow(x, k);<br>                if (v &lt; A || v &gt; B)<br>                    throw new Exception();<br>                all.Add(v);<br>                long u = Math.Abs(root(v, 2));<br>                long u2 = pow(u, 2);<br>                long uu2 = pow(Math.Max(1, u - 1), 2);<br>                long uuu2 = pow(u + 1, 2);<br>                if (u2 &gt;= A &amp;&amp; u2 &lt;= B &amp;&amp; u2 != v)<br>                    res = Math.Min(res, Math.Abs(u2 - v));<br>                if (uu2 &gt;= A &amp;&amp; uu2 &lt;= B &amp;&amp; uu2 != v)<br>                    res = Math.Min(res, Math.Abs(uu2 - v));<br>                if (uuu2 &gt;= A &amp;&amp; uuu2 &lt;= B &amp;&amp; uuu2 != v)<br>                    res = Math.Min(res, Math.Abs(uuu2 - v));<br>            }<br>        }<br>        all.Sort();<br>        for (int i = 0; i &lt; all.Count - 1; ++i)<br>            if (all[i] != all[i + 1])<br>                res = Math.Min(res, Math.Abs(all[i] - all[i + 1]));<br>        return res == INF ? -1 : res;<br>    }<br><br>    long root(long n, long p) {<br>        long z = Math.Max(1, (long) Math.Pow(n, 1.0 / p) - 2);<br>        while (pow(z, p) &lt; n)<br>            ++z;<br>        if (pow(z, p) &gt; n)<br>            return -z;<br>        else<br>            return z;<br>    }<br><br>    long pow(long a, long k) {<br>        if (k == 0) {<br>            return 1;<br>        } else if (k % 2 == 0) {<br>            long z = pow(a, k / 2);<br>            return mul(z, z);<br>        } else {<br>            return mul(a, pow(a, k -1));<br>        }<br>    }<br><br>    long mul(long a, long b) {<br>        if (INF / a &lt; b)<br>            return INF;<br>        else<br>            return a * b;<br>    }<br>}<br><br><br>// Powered by FileEdit<br></td>