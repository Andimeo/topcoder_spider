<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cmath&gt;<br>#include &lt;memory&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;algorithm&gt;<br>using namespace std;<br><br>typedef long long Int;<br>typedef pair&lt;int,int&gt; PII;<br>typedef vector&lt;int&gt; VInt;<br><br>#define FOR(i, a, b) for(i = (a); i &lt; (b); ++i)<br>#define RFOR(i, a, b) for(i = (a) - 1; i &gt;= (b); --i)<br>#define CLEAR(a, b) memset(a, b, sizeof(a))<br>#define SIZE(a) int((a).size()) <br>#define ALL(a) (a).begin(),(a).end() <br>#define PB push_back<br>#define MP make_pair<br><br>int A[64][64];<br>int B[64][64];<br>int N, M;<br><br>int dfs(int x, int y)<br>{<br>  if(x &lt; 0 || x &gt;= N || y &lt; 0 || y &gt;= M || A[x][y] == 0 || B[x][y])<br>    return 0;<br><br>  int res = 1;<br>  B[x][y] = 1;<br>  res += dfs(x + 1, y);<br>  res += dfs(x - 1, y);<br>  res += dfs(x, y + 1);<br>  res += dfs(x, y - 1);<br>  return res;<br>}<br><br>int F(int N, int M)<br>{<br>  int i, j;<br>  CLEAR(B, 0);<br>  int res = 0;<br>  FOR(i, 0, N)<br>    FOR(j, 0, M)<br>      if(A[i][j] &amp;&amp; B[i][j] == 0)<br>        res = max(res, dfs(i, j));<br><br>  return res;<br>}<br><br>class DiamondGame {<br>  public:<br>  int maximumDiamond(vector &lt;string&gt; D) <br>  {<br>    N = SIZE(D);<br>    M = SIZE(D[0]);<br><br>    int i, j;<br>    FOR(i, 0, N)<br>      FOR(j, 0, M)<br>        if(D[i][j] == '*')<br>          A[i][j] = 1;<br>        else<br>          A[i][j] = 0;<br><br>    int res = F(N, M);<br><br>    FOR(i, 0, N)<br>      FOR(j, 0, M)<br>        if(A[i][j] == 0)<br>        {<br>          A[i][j] = 1;<br>          res = max(res, F(N, M) - 1);<br>          A[i][j] = 0;<br>        }<br><br>    return res;<br>  }<br><br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>