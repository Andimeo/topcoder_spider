<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cassert&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;complex&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;ctime&gt;<br>#include &lt;deque&gt;<br>#include &lt;functional&gt;<br>#include &lt;iterator&gt;<br>#include &lt;iostream&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;string&gt;<br>#include &lt;valarray&gt;<br>#include &lt;vector&gt;<br><br>using namespace std;<br><br>const int inf = 1000000000;<br>const double eps = 1e-8;<br>const double PI = 3.1415926535897932384626433832795;<br><br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;vi&gt; vvi;<br>typedef long double ld;<br>typedef vector&lt;ld&gt; vd;<br>typedef pair&lt;int,int&gt; pii;<br>typedef long long ll;<br>typedef pair&lt;ll, ll&gt; pll;<br>typedef vector&lt;bool&gt; vb;<br>typedef vector&lt;string&gt; vs;<br><br>#define MP make_pair<br>#define all(v) (v).begin(), (v).end()<br><br>class SymmetricPie<br> {<br>  public:<br>  int getLines(vector &lt;int&gt; dogs) <br>  {<br>    int result = 0;<br>    sort(all(dogs));<br>    do<br>    {<br>      vector&lt;int&gt; nums;<br>      nums.push_back(0);<br>      for (int i = 0; i + 1 &lt; dogs.size(); i++)<br>        nums.push_back(nums.back() + dogs[i]);<br>      int curres = 0;<br>      for (int i = 1; i &lt; nums.size(); ++i)<br>        for (int j = 0; j &lt; i; j++)<br>          if (nums[i] == nums[j] + 50)<br>            curres++;<br>      result = max(result, curres);<br>    } while(next_permutation(all(dogs)));<br>    return result;<br>  }<br>  <br><br>};<br><br><br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>