<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;cassert&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cmath&gt;<br>#include &lt;vector&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;list&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br><br>#define FOR(i,a,b)  for(int i=(a);i&lt;(b);++i)<br>#define REP(i,a)    FOR(i,0,a)<br>#define ZERO(m)     memset(m,0,sizeof(m))<br>#define ALL(x)      x.begin(),x.end()<br>#define PB          push_back<br>#define S           size()<br>#define LL          long long<br>#define LD          long double<br>#define MP          make_pair<br>#define X           first<br>#define Y           second<br>#define VC          vector<br>#define VI          VC&lt;int&gt;<br>#define VS          VC&lt;string&gt;<br><br><br>#define MD 1234567891<br><br>map&lt; VI, int &gt; mp;<br><br>int go(VI &amp;v) {<br>  if (mp.count(v)) return mp[v];<br>  int tot = 0;<br>  FOR(i, 1, v.S) tot += v[i];<br>  if (tot == 0) return mp[v] = 1;<br>  LL rv = 0;<br>  int t = v[0];<br>  FOR(i, 1, v.S) if (v[i]) {<br>    v[i]--;<br>    v[i - 1]++;<br>    v[0] = i - 1;<br>    rv += (LL)go(v) * i * (v[i] + 1 - (i == t ? 1 : 0));<br>    v[i]++;<br>    v[i - 1]--;<br>  }<br>  rv %= MD;<br>  //print(v);<br>  //DB(rv);<br>  v[0] = t;<br>  return mp[v] = rv;<br>}<br><br>class PSequence {public:int count(vector &lt;int&gt; X, int p) {<br>  mp.clear();<br>  REP(i, X.S) {<br>    X[i] = ((X[i] % p) + p) % p;<br>  }<br>  VI v(100, 0);<br>  REP(i, p) {<br>    int t = 0;<br>    REP(j, X.S) t += X[j] == i;<br>    if (t) v[t]++;<br>  }<br>  v[0] = -1;<br>  while (v[v.S - 1] == 0) v.pop_back();<br>  int rv = go(v);<br>  cout &lt;&lt; mp.S &lt;&lt; endl;<br>  return rv;<br>}<br><br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>