<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class DividingIntoTeams <br>{<br>  public string findYourTeam(int[] alexFriends, int[] bobFriends, int[] charlieFriends, int k) <br>    {<br>        int turn = 0;<br>        int [,]p = new int[3,alexFriends.Length];<br>        for (int i = 0; i &lt; alexFriends.Length; i++)<br>    {<br>            p[0, i] = alexFriends[i];<br>    }<br>        for (int i = 0; i &lt; bobFriends.Length; i++)<br>        {<br>            p[1, i] = bobFriends[i];<br>            <br>        }<br>        for (int i = 0; i &lt; charlieFriends.Length; i++)<br>        {<br>            p[2, i] = charlieFriends[i];<br>        }<br>        bool[] choose = new bool[alexFriends.Length + 1];<br>        int n = alexFriends.Length;<br><br>        int j = 0;<br>        while (true)<br>        {<br>            for (j = 0; j &lt; n; j++)<br>            {<br>                if (choose[p[turn, j]])<br>                    continue;<br>                else<br>                {<br>                    choose[p[turn, j]] = true;<br>                    if (p[turn, j] == k)<br>                    {<br>                        if (turn == 0)<br>                            return "Alex";<br>                        else if (turn == 1)<br>                            return "Bob";<br>                        else if (turn == 2)<br>                            return "Charlie";<br>                    }<br>                    break;<br>                }<br>            }<br>            turn = (turn + 1) % 3;<br>        }<br>  }<br>  <br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>