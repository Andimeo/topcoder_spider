<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>class MilitaryBase {<br>public:<br>  int getSchoolBuildingCount(vector &lt;string&gt;, int);<br>};<br>bool b[64][64];<br>char a[64][64];<br>int n,m;<br>int mxx,mnx,mxy,mny;<br>void dfs(int x,int y) {<br>  b[x][y]=true;<br>  mxx=max(x,mxx);<br>  mnx=min(mnx,x);<br>  mxy=max(y,mxy);<br>  mny=min(mny,y);<br>  for(int i=x-1;i&lt;=x+1;i++)<br>  for(int j=y-1;j&lt;=y+1;j++)<br>  if (a[i][j]=='*' &amp;&amp; !b[i][j]) dfs(i,j);<br>}<br>int judge(int k) {<br>  if (mxx-mnx&lt;k+k || mxy-mny&lt;k+k) return 0;<br>  for(int i=mnx;i&lt;=mxx;i++)<br>  for(int j=mny;j&lt;=mxy;j++)<br>  if (i&lt;mnx+k || i&gt;mxx-k || j&lt;mny+k || j&gt;mxy-k) {if (a[i][j]!='*') return 0;}<br>  else if (a[i][j]!='.') return 0;<br>  return 1;<br>}<br>int MilitaryBase::getSchoolBuildingCount(vector &lt;string&gt; photo, int k) {<br>  memset(b,0,sizeof(b));<br>  n=photo.size();<br>  m=photo[0].size();<br>  for(int i=0;i&lt;n;i++) strcpy(a[i],photo[i].c_str());<br>  int ret=0;<br>  for(int i=0;i&lt;n;i++)<br>  for(int j=0;j&lt;m;j++)<br>  if (a[i][j]=='*' &amp;&amp; !b[i][j]) {<br>    mxx=mxy=-1;<br>    mnx=mny=100;<br>    dfs(i,j);<br>    ret+=judge(k);<br>  }<br>  return ret;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>