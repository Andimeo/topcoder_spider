<td class="problemText" colspan="8" valign="middle" align="left">
            /**<br> * Created by IntelliJ IDEA.<br> * User: math<br> * Date: 2008-5-24<br> * Time: 14:45:17<br> * To change this template use File | Settings | File Templates.<br> */<br>public class MilitaryBase {<br>    static boolean grid[][];<br>    static int row;<br>    static int column;<br>    public static int getSchoolBuildingCount(String[] photo, int k) {<br>        row=photo.length;<br>        column=photo[0].length();<br>        grid=new boolean[row][column];<br>        for (int i=0;i&lt;row;i++) {<br>            for (int j=0;j&lt;column;j++) {<br>                if (photo[i].charAt(j)=='*') {<br>                    grid[i][j]=true;<br>                }<br>            }<br>        }<br>        int count=0;<br>        for (int i=0;i&lt;row;i++) {<br>            for (int j=0;j&lt;column;j++) {<br>                for (int p=i+k*2;p&lt;row;p++) {<br>                    for (int q=j+k*2;q&lt;column;q++) {<br>                        if (check(i,j,p,q,k)==true) {<br>                            count++;<br>                        }<br>                    }<br>                }<br>            }<br>        }<br>        return count;<br>    }<br><br>    static boolean check(int x1,int y1,int x2,int y2,int k) {<br>        if (x1&gt;0) {<br>            for (int i=y1;i&lt;=y2;i++) {<br>                if (grid[x1-1][i]==true) {<br>                    return false;<br>                }<br>            }<br>        }<br>        if (x2&lt;row-1) {<br>            for (int i=y1;i&lt;=y2;i++) {<br>                if (grid[x2+1][i]==true) {<br>                    return false;<br>                }<br>            }<br>        }<br>        if (y1&gt;0) {<br>            for (int i=x1;i&lt;=x2;i++) {<br>                if (grid[i][y1-1]==true) {<br>                    return false;<br>                }<br>            }<br>        }<br>        if (y2&lt;column-1) {<br>            for (int i=x1;i&lt;=x2;i++) {<br>                if (grid[i][y2+1]==true) {<br>                    return false;<br>                }<br>            }<br>        }<br>        if (isInside(x1-1,y1-1)==true &amp;&amp; grid[x1-1][y1-1]==true) {<br>            return false;<br>        }<br>        if (isInside(x2+1,y1-1)==true &amp;&amp; grid[x2+1][y1-1]==true) {<br>            return false;<br>        }<br>        if (isInside(x1-1,y2+1)==true &amp;&amp; grid[x1-1][y2+1]==true) {<br>            return false;<br>        }<br>        if (isInside(x2+1,y2+1)==true &amp;&amp; grid[x2+1][y2+1]==true) {<br>            return false;<br>        }<br>        for (int i=x1;i&lt;x1+k;i++) {<br>            for (int j=y1;j&lt;=y2;j++) {<br>                if (grid[i][j]==false) {<br>                    return false;<br>                }<br>            }<br>        }<br>        for (int i=x2;i&gt;x2-k;i--) {<br>            for (int j=y1;j&lt;=y2;j++) {<br>                if (grid[i][j]==false) {<br>                    return false;<br>                }<br>            }<br>        }<br>        for (int i=x1;i&lt;=x2;i++) {<br>            for (int j=y1;j&lt;y1+k;j++) {<br>                if (grid[i][j]==false) {<br>                    return false;<br>                }<br>            }<br>        }<br>        for (int i=x1;i&lt;=x2;i++) {<br>            for (int j=y2;j&gt;y2-k;j--) {<br>                if (grid[i][j]==false) {<br>                    return false;<br>                }<br>            }<br>        }<br>        for (int i=x1+k;i&lt;=x2-k;i++) {<br>            for (int j=y1+k;j&lt;=y2-k;j++) {<br>                if (grid[i][j]==true) {<br>                    return false;<br>                }<br>            }<br>        }<br>        return true;<br>    }<br><br>    static boolean isInside(int x,int y) {<br>        if (x&gt;=0 &amp;&amp; x&lt;row &amp;&amp; y&gt;=0 &amp;&amp; y&lt;column) {<br>            return true;<br>        }<br>        else {<br>            return false;<br>        }<br>    }<br><br>    public static void main(String args[]) {<br>        System.out.println(getSchoolBuildingCount(new String[]{"***......",<br> "*.*......",<br> "***.*****",<br> "....*****",<br> "....**.**",<br> "....**.**",<br> "....**.**",<br> "....*****",<br> "....*****"},1));<br>        System.out.println(getSchoolBuildingCount(new String[]{"*****.*****",<br> "*****.*****",<br> "**.**.**.**",<br> "*****.*****",<br> "*****.*****",<br> "...........",<br> "*****.*****",<br> "**.**.*****",<br> "*****.**.**",<br> "...........",<br> "****.......",<br> "****.......",<br> "**.........",<br> "**........."},2));<br>        System.out.println(getSchoolBuildingCount(new String[]{"*********",<br> "*.......*",<br> "*.*****.*",<br> "*.*...*.*",<br> "*.*...*.*",<br> "*.*****.*",<br> "*.......*",<br> "*********"},1));<br>        System.out.println(getSchoolBuildingCount(new String[]{"..........",<br> ".****.....",<br> ".*..*.....",<br> ".****.....",<br> ".....****.",<br> ".....*..*.",<br> ".....****.",<br> ".........."},1));<br>        System.out.println(getSchoolBuildingCount(new String[]{"*********.",<br> "*.......*.",<br> "*.***...*.",<br> "*.*.*.*.*.",<br> "*.***...*.",<br> "*.......*.",<br> "*********.",<br> "*********."},1));<br>        System.out.println(getSchoolBuildingCount(new String[]{"*******",<br> "*.....*",<br> "*.**..*",<br> "*..**.*",<br> "*.....*",<br> "*******"},1));<br>    }<br>}<br></td>