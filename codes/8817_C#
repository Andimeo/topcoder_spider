<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br><br>public class AddElectricalWires {<br>    public int maxNewWires(string[] wires, int[] gridConnections) {<br>        int alr = 0;<br>        int n = wires.Length;<br>        bool[,] c = new bool[n, n];<br>        for (int i = 0; i &lt; n; ++i)<br>            for (int j = 0; j &lt; n; ++j)<br>            {<br>                c[i, j] = wires[i][j] == '1';<br>                if (c[i, j])<br>                    ++alr;<br>            }<br>        List&lt;int&gt; comps = new List&lt;int&gt;();<br>        bool[] got = new bool[n];<br>        foreach (int x in gridConnections)<br>            comps.Add(dfs(x, n, c, got));<br>        comps.Sort();<br>        for (int i = 0; i &lt; n; ++i)<br>            comps[comps.Count - 1] += dfs(i, n, c, got);<br>        int res = -alr;<br>        foreach (int x in comps)<br>            res += x * (x - 1);<br>        return res / 2;<br>    }<br><br>    private int dfs(int x, int n, bool[,] c, bool[] got)<br>    {<br>        if (got[x])<br>            return 0;<br>        int r = 1;<br>        got[x] = true;<br>        for (int i = 0; i &lt; n; ++i)<br>            if (c[x, i])<br>                r += dfs(i, n, c, got);<br>        return r;<br>    }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>