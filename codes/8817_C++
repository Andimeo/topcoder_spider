<td class="problemText" colspan="8" valign="middle" align="left">
            #define FR(i,a,b) for (int i = (a); i &lt; (b); i++)<br>#define FOR(i,n) FR(i,0,n)<br>#define FORI(i,n) FOR(i,n.size())<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#define SZ size()<br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;math.h&gt;<br>#include &lt;ctype.h&gt;<br>#include &lt;setjmp.h&gt;<br>#include &lt;regex.h&gt;<br>#include &lt;utility&gt;<br>#define ll long long<br>#define ld long double<br>#define EPS 1e-9<br>using namespace std;<br> <br>struct AddElectricalWires {<br>int maxNewWires(vector &lt;string&gt; wires, vector &lt;int&gt; grid) {<br> int gno[64];<br> FOR(i,64) gno[i]=-1;<br> FORI(i,grid) gno[grid[i]] = i;<br> int n=wires.SZ;<br> FOR(k,n) FOR(i,n) FOR(j,n) if (gno[i] != -1 &amp;&amp; wires[i][j] == '1') gno[j] = gno[i];<br> int ng[64]={0};<br> FOR(i,n) if (gno[i] != -1) ng[gno[i]]++;<br> int ans=0;<br> FOR(i,n) FOR(j,i) if (gno[i]==gno[j] &amp;&amp; wires[i][j] == '0') ans++;<br> int maxgrid = -1;<br> FOR(i,64) maxgrid &gt;?= ng[i];<br> FOR(i,n) if (gno[i] == -1) ans += maxgrid;<br> return ans;<br>}};<br>// Powered by ted<br></td>