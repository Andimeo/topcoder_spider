<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br>public class TupleLine {<br>  int size;<br>  int dim;<br>  public int quickLine(int _size, String[] chosen) {<br>    /*<br>    for(int i = 0;i&lt;48;i++) {<br>      for(int j = 0;j&lt;9;j++) {<br>        System.out.print((int)(Math.random()*9));<br>      }<br>      System.out.println();<br>    }<br>    */<br>    size = _size;<br>    int n = chosen.length;<br>    dim = chosen[0].length();<br>    int best = size-1;<br>    for(int i = 0;i&lt;n;i++) {<br>      for(int j = i+1;j&lt;n;j++) {<br>        if(build(chosen[i],chosen[j])) {<br>          //String[] line = new String[size];<br>          int count = 0;<br>          for(int k = 0;k&lt;size &amp;&amp; count&lt;best;k++) {<br>            String next = next();<br>            boolean match = false;<br>            for(int m = 0;m&lt;n &amp;&amp; !match;m++) {<br>              if(chosen[m].equals(next)) {<br>                match = true;<br>              }<br>            }<br>            if(!match) {<br>              count++;<br>            }<br>          }<br>          best = count&lt;best?count:best;<br>        }<br>      }<br>    }<br>    <br>    return best;<br>  }<br>  <br>  ArrayList elems;<br>  Iterator it;<br>  <br>  private String next() {<br>    if(it.hasNext()) {<br>      return (String)it.next();<br>    }<br>    return "";<br>  }<br>  <br>  private boolean build(String s1, String s2) {<br>    if(s1.equals(s2)) { return false; }<br>    int[] diff = new int[dim];<br>    for(int i = 0;i&lt;dim;i++) {<br>      diff[i] = s1.charAt(i)-s2.charAt(i);<br>    }<br>    int abs = 0;<br>    for(int i = 0;i&lt;dim;i++) {<br>      if(diff[i]==0) { continue; }<br>      if(abs==0) {<br>        abs = diff[i]*(diff[i]&gt;0?1:-1);<br>      } else if( abs != diff[i]*(diff[i]&gt;0?1:-1) ) {<br>        return false;<br>      }<br>    }<br>    elems = new ArrayList();<br>    for(int i = 0;i&lt;size;i++) {<br>      String add = "";<br>      for(int j = 0;j&lt;dim;j++) {<br>        if(diff[j]&lt;0) {<br>          add += (char)((size-i-1)+'0');<br>        } else if(diff[j]==0){<br>          add += s1.charAt(j);<br>        } else if(diff[j]&gt;0) {<br>          add += (char)(i+'0');<br>        }<br>      }<br>      elems.add(add);<br>    }<br>    it = elems.iterator();<br>    return true;<br>  }<br>}<br> <br>// Powered by PopsEdit<br></td>