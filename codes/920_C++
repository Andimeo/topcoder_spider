<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>using namespace std;<br>typedef vector&lt;int&gt; vi;<br>typedef vector&lt;string&gt; vs;<br>vi toInts(string str)<br>{<br>vi res;<br>stringstream s(str);<br>int i;<br>while(s&gt;&gt;i)<br>{<br>   res.push_back(i); //cout &lt;&lt; i &lt;&lt; endl;<br>}<br>return res;<br>}<br>template &lt;class T&gt;<br>T gcd(T a, T b)<br>{<br>   if(a&lt;0) a=-a;<br>   if(b&lt;0) b=-b;<br>   if(a==0) return b;  if(b==0) return a;<br>   return gcd(b,a%b);<br>}<br>class TicSolver<br>{<br>public:<br>string whoWins(vector &lt;string&gt; b)<br>{<br>//cout&lt;&lt;b[0]&lt;&lt;endl&lt;&lt;b[1]&lt;&lt;endl&lt;&lt;b[2]&lt;&lt;endl&lt;&lt;endl;<br> <br>  int moves1=0, moves2=0,i,j;<br>  for(i=0; i&lt;3; i++) for(j=0; j&lt;3; j++) { if(b[i][j]=='O') moves1++; if(b[i][j]=='X') moves2++; }<br>  if(moves1&gt;moves2+1 || moves2&gt;moves1) return "INVALID";<br> <br>bool win1=false, win2=false;<br>for(i=0; i&lt;3; i++)<br>if(b[i][0]=='X' &amp;&amp; b[i][1]=='X' &amp;&amp; b[i][2]=='X') win2=true;<br>for(i=0; i&lt;3; i++)<br>if(b[i][0]=='O' &amp;&amp; b[i][1]=='O' &amp;&amp; b[i][2]=='O') win1=true;<br>for(i=0; i&lt;3; i++)<br>if(b[0][i]=='X' &amp;&amp; b[1][i]=='X' &amp;&amp; b[2][i]=='X') win2=true;<br>for(i=0; i&lt;3; i++)<br>if(b[0][i]=='O' &amp;&amp; b[1][i]=='O' &amp;&amp; b[2][i]=='O') win1=true;<br>if(b[0][0]=='O' &amp;&amp; b[1][1]=='O' &amp;&amp; b[2][2]=='O') win1=true;<br>if(b[0][0]=='X' &amp;&amp; b[1][1]=='X' &amp;&amp; b[2][2]=='X') win2=true;<br>if(b[2][0]=='O' &amp;&amp; b[1][1]=='O' &amp;&amp; b[0][2]=='O') win1=true;<br>if(b[2][0]=='X' &amp;&amp; b[1][1]=='X' &amp;&amp; b[0][2]=='X') win2=true;<br> <br>if(win1 &amp;&amp; win2) return "INVALID";<br>if(win1 &amp;&amp; moves2==moves1) return "INVALID";<br>if(win2 &amp;&amp; moves1&gt;moves2) return "INVALID";<br> <br>if(win1) return "FIRST";<br>if(win2) return "SECOND";<br> <br>if(moves1+moves2==9) return "DRAW";<br> <br>  if(moves1&gt;moves2)<br>{<br>bool canWin=false, canDraw=false;<br>for(i=0; i&lt;3; i++) for(j=0; j&lt;3; j++)<br>if(b[i][j]=='.')<br>{<br>b[i][j]='X';<br>string res=whoWins(b);<br>if(res=="DRAW") canDraw=true;<br>if(res=="SECOND") canWin=true;<br> <br>b[i][j]='.';<br>if(canWin) break;<br>}<br>if(canWin)<br>   return "SECOND";<br>if(canDraw)<br>   return "DRAW";<br>return "FIRST";<br> <br> <br>}<br>else<br>{<br>bool canWin=false, canDraw=false;<br>for(i=0; i&lt;3; i++) for(j=0; j&lt;3; j++)<br>if(b[i][j]=='.')<br>{<br>b[i][j]='O';<br>string res=whoWins(b);<br>if(res=="DRAW") canDraw=true;<br>if(res=="FIRST") canWin=true;<br> <br>b[i][j]='.';<br>if(canWin) break;<br>}<br>if(canWin)<br>   return "FIRST";<br>if(canDraw)<br>   return "DRAW";<br>return "SECOND";<br> <br> <br>}<br> <br> <br> <br> <br> <br>}};<br></td>