<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.math.*;<br>public class Symmetry {<br>  int[] px;<br>  int[] py;<br>  int np;<br> <br>  long[] lx = new long[100000];<br>  long[] ly = new long[100000];<br>  long[] ldx  = new long[100000];<br>  long[] ldy  = new long[100000];  <br>  int nl;<br> <br>  void tryl(long bx, long by, long dy, long dx) {<br>    for (int i=0; i&lt;np; i++) {<br>      double b = ((double) ( dy*(px[i]-bx) - dx*(py[i]-by) )) / (double) (dx*dx + dy*dy);<br> <br>      double nx = px[i] - 2*b*dy;<br>      double ny = py[i] + 2*b*dx;<br> <br>      boolean found = false;<br>      for (int j=0; j&lt;np; j++) {<br>        if (Math.abs(nx-px[j])&lt;1e-6 &amp;&amp; Math.abs(ny-py[j])&lt;1e-6) {<br>          found = true;<br>          break;<br>        }<br>      }<br>      if (!found) return;<br>    }<br>    <br>    // add here;<br>    //System.out.println(""+bx+" "+by+" "+dx+" "+dy);<br>    for (int i=0; i&lt;nl; i++) {<br>      if (dx == 0) {<br>        if (ldx[i]!=0) continue;<br>        if (lx[i] == bx) {<br>          return;        <br>        }<br>        continue;<br>      }<br>      if (dy == 0) {<br>        if (ldy[i]!=0) continue;<br>        if (ly[i] == by) {<br>          return;        <br>        }<br>        continue;<br>      }<br>      if (ldx[i]==0 || ldy[i]==0) continue;<br> <br>      if (ldy[i]*dx != ldx[i]*dy) continue;<br> <br>      if (dx*(ly[i]-by) != dy*(lx[i]-bx)) continue;<br> <br>      return;<br>    }<br> <br>    lx[nl]=bx;<br>    ly[nl]=by;<br>    ldx[nl]=dx;<br>    ldy[nl]=dy;<br>    nl++;<br>  }<br> <br>  public int countLines(String[] points) {<br>    nl = 0;<br>    String pts = "";<br>    for (int i=0; i&lt;points.length; i++) pts+=" "+points[i];<br>    StringTokenizer st = new StringTokenizer(pts);<br>    np = st.countTokens()/2;<br>    px = new int[np];<br>    py = new int[np];<br>    for (int i=0; i&lt;np; i++) {<br>      px[i]=Integer.parseInt(st.nextToken())*2;<br>      py[i]=Integer.parseInt(st.nextToken())*2;<br>    }<br> <br>    for (int i=0; i&lt;np; i++) {<br>      for (int j=i+1; j&lt;np; j++) {<br>        int mx = (px[i]+px[j])/2;<br>        int my = (py[i]+py[j])/2;<br>        tryl(mx,my,py[j]-py[i], px[j]-px[i]);<br>        tryl(mx,my,px[j]-px[i], py[i]-py[j]);<br>      }<br>    }<br> <br>    return nl;<br>  }<br>}<br> <br>// Powered by PopsEdit<br></td>