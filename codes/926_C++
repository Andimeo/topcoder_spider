<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;set&gt;<br>#include &lt;iostream&gt;<br>#include &lt;map&gt;<br>#include &lt;functional&gt;<br>#include &lt;deque&gt;<br>#include &lt;sstream&gt;<br>#include &lt;numeric&gt;<br><br>using namespace std;<br><br>int oloks[ 12 ][ 12 ];<br>int dimen;<br><br>int dx[] = { 1, 1, 0, -1, -1, -1, 0, 1 };<br>int dy[] = { 0, 1, 1, 1, 0, -1, -1, -1 };<br><br>int ta[ 12 ][ 12 ][ 8 ];<br>int tb[ 12 ][ 12 ][ 8 ];<br><br>void dff( int tar[ 12 ][ 12 ][ 8 ], int x, int y, int d ) {<br>  if( x &lt; 0 || x &gt;= dimen || y &lt; 0 || y &gt;= dimen )<br>    return;<br>  if( tar[ x ][ y ][ d ] )<br>    return;<br>  if( oloks[ x ][ y ] )<br>    return;<br>  tar[ x ][ y ][ d ] = true;<br>  dff( tar, x + dx[ d ], y + dy[ d ], d );<br>  {<br>    int nd = ( d + 1 ) % 8;<br>    dff( tar, x + dx[ nd ], y + dy[ nd ], nd );<br>  }<br>  {<br>    int nd = ( d + 7 ) % 8;<br>    dff( tar, x + dx[ nd ], y + dy[ nd ], nd );<br>  }<br>}<br><br>class LawnMower {<br>  public:<br>  int trimNeeded(int n, vector &lt;int&gt; row, vector &lt;int&gt; col) {<br>    for( int i = 0; i &lt; row.size(); i++ )<br>      oloks[ row[ i ] ][ col[ i ] ] = -1;<br>    dimen = n;<br>    int tmgra = dimen * dimen;<br>    for( int sx = 0; sx &lt; dimen; sx++ ) {<br>      for( int sy = 0; sy &lt; dimen; sy++ ) {<br>        for( int d = 0; d &lt; 8; d++ ) {<br>    //int sx = 1;<br>    //int sy = 0;<br>    //int d = 4;<br>          int bx = sx + dx[ ( d + 4 ) % 8 ];<br>          int by = sy + dy[ ( d + 4 ) % 8 ];<br>          if( bx &lt; 0 || bx &gt;= dimen || by &lt; 0 || by &gt;= dimen )<br>            continue;<br>          memset( ta, 0, sizeof( ta ) );<br>          memset( tb, 0, sizeof( tb ) );<br>          int ols = oloks[ sx ][ sy ];<br>          int olb = oloks[ bx ][ by ];<br>          oloks[ sx ][ sy ] = 0;<br>          oloks[ bx ][ by ] = 0;<br>          dff( ta, sx, sy, d );<br>          dff( tb, bx, by, ( d + 4 ) % 8 );<br>          int mgra = 0;<br>          for( int tx = 0; tx &lt; dimen; tx++ ) {<br>            for( int ty = 0; ty &lt; dimen; ty++ ) {<br>              if( oloks[ tx ][ ty ] )<br>                continue;<br>              if( tx == sx &amp;&amp; ty == sy )<br>                continue;<br>              if( tx == bx &amp;&amp; ty == by )<br>                continue;<br>              bool mwb = false;<br>              for( int k = 0; k &lt; 8; k++ )<br>                for( int d = -1; d &lt;= 1; d++ )<br>                  if( ta[ tx ][ ty ][ k ] &amp;&amp; tb[ tx ][ ty ][ ( k + 4 + d ) % 8 ] )<br>                    mwb = true;<br>              if( !mwb )<br>                mgra++;<br>            }<br>          }<br>          tmgra = min( mgra, tmgra );<br>          oloks[ sx ][ sy ] = ols;<br>          oloks[ bx ][ by ] = olb;<br>          /*<br>          for( int i = 0; i &lt; 8; i++ ) {<br>            printf( "%d, %d\n", dx[ i ], dy[ i ] );<br>            for( int j = 0; j &lt; 4; j++ ) {<br>              for( int k = 0; k &lt; 4; k++ ) {<br>                printf( "%d ", ta[ k ][ j ][ i ] );<br>              }<br>              printf( "\n" );<br>            }<br>            printf( "\n" );<br>          }<br>          printf( "---\n" );<br>          for( int i = 0; i &lt; 8; i++ ) {<br>            printf( "%d, %d\n", dx[ i ], dy[ i ] );<br>            for( int j = 0; j &lt; 4; j++ ) {<br>              for( int k = 0; k &lt; 4; k++ ) {<br>                printf( "%d ", tb[ k ][ j ][ i ] );<br>              }<br>              printf( "\n" );<br>            }<br>            printf( "\n" );<br>          }*/<br>        }<br>      }<br>    }<br>    return tmgra;<br>  }<br>};<br><br><br><br>// Powered by FileEdit<br></td>