<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br><br>using namespace std;<br><br><br>int X, Y;<br>char a[32][32];<br><br>class MagicBoxes { <br>   public: <br><br>   int rec( int size ) {<br>      if( size == 0 ) return 1;<br>      <br>      for( int x = 1; x &lt;= X; ++x ) {<br>         for( int y = 1; y &lt;= Y; ++y ) {<br>            if( x &lt;= X-size+1 &amp;&amp; y &lt;= Y-size+1 &amp;&amp;<br>                a[x][y] == 0 &amp;&amp; a[x-1][y] == 1 &amp;&amp; a[x][y-1] == 1 ) {<br>               int ok = 1;<br>               for( int dx = 0; dx &lt; size; ++dx ) <br>                  for( int dy = 0; dy &lt; size; ++dy ) <br>                     if( a[x+dx][y+dy] == 1 ) ok = 0;<br>               if( !ok ) continue;<br><br>               for( int dx = 0; dx &lt; size; ++dx ) <br>                  for( int dy = 0; dy &lt; size; ++dy ) <br>                     a[x+dx][y+dy] = 1;<br><br>               if( rec( size-1 ) ) return 1;<br><br>               for( int dx = 0; dx &lt; size; ++dx ) <br>                  for( int dy = 0; dy &lt; size; ++dy ) <br>                     a[x+dx][y+dy] = 0;<br>            }<br>            if( x &gt;= size &amp;&amp; y &lt;= Y-size+1 &amp;&amp;<br>                a[x][y] == 0 &amp;&amp; a[x+1][y] == 1 &amp;&amp; a[x][y-1] == 1 ) {<br>               int ok = 1;<br>               for( int dx = 0; dx &lt; size; ++dx ) <br>                  for( int dy = 0; dy &lt; size; ++dy ) <br>                     if( a[x-dx][y+dy] == 1 ) ok = 0;<br>               if( !ok ) continue;<br><br>               for( int dx = 0; dx &lt; size; ++dx ) <br>                  for( int dy = 0; dy &lt; size; ++dy ) <br>                     a[x-dx][y+dy] = 1;<br><br>               if( rec( size-1 ) ) return 1;<br><br>               for( int dx = 0; dx &lt; size; ++dx ) <br>                  for( int dy = 0; dy &lt; size; ++dy ) <br>                     a[x-dx][y+dy] = 0;<br>            }<br>            if( x &lt;= X-size+1 &amp;&amp; y &gt;= size &amp;&amp;<br>               a[x][y] == 0 &amp;&amp; a[x-1][y] == 1 &amp;&amp; a[x][y+1] == 1 ) {<br>               int ok = 1;<br>               for( int dx = 0; dx &lt; size; ++dx ) <br>                  for( int dy = 0; dy &lt; size; ++dy ) <br>                     if( a[x+dx][y-dy] == 1 ) ok = 0;<br>               if( !ok ) continue;<br><br>               for( int dx = 0; dx &lt; size; ++dx ) <br>                  for( int dy = 0; dy &lt; size; ++dy ) <br>                     a[x+dx][y-dy] = 1;<br><br>               if( rec( size-1 ) ) return 1;<br><br>               for( int dx = 0; dx &lt; size; ++dx ) <br>                  for( int dy = 0; dy &lt; size; ++dy ) <br>                     a[x+dx][y-dy] = 0;<br>            }<br>            if( x &gt;= size &amp;&amp; y &gt;= size &amp;&amp;<br>               a[x][y] == 0 &amp;&amp; a[x+1][y] == 1 &amp;&amp; a[x][y+1] == 1 ) {<br>               int ok = 1;<br>               for( int dx = 0; dx &lt; size; ++dx ) <br>                  for( int dy = 0; dy &lt; size; ++dy ) <br>                     if( a[x-dx][y-dy] == 1 ) ok = 0;<br>               if( !ok ) continue;<br><br>               for( int dx = 0; dx &lt; size; ++dx ) <br>                  for( int dy = 0; dy &lt; size; ++dy ) <br>                     a[x-dx][y-dy] = 1;<br><br>               if( rec( size-1 ) ) return 1;<br><br>               for( int dx = 0; dx &lt; size; ++dx ) <br>                  for( int dy = 0; dy &lt; size; ++dy ) <br>                     a[x-dx][y-dy] = 0;<br>            }<br>         }<br>      }<br>      return 0;<br>   }<br><br>   int biggest(int x, int y) {<br>      X = x; Y = y;<br>      for( int i = 1; i &lt; 15; ++i ) {<br>         memset( a, 1, sizeof a );<br>         for( int x = 1; x &lt;= X; ++x ) <br>            for( int y = 1; y &lt;= Y; ++y ) <br>               a[x][y] = 0;<br>         if( !rec( i ) ) return i-1;<br>      }<br>      return 14;<br>   } <br><br><br><br><br><br>   <br><br>}; <br><br><br><br>// Powered by FileEdit<br>// Powered by moj 3.0 beta 7 [modified TZTester]<br>// Powered by CodeProcessor<br></td>