<td class="problemText" colspan="8" valign="middle" align="left">
            Imports Microsoft.VisualBasic<br>Imports System.Math<br>Imports System<br>Imports System.Collections<br>Imports System.Text<br> <br>Public Class BlueMoons<br>    Private Const Moon As Decimal = 29.53<br> <br>    Private Structure TheTime<br>        Implements IComparable<br> <br>        Dim Year As Integer<br>        Dim Month As Integer<br>        Dim Day As Decimal<br> <br>        Public Sub AddMoon()<br>            Day += Moon<br>            Dim over As Decimal = DaysInMonth(Month, Year)<br>            While Day &gt;= over + 1<br>                Day -= over<br>                Month += 1<br>                If Month &gt; 12 Then<br>                    Month = 1<br>                    Year += 1<br>                End If<br>                over = DaysInMonth(Month, Year)<br>            End While<br>        End Sub<br> <br>        Public Sub RemoveMoon()<br>            Day -= Moon<br>            Dim over As Decimal = DaysInMonth(Month - 1, Year)<br>            While Day &lt; 1<br>                Day += over<br>                Month -= 1<br>                If Month &lt; 1 Then<br>                    Month = 12<br>                    Year -= 1<br>                End If<br>                over = DaysInMonth(Month - 1, Year)<br>            End While<br>        End Sub<br> <br>        Public Function DaysInMonth(ByVal m As Integer, ByVal y As Integer) As Decimal<br>            If m = 0 Then<br>                m = 12<br>                y -= 1<br>            End If<br>            Select Case m<br>                Case 1, 3, 5, 7, 8, 10, 12<br>                    Return 31<br>                Case 4, 6, 9, 11<br>                    Return 30<br>                Case 2<br>                    If Leap(y) Then<br>                        Return 29<br>                    Else<br>                        Return 28<br>                    End If<br>            End Select<br>        End Function<br> <br>        Private Function Leap(ByVal y As Integer) As Boolean<br>            Return (y Mod 4 = 0 AndAlso Not (y Mod 100 = 0 AndAlso y Mod 400 &lt;&gt; 0))<br>        End Function<br> <br>        Public Function CompareTo(ByVal obj As Object) As Integer Implements System.IComparable.CompareTo<br>            Dim it As TheTime = obj<br>            If Me.Year &lt;&gt; it.Year Then<br>                Return Me.Year - it.Year<br>            ElseIf Me.Month &lt;&gt; it.Month Then<br>                Return Me.Month - it.Month<br>            Else<br>                Return Sign(Me.Day - it.Day)<br>            End If<br>        End Function<br>    End Structure<br> <br>    Public Function count(ByVal interval As String, ByVal fullMoon As String) As Integer<br>        Dim s() As String<br>        Dim date1, date2 As TheTime<br>        date1.Day = 1<br>        date1.Month = interval.Substring(0, 2)<br>        date1.Year = interval.Substring(3, 4)<br>        date2.Month = interval.Substring(11, 2)<br>        date2.Year = interval.Substring(14, 4)<br>        date2.Day = date2.DaysInMonth(date2.Month, date2.Year) + 0.99<br>        Dim cur As TheTime<br>        s = fullMoon.Split("/"c)<br>        cur.Day = s(0)<br>        cur.Month = s(1)<br>        cur.Year = s(2)<br>        While cur.CompareTo(date1) &lt; 0<br>            cur.AddMoon()<br>        End While<br>        While cur.CompareTo(date1) &gt;= 0<br>            cur.RemoveMoon()<br>        End While<br>        cur.AddMoon()<br>        Dim cy, cm As Integer<br>        cy = cur.Year<br>        cm = cur.Month<br>        While cur.CompareTo(date2) &lt;= 0<br>            cur.AddMoon()<br>            If cur.Month = cm AndAlso cur.Year = cy Then count += 1<br>            cy = cur.Year<br>            cm = cur.Month<br>        End While<br>    End Function<br>End Class<br></td>