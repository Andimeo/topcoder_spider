<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class RoadReform<br>{<br>  public int findMaxDeadendCount(String[] r)<br>  {<br>    int i,j,k;    <br>    int n = r.length;<br>    if(n==2)return 2;<br>    int list[] = new int[n];<br>    boolean ok[] = new boolean[n];<br>    int ans = 0;<br>    for(int step=(1&lt;&lt;n)-2; step&gt;0; step--){<br>      int cur = 0;<br>      for(i=0;i&lt;n;i++)if((step&amp;(1&lt;&lt;i))&gt;0){<br>        cur++;<br>      }<br>      if(cur&lt;=ans) continue;<br>      <br>      Arrays.fill(ok, false);<br>      for(i=0;i&lt;n;i++)for(j=0;j&lt;n;j++)if(r[i].charAt(j)=='1'){<br>        if((step&amp;(1&lt;&lt;i))&gt;0 &amp;&amp; (step&amp;(1&lt;&lt;j))==0){<br>          ok[i] = true;<br>        }<br>      }<br>      for(i=0;i&lt;n;i++)if((step&amp;(1&lt;&lt;i))&gt;0){<br>        if(ok[i]==false) break;<br>      }<br>      if(i&lt;n) continue;<br>      <br>      Arrays.fill(ok, false);<br>      for(i=0;i&lt;n;i++)if((step&amp;(1&lt;&lt;i))==0) break;<br>      int h, t;<br>      h = 0; t = 0;<br>      list[h] = i;<br>      ok[i] = true;<br>      for(; h&lt;=t; h++){<br>        i = list[h];<br>        for(j=0;j&lt;n;j++)if(r[i].charAt(j)=='1'<br>          &amp;&amp; (step&amp;(1&lt;&lt;j))==0 &amp;&amp; !ok[j])<br>        {<br>          ok[j] = true;<br>          list[++t] = j;<br>        }<br>      }<br>      if(t+1!=n-cur) continue;<br>      <br>      ans = cur;<br>    }<br>    return ans;<br>  }<br>  <br>  public static void main(String[] args)<br>  {}<br> <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>