<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br>#include &lt;queue&gt;<br>#include &lt;stdlib.h&gt;<br> <br>using namespace std;<br> <br>#define REP(i,n) for(int i=0,n_=(n);i&lt;n_;i++)<br>#define FORD(i,a,b) for(int i=(a);i&gt;=(b);i--)<br>#define FOR(i,a,b) for (int i=a,b_=b;i&lt;=(b);i++)<br>#define ALL(a) a.begin(),a.end()<br>#define SZ(a) (int)(a).size()<br>#define SORT(a) sort(ALL(a))<br>#define INF 1073741823<br>#define DEB(x) cout&lt;&lt;#x&lt;&lt;":"&lt;&lt;x&lt;&lt;"\n"<br>#define PB(b) push_back(b)<br> <br>class ContiguousCacheEasy {<br>public:<br>  int bytesRead(int, int, vector &lt;int&gt;);<br>};<br> <br>int ContiguousCacheEasy::bytesRead(int n, int k, vector &lt;int&gt; add) {<br>    int r, base, x, aux;<br>    base = r = 0;<br> <br>    REP(i, SZ(add))<br>    {<br>        x = add[i];<br>        if(base + (k - 1) &gt;= x &amp;&amp; base &lt;= x)<br>            r = r;<br>        else<br>        {<br>            if(x &gt; base)<br>            {<br>                aux = base;<br>                base += x - (base + (k - 1));<br> <br>                if(abs(aux - base) &gt; k)<br>                    r += k;<br>                else<br>                    r += abs(aux - base);<br>            }<br>            else if(x &lt; base)<br>            {<br>                aux = base;<br>                base -= base - x;<br> <br>                if(abs(aux - base) &gt; k)<br>                    r += k;<br>                else<br>                    r += abs(aux - base);<br>            }<br>        }<br>    }<br>    return r;<br>}<br> <br> <br>//Powered by [KawigiEdit] 2.0!<br></td>