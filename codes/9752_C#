<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class HoleCakeCuts {<br>    bool[,] mark;<br>    bool[] hcut;<br>    bool[] vcut;<br>    int size;<br>    public int cutTheCake(int cakeLength, int holeLength, int[] horizontalCuts, int[] verticalCuts) {<br>        mark = new bool[cakeLength * 2, cakeLength * 2];<br>        hcut = new bool[cakeLength * 2 - 1];<br>        vcut = new bool[cakeLength * 2 - 1];<br>        size = cakeLength * 2;<br>        foreach (int x in horizontalCuts)<br>            hcut[x + cakeLength - 1] = true;<br>        foreach (int x in verticalCuts)<br>            vcut[x + cakeLength - 1] = true;<br>        for (int i = cakeLength - holeLength; i &lt; cakeLength + holeLength; ++i)<br>            for (int j = cakeLength - holeLength; j &lt; cakeLength + holeLength; ++j)<br>                mark[i, j] = true;<br>        int res = 0;<br>        for (int i = 0; i &lt; cakeLength * 2; ++i)<br>            for (int j = 0; j &lt; cakeLength * 2; ++j)<br>                if (!mark[i, j])<br>                {<br>                    ++res;<br>                    dfs(i, j);<br>                }<br>        return res;<br>    }<br><br>    void dfs(int i, int j)<br>    {<br>        if (mark[i, j])<br>            return;<br>        mark[i, j] = true;<br>        if (i &gt; 0 &amp;&amp; !vcut[i - 1])<br>            dfs(i - 1, j);<br>        if (i &lt; size - 1 &amp;&amp; !vcut[i])<br>            dfs(i + 1, j);<br>        if (j &gt; 0 &amp;&amp; !hcut[j - 1])<br>            dfs(i, j - 1);<br>        if (j &lt; size - 1 &amp;&amp; !hcut[j])<br>            dfs(i, j + 1);<br>    }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>