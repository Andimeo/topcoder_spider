<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;stdio.h&gt;<br><br>using namespace std;<br><br>class HoleCakeCuts {<br>  public:<br>  <br>  int ask (int x1, int x2, int y1, int y2, int b) {<br>    printf("%d %d %d %d %d\n",x1,x2,y1,y2,b);<br>    if (x1 &gt;= -b &amp;&amp; x2 &lt;= b &amp;&amp; y1 &gt;= -b &amp;&amp; y2 &lt;= b)<br>      return 0;<br>    if (x1 &lt; -b &amp;&amp; x2 &gt; b &amp;&amp; y1 &gt;= -b &amp;&amp; y2 &lt;= b)<br>      return 2;<br>    if (x1 &gt;= -b &amp;&amp; x2 &lt;= b &amp;&amp; y1 &lt; -b &amp;&amp; y2 &gt; b)<br>      return 2;<br>    return 1;<br>    }<br>  <br>  int cutTheCake(int a, int b, vector &lt;int&gt; c, vector &lt;int&gt; d) {<br>    c.push_back(-a);<br>    c.push_back(a);<br>    d.push_back(-a);<br>    d.push_back(a);<br>    sort(c.begin(), c.end());<br>    sort(d.begin(), d.end());<br>    <br>    int re = 0;<br>    for (int i = 0; i &lt; c.size() - 1; i ++)<br>      for (int j = 0; j &lt; d.size() - 1; j ++)<br>        re += ask(c[i], c[i + 1], d[j], d[j + 1], b);<br>    return re;<br>    }<br>  };<br></td>