<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br> <br>public class IdealString<br>{<br>  public string construct(int length)<br>  {<br>      //We want nums a+b+c distinct<br>      //sum of them = n<br>      // z &lt;= a+...+y+1 e.g.<br>      <br>      int[] fib = new int[8];<br>      String[] fibc = new String[8];<br>      fibc[0] = "A"; fibc[1] = "B"; fibc[2] = "C"; fibc[3] = "D";<br>      fibc[4] = "E"; fibc[5] = "F"; fibc[6] = "G"; fibc[7] = "H";<br>      <br>      fib[0] = 1;<br>      for(int i=1; i &lt; 8; i++)<br>      {<br>        int sum=1;<br>        for(int j=1; j &lt; i; j++)<br>        {<br>          sum+=fib[j];<br>        }<br>        fib[i] = sum+1;<br>      }<br>      <br>      List&lt;int&gt; numChars = new List&lt;int&gt;();<br>      int count = 0;<br>      for(int i=0; i &lt; 8; i++)<br>      {<br>        if(count &lt; length)<br>        {<br>          count+=fib[i];<br>          numChars.Add(fib[i]);<br>        }<br>        else<br>        {<br>          bool success = true;<br>          blah:<br>          while(success)<br>          {<br>            success=false;<br>            for(int j = i-1; j &gt;1 ; j--)<br>            {<br>              while(numChars[j] &gt; numChars[j-1]+1 &amp;&amp; count &gt; length)<br>              {<br>                numChars[j]--;<br>                count--;<br>                success=true;<br>                goto blah;<br>              }<br>            }<br>          }  <br>          break;<br>        }    <br>      }<br>      <br>     if(count!=length)<br>           return "";        <br> <br>      <br>       String ret = "";<br>       <br>       <br>       for(int i=0; i &lt; numChars.Count; i++)<br>       {<br>         for(int j=0; j &lt; numChars[i]; j++)<br>         {        <br>           if(j == 0 &amp;&amp; numChars[i] &gt; 1 &amp;&amp; ret.Length &gt;= numChars[i])<br>           {<br>             ret = ret.Substring(0,numChars[i]-1) + fibc[i] + ret.Substring(numChars[i]-1);<br>           //  Console.WriteLine(ret);<br>           }<br>           else<br>             ret+=fibc[i];  <br>         }<br>       }<br>       return ret;           <br> <br>  }<br> <br> <br>}<br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>