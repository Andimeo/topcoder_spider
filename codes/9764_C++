<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br>#define SZ(X) ((int)(X.size()))<br>#define two(X) (1&lt;&lt;(X))<br>#define contain(S,X) (((S)&amp;two(X))!=0)<br> <br>const int ML=5000;<br> <br>class AllCycleLengths<br>{<br>public:<br>  int n;<br>  int G[60],A[60],A0[60];<br>  char S[ML+5];<br>  string findAll(vector &lt;string&gt; vs)<br>  {<br>    n=SZ(vs);<br>    for (int i=0;i&lt;n;i++) G[i]=0;<br>    for (int i=0;i&lt;n;i++) for (int j=0;j&lt;n;j++) if (vs[i][j]=='Y') G[i]|=two(j);<br>    for (int i=0;i&lt;n;i++) A[i]=two(i);<br>    for (int L=1;L&lt;=ML;L++)<br>    {<br>      for (int i=0;i&lt;n;i++) A0[i]=A[i];<br>      for (int i=0;i&lt;n;i++) A[i]=0;<br>      for (int i=0;i&lt;n;i++) for (int j=0;j&lt;n;j++) if (contain(A0[i],j)) A[i]|=G[j];<br>      S[L]='0';<br>      for (int i=0;i&lt;n;i++) if (contain(A[i],i)) S[L]='1';<br>    }<br>    int result=ML,cutpos=-1;<br>    for (int d=1;d&lt;=ML;d++)<br>    {<br>      int k=ML-d;<br>      for (;k&gt;0 &amp;&amp; S[k]==S[k+d];k--);<br>      if (k+d&lt;result) result=k+d,cutpos=k;<br>    }<br>    string retstr="";<br>    for (int i=1;i&lt;=result;i++)<br>    {<br>      if (i==cutpos+1) retstr+="(";<br>      retstr+=S[i];<br>    }<br>    return retstr+")";<br>  }<br>};<br> <br> <br> <br>// Powered by PopsEdit<br></td>