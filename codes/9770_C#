<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br> <br>public class HappyCells {<br><br>    private int[] dx = {1, 0, -1, 0};<br>    private int[] dy = {0, 1, 0, -1};<br>    private int[] ddx = {1, 1, -1, -1};<br>    private int[] ddy = {1, -1, 1, -1};<br><br>  public int[] getHappy (string[] grid) <br>  {<br>      int h1 = 0, h2 = 0, h3 = 0;<br>      for (int i = 0; i &lt; grid.Length; i++) {<br>          for (int j = 0; j &lt; grid[i].Length; j++) {<br>                if(grid[i][j] == 'X')<br>                    continue;<br>              bool hok = true, dok = true;<br>              for (int k = 0; k &lt; 4; k++) {<br>                  if(i + dx[k] &lt; 0 || i + dx[k] &gt;= grid.Length)<br>                        continue;<br>                    if(j + dy[k] &lt; 0 || j + dy[k] &gt;= grid[i].Length)<br>                        continue;<br>                    if(grid[i + dx[k]][j + dy[k]] == '.')<br>                        hok = false;<br>              }<br>                for (int k = 0; k &lt; 4; k++) {<br>                  if(i + ddx[k] &lt; 0 || i + ddx[k] &gt;= grid.Length)<br>                        continue;<br>                    if(j + ddy[k] &lt; 0 || j + ddy[k] &gt;= grid[i].Length)<br>                        continue;<br>                    if(grid[i + ddx[k]][j + ddy[k]] == '.')<br>                        dok = false;<br>              }<br>                if (hok &amp;&amp; dok)<br>                    h1++;<br>                else {<br>                    if (hok)<br>                        h2++;<br>                    else if (dok)<br>                        h3++;<br>                }<br>          }<br>      }<br>        return new int[]{h1, h2, h3};<br>  }<br>  <br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>