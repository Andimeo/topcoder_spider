<td class="problemText" colspan="8" valign="middle" align="left">
            #include&lt;algorithm&gt;<br>#include&lt;cstdlib&gt;<br>#include&lt;sstream&gt;<br>#include&lt;set&gt;<br>#include&lt;queue&gt;<br>#include&lt;string&gt;<br>#include&lt;vector&gt;<br>#include&lt;math.h&gt;<br>#define FOR(i,v) for(int i=0;i&lt;(v).size();i++)<br>#define len length()<br>#define si size()<br>#define whole(x) x.begin(),x.end()<br>#define pb push_back<br>using namespace std;<br>typedef vector&lt;int&gt; vi; typedef vector&lt;string&gt; vs; <br> <br>vs t;<br> <br>bool onboard(int x, int y){<br> if(x&gt;=0 &amp;&amp; x&lt;t.si &amp;&amp; y&gt;=0 &amp;&amp; y&lt;t[0].len)return 1; else return 0;<br>};<br> <br>int getoth(int x, int y){<br> int k=0,ok=0;<br> if(onboard(x+1,y)){ k++; if(t[x+1][y]=='X')ok++; };<br> if(onboard(x-1,y)){ k++; if(t[x-1][y]=='X')ok++; };<br> if(onboard(x,y+1)){ k++; if(t[x][y+1]=='X')ok++; };<br> if(onboard(x,y-1)){ k++; if(t[x][y-1]=='X')ok++; };<br> if(ok==k)return 1; else return 0;<br>};<br> <br>int getdia(int x, int y){<br> int k=0,ok=0;<br> if(onboard(x+1,y+1)){ k++; if(t[x+1][y+1]=='X')ok++; };<br> if(onboard(x-1,y-1)){ k++; if(t[x-1][y-1]=='X')ok++; };<br> if(onboard(x-1,y+1)){ k++; if(t[x-1][y+1]=='X')ok++; };<br> if(onboard(x+1,y-1)){ k++; if(t[x+1][y-1]=='X')ok++; };<br> if(ok==k)return 1; else return 0;<br>};<br> <br>class HappyCells{<br> public:<br>    vector &lt;int&gt; getHappy(vector &lt;string&gt; grid){<br>     int a=0,b=0,c=0;<br>     t=grid;<br>     FOR(i,t) for(int j=0; j&lt;t[0].len; j++){<br>      if(t[i][j]=='.' &amp;&amp; getoth(i,j) &amp;&amp; getdia(i,j))a++;<br>      if(t[i][j]=='.' &amp;&amp; getoth(i,j) &amp;&amp; !getdia(i,j))b++;<br>      if(t[i][j]=='.' &amp;&amp; !getoth(i,j) &amp;&amp; getdia(i,j))c++;   <br>     };<br>     vi ret; ret.pb(a); ret.pb(b); ret.pb(c); <br>   return ret;<br>    };<br>};<br></td>