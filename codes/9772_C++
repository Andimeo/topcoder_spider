<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;iostream&gt;<br>#include &lt;cmath&gt;<br>#include &lt;sstream&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>using namespace std;<br>#define pb push_back<br>#define ppb pop_back<br>#define mp make_pair<br>#define x first<br>#define y second<br>#define INF 1000000000<br>#define FOR(i,a,b) for (int _n(b), i(a); i &lt;= _n; i++)<br>#define rep(i,n) FOR(i,1,n)<br>#define rept(i,n) FOR(i,0,n-1)<br>#define vi vector&lt;int&gt;<br>#define L(s) (int)((s).end()-(s).begin())<br>class SquareCovering<br>        {<br>        public:<br>        int getMinimalSide(vector &lt;int&gt; px, vector &lt;int&gt; py)<br>            {<br>        int maxx=-INF,minx=INF,maxy=-INF,miny=INF;<br>        rept(i,L(px))<br>        {<br>          minx=min(minx,px[i]);<br>          maxx=max(maxx,px[i]);<br>          miny=min(miny,py[i]);<br>          maxy=max(maxy,py[i]);<br>        }<br>        int a=maxx-minx;<br>        int b=maxy-miny;<br>          rept(i,L(px))<br>          {<br>            int x=px[i],y=py[i];<br>            if (x&gt;minx &amp;&amp; y&gt;miny &amp;&amp; x&lt;maxx &amp;&amp; y&lt;maxy) return -1;<br>          }<br>        int ex=0,ey=0;<br>        bool verh=false,niz=false,levo=false,pravo=false;<br>        rept(i,L(px))<br>        {<br>          if (px[i]==minx &amp;&amp; !levo &amp;&amp; py[i]&gt;miny &amp;&amp; py[i]&lt;maxy) { levo=true; ex++;}<br>          if (px[i]==maxx &amp;&amp; !pravo &amp;&amp; py[i]&gt;miny &amp;&amp; py[i]&lt;maxy) { pravo=true; ex++;}<br>          if (py[i]==miny &amp;&amp; !niz &amp;&amp; px[i]&gt;minx &amp;&amp; px[i]&lt;maxx) { niz=true; ey++;}<br>          if (py[i]==maxy &amp;&amp; maxy!=miny &amp;&amp; !verh &amp;&amp; px[i]&gt;minx &amp;&amp; px[i]&lt;maxx) { verh=true; ey++;}<br>        }<br>        if (ex==2 &amp;&amp; a&lt;b) return -1; else<br>        if (ey==2 &amp;&amp; b&lt;a) return -1; else<br>        return(max(a,b));<br><br>            }<br>        <br><br>        };<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>