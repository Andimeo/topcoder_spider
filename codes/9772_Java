<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class SquareCovering<br>{<br>  public int abs (int n)<br>  {<br>    if (n &lt; 0)<br>    return -n;<br>    return n;<br>  }<br>  public boolean isOk (int maxX, int maxY, int minX, int minY) {<br>    for (int i = 0; i &lt; px.length; i++)<br>    {<br>       if (px [i] == maxX || px [i] == minX || py [i] == minY || py [i] == maxY) // its good<br>       {<br>       }<br>       else<br>       return false;<br>    }<br>    return true;<br>  }<br>  int [] px, py;<br>  public int getMinimalSide(int[] PX, int[] PY)<br>  {<br>    px = PX;<br>    py = PY;<br>    if (px.length &lt; 2)<br>      return -1;<br>    int size = 0;<br>    int x1, x2, y1, y2;<br>    int maxX, maxY, minX, minY;<br>    maxX = maxY = -999999;<br>    minX = minY = 999999;<br>    for (int i = 0; i &lt; px.length; i++) {<br>      //for (int j = 0; j &lt; px.length; j++) {<br>        if (px [i] &gt; maxX)<br>          maxX = px [i];<br>        if (py [i] &gt; maxY)<br>          maxY = py [i];<br>        if (px [i] &lt; minX)<br>          minX = px [i];<br>        if (py [i] &lt; minY)<br>          minY = py [i];<br>      //}<br>    }<br>    size = Math.max (maxX - minX, maxY - minY);<br>    if (maxX - minX == size) { // hor strech rect<br>      if (isOk (maxX, maxY, minX, maxY - size) || isOk (maxX, minY + size, minX, minY))<br>        return size;<br>      else<br>        return -1;<br>    }<br>    else if (maxY - minY == size) { // vert strech rect<br>      if (isOk (minX + size, maxY, minX, minY) || isOk (maxX, maxY, maxX - size, minY))<br>        return size;<br>      else<br>        return -1;<br>    }<br>    <br>    return size;<br>  }<br> <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>