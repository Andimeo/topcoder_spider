<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br> <br>public class Doorknobs {<br> <br>  char ca(String s, int i) {<br>    return s.charAt(i);<br>  }<br> <br>  int sti(String s){<br>    return Integer.parseInt(s);<br>  }<br> <br>  class ST extends StringTokenizer {<br>    public ST(String s){<br>      super(s);<br>    }<br>    public ST(String s, String t){<br>      super(s,t);<br>    }<br>    public String n() {  <br>      return nextToken();<br>    }<br>    public boolean m(){<br>      return hasMoreTokens();<br>    }<br>  }<br> <br>  int n;<br>  int m;<br>  ST st;<br>  String s;<br>  int[] a;<br>  boolean[] b;<br>  String[] sa;<br> <br>String ss(String s, int i, int j){<br>return s.substring(i,j);<br>}<br> <br>String ss(String s, int k){<br>return s.substring(k);<br>}<br>char[][] c;<br>int dd;<br>  public int shortest(String[] house, int doo) {<br>      dd=doo;<br>    //st = new ST(  );<br>    m =           house.length ;<br>    n=            house[0].length()        ;<br>c=new char[m][n];<br>for (int i = 0; i &lt; m; i++) {<br>for (int j = 0; j &lt; n; j++) {<br>c[i][j]=ca(house[i],j);<br>}<br>}<br> <br>si[0]=0;sj[0]=0;d=1;<br>bb[0]=true;<br>for(int i=0;i&lt;m;i++)<br>for (int j = 0; j &lt; n; j++) if(c[i][j]=='o'){<br> si[d]=i; sj[d]=j; d++;<br>}<br> <br>for (int i = 0; i &lt; d; i++) {<br> for (int j = 0; j &lt; d; j++) {<br>    g[i][j]=ss(si[i],sj[i],si[j],sj[j]);<br>//    System.out.println( g[i][j] + " " +i+" "+j  );<br> }<br>}<br> <br>go(0,0,0);<br> <br> <br> <br> <br> <br>    //a=                    ;<br>    //sa=                    ;<br>    //s=                        ;<br>    // b= new boolean[n];<br> <br>    <br>if (min == Integer.MAX_VALUE)<br> return -1;<br>else<br>    return min;<br>  }<br> <br>int[][] g=new int[1000][1000];<br>boolean[] bb = new boolean[1000];<br>int[] si = new int[10000];<br>int[] sj = new int[10000];<br>int d=0;<br>int min = Integer.MAX_VALUE;<br>void go(int k,int l, int c){<br> if (k == dd) {<br>   if (c&lt; min)<br>    min = c;<br>   return;<br> } <br> for(int i =0; i&lt; d; i++) if (!bb[i] &amp;&amp; g[l][i] != -1){<br>   bb[i]=true;<br>   go(k+1,i,c+g[l][i]); <br>   bb[i]=false;  <br> }<br>}<br> <br>int di[]={-1,0,1,0};<br>int dj[]={0,1,0,-1};<br> <br>int ss(int i1, int j1, int i2, int j2){<br>boolean[][] b= new boolean[m][n];<br> int sss=0;<br>  int[] s1i=new int[10000];<br>  int[] s1j=new int[10000];<br>int[] s2i=new int[10000];<br>int[] s2j=new int[10000];<br>int d1=0;<br>int d2=0;<br>d1=1;<br>s1i[0]=i1;<br>s1j[0]=j1;<br> <br>b[i1][j1]=true;<br>    do{<br>     <br>      d2=0;<br>    for (int i = 0; i &lt; d1; i++) {<br>      if (s1i[i]==i2 &amp;&amp; s1j[i]==j2)<br>          return sss;<br> <br>    }<br> <br>for (int i = 0; i &lt; d1; i++) {<br>  for (int h=0; h&lt;4;h++){<br>    int u=s1i[i]+di[h]; int v=s1j[i]+dj[h];<br>    if (0&lt;=u&amp;&amp;u&lt;m &amp;&amp; 0&lt;=v &amp;&amp; v&lt;n &amp;&amp; c[u][v]!='#' &amp;&amp; !b[u][v]) {<br>      s2i[d2]=u; s2j[d2]=v; d2++;  <br>      b[u][v]=true;<br>  }<br>  }<br>}<br>sss++;<br>for (int i = 0; i &lt; d2; i++) {<br> s1i[i]=s2i[i];<br>s1j[i]=s2j[i];<br>}<br>d1=d2;<br>    } while(d2!=0);<br>  return -1;<br>}<br> <br>}<br></td>