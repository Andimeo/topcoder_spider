<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br> <br>class LockedDoors {<br>public:<br>  struct Node<br>  {<br>    int x;<br>    int y;<br>    int mask;<br>    int dist;<br>    Node(){}<br>    Node(int X,int Y,int m,int d):x(X),y(Y),mask(m),dist(d){}<br>  };<br>  int pathOutside(vector &lt;string&gt; maze) {<br>    int X=maze.size();<br>    int Y=maze[0].length();<br>    queue&lt;Node&gt; q;<br>    int i,j;<br>    for (i=0; i&lt;X; i++)<br>      for (j=0; j&lt;Y; j++)<br>        if (maze[i][j]=='0')<br>          q.push(Node(i,j,0,0));<br>    bool visited[50][50][64];<br>    memset(visited,false,sizeof(visited));<br>    while (!q.empty())<br>    {<br>      Node n=q.front();<br>      q.pop();<br>      if (n.x&lt;0||n.x&gt;=X||n.y&lt;0||n.y&gt;=Y)<br>        continue;<br>      if (visited[n.x][n.y][n.mask])<br>        continue;<br>      visited[n.x][n.y][n.mask]=true;<br>      if (maze[n.x][n.y]=='1')<br>        return n.dist;<br>      if (maze[n.x][n.y]=='#')<br>        continue;<br>      if (maze[n.x][n.y]&gt;='a'&amp;&amp;maze[n.x][n.y]&lt;='f')<br>        n.mask|=1&lt;&lt;(maze[n.x][n.y]-'a');<br>      if (maze[n.x][n.y]&gt;='A'&amp;&amp;maze[n.x][n.y]&lt;='F')<br>        if (!(n.mask&amp;(1&lt;&lt;(maze[n.x][n.y]-'A'))))<br>          continue;<br>      q.push(Node(n.x-1,n.y,n.mask,n.dist+1));<br>      q.push(Node(n.x+1,n.y,n.mask,n.dist+1));<br>      q.push(Node(n.x,n.y-1,n.mask,n.dist+1));<br>      q.push(Node(n.x,n.y+1,n.mask,n.dist+1));<br>    }<br>    return -1;<br>  }<br>};<br> <br> <br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>