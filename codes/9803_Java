<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class LockedDoors<br>{<br>  public int pathOutside(String[] maze)<br>  {<br>    int r = maze.length;<br>    int c = maze[0].length();<br>    <br>    int[][][] grid = new int[r][c][64];<br>    int[] locs = new int[250000];<br>    int at=0;<br>    <br>    int blah=0;<br>    for(int i=0;i&lt;r;i++){<br>      for(int j=0;j&lt;c;j++){<br>        for(int k=0;k&lt;64;k++) grid[i][j][k]=-1;<br>        if(maze[i].charAt(j) == '0'){<br>           blah = j*r+i;<br>           grid[i][j][0] = 0;<br>        }<br>      }<br>    }<br>    <br>    locs[0]=blah;<br>    at++;<br>    <br>    int[] dirX = {0, 0, 1, -1};<br>    int[] dirY = {1, -1, 0, 0};<br>    int x, y, f;<br>    int newX, newY, newF;<br>    for(int i=0;i&lt;at;i++)<br>    {<br>      x = locs[i] % r;<br>      y = (locs[i] % (r*c))/r;<br>      f = locs[i]/(r*c); <br>      <br>      for(int j=0;j&lt;4;j++)<br>      {<br>        newX = x+dirX[j];<br>        newY = y+dirY[j];<br>        <br>        if(newX&lt;r&amp;&amp;newX&gt;=0&amp;&amp;newY&lt;c&amp;&amp;newY&gt;=0)<br>        {<br>          if(maze[newX].charAt(newY)=='.' &amp;&amp; grid[newX][newY][f] ==-1){<br>            grid[newX][newY][f] = grid[x][y][f]+1;<br>            locs[at] = newX + r*newY + r*c*f;<br>            at++;<br>          }<br>          if(maze[newX].charAt(newY)=='0' &amp;&amp; grid[newX][newY][f] ==-1){<br>            grid[newX][newY][f] = grid[x][y][f]+1;<br>            locs[at] = newX + r*newY + r*c*f;<br>            at++;<br>          }<br>          if(maze[newX].charAt(newY)&gt;='A'&amp;&amp;maze[newX].charAt(newY)&lt;='F')<br>          {<br>            if((f&amp;(1&lt;&lt;(maze[newX].charAt(newY)-'A')))&gt;0)<br>            {<br>              if(grid[newX][newY][f] ==-1){<br>                grid[newX][newY][f] = grid[x][y][f]+1;<br>                locs[at] = newX + r*newY + r*c*f;<br>                at++;<br>              }<br>            }<br>          }<br>          if(maze[newX].charAt(newY)&gt;='a'&amp;&amp;maze[newX].charAt(newY)&lt;='f')<br>          {<br>            if((f&amp;(1&lt;&lt;(maze[newX].charAt(newY)-'a')))==0) newF = f+(1&lt;&lt;(maze[newX].charAt(newY)-'a'));<br>            else newF = f;<br>            <br>            if(grid[newX][newY][newF] ==-1){<br>              grid[newX][newY][newF] = grid[x][y][f]+1;<br>              locs[at] = newX + r*newY + r*c*newF;<br>              at++;<br>            }<br>          }<br>          <br>          if(maze[newX].charAt(newY)=='1'){<br>            return grid[x][y][f]+1;<br>          }<br>        }<br>      }<br>      <br>    }<br>    <br>    return -1;<br>  }<br>  <br>  <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>