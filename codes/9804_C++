<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;bitset&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;ctime&gt;<br>#include &lt;deque&gt;<br>#include &lt;fstream&gt;<br>#include &lt;functional&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;iostream&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;numeric&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;stack&gt;<br>#include &lt;string&gt;<br>#include &lt;utility&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br> <br>string nleft [20], ngone [20], dleft [20], dgone [20];<br> <br>struct AnomalousCancellation<br>{<br>    inline string tostr (int n)<br>    {<br>        ostringstream out;<br>        out &lt;&lt; n;<br>        return out.str ();<br>    }<br> <br>    inline int parse (string s)<br>    {<br>        return atoi (s.c_str ());<br>    }<br> <br>    string reducedFraction (int numerator, int denominator)<br>    {<br>        int bestn = numerator, bestd = denominator;<br>        string num = tostr (numerator), den = tostr (denominator);<br> <br>        for (int m = 1; m &lt; 1 &lt;&lt; num.length (); m++)<br>        {<br>            nleft [m] = ngone [m] = "";<br> <br>            for (int i = 0; i &lt; (int) num.length (); i++)<br>                if (m &amp; 1 &lt;&lt; i)<br>                    nleft [m] += num [i];<br>                else<br>                    ngone [m] += num [i];<br>        }<br> <br>        for (int m = 1; m &lt; 1 &lt;&lt; den.length (); m++)<br>        {<br>            dleft [m] = dgone [m] = "";<br> <br>            for (int i = 0; i &lt; (int) den.length (); i++)<br>                if (m &amp; 1 &lt;&lt; i)<br>                    dleft [m] += den [i];<br>                else<br>                    dgone [m] += den [i];<br>        }<br> <br>        for (int a = 1; a &lt; 1 &lt;&lt; num.length (); a++)<br>            for (int b = 1; b &lt; 1 &lt;&lt; den.length (); b++)<br>                if (ngone [a] == dgone [b])<br>                {<br>                    int n = parse (nleft [a]), d = parse (dleft [b]);<br> <br>                    if (n &gt; 0 &amp;&amp; d &gt; 0 &amp;&amp; n &lt; bestn &amp;&amp; bestn * d == n * bestd)<br>                    {<br>                        bestn = n;<br>                        bestd = d;<br>                    }<br>                }<br> <br>        return tostr (bestn) + "/" + tostr (bestd);<br>    }<br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.1 [modified TZTester]<br>// Powered by CodeProcessor<br></td>