<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;deque&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;numeric&gt;<br>#include &lt;utility&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;ctime&gt;<br> <br>using namespace std;<br> <br> <br>class DNAConstruction {<br>public:<br>  int maxLength(string nucleotides) {<br>    int N=nucleotides.length();<br>    int i;<br>    int A=0;<br>    int C=0;<br>    int T=0;<br>    int G=0;<br>    for (i=0; i&lt;N; i++)<br>    {<br>      if (nucleotides[i]=='A')<br>        A++;<br>      else if (nucleotides[i]=='C')<br>        C++;<br>      else if (nucleotides[i]=='G')<br>        G++;<br>      else<br>        T++;<br>    }<br>    return min(A,T)+min(C,G);<br>  }<br>};<br> <br> <br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>