<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br><br>public class MagicalSpheres {<br>    public int divideWork(int spheresCount, int fakeSpheresCount, int gnomesAvailable) {<br>        int[] d = new int[gnomesAvailable + 1];<br>        for (int i = 2; i &lt;= gnomesAvailable; ++i)<br>            if (d[i] == 0)<br>            {<br>                for (int j = i + i; j &lt;= gnomesAvailable; j += i)<br>                    d[j] = i;<br>            }<br>        int[] pw = new int[gnomesAvailable + 1];<br>        for (int i = 2; i &lt;= gnomesAvailable; ++i)<br>            if (d[i] == 0)<br>            {<br>                pw[i] = fp(spheresCount + fakeSpheresCount, i) - fp(spheresCount, i) - fp(fakeSpheresCount, i);<br>            }<br>        for (int i = gnomesAvailable; i &gt;= 2; --i)<br>        {<br>            int j = i;<br>            bool ok = true;<br>            while (true)<br>            {<br>                if (d[j] == 0)<br>                {<br>                    --pw[j];<br>                    if (pw[j] &lt; 0)<br>                        ok = false;<br>                    break;<br>                }<br>                else<br>                {<br>                    --pw[d[j]];<br>                    if (pw[d[j]] &lt; 0)<br>                        ok = false;<br>                    j /= d[j];<br>                }<br>            }<br>            if (ok)<br>                return i;<br>            j = i;<br>            while (true)<br>            {<br>                if (d[j] == 0)<br>                {<br>                    ++pw[j];<br>                    break;<br>                }<br>                else<br>                {<br>                    ++pw[d[j]];<br>                    j /= d[j];<br>                }<br>            }<br>        }<br>        return 1;<br>    }<br><br>    int fp(int n, int d)<br>    {<br>        int res = 0;<br>        while (n &gt; 0)<br>        {<br>            n /= d;<br>            res += n;<br>        }<br>        return res;<br>    }<br><br><br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003] [modified for C# by Petr]<br>// Powered by CodeProcessor<br></td>