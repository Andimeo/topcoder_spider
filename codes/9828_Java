<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.io.*;<br>import java.text.*;<br>import java.math.*;<br>import java.util.regex.*;<br>import static java.lang.Math.*;<br>import static java.util.Arrays.*;<br>import static java.util.Collections.*;<br>import static java.lang.Integer.*;<br>import static java.lang.Long.*;<br>public class MagicalSpheres {<br>  public int divideWork(int spheresCount, int fakeSpheresCount, int gnomesAvailable) {<br>    outer:<br>    for(int i = gnomesAvailable;; i--){<br>      int t = i;<br>      for(int j = 2; j*j &lt;= t; j++){<br>        if(t%j==0){<br>          int num = 0;<br>          while(t%j==0){<br>            t /= j;<br>            num++;<br>          }<br>          if(cnt(spheresCount+fakeSpheresCount, spheresCount, j) &lt; num) continue outer;<br>        }<br>      }<br>      if(t != 1 &amp;&amp; cnt(spheresCount+fakeSpheresCount, spheresCount, t) &lt; 1) continue outer;<br>      return i;<br>    }<br>  }<br>  long cnt(long n, long r, int p){<br>    return cnt(n,p)-cnt(r,p)-cnt(n-r,p);<br>  }<br>  long cnt(long n, long p){<br>    long ret = 0;<br>    long cur = p;<br>    do{<br>      ret += n/cur;<br>      cur *= p;<br>    }while(cur &lt;= n);<br>    return ret;<br>  }<br> <br>}<br> <br>// Powered by PopsEdit<br>// Powered by CodeProcessor<br></td>