<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>//#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;queue&gt;<br><br>#define ii pair&lt;int,int&gt;<br>#define mp make_pair<br>#define int64 long long<br>#define all(v) v.begin(),v.end()<br>#define sz(v) ((int)(v.size()))<br>#define vi vector&lt;int&gt;<br><br>const double eps=1E-9;<br><br>using namespace std;<br><br>template&lt;class T&gt; T abs(T x) {return x&gt;0 ? x:(-x);}<br>template&lt;class T&gt; T sqr(T x){return x*x;}<br><br>double sp[16][1&lt;&lt;16];<br>double sm[16][1&lt;&lt;16];<br><br>double a[16][16];<br><br>int n;<br><br>double d[1&lt;&lt;16];<br><br>int nbits(int x)<br>{<br>  int res=0;<br>  while(x)<br>    res+=(x&amp;1),x/=2;<br>  return res;<br>}<br><br>double go(int mask)<br>{<br>  if(mask==0)<br>    return 1.0;<br>  if(nbits(mask)&lt;=1)<br>    return 1.0;<br>  double&amp; res=d[mask];<br>  if(res&gt;-eps) return res;<br>  res=0.0;<br>  int f=0;<br>  while(!((mask&gt;&gt;f)&amp;1)) f++;<br>  int s=f+1;<br>  while(!((mask&gt;&gt;s)&amp;1)) s++;<br>  mask^=(1&lt;&lt;f);<br>  for(int m=mask;m;m=(m-1)&amp;mask)<br>  {<br>    if(!((m&gt;&gt;s)&amp;1)) continue;<br>    if(sp[f][m]&lt;eps) continue;<br>    double koef=1.0;<br>    for(int i=0;i&lt;n;i++)<br>      if(((mask^m)&gt;&gt;i)&amp;1)<br>        koef*=sm[i][m];<br>    if(koef&lt;eps) continue;<br>    res+=go(m)*go(mask^(1&lt;&lt;f)^m)*sp[f][m]*koef;<br>  }<br>  return res;<br>}<br><br>class RoadsOfKingdom {<br>  public:<br>  double getProbability(vector &lt;string&gt; roads) {<br>    n=sz(roads);<br>    for(int i=0;i&lt;n;i++)<br>      for(int j=0;j&lt;n;j++)<br>        a[i][j]=double(roads[i][j]-'0')/8.0;<br>    for(int i=0;i&lt;n;i++)<br>      for(int j=0;j&lt;(1&lt;&lt;n);j++)<br>      {<br>        int nz=0;<br>        double pr=1.0;<br>        for(int p=0;p&lt;n;p++)<br>          if((j&gt;&gt;p)&amp;1)<br>          {<br>            if(1.0-a[i][p]&lt;eps)<br>              nz++;<br>            else<br>              pr*=1.0-a[i][p];<br>          }<br>        double res=0.0;<br>        for(int p=0;p&lt;n;p++)<br>          if((j&gt;&gt;p)&amp;1)<br>          {<br>            double t=pr;<br>            int z=nz;<br>            if(1.0-a[i][p]&lt;eps)<br>              z--;<br>            else<br>              t/=1.0-a[i][p];<br>            if(z&gt;0) t=0.0;<br>            res+=t*a[i][p];<br>          }<br>        sp[i][j]=res;<br>        sm[i][j]=1.0;<br>        for(int p=0;p&lt;n;p++)<br>          if((j&gt;&gt;p)&amp;1)<br>            sm[i][j]*=1.0-a[i][p];<br>      }<br>    memset(d,-1,sizeof(d));<br>    return go((1&lt;&lt;n)-1);<br>  }<br>  <br> <br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.2 [01-Jan-2008] (MB__'s mod)<br>// Powered by CodeProcessor<br></td>