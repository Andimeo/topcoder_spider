<td class="problemText" colspan="8" valign="middle" align="left">
            #line 5 "InfiniteSequence.cpp"<br>#include &lt;sstream&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;functional&gt;<br>#include &lt;list&gt;<br>#include &lt;utility&gt;<br>#include &lt;iterator&gt;<br>#include &lt;cctype&gt;<br>#include &lt;climits&gt;<br> <br>#define FOR(i,s,n) for (int i=(int)(s); i&lt;(int)(n); ++i)<br>#define REP(i,n) FOR(i,0,n)<br>#define MP make_pair<br>#define PB push_back<br>#define ALL(c) (c).begin(), (c).end()<br>#define SZ(c) (int)(c).size()<br>#define FOR_EACH(it,c) for (typeof((c).begin()) it=(c).begin(); it!=(c).end(); ++it)<br> <br>using namespace std;<br>class InfiniteSequence {<br>public:<br>  map&lt;long long, long long&gt; dic;<br>  long long dp(long long n, int p, int q) {<br>    if (dic.find(n) == dic.end()) {<br>      dic[n] = dp(n/p, p, q) + dp(n/q, p, q);<br>    }<br>    return dic[n];<br>  }<br>  long long calc(long long n, int p, int q) {<br>    dic.clear();<br>    dic[0] = 1;<br>    return dp(n, p, q);<br>  }<br>    <br> <br>};<br> <br> <br> <br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>