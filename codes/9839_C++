<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cassert&gt;<br>#include &lt;set&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;cstddef&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;utility&gt;<br>#include &lt;iterator&gt;<br>#include &lt;numeric&gt;<br>#include &lt;list&gt;<br>#include &lt;complex&gt;<br> <br>using namespace std;<br> <br>class ArithmeticProgression<br>{<br>public:<br>    double minCommonDifference(int a0, vector &lt;int&gt; seq);<br>};<br> <br>double ArithmeticProgression::minCommonDifference(int a0, vector &lt;int&gt; seq)<br>{<br>    int N = seq.size();<br>    if (N == 0) return 0.0;<br>    double high = HUGE_VAL;<br>    double low = 0.0;<br>    for (int i = 0; i &lt; N; i++)<br>    {<br>        double l = (seq[i] - a0) / (double) (i + 1);<br>        double h = (seq[i] - a0 + 1) / (double) (i + 1);<br>        low = max(low, l);<br>        high = min(high, h);<br>    }<br>    if (high &lt;= low) return -1.0;<br>    else return low;<br>}<br> <br> <br>// Powered by FileEdit<br></td>