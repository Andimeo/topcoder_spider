<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class TreeCount<br>{<br> <br>  final int MOD = 112901989;<br>  <br>  boolean[][] a;<br>  int n;<br>  int limit;<br>  long[][] F;<br>  long[] S;<br>  <br>  public int[] count(String[] graph)<br>  {<br>    this.n = graph.length;<br>    a = new boolean[n][n];<br>    for(int i=0;i&lt;n;++i) <br>      for(int j=0;j&lt;n;++j) a[i][j] = graph[i].charAt(j)=='Y';<br>    <br>    int[] res = new int[n];<br>    <br>    for(limit=0;limit&lt;n;++limit) {<br>      S = new long[n];<br>      F = new long[n][limit+1];<br>      dfs(0, -1);<br>      long total = 0;<br>      for(int k=0;k&lt;=limit;++k) total = (total + F[0][k]) % MOD;<br>      total = (total + S[0]) % MOD;<br>      res[limit] = (int) total;<br>    }<br>    <br>    return res;<br>    <br>  }<br>  <br>  void dfs(int i, int fi) {<br>    <br>    S[i] = 1;<br>    long[] C = new long[limit+1];<br>    C[0] = 1;<br>    <br>    for(int j=0;j&lt;n;++j) if(j!=fi &amp;&amp; a[i][j]) {<br>      dfs(j, i);<br>      // tinh S<br>      long total = 0;<br>      for(int k=0;k&lt;=limit;++k) total = (total+F[j][k]) % MOD;<br>      total = (total + S[j]) % MOD;<br>      S[i] = (S[i] * total) % MOD;<br>      <br>      // tinh F<br>      // khong noi i<br>      long[] newC = new long[limit+1];<br>      for(int k=0;k&lt;=limit;++k) newC[k] = (C[k] * S[j]) % MOD;<br>      <br>      // khong dc phep den limit<br>      total = 0;<br>      for(int k=0;k&lt;limit;++k) total = (total+F[j][k]) % MOD;<br>      for(int k=1;k&lt;=limit;++k) newC[k] = (newC[k] + C[k-1] * total) % MOD;<br>      <br>      C = newC;<br>      <br>    }<br>    <br>    for(int k=0;k&lt;=limit;++k) F[i][k] = C[k];<br>    <br>  }<br>  <br>  <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>