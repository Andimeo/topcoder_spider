<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.util.regex.*;<br>import java.text.*;<br>import java.math.*;<br>import java.awt.geom.*;<br> <br>public class TurnOnTheLights<br>{<br>  public int countLights(String[] floor, int K, int row, int col)<br>  {<br>    boolean[][] grid = new boolean[floor[0].length()][floor.length];<br>    <br>    for(int y=0;y&lt;floor.length;y++){<br>      for(int x=0;x&lt;floor[0].length();x++){<br>        if(floor[y].charAt(x) == 'Y') grid[x][y] = true;<br>        else grid[x][y] = false;<br>      }<br>    }<br>    <br>    int maxLights = 0;<br>    int lights;<br>    <br>    boolean[][] lon = new boolean[floor[0].length()][floor.length];<br>    <br>    int len = floor[0].length();<br>    int wid = floor.length;<br>    <br>    for(int x=col+1;x&lt;len&amp;&amp;x-col&lt;=K;x++){<br>      if(grid[x][row]){<br>        lon[x][row] = true;<br>        if(x+1&lt;len) if(grid[x+1][row]) lon[x+1][row] = true;<br>        if(x-1&gt;=0) if(grid[x-1][row]) lon[x-1][row] = true;<br>        if(row+1&lt;wid) if(grid[x][row+1]) lon[x][row+1] = true;<br>        if(row-1&gt;=0) if(grid[x][row-1]) lon[x][row-1]=true;<br>      }<br>    }<br>    <br>    lights = 0;<br>    for(int x=0;x&lt;len;x++) for(int y=0;y&lt;wid;y++) if(lon[x][y]) lights++;<br>    if(lights&gt;maxLights) maxLights=lights;<br>    <br>    lon = new boolean[floor[0].length()][floor.length];<br>    <br>    for(int x=col-1;x&gt;=0&amp;&amp;col-x&lt;=K;x--){<br>      if(grid[x][row]){<br>        lon[x][row] = true;<br>        if(x+1&lt;len) if(grid[x+1][row]) lon[x+1][row] = true;<br>        if(x-1&gt;=0) if(grid[x-1][row]) lon[x-1][row] = true;<br>        if(row+1&lt;wid) if(grid[x][row+1]) lon[x][row+1] = true;<br>        if(row-1&gt;=0) if(grid[x][row-1]) lon[x][row-1]=true;<br>      }<br>    }<br>    <br>    lights = 0;<br>    for(int x=0;x&lt;len;x++) for(int y=0;y&lt;wid;y++) if(lon[x][y]) lights++;<br>    if(lights&gt;maxLights) maxLights=lights;<br>    <br>    lon = new boolean[floor[0].length()][floor.length];<br>    <br>    for(int y=row+1;y&lt;wid&amp;&amp;y-row&lt;=K;y++){<br>      if(grid[col][y]){<br>        lon[col][y] = true;<br>        if(col+1&lt;len) if(grid[col+1][y]) lon[col+1][y] = true;<br>        if(col-1&gt;=0) if(grid[col-1][y]) lon[col-1][y] = true;<br>        if(y+1&lt;wid) if(grid[col][y+1]) lon[col][y+1] = true;<br>        if(y-1&gt;=0) if(grid[col][y-1]) lon[col][y-1]=true;<br>      }<br>    }<br>    <br>    lights = 0;<br>    for(int x=0;x&lt;len;x++) for(int y=0;y&lt;wid;y++) if(lon[x][y]) lights++;<br>    if(lights&gt;maxLights) maxLights=lights;<br>    <br>    lon = new boolean[floor[0].length()][floor.length];<br>    <br>    for(int y=row-1;y&gt;=0&amp;&amp;row-y&lt;=K;y--){<br>      if(grid[col][y]){<br>        lon[col][y] = true;<br>        if(col+1&lt;len) if(grid[col+1][y]) lon[col+1][y] = true;<br>        if(col-1&gt;=0) if(grid[col-1][y]) lon[col-1][y] = true;<br>        if(y+1&lt;wid) if(grid[col][y+1]) lon[col][y+1] = true;<br>        if(y-1&gt;=0) if(grid[col][y-1]) lon[col][y-1]=true;<br>      }<br>    }<br>    <br>    lights = 0;<br>    for(int x=0;x&lt;len;x++) for(int y=0;y&lt;wid;y++) if(lon[x][y]) lights++;<br>    if(lights&gt;maxLights) maxLights=lights;<br>    <br>    return maxLights;<br>    <br>  }<br>  <br>  <br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>