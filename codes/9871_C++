<td class="problemText" colspan="8" valign="middle" align="left">
            #line 5 "FloorIndicator.cpp"<br>#include &lt;cstdlib&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cmath&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;fstream&gt;<br>#include &lt;numeric&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;bitset&gt;<br>#include &lt;list&gt;<br>#include &lt;stdexcept&gt;<br>#include &lt;functional&gt;<br>#include &lt;utility&gt;<br>#include &lt;ctime&gt;<br>using namespace std;<br><br>#define PB push_back<br>#define MP make_pair<br><br>#define REP(i,n) for(i=0;i&lt;(n);++i)<br>#define FOR(i,l,h) for(i=(l);i&lt;=(h);++i)<br>#define FORD(i,h,l) for(i=(h);i&gt;=(l);--i)<br><br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;<br>typedef vector&lt;double&gt; VD;<br>typedef long long LL;<br>typedef pair&lt;int,int&gt; PII;<br><br><br>class FloorIndicator<br>{<br>  public:<br>  double averageFloor(int n, vector &lt;string&gt; indicator)<br>  {<br>    string std[]={<br>"###...#.###.###.#.#.###.###.###.###.###",<br>"#.#...#...#...#.#.#.#...#.....#.#.#.#.#",<br>"#.#...#.###.###.###.###.###...#.###.###",<br>"#.#...#.#.....#...#...#.#.#...#.#.#...#",<br>"###...#.###.###...#.###.###...#.###.###"};<br>    int i,j,x,y,s1,s2,tot,num;<br>    double ans=0;<br>    REP(i,n){<br>      s2=i*4;tot=0;num=0;<br>      REP(j,10){<br>        s1=j*4;<br>        int flag=1;<br>        FOR (x,0,4)<br>          FOR(y,0,2)<br>            flag&amp;=!(std[x][y+s1]=='.' &amp;&amp; indicator[x][y+s2]=='#');<br>        if (flag){<br>          tot++;<br>          num+=j;<br>        }<br>      }<br>      if (num==0)<br>        return -1;<br>      ans=ans*10+double(num)/tot;<br>    }<br>    return ans;<br>  }<br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>