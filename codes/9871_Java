<td class="problemText" colspan="8" valign="middle" align="left">
            public class FloorIndicator {<br>  public double averageFloor(int N, String[] indicator) {<br>    String[] numsStr = new String[] {<br>        "###...#.###.###.#.#.###.###.###.###.###",<br>        "#.#...#...#...#.#.#.#...#.....#.#.#.#.#",<br>        "#.#...#.###.###.###.###.###...#.###.###",<br>        "#.#...#.#.....#...#...#.#.#...#.#.#...#",<br>        "###...#.###.###...#.###.###...#.###.###" };<br><br>    double ans = 0;<br>    int len = indicator[0].length();<br>    for (int i = 0; i &lt; len; i = i + 4) {<br>      ans = ans * 10;<br><br>      int count = 0;<br>      int sum = 0;<br>      for (int j = 0; j &lt;= 9; j++) {<br>        if (fit(i, j, indicator, numsStr)) {<br>          count++;<br>          sum += j;<br>        }<br>      }<br>      if (count == 0) {<br>        return -1.0;<br>      }<br>      ans += 1.0 * sum / count;<br>    }<br><br>    return ans;<br>  }<br><br>  private boolean fit(int i, int j, String[] indicator, String[] numsStr) {<br>    int start = j * 4;<br><br>    for (int row = 0; row &lt; 5; row++) {<br>      for (int c = 0; c &lt; 3; c++) {<br>        if (indicator[row].charAt(i + c) == '#'<br>            &amp;&amp; numsStr[row].charAt(start + c) == '.') {<br>          return false;<br>        }<br>      }<br>    }<br><br>    return true;<br>  }<br><br>  public static void main(String[] args) {<br>    FloorIndicator temp = new FloorIndicator();<br>    System.out.println(temp.averageFloor(2, new String[] { "###.###",<br>        "#.#.#.#", "#.#.###", "#.#...#", "###.###" }));<br>  }<br>}<br><br><br>// Powered by FileEdit<br></td>