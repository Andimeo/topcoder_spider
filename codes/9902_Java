<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.Arrays;<br>import java.util.HashMap;<br>import java.util.Map;<br><br>public class DancingCouples {<br><br>    public int countPairs(String[] canDance, int K) {<br>        can = new boolean[canDance.length][];<br>        for (int i = 0; i &lt; can.length; i++) {<br>            can[i] = new boolean[canDance[i].length()];<br>            for (int j = 0; j &lt; can[i].length; j++) {<br>                can[i][j] = canDance[i].charAt(j) == 'Y';<br>            }<br>        }<br>        girlTaken = new boolean[canDance[0].length()];<br>        k = K;<br>        memo = new HashMap&lt;String, Integer&gt;();<br>        return count(0, 0, "");<br>    }<br><br>    boolean[][] can;<br><br>    boolean[] girlTaken;<br><br>    int k;<br><br>    Map&lt;String, Integer&gt; memo;<br><br>    int count(int current, int pairCount, String path) {<br>        String key = current + " " + pairCount + " " + Arrays.toString(girlTaken);<br>        Integer value = memo.get(key);<br>        if (value != null) {<br>            return value;<br>        }<br>        int total = 0;<br>        if (pairCount == k) {<br>            total = 1;<br>        } else if (current == can.length) {<br>            total = 0;<br>        } else {<br>            for (int i = current; i &lt; can.length; i++) {<br>                for (int j = 0; j &lt; can[i].length; j++) {<br>                    if (can[i][j] &amp;&amp; !girlTaken[j]) {<br>                        girlTaken[j] = true;<br>                        total += count(i + 1, pairCount + 1, path + i + "-" + j + " ");<br>                        girlTaken[j] = false;<br>                    }<br>                }<br>            }<br>        }<br>        memo.put(key, total);<br>        return total;<br>    }<br><br>}<br></td>