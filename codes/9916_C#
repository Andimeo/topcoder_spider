<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections.Generic;<br>using System.Text;<br><br>    class PrettyPrintingProduct<br>    {<br>        private double Value;<br>        private Int64 Whole;<br>        private Int64 Last5;<br><br>        private void SetToOne()<br>        {<br>            Value = 1.0;<br>            Last5 = 1;<br>            Whole = 1;<br>        }<br><br>        private void Multiply(int N)<br>        {<br>            Value *= N;<br>            while (Value &gt;= 100000.0) Value /= 10.0;<br>            Last5 = (Last5 * N) % 100000;<br>            Whole *= N;<br>            if (Whole &gt; 9999999999) Whole = 0;<br>        }<br><br>        private string LPad5(Int64 N)<br>        {<br>            string s = Convert.ToString(N);<br>            while (s.Length &lt; 5) s = "0" + s;<br>            return s;<br>        }<br><br>        public string prettyPrint(int A, int B)<br>        {<br>            int n2 = 0;<br>            int n5 = 0;<br>            int x;<br>            SetToOne();<br>            for (int i = A; i &lt;= B; i++)<br>            {<br>                x = i;<br>                while ((x % 2) == 0)<br>                {<br>                    n2++;<br>                    x /= 2;<br>                }<br>                while ((x % 5) == 0)<br>                {<br>                    n5++;<br>                    x /= 5;<br>                }<br>                if (x &gt; 1) Multiply(x);<br>            }<br>            int Exp = n2;<br>            if (n5 &lt; n2) Exp = n5;<br>            n2 -= Exp;<br>            n5 -= Exp;<br>            while (n2 &gt; 0)<br>            {<br>                Multiply(2);<br>                n2--;<br>            }<br>            while (n5 &gt; 0)<br>            {<br>                Multiply(5);<br>                n5--;<br>            }<br>            string D;<br>            if (Whole &gt; 0) D = Convert.ToString(Whole);<br>            else D = Convert.ToString(Math.Truncate(Value + 0.0001)) + "..." + LPad5(Last5);<br>            return D + " * 10^" + Convert.ToString(Exp);<br>        }<br>    }<br></td>