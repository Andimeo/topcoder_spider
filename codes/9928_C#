<td class="problemText" colspan="8" valign="middle" align="left">
            using System;<br>using System.Collections;<br>using System.Collections.Generic;<br>using System.Collections.Specialized;<br>using System.Text;<br>using System.Text.RegularExpressions;<br><br>public class TournamentWinner<br>{<br>    double[,] sanse = new double[8, 8];<br>    public double[] winningProbabilities(int[] P)<br>  {<br>        int br = 0;<br>        for (int i = 0; i &lt; 8; i++)<br>        {<br>            for (int j = i+1; j &lt; 8; j++)<br>            {<br>                sanse[i, j] = (double)P[br] / 100;<br>                br++;<br>                sanse[j, i] = 1 - sanse[i, j];<br>            }<br>        }<br>        //sada za svakog racunamo izraz<br>        double[] s2 = new double[8];//sansa u drugu bre rundu<br>        for (int i = 0; i &lt; 8; i++)<br>        { if (i % 2 == 0) s2[i] = sanse[i, i + 1]; else s2[i] = sanse[i, i - 1]; }<br>        //sada svakom sansu za trecu rundu<br>        double[] s3 = new double[8];//sansa da dodju u trecu<br>        s3[0] = (s2[0]) * (s2[3] * sanse[0, 3] + s2[2] * sanse[0, 2]);<br>        s3[1] = (s2[1]) * (s2[3] * sanse[1, 3] + s2[2] * sanse[1, 2]);<br>        s3[2] = (s2[2]) * (s2[0] * sanse[2, 0] + s2[1] * sanse[2, 1]);<br>        s3[3] = (s2[3]) * (s2[0] * sanse[3, 0] + s2[1] * sanse[3, 1]);<br>        s3[4] = (s2[4]) * (s2[6] * sanse[4, 6] + s2[7] * sanse[4, 7]);<br>        s3[5] = (s2[5]) * (s2[6] * sanse[5, 6] + s2[7] * sanse[5, 7]);<br>        s3[6] = (s2[6]) * (s2[4] * sanse[6, 4] + s2[5] * sanse[6, 5]);<br>        s3[7] = (s2[7]) * (s2[4] * sanse[7, 4] + s2[5] * sanse[7, 5]);<br>        double[] pobeda = new double[8];<br>        for (int i = 0; i &lt; 8; i++)<br>        {<br>            if (i &lt; 4)<br>            {<br>                pobeda[i] = s3[i] * (s3[4] * sanse[i, 4] + s3[5] * sanse[i, 5] + s3[6] * sanse[i, 6] + s3[7] * sanse[i, 7]);<br>            }<br>            else pobeda[i] = s3[i] * (s3[0] * sanse[i, 0] + s3[1] * sanse[i, 1] + s3[2] * sanse[i, 2] + s3[3] * sanse[i, 3]);<br>        }<br>        return pobeda;<br>  }<br><br>}<br>//Powered by [KawigiEdit] 2.0!<br></td>