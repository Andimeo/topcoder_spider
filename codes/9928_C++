<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt; <br>#include &lt;list&gt; <br>#include &lt;map&gt; <br>#include &lt;set&gt; <br>#include &lt;deque&gt; <br>#include &lt;queue&gt; <br>#include &lt;stack&gt; <br>#include &lt;bitset&gt; <br>#include &lt;algorithm&gt; <br>#include &lt;functional&gt; <br>#include &lt;numeric&gt; <br>#include &lt;utility&gt; <br>#include &lt;complex&gt; <br>#include &lt;sstream&gt; <br>#include &lt;iostream&gt; <br>#include &lt;iomanip&gt; <br>#include &lt;cstdio&gt; <br>#include &lt;cmath&gt; <br>#include &lt;cstdlib&gt; <br>#include &lt;cstring&gt; <br>#include &lt;ctime&gt; <br>#include &lt;cassert&gt; <br>using namespace std;<br> <br>struct TournamentWinner{<br>  vector &lt;double&gt; winningProbabilities(vector &lt;int&gt; P);<br>};<br>double P[8][8];<br>double prob[16][8];<br>vector &lt;double&gt; TournamentWinner::winningProbabilities(vector &lt;int&gt; PP){<br>  for(int i=0;i&lt;8;i++)<br>    for(int j=i+1;j&lt;8;j++)<br>      P[i][j]=PP[0]/100.,PP.erase(PP.begin()),P[j][i]=1.-P[i][j];<br>  memset(prob,0,sizeof(prob));<br>  for(int i=0;i&lt;8;i++)<br>    prob[8+i][i]=1.;<br>  for(int i=7;i&gt;=1;i--){<br>    for(int j=0;j&lt;8;j++)<br>      for(int k=0;k&lt;8;k++){<br>        prob[i][j]+=prob[i*2][j]*prob[i*2+1][k]*P[j][k];<br>        prob[i][k]+=prob[i*2][j]*prob[i*2+1][k]*P[k][j];<br>      }<br>  }<br>  vector&lt;double&gt; ret(8);<br>  for(int i=0;i&lt;8;i++)<br>    ret[i]=prob[1][i];<br>  return ret;<br>}<br> <br> <br>// Powered by FileEdit<br>// Powered by moj 4.11 [modified TZTester]<br>// Powered by CodeProcessor<br></td>