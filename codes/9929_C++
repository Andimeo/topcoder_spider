<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;list&gt;<br>#include &lt;cmath&gt;<br>#include &lt;ctime&gt;<br>#include &lt;deque&gt;<br>#include &lt;queue&gt;<br>#include &lt;stack&gt;<br>#include &lt;bitset&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;cassert&gt;<br>#include &lt;complex&gt;<br>#include &lt;cstdarg&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br>#include &lt;fstream&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br>#include &lt;iterator&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br> <br>using namespace std;<br> <br> <br>class BankLoans {<br>public:<br>  double expectedProfit(vector &lt;string&gt; loans, vector &lt;string&gt; riskClasses) {<br>    map&lt;string,int&gt; risk;<br>    int i;<br>    for (i=0; i&lt;riskClasses.size(); i++)<br>    {<br>      istringstream sin; sin.str(riskClasses[i]);<br>      string s1;int s2;<br>      sin &gt;&gt; s1 &gt;&gt; s2;<br>      risk[s1]=s2;<br>    }<br>    int total=0;<br>    double get=0;<br>    for (i=0; i&lt;loans.size(); i++)<br>    {<br>      istringstream sin; sin.str(loans[i]);<br>      int amount,interest;<br>      string Class;<br>      sin &gt;&gt; amount &gt;&gt; interest &gt;&gt; Class;<br>      total+=amount;<br>      get+=(amount+interest)*(100.0-risk[Class])/100.0;<br>    }<br>    return get-total;<br>  }<br>};<br> <br> <br> <br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>