<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;vector&gt;<br>#include &lt;map&gt;<br>#include &lt;math.h&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;numeric&gt;<br>#include &lt;bitset&gt;<br>#include &lt;stack&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>using namespace std;<br> <br>int dr[]={0,1,0,-1,1,1,-1,-1};<br>int dc[]={1,0,-1,0,1,-1,1,-1};<br>#define zmax(a,b) (((a)&gt;(b))?(a):(b))<br>#define zmin(a,b) (((a)&gt;(b))?(b):(a))<br>#define zabs(a) (((a)&gt;=0)?(a):(-(a)))<br>#define iif(c,t,f) ((c)?(t):(f))<br>template&lt;class A, class B&gt; A cvt(B x) {stringstream s;s&lt;&lt;x;A r;s&gt;&gt;r;return r;}<br> <br>class ShipLoading<br>{<br>public:<br>int minimumTime(vector &lt;int&gt; cranes, vector &lt;string&gt; boxes)<br>{<br>  vector&lt;int&gt; b;<br>  string bs = accumulate(boxes.begin(), boxes.end(), string());<br>  istringstream sin(bs);<br>  int x;<br>  while(sin &gt;&gt; x) b.push_back(x);<br>  <br>  sort(b.begin(), b.end());<br>  sort(cranes.begin(), cranes.end());<br>  if(b.back() &gt; cranes.back()) return -1;<br>  <br>  int ret = 0;<br>  while(b.size()) {<br>    for(int i = 0; i &lt; cranes.size(); i++) {<br>      vector&lt;int&gt;::iterator it = upper_bound(b.begin(), b.end(), cranes[i]);<br>      if(it == b.begin()) continue;<br>      it--;<br>      b.erase(it);<br>    }<br>    ret++;<br>  }<br>  return ret;<br>}<br>};<br> <br> <br>//Powered by [KawigiEdit] 2.0<br></td>