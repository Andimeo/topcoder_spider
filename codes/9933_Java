<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>import java.io.*;<br>import java.text.*;<br>import java.math.*;<br>import java.util.regex.*;<br>import static java.lang.Math.*;<br>import static java.util.Arrays.*;<br>import static java.util.Collections.*;<br>import static java.lang.Integer.*;<br>import static java.lang.Long.*;<br>public class ShipLoading {<br>  public int minimumTime(int[] cranes, String[] boxes) {<br>    String s = "";<br>    for(int i = 0; i &lt; boxes.length; i++){<br>      s += boxes[i];<br>    }<br>    StringTokenizer st = new StringTokenizer(s);<br>    int[] ar = new int[st.countTokens()];<br>    for(int i = 0; i &lt; ar.length; i++){<br>      ar[i] = parseInt(st.nextToken());<br>    }<br>    sort(ar);<br>    sort(cranes);<br>    if(ar.length == 0) return 0;<br>    if(ar[ar.length-1] &gt; cranes[cranes.length-1]) return -1;<br>    boolean[] done = new boolean[ar.length];<br>    int tot = ar.length;<br>    for(int r = 1;;r++){<br>      outer:<br>      for(int i = cranes.length-1; i &gt;= 0; i--){<br>        for(int j = ar.length-1; j &gt;= 0; j--){<br>          if(done[j]) continue;<br>          if(ar[j] &gt; cranes[i]) continue;<br>          done[j] = true;<br>          tot--;<br>          if(tot == 0) return r;<br>          continue outer;<br>        }<br>      }<br>    }<br>  }<br> <br>}<br> <br>// Powered by PopsEdit<br>// Powered by CodeProcessor<br></td>