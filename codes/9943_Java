<td class="problemText" colspan="8" valign="middle" align="left">
            import java.util.*;<br>public class TemplateMatching<br>{<br>  public String bestMatch(String text, String prefix, String suffix)<br>  {<br>    int n = text.length();<br>    for(int i=0;i&lt;n;i++)<br>      for(int j=i+1;j&lt;=n;j++)<br>        compare(text.substring(i, j), prefix, suffix);<br>    return res;<br>  }<br>  String res = null;<br>  int pre = -1, suff = -1;<br>  void compare(String str, String prefix, String suffix)<br>  {<br>    int p = 0, s = 0;<br>    for(int i=0;i&lt;str.length();i++)<br>      if(prefix.endsWith(str.substring(0, i+1)))<br>        p = i+1;<br>    for(int i=1;i&lt;=str.length();i++)<br>      if(suffix.startsWith(str.substring(str.length()-i)))<br>        s = i;<br>    if((p+s &gt; pre+suff) ||<br>      (p+s==pre+suff &amp;&amp; p&gt;pre) ||<br>        (p+s==pre+suff &amp;&amp; p==pre &amp;&amp; str.compareTo(res)&lt;0))<br>    {<br>      pre = p;<br>      suff = s;<br>      res = str;<br>    }<br>  }<br>}<br></td>