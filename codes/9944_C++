<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;iostream&gt;<br>#include &lt;sstream&gt;<br>#include &lt;fstream&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iomanip&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt;<br>#include &lt;string&gt;<br>#include &lt;cstring&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>using namespace std;<br><br>#define FORI(i, s, e)  for(int i = int(s); i &lt; int(e); i ++)<br>#define FORD(i, e, s)  for(int i = int(e) - 1; i &gt;= int(s); i --)<br>typedef long long llint;<br>typedef vector &lt;int&gt; VI;<br>typedef vector &lt;string&gt; VS;<br>class TripleJump<br>{<br>        public:<br>    double prob(int l, int u, int bu, int bl)<br>    {<br>      if(bl == bu) return 0.0;<br>      if(bl &gt;= 2*u) return 0.0;<br>      if(bu &lt;= 2*l) return 0.0;<br>      if(bl &lt;= 2*l) bl = 2*l;<br>      if(bu &gt;= 2*u) bu = 2*u;<br>      double s = (u-l)*(u-l);<br>      if(bl &lt;= l + u &amp;&amp; bu &lt;= l + u)<br>      {<br>        double t1 =  bu - 2*l;<br>        double t2 =  bl - 2*l;<br>        return (t1*t1 - t2*t2)/2.0/s;<br>      }<br>      if(bl &lt;= l + u &amp;&amp; bu &gt;= l + u)<br>      {<br>        double t1 = 2*u - bu;<br>        double t2 = bl - 2*l;<br>        return (s - (t1*t1 + t2*t2)/2.0)/s;<br>      }<br>      if(bl &gt;= l + u &amp;&amp; bu &gt;= l + u)<br>      {<br>        double t1 = 2*u - bu;<br>        double t2 = 2*u - bl;<br>        return (t2*t2 - t1*t1)/2.0/s;<br>      }<br>      return 0.0;<br>    }<br>    <br>        vector &lt;double&gt; getProbabilities(int l, int u, int f, vector &lt;int&gt; o)<br>        {<br>      o.push_back(10000);<br>      o.push_back(-10000);<br>      sort(o.begin(),o.end(), greater&lt;int&gt;());<br>      vector &lt;double&gt; res;<br>      if(l == u)<br>      {<br>        f += 2*l;<br>        FORI(i,0,o.size()-1)<br>         {<br>            if(f &gt;= o[i+1] &amp;&amp; f &lt; o[i])<br>          {<br>            res.push_back(1.0);<br>          }<br>          else<br>          {<br>            res.push_back(0.0);<br>          }<br>          }<br>        return res;<br>      }<br><br>      FORI(i,0,o.size()-1)<br>      {<br>        res.push_back(prob(l,u,o[i]-f,o[i+1]-f));<br>      }<br>      return res;<br>        }<br>        <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>