<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt; <br>#include &lt;list&gt; <br>#include &lt;map&gt; <br>#include &lt;set&gt; <br>#include &lt;deque&gt; <br>#include &lt;queue&gt; <br>#include &lt;stack&gt; <br>#include &lt;bitset&gt; <br>#include &lt;algorithm&gt; <br>#include &lt;functional&gt; <br>#include &lt;numeric&gt; <br>#include &lt;utility&gt; <br>#include &lt;complex&gt; <br>#include &lt;sstream&gt; <br>#include &lt;iostream&gt; <br>#include &lt;iomanip&gt; <br>#include &lt;cstdio&gt; <br>#include &lt;cmath&gt; <br>#include &lt;cstdlib&gt; <br>#include &lt;cstring&gt; <br>#include &lt;ctime&gt; <br>#include &lt;cassert&gt; <br>using namespace std;<br> <br>struct ProblemSetter{<br>  vector &lt;int&gt; chooseProblems(vector &lt;int&gt; difficulties);<br>};<br>vector &lt;int&gt; ProblemSetter::chooseProblems(vector &lt;int&gt; A){<br>  sort(A.begin(),A.end());<br>  int minv=INT_MAX;<br>  vector&lt;int&gt; ret;<br>  for(int i=0;i&lt;A.size();i++)<br>    for(int k=A.size()-1;k&gt;=i;k--)<br>      for(int j=i+1;j&lt;k;j++){<br>        int v=abs((A[k]-A[j])-(A[j]-A[i]));<br>        if(v&lt;minv)<br>          minv=v,ret.clear(),ret.push_back(A[i]),ret.push_back(A[j]),ret.push_back(A[k]);<br>      }<br>  return ret;<br>}<br> <br> <br>//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!<br></td>