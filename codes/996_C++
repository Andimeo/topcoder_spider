<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;string&gt;<br>#include &lt;vector&gt;<br>#include &lt;iostream&gt;<br>#include &lt;map&gt;<br>#include &lt;set&gt;<br>#include &lt;queue&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;utility&gt;<br> <br>using namespace std;<br> <br>typedef vector&lt;int&gt; VI;<br>typedef vector&lt;string&gt; VS;/*<br>typedef priority_queue PQ;<br>typedef string S;<br>typedef long long int64;<br> <br>VS tok(S s, S sep)<br>{<br>  VS r;<br>  int i=0,j;<br>  while(i&lt;s.size())<br>  {<br>    j = s.find_first_of(sep, i);<br>    if(j==-1) j=s.size();<br>    if(i!=j) r.push_back(s.substr(i, j-i));<br>    i = j+1;<br>  }<br>  return r;<br>}<br> <br>VI toki(S s, S sep)<br>{<br>  VS a = tok(s, sep);<br>  VI r;<br>  for(int i=0; i&lt;a.size();i++)<br>    r.push_back(atoi(a[i].c_str()));<br>  return r;<br>}<br>*/<br> <br>#define PI 3.1415926<br> <br>class Travel {<br>  public:<br>  double dist[10][10];<br>  float coor[10][2];<br>  int n;<br>  bool visited[10];<br>  double min;<br>  double d(int a, int b)<br>  {<br>    double x1, x2, y1, y2, z1, z2;<br>    x1 = cos(coor[a][0])*cos(coor[a][1]);y1=cos(coor[a][0])*sin(coor[a][1]);z1=sin(coor[a][0]);<br>    x2 = cos(coor[b][0])*cos(coor[b][1]);y2=cos(coor[b][0])*sin(coor[b][1]);z2=sin(coor[b][0]);<br>    double v=x1*x2+y1*y2+z1*z2;<br>    return acos(v);<br>  }<br>  void tr(int now, int vis, double dis)<br>  {<br>    if(vis==n-1)<br>    {<br>      if(min&gt;dis+dist[now][0])<br>      min=dis+dist[now][0];<br>      return;<br>    }<br>    visited[now]=true;<br>    for(int i=0;i&lt;n;i++)<br>    {<br>      if(!visited[i])<br>      tr(i, vis+1, dis+dist[now][i]);<br>    }<br>    visited[now]=false;<br>  }<br>  int shortest(vector &lt;string&gt; a, int b) {<br>    int i,j,k;<br>    n=a.size();<br>    for(i=0;i&lt;a.size();i++)<br>    {<br>      sscanf(a[i].c_str(), "%f %f", &amp;coor[i][0], &amp;coor[i][1]);<br>      coor[i][0]/=180;coor[i][0]*=PI;<br>      coor[i][1]/=180;coor[i][1]*=PI;<br>    }<br>    for(i=0;i&lt;n;i++)<br>    for(j=0;j&lt;n;j++)<br>    dist[i][j] = d(i,j);<br>    for(i=0;i&lt;n;i++)visited[i]=false;<br>    min=100000000;<br>    tr(0,0,0);<br>    return min*b+0.5001;<br>  }<br>};<br> <br>// Powered by PopsEdit<br></td>