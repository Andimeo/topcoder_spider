<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;vector&gt;<br>#include &lt;iostream&gt;<br>#include &lt;string&gt;<br>#include &lt;map&gt;<br>#include &lt;sstream&gt;<br>#include &lt;set&gt;<br>#include &lt;cmath&gt;<br>#include &lt;utility&gt;<br>#include &lt;algorithm&gt;<br>#include &lt;queue&gt;<br> <br>using namespace std;<br>#define lint long long<br>#define SZ(a) ((int)(a.size()))<br>#define FORN(i,a,b) for(i=(a);i&lt;(b);i++)<br>#define FOR(i,a) FORN(i,0,a)<br>#define ALL(S) S.begin(),S.end()<br>#define SET(x,a) memset(x,a,sizeof x)<br>#define VC vector<br>class TheTower {<br>public:<br>  vector &lt;int&gt; count(vector &lt;int&gt;, vector &lt;int&gt;);<br>};<br> <br>vector &lt;int&gt; TheTower::count(vector &lt;int&gt; x, vector &lt;int&gt; y) {<br>  int n = SZ(x),i,j;<br>  int inf = 1&lt;&lt;28;<br>  VC&lt;int&gt; res(n,inf);<br>  FOR(i,n){<br>    int l;<br>    FOR(j,n)FOR(l,n){<br>      VC&lt;int&gt; res2(n);<br>      int k;<br>      FOR(k,n)res2[k]=abs(x[k]-x[j])+abs(y[k]-y[l]);<br>      sort(ALL(res2));<br>      int res3=0;<br>      FOR(k,i+1)res3+=res2[k];<br>      res[i]=min(res[i],res3);<br>    }<br>  }<br>  return res;<br>}<br></td>