<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;string&gt;<br>#include &lt;set&gt;<br>#include &lt;map&gt;<br>#include &lt;vector&gt;<br>#include &lt;queue&gt; <br>#include &lt;iostream&gt;<br>#include &lt;iterator&gt;<br>#include &lt;math.h&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;sstream&gt;<br><br>#pragma comment(linker, "/STACK:60777216")<br><br>using namespace std;<br><br>typedef pair&lt;int,int&gt; pii;<br>typedef long long ll;<br>typedef vector&lt;int&gt; vi;<br>typedef pair&lt;ll,ll&gt; pl;<br><br>#define UN(v) SORT(v),v.erase(unique(v.begin(),v.end()),v.end())<br>#define SORT(c) sort((c).begin(),(c).end())<br>#define F(i,a,b) for (int  i=(a); i &lt; (b); i++) <br>#define FD(i,a,b) for (int i=(a); i &gt;= (b); i--) <br>#define R(i,n) F(i,0,n) <br>#define CL(a,b) memset(a,b,sizeof(a))<br>#define pb push_back<br><br>const int inf = 1011111111;<br><br>int dx[]={0,1,0,-1};<br>int dy[]={1,0,-1,0};<br><br>bool  u[10];<br>pl   p[10];<br>int   l[10];<br><br>class LocateTreasure {<br>public:<br>  string location(int K, int multi) {<br>        int d=0;<br>        ll x=0,y=0;<br>        multi%=9;<br>        int gold=1;<br>        CL(u,false);<br>        int it=0;<br>        while(!u[gold]){<br>            l[gold]=it;<br>            it++;<br>            u[gold]=true;<br>            p[gold]=pl(x,y);<br>            y+=gold;<br>            gold*=multi,gold%=9;if(!gold) gold=9;<br>            if(it==K) break;<br>            it++;<br>            x+=gold;<br>            gold*=multi,gold%=9;if(!gold) gold=9;<br>            if(it==K) break;<br>            y-=gold;<br>            it++;<br>            gold*=multi,gold%=9;if(!gold) gold=9;<br>            if(it==K) break;<br>            x-=gold;<br>            it++;<br>            gold*=multi,gold%=9;  if(!gold) gold=9;          <br>            if(it==K) break;            <br>        }<br>        if(K&gt;it){<br>            int nm=it-l[gold];<br>            ll c=(K-it)/nm;<br>            x+=(x-p[gold].first)*c;<br>            y+=(y-p[gold].second)*c;<br>            it+=nm*c;<br>            while(it&lt;K){<br>                x+=dx[d]*gold,<br>                  y+=dy[d]*gold;<br>                d=(d+1)%4;<br>                gold*=multi,gold%=9; if(!gold) gold=9;<br>                it++;<br>            }<br>        }<br>    stringstream ss;<br>        ss&lt;&lt;x&lt;&lt;' '&lt;&lt;y;<br>    return ss.str();<br>  }<br>  <br><br>};<br><br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>