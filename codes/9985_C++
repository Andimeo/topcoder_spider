<td class="problemText" colspan="8" valign="middle" align="left">
            // Cry as challenge phase is passing by<br><br>#include &lt;algorithm&gt;<br>#include &lt;functional&gt;<br><br>#include &lt;cmath&gt;<br>#include &lt;cctype&gt;<br>#include &lt;cstdio&gt;<br>#include &lt;cstdlib&gt;<br>#include &lt;cstring&gt;<br><br>#include &lt;vector&gt;<br>#include &lt;string&gt;<br>#include &lt;sstream&gt;<br>#include &lt;iostream&gt;<br><br>using namespace std;<br><br>#define FORC(it,v) for( __typeof((v).begin()) it = (v).begin(); it != (v).end(); ++it )<br><br>int n;<br>int Cnt[ 51 ] ;<br>int isBest[ 51 ];<br><br>int iskoristen[ 51 ];<br><br>int get_it( int x )<br>{<br>    vector&lt; int &gt; Vals;<br>    <br>    for( int i = x; i &lt; n; ++i )<br>        Vals.push_back( Cnt[i] );<br><br>    sort( Vals.begin(), Vals.end(), greater&lt; int &gt;() );<br><br>    int no_best = 0;<br>    for( int i = 0; i &lt; n; ++i )<br>        if( !iskoristen[i] &amp;&amp; isBest[i] )<br>            ++no_best;<br><br>    int sum = 0;<br><br>    for( int i = 0; i &lt; min&lt; int &gt;( no_best, Vals.size() ); ++i )<br>        sum += Vals[i];<br><br>    return sum;<br>}<br><br>class Playlist {<br>public:<br>    vector &lt;int&gt; trackSort( int n, vector &lt;int&gt; best, vector &lt;int&gt; a ) {<br>        sort( best.begin(), best.end() );<br><br>        memset( isBest, 0, sizeof isBest );<br>        memset( Cnt, 0, sizeof Cnt );<br>        FORC( it, best ) isBest[ --(*it) ] = true;<br>        FORC( it, a ) ++Cnt[ *it - 1 ];<br><br>        ::n = n;<br><br>        vector&lt; int &gt; sol;<br><br>        memset( iskoristen, 0, sizeof iskoristen );<br>        int suma = get_it( 0 );<br><br>        for( int i = 0; i &lt; n; ++i ) {<br><br>            for( int j = 0; j &lt; n; ++j ) {<br>                if( iskoristen[j] ) continue;<br>                iskoristen[ j ] = true;<br>                int val = Cnt[i] * isBest[j];<br><br>                if( val + get_it( i+1 ) == suma ) {<br>                    suma -= val;<br>                    sol.push_back( j+1 );<br>                    break;<br>                }<br><br>                iskoristen[j] = false;<br>            }<br><br>        }<br><br>        return sol;<br>    }<br>};<br><br><br><br><br><br><br><br><br><br>// Powered by FileEdit<br>// Powered by moj 3.0 beta 11 [modified TZTester]<br>// Powered by CodeProcessor<br></td>