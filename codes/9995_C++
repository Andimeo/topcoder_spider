<td class="problemText" colspan="8" valign="middle" align="left">
            #include &lt;algorithm&gt;<br>#include &lt;cmath&gt;<br>#include &lt;iostream&gt;<br>#include &lt;list&gt;<br>#include &lt;map&gt;<br>#include &lt;queue&gt;<br>#include &lt;set&gt;<br>#include &lt;sstream&gt;<br>#include &lt;utility&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>template&lt;class A, class B&gt; void CONV(A&amp; x, B&amp; y) { stringstream s; s &lt;&lt; x; s &gt;&gt; y; }<br>typedef long long LL;<br>#define FOR(i, a, b) for (int i = a; i &lt; b; ++i)<br>#define FORE(i, v) FOR(i, 0, v.size())<br>#define FORU(i, a) for (int i = a; ; ++i)<br>#define ALL(v) v.begin(), v.end()<br>#define SORT(v) sort(ALL(v))<br>#define SET(a, n) memset(a, n, sizeof a)<br><br>struct Polygons2 {<br>  long long number(vector &lt;int&gt; segments, int K);<br>};<br><br><br>LL dp[11][50002];<br><br>long long Polygons2::number(vector &lt;int&gt; v, int K) {<br>  SORT(v);<br>  SET(dp, 0);<br>  dp[K][0] = dp[K-1][v[0]] = 1;<br>  LL res = 0;<br>  FOR(i, 1, v.size()) FOR(j, 1, 11) FOR(l, 0, 50002) {<br>    if (j == 1) {<br>      if (v[i] &lt; l) res += dp[j][l];<br>    }<br>    else dp[j-1][min(50001, l+v[i])] += dp[j][l];<br>  }<br>  return res;<br>}<br><br><br>// Powered by FileEdit<br>// Powered by TZTester 1.01 [25-Feb-2003]<br>// Powered by CodeProcessor<br></td>