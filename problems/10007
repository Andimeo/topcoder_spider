<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">Once upon a time, there was a kingdom where math was always a big problem.  When the post of the royal treasurer needed to be filled, applicants were presented with the following problem:<br><br>

"We have two arrays of integers, <b>A</b> and <b>B</b>.  <b>A</b> and <b>B</b> each contain exactly N elements.  Let's define a function S over  <b>A</b> and <b>B</b>:<br><pre>

	S = A<sub>0</sub>*B<sub>0</sub> + ? + A<sub>N-1</sub>*B<sub>N-1</sub></pre>

Rearrange the numbers in <b>A</b> in such a way that the value of S is as small as possible. You are not allowed to rearrange the numbers in <b>B</b>.?<br><br>

The problem writers need a program to check the correctness of the applicants' answers.  Given int[]s <b>A</b> and <b>B</b>, return the smallest possible value for S.
</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">RoyalTreasurer</td></tr><tr><td class="statText">Method:</td><td class="statText">minimalArrangement</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int[], int[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">int</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int minimalArrangement(int[] A, int[] B)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>A</b> will contain between 1 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>A</b> and <b>B</b> will contain the same number of elements.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>A</b> will be between 0 and 100, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>B</b> will be between 0 and 100, inclusive.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{1,1,3}</pre></td></tr><tr><td class="statText"><pre>{10,30,20}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 80</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">If you move the number 3 to the beginning of <b>A</b>, you get the minimal possible sum.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{1,1,1,6,0}</pre></td></tr><tr><td class="statText"><pre>{2,7,8,3,1}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 18</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The best option would be to rearrange the numbers in <b>A</b> this way: {1,1,0,1,6}.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{5,15,100,31,39,0,0,3,26}</pre></td></tr><tr><td class="statText"><pre>{11,12,13,2,3,4,5,9,1}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 528</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>