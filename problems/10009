<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">An old witch is making a love potion. She has a lot of recipes and each of them has the following form:<br><br><pre>
	S=N<sub>1</sub>S<sub>1</sub>+?+N<sub>k</sub>S<sub>k</sub></pre><br>
where N<sub>1</sub>, ?, N<sub>k</sub> are single-digit integers between 1 and 9, inclusive, S<sub>1</sub>, ?, S<sub>k</sub> are names of ingredients, k is an integer greater than or equal to 1, and S is name of the resulting potion (all names contain only uppercase letters). This means that if she mixes N<sub>1</sub> units of S<sub>1</sub>, ..., N<sub>k</sub> units of S<sub>k</sub> all together, she will obtain 1 unit of S. There may be multiple recipes for the same potion.  In that case, the potion can be obtained using any one of them.  The ingredients are also potions, and some of them can be bought at the market.<br><br>
You want to create 1 unit of the potion called LOVE. You are given String[] <b>recipes</b>, each element of which is a recipe formatted as described above. You are also given a String[] <b>marketGoods</b> and a int[] <b>cost</b>. Each element of <b>marketGoods</b> is the name of a potion you can purchase at the market.  The i-th element of <b>cost</b> is the cost of 1 unit of the i-th potion in <b>marketGoods</b>.  Return the cheapest cost of obtaining 1 unit of LOVE.  If this cost is greater than 1,000,000,000, return 1,000,000,001 instead.  If the potion cannot be obtained, return -1 instead.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">MakingPotions</td></tr><tr><td class="statText">Method:</td><td class="statText">getCost</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[], int[], String[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">int</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int getCost(String[] marketGoods, int[] cost, String[] recipes)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>marketGoods</b> will contain between 1 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>marketGoods</b> will contain between 1 and 50 characters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>marketGoods</b> will contain only uppercase letters ('A'-'Z').</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">All elements of <b>marketGoods</b> will be distinct.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>cost</b> will contain the same number of elements as <b>marketGoods</b>.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>cost</b> will be between 1 and 100, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>recipes</b> will contain between 0 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>recipes</b> will contain between 4 and 50 characters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>recipes</b> will contain only uppercase letters ('A'-'Z'), non-zero digits ('1'-'9') and the characters '+' and '='.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>recipes</b> will be formatted as described in the problem statement.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"LOVE", "WATER", "HONEY"}</pre></td></tr><tr><td class="statText"><pre>{100, 1, 30}</pre></td></tr><tr><td class="statText"><pre>{"LOVE=5WATER+3HONEY"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 95</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The LOVE potion is sold at the market, but the witch can make it for a lower cost.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"WATER", "HONEY", "HOP"}</pre></td></tr><tr><td class="statText"><pre>{2, 6, 9}</pre></td></tr><tr><td class="statText"><pre>{"LOVE=2WATER+4HONEY+2BEER", "BEER=1HOP+3WATER+1HOP"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 76</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">To obtain LOVE, one must make two units of BEER at a cost of 24 each, and then mix 2 units of WATER, 4 units of HONEY and 2 units of BEER, which will cost a total of 76.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"ORANGEJUICE", "APPLEJUICE"}</pre></td></tr><tr><td class="statText"><pre>{6, 4}</pre></td></tr><tr><td class="statText"><pre>{"JUICEMIX=1ORANGEJUICE+1APPLEJUICE"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: -1</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The witch doesn't have a LOVE recipe.
</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"WATER", "HONEY", "HOP"}</pre></td></tr><tr><td class="statText"><pre>{1,22,17}</pre></td></tr><tr><td class="statText"><pre>{"LOVE=7WATER+3HONEY", "LOVE=2HONEY+2HOP"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 73</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The witch has two LOVE recipes and prefers the first one.
</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"OIL", "WATER"}</pre></td></tr><tr><td class="statText"><pre>{60, 70}</pre></td></tr><tr><td class="statText"><pre>{"FIRSTPOTION=1OIL+1SECONDPOTION", "SECONDPOTION=4WATER+1FIRSTPOTION", "LOVE=1FIRSTPOTION+1SECONDPOTION"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: -1</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">5)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"HONEYBIT"}
</pre></td></tr><tr><td class="statText"><pre>{100}
</pre></td></tr><tr><td class="statText"><pre>{"LOVE=6HONEYMEGABYTE","HONEYMEGABYTE=2HONEYFIFTYTWELVEKBYTES",
"HONEYFIFTYTWELVEKBYTES=8HONEYSIXTYFOURKBYTES","HONEYSIXTYFOURKBYTES=8HONEYEIGHTKBYTES",
"HONEYEIGHTKBYTES=8HONEYKBYTE","HONEYKBYTE=2EIGHTBYEIGHTWORDS","EIGHTBYEIGHTWORDS=8EIGHTWORDS",
"EIGHTWORDS=8HONEYWORD","HONEYWORD=8HONEYBYTE","HONEYBYTE=8HONEYBIT"}
</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 1000000001</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">6)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"WATER"}</pre></td></tr><tr><td class="statText"><pre>{1}</pre></td></tr><tr><td class="statText"><pre>{"LOVE=1LOVE"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: -1</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Some recipes can be useless.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">7)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"MILK","WATER","HOP"}
</pre></td></tr><tr><td class="statText"><pre>{6,1,14}</pre></td></tr><tr><td class="statText"><pre>{"NECTAR=4HOP+2MILK","LOVE=5MILK+3BEER","LOVE=2WATER+1LOVE","LOVE=2MIX+1NECTAR",
"MIX=1MILK+1WATER+1HOP","BEER=5WATER+2HOP","LOVE=1NECTAR+3WATER+3HOP","NECTAR=3BEER+1MILK+2MILK"}
</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 110</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>