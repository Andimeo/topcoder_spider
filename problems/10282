<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>
When all the presents are delivered to the children, Santa Claus goes home to take some rest.  Then, the most exciting part of the day begins - Santa starts making garlands.  A garland is a sequence of lamps connected with a wire.  You are given a String[] <b>lamps</b> containing the available lamps.  Each element is formatted "color size" (quotes for clarity), where color is a string representing the lamp's color, and size is an integer representing the lamp's size.  A garland must contain every available lamp, and every pair of consecutive lamps in a garland must have different sizes.
</p>

<p>
Santa will make every possible garland using these lamps.  Each time he makes a garland, he will turn it on for a while and then disassemble it to make another one.  Every garland he makes will be different.  Two garlands are different if they have different lamps in at least one position.  Santa will make one garland before another if it has a bigger first lamp.  In case of a tie, he will choose the garland whose first lamp's color comes earlier alphabetically.  If both garlands have the same first lamp, he will make his choice according to the second lamp, and so on.  He will go to sleep after making all possible garlands.
</p>

<p>
Return a String[] containing the <b>n</b>-th garland Santa will make, where <b>n</b> is a 1-based index.  The return String[] should be a permutation of the String[] <b>lamps</b>.  If Santa will make less than <b>n</b> garlands, return an empty String[] instead.
</p>
</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">TheGarland</td></tr><tr><td class="statText">Method:</td><td class="statText">find</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[], int</td></tr><tr><td class="statText">Returns:</td><td class="statText">String[]</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String[] find(String[] lamps, int n)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>lamps</b> will contain between 1 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">All elements of <b>lamps</b> will be distinct.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>lamps</b> will be formatted "color size", where color is "Red", "Green", "Blue" or "Yellow", and size is an integer between 1 and 1,000,000,000, inclusive, with no leading zeroes (all quotes for clarity).</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>n</b> will be between 1 and 1,000,000,000, inclusive.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"Red 5", "Yellow 9", "Red 9", "Green 1"}</pre></td></tr><tr><td class="statText"><pre>4</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {"Red 9", "Green 1", "Red 5", "Yellow 9" }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Here are the first four garlands made by Santa:
<ul><li>{"Red 9", "Red 5", "Yellow 9", "Green 1"}</li>
<li>{"Red 9", "Red 5", "Green 1", "Yellow 9"}</li>
<li>{"Red 9", "Green 1", "Yellow 9", "Red 5"}</li>
<li>{"Red 9", "Green 1", "Red 5", "Yellow 9"}</li>
</ul></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"Yellow 47", "Blue 47"}</pre></td></tr><tr><td class="statText"><pre>1</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: { }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">It is impossible to make any garlands since the two lamps are of equal size and therefore cannot be next to each other.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"Green 4", "Blue 4", "Yellow 100"}</pre></td></tr><tr><td class="statText"><pre>2</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {"Green 4", "Yellow 100", "Blue 4" }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Only two possible garlands.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"Yellow 21", "Blue 24", "Red 29", "Blue 27", "Green 21", "Green 27", "Yellow 24", "Yellow 28"}</pre></td></tr><tr><td class="statText"><pre>19</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 
{"Red 29",
"Yellow 28",
"Blue 27",
"Yellow 24",
"Yellow 21",
"Blue 24",
"Green 27",
"Green 21" }</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>