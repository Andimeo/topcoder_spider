<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">Bunnies like programming and they sometimes make useless devices. 
<br><br>
One group of bunnies made a simple computer that calculates the following function f: 
<br>
For a positive integer x, 
<ul><li>f(x) = x / <b>m</b> if x is a multiple of <b>m</b>. </li>
	<li>f(x) = x + 1 otherwise. </li>
</ul>
where <b>m</b> is a fixed positive integer greater than 1. 
<br><br>
For a positive integer x, we define a sequence {B<sub>k</sub>} by B<sub>0</sub> = x and B<sub>k+1</sub> = f(B<sub>k</sub>). 
Let g(x) be the smallest index k of this sequence such that B<sub>k</sub> = 1. 
Calculate the number of positive integers x satisfying g(x) = <b>n</b>, and return the answer modulo 1,000,000,009. 
</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">BunnySequence</td></tr><tr><td class="statText">Method:</td><td class="statText">getNumber</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int, int</td></tr><tr><td class="statText">Returns:</td><td class="statText">int</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int getNumber(int m, int n)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">For any positive integer x, there always exists k such that B<sub>k</sub> = 1. </td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>m</b> will be between 2 and 1,000,000, inclusive. </td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>n</b> will be between 0 and 1,000,000, inclusive. </td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>5</pre></td></tr><tr><td class="statText"><pre>3</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 4</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">There are four positive integers x such that f(f(f(x))) = 1. 
The sequences {B<sub>k</sub>} for them are as follows: 
<ul><li>3 -&gt; 4 -&gt; 5 -&gt; 1</li>
	<li>20 -&gt; 4 -&gt; 5 -&gt; 1</li>
	<li>24 -&gt; 25 -&gt; 5 -&gt; 1</li>
	<li>125 -&gt; 25 -&gt; 5 -&gt; 1</li>
</ul></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>487</pre></td></tr><tr><td class="statText"><pre>0</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 1</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">B<sub>0</sub> = 1 means x = 1. 
</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>19</pre></td></tr><tr><td class="statText"><pre>10</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 512</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>3</pre></td></tr><tr><td class="statText"><pre>4</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 6</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>10</pre></td></tr><tr><td class="statText"><pre>487</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 829515032</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>