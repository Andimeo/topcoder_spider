<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">Rabbits often feel lonely, so one group of rabbits decided to get together 
and hold a beauty contest to determine who among them has the most beautiful ears. 
The rules are as follows. 
Each rabbit submits one vote. 
If a rabbit votes for himself/herself, that vote is considered invalid and thrown away. 
In the end, the rabbit who receives the most valid votes is the winner. <br><br>
You are given a String[] <b>names</b> and a String[] <b>votes</b>. 
The i-th rabbit is named <b>names</b>[i], and he/she voted for the rabbit named <b>votes</b>[i]. 
All rabbits have distinct names. 
Return the name of the rabbit who received the most valid votes. 
If there is a tie for most votes, return an empty String instead. 

</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">RabbitVoting</td></tr><tr><td class="statText">Method:</td><td class="statText">getWinner</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[], String[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String getWinner(String[] names, String[] votes)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Rabbit names are case-sensitive. See example 4 for clarification.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>names</b> will contain between 2 and 50 elements, inclusive. </td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>names</b> will contain between 1 and 50 characters, inclusive. </td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each character in <b>names</b> will be a letter ('A'-'Z', 'a'-'z').</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">All elements of <b>names</b> will be distinct. </td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>votes</b> will contain the same number of elements as <b>names</b>. </td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>votes</b> will be the same as one of the elements of <b>names</b>. </td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{ "Alice", "Bill", "Carol", "Dick" }</pre></td></tr><tr><td class="statText"><pre>{ "Bill", "Dick", "Alice", "Alice" }</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Alice"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">2 votes for Alice, 1 for Bill, 0 for Carol, and 1 for Dick. Alice got the most. 
</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{ "Alice", "Bill", "Carol", "Dick" }</pre></td></tr><tr><td class="statText"><pre>{ "Carol", "Carol", "Bill", "Bill" }</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: ""</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Bill and Carol are tied with 2 votes each.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{ "Alice", "Bill", "Carol", "Dick" }</pre></td></tr><tr><td class="statText"><pre>{ "Alice", "Alice", "Bill", "Bill" }</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Bill"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Alice's vote for herself is invalid. 1 valid vote for Alice, 2 for Bill.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{ "Alice", "Bill" }</pre></td></tr><tr><td class="statText"><pre>{ "Alice", "Bill" }</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: ""</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">All votes are invalid. 
</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{ "WhiteRabbit", "whiterabbit", "whiteRabbit", "Whiterabbit" }</pre></td></tr><tr><td class="statText"><pre>{ "whiteRabbit", "whiteRabbit", "whiteRabbit", "WhiteRabbit" }</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "whiteRabbit"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">These four are different names. 
</td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>