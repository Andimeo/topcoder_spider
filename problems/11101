<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>
Strange abbreviations are often used to write text messages on uncomfortable mobile devices.  One particular strategy for encoding texts composed of alphabetic characters and spaces is the following:
</p><ul><li>Spaces are maintained, and each word is encoded individually. A word is a consecutive string of alphabetic characters.</li>
<li>If the word is composed only of vowels, it is written exactly as in the original message.</li>
<li>If the word has at least one consonant, write only the consonants that do not have another consonant immediately before them.  Do not write any vowels.</li>
<li>The letters considered vowels in these rules are '<i>a</i>', '<i>e</i>', '<i>i</i>', '<i>o</i>' and '<i>u</i>'. All other letters are considered consonants.</li>
</ul>
For instance, "<i>ps i love u</i>" would be abbreviated as "<i>p i lv u</i>" while "<i>please please me</i>" would be abbreviated as "<i>ps ps m</i>".
<p>
You will be given the original message in the String <b>original</b>. Return a String with the message abbreviated using the described strategy.
</p></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">TxMsg</td></tr><tr><td class="statText">Method:</td><td class="statText">getMessage</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String getMessage(String original)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>original</b> will contain between 1 and 50 characters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each character of <b>original</b> will be a lowercase letter ('a'-'z'), or a space.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">There will not be two consecutive spaces in <b>original</b>, nor will the first or last character be a space.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"text message"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "tx msg"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"ps i love u"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "p i lv u"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">First example from the problem statement.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"please please me"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "ps ps m"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Second example from the problem statement.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"back to the ussr"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "bc t t s"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"aeiou bcdfghjklmnpqrstvwxyz"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "aeiou b"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>