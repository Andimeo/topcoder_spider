<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">Rabbit Hanako has <b>N</b> cards numbered 1 through <b>N</b>. Each card's number is written on its front side. The back side of each card is colored red if the number is prime, and blue if it is not prime.
<br><br>
Cat Taro has chosen a subset of these cards and arranged them face down in a row. The cards are sorted in increasing order from left to right. He wants Hanako to guess the numbers written on the cards. Hanako can only see the colored back side of each card. You are given a String <b>colors</b>, where the i-th character is 'R' if the i-th card from the left is red, and 'B' if it is blue.
<br><br>
Return a int[] containing exactly K elements, where K is the number of characters in <b>colors</b>. The i-th element of the return must be the number written on the i-th card if it can be uniquely determined. Otherwise, the i-th element must be -1. It is guaranteed that there exists at least one sequence that matches <b>colors</b>.
</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">ColorfulCards</td></tr><tr><td class="statText">Method:</td><td class="statText">theCards</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int, String</td></tr><tr><td class="statText">Returns:</td><td class="statText">int[]</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int[] theCards(int N, String colors)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">A positive integer number is called prime if it has exactly two divisors, 1 and itself. By convention, 1 is not considered to be a prime number.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>N</b> will be between 1 and 1,000, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>colors</b> will contain between 1 and 50 characters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each character in <b>colors</b> will be 'R' or 'B'.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">There will exist at least one sequence that matches <b>colors</b>.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>5</pre></td></tr><tr><td class="statText"><pre>"RRR"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {2, 3, 5 }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The numbers written on these cards are primes less than or equal to 5, so the only possibility is {2, 3, 5}.
</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>7</pre></td></tr><tr><td class="statText"><pre>"BBB"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {1, 4, 6 }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The numbers written on these cards are not primes less than or equal to 7, so the only possibility is {1, 4, 6}.
</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>6</pre></td></tr><tr><td class="statText"><pre>"RBR"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {-1, 4, 5 }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">There are two possibilities:<br>
{2, 4, 5}<br>
{3, 4, 5}<br></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>58</pre></td></tr><tr><td class="statText"><pre>"RBRRBRBBRBRRBBRRBBBRRBBBRR"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 
{-1, -1, -1, -1, -1, -1, -1, -1, 17, 18, 19, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 47, 53 }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>495</pre></td></tr><tr><td class="statText"><pre>"RBRRBRBBRBRRBBRRBBBRRBBBRR"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>