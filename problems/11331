<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">You are playing a simple one-player game in which you are given a set of cards. 
Each card has a string written on the front and a number on the back. 
The strings on all the cards have the <i>same</i> length. 
You must choose some of these cards (at least one, possibly all) 
and place them in a row with the front sides visible, 
such that the concatenated string is a palindrome. 
A palindrome is a string that reads the same forward and backward. 
Your score is the sum of the numbers on the back sides of the chosen cards. 
<br><br>
You are given a String[] <b>front</b> and a int[] <b>back</b> 
describing the set of cards you are given. 
The i-th card has <b>front</b>[i] written on the front and <b>back</b>[i] on the back. 
Return the maximum possible score you can achieve with these cards. 
If it is impossible to compose a palindrome from the given cards, return 0 instead.
</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">PalindromeGame</td></tr><tr><td class="statText">Method:</td><td class="statText">getMaximum</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[], int[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">int</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int getMaximum(String[] front, int[] back)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>front</b> will contain between 1 and 50 elements, inclusive. </td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>front</b> will contain between 1 and 50 characters, inclusive. </td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>front</b> will contain the same number of characters. </td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each character in <b>front</b> will be a lowercase letter ('a' - 'z'). </td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>front</b> and <b>back</b> will contain the same number of elements. </td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>back</b> will be between 1 and 1,000,000, inclusive. </td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{ "topcoder", "redcoder", "redocpot" }</pre></td></tr><tr><td class="statText"><pre>{ 7, 5, 3 }</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 10</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">You can choose "topcoder" with 7 and "redocpot" with 3 to get a palindrome "topcoderredocpot". 
</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{ "rabbit" }</pre></td></tr><tr><td class="statText"><pre>{ 1000000 }</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 0</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">No palindrome can be made. 
</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{ "abc", "abc", "def", "cba", "fed" }</pre></td></tr><tr><td class="statText"><pre>{ 24, 7, 63, 222, 190 }</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 499</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>