<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>You have three strings A, B, C. Initially, A is equal to a String <b>init</b>, and B and C are empty. Each character of <b>init</b> is either lowercase 'o' or lowercase 'x'.</p>
<p>Your task in this problem is to transform A from <b>init</b> into <b>goal</b> by applying the following operations to the strings.</p>
<ol><li>If A is not an empty string, remove the leftmost character from A, and add it to the end of B.</li>
<li>If A is not an empty string, remove the leftmost character from A, and add it to the end of C.</li>
<li>If B is not an empty string, remove the leftmost character from B, and add it to the end of A.</li>
<li>If C is not an empty string, remove the leftmost character from C, and add it to the end of A.</li>
</ol><p>You can apply the operations in any order and each operation can be used an arbitrary number of times. Return the minimal number of operations required to finish the task. The constraints guarantee that this is always possible.</p>
</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">TripleStrings</td></tr><tr><td class="statText">Method:</td><td class="statText">getMinimumOperations</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String, String</td></tr><tr><td class="statText">Returns:</td><td class="statText">int</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int getMinimumOperations(String init, String goal)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>init</b> will contain between 1 and 50 characters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>init</b> and <b>goal</b> will contain the same number of characters.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each character of <b>init</b> and <b>goal</b> will be either lowercase 'o' or lowercase 'x'.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">The number of 'o' characters in <b>init</b> will be equal to the number of 'o' characters in <b>goal</b>.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"ooxxox"</pre></td></tr><tr><td class="statText"><pre>"xoxoxo"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 6</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"><p>One of the optimal solutions is as follows:</p>
<pre>
initial:         A=ooxxox B=  C=
use operation 1: A=oxxox  B=o C=
use operation 2: A=xxox   B=o C=o
use operation 2: A=xox    B=o C=ox
use operation 4: A=xoxo   B=o C=x
use operation 4: A=xoxox  B=o C=
use operation 3: A=xoxoxo B=  C=
</pre>
</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"oooxxoo"</pre></td></tr><tr><td class="statText"><pre>"oooxxoo"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 0</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"><b>init</b> and <b>goal</b> are the same, so no operation is required.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"ox"</pre></td></tr><tr><td class="statText"><pre>"xo"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 2</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"ooxxooxx"</pre></td></tr><tr><td class="statText"><pre>"xxoxoxoo"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 12</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"oxxoxxoooxooooxxxoo"</pre></td></tr><tr><td class="statText"><pre>"oxooooxxxooooxoxxxo"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 16</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">5)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"xxxoxoxxooxooxoxooo"</pre></td></tr><tr><td class="statText"><pre>"oxxooxxooxxoxoxooxo"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 36</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>