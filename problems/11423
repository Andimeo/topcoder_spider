<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>
You are given two Strings <b>s</b> and <b>t</b>. All characters of <b>s</b> and <b>t</b> are distinct. No character of <b>s</b> is present in <b>t</b> and no character of <b>t</b> is present in <b>s</b>.</p>
<p></p>
<p>Let N be the length of <b>s</b>, and M be the length of <b>t</b>.
Define a 2-dimensional string array "table" as follows:</p>
<ul><li>table[i][0] = <b>s</b>[i-1] (1&lt;=i&lt;=N)</li>
<li>table[0][j] = <b>t</b>[j-1] (1&lt;=j&lt;=M)</li>
<li>table[i][j] = min(table[i-1][j], table[i][j-1]) + max(table[i-1][j], table[i][j-1])  (1&lt;=i&lt;=N, 1&lt;=j&lt;=M)</li>
</ul><p>Note that min and max are defined by the lexicographical order of strings (see Notes for a more formal definition), and A+B means the concatenation of strings A and B.</p>
<p></p>
<p>Your task is to find a substring of table[N][M]. Let L be the length of table[N][M]. Return the substring of table[N][M] whose start position (0-indexed) is <b>pos</b> and length is min(50, L-<b>pos</b>). </p>
</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">STable</td></tr><tr><td class="statText">Method:</td><td class="statText">getString</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String, String, long</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String getString(String s, String t, long pos)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">A string X is defined as smaller than a string Y if and only if X is a prefix of Y or X has a smaller character than Y at the first position where they differ.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">The order of characters is defined by their ASCII codes: '0'&lt;...&lt;'9'&lt;'A'&lt;...&lt;'Z'&lt;'a'&lt;...&lt;'z'.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>s</b> and <b>t</b> will each contain between 1 and 30 characters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">All characters of <b>s</b> and <b>t</b> will be distinct.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">No character of <b>s</b> will be present in <b>t</b>.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">No character of <b>t</b> will be present in <b>s</b>.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>s</b> and <b>t</b> will contain only letters ('A'-'Z', 'a'-'z') and digits ('0'-'9').</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>pos</b> will be between 0 and L-1, inclusive, where L is the length of table[N][M] as defined in the statement.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"ad"</pre></td></tr><tr><td class="statText"><pre>"cb"</pre></td></tr><tr><td class="statText"><pre>0</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "acbacd"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"><p>In this case, the array "table" is as follows.</p>
<pre>
-----------------
| |  c   |  b   |
-----------------
|a|  ac  | acb  |
-----------------
|d| acd  |acbacd|
-----------------
</pre></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"fox"</pre></td></tr><tr><td class="statText"><pre>"cat"</pre></td></tr><tr><td class="statText"><pre>0</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "acfcfoacftacfcfocfox"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"Ra6b1t"</pre></td></tr><tr><td class="statText"><pre>"W0lf"</pre></td></tr><tr><td class="statText"><pre>66</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "RWab0RWRWa0RWl0RWRWa6RWa0RWRWa6RWa6RWab0RWRWa6RWa6"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"><p>In this case, return 50 characters.</p></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"M0HAXG"</pre></td></tr><tr><td class="statText"><pre>"COFU12"</pre></td></tr><tr><td class="statText"><pre>919</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "MOFU2"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"a0B1c2D3e4F5gHiJkLmN"</pre></td></tr><tr><td class="statText"><pre>"A9b8C7d6EfGhIjKlMn"</pre></td></tr><tr><td class="statText"><pre>9876543210</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "B10AaB1c0Aa9Aa0AaB0AaB10AaB1c0AaB1c20Aa9Aa0AaB0Aa9"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">5)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"TCOR2"</pre></td></tr><tr><td class="statText"><pre>"MEDiUm"</pre></td></tr><tr><td class="statText"><pre>350</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "MTDEMTiCMTEMTDEMTDEMTiDEMTiUCMTEMTCMTOCMTEMTDEMTCM"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>