<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">Your task is to find the minimal positive integer x such that:
<br>
1. x is an integer multiple of <b>N</b>.
<br>
2. The decimal representation of x doesn't contain any forbidden digits.
<br>
You will be given the forbidden digits as a int[] <b>forbiddenDigits</b>.
<br><br><br>
If there is no solution, you should return the String "<tt>IMPOSSIBLE</tt>" (quotes for clarity). 
<br>
If there is a solution and its number of digits is strictly less than 9, you should return a String containing the integer x in base 10, with no leading zeros.
<br>
Otherwise, you should return a String of the form "<tt>abc...def(g digits)</tt>" (quotes for clarity). In the return value, <tt>abc</tt> are the first three digits of the smallest valid integer x, <tt>def</tt> are its last three digits, and <tt>g</tt> is the number of digits in x (a base-10 integer with no leading zeros). </td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">MultiplesWithLimit</td></tr><tr><td class="statText">Method:</td><td class="statText">minMultiples</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int, int[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String minMultiples(int N, int[] forbiddenDigits)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>N</b> will be between 1 and 10000, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>forbiddenDigits</b> will contain between 0 and 10 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>forbiddenDigits</b> will be between 0 and 9, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">The elements of <b>forbiddenDigits</b> will be pairwise distinct.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>8</pre></td></tr><tr><td class="statText"><pre>{2,3,4,5,6,7,8,9}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "1000"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The smallest positive multiple of 8 that only contains digits 0 and 1 is 1000.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>9</pre></td></tr><tr><td class="statText"><pre>{1,3,4,5,6,7,8,9}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "222...222(9 digits)"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>524</pre></td></tr><tr><td class="statText"><pre>{5,2,4}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "3668"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>10000</pre></td></tr><tr><td class="statText"><pre>{0}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "IMPOSSIBLE"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>1</pre></td></tr><tr><td class="statText"><pre>{0,1,2,3,4,5,6,7,8,9}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "IMPOSSIBLE"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>