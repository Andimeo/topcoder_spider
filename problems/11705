<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">Fox Ciel is learning magical physics. Currently, she studies Magic Molecules. Each Magic Molecule consists of some Magic Atoms. Each Magic Atom stores some Magic Power, with different atoms possibly storing different amounts of power. Within the molecule, some pairs of atoms are connected by bidirectional Magic Bonds.
<br><br>
Ciel now has a Magic Molecule formed by n Magic Atoms. The atoms are numbered 0 through n-1, inclusive. You are given a int[] <b>magicPower</b> with n elements: For each i, the amount of power stored in the Magic Atom number i is <b>magicPower</b>[i]. You are also given a String[] <b>magicBond</b> with n elements, each containing n characters.
Character j of element i of <b>magicBond</b> is 'Y' if the Magic Atoms i and j are connected by a Magic Bond. Otherwise, character j of element i of <b>magicBond</b> is 'N'.
<br><br>
Your task is to improve Ciel's Magic Molecule. You have to choose a subset of the n Magic Atoms so that the following two conditions are met:
<ol><li>The number m of chosen atoms satisfies the inequality 3*m &gt;= 2*n.</li>
<li>Each of the m*(m-1)/2 pairs of chosen atoms is connected by a Magic Bond.</li>
</ol><br>
Your goal is to maximize the total Magic Power stored in the chosen atoms. Compute and return the maximum total amount of power. If it is impossible to choose a subset of atoms that satisfies the above criteria, return -1 instead.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">MagicMolecule</td></tr><tr><td class="statText">Method:</td><td class="statText">maxMagicPower</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int[], String[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">int</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int maxMagicPower(int[] magicPower, String[] magicBond)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">The chosen subset is allowed to contain all n Magic Atoms.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">You are not supposed to maximize m; only the total amount of Magic Power matters.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>magicPower</b> will contain between 2 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element in <b>magicPower</b> will be between 1 and 100,000, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>magicBond</b> and <b>magicPower</b> will contain the same number of elements.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>magicBound</b> will contain exactly n characters, where n is the number of elements in <b>magicPower</b>.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>magicBound</b> will only contain the characters 'Y' and 'N'.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">For each valid i, <b>magicBound</b>[i][i] will be 'N'.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">For each valid i and j, <b>magicBound</b>[i][j] will be equal to <b>magicBound</b>[j][i].</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{1,2,3}</pre></td></tr><tr><td class="statText"><pre>{"NYY","YNN","YNN"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 4</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">There are three Magic Atoms.
There are two Magic Bonds: one connects atoms 0 and 1, the other connects atoms 0 and 2.
The first condition requires us to choose at least 2*3/3 = 2 atoms.
We cannot choose all three of them, because atoms 1 and 2 are not connected by a Magic Bond.
The optimal solution is to choose Magic Atoms 0 and 2.
Their total power is 1+3 = 4.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{1,1,1,1}</pre></td></tr><tr><td class="statText"><pre>{"NNYY","NNYY","YYNN","YYNN"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: -1</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">This time we must choose at least 3 Magic Atoms, but there is no valid solution.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{86,15,100,93,53,50}</pre></td></tr><tr><td class="statText"><pre>{"NYYYYN","YNNNNY","YNNYYN","YNYNYN","YNYYNY","NYNNYN"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 332</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{3969,9430,7242,8549,8190,8368,3704,9740,1691}</pre></td></tr><tr><td class="statText"><pre>{"NYYYYYYYY","YNYYYYYYY","YYNYYYYYY","YYYNYYYYY","YYYYNYYYY","YYYYYNYYY","YYYYYYNNY","YYYYYYNNY","YYYYYYYYN"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 57179</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>