<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">The Casket of Star (sic) is a device in the Touhou universe. Its purpose is to generate energy rapidly.
Initially it contains n stars in a row. The stars are labeled 0 through n-1 from the left to the right.
You are given a int[] <b>weight</b>, where <b>weight</b>[i] is the weight of star i.
<br><br><br>
The following operation can be repeatedly used to generate energy:
<ol><li>Choose a star x other than the very first star and the very last star.</li>
<li>The x-th star disappears.</li>
<li>This generates <b>weight</b>[x-1] * <b>weight</b>[x+1] units of energy.</li>
<li>We decrease n and relabel the stars 0 through n-1 from the left to the right.</li>
</ol><br><br><br>
Your task is to use the device to generate as many units of energy as possible. Return the largest possible total amount of generated energy.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">CasketOfStar</td></tr><tr><td class="statText">Method:</td><td class="statText">maxEnergy</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">int</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int maxEnergy(int[] weight)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>weight</b> will contain between 3 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element in <b>weight</b> will be between 1 and 1,000, inclusive.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{1,2,3,4}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 12</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">We have only 2 choices:
<ol><li>Make the "2" disappear first, and "3" next. The total energy is 1*3 + 1*4 = 7.</li>
<li>Make the "3" disappear first, and "2" next. The total energy is 2*4 + 1*4 = 12.</li>
</ol>
So the answer is 12.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{100,2,1,3,100}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 10400</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">We proceed as follows:
{100,2,1,3,100} =&gt; {100,1,3,100} =&gt; {100,3,100} =&gt; {100,100}
The total energy is 100*1 + 100*3 + 100*100 = 10400.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{2,2,7,6,90,5,9}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 1818</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{477,744,474,777,447,747,777,474}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 2937051</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 13</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>