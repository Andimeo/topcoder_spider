<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><i>This problem statement contains images that may not display properly outside the applet.</i>
<br><br>
Cucumberman went to a theme park. The floor of the park was interesting: It was tiled with black tiles and white tiles. The tiling was systematic: the floor consisted exclusively of repeated copies of a single block of tiles. For the purpose of this problem, we will assume that the floor was infinitely large. The following picture shows an example: a finite rectangular part of one possible floor.
<br><br><img src="http://www.topcoder.com/contest/problem/PeriodicTiling/pic1.png"><br><br>
This tiling pattern can be made of disjoint copies of a block that consists of 13 tiles. The picture on the left shows one block, and the picture on the right shows how blocks are placed to form the tiling. Let's call this tiling a <i>13-tiling</i>.
<br><br><img src="http://www.topcoder.com/contest/problem/PeriodicTiling/pic2.png"><br><br>
Formally, a tiling is a way to represent the entire infinite floor as a union of infinitely many blocks, each containing a finite number of tiles. A tiling is called a <i>k-tiling</i> if the following conditions are all satisfied:
<ul><li>Each tile is contained in exactly one block.</li>
<li>Each block contains exactly k tiles.</li>
<li>Each block must be 4-connected.</li>
<li>All blocks have exactly the same shape. Formally, for any pair of blocks X and Y, there is a translation (no rotations or reflections) of the entire floor that moves block X to exactly cover the current position of block Y.</li>
<li>The tiling is periodic. Formally, for any three blocks X, Y, and Z, there is a block W such that if we take the translation that moves block X to block Y, this translation would move block Z to exactly cover the current position of block W.</li>
</ul>
You are given a String[] <b>part</b> that represents a rectangular part of the infinite floor. Return the minimal possible integer k such that the floor can be a <i>k-tiling</i>.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">PeriodicTiling</td></tr><tr><td class="statText">Method:</td><td class="statText">minBlock</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">int</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int minBlock(String[] part)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>part</b> will contain between 1 and 16 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>part</b> will contain between 1 and 16 characters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">All elements of <b>part</b> will contain the same number of characters.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each character in <b>part</b> will be either '-' or '#'.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"#-#-#",
 "-----",
 "#-#-#",
 "-----"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 4</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">There are many valid blocks of 4 tiles, for example:
<pre>
#-
--
</pre></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"#",
 "#",
 "-",
 "#"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 3</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"-#----#----#----",
 "---#----#----#--",
 "#----#----#----#",
 "--#----#----#---",
 "----#----#----#-",
 "-#----#----#----",
 "---#----#----#--",
 "#----#----#----#",
 "--#----#----#---",
 "----#----#----#-",
 "-#----#----#----",
 "---#----#----#--",
 "#----#----#----#",
 "--#----#----#---",
 "----#----#----#-",
 "-#----#----#----"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 5</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>
{"----------------",
 "----------------",
 "----------------",
 "----------------",
 "----------------",
 "----------------",
 "----------------",
 "----------------",
 "----------------",
 "----------------",
 "----------------",
 "----------------",
 "----------------",
 "----------------",
 "----------------",
 "----------------"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 1</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"-#-#--#-##----#-",
 "#----#-#--#-##--",
 "-#-##----#-#--#-",
 "#-#--#-##----#-#",
 "----#-#--#-##---",
 "#-##----#-#--#-#",
 "-#--#-##----#-#-",
 "---#-#--#-##----",
 "-##----#-#--#-##",
 "#--#-##----#-#--",
 "--#-#--#-##----#",
 "##----#-#--#-##-",
 "--#-##----#-#--#",
 "-#-#--#-##----#-",
 "#----#-#--#-##--",
 "-#-##----#-#--#-"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 13</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Example from the statement.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">5)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"###-###-###",
 "-#--#---#-#",
 "-#--###-###"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 26</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>