<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>
Percy is a penguin in charge of the greatest penguin pastime, penguin sledding. It is Percy's job to help design the sledding course. Percy is a very careful penguin and would like to set up the course in a way that no two sledding paths cross. 
</p>
<br><p>
The sledding course contains some significant locations called checkpoints, and some sledding paths.
The checkpoints are numbered 1 through <b>numCheckpoints</b>, inclusive.
Each sledding path is a straight line segment that connects two distinct checkpoints.
The checkpoints are distinct, and no three of them lie on the same line.
(Therefore, no checkpoint will ever lie on a sledding path.)
</p>
<br><p>
When designing the course, Percy specifies some pairs of checkpoints that will be connected by sledding paths.
Accidents happen when two sledding paths cross, so such designs should be avoided.
Unfortunately, Percy does not know the precise locations of all checkpoints.
Therefore, Percy's design must not allow two sledding paths to cross, regardless of the locations of the checkpoints.
Percy calls a design <i>safe</i> if he is sure that no two sledding paths will cross.
</p>
<br><p>
<img src="http://www.topcoder.com/contest/problem/PenguinSledding/safeUnsafe2.png"></p>
<br><p>
Percy just found an old design that may be unsafe.
He would like to change it to a safe design by removing zero or more sledding paths from the original design.
Count all different safe designs he may obtain from the old design in this way.
Two designs are considered different if there is a pair of checkpoints that is connected by a sledding path in one design and disconnected in the other.
</p>
<br><p>
You are given the int <b>numCheckpoints</b> representing the number of checkpoints in the old design.
You are also given two int[]s <b>checkpoint1</b> and <b>checkpoint2</b> that describe the sledding paths in the old design:
For each i, there is a sledding path connecting the checkpoints <b>checkpoint1</b>[i] and <b>checkpoint2</b>[i].
Return the number of safe designs that can be made from the old design.
</p></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">PenguinSledding</td></tr><tr><td class="statText">Method:</td><td class="statText">countDesigns</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int, int[], int[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">long</td></tr><tr><td class="statText">Method signature:</td><td class="statText">long countDesigns(int numCheckpoints, int[] checkpoint1, int[] checkpoint2)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>numCheckpoints</b> will be between 2 and 50, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>checkpoint1</b> will contain between 1 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>checkpoint1</b> and <b>checkpoint2</b> will contain the same number of elements.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>checkpoint1</b> will be between 1 and <b>numCheckpoints</b>, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>checkpoint2</b> will be between 1 and <b>numCheckpoints</b>, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each pair of checkpoints will be connected by at most one sledding path.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">For each i, element i of <b>checkpoint1</b> will not be equal to element i of <b>checkpoint2</b>.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>2</pre></td></tr><tr><td class="statText"><pre>{1}</pre></td></tr><tr><td class="statText"><pre>{2}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 2</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">There is only one sledding path. Both including it and removing it are safe designs.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>4</pre></td></tr><tr><td class="statText"><pre>{1,2,3}</pre></td></tr><tr><td class="statText"><pre>{2,3,4}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 6</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Either sledding path (1,2) or (3,4) needs to be removed to form a safe design. If neither of these is removed the design is unsafe.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>6</pre></td></tr><tr><td class="statText"><pre>{1,3,6}</pre></td></tr><tr><td class="statText"><pre>{2,4,4}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 5</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Note that some of the checkpoints may be isolated.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>50</pre></td></tr><tr><td class="statText"><pre>{40, 40, 40, 40, 40, 40, 40, 40, 
 40, 40, 40, 40, 50, 40, 40, 40, 
 23, 4, 24, 40, 22, 40, 8, 40, 40,
 40, 34, 21, 40, 40, 38, 40, 40, 
 40, 40, 40, 28, 40, 40, 40, 40, 
 46, 13, 40, 40, 40, 47, 40, 40}</pre></td></tr><tr><td class="statText"><pre>{45, 42, 20, 48, 12, 32, 25, 10, 
 26, 39, 16, 2, 19, 43, 37, 17, 
 19, 19, 19, 18, 19, 27, 19, 29, 
 11, 36, 19, 19, 1, 41, 19, 35, 
 14, 33, 49, 3, 19, 7, 5, 19, 31, 
 19, 19, 6, 9, 15, 19, 44, 30}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 68719493118</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>36</pre></td></tr><tr><td class="statText"><pre>{13, 24, 24, 20, 31, 16, 10, 36, 34, 32, 
 28, 5, 20, 29, 23, 2, 14, 4, 9, 5, 19, 
 21, 8, 1, 26, 27, 25, 15, 22, 30, 30, 
 6, 11, 7, 2, 35, 13, 29, 4, 12, 33, 18, 
 13, 14, 17, 35, 3}</pre></td></tr><tr><td class="statText"><pre>{10, 15, 27, 1, 29, 11, 5, 18, 33, 1, 9,
 2, 31, 6, 19, 10, 33, 18, 6, 27, 3, 22,
 4, 12, 31, 30, 34, 16, 7, 24, 3, 28, 15,
 21, 22, 8, 26, 20, 14, 32, 25, 17, 35,
 8, 36, 26, 23}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 162</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>