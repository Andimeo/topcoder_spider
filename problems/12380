<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">Manao is developing a simple 2-D computer game. The screen of the game is H pixels high and W pixels wide (1 &lt;= H, W &lt;= 50).
<br><br>
Manao is currently working on the background which should be filled with several mountains. The contents of the screen are stored in an array of characters <tt>pix</tt> where <tt>pix</tt>[x, y] gives the contents of the pixel at column x, row y. Both indices are 0-based. Columns are numbered left to right and rows are numbered bottom to top. Character 'X' denotes a part of a mountain and character '.' means that this pixel is not covered by any mountains.
<br><br>
Manao wants to draw <b>N</b> mountains in order to achieve the necessary background. The i-th (0-based index) mountain is described by its peak position (X[i], Y[i]), 0 &lt;= X[i] &lt; W, 0 &lt;= Y[i] &lt; H. In order to draw the mountains, the following pseudocode is used:
<br><br><tt>Fill all elements of pix with '.' characters.</tt><br><tt>For 0 </tt>&lt;=<tt> i </tt>&lt;<tt> N:</tt><br><tt>  For 0 </tt>&lt;=<tt> x </tt>&lt;<tt> W:</tt><br><tt>    For 0 </tt>&lt;=<tt> y </tt>&lt;=<tt> Y[i] - |x - X[i]|:</tt><br><tt>      pix[x, y] := 'X'</tt><br><br>
For example, consider three mountains with peaks at (1, 1), (2, 2) and (4, 1). Once these mountains are drawn on a screen with H = 3, W = 6, the resulting picture will look as follows:
<pre>
..X...
.XXXX.
XXXXXX
</pre>
<br>
You are given a String[] <b>picture</b> describing the background which Manao wants to obtain. It contains H elements and each element contains W characters. The required value of <tt>pix</tt>[x, y] is given by x-th character of <b>picture</b>[H-y-1]. In other words, elements of <b>picture</b> list the rows of the screen from top to bottom.

You are also given an int <b>N</b>. Count the number of sequences S of exactly <b>N</b> mountains such that when you draw all mountains from S on the screen as described above, the result will match the given <b>picture</b>. Return this number modulo 1,000,000,009.
<br><br>
Note that the order of mountains in a sequence is important. Sequences containing the same mountains, but in a different order, are distinct. It is guaranteed that there exists at least one way to obtain the given <b>picture</b> by drawing exactly <b>N</b> mountains.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">MountainsEasy</td></tr><tr><td class="statText">Method:</td><td class="statText">countPlacements</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[], int</td></tr><tr><td class="statText">Returns:</td><td class="statText">int</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int countPlacements(String[] picture, int N)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>picture</b> will contain between 1 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>picture</b> will be between 1 and 50 characters long, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">All elements of <b>picture</b> will be of the same length.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>picture</b> will consist of 'X' and '.' characters only.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>N</b> will be between 1 and 50, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>picture</b> can be obtained by drawing exactly <b>N</b> mountains according to the rules given in the problem statement.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"X.",
 "XX"}</pre></td></tr><tr><td class="statText"><pre>1</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 1</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">This is a mountain (0, 1).</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"X.",
 "XX"}</pre></td></tr><tr><td class="statText"><pre>2</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 5</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Here one of the mountains is completely covered by the other. The five possible sequences are: 
<ul><li>(0, 1), (0, 1)</li>
<li>(0, 1), (0, 0)</li>
<li>(0, 1), (1, 0)</li>
<li>(0, 0), (0, 1)</li>
<li>(1, 0), (0, 1)</li>
</ul></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"X.X",
 "XXX"}</pre></td></tr><tr><td class="statText"><pre>2</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 2</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The two possible sequences are:
<ul><li>(0, 1), (2, 1) </li>
<li>(2, 1), (0, 1) </li>
</ul></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"X.X",
 "XXX"}</pre></td></tr><tr><td class="statText"><pre>3</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 24</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"......",
 "X..X..",
 "XXXXXX",
 "XXXXXX"}</pre></td></tr><tr><td class="statText"><pre>3</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 6</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">There are three mountains (0, 2), (3, 2), (5, 1) placed in any order.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">5)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"......",
 "X..X..",
 "XXXXXX",
 "XXXXXX"}</pre></td></tr><tr><td class="statText"><pre>4</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 300</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">6)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"....X...X..",
 "...XXX.XXX.",
 "XXXXXXXXXXX"}</pre></td></tr><tr><td class="statText"><pre>10</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 764632413</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>