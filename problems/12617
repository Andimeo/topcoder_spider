<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">There are some deer in the zoo.
Each deer has two antlers.
You are given int[]s <b>antler1</b> and <b>antler2</b>.
These two int[]s will contain the same number of elements.
For each index i, <b>antler1</b>[i] and <b>antler2</b>[i] are the weights of the two antlers of one of the deer.
<br><br>
You are also given an int <b>capacity</b>.
A deer is unbalanced if the weight difference between his antlers is strictly more than <b>capacity</b>.
<br><br>
You decided to perform some operations on the deer. 
Your goal is to make all deer balanced.
In each operation, you can choose some two antlers (each on a different deer) and swap them.
<br><br>
Return the minimal number of operations required to make all deer balanced.
If this is impossible, return -1 instead.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">AntlerSwapping</td></tr><tr><td class="statText">Method:</td><td class="statText">getmin</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int[], int[], int</td></tr><tr><td class="statText">Returns:</td><td class="statText">int</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int getmin(int[] antler1, int[] antler2, int capacity)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>antler1</b> and <b>antler2</b> will contain the same number of elements.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>antler1</b> and <b>antler2</b> will contain between 1 and 16 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>antler1</b> and <b>antler2</b> will be between 1 and 1,000,000, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>capacity</b> will be between 0 and 1,000,000, inclusive.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{3, 2, 2}</pre></td></tr><tr><td class="statText"><pre>{3, 5, 5}</pre></td></tr><tr><td class="statText"><pre>0</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 1</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">There are three deer in the zoo.
As <b>capacity</b>=0, a deer is only balanced if he has two antlers of exactly equal weight.
Currently, deer 0 is balanced and the other two are not.
We can fix that in a single operation.
For example, we can swap deer 1's antler 1 and deer 2's antler 2.
After this operation, deer 1 will have two antlers that weigh 5 each, and deer 2 will have two antlers that weigh 2 each.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{4, 2, 6, 4, 8, 5, 2, 3}</pre></td></tr><tr><td class="statText"><pre>{3, 4, 5, 2, 8, 5, 7, 6}</pre></td></tr><tr><td class="statText"><pre>1</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 2</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">One of the optimal ways is as follows:
<ul><li>Swap deer 1's antler with weight 2 and deer 3's antler with weight 4.</li>
<li>Swap deer 6's antler with weight 7 and deer 7's antler with weight 3.</li>
</ul></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{12, 34, 56, 78}</pre></td></tr><tr><td class="statText"><pre>{1234, 2345, 3456, 4567}</pre></td></tr><tr><td class="statText"><pre>100</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: -1</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">If it is impossible to achieve the goal, return -1.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{47, 58, 2013}</pre></td></tr><tr><td class="statText"><pre>{49, 55, 2013}</pre></td></tr><tr><td class="statText"><pre>3</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 0</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{4, 1, 7, 5, 7, 8, 2, 1, 3, 1, 7, 5, 9, 4, 9, 1}</pre></td></tr><tr><td class="statText"><pre>{10, 6, 5, 3, 1, 8, 4, 4, 4, 7, 1, 4, 6, 5, 10, 10}</pre></td></tr><tr><td class="statText"><pre>1</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 7</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>