<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">You are given an int <b>m</b>. 
Consider a square in the plane such that the corners of the square have coordinates (0, 0), (<b>m</b>, 0), (<b>m</b>, <b>m</b>), and (0, <b>m</b>). 
All the lattice points on the sides of this square are colored, as described below: 
<ul><li>The points with coordinates (1, 0), ..., (<b>m</b>-1, 0) are red. </li>
<li>The points with coordinates (<b>m</b>, 1), ..., (<b>m</b>, <b>m</b>-1) are green. </li>
<li>The points with coordinates (<b>m</b>-1, <b>m</b>), ..., (1, <b>m</b>) are blue. </li>
<li>The points with coordinates (0, <b>m</b>-1), ..., (0, 1) are yellow. </li>
</ul>
Some other lattice points are black. 
Each black point lies strictly inside the square. 
You are given two int[]s: <b>x</b> and <b>y</b>. 
These describe the black points: 
For each i, there is a black point at (<b>x</b>[i], <b>y</b>[i]). 
<br><br><img src="http://www.topcoder.com/contest/problem/EnclosingTriangleColorful/EnclosingTriangleColorful0.png"><br><br>
You want to draw a triangle such that: 
<ol><li>its vertices have three distinct colors out of the set { red, green, blue, yellow }, </li>
<li>all black points lie inside or on the boundary of the triangle. </li>
</ol>
Return the number of ways to draw such a triangle. 
</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">EnclosingTriangleColorful</td></tr><tr><td class="statText">Method:</td><td class="statText">getNumber</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int, int[], int[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">int</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int getNumber(int m, int[] x, int[] y)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>m</b> will be between 2 and 300, inclusive. </td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>x</b> and <b>y</b> will each contain between 1 and 50 elements, inclusive. </td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>x</b> and <b>y</b> will contain the same number of elements. </td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>x</b> and <b>y</b> will be between 1 and <b>m</b>-1, inclusive. </td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">All points described by <b>x</b> and <b>y</b> will be distinct. </td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>4</pre></td></tr><tr><td class="statText"><pre>{ 1, 2, 3 }</pre></td></tr><tr><td class="statText"><pre>{ 1, 3, 2 }</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 8</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The picture shows the 8 ways to draw a triangle. 
<br><br><img src="http://www.topcoder.com/contest/problem/EnclosingTriangleColorful/EnclosingTriangleColorful1.png"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>7</pre></td></tr><tr><td class="statText"><pre>{ 1, 1, 6, 6 }</pre></td></tr><tr><td class="statText"><pre>{ 1, 6, 1, 6 }</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 0</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>4</pre></td></tr><tr><td class="statText"><pre>{ 2 }</pre></td></tr><tr><td class="statText"><pre>{ 2 }</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 72</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>10</pre></td></tr><tr><td class="statText"><pre>{ 2, 6, 7, 6 }</pre></td></tr><tr><td class="statText"><pre>{ 7, 7, 9, 3 }</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 52</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>15</pre></td></tr><tr><td class="statText"><pre>{ 7, 6, 5, 4, 3 }</pre></td></tr><tr><td class="statText"><pre>{ 1, 4, 7, 10, 13 }</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 150</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">5)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>300</pre></td></tr><tr><td class="statText"><pre>{ 117, 183, 181, 118, 132, 128, 184, 150, 168, 121, 
  179, 132, 168, 182, 119, 117, 180, 120, 175, 177, 
  116, 175, 128, 163, 181, 178, 123, 118, 172, 143, 
  163, 157, 179, 122, 121, 119, 157, 122, 150, 180, 
  137, 177, 125, 123, 172, 125, 137, 143, 120, 178 }
</pre></td></tr><tr><td class="statText"><pre>{ 157, 157, 132, 163, 181, 180, 150, 116, 181, 125, 
  125, 119, 119, 163, 132, 143, 172, 172, 179, 178, 
  150, 121, 120, 118, 168, 123, 178, 137, 120, 117, 
  182, 117, 175, 177, 175, 168, 183, 123, 184, 128, 
  118, 122, 179, 122, 180, 121, 182, 183, 128, 177 }
</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 21690886</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>