<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>Little Petya likes rooted trees a lot. Recently he has received one as a gift from his mother. The only thing Petya likes more than rooted trees is playing with little Masha. The children painted each node of Petya's new tree either black or white. The tree is represented by the int[] <b>parent</b>. Let N denote the number of nodes in the tree. The nodes are numbered 0 through N-1. Node 0 is considered to be the root of the tree. Then for each i between 0 and N-2, inclusive, the tree contains an edge between nodes (i+1) and <b>parent</b>[i]. (Note that <b>parent</b>[i] may sometimes be greater than i+1.) The colors of nodes are given in the String <b>color</b> that consists of characters 'W' and 'B'. If the i-th character (0-based index) of <b>color</b> is 'W', then the i-th node is colored white, otherwise it's colored black. </p><br><p>The children decided to play a game with this tree. In the game Petya and Masha take alternating turns, Masha plays first. On his or her turn, the current player selects a white node, along with any subset of its descendants. (The subset can be arbitrary, possibly disconnected or even empty.) The player then toggles the color of all selected vertices: black nodes become white and vice versa. A player who can't make a turn loses the game. You goal is to determine who will be the winner assuming that both kids play optimally. Return "Masha" (without quotes) if Masha wins, otherwise return "Petya". </p></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">GameWithTree</td></tr><tr><td class="statText">Method:</td><td class="statText">winner</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int[], String</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String winner(int[] parent, String color)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Node A is called a descendant of the node B if either B is a parent of A or a parent of A is descendant of the node B.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>parent</b> will contain N-1 elements.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>parent</b> will be between 0 and N-1, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>color</b> will contain N characters.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">N will be between 2 and 50, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each character of <b>color</b> will be either 'B' or 'W'.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">It's guaranteed that the graph described by <b>parent</b> is a rooted tree with root 0.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{0}</pre></td></tr><tr><td class="statText"><pre>"WW"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Masha"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">As the root is white, Masha may select the root together with any subset of other vertices in the tree.
The optimal strategy for her is to select and toggle both vertices.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{0,0}</pre></td></tr><tr><td class="statText"><pre>"BWW"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Petya"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Here the root is black.
Masha must select and toggle exactly one of the leaves on her first turn.
Then, Petya will select the other leaf and win the game.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{0,1,2,3}</pre></td></tr><tr><td class="statText"><pre>"BBBBB"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Petya"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">In this test case there are no white nodes, so Masha can't even make the first move.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{5,5,6,6,0,0}</pre></td></tr><tr><td class="statText"><pre>"BBWWBWW"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Petya"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Here we have a black root that has two children with identical subtrees. Petya can mirror Masha's moves. This will guarantee him a victory.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{5,5,6,6,0,0}</pre></td></tr><tr><td class="statText"><pre>"BWWBBBW"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Masha"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">One optimal strategy for Masha:
In the first turn, Masha will select and toggle only the node 6.
Thus, only two white nodes will remain, both of them will be leaves.
After Petya toggles one of them, Masha will toggle the other one and win.
(Note that there are also other winning strategies for Masha in this situation.)</td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>