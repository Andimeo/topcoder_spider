<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">Given a int[] <b>values</b> containing positive integers return (quotes for clarity):<ul><li>"ASCENDING <i>mean</i>" if the numbers are in increasing order and there are no repeated values,</li>
<li>"DESCENDING <i>mean</i>" if the numbers are in decreasing order and there are no repeated values,</li>
<li>"NONASCENDING <i>freq</i>" if the numbers are in decreasing order and contain repeated values,</li>
<li>"NONDESCENDING <i>freq</i>" if the numbers are in increasing order and contain repeated values,</li>
<li>or "NOTHING" if the numbers are none of the above.</li>
</ul>
where <i>mean</i> is a reduced fraction representing the average of the numbers formatted as (quotes for clarity) <i>"numerator/denominator"</i><br>
and <i>freq</i> is the number of times the most frequently occurring value occurred in the sequence.<br>
Neither <i>numerator</i> nor <i>denominator</i> should have any leading zeros.
For example (quotes for clarity):<pre>
<b>values</b> = {1,2,4,11}       return "ASCENDING 9/2" since the average is 18/4 = 9/2
<b>values</b> = {1,2,2,2,3,4}   return "NONDESCENDING 3"  since 2 occurred 3 times
<b>values</b> = {6,5,1}         return "DESCENDING 4/1" since the average is 12/3 = 4/1
<b>values</b> = {5,5,4,4,1}     return "NONASCENDING 2" since 5 occurred twice
<b>values</b> = {1,2,3,4,1}     return "NOTHING" since no other choice is possible
</pre></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">Ordered</td></tr><tr><td class="statText">Method:</td><td class="statText">getType</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String getType(int[] values)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Be sure that you spell everything correctly.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>values</b> must contain between 2 and 50 elements inclusive</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">At least 2 elements of <b>values</b> must be distinct</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>values</b> must be between 1 and 1000 inclusive</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{1,2,4,11}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "ASCENDING 9/2"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Increasing order with no repeats</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{1,2,2,2,3,4}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "NONDESCENDING 3"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Increasing order but the 2 is repeated 3 times</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{6,5,1}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "DESCENDING 4/1"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Decreasing order with no repeats</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{5,5,4,4,1}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "NONASCENDING 2"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Decreasing order but there are repeats</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{1,2,3,4,1}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "NOTHING"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The sequence increases at first but decreases at the end</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">5)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{1000,999,998}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "DESCENDING 999/1"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Decreasing with no repeats</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">6)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{999,1000,1000,1000,1000,1000}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "NONDESCENDING 5"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">7)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{1,1000,1,1000,1,1000}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "NOTHING"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">8)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{1,2,3,4,5,6,7,8,9,10,
11,12,13,14,15,16,17,18,19,20,
21,22,23,24,25,26,27,28,29,30,
31,32,33,34,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,51}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "ASCENDING 638/25"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">9)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{2,2,1}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "NONASCENDING 2"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">10)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{1,2,2}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "NONDESCENDING 2"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>