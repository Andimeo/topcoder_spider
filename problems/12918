<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">For any non-empty sequence of positive integers s1, s2, ..., sK their least common multiple is the smallest positive integer that is divisible by each of the given numbers.
We will use "lcm" to denote the least common multiple.
For example, lcm(3) = 3, lcm(4,6) = 12, and lcm(2,5,7) = 70.<br><br><br>
Given a sequence S, we now define the set LCM(S) as follows:
LCM(S) = { lcm(s1, s2, ..., sk) | s1, s2, ..., sk belong to S, k &gt; 0}.
In words: LCM(S) is the set of all values that can be obtained by selecting some elements of S and computing their least common multiple.
For example, for S={2,3,4} we have LCM(S)={2,3,4,6,12}.<br><br><br>
You are given two int[]s <b>A</b> and <b>B</b>.
Return "Equal" if LCM(<b>A</b>) = LCM(<b>B</b>), and "Not equal" otherwise.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">LCMSet</td></tr><tr><td class="statText">Method:</td><td class="statText">equal</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int[], int[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String equal(int[] A, int[] B)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>A</b> will contain between 1 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>B</b> will contain between 1 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element in <b>A</b> will be between 2 and 1,000,000,000, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element in <b>B</b> will be between 2 and 1,000,000,000, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Elements in <b>A</b> will be distinct.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Elements in <b>B</b> will be distinct.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{2,3,4,12}</pre></td></tr><tr><td class="statText"><pre>{2,3,4,6}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Equal"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">LCM(<b>A</b>) = LCM(<b>B</b>) = {2,3,4,6,12}</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{4,9}</pre></td></tr><tr><td class="statText"><pre>{6,36}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Not equal"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">LCM(<b>A</b>) = {4,9,36}, LCM(<b>B</b>) = {6,36}</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{2,3,5,7,14,105}</pre></td></tr><tr><td class="statText"><pre>{2,3,5,6,7,30,35}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Equal"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{2,3,5,7,14,105}</pre></td></tr><tr><td class="statText"><pre>{2,3,5,6,7,30,36}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Not equal"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97}</pre></td></tr><tr><td class="statText"><pre>{2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Equal"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Note that some of the numbers in the sets LCM(<b>A</b>) and LCM(<b>B</b>) can be huge.
In this case, the largest number in LCM(<b>A</b>) is 2305567963945518424753102147331756070.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">5)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{999999999,1953125,512,1000000000}</pre></td></tr><tr><td class="statText"><pre>{999999999,1953125,512}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Equal"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">6)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{999999998,999999999,1000000000}</pre></td></tr><tr><td class="statText"><pre>{999999999,1000000000}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Not equal"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>