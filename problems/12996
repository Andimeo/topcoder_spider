<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>
Cat Taro has a board with N rows and <b>M</b> columns divided into unit cells.
He wants to place some checkers on the board. 
Each cell can contain at most one checker.
The following conditions must be fulfilled:
</p>
<ul><li>
For each row i, there is exactly one cell with a checker among the first <b>left</b>[i] cells of the i-th row.
</li>
<li>
For each row i, there is exactly one cell with a checker among the last <b>right</b>[i] cells of the i-th row.
</li>
<li>
For each column, there is at most one cell with a checker in that column.
</li>
</ul><p>
</p>
<p>
You are given the int <b>M</b> and the two int[]s <b>left</b> and <b>right</b> (each with N elements).
Let X be the total number of valid ways to place checkers.
Return the value (X modulo 1,000,000,007).
</p></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">TaroCheckers</td></tr><tr><td class="statText">Method:</td><td class="statText">getNumber</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int[], int[], int</td></tr><tr><td class="statText">Returns:</td><td class="statText">int</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int getNumber(int[] left, int[] right, int M)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>left</b> will contain between 1 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>right</b> and <b>left</b> will contain the same number of elements.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>M</b> will be between 2 and 200, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>left</b> and <b>right</b> will be between 1 and <b>M</b>, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">For each valid i, the value <b>left</b>[i]+<b>right</b>[i] will be less than or equal to M.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{1, 2}</pre></td></tr><tr><td class="statText"><pre>{2, 1}</pre></td></tr><tr><td class="statText"><pre>4</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 1</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Only one way to place checkers is possible in this case:
<p>
</p>
<img src="http://www.topcoder.com/contest/problem/TaroCheckers/img01.png"><p>
</p>
(In each row, the first <b>left</b>[i] and the last <b>right</b>[i] cells have a darker background.)</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{1, 4, 2}</pre></td></tr><tr><td class="statText"><pre>{2, 3, 1}</pre></td></tr><tr><td class="statText"><pre>7</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 6</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{4, 7, 4}</pre></td></tr><tr><td class="statText"><pre>{7, 4, 7}</pre></td></tr><tr><td class="statText"><pre>11</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 5760</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{10, 25, 100, 74}</pre></td></tr><tr><td class="statText"><pre>{100, 47, 27, 100}</pre></td></tr><tr><td class="statText"><pre>200</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 796178974</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{21, 99, 87, 12, 138, 16, 78, 36, 98, 40, 57, 10, 61, 100, 8, 110, 96, 9, 69, 110, 14, 71}</pre></td></tr><tr><td class="statText"><pre>{83, 8, 25, 169, 1, 89, 109, 89, 19, 112, 39, 112, 87, 66, 116, 16, 41, 97, 52, 70, 111, 23}</pre></td></tr><tr><td class="statText"><pre>190</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 235017573</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">5)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{3, 37, 26, 50, 8, 3, 38, 15, 58, 47, 35, 8, 27, 22, 5}</pre></td></tr><tr><td class="statText"><pre>{19, 26, 62, 15, 84, 13, 6, 46, 22, 53, 23, 8, 29, 55, 6}</pre></td></tr><tr><td class="statText"><pre>102</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 528024858</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>