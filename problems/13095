<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">Guts is a slow loris who likes to play with strings.
<br><br>
String C is obtained by <i>shuffling</i> strings A and B if we can create C by repeatedly taking either the first character of A or the first character of B. Formally, string C is obtained by shuffling strings A and B if length(C) = length(A) + length(B) and there are sequences of integers X and Y such that:
<ul><li>length(X) = length(A) and length(Y) = length(B).</li>
<li>For each valid i, X[i] &lt; X[i+1].</li>
<li>For each valid i, Y[i] &lt; Y[i+1].</li>
<li>For each valid i and j, X[i] != Y[j].</li>
<li>For each valid i, C[X[i]] = A[i].</li>
<li>For each valid i, C[Y[i]] = B[i].</li>
</ul>

You are given Strings <b>S</b>, <b>A</b>, and <b>B</b>. Strings <b>A</b> and <b>B</b> contain only letters, string <b>S</b> can also contain multiple copies of the '?' (question mark) character. The '?' is a wildcard that represents any single letter. Guts wants to shuffle strings <b>A</b> and <b>B</b> in such a way that the resulting string matches <b>S</b>.
<br><br>
Replace each '?' with a letter in such a way that the resulting string <b>S</b> can be obtained by shuffling <b>A</b> and <b>B</b>. Return the resulting string <b>S</b>. If there are multiple solutions, return the lexicographically smallest one. If there is no solution, return an empty String instead.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">MergeStrings</td></tr><tr><td class="statText">Method:</td><td class="statText">getmin</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String, String, String</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String getmin(String S, String A, String B)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Given two distinct strings X and Y such that length(X)=length(Y), the lexicographically smaller one is the one that has a character with a smaller ASCII value on the first position on which they differ.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>S</b> will contain between 1 and 50 characters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">The number of characters in <b>S</b> will be same as the total number of characters of <b>A</b> and <b>B</b>.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each character in <b>S</b> will be an uppercase letter ('A'-'Z') or '?'.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each character in <b>A</b> and <b>B</b> will be an uppercase letter ('A'-'Z').</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"??CC??"</pre></td></tr><tr><td class="statText"><pre>"ABC"</pre></td></tr><tr><td class="statText"><pre>"BCC"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "ABCCBC"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Out of all strings that can be obtained by shuffling "ABC" and "BCC", only two match "??CC??": the strings "ABCCBC" and "BACCBC". The string "ABCCBC" is the lexicographically smaller of the two.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"WHAT?"</pre></td></tr><tr><td class="statText"><pre>"THE"</pre></td></tr><tr><td class="statText"><pre>"WA"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: ""</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">None of the strings obtained by shuffling "THE" and "WA" matches "WHAT?".</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"PARROT"</pre></td></tr><tr><td class="statText"><pre>"PARROT"</pre></td></tr><tr><td class="statText"><pre>""</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "PARROT"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">One of <b>A</b> and <b>B</b> may sometimes be empty.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"???????????"</pre></td></tr><tr><td class="statText"><pre>"AZZAA"</pre></td></tr><tr><td class="statText"><pre>"AZAZZA"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "AAZAZZAAZZA"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"????K??????????????D???K???K????????K?????K???????"</pre></td></tr><tr><td class="statText"><pre>"KKKKKDKKKDKKDDKDDDKDKK"</pre></td></tr><tr><td class="statText"><pre>"KDKDDKKKDDKDDKKKDKDKKDDDDDDD"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "KDKDKDKKKDDKDDKKKDKDKKDKDDDKDDDKKDKKKDKKDDKDDDKDKK"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>