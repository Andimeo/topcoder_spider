<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">A prefix code is a set of words in which no word is a prefix of another word in the set.
A word <i>v</i> is said to be a prefix of a word <i>w</i> if <i>w</i> starts with <i>v</i>.<br><br>
An important property of prefix codes is that they are uniquely decodable.
Prefix codes are commonly used - telephone numbers are an everyday example (as you probably don't
want a stranger to pick up the phone call you make just because his number is a prefix of the
number you intend to dial). Prefix codes are also very popular in computer science, the Huffman code
used for data compression being a famous example.<br><br>
Given a String[] <b>words</b>, return the String "Yes" if that set of words
is a prefix code or return the String <tt>"No, i"</tt> if it is not, where <tt>i</tt> is replaced by
the lowest 0-based index of a String in <b>words</b> that is a prefix of another String in <b>words</b>.
(That index should have no extra leading zeros.)</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">PrefixCode</td></tr><tr><td class="statText">Method:</td><td class="statText">isOne</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String isOne(String[] words)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Letters are case sensitive (e.g. "No" is not a prefix of "not").</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Do not forget the single space between the comma and i in "No, i"</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>words</b> contains between 1 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>words</b> contains between 1 and 50 characters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>words</b> consists only of characters '0'-'9', 'A'-'Z' and 'a'-'z', inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">No two elements of <b>words</b> are equal (as the input represents a set).</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"trivial"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Yes"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">As there is only one word, no word can be the prefix of another, so this is a trivial example of a prefix code.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"10001", "011", "100", "001", "10"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "No, 2"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">"100" (at index 2) and "10" (at index 4) are both a prefix of "10001" and "10" is also a prefix of "100", therefore it is no prefix code. "100" is the prefix with the lowest index.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"no", "nosy", "neighbors", "needed"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "No, 0"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"1010", "11", "100", "0", "1011"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Yes"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"No", "not"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Yes"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>