<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">Most large software packages have some logging options built in to them.  Many times there are different logging 
levels that can be set.  Your task is to write a class to perform this logging.  Your class will be given a number 
of messages, each associated with some priority.  If the priority of a message is equal to or higher 
than the logging priority, then you should log that message, otherwise it should be ignored.  You will be given a 
String[], <b>messages</b>, each of whose elements represents a single message, a String[], <b>priorities</b>, each of whose elements represents the priority of the message with the 
same index, and a String[], <b>precedence</b>, giving the order of the priorities.  
Element 0 of <b>precedence</b> represents the lowest priority, element 1 the next lowest, and so on.  Lastly, you 
will be given a String, <b>loggingPriority</b>, representing the lowest priority of messages to log.
<b>loggingPriority</b> and each element of <b>priorities</b> will be formatted as "&lt;priority&gt;", or "&lt;priority&gt; &lt;num&gt;", where &lt;priority&gt; is an element of <b>precedence</b> and &lt;num&gt; is an integer between 0 and 100, inclusive.  If &lt;num&gt; is not present, it is the same as if it were a 0.
<br><br>
You should return a String[] containing all of 
the messages with sufficiently high priority to be logged, in the order they were given to you.  A message has sufficiently high priority to be logged if the corresponding &lt;priority&gt; is higher than that in <b>loggingPriority</b>, or if the corresponding &lt;priority&gt; is the same, and &lt;num&gt; is greater than or equal to that in <b>loggingPriority</b>.  Additionally, priorities are case insensitive.
<br><br>
So, if <b>precedence</b> is {"info","DEBUG","error","fatal"}, and <b>loggingPriority</b> is "debug 1", then messages with priorities of "debug 1", "debug 43", "Error", and "fatal 1" would all be logged.  Messages with priorities of "debug 0", "debug", "info", and "info 100" would not be logged.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">Logger</td></tr><tr><td class="statText">Method:</td><td class="statText">log</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[], String[], String[], String</td></tr><tr><td class="statText">Returns:</td><td class="statText">String[]</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String[] log(String[] messages, String[] priorities, String[] precedence, String loggingPriority)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>loggingPriority</b> and each element of <b>priorities</b> will be formatted as "&lt;priority&gt;" or "&lt;priority&gt; &lt;num&gt;"</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each &lt;priority&gt; in <b>priorities</b> and <b>loggingPriority</b> will be an element of <b>precedence</b>, ignoring case.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each &lt;num&gt; in <b>priorities</b> and <b>loggingPriority</b> will be between 0 and 100, inclusive, with no extraneous leading 0's.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>precedence</b> will contain no repeated elements, ignoring case.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>precedence</b> will contain between 1 and 40 letters ('a'-'z' and 'A'-'Z'), inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>messages</b> will contain between 0 and 50 characters, inclusive, each of which will be between ASCII 32 and 126, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>priorities</b> and <b>messages</b> will contain the same number of elements.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>priorities</b>, <b>messages</b>, and <b>precedence</b> will each contain between 1 and 50 elements, inclusive.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"in doit()...","n=9","n=13","x=-3","divide by 0",
 "index out of bounds","n=-1","this shouldn't happen","bailing out"}</pre></td></tr><tr><td class="statText"><pre>{"info 3","debug","debug","debug 3","error","ERROR 5","debug 2","critical","fatal 100"}</pre></td></tr><tr><td class="statText"><pre>{"info","debug","exceptional","error","critical","fatal"}</pre></td></tr><tr><td class="statText"><pre>"error 1"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: { "index out of bounds",  "this shouldn't happen",  "bailing out" }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">All of the messages with logging level of "error 1" or higher should be logged.  Note that the logging level is case insensitive, so "ERROR 5" is the same as "error 5"</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"in doit()...","n=9","n=13","x=-3","divide by 0",
 "index out of bounds","n=-1","this shouldn't happen","bailing out"}</pre></td></tr><tr><td class="statText"><pre>{"info 3","debug","debug","debug 3","error","ERROR 5","debug 2","critical","fatal 100"}</pre></td></tr><tr><td class="statText"><pre>{"info","debug","exceptional","error","critical","fatal"}</pre></td></tr><tr><td class="statText"><pre>"debug 2"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 
{ "x=-3",
 "divide by 0",
 "index out of bounds",
 "n=-1",
 "this shouldn't happen",
 "bailing out" }</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"1","2","3",""}</pre></td></tr><tr><td class="statText"><pre>{"A","b","C","d"}</pre></td></tr><tr><td class="statText"><pre>{"a","b","c","D"}</pre></td></tr><tr><td class="statText"><pre>"C"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: { "3",  "" }</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>