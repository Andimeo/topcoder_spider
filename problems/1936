<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">
A CongruenceLock is a lock which works as follows. It displays a current status which is a number between 0 and 99999, inclusive.

The lock opens if a specific status is reached.

There are a number of buttons, each labeled with a number between 1 and 99999, inclusive.

When a button labeled with the number b is pressed, the new status of the lock becomes (current status + b) mod 100000.

<br><br>

Given an int <b>current</b>, the current status of the lock, an int <b>target</b>, the status at which the lock opens, and a int[] <b>buttons</b>, the numbers labeled on the buttons, return the minimum number of button presses necessary to open the lock. If it is not possible to open the lock, return -1 instead.
Each button can be pressed multiple times.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">CongruenceLock</td></tr><tr><td class="statText">Method:</td><td class="statText">minPushes</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int, int, int[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">int</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int minPushes(int current, int target, int[] buttons)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">In C++, C#.NET and Java, the expression <i>(a + b) mod 100000</i> can be written as <tt>(a + b) % 100000</tt>.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">In VB.NET, the expression <i>(a + b) mod 100000</i> can be written as <tt>(a + b) Mod 100000</tt>.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>current</b> is between 0 and 99999, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>target</b> is between 0 and 99999, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>buttons</b> contains between 1 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>buttons</b> is between 1 and 99999, inclusive.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>10000</pre></td></tr><tr><td class="statText"><pre>10004</pre></td></tr><tr><td class="statText"><pre>{1}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 4</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The button labeled with "1" is pushed 4 times.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>99880</pre></td></tr><tr><td class="statText"><pre>89</pre></td></tr><tr><td class="statText"><pre>{100, 3}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 5</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The button labeled with "100" is pushed 2 times and the button labeled with "3" is pushed 3 times.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>11111</pre></td></tr><tr><td class="statText"><pre>22222</pre></td></tr><tr><td class="statText"><pre>{4, 6, 2222, 3456}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: -1</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>0</pre></td></tr><tr><td class="statText"><pre>1</pre></td></tr><tr><td class="statText"><pre>{3}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 66667</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>172</pre></td></tr><tr><td class="statText"><pre>172</pre></td></tr><tr><td class="statText"><pre>{1, 2, 3, 5, 7}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 0</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>