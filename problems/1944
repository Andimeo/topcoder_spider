<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">When playing many classic role playing games you often write die rolls in the form "ndx", where n indicates the number of dice of size x to be rolled.  A die of size x is an x-sided die that has a distinct number between 1 and x, inclusive, on each of its sides.  For example, "2d8" would mean "roll two eight sided dice".  Given a String[] representing the dice to roll, return a int[] representing the minimum, maximum, and average die rolls (in that order).  Round the value of the average die roll down to the highest integer less than or equal to the actual value.
For example, the input {"1d8","3d4","2d6"} would have a minimum of 6 (if all the dice turned up ones), a maximum of 32 (if all the dice turned up their highest values), and an average of 19.  The return value would be {6, 32, 19}.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">RPG</td></tr><tr><td class="statText">Method:</td><td class="statText">dieRolls</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">int[]</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int[] dieRolls(String[] dice)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>dice</b> will contain between 1 and 5 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>dice</b> will be formatted "ndx" (quotes for clarity only), where 'n' is an integer between 1 and 10, inclusive, 'd' is the character 'd', and 'x' is an integer between 2 and 20, inclusive.  Neither 'n' nor 'd' will have leading zeros.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"3d6"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: { 3,  18,  10 }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Standard roll for creating characters stats in a popular RPG.  The minimum value is when three 1's are rolled, the maximum value is when all 6's are rolled, and the average value is given by 3*(6+1)/2, which rounds down to 10.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"3d4","1d6"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: { 4,  18,  11 }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Be careful not to round the value of intermediate results.  The average roll of "3d4" is 3*(1+4)/2=7.5, and the average roll of "1d6" is 1*(1+6)/2=3.5.  The average of them both is 11, but rounding before adding them together will yield 10, which is incorrect.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"6d5","10d10","10d20"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: { 26,  330,  178 }</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"1d2","2d2","4d2","6d2","8d2"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: { 21,  42,  31 }</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>