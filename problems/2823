<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><i>This problem contains HTML superscripts which may not display properly for plugin users. Please use the applet to view the problem statement and examples</i>

<p>You are given a list of integer intervals, <b>ranges</b>, where each interval is specified by a String of the form "&lt;low&gt;-&lt;high&gt;" (quotes for clarity). Here "&lt;low&gt;" and "&lt;high&gt;" represent non-negative integers (sequences of characters between '0' and '9' inclusive with no leading zeros) which are separated by a single hyphen '-'.
</p>
<p>
Your task is to find the largest integer that is in at least one of the intervals and is a perfect cube. Return this integer in a String with no extra leading zeros and only the digits '0'-'9'. In other words, find the largest integer in the intervals that is equal to n<sup>3</sup> for some integer n. If there is no perfect cube in the intervals, return the empty string, "" (quotes for clarity).</p>
<p>
For example {"1-1000000000001"} would return "1000000000000" which is 10000<sup>3</sup>.
</p>
</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">BigCube</td></tr><tr><td class="statText">Method:</td><td class="statText">largestCube</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String largestCube(String[] range)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">C++ users: the 64 bit integer type is <b>long long</b>.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>range</b> will have between 1 and 50 elements inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>range</b> will contain between 3 and 31 characters inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>range</b> will be of the form "&lt;low&gt;-&lt;high&gt;" where &lt;low&gt; and &lt;high&gt; are separated by exactly one hyphen, '-'.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each character of &lt;low&gt; and &lt;high&gt; will be a digit between '0' and '9' inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">&lt;low&gt; and &lt;high&gt; will contain no leading zeros.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">&lt;low&gt; and &lt;high&gt; will be between 0 and 1000000000000000000 (1e15) inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">&lt;low&gt; will be less than or equal to &lt;high&gt;</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"1-1000000000001"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "1000000000000"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The example from above: 10000<sup>3</sup></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"10-999999999999990","11-999999999999991","12-999999999999992",
 "13-999999999999993","14-999999999999994","15-999999999999995",
 "16-999999999999996","17-999999999999993","18-999999999999994",
 "19-999999999999999"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "999970000299999"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">99999<sup>3</sup></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"0-3","10-20","30-60","80-120"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "1"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"999700030000-999999999999","999400119993-999700029998",
 "999100269974-999400119991","998800479937-999100269972"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: ""</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"0-0","2-2","3-3","4-4","5-5","6-6","7-7","9-9","10-10","12-12",
 "14-14","16-16","18-18","20-20","22-22","24-24","26-26","28-28",
 "30-30","32-32","34-34","36-36","38-38","40-40","42-42","44-44",
 "46-46","48-48","50-50","52-52","54-54","56-56","58-58","60-60",
 "62-62","65-65","67-67","69-69","71-71","73-73","75-75","77-77",
 "79-79","81-81","83-83","85-85","87-87","89-89","99-99",
  "999970000300000-999999999999999" }
 </pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "0"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>