<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>My shoelace broke the other day.  I was too lazy to take it out and figure out how long it was, so I decided to calculate the length based on the number of eyelets and their separation.</p>

<p>The "horizontal" distance between the eyelets can increase or decrease from the bottom to the top of the shoe.  The <b>startWidth</b> is how far apart they are at the bottom (near the toes) and the <b>endWidth</b> is how far apart they are at the top (near the tongue of the shoe).  This distance increases (or decreases) linearly from bottom to top.  Furthermore, the "vertical" distance, <b>spread</b>, between eyelets is constant.</p>

<p>Write a method, calculate, which calculates the length of the entire shoelace, given the initial distance between the eyelets (<b>startWidth</b>), the final distance between the eyelets (<b>endWidth</b>), distance between each pair of vertically adjacent eyelets (<b>spread</b>) and the number of <i>pairs</i> of eyelets (<b>numPairs</b>).</p>

<p>You should assume all laces follow this general pattern:</p>

<pre>
  |----| &lt;- startWidth  

  O----O    -
   \  /     |
    \/      | &lt;- spread
    /\      |
   /  \     |
  O    O    -
   \  /
    \/
    /\
   /  \
  O    O

  |----| &lt;- endWidth
</pre>
<p>In this illustration, <b>startWidth</b> and <b>endWidth</b> are identical, and <b>numPairs</b> is 3.</p></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">ShoelaceLength</td></tr><tr><td class="statText">Method:</td><td class="statText">calculate</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int, int, int, int</td></tr><tr><td class="statText">Returns:</td><td class="statText">double</td></tr><tr><td class="statText">Method signature:</td><td class="statText">double calculate(int startWidth, int endWidth, int spread, int numPairs)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>startWidth</b> may be greater than, equal to, or less than <b>endWidth</b>.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Your return value must have a relative or absolute error less than 1e-9. </td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">The units of measurement are irrelevant.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">The length of lace that it takes to go around or through each eyelet should be ignored.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">The length of lace needed to actually tie a knot is not included.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>numPairs</b> is the number of PAIRS of eyelets, and will be between 2 and 50, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>startWidth</b>, <b>endWidth</b>, and <b>spread</b> will each be between 1 and 99, inclusive.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>2</pre></td></tr><tr><td class="statText"><pre>2</pre></td></tr><tr><td class="statText"><pre>1</pre></td></tr><tr><td class="statText"><pre>2</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 6.47213595499958</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">These are my topsiders.  Remember to add the start width across the bottom pair of eyelets.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>10</pre></td></tr><tr><td class="statText"><pre>1</pre></td></tr><tr><td class="statText"><pre>1</pre></td></tr><tr><td class="statText"><pre>10</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 111.1786186482248</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>1</pre></td></tr><tr><td class="statText"><pre>10</pre></td></tr><tr><td class="statText"><pre>1</pre></td></tr><tr><td class="statText"><pre>10</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 102.17861864822481</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Nearly the same configuration as the previous case, except the width goes from 1 to 10 instead of 10 to 1.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>1</pre></td></tr><tr><td class="statText"><pre>1</pre></td></tr><tr><td class="statText"><pre>1</pre></td></tr><tr><td class="statText"><pre>2</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 3.8284271247461903</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>1</pre></td></tr><tr><td class="statText"><pre>99</pre></td></tr><tr><td class="statText"><pre>19</pre></td></tr><tr><td class="statText"><pre>2</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 107.97663296253066</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>