<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">You will be given a String <b>str</b> consisting of lowercase letters.  You will return a String[] containing elements x and y in that order.  The returned Strings x and y must satisfy:
<ul><li>1) The string xy (x with y concatenated on the end) must equal <b>str</b>.</li>
<li>2) The number of a's in x must equal the number of b's in y.</li>
<li>3) If multiple solutions are possible, use the one that maximizes the length of x.</li>
</ul>  See the examples for further clarifications.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">EqualSubstrings</td></tr><tr><td class="statText">Method:</td><td class="statText">getSubstrings</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String</td></tr><tr><td class="statText">Returns:</td><td class="statText">String[]</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String[] getSubstrings(String str)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>str</b> will contain between 1 and 50 characters inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each character in <b>str</b> will be a lowercase letter ('a'-'z').</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"aaabbb"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: { "aaa",  "bbb" }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Here we can split <b>str</b> right down the center.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"bbbaaa"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: { "bbb",  "aaa" }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Again the center works.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"bbbbbb"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: { "bbbbbb",  "" }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">y can be empty.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"aaaaaa"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: { "",  "aaaaaa" }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">x can be empty.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"abjlkbjalkbjaljsbljbalb"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: { "abjlkbjalkbjaljs",  "bljbalb" }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Make sure to maximize the length of x.</td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>