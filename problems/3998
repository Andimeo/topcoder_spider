<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">On a weird chess board, each row can have a different number of columns.  Element k of <b>cols</b> will give the number of columns in row k.  Each row is flush left, so the right side can look quite ragged.  In a <i>valid</i> assignment of n rooks to the weird chess board, no two rooks can share a row or column.  In such an assignment, an unoccupied square is considered <i>special</i> if there is no rook to its right in the same row and no rook below in the same column (element 0 of <b>cols</b> describes the highest row).  You are going to return a String containing a single-space delimited list of pairs.  The pair (quotes for clarity) "r,f" should appear in the final string if and only if there is a valid assignment with r rooks such that f squares are special.  The pairs should be sorted in nondecreasing order by r values.  If a tie occurs, the lower f value should come first.  The returned value should contain no repeated pairs.  See the examples for further clarifications.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">WeirdRooks</td></tr><tr><td class="statText">Method:</td><td class="statText">describe</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String describe(int[] cols)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>cols</b> will contain between 1 and 8 elements inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>cols</b> will be between between 1 and 10 inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>cols</b> will be sorted in non-descending order.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{3,3,3}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "0,9 1,4 1,5 1,6 1,7 1,8 2,1 2,2 2,3 2,4 2,5 2,6 3,0 3,1 3,2 3,3"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">If no rooks are placed on the board, all 9 squares are special.  The following diagram depicts the scenario where 3 rooks are placed, and no squares are special. <pre> 
  R..
  .R.
  ..R </pre></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{1,2,3}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "0,6 1,3 1,4 1,5 2,1 2,2 2,3 3,0"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The case with 2 rooks and 3 special squares is depicted below.<pre>
  R
  .R
  ...</pre></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{1}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "0,1 1,0"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{2,9}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "0,11 1,2 1,3 1,4 1,5 1,6 1,7 1,8 1,9 1,10 2,0 2,1 2,2 2,3 2,4 2,5 2,6 2,7 2,8"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>