<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">We have a collection of Strings, and we want to right justify them.
Given a String[] <b>text</b>, your task is to return
a String[] containing the same Strings, right justified, in the same order as they
appear in <b>text</b>.
<p>
The returned Strings should be padded on the left with space characters 
so that they are all the same length as the longest String in <b>textIn</b>.
</p>

</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">JustifyText</td></tr><tr><td class="statText">Method:</td><td class="statText">format</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">String[]</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String[] format(String[] text)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>text</b> will contain between 1 and 50 elements inclusive</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">each element of <b>text</b> will contain only uppercase letters 'A'-'Z'</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">each element of <b>text</b> will contain between 1 and 50 characters inclusive</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"BOB","TOMMY","JIM"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {"  BOB", "TOMMY", "  JIM" }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The longest String is "TOMMY" which has 5 characters. So the returned Strings all contain exactly 5 characters. </td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"JOHN","JAKE","ALAN","BLUE"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {"JOHN", "JAKE", "ALAN", "BLUE" }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">No padding is necessary since they all contain the same number of characters.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"LONGEST","A","LONGER","SHORT"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {"LONGEST", "      A", " LONGER", "  SHORT" }</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>