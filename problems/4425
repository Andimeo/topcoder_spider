<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>You have a rectangular sheet of paper, from which you wish to cut a pattern.  The pattern is a figure composed of unit squares.  You wish to cut out as many instances of the pattern as possible from the sheet of paper.  The pattern may be cut out exactly as is, or may be rotated 90 or 180 degrees (in either direction).</p>

<p>You are given ints <b>height</b> and <b>width</b>, describing the size of the sheet of paper, and a String[] <b>pattern</b> that defines the pattern you want to cut out.  <b>pattern</b> is composed of 'X' characters and period ('.') characters, where 'X' is part of the pattern, and '.' is not.  The following respresents the 7 valid patterns with 4 'X's (ignoring rotations of the same pattern):</p>

<pre>
{"XXXX"}

{"XXX",
 "X.."}

{"XXX",
 "..X"}

{"XXX",
 ".X."}

{"XX.",
 ".XX"}

{"X.",
 "XX",
 ".X"}

{"XX",
 "XX"}
</pre>

<p>So, for the T-shaped pattern, from a 4 x 5 sheet of paper, you could cut out the pattern four times.  One way would be like this:</p>

<pre>
A.BBB
AA.BC
AD.CC
DDD.C
</pre>

<p>You are to return an int indicating the maximum number of times the given pattern can be cut from the sheet of paper.</p>
</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">PatternCutting</td></tr><tr><td class="statText">Method:</td><td class="statText">getMax</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int, int, String[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">int</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int getMax(int width, int height, String[] pattern)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>height</b> and <b>width</b> will be between 1 and 6, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>pattern</b> will contain between 1 and 6 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>pattern</b> will contain between 1 and 6 characters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>pattern</b> will contain the same number of characters.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each character of each element of <b>pattern</b> will be 'X' or '.'.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">The first character of the first element of <b>pattern</b> will be 'X'.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each block of the pattern will be connected (horizontally or vertically) to the rest of the pattern.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">The pattern will not contain any empty rows or columns (it will not be "padded").</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>4</pre></td></tr><tr><td class="statText"><pre>5</pre></td></tr><tr><td class="statText"><pre>{"XXX",
 ".X."}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 4</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">As in the problem statement, you can cut out the T pattern four times.
</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>6</pre></td></tr><tr><td class="statText"><pre>5</pre></td></tr><tr><td class="statText"><pre>{"XX",
 "XX"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 6</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Although there are 30 unit squares in the paper and only four used by our pattern, we are going to waste at least 6 squares from which we cannot cut another pattern.  We can cut out no more than 6 of the pattern.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>4</pre></td></tr><tr><td class="statText"><pre>3</pre></td></tr><tr><td class="statText"><pre>{"XXXXX",
 "XX..."}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 0</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Here, our pattern is simply too large to cut from the paper, so we can't cut it out at all.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>6</pre></td></tr><tr><td class="statText"><pre>6</pre></td></tr><tr><td class="statText"><pre>{"XXX",
 "X.X",
 "XXX"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 4</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>