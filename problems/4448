<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>Massive numbers can be represented using the exponent notation. For example, 3^100 is 3 raised to the power of 100. 3 is the base and 100 is the exponent.</p>

<p>Suppose we want to compare two massive numbers. Instead of computing the exact value of each number we can rely on a useful mathematical trick. Suppose m = a^b and n = c^d are two massive numbers. Let R be a relationship operator: less, equal or greater. Then we have the following:</p>

<pre>If b*Log(a) R d*Log(c) then it is also the case that m R n,
where a, b, c, d, m and n are defined above.</pre>

<p>So which is greater: 3^100 or 2^150? Let's do the math. 100*Log(3) = 47.7..., 150*Log(2) = 45.2.... Since 47.7 &gt; 45.2, our rule tells us that 3^100 &gt; 2^150.</p>

<p>Given two numbers <b>numberA</b> and <b>numberB</b> return the larger number formatted exactly the same as the input. <b>numberA</b> and <b>numberB</b> will be formatted as &lt;base&gt;^&lt;exponent&gt;. Constraints will ensure that <b>numberA</b> and <b>numberB</b> are not equal.</p></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">MassiveNumbers</td></tr><tr><td class="statText">Method:</td><td class="statText">getLargest</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String, String</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String getLargest(String numberA, String numberB)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">In Java, the log of a number can be found with Math.log().</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">In C++, the log of a number can be found with log().</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">In C# and VB, the log of a number can be found with Math.Log().</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>numberA</b> and <b>numberB</b> will contain between 3 and 9 characters inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>numberA</b> and <b>numberB</b> will be formatted as &lt;base&gt;^&lt;exponent&gt;, where &lt;base&gt; and &lt;exponent&gt; are integers between 1 and 1000 inclusive. &lt;base&gt; and &lt;exponent&gt; cannot have leading zeroes.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">The relative difference between b*Log(a) and d*Log(c) (where a, b, c and d are defined in the problem statement) will be at least 1e-6.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"3^100"</pre></td></tr><tr><td class="statText"><pre>"2^150"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "3^100"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Above example.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"1^1000"</pre></td></tr><tr><td class="statText"><pre>"2^1"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "2^1"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">numberA is equal to 1, while numberB is equal to 2.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"893^605"</pre></td></tr><tr><td class="statText"><pre>"396^906"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "396^906"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"999^1000"</pre></td></tr><tr><td class="statText"><pre>"1000^999"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "999^1000"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>