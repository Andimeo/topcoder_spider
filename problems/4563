<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>
You are choosing the name for your company. You have several proposals, and you want to choose the easiest to remember. Thus you calculate a special <i>remembering value</i> for each word, and choose the word with the smallest <i>remembering value</i>. 
</p>
<p>
You can calculate the <i>remembering value</i> of the word in two steps. First, you should find all maximal groups of consecutive vowels (if the word is "DoUble", "oU" and "e" are the two groups). Each such group adds 1 point to the <i>remembering value</i>. Second, you should find all maximal groups of consecutive consonants. Each such group adds (2*(Length of the group) - 1) points to the <i>remembering value</i>.
</p>
<p>
Given a list of all proposals, return the one with the smallest <i>remembering value</i>. In case of a tie, return the proposal which comes first in the input.
</p></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">CompanyName</td></tr><tr><td class="statText">Method:</td><td class="statText">shortestProposal</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String shortestProposal(String[] proposals)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">For the purposes of this problem, we are always considering 'Y' to be a consonant. The vowels are only 'A', 'a', 'E', 'e', 'I', 'i', 'O', 'o', 'U' and 'u'.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>proposals</b> will contain between 1 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>proposals</b> will contain between 3 and 50 characters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>proposals</b> will contain only letters ('a'-'z' and 'A'-'Z').</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"Top", "Coder", "SRM"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Top"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The <i>remembering value</i> of "Top" is 3, for "Coder" and "SRM" it is 5.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"SRM", "TCO", "TCCC"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "TCO"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"java", "CPP", "CSharp", "VBasic"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "java"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"aaa", "AAa", "aaA", "AAA", "AaA", "Aaa"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "aaa"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The <i>remembering value</i> of all proposals is 1. You should return the first one.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"bIwuZFsHVQUWIABhgXYiyBmUgwSFvUfJKcGrKUb", "CbjspPBtuDwlyxNMaJBIEzVDPipR", "wGiqORBPEaKOYVwtiCmKHLkBS",
 "aBpRqKPBtxYNuGMhtXmgWxT", "sALonbrAMgOESizcTNhgBeAT", "PpnecUCIPdyyeOvZwVHygGgjthT", "jsiAzTEiBiXqgeSGd",
 "fxUtmmfbpQoYMPenNaTtKKoCYaIhwHBJePAFtvhVPDQHiLjDcr", "jIIOwgKw"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "jIIOwgKw"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>