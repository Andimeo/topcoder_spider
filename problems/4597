<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>Two players play a game on a <b>n</b>*<b>n</b> chessboard. Starting with the first player, they take alternate turn putting figures on empty cells. During each turn, a player will place a figure on an empty cell in such a way that it can't be captured by any of the figures already on the board. Each figure can capture as a rook and as a knight. Rooks capture backwards, forwards, and sideways. Knights capture in an L-shape (two consecutive squares backwards, forwards, or sideways, and then one square in a perpendicular direction).</p>

<p>A player wins the game when the other player cannot make a move. You are given the first moves of such a game, and you are to determine who will win if both players are trying their best to win.</p>

<p>You are given a String[] <b>moves</b> representing the moves that have already been made. Each element of <b>moves</b> will be formatted as "xX", where x is a lowercase letter representing the vertical position and X is a number representing the horizontal position. Return one of three possible answers:</p><ul><li> "First player wins", if the first player will win or has already won (there are no valid moves left, and the first player made the last move). </li>
<li> "Second player wins", if the second player will win or has already won (there are no valid moves left, and the second player made the last move). </li>
<li> "Invalid input", if the input is invalid (a figure is placed on a previously occupied square, or a figure can be captured by another figure). </li> </ul></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">GameEnding</td></tr><tr><td class="statText">Method:</td><td class="statText">result</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int, String[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String result(int n, String[] moves)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">The moves that are given in the input may not have been the best moves, but all subsequent moves will be the best possible moves (meaning that if there are moves leading to victory, the player must choose one of them).</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>n</b> will be between 1 and 7, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>moves</b> will contain between 0 and <b>n</b> elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>moves</b> will be formatted as "xX".</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each x is a lowercase letter between 'a' and 'a'+n-1, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each X is a digit between 1 and n, inclusive.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>3</pre></td></tr><tr><td class="statText"><pre>{"b2"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "First player wins"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The first player makes the first move at b2. After that, only the four corner cells are available for valid moves. The second player places a figure on one of those corner cells. The first player then places a figure on the opposite corner. There are no more moves available to the second player, so the first player wins.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>4</pre></td></tr><tr><td class="statText"><pre>{"a2","b3"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Second player wins"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Only cells c4 and d1 are available. The first player plays one of them, and the second player plays the other. The first player will then have no valid moves left, so the second player wins.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>4</pre></td></tr><tr><td class="statText"><pre>{"a3","b3"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Invalid input"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The second player made an invalid move. The figure on b3 can be captured by the figure on a3.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>4</pre></td></tr><tr><td class="statText"><pre>{"a1","b2","c3","d4"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Second player wins"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">There are no valid moves left, and the second player made the last move, so he wins.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>7</pre></td></tr><tr><td class="statText"><pre>{}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "First player wins"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">5)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>7</pre></td></tr><tr><td class="statText"><pre>{"b5","g3","f2"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Second player wins"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>