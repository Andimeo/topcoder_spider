<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>There are 3*N pie pieces arranged in a circle. You and Ted are going to eat the whole pie using the following rules. You can choose any piece and eat it, but Ted will eat its left and right neighbors (once a piece is eaten its left and right neighbors become neighbors themselves). This operation is repeated until the whole pie is eaten (in other words N times). You are planning to eat as big a part of the pie as possible.</p>
<p>You will be given int[] <b>pieces</b>. <b>pieces</b>[i] is the size of the i-th piece as a percentage (between 1 and 100). Return the maximum percentage of the pie that you can eat.</p>
</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">PieSharing</td></tr><tr><td class="statText">Method:</td><td class="statText">share</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">int</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int share(int[] pieces)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>pieces</b> will have between 3 and 48 elements, inclusive. </td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">The number of elements in <b>pieces</b> will be divisible by 3.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element in <b>pieces</b> will be between 1 and 100, inclusive. </td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">The elements in <b>pieces</b> will sum up to 100.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{33, 33, 34}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 34</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">You can eat the biggest piece.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{5, 17, 22, 34, 18, 4}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 51</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">You can eat pieces with sizes 34 and 17. </td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{11, 1, 1, 85, 1, 1}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 96</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">You will eat almost the whole pie.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{6, 13, 14, 4, 14, 10, 1, 20, 18}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 48</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>