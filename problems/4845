<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>We must pay <b>D</b> dollars. Unfortunately, we only have bills of two denominations: <b>p1</b> dollars and <b>p2</b> dollars. So, we want to overpay as little as possible.</p>
<p>You will be given ints <b>D</b>, <b>p1</b> and <b>p2</b>. Return the minimum number of dollars greater than or equal to <b>D</b> that can be paid with the given bills.  Assume that we have an infinite supply of both <b>p1</b> and <b>p2</b> dollar bills.</p>
</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">AmountApproximation</td></tr><tr><td class="statText">Method:</td><td class="statText">approximate</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int, int, int</td></tr><tr><td class="statText">Returns:</td><td class="statText">int</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int approximate(int D, int p1, int p2)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>D</b> will be between 1 and 1000000000 (10<sup>9</sup>), inclusive. </td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>p1</b> will be between 1 and 1000000000 (10<sup>9</sup>), inclusive. </td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>p2</b> will be between 1 and 1000000000 (10<sup>9</sup>), inclusive. </td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>17</pre></td></tr><tr><td class="statText"><pre>7</pre></td></tr><tr><td class="statText"><pre>9</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 18</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">18 = 7 * 0 + 9 * 2</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>17</pre></td></tr><tr><td class="statText"><pre>7</pre></td></tr><tr><td class="statText"><pre>13</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 20</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">20 = 7 * 1 + 13 * 1</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>21</pre></td></tr><tr><td class="statText"><pre>7</pre></td></tr><tr><td class="statText"><pre>13</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 21</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">21 = 7 * 3 + 13 * 0</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>37</pre></td></tr><tr><td class="statText"><pre>9</pre></td></tr><tr><td class="statText"><pre>17</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 43</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">43 = 9 * 1 + 17 * 2</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>287341</pre></td></tr><tr><td class="statText"><pre>2345</pre></td></tr><tr><td class="statText"><pre>7253</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 287398</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">287398 = 2345 * 104 + 7253 * 6</td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>