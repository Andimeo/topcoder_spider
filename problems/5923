<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">You have a convex polygon. You select three consecutive vertices and create a triangle with them.  Remove this triangle from the polygon (if you had a polygon with N vertices, the resulting polygon would have N-1 vertices). Repeat this process until the remaining polygon is a triangle.<br><br>
You are given a String[] <b>vertices</b>, representing the vertices of the polygon in clockwise order. Each element will be formatted as "X Y", where X and Y are the coordinates of a vertex. Return a double representing the area of the largest possible triangle that can remain at the end.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">BestTriangulation</td></tr><tr><td class="statText">Method:</td><td class="statText">maxArea</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">double</td></tr><tr><td class="statText">Method signature:</td><td class="statText">double maxArea(String[] vertices)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">The returned value must be accurate to 1e-9 relative or absolute.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>vertices</b> will contain between 3 and 35 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>vertices</b> will be formatted as "X Y", where X and Y are integers without leading zeroes.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each X and Y will be between 1 and 10000, inclusive.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"1 1", "2 3", "3 2"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 1.5</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The polygon is already a triangle, so you cannot perform any cuts.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"1 1", "1 2", "3 3", "2 1"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 1.5</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Here you must perform one cut.
If you cut vertices (3, 0, 1), a triangle of area 1.5 will remain.
If you cut vertices (0, 1, 2), a triangle of area 1 will remain.
If you cut vertices (1, 2, 3), a triangle of area 0.5 will remain.
If you cut vertices (2, 3, 0), a triangle of area 1 will remain.
Your best option is to cut (3, 0, 1).</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"1 2", "1 3", "2 4", "3 4", "4 3", "4 2", "3 1", "2 1"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 3.0</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">In such an 8-gon, you must cut the following triangles in order: (7, 0, 1), (7, 1, 2), (2, 3, 4), (4, 5, 6), (4, 6, 7). Finally, a triangle with vertices (2, 4, 7) is left, and its area is 3.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"6 2", "2 1", "1 2", "1 4", "2 6", "5 6", "6 5"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 10.0</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"10000 3469", "9963 712", "9957 634", "9834 271", "9700 165",
 "9516 46", "8836 4", "1332 57", "229 628", "171 749",
 "52 1269", "30 1412", "7 4937", "35 8676", "121 9917",
 "2247 9960", "3581 9986", "6759 9995", "9486 9998", "9888 9890",
 "9914 9318", "9957 8206", "9998 6402"} </pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 4.8292483E7</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>