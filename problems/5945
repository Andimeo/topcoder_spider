<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>When a customer buys large quantities of a product, frequently the seller will offer a volume discount.  For instance, one unit might cost 10 dollars, but might be offered in packages of 5 for 45 dollars.  In such a case, it always makes sense buy the bulk lots to save money.  In some other cases, however, it might not always make sense.  Suppose a single unit were on sale for 8 dollars.  In such a case, purchasing single units would be less expensive than purchasing a 5-pack.</p>

<p>You are given a String[] <b>priceList</b> describing the number of units available in each bundle, and the cost of the bundle.  Each element is of the form "<i>units</i> <i>cost</i>" (quotes added for clarity).  You are also given an int <b>quantity</b>, the number of units you wish to purchase.</p>

<p>Return an int indicating the best possible cost to purchase at least the desired quantity of units.</p></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">VolumeDiscount</td></tr><tr><td class="statText">Method:</td><td class="statText">bestDeal</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[], int</td></tr><tr><td class="statText">Returns:</td><td class="statText">int</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int bestDeal(String[] priceList, int quantity)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>priceList</b> will contain between 1 and 5 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>priceList</b> will be formatted as described in the problem statement.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><i>units</i> will be an integer between 1 and 99, inclusive, with no leading zeroes</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><i>cost</i> will be an integer between 1 and 999, inclusive, with no leading zeroes.  </td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">No two values of <i>units</i> will be the same.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>quantity</b> will be between 1 and 99, inclusive.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"1 10", "5 45"}</pre></td></tr><tr><td class="statText"><pre>10</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 90</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The first example suggested in the problem statement.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"1 8", "5 45"}</pre></td></tr><tr><td class="statText"><pre>10</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 80</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The second example suggested in the problem statement.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"99 913", "97 173", "50 464", "80 565"} 	</pre></td></tr><tr><td class="statText"><pre>18</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 173</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Here, every package has more units than we need, so we pick the cheapest one.
</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"2 272","1 166","10 993"}</pre></td></tr><tr><td class="statText"><pre>81</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 8110</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>