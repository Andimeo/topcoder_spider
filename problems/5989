<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>
Three kids are playing the following game: A word is written on a sheet of paper, and one after another, the players take turns adding letters to the word.  During each turn, a player must add a single letter to either the beginning or the end of the word. If a player cannot add a letter during his turn, the game ends and that player is declared the loser.
</p>

<p>
During the game, a player might cheat by making an illegal move. Any move where the player does not add exactly one letter to either the beginning or the end of the word is considered illegal. The only exception is the last move of the game, when the loser adds no letters to the word. Given the log of the game, you must determine whether any of the players cheated.
</p>

<p>
You are also given the String[]s <b>first</b>, <b>second</b>, and <b>third</b>, containing the chronological lists of words seen by each of the players at the beginning of their turns. Element 0 of <b>first</b> is therefore the original word, element 0 of <b>second</b> is the word after the first player makes his first move, element 0 of <b>third</b> is the word after the second player makes his first move, etc.  Return 1, 2, or 3 if the first, second, or third player, respectively, cheated.  If multiple players cheated, return the player who cheated first.  If nobody cheated, return -1.
</p>
</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">KidsWordGame</td></tr><tr><td class="statText">Method:</td><td class="statText">getCheater</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[], String[], String[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">int</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int getCheater(String[] first, String[] second, String[] third)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>first</b> will contain between 1 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>second</b> and <b>third</b> each will contain between 0 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>first</b>, <b>second</b> and <b>third</b> will contain between 0 and 50 characters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>first</b>, <b>second</b> and <b>third</b> will contain only lowercase letters ('a'-'z').</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Define a = the number of elements in <b>first</b>, b = the number of elements in <b>second</b>, c = the number of elements in <b>third</b>. One of the following conditions will hold: a = b = c, a = b+1 = c+1, a = b = c+1.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"e","ello"}</pre></td></tr><tr><td class="statText"><pre>{"el","hello"}</pre></td></tr><tr><td class="statText"><pre>{"ell","ello"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 2</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The second player saw "hello" before making his second move, and then, the third player saw "ello" immediately after the second player made his second move.  Therefore, the second player cheated on his second move because "hello" -&gt; "ello" is not a legal move.
</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"de","coder","topcoder"}</pre></td></tr><tr><td class="statText"><pre>{"der","pcoder","tipcoder"}</pre></td></tr><tr><td class="statText"><pre>{"oder","opcoder","cheatcoder"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 1</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The first player cheated on his third turn. "topcoder" -&gt; "tipcoder" is an illegal move.
</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"world","sworld"}</pre></td></tr><tr><td class="statText"><pre>{"word"}</pre></td></tr><tr><td class="statText"><pre>{"sword"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 1</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"","abcd"}</pre></td></tr><tr><td class="statText"><pre>{"a"}</pre></td></tr><tr><td class="statText"><pre>{"ab"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 3</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">In this case, the third player added more than one letter to the word.  Note that the initial word may be empty.
</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{""}</pre></td></tr><tr><td class="statText"><pre>{}</pre></td></tr><tr><td class="statText"><pre>{}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: -1</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">5)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{""}</pre></td></tr><tr><td class="statText"><pre>{""}</pre></td></tr><tr><td class="statText"><pre>{""}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 1</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The first player did not add a letter, so he is a cheater.
</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">6)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"e","wyve","vffwyve","puvffwyvef","bpuvffwyveftl",
"tbpuvffwyveftlwz","ttbpuvffwyveftlwzcl",
"ttbpuvffwyveftlwzcletq","uuttbpuvffwyveftlwzcletqh",
"sjuuttbpuvffwyveftlwzcletqhd","vuysjuuttbpuvffwyveftlwzcletqhd",
"vjvuysjuuttbpuvffwyveftlwzcletqhdn",
"qsvjvuysjuuttbpuvffwyveftlwzcletqhdnn",
"hmqsvjvuysjuuttbpuvffwyveftlwzcletqhdnnj",
"ophmqsvjvuysjuuttbpuvffwyveftlwzcletqhdnnjm",
"ophmqsvjvuysjuuttbpuvffwyveftlwzcletqhdnnjmudk",
"jqophmqsvjvuysjuuttbpuvffwyveftlwzcletqhdnnjmudku"}</pre></td></tr><tr><td class="statText"><pre>{"ve","fwyve","uvffwyve","puvffwyveft","bpuvffwyveftlw","ttbpuvffwyveftlwz",
"ttbpuvffwyveftlwzcle","ttbpuvffwyveftlwzcletqh","uuttbpuvffwyveftlwzcletqhd",
"ysjuuttbpuvffwyveftlwzcletqhd","jvuysjuuttbpuvffwyveftlwzcletqhd",
"vjvuysjuuttbpuvffwyveftlwzcletqhdnn","qsvjvuysjuuttbpuvffwyveftlwzcletqhdnnj",
"hmqsvjvuysjuuttbpuvffwyveftlwzcletqhdnnjm",
"ophmqsvjvuysjuuttbpuvffwyveftlwzcletqhdnnjmu",
"ophmqsvjvuysjuuttbpuvffwyveftlwzcletqhdnnjmudku"}</pre></td></tr><tr><td class="statText"><pre>{"yve","ffwyve","uvffwyvef","puvffwyveftl","tbpuvffwyveftlw","ttbpuvffwyveftlwzc",
"ttbpuvffwyveftlwzclet","uttbpuvffwyveftlwzcletqh","juuttbpuvffwyveftlwzcletqhd",
"uysjuuttbpuvffwyveftlwzcletqhd","vjvuysjuuttbpuvffwyveftlwzcletqhd",
"svjvuysjuuttbpuvffwyveftlwzcletqhdnn","mqsvjvuysjuuttbpuvffwyveftlwzcletqhdnnj",
"phmqsvjvuysjuuttbpuvffwyveftlwzcletqhdnnjm",
"ophmqsvjvuysjuuttbpuvffwyveftlwzcletqhdnnjmud",
"qophmqsvjvuysjuuttbpuvffwyveftlwzcletqhdnnjmudku"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: -1</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>