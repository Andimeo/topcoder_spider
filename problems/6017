<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>
Integer coordinates in a two-dimensional plane are assigned letters from a grid <b>g</b> as follows: point <tt>(x,y)</tt> is assigned <tt>g[y%R][x%C]</tt>, where <tt>R</tt> and <tt>C</tt> are the number of rows and columns in <b>g</b>, respectively.  The grid <b>g</b> is given as a String[], where each element is a single row, and <tt>g[i][j]</tt> is the jth character of the ith element (both 0-indexed).
</p>
<p>
Consider all rays that originate at <tt>(0,0)</tt> and move outward, crossing integer coordinates where both <tt>x</tt> and <tt>y</tt> are greater than or equal to zero.  
Each ray spells out an infinite sequence of letters - the letters assigned to each coordinate crossed by the ray, in the order they are crossed.
</p>
<p>
You are given a list of words. 
You must return the number of rays that contain each of the given words.  
A ray contains a word if the word is a substring of the infinite letter sequence spelled out by the ray.
Only consider rays that intersect at least one integer coordinate <tt>(x,y)</tt> such that both <tt>0&lt;=x&lt;=<b>k</b></tt> and <tt>0&lt;=y&lt;=<b>k</b></tt>, where <b>k</b> is given as a parameter.
In the int[] returned, the ith position represents the number of the described rays that contains ith word given in <b>words</b>.
</p></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">InfiniteSoup</td></tr><tr><td class="statText">Method:</td><td class="statText">countRays</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[], String[], int</td></tr><tr><td class="statText">Returns:</td><td class="statText">int[]</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int[] countRays(String[] g, String[] words, int k)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>g</b> will contain between 1 and 35 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>g</b> will contain between 1 and 35 lowercase (<tt>'a'-'z'</tt>) letters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">All elements of <b>g</b> will contain the same number of characters.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>words</b> will contain between 1 and 25 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>words</b> will have between 1 and 50 lowercase (<tt>'a'-'z'</tt>) letters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>k</b> will be between 1 and 200, inclusive.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"abc","def","ghi"}</pre></td></tr><tr><td class="statText"><pre>{"abc"}</pre></td></tr><tr><td class="statText"><pre>2</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {1 }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">With <b>k</b>=2, the only five possible possible rays spell <tt>"abcabc..."</tt>, <tt>"afhafh..."</tt>, <tt>"aeiaei..."</tt>, <tt>"ahfahf..."</tt> and <tt>"adgadg..."</tt>.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"abc","def","ghi"}</pre></td></tr><tr><td class="statText"><pre>{"abc"}</pre></td></tr><tr><td class="statText"><pre>3</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {2 }</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"abc","def","ghi"}</pre></td></tr><tr><td class="statText"><pre>{"abc"}</pre></td></tr><tr><td class="statText"><pre>4</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {3 }</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"ccbbc","baabc","ccbab","cbcaa","aacab"}</pre></td></tr><tr><td class="statText"><pre>{"aaccbaaccbaacc","aabbcaabbcaabbc","babccbabccbabc","aaacaaaacaaaaca",
 "abbcaabbcaab","ccbbcccbbcccbbc","bbacabbacab","caacccaacccaac",
 "baaccbaaccbaac","caccbcaccbca"}</pre></td></tr><tr><td class="statText"><pre>10</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {0, 2, 0, 0, 2, 7, 5, 6, 0, 5 }</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"abb","bbb","bbb"}</pre></td></tr><tr><td class="statText"><pre>{"aaa"}</pre></td></tr><tr><td class="statText"><pre>2</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {0 }</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>