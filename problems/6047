<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">Given a positive integer j greater than 1, the corresponding Collatz
sequence is produced by repeatedly applying f to j (and continues even after we reach 1).  The function f behaves as follows:
<pre>
             { x/2    if x is even
   f(x)  =   {
             { 3x+1   if x is odd
</pre>
Suppose someone began with the value y and has started (but not
necessarily finished) generating the Collatz sequence.  Each time they
apply f they write down 'E' or 'O' to denote whether the argument was even or odd,
respectively.  Given the String <b>s</b> they have written down,
you must return a String of the form (quotes for clarity) "ak+b".  Here a
and b are integers with no extra leading zeros.  The returned string
must make the following set the collection of all possible numbers
that could have begun the sequence:
<pre>
	P = { ak + b | k &gt;= 0 and ak + b &gt; 1}
</pre>
If there are multiple possible return values, choose the one with b minimal.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">InverseCollatz</td></tr><tr><td class="statText">Method:</td><td class="statText">getForm</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String getForm(String s)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>s</b> will contain between 1 and 50 characters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each character in <b>s</b> will be 'E' or 'O'.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">An 'O' will never be immediately followed by another 'O' in <b>s</b>.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"EEE"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "8k+0"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The argument was even 3 times in a row, so the original value was a positive multiple of 8.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"OE"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "2k+1"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The initial number had to be odd.  After multiplying by 3 and adding 1, the next value will definitely be even.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"OEO"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "4k+3"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"EEEEOEEEEOEEEEOEEEEOEEEEOEEEEOEEEEOEEEEOEEEEOEEEEO"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "2199023255552k+1014933810256"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>