<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>You and a friend are playing a game in which you take turns removing stones from piles.  Initially, every pile has at least as many stones as the pile to its left.  This property must be maintained throughout the game.  On each turn, you remove one or more stones from a single pile.  You and your friend alternate turns until it is no longer possible to make a valid move.  The last player to have made a move wins the game.  Note that if you remove all the stones from a pile, it is still considered a pile.</p>

<p>You are said to have made a "winning move" if after making that move, you can eventually win no matter what your friend does.  You are given a int[] <b>piles</b> representing the number of stones in each pile from left to right.  It is your turn to move.  Find a winning move and return it as a String formatted as "TAKE s STONES FROM PILE k" (quotes for clarity only), where s and k (a 0-based index) are each integers with no leading zeros.  If there are multiple winning moves, choose the one that minimizes s.  If there is still a tie, choose the one that minimizes k.  If no winning move is possible, return the String "YOU LOSE" (quotes for clarity only).</p></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">StoneGameStrategist</td></tr><tr><td class="statText">Method:</td><td class="statText">play</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String play(int[] piles)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>piles</b> will contain between 1 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>piles</b> will be between 1 and 1000, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>piles</b> will be sorted in non-descending order.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{6,6}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "YOU LOSE"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">You can't win this game. Your friend will force you to take stones from the first pile at each turn, and then mirror your move by taking the same number of stones from the second pile.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{6,12}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "TAKE 6 STONES FROM PILE 1"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">If you take 6 stones from the second pile, you can follow the strategy outlined above.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{3,6,6}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "TAKE 3 STONES FROM PILE 0"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{3,5,9,11,16}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "TAKE 2 STONES FROM PILE 0"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{32,136,251,369,403,593,624,657,729,731,769}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "YOU LOSE"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>