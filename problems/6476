<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>You have found a cave filled with treasures, and you want to take as much as you can.  However, you can only make one trip, so you decide to use the following strategy.  You will take the treasures with the maximal total cost, but with a total weight no greater than <b>W</b>.  Each treasure is characterized by its weight, cost, and whether it can be divided.  For example, a bar of gold can be divided into two smaller bars of any size (with costs proportional to the cost of the original bar), but a cut-glass bowl cannot be divided because it would become worthless.</p>

<p>You will be given a String[] <b>treasures</b> and an int <b>W</b>.  Each element of <b>treasures</b> will be formatted as "weight cost can_be_divided" (quotes for clarity), where weight and cost are integers and can_be_divided is either 'Y' or 'N'.  Return the total cost of the treasures you will take.</p></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">TreasuresPacking</td></tr><tr><td class="statText">Method:</td><td class="statText">maximizeCost</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[], int</td></tr><tr><td class="statText">Returns:</td><td class="statText">double</td></tr><tr><td class="statText">Method signature:</td><td class="statText">double maximizeCost(String[] treasures, int W)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Your return value must have an absolute or relative error less than 1e-9.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>W</b> will be between 1 and 10000, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>treasures</b> will contain between 1 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>treasures</b> will be formatted as described in the problem statement.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each integer in <b>treasures</b> will contain no leading zeroes.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">The weight of each treasure will be between 1 and 10000, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">The cost of each treasure will be between 1 and 10000, inclusive.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"100 100 N", "100 100 N", "130 10 Y"}</pre></td></tr><tr><td class="statText"><pre>150</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 103.84615384615384</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">We can't take both of the expensive treasures because their total weight is 200, which is greater than <b>W</b>, and neither one can be divided.  So, we take one of the expensive treasures along with 50/130 of the cheaper dividable treasure to maximize the total cost.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"100 100 N", "100 100 N", "100 1000 Y"}</pre></td></tr><tr><td class="statText"><pre>150</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 1000.0</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"207 1459 Y", "150 6867 N", "694 3494 Y", "417 7479 N"}</pre></td></tr><tr><td class="statText"><pre>650</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 14931.00966183575</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"350 2765 Y", "258 560 Y", "120 9325 N", "879 302 Y",
 "611 2674 Y", "774 2273 Y", "318 1572 Y"}</pre></td></tr><tr><td class="statText"><pre>3301</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 19467.907849829353</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>