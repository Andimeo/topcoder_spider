<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>Year 2100. Humanity is starting to inhabit Antarctica. So far there are N towns, some of them connected with narrow one-way roads.</p>

<p>The president of Antarctica has decided to establish police in his country. The cost of building a police station in each town is given.  However, there may not be a need to build a police station in every town. The only requirement is that every town must be reachable from some police station using roads.</p>

<p>As the next elections are approaching, the president doesn't want to expose large police expenses. Thus he wants the average cost of a built station to be as low as possible.</p>

<p>You are given a int[] <b>costs</b>, the i-th element of which represents the cost of building a police station in town i, and a String[] <b>roads</b> representing the layout of the one-way roads. The j-th character of the i-th element of <b>roads</b> is 'Y' if there is a road from town i to town j, or 'N' if there is not. Make the average cost of a built station to be as low as possible and return this cost.</p></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">AntarcticaPolice</td></tr><tr><td class="statText">Method:</td><td class="statText">minAverageCost</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int[], String[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">double</td></tr><tr><td class="statText">Method signature:</td><td class="statText">double minAverageCost(int[] costs, String[] roads)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">The returned value must be accurate to within a relative or absolute error of 1E-9.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>costs</b> will contain between 1 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>costs</b> will be between 1 and 1000, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>roads</b> will contain exactly N elements, where N is the number of elements in <b>costs</b>.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>roads</b> will contain exactly N characters.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each character of each element of <b>roads</b> will be 'Y' or 'N'.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">The ith character of the ith element of <b>roads</b> will be 'N'.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{1,2,3,4}</pre></td></tr><tr><td class="statText"><pre>{"NYNN","NNYN","NNNY","YNNN"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 1.0</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">It is possible to get everywhere from anywhere (the towns form a big circle), so we need only the cheapest station.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{1,2,3,4}</pre></td></tr><tr><td class="statText"><pre>{"NYNN","NNYN","NNNY","NYNN"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 1.0</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Once again, the cheapest station is enough.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{5,6,7,8}</pre></td></tr><tr><td class="statText"><pre>{"NYNN","YNNN","NNNY", "NNYN"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 6.0</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">We have two separate parts, so we build one cheapest station in each part : (5+7)/2=6.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{10,5}</pre></td></tr><tr><td class="statText"><pre>{"NY","NN"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 7.5</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">We have three choices here: build a police station in town 0, in town 1, or in both towns. The second choice doesn't satisfy the requirements since it's impossible to get from town 1 to town 0. Of the two remaining choices, building both is better because it minimizes the average cost.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{34,22,25,43,12}</pre></td></tr><tr><td class="statText"><pre>{"NYNNY","YNNYN","NNNYY","NNNNN","NNNNN"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 19.666666666666668</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>