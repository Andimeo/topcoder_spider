<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>You are given a list of people, and you must divide them into as many groups as possible.  Each person must belong to exactly one group, and each group must contain one or more people.  Friends must not be split apart, so if two people are friends, they must be in the same group.</p>
<p>You will be given a String[] <b>names</b>, each element of which is the name of a single person.  You will also be given a String[] <b>friends</b>, each element of which is formatted as "&lt;name1&gt; &lt;name2&gt;" (quotes for clarity only), meaning that &lt;name1&gt; and &lt;name2&gt; are friends.  Each &lt;name1&gt; and &lt;name2&gt; will exist in <b>names</b>.  Return the maximum number of groups that can be formed.</p></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">FriendsTrouble</td></tr><tr><td class="statText">Method:</td><td class="statText">divide</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[], String[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">int</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int divide(String[] names, String[] friends)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>names</b> will contain between 1 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>names</b> will contain between 1 and 20 uppercase letters ('A'-'Z'), inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">All elements in <b>names</b> will be distinct.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>friends</b> will contain between 0 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>friends</b> will be formatted as "&lt;name1&gt; &lt;name2&gt;" (quotes for clarity only), where both &lt;name1&gt; and &lt;name2&gt; are elements of <b>names</b>.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"BOB", "HARRY", "ALICE", "SALLY"}</pre></td></tr><tr><td class="statText"><pre>{"BOB ALICE", "HARRY SALLY"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 2</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">BOB and ALICE form one group, and HARRY and SALLY form a second group.  The only other valid division is putting them all in a single group, but we want to maximize the number of groups</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"BOB", "HARRY", "ALICE", "SALLY"}</pre></td></tr><tr><td class="statText"><pre>{"BOB HARRY", "HARRY ALICE", "ALICE SALLY" }</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 1</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">There is no way to form more than one group without separating a pair of friends.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"CHUCK"}</pre></td></tr><tr><td class="statText"><pre>{"CHUCK CHUCK","CHUCK CHUCK","CHUCK CHUCK"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 1</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">CHUCK is his own only friend. Note that <b>friends</b> may have duplicate entries.</td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>