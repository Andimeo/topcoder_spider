<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>
A knight is a chess piece that moves by simultaneously shifting one square along one axis and two squares along the other.  A knight's tour of a chessboard is a sequence of moves made by a knight such that each square of the board is visited exactly once.  If the final position in the tour is a knight's move away from the first position, the tour is called re-entrant.  The picture below shows a re-entrant knight's tour for a 6x6 chessboard.</p>
<p><img src="http://www.topcoder.com/contest/problem/KnightTour/KnightTour.gif"></p>
<p>Josh is trying to find another re-entrant knight's tour on a 6x6 chessboard.  He needs a program to make sure he doesn't make any mistakes.  
</p><p>
You will be given a String[] <b>cells</b> containing the sequence of cells visited by the knight in order.  Each element represents a single cell and is in the form "&lt;letter&gt;&lt;digit&gt;" (quotes for clarity), where &lt;letter&gt; is a letter representing the column and &lt;digit&gt; is a digit representing the row.  "A1" represents the bottom-left corner of the board, and "F6" represents the top-right corner (see the picture).

Return the String "Valid" if cells contains a valid re-entrant knight's tour, and return "Invalid" otherwise (all quotes for clarity).</p>
</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">KnightTour</td></tr><tr><td class="statText">Method:</td><td class="statText">checkTour</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String checkTour(String[] cells)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>cells</b> will contain exactly 36 elements.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>cells</b> will be in the form "&lt;letter&gt;&lt;digit&gt;" (quotes for clarity), where &lt;letter&gt; is an uppercase letter between 'A' and 'F', inclusive, and &lt;digit&gt; is a digit between '1' and '6', inclusive.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"A1", "B3", "A5", "C6", "E5", "F3",
 "D2", "F1", "E3", "F5", "D4", "B5",
 "A3", "B1", "C3", "A2", "C1", "E2",
 "F4", "E6", "C5", "A6", "B4", "D5",
 "F6", "E4", "D6", "C4", "B6", "A4",
 "B2", "D1", "F2", "D3", "E1", "C2"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Valid"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The example from the statement.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"A1", "C2", "E3", "F5", "D4", "B3",
 "A1", "C2", "E3", "F5", "D4", "B3", 
 "A1", "C2", "E3", "F5", "D4", "B3", 
 "A1", "C2", "E3", "F5", "D4", "B3", 
 "A1", "C2", "E3", "F5", "D4", "B3", 
 "A1", "C2", "E3", "F5", "D4", "B3"}
</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Invalid"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Some cells are not visited.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"D4", "F5", "D6", "B5", "A3", "B1", 
 "D2", "F1", "E3", "D1", "F2", "E4", 
 "F6", "D5", "B6", "A4", "B2", "C4", 
 "A5", "C6", "E5", "F3", "E1", "C2", 
 "A1", "B3", "C5", "E6", "F4", "E2", 
 "C3", "A2", "C1", "D3", "B4", "A6"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Invalid"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">This tour is not re-entrant.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"D4", "F5", "D6", "B5", "A3", "B1", 
 "D2", "F1", "E3", "D1", "F2", "E4", 
 "F6", "D5", "B6", "A4", "B2", "C4", 
 "A5", "C6", "E5", "F3", "E1", "C2", 
 "A1", "B3", "C5", "A6", "B4", "A2", 
 "C3", "E2", "C1", "D3", "F4", "E6"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Valid"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"C5", "D3", "F2", "D1", "B2", "A4", 
 "B6", "D5", "C3", "E4", "F6", "B3", 
 "A1", "C2", "E1", "F3", "E5", "C6", 
 "A5", "C4", "A3", "B1", "D2", "F1", 
 "E3", "F5", "D6", "B5", "D4", "E6", 
 "F4", "E2", "C1", "A2", "B4", "A6"}
</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "Invalid"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">"F6-B3" is not a valid knight move.</td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>