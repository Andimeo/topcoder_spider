<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>
You work in a post office, where each worker is either a good postman or a bad postman.  A good postman always delivers all his mail, and a bad postman always loses all his mail.  Each day, you write down the names of all the postmen working that day.  If all the mail gets delivered, you add that day to your white list.  If at least one piece of mail gets lost, you add the day to your black list.  You would like to determine the number of good and bad postmen in your office.
</p>
<p>
You will be given two String[]s, <b>white</b> and <b>black</b>.  Each element of <b>white</b> represents a single day from your white list, and each element of <b>black</b> represents a single day from your black list.  Each element of <b>white</b> and <b>black</b> is a single space delimited list of the names of the postmen who worked that day.  The workers' names will not contain spaces.  Return a int[] containing exactly 3 elements, where the first element is the number of good postmen, the second element is the number of bad postmen, and the third element is the number of undefined postmen.  An undefined postman is a worker whose type cannot be determined with the information given.
</p></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">GoodAndBadPostmen</td></tr><tr><td class="statText">Method:</td><td class="statText">whoIsWho</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[], String[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">int[]</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int[] whoIsWho(String[] white, String[] black)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>white</b> and <b>black</b> will each contain between 0 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>white</b> and <b>black</b> will contain between 1 and 50 characters, inclusive. </td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>white</b> and <b>black</b> will not contain duplicate names.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>white</b> and <b>black</b> will contain only lowercase letters ('a'-'z') and spaces.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>white</b> and <b>black</b> will not contain trailing or leading spaces.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>white</b> and <b>black</b> will not contain two consecutive spaces.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>black</b> will contain at least one postman who is not in <b>white</b>.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"a b c", "c a d"}</pre></td></tr><tr><td class="statText"><pre>{"a b c f", "c a d e"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {4, 2, 0 }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">There are 4 distinct postmen in the white list: a, b, c and d.  They are definitely good since they always deliver all their mail.  There is one day where postman f worked with 3 good postmen (a, b and c), and on that day, some mail was lost.  Therefore, postman f must be bad.  Similarly, postman e is bad.

</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"abc abcd"}</pre></td></tr><tr><td class="statText"><pre>{"abcde"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {2, 1, 0 }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"a b cd", "qq ee rre"}</pre></td></tr><tr><td class="statText"><pre>{"a b c d e", "a cd t q", "a cd t", "qq ee q"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {6, 2, 3 }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"a"}</pre></td></tr><tr><td class="statText"><pre>{"a b c", "a b c d", "a b c d"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {1, 0, 3 }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"alex", "serge", "vitalik"}</pre></td></tr><tr><td class="statText"><pre>{}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {3, 0, 0 }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">5)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{}</pre></td></tr><tr><td class="statText"><pre>{"dmitry victor", "dmitry", "victor"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {0, 2, 0 }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">6)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{}</pre></td></tr><tr><td class="statText"><pre>{}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {0, 0, 0 }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>