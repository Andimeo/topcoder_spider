<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">You have a lot of CDs that you have placed into one big box.  You are given a String <b>diskNames</b> containing a single-space separated list of the disk names (the names will not contain spaces).  The first disk is at the bottom of the box, the second lies directly on top of the first disk, and so on.  Return the number of disks you'll need to take out of the box to find the disk named <b>searchingDisk</b>.  You only need to take out the disks that are on top of <b>searchingDisk</b>.  You do not need to take out the disk you're looking for.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">SearchDisks</td></tr><tr><td class="statText">Method:</td><td class="statText">numberToTakeOut</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String, String</td></tr><tr><td class="statText">Returns:</td><td class="statText">int</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int numberToTakeOut(String diskNames, String searchingDisk)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>diskNames</b> will contain between 1 and 50 characters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>searchingDisk</b> will contain between 1 and 10 characters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>diskNames</b> will contain only lowercase letters ('a'-'z') and spaces (' ').</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>searchingDisk</b> will contain only lowercase letters ('a'-'z').</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Disk names will be separated by exactly one space in <b>diskNames</b>.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>searchingDisk</b> will be one of the disk names in <b>diskNames</b>.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>diskNames</b> will not contain duplicate disk names.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>diskNames</b> will not contain leading or trailing spaces</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"beatles queen abba"</pre></td></tr><tr><td class="statText"><pre>"abba"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 0</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">It is not necessary to take out any disks. "abba" is already on top.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"beatles queen abba"</pre></td></tr><tr><td class="statText"><pre>"beatles"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 2</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">It is necessary to take out "abba" and then "queen" to get to "beatles".</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"a b c"</pre></td></tr><tr><td class="statText"><pre>"b"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 1</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"t k o h z s v r i c e d n f a m u w p g j q x y l"</pre></td></tr><tr><td class="statText"><pre>"f"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 11</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>