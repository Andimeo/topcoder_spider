<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>You are in charge of writing some software to generate an itemized invoice.  You have a raw list of items that were purchased, but the raw list is not very user friendly.  Your code should determine how many of each item were purchased, and return a list of items and their quantity.  You are given a String[] <b>items</b>, each element representing a single item.  You must return a String[] listing, in alphabetical order, each item and its quantity.  Each element of the return should be formatted as "<i>item</i> - <i>quantity</i>" (quotes added for clarity), where the quantity has no leading zeroes.</p>

</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">ItemizedList</td></tr><tr><td class="statText">Method:</td><td class="statText">generateList</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">String[]</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String[] generateList(String[] items)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>items</b> will contain between 1 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>items</b> will contain between 1 and 50 lowercase letters ('a'-'z'), inclusive.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"apple", "orange", "apple", "banana", "apple", "orange"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {"apple - 3", "banana - 1", "orange - 2" }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">A grocery list of someone getting ready to make a fruit salad.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"apple", "apple", "apple", "apple"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {"apple - 4" }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The itemized format is a lot more concise.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"apple", "orange", "banana"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {"apple - 1", "banana - 1", "orange - 1" }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Each item only appears once.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"apple", "orange", "apple", "banana", "apple",
 "apple", "orange", "apple", "banana", "apple",
 "apple", "orange", "apple", "banana", "apple"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {"apple - 9", "banana - 3", "orange - 3" }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Lots of items.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"apple"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: {"apple - 1" }</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">A very short list.</td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>