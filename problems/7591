<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">You are a developer for a financial computer system.  Users of the system often operate with large numbers, so it's important that numbers be formatted in an easy-to-read manner.  You are given a String <b>number</b> containing the internal representation of a non-negative number.  This number will contain only digits, along with an optional decimal separator represented by a comma (',').  Format the number as follows:<br>

1. If the number contains a decimal separator, replace the decimal separator with a period ('.').<br>
2. Divide the integer part of the number into groups of three consecutive digits, from right to left.  Depending on the number of digits, the left-most group might only contain 1 or 2 digits.  Insert a single space (' ') between each pair of consecutive groups.  (The integer part of the number is the part of the number to the left of the decimal separator if one exists, or the entire number if there is no decimal separator.)<br>

For example, "1234567,890" would be formatted as "1 234 567.890" and "1024" would be formatted as "1 024". If insignificant leading or trailing zeroes exist in the number, they must be preserved. For example, "00003,1234000" would be formatted "00 003.1234000". Return the formatted version of the given number.
</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">NumberFormatter</td></tr><tr><td class="statText">Method:</td><td class="statText">format</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String format(String number)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>number</b> will contain between 1 and 50 characters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each character in <b>number</b> will be either a digit ('0'-'9') or a comma (','). </td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>number</b> will contain at most one comma (',').</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Comma (',') will not be the first or the last character of <b>number</b>.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"1234567,890"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "1 234 567.890"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">First example from the statement.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"1024"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "1 024"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Second example from the problem statement.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"00003,1234000"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "00 003.1234000"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Third example from the problem statement.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"12345678912345678912345,0987654321"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "12 345 678 912 345 678 912 345.0987654321"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>