<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>Recently, some very old messages were discovered.  Unfortunately, some of the letters are no longer legible.  You are given a String <b>statement</b> containing one of the messages.  Each illegible letter is represented with a '?' character.  You know that all of the letters in the original text were lowercase ('a' - 'z').  For example, if the statement is "d??r", the original message might have been "door" or "dear", but not "ddr" (one letter is missing), "doctor" (too many letters) or "rear" (the first letter is wrong).</p>
<br><p>You are given two Strings <b>word1</b> and <b>word2</b>, in the same format as <b>statement</b>. You must determine whether it's possible for <b>word1</b> and <b>word2</b> to both exist in the original message without overlapping. For example, the message "yellowtaxi" contains both "yell" and "tax", but not "yell" and "low". Return "both" if both words can exist without overlapping, "none" if neither word can exist, or "one" if at most one word can exist without overlapping (all quotes for clarity). See examples for further clarification.</p>
</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">TwoWords</td></tr><tr><td class="statText">Method:</td><td class="statText">howMany</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String, String, String</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String howMany(String statement, String word1, String word2)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>statement</b>, <b>word1</b> and <b>word2</b> will each contain between 1 and 50 characters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>statement</b>, <b>word1</b> and <b>word2</b> will each contain only lowercase letters ('a'-'z') and question marks ('?').</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"yello??taxi"</pre></td></tr><tr><td class="statText"><pre>"yellow"</pre></td></tr><tr><td class="statText"><pre>"taxi"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "both"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The original message could have been "yellowataxi". Therefore, both words can exist without overlapping.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"?ellowtaxi"</pre></td></tr><tr><td class="statText"><pre>"yell"</pre></td></tr><tr><td class="statText"><pre>"l?w"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "one"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">If the statement was interpreted as "yellowtaxi", <b>word1</b> could exist. If <b>word2</b> was interpreted as "low", it could exist. However, only one of them can exist without overlapping.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"tha?isunbelievable"</pre></td></tr><tr><td class="statText"><pre>"han?y"</pre></td></tr><tr><td class="statText"><pre>"?th?"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "none"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">For all interpretations of the illegible characters, neither word can exist.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"secondfirst"</pre></td></tr><tr><td class="statText"><pre>"second"</pre></td></tr><tr><td class="statText"><pre>"first"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "both"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"><b>word2</b> can come before <b>word1</b>.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"me?sa?e"</pre></td></tr><tr><td class="statText"><pre>"?ceage"</pre></td></tr><tr><td class="statText"><pre>"essay"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "one"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">5)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"?"</pre></td></tr><tr><td class="statText"><pre>"??"</pre></td></tr><tr><td class="statText"><pre>"???"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "none"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">6)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"hello"</pre></td></tr><tr><td class="statText"><pre>"h?"</pre></td></tr><tr><td class="statText"><pre>"ll?"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "both"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>