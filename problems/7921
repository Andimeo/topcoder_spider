<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">There are several cities in the country, and some of them are connected by bidirectional roads. Unfortunately, some of the roads are damaged and cannot be used right now.
Your goal is to rebuild enough of the damaged roads that there is a functional path between every pair of cities.<p></p>
You are given String[] <b>roads</b>, each element of which describes a single road.  Damaged roads are formatted as "<i>id city1 city2 cost</i>" and non-damaged roads are formatted as "<i>id city1 city2</i>" (all quotes for clarity).  In this notation, <i>id</i> is the unique identifier of the road, and <i>city1</i> and <i>city2</i> are the case-sensitive names of the two cities directly connected by that road.  If the road is damaged, <i>cost</i> represents the price of rebuilding that road.  Each <i>id</i> will be formatted "<i>Cx</i>" (quotes for clarity), where <i>C</i> is an uppercase letter and <i>x</i> is a digit. Every city in the country will appear at least once in <b>roads</b>.<p></p>
Return a String containing a single space separated list of the identifiers of the roads that must be rebuilt to achieve your goal. If there are multiple possibilities, select the one with the minimal total reconstruction cost.  If a tie still exists, return the String that comes first lexicographically. If it is impossible to achieve your goal, return "IMPOSSIBLE" (quotes for clarity only).</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">RoadReconstruction</td></tr><tr><td class="statText">Method:</td><td class="statText">selectReconstruction</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String selectReconstruction(String[] roads)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">There can be more than one road between a pair of cities.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>roads</b> will contain between 1 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>roads</b> will contain between 6 and 50 characters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>roads</b> will be formatted as "<i>id city1 city2</i>" or "<i>id city1 city2 cost</i>" (all quotes for clarity). </td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each <i>id</i> will be formatted as "Cx" (quotes for clarity), where C is an uppercase letter ('A'-'Z') and x is a digit ('0'-'9').</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each <i>id</i> in <b>roads</b> will be distinct.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each <i>city1</i> and <i>city2</i> will contain between 1 and 45 letters ('a'-'z', 'A'-'Z'), inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">In each element of <b>roads</b>, <i>city1</i> and <i>city2</i> will be distinct.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each <i>cost</i> will be an integer between 1 and 1000, inclusive, with no leading zeroes.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"M1 Moscow Kiev 1", "M2 Minsk Kiev", "M3 Minsk Warsaw"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "M1"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Rebuilding road M1 will make all three cities connected to each other.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"R1 NY Washington", "M1 Moscow StPetersburg 1000"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "IMPOSSIBLE"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Even after reconstuction of the road M1, the resulting road network won't be connected. So, the answer is "IMPOSSIBLE".</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"B1 Bratislava Havka"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: ""</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"M1 Moscow StPetersburg 1", "M2 Moscow Saratov 2", "S0 Saratov StPetersburg"}}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "M1"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"O1 Beetown Fearnot 6","N7 Fearnot Hornytown","M8 Hornytown Belcher 10",
 "L5 Belcher Fearnot 8","C7 Fearnot Beetown 4","K7 Quiggleville Beetown 12",
 "H4 Beetown DryFork 6","Z0 Hornytown Belcher 1","O5 Belcher Quiggleville 10",
 "U7 Quiggleville Fearnot 2","A8 Fearnot Quiggleville 8","T6 Beetown DryFork 17",
 "E8 Quiggleville DryFork 8","Y4 DryFork Quiggleville 4","Q8 Hornytown DryFork 2",
 "J9 Quiggleville DryFork 19","M4 DryFork Quiggleville 7","T1 DryFork Fearnot 9",
 "G4 Fearnot DryFork 6","V9 Hornytown Beetown 5","O6 Quiggleville Beetown 4",
 "L8 Beetown Roachtown 5","D5 Belcher DryFork 8","W5 Belcher DryFork 1"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "C7 L8 U7 W5 Z0"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>