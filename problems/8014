<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>N candidates, indexed from 0 to N-1, participate in an election. After the voting is over, candidates are sorted by decreasing number of votes, and by increasing index in case of ties.</p>
<p>With the voting underway you have your favorites for different positions. You wonder how many additional voters would have to come to make your selection possible.</p>
<p>The int[] <b>votes</b> represents the results so far, where the k-th element is the number of votes received by candidate k.
The int[] <b>wishList</b> corresponds to the positions where you would like to see the candidates after the voting is over.  If element k of <b>wishList</b> is -1, it means that you don't care where candidate k ends up.  Otherwise, the number represents your desired 0-based position for candidate k.
 Return the minimal number of additional votes needed to make it possible for the final ranking to match your wishes.</p></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">Election</td></tr><tr><td class="statText">Method:</td><td class="statText">votesNeeded</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int[], int[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">int</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int votesNeeded(int[] votes, int[] wishList)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>votes</b> will contain between 1 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>wishList</b> will contain the same number of elements as <b>votes</b>.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>votes</b> will be between 0 and 10,000,000, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>wishList</b> will be between -1 and N - 1, inclusive, where N is the number of elements in <b>votes</b>.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Elements of <b>wishList</b>, other than -1, will be distinct.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{10,8,6,4}</pre></td></tr><tr><td class="statText"><pre>{-1,0,-1,2}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 6</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">If 3 more people vote for candidate 1, and 3 more people vote for candidate 3, the vote distribution would be {10,11,6,7}, and the final candidate ranking would be {1,0,3,2}, which matches your wishes.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{10,20,30,0}</pre></td></tr><tr><td class="statText"><pre>{-1,-1,-1,0}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 31</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Candidate 3 will need 31 votes to take the lead.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{10, 100, 40, 15, 15}</pre></td></tr><tr><td class="statText"><pre>{4, 0, 1, 3, 2}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 1</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">It's almost as wished, but the tie breaker rule would make candidate 3 come before candadiate 4. One more vote is enough to fix that.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{5052863,4419975,3556783,9490441,6166389,836297,
 4623556,4905465,117307,8071245,932463,9194925}</pre></td></tr><tr><td class="statText"><pre>{-1,-1,-1,-1,2,0,-1,-1,8,9,4,11}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 53562445</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>