<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>
Our hero, Homer, has just woken to a horrible discovery!  While sleeping at work, several of the power plants in the state have lost power.  Even worse, his boss is on the way to his office, and if he doesn't have the situation fixed in time, he'll be fired.  He's called you, desperately asking for help, and you've agreed to help him figure things out.
</p><p>
Homer has given you <b>connectionCost</b>, in which the j-th character of the i-th element indicates the cost to restart power plant j using power plant i; a digit ('0'-'9') stands for a cost of 0-9, while an uppercase letter ('A'-'Z') stands for a cost of 10-35.  Homer has also given you the <b>plantList</b>, in which the i-th character indicates whether the i-th plant is still working after the power outage; a 'Y' indicates that it has power, otherwise, it is an 'N'.  A plant can only be used to power another plant if it currently has power.  Finally, he gives you <b>numPlants</b>, the minimum number of plants that need to be powered to save Homer's job.  You need to return the minimum cost needed to power at least <b>numPlants</b> plants.
</p></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">PowerPlants</td></tr><tr><td class="statText">Method:</td><td class="statText">minCost</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[], String, int</td></tr><tr><td class="statText">Returns:</td><td class="statText">int</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int minCost(String[] connectionCost, String plantList, int numPlants)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>connectionCost</b> will contain exactly N elements, where N is between 1 and 16, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>connectionCost</b> will contain exactly N characters.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each character of <b>connectionCost</b> will be a digit ('0'-'9') or uppercase letter ('A'-'Z').</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>plantList</b> will contain exactly N characters.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each character of <b>plantList</b> will be 'Y' or 'N'.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">At least one character of <b>plantList</b> will be 'Y'.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>numPlants</b> will be between 0 and N, inclusive.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"024",
 "203",
 "430"}</pre></td></tr><tr><td class="statText"><pre>"YNN"</pre></td></tr><tr><td class="statText"><pre>3</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 5</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The cheapest way is to restart plant 1 using plant 0.  Once plant 1 is active, you can then use it to restart plant 2.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"0AB",
 "A0C",
 "CD0"}</pre></td></tr><tr><td class="statText"><pre>"YNN"</pre></td></tr><tr><td class="statText"><pre>3</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 21</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Here we can use plant 0 to restart both of the others.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"1ABCD",
 "35HF8",
 "FDM31",
 "AME93",
 "01390"}</pre></td></tr><tr><td class="statText"><pre>"NYNNN"</pre></td></tr><tr><td class="statText"><pre>5</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 14</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"012",
 "123",
 "234"}</pre></td></tr><tr><td class="statText"><pre>"NNY"</pre></td></tr><tr><td class="statText"><pre>2</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 2</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"1309328",
 "DS2389U",
 "92EJFAN",
 "928FJNS",
 "FJS0DJF",
 "9FWJW0E",
 "23JFNFS"}</pre></td></tr><tr><td class="statText"><pre>"YYNYYNY"</pre></td></tr><tr><td class="statText"><pre>4</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 0</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">5)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"01","20"}</pre></td></tr><tr><td class="statText"><pre>"YN"</pre></td></tr><tr><td class="statText"><pre>2</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 1</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The cost to restart plant 0 using plant 1 may differ from the cost of restarting plant 1 using plant 0.</td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>