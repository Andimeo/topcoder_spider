<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>
The great pirate Silver has buried a treasure on a tropical island. You
managed to find a map of the island with an X marking a spot on the island,
and a set of instructions.
Each instruction is of the form "walk A steps in the direction B".
If you start at the X and follow the instructions in the given order,
at the end you will arrive at the location where the treasure is buried.
</p>

<p>
Your evil twin has a copy of the map, and has already started to follow
the instructions. To beat him, you must find the location of the treasure
and walk straight to that place.
</p>

<p>
You will be given the set of instructions as a int[] <b>steps</b> and a String[]
<b>directions</b>. 
Element i of <b>directions</b> corresponds to element i of <b>steps</b>.
Write a method that will find the location of the treasure, and
return the straight-line distance (in steps) from the place
where you start to the place where the treasure is buried.
</p>

<p>
Each direction in <b>directions</b> will be one of the eight basic directions on a compass.
Refer to the image below for clarification.
</p>

<p>
<img src="http://www.topcoder.com/contest/problem/PirateTreasure/compass-small.png"></p></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">PirateTreasure</td></tr><tr><td class="statText">Method:</td><td class="statText">getDistance</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int[], String[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">double</td></tr><tr><td class="statText">Method signature:</td><td class="statText">double getDistance(int[] steps, String[] directions)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">The returned value must have an absolute or relative error less than 1e-9.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Assume that the island lies on a plane, and that it is large enough to accomodate the entire walk.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Note that making a step northwest is <i>not</i> the same as making a step north and then a step west. See Example 3.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">The Euclidean distance between two points <tt>A=(ax,ay)</tt> and <tt>B=(bx,by)</tt> in a plane is equal to <tt>sqrt( (ax-bx)^2 + (ay-by)^2 )</tt>.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>steps</b> will contain between 1 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element in <b>steps</b> will be between 1 and 50, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>directions</b> will contain the same number of elements as <b>steps</b>.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>directions</b> will be one of <tt>NORTH</tt>, <tt>SOUTH</tt>, <tt>EAST</tt>, <tt>WEST</tt>, <tt>NORTHEAST</tt>, <tt>NORTHWEST</tt>, <tt>SOUTHEAST</tt>, and <tt>SOUTHWEST</tt>.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{1}</pre></td></tr><tr><td class="statText"><pre>{"NORTH"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 1.0</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">After one step north, you will be (surprisingly) one step away from where you started.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{2}</pre></td></tr><tr><td class="statText"><pre>{"NORTHWEST"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 2.0</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Two steps northwest will take you two steps away from where you started.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{3,10,7}</pre></td></tr><tr><td class="statText"><pre>{"EAST","WEST","EAST"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 0.0</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">After following these instructions you'll end exactly where you started.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{34,48,34}</pre></td></tr><tr><td class="statText"><pre>{"NORTH","SOUTHWEST","EAST"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 0.08326112068522587</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Following these instructions won't get you exactly to the same place where you started, but you will be pretty close.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{2,2,2,1}</pre></td></tr><tr><td class="statText"><pre>{"NORTH","NORTH","NORTH","NORTHWEST"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 6.744277676240694</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">After six steps north and one step northwest, your straight line distance from where you started is a little less than seven steps.</td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>