<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">Lucy always wanted to have a big traditional wedding.  Right now, she is sitting on her bed and looking at all the stuff she has.  There's just one thought in her mind: "I have to choose something old, something new, something borrowed, and something blue."  In a couple of hours (yes, she has a lot of stuff), she made a list of all the items she can wear or carry.  She wants to minimize the total weight of all the items she takes.  Help her!<br><br>
You are given a String[] <b>properties</b>, and a int[] <b>weight</b>.  <b>properties</b>[i] is a comma-separated list of the i-th item's properties, and <b>weight</b>[i] is the weight of the i-th item.<br>

You must choose some items such that the following two conditions hold:
<ol><li>At least one item must have the property "new", at least one must have the property "old", at least one must have the property "borrowed", and at least one must have the property "blue" (all quotes for clarity).</li>

<li>The total weight of the chosen items must be minimal.</li>
</ol>
Return the weight of the chosen items. If there is no way to satisfy the requirements, return -1.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">TraditionalMarriage</td></tr><tr><td class="statText">Method:</td><td class="statText">getLuckyItems</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[], int[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">int</td></tr><tr><td class="statText">Method signature:</td><td class="statText">int getLuckyItems(String[] properties, int[] weight)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>properties</b> will contain between 1 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>properties</b> and <b>weights</b> will contain the same number of elements.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>properties</b> will contain between 1 and 50 characters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>properties</b> will contain a comma-separated list of words, where each word contains between 1 and 10 lowercase letters ('a'-'z'), inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>properties</b> will contain at least one word, and will contain no duplicate words.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>weight</b> will be between 1 and 10^6, inclusive.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"blue,suede,old","red","white,borrowed","new,white,cool,good,anything","new"}</pre></td></tr><tr><td class="statText"><pre>{10,4,15,3,4}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 28</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Lucy must take the first and the third items. To get something "new" she can take the fourth or the fifth one. But in order to minimize the total weight she must choose the fourth.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"new,borrowed,blue,old,nice"}</pre></td></tr><tr><td class="statText"><pre>{1}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 1</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Lucy has one item which has all the needed properties.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"old","new","borrowed","blue","old,new,borrowed,blue"}</pre></td></tr><tr><td class="statText"><pre>{1,1,1,1,5}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 4</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">It is better to take the first four items than the fifth one.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"new","old,red","borrowed"}</pre></td></tr><tr><td class="statText"><pre>{1,2,3}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: -1</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">There is no item with the property "blue", so there is no way to satisfy the requirements.</td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>