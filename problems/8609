<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>
You are given a String <b>number</b> containing the digits of a phone number.  To help you memorize the number, you want to divide it into groups of contiguous digits.  Each group must contain exactly 2 or 3 digits.  There are three kinds of groups:
</p><ul><li><i>Excellent</i>: A group that contains only the same digits.  For example, 000 or 77.</li>
<li><i>Good</i>: A group of 3 digits, 2 of which are the same.  For example, 030, 229 or 166.</li>
<li><i>Usual</i>: A group in which all the digits are distinct.  For example, 123 or 90.</li>
</ul><p>
The quality of a group assignment is defined as 2 * (number of excellent groups) + (number of good groups).  Divide the number into groups such that the quality is maximized, and return the result as a String, where each pair of consecutive groups is separated by a dash ('-').  If there are multiple ways to do this, return the one among them that results in the lexicographically earliest String.
</p></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">PhoneNumbers</td></tr><tr><td class="statText">Method:</td><td class="statText">bestNumber</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String bestNumber(String number)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">A String A comes before a String B lexicographically if A is a proper prefix of B, or if A has a smaller character at the first position where the strings differ. When comparing the characters, refer to the following list of characters in ascending order: '-', '0', '1', ..., '9'.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>number</b> will contain between 2 and 50 characters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each character in <b>number</b> will be a digit ('0'-'9').</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"5088638"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "50-88-638"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">There are three possible ways to divide this number into groups: 508-86-38 (quality 0), 50-886-38 (quality 1) and 50-88-638 (quality 2). The last option is the best one.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"0123456789"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "01-23-45-67-89"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">No matter how you divide this number, the quality will be 0.  Choose the division that comes earliest lexicographically.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"09"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "09"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">With a 2-digit phone number, there is only one choice.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"54545454545454545454"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "54-545-454-545-454-545-454"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The best way to divide this number is to create six 3-digit good groups and one 2-digit usual group.  Put the 2-digit group at the beginning to achieve the lexicographically earliest result.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"00110001011100010111"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "00-11-00-010-11-10-00-101-11"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>