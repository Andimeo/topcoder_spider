<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>You have been given a secret mission where you must break the enemy's code.  You have already figured out that they encode messages using the following method.  Each letter between 'a' and 'z', inclusive, is assigned a distinct two-digit number between 01 and 26, inclusive.  A message is encoded by simply replacing each letter with its assigned number.  For example, if 't' is assigned 20, 'e' is assigned 05 and 's' is assigned 19, then the message "test" is encoded as "20051920".  All original messages contain only lowercase letters.</p><br><p>You are given a String <b>code</b> containing the assignment of numbers to letters.  The first letter of code is assigned 01, the second is assigned 02 and so on.  You are also given a String <b>message</b> which is either an original unencoded message or an encoded message.  If you are given an unencoded message, return the encoded version of that message, and if you are given an encoded message, return the original unencoded message.</p></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">BreakingTheCode</td></tr><tr><td class="statText">Method:</td><td class="statText">decodingEncoding</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String, String</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String decodingEncoding(String code, String message)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>code</b> will contain exactly 26 characters.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each lowercase letter between 'a' and 'z', inclusive, will occur exactly once in <b>code</b>.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>message</b> will contain between 1 and 50 characters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>message</b> will either contain only lowercase letters ('a'-'z') or only digits ('0'-'9').</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">If <b>message</b> contains only digits, it will be a concatenation of two-digit numbers, each between 01 and 26, inclusive.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"abcdefghijklmnopqrstuvwxyz"</pre></td></tr><tr><td class="statText"><pre>"test"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "20051920"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Example from the problem statement. Here, the letters are coded in an alphabetical order.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"abcdefghijklmnopqrstuvwxyz"</pre></td></tr><tr><td class="statText"><pre>"20051920"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "test"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Now, we're decoding it.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"qesdfvujrockgpthzymbnxawli"</pre></td></tr><tr><td class="statText"><pre>"mwiizkelza"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "19242626171202251723"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"faxmswrpnqdbygcthuvkojizle"</pre></td></tr><tr><td class="statText"><pre>"02170308060416192402"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "ahxpwmtvza"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>