<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText">Tic-Tac-Toe is a game played on a 3x3 board.  The players alternate claiming spots on the board until one player has 3 spots in a row (horizontally, vertically, or diagonally), or there are no spots left to claim.  The first player to move will always use 'O's to claim his spots whereas the second player will use 'X's.  Claiming 3 spots in a row means you win and play stops.  If no spots are left and nobody has won, the game is a draw.<br><br>
By examing a Tic-Tac-Toe board it is often possible to determine whether a particular player <b>should</b> win.  More precisely, a player <b>should</b> win if there exists a sequence of moves such that, regardless of his opponent's moves, he will always win.  Another way of saying this is, a player <b>should</b> win a given position if playing the right moves will always produce a win regardless of the opposition's efforts to thwart his victory.<br><br>
You will be a given a String[] <b>board</b> describing the current state of the game.  <b>board</b> will contain 3 elements representing the rows of the board.  Each element will contain 3 characters representing the spots in that row.  For example:<pre>
<b>board</b> = {"XO."
         "..."
         ".OX"}
</pre>
As seen above, the 'X's and 'O's represent each player's respective moves and the '.'s represent unclaimed spots.  Your method will return a String according to the following rules:<br>
1) If the board position is invalid (could not be achieved through a succession of valid moves) return "INVALID" <br>
2) If the first player (player using 'O's) <b>should</b> win or has already won return "FIRST" <br>
3) If the second player (player using 'X's) <b>should</b> win or has already won return "SECOND" <br>
4) Otherwise return "DRAW" <br>
In the example above the board position is valid and the first player <b>should</b> win so you would return "FIRST".  Note, rule 1 has precedence over the other rules.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">TicSolver</td></tr><tr><td class="statText">Method:</td><td class="statText">whoWins</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[]</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String whoWins(String[] board)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>board</b> will contain exactly 3 elements</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>board</b> will contain exactly 3 characters</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each character in <b>board</b> will be one of 'X', 'O', or '.' (quotes for clarity)</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"OX.",
 "...",
 "..."}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "FIRST"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">If the first player plays the center spot, the second player is forced to block him in the lower right spot:<pre>
OX.
.O.
..X</pre>
The first player can then play the lower left spot thus giving him two ways to get three in a row.  Since this line of play is unstoppable by the second player, the first player should win.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"O..",
 ".X.",
 "..."}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "DRAW"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Nobody has a line of play that will assure victory.  </td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"OXO",
 "OOX",
 "X.X"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "DRAW"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The first player has only one choice leading to a draw.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"OOO",
 "XX.",
 "..."}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "FIRST"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"...",
 "...",
 "..."}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "DRAW"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">5)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"O..",
 "XX.",
 "..."}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "INVALID"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The second player has gone twice, but the first player has only gone once.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">6)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"XXX",
 "OO.",
 "OO."}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "INVALID"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Looking at the number of spots occupied it is clear that the first player has just moved.  It is impossible then, that the second player has already won.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">7)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"OXO",
 "X.X",
 "OXO"}</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "FIRST"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>