<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>
A common task in text editing is inserting one sequence of characters before
another one.  For example, in the String "10 10 bills", we might want to insert a dollar sign ('$') before the second occurrence of the number "10".  Thus, the original string would become "10 $10 bills".  You are to write a
method which takes an original String and a series of insert instructions and
performs the instructions, in the order they are given.  You should return the modified String.
</p><p>
Instructions will be of the form <tt>"#&lt;insert&gt;# #&lt;before&gt;# &lt;index&gt;"</tt>, where
&lt;insert&gt; is the sequence of characters to be inserted, &lt;before&gt; is the sequence
of characters before which to insert &lt;insert&gt;, and &lt;index&gt; is the index of the
occurrence of &lt;before&gt; (starting from 1), before which to insert &lt;insert&gt;.  In order
to facilitate spaces in &lt;insert&gt; and &lt;before&gt;, both sequences will be
surrounded by '#'.  Thus the command "#insert this# #before this# 3" would
insert "insert this" before the third occurrence of "before this".
</p><p>
If, for some command, there are less than &lt;index&gt; occurrences of &lt;before&gt;, then do nothing.  For example, in the String "$100
$100", there is no third occurrence of "$", so a command that inserts before
the third occurrence of "$" should be ignored.
</p></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">Inserter</td></tr><tr><td class="statText">Method:</td><td class="statText">insert</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String[], String</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String insert(String[] commands, String original)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">All of the instructions are performed on the String as it changes.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Searching for occurrences of &lt;before&gt; should be case sensitive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Note that the i<sup>th</sup> occurrence of &lt;before&gt; may overlap with the (i+1)<sup>st</sup> occurrence of &lt;before&gt;.  See example 5.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>original</b> and each element of <b>commands</b> will have between 1 and 50 characters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>commands</b> will contain between 0 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each character in the input will have ASCII value between 32 and 126, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each element of <b>commands</b> will be formatted as described in the problem statement as "#&lt;insert&gt;# #&lt;before&gt;# &lt;index&gt;".</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">The character '#' will not exist within either &lt;before&gt; or &lt;insert&gt;.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Both &lt;before&gt; and &lt;insert&gt; will contain at least one character.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each &lt;index&gt; in command will be between 1 and 2^31-1, inclusive, with no extra leading zeros.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">The return will have at most 999 characters.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"#&lt;B&gt;# #$# 2","#comes # #before this# 1"}</pre></td></tr><tr><td class="statText"><pre>"$100 before this $300"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "$100 comes before this &lt;B&gt;$300"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The first command tells us to insert the sequence "&lt;B&gt;" before the second
occurrence of "$".  Doing this gives us: "$100 before this &lt;B&gt;$300"<br>
The second command tells us to insert "comes " before "before this".  Doing
this gives us "$100 comes before this &lt;B&gt;$300"
</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"#,# # and# 1","#,# # and# 2","#,# # and# 3"}</pre></td></tr><tr><td class="statText"><pre>"lions and tigers and bears"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "lions, and tigers, and bears"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Each command says to insert "," before " and".  The first command says to
insert before the 1st occurrence, the 2nd command says to insert before the 2nd
occurrence, and the 3rd command says to insert before the 3rd occurrence (which
does not exist).</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"#import java.util.*; # #public class # 1"}</pre></td></tr><tr><td class="statText"><pre>"public class Inserter"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "import java.util.*; public class Inserter"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"# # # # 1","# # # # 2","# # # # 3","# # # # 4","# # # # 5","# # # # 6"}</pre></td></tr><tr><td class="statText"><pre>"add lots of spaces"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "add       lots of spaces"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"# # # # 6","# # # # 5","# # # # 4","# # # # 3","# # # # 2","# # # # 1"}</pre></td></tr><tr><td class="statText"><pre>"order matters quite a bit"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "order  matters  quite  a  bit"</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">5)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>{"#A# #..# 2","#A# #..# 5","#A# #..# 123456789"}</pre></td></tr><tr><td class="statText"><pre>"...."</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: ".A..."</pre></td></tr><tr><td class="statText"></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>