<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>In a typical filesystem, there are files, representing complete units of data.  These files are contained in directories, and these directories, in turn, may be contained in other directories, and so on. A <i>path</i> is a pointer to a specific file or directory in this stucture. Most Unix-like OSes have a single <i>root</i> directory, that has all other directories and files directly or indirectly (via other directories) inside it. Such OSes use the following structure for file paths:</p>
<p>/&lt;directory-name&gt;/&lt;directory-name&gt;/.../&lt;directory-name&gt;/&lt;file-name&gt;</p>
<p>and, correspondingly, the following structure for directory paths:</p>
<p>/&lt;directory-name&gt;/&lt;directory-name&gt;/.../&lt;directory-name&gt;</p>
<p>For example, "/etc/passwd" (all quotes here and below are for clarity only) points to a file named "passwd" inside a directory named "etc" inside the root directory. Other valid file names might be "/home/user/pictures/me" or just "/file". In this problem, we allow only nonempty sequences of lowercase letters ('a'-'z') as file and directory names.</p>
<p>A special case is the root directory itself, which is referred to as just "/".</p>
<p>When a user works with such an OS, one of the directories is chosen as 'current'. Such a designation allows her to refer to the files in that directory without specifying the full path to the current directory. For example, if the current directory is "/home/user/pictures", then one might refer to the file "/home/user/pictures/me" as just "me" (note that such a short form can be easily spotted by the absence of the starting '/' character). Moreover, the files in subdirectories of the current directory can also be referred to in a short manner: "/home/user/pictures/others/she" can be referred to as "others/she".</p>
<p>And even more exciting is the ability to have short references for files outside the current folder. More specifically, ".." means "the directory one level above the current directory", "../.." means "the directory two levels above the current directory", and so on. For example, if the current directory is "/home/user/pictures", and you want to refer to "/home/top/data/file", you can express that as "../../top/data/file".</p>
<p>Given a String <b>path</b>, indicating the complete path to the file that needs to be referred to, and a String <b>currentDir</b>, indicating the current directory, return a String that contains the relative path to that file according to the above rules. You should choose the shortest of all possible relative paths (for example, if the current directory is "/home/user/pictures", you should use "../movies/title" and not "../../user/movies/title" as a pointer to "/home/user/movies/title").</p>
<p>Some files and/or directories may have coinciding names, but it is impossible to have two files or two directories or a file and a directory with the same name inside the same directory, so file and directory paths are not ambiguous. It is guaranteed that the given data describes a valid file and directory according to the above rules. In particular, they will not contradict - for example, <b>path</b>="/home/user/some" and <b>currentDir</b>="/home/user/some/other" are a contradiction, since it implies that a file and a directory both named "some" exist inside the directory "/home/user".</p></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">RelativePath</td></tr><tr><td class="statText">Method:</td><td class="statText">makeRelative</td></tr><tr><td class="statText">Parameters:</td><td class="statText">String, String</td></tr><tr><td class="statText">Returns:</td><td class="statText">String</td></tr><tr><td class="statText">Method signature:</td><td class="statText">String makeRelative(String path, String currentDir)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">A file name never ends with the '/' character.  A directory name never ends with the '/' character, with the exception of the root directory, which is specified as just "/".</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>path</b> and <b>currentDir</b> will each contain between 1 and 50 characters, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Each character of <b>path</b> and <b>currentDir</b> will be '/', or a lowercase letter ('a'-'z').</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>path</b> will contain a valid file path according to the above rules.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>currentDir</b> will contain a valid directory path according to the above rules.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>path</b> and <b>currentDir</b> will not contradict (see the last paragraph of the statement).</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"/home/top/data/file"</pre></td></tr><tr><td class="statText"><pre>"/home/user/pictures"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "../../top/data/file"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">The example from the problem statement.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"/home/user/movies/title"</pre></td></tr><tr><td class="statText"><pre>"/home/user/pictures"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "../movies/title"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">And another one from the statement.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"/file"</pre></td></tr><tr><td class="statText"><pre>"/"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "file"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Remember about the root directory.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"/a/b/a/b/a/b"</pre></td></tr><tr><td class="statText"><pre>"/a/b/a/a/b/a/b"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "../../../../b/a/b"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Some file and directory names may be the same.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>"/root/root/root"</pre></td></tr><tr><td class="statText"><pre>"/root"</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: "root/root"</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">Some files and/or directories can be named "root" - but that doesn't make them root directories.</td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>