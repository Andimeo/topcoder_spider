<td class="problemText" valign="middle" align="left">
                      
              		<table><tr><td colspan="2" class="statText"><h3>Problem Statement</h3></td></tr><tr><td class="statText">    </td><td class="statText"><p>A number <b>n</b> taken to the <i>falling factorial power</i> <b>k</b> is defined as <b>n</b>*(<b>n</b>-1)*...*(<b>n</b>-<b>k</b>+1). We will denote it by <b>n</b>^^<b>k</b>. For example, 7^^3=7*6*5=210. By definition, <b>n</b>^^1=<b>n</b>.</p>
<p>We will now continue this definition to the non-positive values of <b>k</b> using the following fact: (<b>n</b>-<b>k</b>)*(<b>n</b>^^<b>k</b>)=<b>n</b>^^(<b>k</b>+1), or, in other words, <b>n</b>^^<b>k</b>=(<b>n</b>^^(<b>k</b>+1))/(<b>n</b>-<b>k</b>). It is directly derived from the above definition.</p>
<p>By using it, we find:
</p><ul><li><b>n</b>^^0=<b>n</b>^^1/(<b>n</b>-0)=1,</li> <li><b>n</b>^^(-1)=<b>n</b>^^0/(<b>n</b>+1)=1/(<b>n</b>+1),</li>
<li><b>n</b>^^(-2)=1/(<b>n</b>+1)/(<b>n</b>+2),</li>
<li>and, in general, <b>n</b>^^(-<b>k</b>)=1/(<b>n</b>+1)/(<b>n</b>+2)/.../(<b>n</b>+<b>k</b>).</li></ul>For example, 3^^(-1)=1/4=0.25, 2^^(-3)=1/3/4/5=1/60=0.016666... 
<p>Given a positive int <b>n</b> and an int <b>k</b>, return a double containing the value of <b>n</b> taken to the falling factorial power of <b>k</b>.</p></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Definition</h3></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText">Class:</td><td class="statText">FallingFactorialPower</td></tr><tr><td class="statText">Method:</td><td class="statText">compute</td></tr><tr><td class="statText">Parameters:</td><td class="statText">int, int</td></tr><tr><td class="statText">Returns:</td><td class="statText">double</td></tr><tr><td class="statText">Method signature:</td><td class="statText">double compute(int n, int k)</td></tr><tr><td colspan="2" class="statText">(be sure your method is public)</td></tr></table></td></tr><tr><td class="statText">    </td></tr><tr><td class="statText"></td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Notes</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText">Your return must have relative or absolute error less than 1E-9.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>n</b> will be between 1 and 10, inclusive.</td></tr><tr><td align="center" valign="top" class="statText">-</td><td class="statText"><b>k</b> will be between -5 and 5, inclusive.</td></tr><tr><td colspan="2" class="statText"> </td></tr><tr><td colspan="2" class="statText"><h3>Examples</h3></td></tr><tr><td align="center" nowrap class="statText">0)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>7</pre></td></tr><tr><td class="statText"><pre>3</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 210.0</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText">7^^3=7*6*5=210.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">1)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>10</pre></td></tr><tr><td class="statText"><pre>1</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 10.0</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">2)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>5</pre></td></tr><tr><td class="statText"><pre>0</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 1.0</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">3)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>3</pre></td></tr><tr><td class="statText"><pre>-1</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 0.25</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap class="statText">4)</td><td class="statText"></td></tr><tr><td class="statText">    </td><td class="statText"><table><tr><td class="statText"><table><tr><td class="statText"><pre>2</pre></td></tr><tr><td class="statText"><pre>-3</pre></td></tr></table></td></tr><tr><td class="statText"><pre>Returns: 0.016666666666666666</pre></td></tr><tr><td class="statText"><table><tr><td colspan="2" class="statText"></td></tr></table></td></tr></table></td></tr></table><hr><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2010, TopCoder, Inc.  All rights reserved.  </p>
                      
                   </td>